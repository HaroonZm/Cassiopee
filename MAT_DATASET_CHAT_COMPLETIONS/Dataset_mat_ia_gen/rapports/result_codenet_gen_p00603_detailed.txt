================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:25:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def riffle_shuffle(deck, c):
    """
    Effectue une opération de riffle shuffle sur un deck donné avec un paramètre c.
    deck : liste représentant le deck (de bas en haut, index 0 = bas)
    c : nombre de cartes à tirer par groupe depuis le bas de chaque moitié
    Retourne le nouveau deck après la shuffle.
    """
    n = len(deck)
    # Calcul de la taille des deux demi-paquets A et B
    half = (n + 1) // 2  # deck A a un de plus si n est impair

    deck_A = deck[-half:]  # Top half (deck A)
    deck_B = deck[:-half]  # Bottom half (deck B)

    # On tire les cartes depuis le bas des paquets A et B
    # ici, le bas est l'index 0 (car deck est bottom-to-top)
    deck_A = deck_A[::-1]  # inverser pour avoir bottom à l'index 0
    deck_B = deck_B[::-1]

    deck_C = []

    # Répéter jusqu'à ce que A et B soient vides
    while deck_A or deck_B:
        # Prendre c cartes du bas de A
        take_A = min(c, len(deck_A))
        for _ in range(take_A):
            deck_C.append(deck_A.pop(0))
        # Prendre c cartes du bas de B
        take_B = min(c, len(deck_B))
        for _ in range(take_B):
            deck_C.append(deck_B.pop(0))

    # deck_C contient les cartes dans l'ordre du bas vers le haut
    # On doit remettre deck_C en bottom-to-top:
    deck_C = deck_C[::-1]

    return deck_C

def main():
    input_lines = sys.stdin.read().strip().split('\n')
    idx = 0
    while idx < len(input_lines):
        # Lire n et r
        if not input_lines[idx].strip():
            idx += 1
            continue
        n_r = input_lines[idx].strip().split()
        if len(n_r) < 2:
            # Peu probable, mais passer à la ligne suivante
            idx += 1
            continue
        n, r = map(int, n_r)
        idx += 1
        c_values = []
        while len(c_values) < r:
            # Lire les valeurs de c, potentiellement plusieurs sur la même ligne
            c_values += list(map(int, input_lines[idx].strip().split()))
            idx += 1
        # Initialiser le deck: cartes numérotées de 0 (bas) à n-1 (top)
        deck = list(range(n))
        # Pour chaque c, effectuer une opération de riffle shuffle
        for c in c_values:
            deck = riffle_shuffle(deck, c)
        # Afficher la carte au sommet du deck (= dernière carte de la liste)
        print(deck[-1])

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' riff' (ID: 146141)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05628056451678276
    2. ' main' → logprob: -3.8062806129455566
    3. ' process' → logprob: -4.806280612945557
    4. ' sys' → logprob: -5.556280612945557
    5. ' space' → logprob: -5.806280612945557
    6. ' ' → logprob: -6.056280612945557
    7. ' function' → logprob: -6.431280612945557
    8. ' a' → logprob: -6.681280612945557
    9. '  ' → logprob: -6.931280612945557
    10. ' func' → logprob: -7.056280612945557

Token 5: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.07043974101543427
    2. '_le' → logprob: -2.9454398155212402
    3. '_' → logprob: -4.69543981552124
    4. ' _' → logprob: -5.57043981552124
    5. '_l' → logprob: -7.44543981552124
    6. 'l' → logprob: -7.94543981552124
    7. '_def' → logprob: -7.94543981552124
    8. '```' → logprob: -9.070439338684082
    9. ' __' → logprob: -9.445439338684082
    10. '__' → logprob: -9.570439338684082

Token 6: '_shuffle' (ID: 197572)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15444596111774445
    2. '_shuffle' → logprob: -2.1544458866119385
    3. '(' → logprob: -5.529446125030518
    4. ' ' → logprob: -5.779446125030518
    5. '_split' → logprob: -6.029446125030518
    6. '_r' → logprob: -6.404446125030518
    7. '(_' → logprob: -6.404446125030518
    8. '_merge' → logprob: -6.654446125030518
    9. '_flip' → logprob: -6.779446125030518
    10. '_cut' → logprob: -6.904446125030518

Token 7: '(deck' (ID: 195320)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00039015832589939237
    2. '_' → logprob: -8.75039005279541
    3. ' (' → logprob: -9.25039005279541
    4. '():' → logprob: -10.62539005279541
    5. '(n' → logprob: -11.00039005279541
    6. '(s' → logprob: -11.12539005279541
    7. '(_' → logprob: -11.62539005279541
    8. '(
' → logprob: -12.25039005279541
    9. '(x' → logprob: -12.25039005279541
    10. '(a' → logprob: -12.25039005279541

Token 8: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006971848197281361
    2. ',' → logprob: -7.875697135925293
    3. ')' → logprob: -8.375697135925293
    4. ':' → logprob: -10.250697135925293
    5. ' ):' → logprob: -10.625697135925293
    6. '):
' → logprob: -11.125697135925293
    7. '[' → logprob: -12.875697135925293
    8. '   ' → logprob: -13.375697135925293
    9. ' ' → logprob: -13.500697135925293
    10. '[]):' → logprob: -13.500697135925293

Token 9: ' c' (ID: 274)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9822354316711426
    2. ' num' → logprob: -1.6072354316711426
    3. ' times' → logprob: -1.7322354316711426
    4. 'num' → logprob: -2.9822354316711426
    5. ' shuffle' → logprob: -2.9822354316711426
    6. 'n' → logprob: -3.6072354316711426
    7. ' depth' → logprob: -3.7322354316711426
    8. ' deck' → logprob: -4.357235431671143
    9. ' count' → logprob: -4.357235431671143
    10. ' iterations' → logprob: -4.732235431671143

Token 10: '):
' (ID: 1883)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.06725650280714035
    2. '):' → logprob: -2.817256450653076
    3. 'ounter' → logprob: -6.317256450653076
    4. '=' → logprob: -6.692256450653076
    5. 'ut' → logprob: -7.317256450653076
    6. ' ):' → logprob: -7.317256450653076
    7. ')' → logprob: -8.317256927490234
    8. 'nt' → logprob: -8.442256927490234
    9. 'o' → logprob: -8.442256927490234
    10. 'urrent' → logprob: -10.692256927490234

Token 11: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36068791151046753
    2. '   ' → logprob: -1.3606879711151123
    3. '):' → logprob: -4.610687732696533
    4. ' ' → logprob: -5.485687732696533
    5. '    
' → logprob: -5.485687732696533
    6. ' :' → logprob: -5.610687732696533
    7. ' return' → logprob: -5.860687732696533
    8. '```' → logprob: -5.860687732696533
    9. '"' → logprob: -5.985687732696533
    10. ' 
' → logprob: -6.360687732696533

Token 12: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3018237352371216
    2. '    ' → logprob: -2.051823616027832
    3. ' ' → logprob: -2.676823616027832
    4. ' if' → logprob: -4.426823616027832
    5. ''' → logprob: -4.676823616027832
    6. '"' → logprob: -4.926823616027832
    7. '    
' → logprob: -5.051823616027832
    8. '\' → logprob: -5.176823616027832
    9. ' 
' → logprob: -5.551823616027832
    10. ' return' → logprob: -5.801823616027832

Token 13: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.6220495700836182
    2. ' """' → logprob: -1.4970495700836182
    3. '   ' → logprob: -2.122049570083618
    4. 'Per' → logprob: -3.497049570083618
    5. '#' → logprob: -3.622049570083618
    6. '"' → logprob: -3.872049570083618
    7. 'Spl' → logprob: -4.497049331665039
    8. 'Split' → logprob: -4.872049331665039
    9. '""' → logprob: -5.747049331665039
    10. ' """
' → logprob: -6.122049331665039

Token 14: ' Effect' (ID: 22448)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.4238522946834564
    2. ' """' → logprob: -1.5488523244857788
    3. 'Spl' → logprob: -3.0488522052764893
    4. ' Split' → logprob: -3.7988522052764893
    5. ' Spl' → logprob: -3.9238522052764893
    6. 'Perform' → logprob: -4.673852443695068
    7. 'Split' → logprob: -4.798852443695068
    8. '   ' → logprob: -5.048852443695068
    9. ' Perform' → logprob: -5.923852443695068
    10. '""' → logprob: -6.423852443695068

Token 15: 'ue' (ID: 466)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6021831035614014
    2. 's' → logprob: -0.8521831035614014
    3. '):' → logprob: -5.2271833419799805
    4. ' :' → logprob: -5.4771833419799805
    5. ' of' → logprob: -5.9771833419799805
    6. '```' → logprob: -6.1021833419799805
    7. '   ' → logprob: -6.6021833419799805
    8. ')' → logprob: -6.7271833419799805
    9. '=' → logprob: -6.7271833419799805
    10. ',' → logprob: -6.8521833419799805

Token 16: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014329795725643635
    2. ' un' → logprob: -4.38932991027832
    3. '  ' → logprob: -7.13932991027832
    4. 's' → logprob: -7.38932991027832
    5. ' une' → logprob: -8.76432991027832
    6. ' a' → logprob: -9.13932991027832
    7. '_' → logprob: -10.01432991027832
    8. ' ' → logprob: -10.88932991027832
    9. ' s' → logprob: -11.38932991027832
    10. '<|end|>' → logprob: -11.51432991027832

Token 17: ' opération' (ID: 86023)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15795089304447174
    2. ' mélange' → logprob: -3.1579508781433105
    3. ' coupe' → logprob: -3.2829508781433105
    4. '   ' → logprob: -4.5329508781433105
    5. '  ' → logprob: -4.6579508781433105
    6. ' décou' → logprob: -5.0329508781433105
    7. ' coup' → logprob: -5.1579508781433105
    8. ' séparation' → logprob: -5.2829508781433105
    9. ' fusion' → logprob: -5.5329508781433105
    10. ' permutation' → logprob: -6.0329508781433105

Token 18: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.004086708649992943
    2. ' d' → logprob: -6.254086494445801
    3. 'de' → logprob: -6.254086494445801
    4. 'd' → logprob: -8.8790864944458
    5. 'riff' → logprob: -10.5040864944458
    6. ' riff' → logprob: -10.6290864944458
    7. ' ' → logprob: -11.5040864944458
    8. '_de' → logprob: -11.6290864944458
    9. 's' → logprob: -12.1290864944458
    10. 'r' → logprob: -12.3790864944458

Token 19: ' riff' (ID: 146141)
  Prédit: ' mélange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mélange' → logprob: -0.5767270922660828
    2. 'br' → logprob: -2.9517271518707275
    3. '```' → logprob: -3.0767271518707275
    4. 'm' → logprob: -3.0767271518707275
    5. 'riff' → logprob: -3.2017271518707275
    6. ' shuffle' → logprob: -3.5767271518707275
    7. ' brass' → logprob: -3.6392271518707275
    8. 'f' → logprob: -4.139226913452148
    9. 'shuffle' → logprob: -4.139226913452148
    10. ' coupe' → logprob: -4.201726913452148

Token 20: 'le' (ID: 282)
  Prédit: 'fle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fle' → logprob: -0.024123061448335648
    2. 'f' → logprob: -4.024123191833496
    3. 'le' → logprob: -5.649123191833496
    4. 'fl' → logprob: -6.649123191833496
    5. ' fle' → logprob: -7.024123191833496
    6. '   ' → logprob: -8.649123191833496
    7. 'l' → logprob: -10.399123191833496
    8. 'fe' → logprob: -11.524123191833496
    9. '  ' → logprob: -12.024123191833496
    10. '       ' → logprob: -12.774123191833496

Token 21: ' shuffle' (ID: 53490)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04563836380839348
    2. '_shuffle' → logprob: -3.2956383228302
    3. ' ' → logprob: -5.295638561248779
    4. ' shuffle' → logprob: -6.545638561248779
    5. ' _' → logprob: -7.420638561248779
    6. '_s' → logprob: -8.670638084411621
    7. '_sh' → logprob: -8.920638084411621
    8. 's' → logprob: -9.920638084411621
    9. 'shuffle' → logprob: -10.420638084411621
    10. '```' → logprob: -10.795638084411621

Token 22: ' sur' (ID: 1512)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4338160455226898
    2. ' (' → logprob: -2.3088159561157227
    3. ' de' → logprob: -3.0588159561157227
    4. ' sur' → logprob: -3.0588159561157227
    5. '.' → logprob: -3.1838159561157227
    6. ',' → logprob: -3.5588159561157227
    7. 's' → logprob: -3.6838159561157227
    8. '  ' → logprob: -4.433815956115723
    9. ' ,' → logprob: -4.558815956115723
    10. '   ' → logprob: -4.683815956115723

Token 23: ' un' (ID: 537)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.2566379904747009
    2. ' la' → logprob: -2.0066380500793457
    3. ' deck' → logprob: -2.8816380500793457
    4. ' ' → logprob: -3.8816380500793457
    5. 'deck' → logprob: -5.131638050079346
    6. 'le' → logprob: -5.631638050079346
    7. ' un' → logprob: -6.381638050079346
    8. ' les' → logprob: -7.006638050079346
    9. '(deck' → logprob: -7.506638050079346
    10. 'the' → logprob: -7.881638050079346

Token 24: ' deck' (ID: 16942)
  Prédit: ' deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deck' → logprob: -0.09740055352449417
    2. 'deck' → logprob: -2.472400665283203
    3. ' jeu' → logprob: -5.722400665283203
    4. ' paquet' → logprob: -6.597400665283203
    5. ' ' → logprob: -7.097400665283203
    6. '(deck' → logprob: -7.472400665283203
    7. ' ' → logprob: -8.222400665283203
    8. 'de' → logprob: -8.222400665283203
    9. ' decks' → logprob: -8.472400665283203
    10. 'e' → logprob: -8.597400665283203

Token 25: ' donné' (ID: 52079)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3647948503494263
    2. ',' → logprob: -1.4897948503494263
    3. '.' → logprob: -1.6147948503494263
    4. ' ,' → logprob: -1.9897948503494263
    5. '   ' → logprob: -2.9897947311401367
    6. ' )' → logprob: -3.7397947311401367
    7. ' (' → logprob: -4.364794731140137
    8. ' .' → logprob: -4.864794731140137
    9. 'de' → logprob: -4.864794731140137
    10. ' ' → logprob: -4.864794731140137

Token 26: ' avec' (ID: 3937)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.24787764251232147
    2. ',' → logprob: -1.622877597808838
    3. ')' → logprob: -4.747877597808838
    4. ' ,' → logprob: -4.997877597808838
    5. '   ' → logprob: -6.622877597808838
    6. ' .' → logprob: -6.747877597808838
    7. ' )' → logprob: -6.997877597808838
    8. ' de' → logprob: -7.247877597808838
    9. ' (' → logprob: -7.622877597808838
    10. ' :' → logprob: -7.997877597808838

Token 27: ' un' (ID: 537)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3771744966506958
    2. ' le' → logprob: -2.0021743774414062
    3. ' un' → logprob: -2.2521743774414062
    4. ' la' → logprob: -3.6271743774414062
    5. 'c' → logprob: -4.127174377441406
    6. ' une' → logprob: -4.252174377441406
    7. ' ' → logprob: -5.377174377441406
    8. ' l' → logprob: -6.002174377441406
    9. 'le' → logprob: -6.377174377441406
    10. ' n' → logprob: -6.627174377441406

Token 28: ' param' (ID: 3802)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.35773977637290955
    2. ' deck' → logprob: -2.6077396869659424
    3. ' c' → logprob: -3.4827396869659424
    4. ' compteur' → logprob: -3.6077396869659424
    5. ' entier' → logprob: -3.7327396869659424
    6. ' coefficient' → logprob: -3.8577396869659424
    7. ' facteur' → logprob: -3.9827396869659424
    8. 'nombre' → logprob: -4.2327399253845215
    9. ' split' → logprob: -4.2327399253845215
    10. ' certain' → logprob: -4.6077399253845215

Token 29: 'ètre' (ID: 60948)
  Prédit: 'ètre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètre' → logprob: -0.020674429833889008
    2. 'è' → logprob: -3.895674467086792
    3. 'ètres' → logprob: -10.020674705505371
    4. 'èt' → logprob: -10.270674705505371
    5. 'être' → logprob: -11.145674705505371
    6. '`' → logprob: -11.395674705505371
    7. ' ' → logprob: -11.645674705505371
    8. '#' → logprob: -12.270674705505371
    9. 'é' → logprob: -12.645674705505371
    10. 'ét' → logprob: -12.770674705505371

Token 30: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5427338480949402
    2. 'c' → logprob: -1.917733907699585
    3. ' de' → logprob: -1.917733907699585
    4. ' d' → logprob: -2.917733907699585
    5. 'd' → logprob: -3.667733907699585
    6. 'de' → logprob: -4.042733669281006
    7. ' ' → logprob: -4.417733669281006
    8. ' `' → logprob: -5.042733669281006
    9. '`' → logprob: -5.667733669281006
    10. ' ' → logprob: -7.042733669281006

Token 31: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5526246428489685
    2. ',' → logprob: -1.4276247024536133
    3. ')' → logprob: -2.3026247024536133
    4. ' )' → logprob: -4.177624702453613
    5. ' ,' → logprob: -4.177624702453613
    6. ' (' → logprob: -4.552624702453613
    7. ').' → logprob: -4.677624702453613
    8. '):' → logprob: -5.052624702453613
    9. ' .' → logprob: -5.427624702453613
    10. ' ).' → logprob: -5.802624702453613

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.873613178730011
    2. ')' → logprob: -1.4986131191253662
    3. '"""' → logprob: -2.123613119125366
    4. ' 
' → logprob: -2.748613119125366
    5. '\n' → logprob: -3.123613119125366
    6. '"' → logprob: -3.498613119125366
    7. '"""
' → logprob: -4.248613357543945
    8. ' )' → logprob: -4.498613357543945
    9. ' """
' → logprob: -4.623613357543945
    10. ')
' → logprob: -4.873613357543945

Token 33: ' deck' (ID: 16942)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.916659951210022
    2. '   ' → logprob: -1.166659951210022
    3. '"""
' → logprob: -2.2916598320007324
    4. ' 
' → logprob: -3.0416598320007324
    5. '\n' → logprob: -3.4166598320007324
    6. '    
' → logprob: -3.5416598320007324
    7. '""' → logprob: -4.041659832000732
    8. ' """
' → logprob: -4.041659832000732
    9. ' """' → logprob: -4.666659832000732
    10. '
' → logprob: -5.291659832000732

Token 34: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8705426454544067
    2. ' =' → logprob: -1.1205426454544067
    3. '):' → logprob: -2.620542526245117
    4. ':' → logprob: -2.870542526245117
    5. '[' → logprob: -3.245542526245117
    6. ',' → logprob: -3.370542526245117
    7. ' est' → logprob: -4.245542526245117
    8. '[:]' → logprob: -4.995542526245117
    9. '   ' → logprob: -5.120542526245117
    10. '[:' → logprob: -5.495542526245117

Token 35: ' liste' (ID: 31719)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.31915411353111267
    2. 'list' → logprob: -1.319154143333435
    3. ' liste' → logprob: -5.694154262542725
    4. ' List' → logprob: -6.819154262542725
    5. 'List' → logprob: -7.069154262542725
    6. 'liste' → logprob: -8.319153785705566
    7. ' une' → logprob: -9.194153785705566
    8. '   ' → logprob: -9.444153785705566
    9. ' ' → logprob: -10.694153785705566
    10. ' la' → logprob: -10.819153785705566

Token 36: ' représentant' (ID: 136122)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.5534831881523132
    2. ' la' → logprob: -1.178483247756958
    3. 'le' → logprob: -3.053483247756958
    4. ' un' → logprob: -3.178483247756958
    5. ' les' → logprob: -4.928483009338379
    6. ' ' → logprob: -4.928483009338379
    7. ' l' → logprob: -5.178483009338379
    8. ' une' → logprob: -6.303483009338379
    9. 'the' → logprob: -6.928483009338379
    10. 'les' → logprob: -6.928483009338379

Token 38: ' deck' (ID: 16942)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6195953488349915
    2. ' deck' → logprob: -0.8695953488349915
    3. ' paquet' → logprob: -3.3695952892303467
    4. 'deck' → logprob: -5.369595527648926
    5. ' jeu' → logprob: -5.869595527648926
    6. ' ' → logprob: -8.744595527648926
    7. '  ' → logprob: -8.994595527648926
    8. 's' → logprob: -9.494595527648926
    9. ' pa' → logprob: -9.807095527648926
    10. ' d' → logprob: -9.994595527648926

Token 39: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9084604382514954
    2. ')' → logprob: -1.9084603786468506
    3. ',' → logprob: -1.9084603786468506
    4. ' de' → logprob: -2.2834603786468506
    5. ' (' → logprob: -3.1584603786468506
    6. '[' → logprob: -3.4084603786468506
    7. '```' → logprob: -3.4084603786468506
    8. ' ,' → logprob: -3.7834603786468506
    9. 'de' → logprob: -4.53346061706543
    10. ' des' → logprob: -4.90846061706543

Token 40: 'de' (ID: 613)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.17094652354717255
    2. ' de' → logprob: -2.2959465980529785
    3. ')' → logprob: -3.7959465980529785
    4. ' la' → logprob: -4.2959465980529785
    5. 'des' → logprob: -5.0459465980529785
    6. ' une' → logprob: -5.7959465980529785
    7. ' les' → logprob: -5.9209465980529785
    8. ' )' → logprob: -6.5459465980529785
    9. ' cartes' → logprob: -6.5459465980529785
    10. ' of' → logprob: -6.6709465980529785

Token 41: ' bas' (ID: 3222)
  Prédit: ' cartes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cartes' → logprob: -0.1359206587076187
    2. '```' → logprob: -3.385920763015747
    3. 'ck' → logprob: -3.760920763015747
    4. ' carte' → logprob: -4.385920524597168
    5. 'cart' → logprob: -4.510920524597168
    6. ' cartas' → logprob: -4.635920524597168
    7. ' type' → logprob: -4.760920524597168
    8. 'ux' → logprob: -5.385920524597168
    9. ' longueur' → logprob: -5.760920524597168
    10. ' cards' → logprob: -5.760920524597168

Token 42: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49099937081336975
    2. ' de' → logprob: -1.3659993410110474
    3. 'de' → logprob: -2.115999460220337
    4. '-' → logprob: -6.115999221801758
    5. '_de' → logprob: -6.490999221801758
    6. ' à' → logprob: -6.865999221801758
    7. 'deck' → logprob: -6.990999221801758
    8. '```' → logprob: -6.990999221801758
    9. ',' → logprob: -7.365999221801758
    10. 'haut' → logprob: -7.490999221801758

Token 43: ' haut' (ID: 28223)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.2953955829143524
    2. ' haut' → logprob: -1.5453956127166748
    3. ' dessus' → logprob: -4.045395374298096
    4. 'deck' → logprob: -5.170395374298096
    5. 'bas' → logprob: -5.670395374298096
    6. 'dess' → logprob: -6.045395374298096
    7. '-dessus' → logprob: -6.045395374298096
    8. ')' → logprob: -6.295395374298096
    9. ' ' → logprob: -6.545395374298096
    10. 'c' → logprob: -6.545395374298096

Token 44: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0103026507422328
    2. ' )' → logprob: -4.760302543640137
    3. ' de' → logprob: -6.635302543640137
    4. 'de' → logprob: -8.510302543640137
    5. ' des' → logprob: -9.510302543640137
    6. ')
' → logprob: -10.385302543640137
    7. ').' → logprob: -11.010302543640137
    8. '),' → logprob: -11.510302543640137
    9. ',' → logprob: -12.010302543640137
    10. ' du' → logprob: -12.510302543640137

Token 45: ' index' (ID: 3472)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.8071845769882202
    2. ')' → logprob: -1.1821845769882202
    3. ' de' → logprob: -3.0571846961975098
    4. ' la' → logprob: -3.3071846961975098
    5. ' avec' → logprob: -3.5571846961975098
    6. ' ' → logprob: -4.05718469619751
    7. ' c' → logprob: -4.30718469619751
    8. ' donc' → logprob: -4.43218469619751
    9. ' au' → logprob: -4.93218469619751
    10. ' et' → logprob: -4.93218469619751

Token 46: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3684696853160858
    2. '0' → logprob: -1.2434697151184082
    3. 's' → logprob: -4.243469715118408
    4. '1' → logprob: -5.993469715118408
    5. ' des' → logprob: -6.993469715118408
    6. ' du' → logprob: -8.11846923828125
    7. ' de' → logprob: -8.49346923828125
    8. ')' → logprob: -8.74346923828125
    9. ' +' → logprob: -8.99346923828125
    10. ' =' → logprob: -8.99346923828125

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11560561507940292
    2. ' ' → logprob: -2.240605592727661
    3. '1' → logprob: -6.74060583114624
    4. '=' → logprob: -8.865605354309082
    5. 'c' → logprob: -8.990605354309082
    6. ')' → logprob: -8.990605354309082
    7. 's' → logprob: -9.115605354309082
    8. ' du' → logprob: -9.115605354309082
    9. ' -' → logprob: -9.240605354309082
    10. ' des' → logprob: -9.365605354309082

Token 48: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19159600138664246
    2. ' )' → logprob: -2.066596031188965
    3. ' jusqu' → logprob: -4.191596031188965
    4. ' est' → logprob: -4.566596031188965
    5. ' au' → logprob: -4.816596031188965
    6. ' à' → logprob: -5.066596031188965
    7. ').' → logprob: -7.066596031188965
    8. ' et' → logprob: -7.566596031188965
    9. ' étant' → logprob: -7.566596031188965
    10. ' ' → logprob: -7.691596031188965

Token 49: ' bas' (ID: 3222)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.22899198532104492
    2. ' carte' → logprob: -2.853991985321045
    3. 'la' → logprob: -3.228991985321045
    4. ' ' → logprob: -3.478991985321045
    5. ' le' → logprob: -3.728991985321045
    6. 'le' → logprob: -4.103991985321045
    7. ' bas' → logprob: -4.728991985321045
    8. ' "' → logprob: -5.478991985321045
    9. ' deck' → logprob: -5.791491985321045
    10. 'bas' → logprob: -5.853991985321045

Token 50: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1659407615661621
    2. ' de' → logprob: -2.290940761566162
    3. ' )' → logprob: -3.290940761566162
    4. 'de' → logprob: -5.040940761566162
    5. ',' → logprob: -5.665940761566162
    6. ' du' → logprob: -5.790940761566162
    7. 'deck' → logprob: -7.915940761566162
    8. ' deck' → logprob: -8.16594123840332
    9. ' of' → logprob: -8.54094123840332
    10. ').' → logprob: -9.29094123840332

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05571179464459419
    2. ')' → logprob: -3.0557117462158203
    3. '"""' → logprob: -5.43071174621582
    4. '"""
' → logprob: -6.93071174621582
    5. ' """
' → logprob: -8.18071174621582
    6. '    ' → logprob: -8.30571174621582
    7. '```' → logprob: -8.43071174621582
    8. ' )' → logprob: -8.68071174621582
    9. ')
' → logprob: -8.68071174621582
    10. '    
' → logprob: -8.80571174621582

Token 52: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1581142544746399
    2. '"""' → logprob: -3.158114194869995
    3. ' """' → logprob: -3.408114194869995
    4. ' """
' → logprob: -3.533114194869995
    5. ')' → logprob: -3.783114194869995
    6. '"""
' → logprob: -4.783114433288574
    7. ' )' → logprob: -5.783114433288574
    8. '    ' → logprob: -6.908114433288574
    9. ' ' → logprob: -7.283114433288574
    10. ' deck' → logprob: -7.283114433288574

Token 53: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6380034685134888
    2. ' )' → logprob: -1.8880034685134888
    3. ' =' → logprob: -2.013003349304199
    4. ' :' → logprob: -2.638003349304199
    5. '):' → logprob: -2.763003349304199
    6. ' ):' → logprob: -3.638003349304199
    7. '=' → logprob: -4.013003349304199
    8. ':' → logprob: -5.263003349304199
    9. ' ' → logprob: -7.138003349304199
    10. ',' → logprob: -7.263003349304199

Token 54: ' nombre' (ID: 9733)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.44898906350135803
    2. ' nombre' → logprob: -1.6989890336990356
    3. ' entier' → logprob: -2.573989152908325
    4. 'int' → logprob: -2.948989152908325
    5. ' le' → logprob: -3.948989152908325
    6. ' ' → logprob: -4.698988914489746
    7. ' un' → logprob: -4.948988914489746
    8. 'nombre' → logprob: -5.323988914489746
    9. 'ent' → logprob: -5.573988914489746
    10. ' l' → logprob: -5.948988914489746

Token 55: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2742120027542114
    2. ' d' → logprob: -2.024211883544922
    3. 'de' → logprob: -3.274211883544922
    4. ' entier' → logprob: -3.524211883544922
    5. '   ' → logprob: -4.649211883544922
    6. '  ' → logprob: -4.649211883544922
    7. 'd' → logprob: -4.774211883544922
    8. ' ' → logprob: -4.899211883544922
    9. ' maximal' → logprob: -6.774211883544922
    10. 's' → logprob: -7.274211883544922

Token 56: ' cartes' (ID: 70753)
  Prédit: ' cartes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cartes' → logprob: -0.029222125187516212
    2. 'cart' → logprob: -4.279222011566162
    3. 'cou' → logprob: -5.404222011566162
    4. 'm' → logprob: -6.154222011566162
    5. ' cart' → logprob: -6.904222011566162
    6. ' cou' → logprob: -6.904222011566162
    7. ' ' → logprob: -7.154222011566162
    8. ' cards' → logprob: -7.154222011566162
    9. 'c' → logprob: -7.154222011566162
    10. ' cartas' → logprob: -7.404222011566162

Token 57: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.17527033388614655
    2. ')' → logprob: -2.3002703189849854
    3. ' )' → logprob: -4.0502705574035645
    4. ' ' → logprob: -4.1752705574035645
    5. ' a' → logprob: -5.1752705574035645
    6. ' =' → logprob: -5.9252705574035645
    7. 'à' → logprob: -6.0502705574035645
    8. '   ' → logprob: -6.3002705574035645
    9. ',' → logprob: -6.5502705574035645
    10. ' entre' → logprob: -6.5502705574035645

Token 58: ' tirer' (ID: 115368)
  Prédit: ' couper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' couper' → logprob: -0.8545971512794495
    2. ' inter' → logprob: -1.3545970916748047
    3. 'inter' → logprob: -2.1045970916748047
    4. 'm' → logprob: -3.1045970916748047
    5. ' mél' → logprob: -3.9795970916748047
    6. 'sé' → logprob: -4.354597091674805
    7. ' sé' → logprob: -4.479597091674805
    8. 'cou' → logprob: -4.479597091674805
    9. ' prendre' → logprob: -4.479597091674805
    10. 'cut' → logprob: -4.479597091674805

Token 59: ' par' (ID: 686)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.424924373626709
    2. ' de' → logprob: -2.049924373626709
    3. ' au' → logprob: -2.799924373626709
    4. ' à' → logprob: -2.924924373626709
    5. 'du' → logprob: -3.799924373626709
    6. ' depuis' → logprob: -3.924924373626709
    7. ')' → logprob: -4.174924373626709
    8. ' ' → logprob: -4.424924373626709
    9. ' en' → logprob: -5.049924373626709
    10. 'au' → logprob: -5.924924373626709

Token 60: ' groupe' (ID: 29494)
  Prédit: ' coup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coup' → logprob: -1.4821438789367676
    2. 'p' → logprob: -2.3571438789367676
    3. ' it' → logprob: -2.4821438789367676
    4. 'tir' → logprob: -2.9821438789367676
    5. ' fois' → logprob: -2.9821438789367676
    6. 'c' → logprob: -3.1071438789367676
    7. 'fois' → logprob: -3.2321438789367676
    8. ' ' → logprob: -3.3571438789367676
    9. ' coupe' → logprob: -3.7321438789367676
    10. ' paquet' → logprob: -3.7321438789367676

Token 61: ' depuis' (ID: 16277)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3210994303226471
    2. '):' → logprob: -2.3210995197296143
    3. ' )' → logprob: -2.5710995197296143
    4. '   ' → logprob: -3.3210995197296143
    5. ',' → logprob: -3.8210995197296143
    6. ' ):' → logprob: -4.821099281311035
    7. '):
' → logprob: -5.196099281311035
    8. ' :' → logprob: -5.321099281311035
    9. ' ,' → logprob: -5.446099281311035
    10. '.' → logprob: -5.446099281311035

Token 62: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.5563752055168152
    2. ' la' → logprob: -1.18137526512146
    3. 'le' → logprob: -2.43137526512146
    4. ' chaque' → logprob: -4.806375026702881
    5. 'la' → logprob: -4.931375026702881
    6. ' l' → logprob: -4.931375026702881
    7. 'l' → logprob: -6.431375026702881
    8. ' les' → logprob: -6.431375026702881
    9. ' ' → logprob: -6.931375026702881
    10. ' deck' → logprob: -7.181375026702881

Token 63: ' bas' (ID: 3222)
  Prédit: ' haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' haut' → logprob: -0.9456157684326172
    2. ' milieu' → logprob: -1.6956157684326172
    3. 'haut' → logprob: -2.070615768432617
    4. 'deck' → logprob: -2.820615768432617
    5. 'mil' → logprob: -2.820615768432617
    6. ' dessus' → logprob: -2.820615768432617
    7. 'bas' → logprob: -3.445615768432617
    8. ' bas' → logprob: -4.008115768432617
    9. ' sommet' → logprob: -4.195615768432617
    10. ' deck' → logprob: -4.508115768432617

Token 64: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7402178645133972
    2. '):' → logprob: -0.8652178645133972
    3. ')' → logprob: -2.990217924118042
    4. ':' → logprob: -3.865217924118042
    5. '):
' → logprob: -4.740217685699463
    6. '\n' → logprob: -5.490217685699463
    7. ' :' → logprob: -5.490217685699463
    8. ',' → logprob: -5.740217685699463
    9. '
' → logprob: -6.615217685699463
    10. '    
' → logprob: -6.615217685699463

Token 65: ' chaque' (ID: 21194)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8858067989349365
    2. ' deck' → logprob: -1.0108067989349365
    3. ' ' → logprob: -2.5108067989349365
    4. 'deck' → logprob: -2.5108067989349365
    5. 'l' → logprob: -3.7608067989349365
    6. 'la' → logprob: -4.885807037353516
    7. ' l' → logprob: -4.885807037353516
    8. ' the' → logprob: -5.135807037353516
    9. 'le' → logprob: -5.260807037353516
    10. ' le' → logprob: -6.135807037353516

Token 66: ' moitié' (ID: 93216)
  Prédit: ' paquet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paquet' → logprob: -0.7413386702537537
    2. ' moitié' → logprob: -0.9913386702537537
    3. ' main' → logprob: -2.8663387298583984
    4. ' half' → logprob: -3.2413387298583984
    5. ' pa' → logprob: -4.116338729858398
    6. ' deck' → logprob: -4.241338729858398
    7. ' partie' → logprob: -6.178838729858398
    8. ' joueur' → logprob: -6.241338729858398
    9. 'main' → logprob: -6.241338729858398
    10. ' pile' → logprob: -6.303838729858398

Token 67: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45561403036117554
    2. '):' → logprob: -1.4556140899658203
    3. ')' → logprob: -2.7056140899658203
    4. ':' → logprob: -3.4556140899658203
    5. '):
' → logprob: -4.70561408996582
    6. '\n' → logprob: -4.95561408996582
    7. '    
' → logprob: -5.58061408996582
    8. '
' → logprob: -6.20561408996582
    9. ' :' → logprob: -6.20561408996582
    10. '```' → logprob: -6.58061408996582

Token 68: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10620885342359543
    2. '   ' → logprob: -2.3562088012695312
    3. '):' → logprob: -5.981208801269531
    4. ' )' → logprob: -6.731208801269531
    5. ')
' → logprob: -6.981208801269531
    6. '"""' → logprob: -7.481208801269531
    7. '):
' → logprob: -8.606208801269531
    8. ' ' → logprob: -8.856208801269531
    9. '```' → logprob: -8.981208801269531
    10. ',' → logprob: -9.731208801269531

Token 69: ' Retour' (ID: 146830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0931265577673912
    2. '"""' → logprob: -2.5931265354156494
    3. ')' → logprob: -4.9681267738342285
    4. '```' → logprob: -6.2181267738342285
    5. '\n' → logprob: -6.7181267738342285
    6. '"' → logprob: -6.8431267738342285
    7. ' """' → logprob: -7.0931267738342285
    8. '"""
' → logprob: -7.7181267738342285
    9. '""' → logprob: -7.8431267738342285
    10. ' ' → logprob: -7.9681267738342285

Token 70: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.009951572865247726
    2. 'n' → logprob: -5.134951591491699
    3. '   ' → logprob: -6.259951591491699
    4. 'nne' → logprob: -7.509951591491699
    5. ' :' → logprob: -7.634951591491699
    6. 'e' → logprob: -8.6349515914917
    7. 'na' → logprob: -8.8849515914917
    8. ' ' → logprob: -9.0099515914917
    9. 'nera' → logprob: -9.0099515914917
    10. '  ' → logprob: -9.1349515914917

Token 71: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5394501686096191
    2. ' ' → logprob: -1.4144501686096191
    3. ' une' → logprob: -2.664450168609619
    4. ' ' → logprob: -3.164450168609619
    5. ' le' → logprob: -3.164450168609619
    6. ' un' → logprob: -4.664450168609619
    7. ' None' → logprob: -5.414450168609619
    8. ' l' → logprob: -6.789450168609619
    9. '   ' → logprob: -7.289450168609619
    10. ':' → logprob: -7.539450168609619

Token 72: ' nouveau' (ID: 23184)
  Prédit: ' deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deck' → logprob: -0.1053246334195137
    2. ' nouveau' → logprob: -2.4803247451782227
    3. 'deck' → logprob: -4.855324745178223
    4. ' nouvel' → logprob: -6.730324745178223
    5. ' nouvelle' → logprob: -6.855324745178223
    6. ' new' → logprob: -6.980324745178223
    7. ' liste' → logprob: -7.230324745178223
    8. ' list' → logprob: -7.355324745178223
    9. ' résultat' → logprob: -7.355324745178223
    10. 'nou' → logprob: -7.480324745178223

Token 73: ' deck' (ID: 16942)
  Prédit: ' deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deck' → logprob: -0.0015271214069798589
    2. ' ' → logprob: -7.376527309417725
    3. 'deck' → logprob: -7.376527309417725
    4. '_' → logprob: -8.751526832580566
    5. ' code' → logprob: -10.376526832580566
    6. ' list' → logprob: -11.876526832580566
    7. ' _' → logprob: -12.126526832580566
    8. ' de' → logprob: -12.376526832580566
    9. ' tableau' → logprob: -12.376526832580566
    10. '(deck' → logprob: -12.376526832580566

Token 74: ' après' (ID: 16460)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.9631537199020386
    2. '   ' → logprob: -1.4631537199020386
    3. '.' → logprob: -2.213153839111328
    4. ':' → logprob: -2.463153839111328
    5. ',' → logprob: -2.963153839111328
    6. '```' → logprob: -3.088153839111328
    7. ' ,' → logprob: -4.088153839111328
    8. '\n' → logprob: -4.338153839111328
    9. '
' → logprob: -5.088153839111328
    10. ' en' → logprob: -5.338153839111328

Token 75: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.1120446920394897
    2. ' mélange' → logprob: -1.2370446920394897
    3. ' l' → logprob: -2.2370448112487793
    4. ' shuffle' → logprob: -2.3620448112487793
    5. ' la' → logprob: -2.9870448112487793
    6. 'riff' → logprob: -3.4870448112487793
    7. ' riff' → logprob: -3.7370448112487793
    8. ' un' → logprob: -4.237044811248779
    9. 'shuffle' → logprob: -4.237044811248779
    10. 'le' → logprob: -4.737044811248779

Token 76: ' shuffle' (ID: 53490)
  Prédit: ' shuffle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shuffle' → logprob: -0.802966833114624
    2. 'riff' → logprob: -1.177966833114624
    3. 'shuffle' → logprob: -1.927966833114624
    4. ' riff' → logprob: -3.177966833114624
    5. ' ' → logprob: -3.927966833114624
    6. 'sh' → logprob: -5.177967071533203
    7. '   ' → logprob: -5.302967071533203
    8. 'm' → logprob: -5.990467071533203
    9. 's' → logprob: -6.052967071533203
    10. 'r' → logprob: -6.427967071533203

Token 77: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2727247178554535
    2. '.' → logprob: -2.2727246284484863
    3. ':' → logprob: -3.0227246284484863
    4. '
' → logprob: -3.7727246284484863
    5. '\n' → logprob: -4.647724628448486
    6. '    
' → logprob: -4.772724628448486
    7. '```' → logprob: -4.897724628448486
    8. '"""' → logprob: -5.147724628448486
    9. ' :' → logprob: -5.397724628448486
    10. ',' → logprob: -5.647724628448486

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04969335347414017
    2. '"""' → logprob: -3.1746933460235596
    3. '"""
' → logprob: -5.549693584442139
    4. '"' → logprob: -6.924693584442139
    5. '```' → logprob: -7.299693584442139
    6. '""' → logprob: -7.799693584442139
    7. ')' → logprob: -8.29969310760498
    8. ' """' → logprob: -8.79969310760498
    9. ' """
' → logprob: -9.42469310760498
    10. '\n' → logprob: -9.92469310760498

Token 79: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021265003830194473
    2. '"""' → logprob: -4.146265029907227
    3. '\n' → logprob: -6.771265029907227
    4. '    
' → logprob: -7.021265029907227
    5. '"""
' (adapté à ' """
') → logprob: -7.021265029907227
    6. '```' → logprob: -7.271265029907227
    7. ')' → logprob: -7.646265029907227
    8. '
' → logprob: -8.396265029907227
    9. ' """' → logprob: -8.396265029907227
    10. '"' → logprob: -8.521265029907227

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052838850766420364
    2. 'n' → logprob: -3.3028388023376465
    3. ' n' → logprob: -4.6778388023376465
    4. '    
' → logprob: -5.9278388023376465
    5. ' if' → logprob: -7.3028388023376465
    6. 'deck' → logprob: -7.8028388023376465
    7. ' new' → logprob: -7.9278388023376465
    8. '    ' → logprob: -8.427839279174805
    9. 'if' → logprob: -8.677839279174805
    10. ' deck' → logprob: -8.802839279174805

Token 81: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.9254938960075378
    2. ' n' → logprob: -1.1754939556121826
    3. '   ' → logprob: -2.1754939556121826
    4. ' if' → logprob: -2.5504939556121826
    5. 'if' → logprob: -3.3004939556121826
    6. 'deck' → logprob: -4.3004937171936035
    7. 'mid' → logprob: -4.5504937171936035
    8. ' mid' → logprob: -4.6754937171936035
    9. 'half' → logprob: -4.6754937171936035
    10. ' deck' → logprob: -5.0504937171936035

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06208677962422371
    2. '=' → logprob: -2.812086820602417
    3. ' ' → logprob: -9.312087059020996
    4. '=len' → logprob: -11.312087059020996
    5. '=int' → logprob: -11.437087059020996
    6. '_' → logprob: -12.437087059020996
    7. '/' → logprob: -14.562087059020996
    8. ' ' → logprob: -14.687087059020996
    9. '   ' → logprob: -15.312087059020996
    10. ',' → logprob: -15.687087059020996

Token 83: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.06994354724884033
    2. 'len' → logprob: -2.694943428039551
    3. '(len' → logprob: -12.19494342803955
    4. ' ' → logprob: -13.69494342803955
    5. '[len' → logprob: -15.06994342803955
    6. '	len' → logprob: -15.81994342803955
    7. ' (' → logprob: -16.069944381713867
    8. '=len' → logprob: -16.194944381713867
    9. ' int' → logprob: -16.319944381713867
    10. ' le' → logprob: -16.444944381713867

Token 84: '(deck' (ID: 195320)
  Prédit: '(deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(deck' → logprob: -5.848420551046729e-05
    2. '(' → logprob: -9.7500581741333
    3. 'deck' → logprob: -16.625059127807617
    4. '(card' → logprob: -16.875059127807617
    5. '(dec' → logprob: -18.250059127807617
    6. '(
' → logprob: -18.250059127807617
    7. '(def' → logprob: -18.625059127807617
    8. '(depth' → logprob: -18.625059127807617
    9. '(d' → logprob: -18.750059127807617
    10. '(dev' → logprob: -18.750059127807617

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001652796781854704
    2. ')
' → logprob: -9.625164985656738
    3. '   ' → logprob: -9.875164985656738
    4. ')//' → logprob: -10.750164985656738
    5. ' )' → logprob: -11.000164985656738
    6. '//' → logprob: -12.000164985656738
    7. ' ' → logprob: -14.375164985656738
    8. '```' → logprob: -15.000164985656738
    9. ')#' → logprob: -15.125164985656738
    10. '#' → logprob: -15.125164985656738

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47600486874580383
    2. ' half' → logprob: -2.1010048389434814
    3. '    
' → logprob: -3.1010048389434814
    4. 'half' → logprob: -3.4760048389434814
    5. ' mid' → logprob: -3.6010048389434814
    6. 'n' → logprob: -3.7260048389434814
    7. ' midpoint' → logprob: -3.8510048389434814
    8. ' 
' → logprob: -4.1010050773620605
    9. ' if' → logprob: -4.2260050773620605
    10. '
' → logprob: -4.4760050773620605

Token 87: ' #' (ID: 1069)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.2583055794239044
    2. 'mid' → logprob: -2.383305549621582
    3. 'half' → logprob: -2.758305549621582
    4. ' half' → logprob: -2.758305549621582
    5. ' if' → logprob: -6.633305549621582
    6. ' m' → logprob: -7.258305549621582
    7. ' middle' → logprob: -7.258305549621582
    8. 'm' → logprob: -7.508305549621582
    9. 'if' → logprob: -7.633305549621582
    10. ' deck' → logprob: -7.758305549621582

Token 88: ' Calcul' (ID: 57243)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.5399410128593445
    2. 'mid' → logprob: -1.6649410724639893
    3. 'half' → logprob: -2.5399410724639893
    4. 'if' → logprob: -3.0399410724639893
    5. ' if' → logprob: -3.0399410724639893
    6. ' half' → logprob: -3.1649410724639893
    7. 'm' → logprob: -7.03994083404541
    8. 'assert' → logprob: -7.16494083404541
    9. ' top' → logprob: -7.28994083404541
    10. 'c' → logprob: -7.41494083404541

Token 89: ' de' (ID: 334)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.5636826157569885
    2. 'mid' → logprob: -2.6886825561523438
    3. ' half' → logprob: -2.8136825561523438
    4. '_mid' → logprob: -3.0636825561523438
    5. ' =' → logprob: -3.1886825561523438
    6. '_half' → logprob: -3.3136825561523438
    7. ' de' → logprob: -3.5636825561523438
    8. 'er' → logprob: -3.5636825561523438
    9. ' midpoint' → logprob: -3.8136825561523438
    10. '   ' → logprob: -3.9386825561523438

Token 90: ' la' (ID: 557)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.5496204495429993
    2. ' half' → logprob: -2.1746203899383545
    3. ' la' → logprob: -2.6746203899383545
    4. ' m' → logprob: -2.7996203899383545
    5. ' n' → logprob: -3.2996203899383545
    6. 'mid' → logprob: -3.6746203899383545
    7. ' l' → logprob: -3.9246203899383545
    8. ' mi' → logprob: -4.174620628356934
    9. 'm' → logprob: -4.299620628356934
    10. 'half' → logprob: -4.299620628356934

Token 91: ' taille' (ID: 41644)
  Prédit: 'mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.5827109813690186
    2. ' moitié' → logprob: -1.5827109813690186
    3. ' mo' → logprob: -2.2077109813690186
    4. 'mi' → logprob: -2.9577109813690186
    5. 'mil' → logprob: -3.9577109813690186
    6. 'm' → logprob: -4.207711219787598
    7. ' mi' → logprob: -4.832711219787598
    8. 'mid' → logprob: -5.207711219787598
    9. 'tail' → logprob: -5.207711219787598
    10. ' taille' → logprob: -5.707711219787598

Token 92: ' des' (ID: 731)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_m' → logprob: -1.0861294269561768
    2. ' de' → logprob: -1.5861294269561768
    3. '_' → logprob: -2.0861294269561768
    4. '_half' → logprob: -2.3361294269561768
    5. ' du' → logprob: -2.9611294269561768
    6. ' d' → logprob: -3.3361294269561768
    7. '   ' → logprob: -4.086129188537598
    8. 's' → logprob: -4.086129188537598
    9. ' moitié' → logprob: -4.461129188537598
    10. '1' → logprob: -4.711129188537598

Token 93: ' deux' (ID: 10301)
  Prédit: ' mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mo' → logprob: -0.9165853261947632
    2. 'mo' → logprob: -1.4165853261947632
    3. ' decks' → logprob: -3.0415854454040527
    4. ' moitié' → logprob: -3.1665854454040527
    5. ' deck' → logprob: -3.2915854454040527
    6. ' half' → logprob: -3.2915854454040527
    7. 'deck' → logprob: -3.7915854454040527
    8. '_' → logprob: -4.041585445404053
    9. ' ' → logprob: -4.166585445404053
    10. ' demi' → logprob: -4.541585445404053

Token 94: ' demi' (ID: 61771)
  Prédit: ' mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mo' → logprob: -0.43007975816726685
    2. 'mo' → logprob: -1.055079698562622
    3. ' moitié' → logprob: -7.305079936981201
    4. 'half' → logprob: -8.430079460144043
    5. ' half' → logprob: -8.805079460144043
    6. 'm' → logprob: -9.680079460144043
    7. ' ' → logprob: -10.055079460144043
    8. 'hal' → logprob: -10.430079460144043
    9. 's' → logprob: -10.555079460144043
    10. ' halves' → logprob: -10.555079460144043

Token 95: '-pa' (ID: 188688)
  Prédit: '-de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-de' → logprob: -0.5814336538314819
    2. '-' → logprob: -1.581433653831482
    3. 'de' → logprob: -2.3314337730407715
    4. 'deck' → logprob: -2.7064337730407715
    5. 's' → logprob: -2.9564337730407715
    6. '-p' → logprob: -5.0814337730407715
    7. '-d' → logprob: -6.0814337730407715
    8. '-part' → logprob: -6.5814337730407715
    9. '-cart' → logprob: -6.9564337730407715
    10. '-m' → logprob: -6.9564337730407715

Token 96: 'quets' (ID: 82953)
  Prédit: 'rt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.038912370800971985
    2. 'r' → logprob: -3.413912296295166
    3. 'rc' → logprob: -6.163912296295166
    4. 'les' → logprob: -6.788912296295166
    5. 'rl' → logprob: -8.163912773132324
    6. 'iles' → logprob: -8.288912773132324
    7. 'ttes' → logprob: -8.788912773132324
    8. 'l' → logprob: -9.038912773132324
    9. 'rd' → logprob: -9.288912773132324
    10. 'lles' → logprob: -9.288912773132324

Token 97: ' A' (ID: 355)
  Prédit: ' half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' half' → logprob: -0.806634783744812
    2. 'half' → logprob: -2.3066349029541016
    3. ' mid' → logprob: -2.4316349029541016
    4. ' n' → logprob: -2.8066349029541016
    5. 'mid' → logprob: -3.3066349029541016
    6. '    
' → logprob: -3.3066349029541016
    7. 'n' → logprob: -3.4316349029541016
    8. '   ' → logprob: -3.5566349029541016
    9. '
' → logprob: -3.6816349029541016
    10. ' m' → logprob: -3.9316349029541016

Token 98: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02876620925962925
    2. ',' → logprob: -3.77876615524292
    3. '=' → logprob: -6.15376615524292
    4. ' et' → logprob: -6.40376615524292
    5. ' ,' → logprob: -6.90376615524292
    6. ' and' → logprob: -8.653766632080078
    7. '   ' → logprob: -9.028766632080078
    8. 'n' → logprob: -9.403766632080078
    9. 'u' → logprob: -9.653766632080078
    10. ' ' → logprob: -10.153766632080078

Token 99: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.14998890459537506
    2. 'B' → logprob: -2.024988889694214
    3. ' n' → logprob: -5.399989128112793
    4. 'n' → logprob: -6.524989128112793
    5. ' ' → logprob: -7.399989128112793
    6. '   ' → logprob: -8.024989128112793
    7. 's' → logprob: -9.462489128112793
    8. 'deck' → logprob: -10.399989128112793
    9. '  ' → logprob: -10.462489128112793
    10. ' A' → logprob: -10.462489128112793

Token 100: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09543066471815109
    2. '    
' → logprob: -2.970430612564087
    3. ' 
' → logprob: -4.470430850982666
    4. 'A' → logprob: -5.345430850982666
    5. '   ' → logprob: -5.470430850982666
    6. '  
' → logprob: -5.470430850982666
    7. 'n' → logprob: -5.470430850982666
    8. ' A' → logprob: -5.720430850982666
    9. 'a' → logprob: -6.845430850982666
    10. ' n' → logprob: -6.845430850982666

Token 101: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21486353874206543
    2. '   ' → logprob: -2.7148635387420654
    3. '    
' → logprob: -3.0898635387420654
    4. ' 
' → logprob: -3.3398635387420654
    5. 'n' → logprob: -4.4648637771606445
    6. 'A' → logprob: -4.5898637771606445
    7. ' A' → logprob: -4.7148637771606445
    8. ' n' → logprob: -5.5898637771606445
    9. ' half' → logprob: -5.5898637771606445
    10. '  
' → logprob: -6.0898637771606445

Token 102: ' half' (ID: 6375)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.5287966728210449
    2. 'half' (adapté à ' half') → logprob: -1.403796672821045
    3. ' mid' → logprob: -2.403796672821045
    4. 'm' → logprob: -3.153796672821045
    5. ' half' → logprob: -3.903796672821045
    6. '   ' → logprob: -5.153796672821045
    7. 'n' → logprob: -5.778796672821045
    8. ' m' → logprob: -6.653796672821045
    9. ' n' → logprob: -8.028797149658203
    10. 'k' → logprob: -8.653797149658203

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14777027070522308
    2. '_size' → logprob: -2.6477701663970947
    3. '_' → logprob: -3.3977701663970947
    4. '_n' → logprob: -3.5227701663970947
    5. '   ' → logprob: -6.147770404815674
    6. '=' → logprob: -7.647770404815674
    7. '_len' → logprob: -7.772770404815674
    8. '1' → logprob: -8.522769927978516
    9. '_length' → logprob: -8.647769927978516
    10. 'n' → logprob: -10.397769927978516

Token 104: ' (' (ID: 350)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04317890852689743
    2. 'n' → logprob: -3.1681787967681885
    3. ' ' → logprob: -9.29317855834961
    4. ' (' → logprob: -10.04317855834961
    5. '   ' → logprob: -10.41817855834961
    6. '(n' → logprob: -12.04317855834961
    7. '	n' → logprob: -12.04317855834961
    8. '    ' → logprob: -14.16817855834961
    9. '(' → logprob: -14.54317855834961
    10. '  ' → logprob: -14.91817855834961

Token 105: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18030330538749695
    2. ' n' → logprob: -1.8053033351898193
    3. '   ' → logprob: -7.55530309677124
    4. ' ' → logprob: -11.305303573608398
    5. ')n' → logprob: -11.555303573608398
    6. ')' → logprob: -12.805303573608398
    7. '	n' → logprob: -12.805303573608398
    8. '(n' → logprob: -13.555303573608398
    9. ' (' → logprob: -13.555303573608398
    10. '    ' → logprob: -14.117803573608398

Token 106: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.19008933007717133
    2. '+' → logprob: -1.8150893449783325
    3. ')' → logprob: -5.440089225769043
    4. '   ' → logprob: -5.690089225769043
    5. ' //' → logprob: -6.315089225769043
    6. ' ' → logprob: -7.440089225769043
    7. ' )' → logprob: -9.440089225769043
    8. ')//' → logprob: -10.565089225769043
    9. ' -' → logprob: -10.690089225769043
    10. '  ' → logprob: -11.440089225769043

Token 107: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009760221466422081
    2. ' ' → logprob: -4.63476037979126
    3. 'c' → logprob: -13.259759902954102
    4. ' c' → logprob: -14.384759902954102
    5. '
' → logprob: -14.509759902954102
    6. '   ' → logprob: -14.634759902954102
    7. '0' → logprob: -15.009759902954102
    8. '(' → logprob: -15.447259902954102
    9. '2' → logprob: -16.0097599029541
    10. ' (' → logprob: -16.1972599029541

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014168102643452585
    2. ' ' → logprob: -8.875142097473145
    3. 'c' → logprob: -14.375142097473145
    4. '   ' → logprob: -14.500142097473145
    5. '0' → logprob: -15.000142097473145
    6. '(' → logprob: -15.875142097473145
    7. '
' → logprob: -16.500141143798828
    8. '  ' → logprob: -16.625141143798828
    9. '2' → logprob: -16.750141143798828
    10. ' c' → logprob: -16.937641143798828

Token 109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001278534036828205
    2. ')//' → logprob: -9.250127792358398
    3. ' )' → logprob: -10.375127792358398
    4. '//' → logprob: -15.125127792358398
    5. ')
' → logprob: -15.875127792358398
    6. '   ' → logprob: -16.7501277923584
    7. ' //' → logprob: -18.5001277923584
    8. ')>>' → logprob: -18.5001277923584
    9. '2' → logprob: -18.6251277923584
    10. ' ' → logprob: -18.6251277923584

Token 110: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031608492136001587
    2. ')//' → logprob: -6.0031609535217285
    3. ' )' → logprob: -8.00316047668457
    4. '//' → logprob: -8.12816047668457
    5. ' //' → logprob: -9.87816047668457
    6. '   ' → logprob: -13.37816047668457
    7. ' ' → logprob: -14.37816047668457
    8. '2' → logprob: -14.50316047668457
    9. '```' → logprob: -15.12816047668457
    10. '")' → logprob: -15.25316047668457

Token 111: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023251768201589584
    2. ' ' → logprob: -3.77325177192688
    3. '   ' → logprob: -12.1482515335083
    4. '  ' → logprob: -15.1482515335083
    5. '
' → logprob: -15.2732515335083
    6. '```' → logprob: -15.2732515335083
    7. '    ' → logprob: -15.6482515335083
    8. '     ' → logprob: -17.648252487182617
    9. '۲' → logprob: -17.960752487182617
    10. ' ' → logprob: -18.023252487182617

Token 112: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.750027656555176
    4. '```' → logprob: -16.375028610229492
    5. '
' → logprob: -16.875028610229492
    6. '

' → logprob: -18.625028610229492
    7. '  ' → logprob: -18.750028610229492
    8. '۲' → logprob: -19.500028610229492
    9. '２' → logprob: -20.187528610229492
    10. '3' → logprob: -20.625028610229492

Token 113: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005122869275510311
    2. '   ' → logprob: -5.505122661590576
    3. '
' → logprob: -7.630122661590576
    4. '    
' → logprob: -8.005123138427734
    5. '

' → logprob: -8.880123138427734
    6. '  
' → logprob: -10.130123138427734
    7. '   
' → logprob: -11.255123138427734
    8. ' 
' → logprob: -11.380123138427734
    9. ')
' → logprob: -12.630123138427734
    10. ')' → logprob: -12.630123138427734

Token 114: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0013802330940961838
    2. '    
' → logprob: -7.376380443572998
    3. '
' → logprob: -8.12637996673584
    4. '  
' → logprob: -8.62637996673584
    5. '   ' → logprob: -9.12637996673584
    6. '

' → logprob: -9.62637996673584
    7. ' 
' → logprob: -10.25137996673584
    8. '   
' → logprob: -10.50137996673584
    9. '\n' → logprob: -10.75137996673584
    10. '
    
' → logprob: -11.75137996673584

Token 115: ' deck' (ID: 16942)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7692532539367676
    2. ' A' → logprob: -0.7692532539367676
    3. ' top' → logprob: -3.5192532539367676
    4. 'a' → logprob: -4.269253253936768
    5. 'top' → logprob: -4.769253253936768
    6. ' a' → logprob: -4.769253253936768
    7. '   ' → logprob: -6.519253253936768
    8. ' first' → logprob: -6.519253253936768
    9. ' bottom' → logprob: -6.644253253936768
    10. ' left' → logprob: -6.644253253936768

Token 116: ' A' (ID: 355)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2586055099964142
    2. '[:' → logprob: -1.7586054801940918
    3. '[n' → logprob: -4.508605480194092
    4. '[top' → logprob: -5.258605480194092
    5. ' =' → logprob: -5.383605480194092
    6. '[int' → logprob: -5.633605480194092
    7. '[:]' → logprob: -5.883605480194092
    8. ')' → logprob: -5.883605480194092
    9. 'A' → logprob: -6.008605480194092
    10. ' [' → logprob: -6.133605480194092

Token 117: ' a' (ID: 261)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08562403917312622
    2. '   ' → logprob: -2.7106239795684814
    3. '    
' → logprob: -4.5856242179870605
    4. '
' → logprob: -6.4606242179870605
    5. '  
' → logprob: -6.8356242179870605
    6. ' 
' → logprob: -6.9606242179870605
    7. '

' → logprob: -7.5856242179870605
    8. '   
' → logprob: -7.8356242179870605
    9. 'A' → logprob: -8.835623741149902
    10. '
    
' → logprob: -9.335623741149902

Token 118: ' un' (ID: 537)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.2387043237686157
    2. ' une' → logprob: -1.9887043237686157
    3. ' été' → logprob: -2.363704204559326
    4. 'vec' → logprob: -3.113704204559326
    5. ' un' → logprob: -3.238704204559326
    6. 'r' → logprob: -3.363704204559326
    7. ' la' → logprob: -3.488704204559326
    8. 's' → logprob: -3.613704204559326
    9. ' ' → logprob: -3.801204204559326
    10. ' toujours' → logprob: -4.363704204559326

Token 119: ' de' (ID: 334)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.34711283445358276
    2. ' élément' → logprob: -2.4721128940582275
    3. 'car' → logprob: -2.7221128940582275
    4. 'e' → logprob: -3.8471128940582275
    5. 'element' → logprob: -3.9721128940582275
    6. ' de' → logprob: -3.9721128940582275
    7. 'de' → logprob: -4.097112655639648
    8. 'é' → logprob: -4.597112655639648
    9. 'pe' → logprob: -5.222112655639648
    10. ' ' → logprob: -5.472112655639648

Token 120: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -1.1538375616073608
    2. 'ck' → logprob: -1.7788375616073608
    3. ' plus' → logprob: -2.0288376808166504
    4. ' ' → logprob: -2.7788376808166504
    5. 'mi' → logprob: -2.9038376808166504
    6. 'tail' → logprob: -3.0288376808166504
    7. 'p' → logprob: -3.1538376808166504
    8. ' taille' → logprob: -4.15383768081665
    9. 'm' → logprob: -4.52883768081665
    10. 'cal' → logprob: -4.52883768081665

Token 121: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13723024725914001
    2. '<|end|>' → logprob: -2.762230157852173
    3. '
' → logprob: -3.262230157852173
    4. ',' → logprob: -4.887230396270752
    5. 'if' → logprob: -5.512230396270752
    6. '   ' → logprob: -5.637230396270752
    7. ' si' → logprob: -5.762230396270752
    8. '    
' → logprob: -6.012230396270752
    9. '<|end|>' → logprob: -6.637230396270752
    10. '

' → logprob: -6.637230396270752

Token 122: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5767894983291626
    2. 'n' → logprob: -0.8267894983291626
    3. ' ' → logprob: -8.701789855957031
    4. ' le' → logprob: -8.951789855957031
    5. ' la' → logprob: -9.889289855957031
    6. ' l' → logprob: -9.951789855957031
    7. 'le' → logprob: -9.951789855957031
    8. ' odd' → logprob: -10.014289855957031
    9. ' impair' → logprob: -10.014289855957031
    10. '(n' → logprob: -10.451789855957031

Token 123: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4663967192173004
    2. ' est' → logprob: -1.591396689414978
    3. 'est' → logprob: -2.0913968086242676
    4. ' %' → logprob: -3.4663968086242676
    5. ' is' → logprob: -4.841396808624268
    6. ' ' → logprob: -6.091396808624268
    7. ' n' → logprob: -7.091396808624268
    8. 's' → logprob: -7.091396808624268
    9. ' impair' → logprob: -7.591396808624268
    10. 'odd' → logprob: -8.21639633178711

Token 124: ' impair' (ID: 64113)
  Prédit: 'imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imp' → logprob: -0.07215820252895355
    2. 'im' → logprob: -3.447158098220825
    3. ' impair' → logprob: -3.697158098220825
    4. ' imp' → logprob: -4.572158336639404
    5. 'odd' → logprob: -6.197158336639404
    6. 'pair' → logprob: -7.947158336639404
    7. '   ' → logprob: -10.322157859802246
    8. ' odd' → logprob: -10.447157859802246
    9. ' ' → logprob: -10.572157859802246
    10. 'n' → logprob: -10.822157859802246

Token 125: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07185237854719162
    2. '   ' → logprob: -3.196852445602417
    3. '    
' → logprob: -3.696852445602417
    4. '

' → logprob: -7.071852207183838
    5. '  
' → logprob: -7.071852207183838
    6. '<|end|>' → logprob: -7.946852207183838
    7. '   
' → logprob: -8.321852684020996
    8. '\n' → logprob: -8.321852684020996
    9. '
' → logprob: -8.321852684020996
    10. 'A' → logprob: -8.446852684020996

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13840565085411072
    2. 'A' → logprob: -2.3884055614471436
    3. ' A' → logprob: -3.6384055614471436
    4. 'deck' → logprob: -5.388405799865723
    5. '    
' → logprob: -5.638405799865723
    6. '
' → logprob: -6.888405799865723
    7. 'a' → logprob: -7.263405799865723
    8. 'def' → logprob: -7.888405799865723
    9. ' deck' → logprob: -7.888405799865723
    10. 'bottom' → logprob: -9.138405799865723

Token 127: ' deck' (ID: 16942)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.038393277674913406
    2. 'a' → logprob: -4.288393497467041
    3. 'deck' (adapté à ' deck') → logprob: -4.288393497467041
    4. ' A' → logprob: -5.538393497467041
    5. 'result' → logprob: -6.163393497467041
    6. 'bottom' → logprob: -7.163393497467041
    7. 'index' → logprob: -7.288393497467041
    8. '#' → logprob: -7.413393497467041
    9. '   ' → logprob: -7.663393497467041
    10. 'top' → logprob: -8.038393020629883

Token 128: '_A' (ID: 6829)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4758005440235138
    2. '_A' → logprob: -1.1008005142211914
    3. '_a' → logprob: -3.1008005142211914
    4. ' A' → logprob: -8.100800514221191
    5. '_' → logprob: -8.100800514221191
    6. '[' → logprob: -8.850800514221191
    7. 'a' → logprob: -9.600800514221191
    8. '   ' → logprob: -9.975800514221191
    9. '[:' → logprob: -10.475800514221191
    10. '_upper' → logprob: -11.100800514221191

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0890030488371849
    2. '=' → logprob: -2.464003086090088
    3. ',' → logprob: -10.21400260925293
    4. '   ' → logprob: -10.71400260925293
    5. ' ' → logprob: -12.58900260925293
    6. '    ' → logprob: -15.46400260925293
    7. ' =
' → logprob: -15.46400260925293
    8. '  ' → logprob: -15.71400260925293
    9. ' ,' → logprob: -15.71400260925293
    10. ' =[' → logprob: -15.71400260925293

Token 130: ' deck' (ID: 16942)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.47410550713539124
    2. ' deck' → logprob: -0.9741054773330688
    3. '(deck' → logprob: -11.599105834960938
    4. 'deque' → logprob: -11.724105834960938
    5. ' ' → logprob: -12.724105834960938
    6. '   ' → logprob: -12.724105834960938
    7. '.deck' → logprob: -13.599105834960938
    8. '[' → logprob: -13.974105834960938
    9. 'list' → logprob: -14.536605834960938
    10. 'de' → logprob: -14.911605834960938

Token 131: '[-' (ID: 17503)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -1.5451681974809617e-05
    2. '[' → logprob: -11.125015258789062
    3. ' [:' → logprob: -14.500015258789062
    4. '   ' → logprob: -16.000015258789062
    5. '[:]' → logprob: -17.250015258789062
    6. '[
' → logprob: -18.500015258789062
    7. '][:' → logprob: -18.750015258789062
    8. ':' → logprob: -18.875015258789062
    9. '0' → logprob: -19.125015258789062
    10. '
' → logprob: -19.875015258789062

Token 132: 'half' (ID: 52836)
  Prédit: 'half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.00012023169983876869
    2. ' half' → logprob: -9.125120162963867
    3. 'hal' → logprob: -11.875120162963867
    4. '(' → logprob: -13.000120162963867
    5. '   ' → logprob: -14.500120162963867
    6. '-half' → logprob: -15.125120162963867
    7. 'halb' → logprob: -15.500120162963867
    8. '_half' → logprob: -15.625120162963867
    9. ' ' → logprob: -15.750120162963867
    10. 'n' → logprob: -16.250120162963867

Token 133: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.08784181624650955
    2. ':' → logprob: -2.712841749191284
    3. ' :' → logprob: -4.462841987609863
    4. ':]
' → logprob: -5.462841987609863
    5. ' :]' → logprob: -6.837841987609863
    6. ':-' → logprob: -7.212841987609863
    7. ' :]
' → logprob: -10.587841987609863
    8. ' -' → logprob: -10.837841987609863
    9. '//' → logprob: -10.837841987609863
    10. ':]

' → logprob: -10.962841987609863

Token 134: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1895800679922104
    2. '   ' → logprob: -1.8145800828933716
    3. '    
' → logprob: -4.814579963684082
    4. ' 
' → logprob: -7.689579963684082
    5. '
' → logprob: -7.939579963684082
    6. 'deck' → logprob: -8.189579963684082
    7. '  
' → logprob: -8.314579963684082
    8. '   
' → logprob: -8.814579963684082
    9. ' deck' → logprob: -9.439579963684082
    10. '(deck' → logprob: -10.064579963684082

Token 135: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07014749944210052
    2. '   ' → logprob: -2.9451475143432617
    3. '    
' → logprob: -5.195147514343262
    4. '[::-' → logprob: -5.445147514343262
    5. 'deck' → logprob: -5.695147514343262
    6. '  
' → logprob: -7.320147514343262
    7. ' 
' → logprob: -7.945147514343262
    8. '   
' → logprob: -8.070147514343262
    9. '
' → logprob: -8.695147514343262
    10. 'def' → logprob: -9.445147514343262

Token 136: ' Top' (ID: 8022)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.774334192276001
    2. ' deck' → logprob: -1.274334192276001
    3. '[::-' → logprob: -1.399334192276001
    4. '   ' → logprob: -5.774333953857422
    5. ' reversed' → logprob: -6.399333953857422
    6. '[' → logprob: -6.774333953857422
    7. '[:-' → logprob: -6.899333953857422
    8. '[:' → logprob: -7.149333953857422
    9. ' [' → logprob: -7.274333953857422
    10. '(deck' → logprob: -7.274333953857422

Token 137: ' half' (ID: 6375)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4574410915374756
    2. '[' → logprob: -2.0824410915374756
    3. '[::-' → logprob: -2.2074410915374756
    4. '[:-' → logprob: -2.7074410915374756
    5. '[:' → logprob: -3.0824410915374756
    6. '[-' → logprob: -3.2074410915374756
    7. ' -' → logprob: -3.4574410915374756
    8. ' ' → logprob: -3.5824410915374756
    9. 'half' → logprob: -3.7074410915374756
    10. '+' → logprob: -3.7074410915374756

Token 138: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.176364928483963
    2. '   ' → logprob: -2.0513648986816406
    3. '
' → logprob: -4.551364898681641
    4. '    
' → logprob: -4.551364898681641
    5. ' 
' → logprob: -5.676364898681641
    6. '  
' → logprob: -5.801364898681641
    7. '[::-' → logprob: -5.801364898681641
    8. '   
' → logprob: -7.551364898681641
    9. '\n' → logprob: -8.05136489868164
    10. 'deck' → logprob: -8.42636489868164

Token 139: 'deck' (ID: 55657)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8178396224975586
    2. '[::-' → logprob: -0.9428396224975586
    3. 'deck' → logprob: -2.9428396224975586
    4. ' deck' → logprob: -3.8178396224975586
    5. 're' → logprob: -4.192839622497559
    6. ' )' → logprob: -4.317839622497559
    7. ' reversed' → logprob: -4.442839622497559
    8. ')
' → logprob: -4.817839622497559
    9. 'de' → logprob: -5.567839622497559
    10. '])' → logprob: -5.817839622497559

Token 140: ' A' (ID: 355)
  Prédit: '_A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.22384874522686005
    2. '[:-' → logprob: -1.9738487005233765
    3. '   ' → logprob: -3.473848819732666
    4. 'A' → logprob: -4.598848819732666
    5. '[:' → logprob: -5.723848819732666
    6. ')' → logprob: -5.848848819732666
    7. '[' → logprob: -5.973848819732666
    8. '_B' → logprob: -6.223848819732666
    9. '[-' → logprob: -6.223848819732666
    10. ' -' → logprob: -6.348848819732666

Token 141: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4815036654472351
    2. ')' → logprob: -0.9815036654472351
    3. '   ' → logprob: -5.606503486633301
    4. '[::-' → logprob: -6.106503486633301
    5. ')
' → logprob: -6.981503486633301
    6. '[:-' → logprob: -8.3565034866333
    7. ')

' → logprob: -8.9815034866333
    8. ' )
' → logprob: -9.6065034866333
    9. '[' → logprob: -10.4815034866333
    10. ')[' → logprob: -10.7315034866333

Token 142: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17160673439502716
    2. '   ' → logprob: -1.9216067790985107
    3. '    
' → logprob: -4.796606540679932
    4. '  
' → logprob: -6.671606540679932
    5. ' 
' → logprob: -7.671606540679932
    6. ' deck' → logprob: -8.29660701751709
    7. '\n' → logprob: -8.29660701751709
    8. 'deck' → logprob: -8.29660701751709
    9. '   
' → logprob: -8.42160701751709
    10. '
' → logprob: -8.79660701751709

Token 143: ' deck' (ID: 16942)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' (adapté à ' deck') → logprob: -0.12711749970912933
    2. ' deck' → logprob: -2.127117395401001
    3. '   ' → logprob: -8.752117156982422
    4. '
' → logprob: -11.502117156982422
    5. '(deck' → logprob: -12.502117156982422
    6. ' ' → logprob: -12.752117156982422
    7. 'de' → logprob: -12.877117156982422
    8. '.deck' → logprob: -13.002117156982422
    9. 'Deck' → logprob: -13.127117156982422
    10. '```' → logprob: -13.127117156982422

Token 144: '_B' (ID: 3201)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07692647725343704
    2. '[:-' → logprob: -2.9519264698028564
    3. '_B' → logprob: -4.0769267082214355
    4. '_A' → logprob: -5.8269267082214355
    5. '[_' → logprob: -7.2019267082214355
    6. '[:' → logprob: -8.076926231384277
    7. ' _' → logprob: -8.451926231384277
    8. '[-' → logprob: -8.826926231384277
    9. '[' → logprob: -9.451926231384277
    10. '_C' → logprob: -9.576926231384277

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06993887573480606
    2. '=' → logprob: -2.694938898086548
    3. ' ' → logprob: -13.319938659667969
    4. '   ' → logprob: -14.319938659667969
    5. 'deck' → logprob: -16.06993865966797
    6. ' =
' → logprob: -16.69493865966797
    7. '  ' → logprob: -17.06993865966797
    8. ' ' → logprob: -17.69493865966797
    9. '=
' → logprob: -17.69493865966797
    10. 's' → logprob: -17.81993865966797

Token 146: ' deck' (ID: 16942)
  Prédit: ' deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deck' → logprob: -0.3486849367618561
    2. 'deck' → logprob: -1.2236849069595337
    3. ' ' → logprob: -9.473685264587402
    4. '   ' → logprob: -9.473685264587402
    5. '(deck' → logprob: -10.223685264587402
    6. 'de' → logprob: -11.661185264587402
    7. '  ' → logprob: -11.848685264587402
    8. '[' → logprob: -12.286185264587402
    9. '.deck' → logprob: -12.473685264587402
    10. 'deque' → logprob: -12.723685264587402

Token 147: '[:-' (ID: 63556)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.7100817561149597
    2. '[:-' → logprob: -0.9600817561149597
    3. '[:' → logprob: -2.0850818157196045
    4. '[' → logprob: -6.710081577301025
    5. ' [-' → logprob: -11.460082054138184
    6. '[len' → logprob: -13.210082054138184
    7. '[n' → logprob: -13.335082054138184
    8. '[:]' → logprob: -13.710082054138184
    9. ' [:' → logprob: -14.335082054138184
    10. '[::-' → logprob: -14.585082054138184

Token 148: 'half' (ID: 52836)
  Prédit: 'half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.0001446611131541431
    2. ' half' → logprob: -8.875144958496094
    3. '-half' → logprob: -12.875144958496094
    4. '   ' → logprob: -13.875144958496094
    5. '_half' → logprob: -14.375144958496094
    6. 'hal' → logprob: -15.125144958496094
    7. ' ' → logprob: -16.875144958496094
    8. '-' → logprob: -16.875144958496094
    9. 'Half' → logprob: -17.000144958496094
    10. 'n' → logprob: -17.000144958496094

Token 149: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.333223139634356e-05
    2. ' ]' → logprob: -10.375033378601074
    3. '   ' → logprob: -14.000033378601074
    4. ']
' → logprob: -14.000033378601074
    5. ']

' → logprob: -15.750033378601074
    6. '])' → logprob: -16.750032424926758
    7. ')' → logprob: -17.125032424926758
    8. ']
' → logprob: -17.500032424926758
    9. '].' → logprob: -17.875032424926758
    10. ' ' → logprob: -18.000032424926758

Token 150: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7374045848846436
    2. '   ' → logprob: -0.7374045848846436
    3. '    
' → logprob: -3.3624045848846436
    4. '

' → logprob: -5.737404823303223
    5. 'new' → logprob: -6.237404823303223
    6. ' new' → logprob: -6.612404823303223
    7. '  
' → logprob: -7.112404823303223
    8. '   
' → logprob: -7.987404823303223
    9. 'result' → logprob: -8.612404823303223
    10. ' 
' → logprob: -8.862404823303223

Token 151: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07739537954330444
    2. '   ' → logprob: -3.077395439147949
    3. '[::-' → logprob: -3.827395439147949
    4. '    
' → logprob: -5.577395439147949
    5. '  
' → logprob: -6.952395439147949
    6. '

' → logprob: -7.702395439147949
    7. '#' → logprob: -7.827395439147949
    8. '   
' → logprob: -8.32739543914795
    9. ' 
' → logprob: -8.45239543914795
    10. '[' → logprob: -8.95239543914795

Token 152: ' Bottom' (ID: 44368)
  Prédit: ' bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.992297351360321
    2. ' deck' → logprob: -1.9922974109649658
    3. 'Bottom' → logprob: -1.9922974109649658
    4. 'bottom' → logprob: -2.367297410964966
    5. '[-' → logprob: -2.742297410964966
    6. ' Bottom' → logprob: -2.867297410964966
    7. 'deck' → logprob: -2.867297410964966
    8. 'Top' → logprob: -3.617297410964966
    9. ' Top' → logprob: -3.992297410964966
    10. '[' → logprob: -4.992297172546387

Token 153: ' half' (ID: 6375)
  Prédit: ' half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' half' → logprob: -0.22601644694805145
    2. '_half' → logprob: -1.9760164022445679
    3. 'half' → logprob: -3.1010165214538574
    4. '_' → logprob: -4.226016521453857
    5. ' _' → logprob: -6.601016521453857
    6. ' ' → logprob: -6.726016521453857
    7. ' moitié' → logprob: -7.976016521453857
    8. ' B' → logprob: -8.3510160446167
    9. '_B' → logprob: -9.1010160446167
    10. '_HALF' → logprob: -9.4760160446167

Token 154: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41374483704566956
    2. '   ' → logprob: -1.1637448072433472
    3. '

' → logprob: -4.413744926452637
    4. '    
' → logprob: -4.663744926452637
    5. 'new' → logprob: -6.663744926452637
    6. '[::-' → logprob: -6.913744926452637
    7. '  
' → logprob: -7.038744926452637
    8. ' new' → logprob: -8.163744926452637
    9. '   
' → logprob: -8.413744926452637
    10. '
' → logprob: -8.788744926452637

Token 155: 'deck' (ID: 55657)
  Prédit: 'deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.06920763850212097
    2. ')' → logprob: -2.9442076683044434
    3. ' deck' → logprob: -4.444207668304443
    4. '])' → logprob: -6.944207668304443
    5. 'n' → logprob: -7.819207668304443
    6. ']' → logprob: -7.944207668304443
    7. ')
' → logprob: -8.569207191467285
    8. '-' → logprob: -9.319207191467285
    9. '(deck' → logprob: -9.444207191467285
    10. ' )' → logprob: -9.694207191467285

Token 156: ' B' (ID: 418)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8050373196601868
    2. '])' → logprob: -0.8050373196601868
    3. '_B' → logprob: -2.805037260055542
    4. 'A' → logprob: -4.180037498474121
    5. 'B' → logprob: -4.430037498474121
    6. '_A' → logprob: -4.555037498474121
    7. ')])' → logprob: -6.180037498474121
    8. ']' → logprob: -6.930037498474121
    9. ')]' → logprob: -7.055037498474121
    10. ':)' → logprob: -7.055037498474121

Token 157: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002154307207092643
    2. ')
' → logprob: -6.877154350280762
    3. '   ' → logprob: -7.502154350280762
    4. ')

' → logprob: -7.502154350280762
    5. ' )' → logprob: -11.877154350280762
    6. ')
' → logprob: -12.377154350280762
    7. ')

' → logprob: -13.252154350280762
    8. '
' → logprob: -13.377154350280762
    9. '[::-' → logprob: -14.752154350280762
    10. ']' → logprob: -14.877154350280762

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20285232365131378
    2. '
' → logprob: -2.452852249145508
    3. '    
' → logprob: -2.952852249145508
    4. 'result' → logprob: -3.827852249145508
    5. 'new' → logprob: -4.327852249145508
    6. ' new' → logprob: -5.702852249145508
    7. '  
' → logprob: -5.952852249145508
    8. '\n' → logprob: -6.327852249145508
    9. ' result' → logprob: -6.952852249145508
    10. ' 
' → logprob: -7.702852249145508

Token 159: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.3503384292125702
    2. 'result' → logprob: -1.2253384590148926
    3. 'sh' → logprob: -7.475338459014893
    4. 'res' → logprob: -7.850338459014893
    5. ' new' → logprob: -7.975338459014893
    6. ' result' → logprob: -8.850337982177734
    7. '   ' → logprob: -9.100337982177734
    8. 'i' → logprob: -9.725337982177734
    9. 'deck' → logprob: -9.725337982177734
    10. 'merged' → logprob: -10.225337982177734

Token 160: ' On' (ID: 2160)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4927004873752594
    2. 'new' → logprob: -1.367700457572937
    3. ' result' → logprob: -2.6177005767822266
    4. ' new' → logprob: -3.2427005767822266
    5. 'res' → logprob: -5.492700576782227
    6. ' shuffled' → logprob: -5.992700576782227
    7. 'sh' → logprob: -6.242700576782227
    8. 'idx' → logprob: -6.367700576782227
    9. 'index' → logprob: -6.617700576782227
    10. 'i' → logprob: -6.617700576782227

Token 161: ' tire' (ID: 30796)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.3330661654472351
    2. ' new' → logprob: -2.08306622505188
    3. 'result' → logprob: -2.08306622505188
    4. ' res' → logprob: -5.083065986633301
    5. ' resultat' → logprob: -5.583065986633301
    6. ' n' → logprob: -5.833065986633301
    7. 'new' → logprob: -5.958065986633301
    8. '   ' → logprob: -6.083065986633301
    9. ' deck' → logprob: -6.083065986633301
    10. ' nouveau' → logprob: -6.458065986633301

Token 162: ' les' (ID: 1341)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.05624439939856529
    2. 'c' → logprob: -3.556244373321533
    3. ' ' → logprob: -4.556244373321533
    4. ' des' → logprob: -4.931244373321533
    5. ' les' → logprob: -5.556244373321533
    6. '   ' → logprob: -6.056244373321533
    7. '  ' → logprob: -7.306244373321533
    8. ' une' → logprob: -8.681244850158691
    9. '    ' → logprob: -9.056244850158691
    10. ' i' → logprob: -9.306244850158691

Token 163: ' cartes' (ID: 70753)
  Prédit: ' cartes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cartes' → logprob: -0.4400215446949005
    2. ' groupes' → logprob: -2.315021514892578
    3. 'cart' → logprob: -2.815021514892578
    4. ' c' → logprob: -2.940021514892578
    5. ' group' → logprob: -3.565021514892578
    6. 'group' → logprob: -3.940021514892578
    7. ' indices' → logprob: -3.940021514892578
    8. 'c' → logprob: -4.065021514892578
    9. ' i' → logprob: -4.315021514892578
    10. 'i' → logprob: -4.940021514892578

Token 164: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5170782208442688
    2. ' depuis' → logprob: -2.517078161239624
    3. 'result' → logprob: -2.892078161239624
    4. ' du' → logprob: -3.142078161239624
    5. ' i' → logprob: -3.267078161239624
    6. ' result' → logprob: -3.517078161239624
    7. ' par' → logprob: -3.767078161239624
    8. ' à' → logprob: -4.267078399658203
    9. 'from' → logprob: -4.267078399658203
    10. ' inter' → logprob: -4.392078399658203

Token 165: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.12304851412773132
    2. ' la' → logprob: -2.6230485439300537
    3. 'le' → logprob: -4.123048305511475
    4. ' les' → logprob: -4.623048305511475
    5. ' ' → logprob: -5.623048305511475
    6. ' bas' → logprob: -5.748048305511475
    7. 'la' → logprob: -5.998048305511475
    8. ' deck' → logprob: -6.373048305511475
    9. 'deck' → logprob: -6.623048305511475
    10. 'les' → logprob: -7.248048305511475

Token 166: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.06467787176370621
    2. 'b' → logprob: -3.1896779537200928
    3. ' bas' → logprob: -4.814677715301514
    4. '0' → logprob: -5.439677715301514
    5. 'de' → logprob: -5.689677715301514
    6. ' ' → logprob: -6.564677715301514
    7. 'bottom' → logprob: -7.189677715301514
    8. '-' → logprob: -7.314677715301514
    9. 'bases' → logprob: -7.314677715301514
    10. '2' → logprob: -7.939677715301514

Token 167: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2785275876522064
    2. ' de' → logprob: -1.9035276174545288
    3. ' des' → logprob: -3.1535274982452393
    4. ' (' → logprob: -3.7785274982452393
    5. 'de' → logprob: -4.778527736663818
    6. ',' → logprob: -5.028527736663818
    7. ' of' → logprob: -6.403527736663818
    8. '    ' → logprob: -6.403527736663818
    9. ' du' → logprob: -6.403527736663818
    10. '    
' → logprob: -6.653527736663818

Token 168: ' pa' (ID: 2428)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.13615623116493225
    2. 'deck' → logprob: -3.3861563205718994
    3. 'de' → logprob: -3.8861563205718994
    4. ' pa' → logprob: -4.01115608215332
    5. ' deck' → logprob: -4.63615608215332
    6. 'pa' → logprob: -4.76115608215332
    7. ' ' → logprob: -4.88615608215332
    8. ' two' → logprob: -5.01115608215332
    9. ' decks' → logprob: -5.26115608215332
    10. ' demi' → logprob: -5.38615608215332

Token 169: 'quets' (ID: 82953)
  Prédit: 'quets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quets' → logprob: -0.0007115975022315979
    2. 'q' → logprob: -8.125711441040039
    3. 'quet' → logprob: -8.625711441040039
    4. 'qu' → logprob: -8.750711441040039
    5. 'u' → logprob: -10.750711441040039
    6. '_' → logprob: -11.750711441040039
    7. 'que' → logprob: -11.750711441040039
    8. ' qu' → logprob: -12.000711441040039
    9. '-' → logprob: -12.000711441040039
    10. 'quettes' → logprob: -12.625711441040039

Token 170: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07213956862688065
    2. '    
' → logprob: -3.0721395015716553
    3. '
' → logprob: -4.072139739990234
    4. '   
' → logprob: -6.697139739990234
    5. '  
' → logprob: -6.822139739990234
    6. ',' → logprob: -6.947139739990234
    7. 'result' → logprob: -6.947139739990234
    8. '\n' → logprob: -7.947139739990234
    9. '    ' → logprob: -8.447139739990234
    10. '

' → logprob: -8.447139739990234

Token 171: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2638692557811737
    2. ' et' → logprob: -1.513869285583496
    3. ',' → logprob: -5.138869285583496
    4. 'et' → logprob: -6.138869285583496
    5. ' jusqu' → logprob: -6.638869285583496
    6. '    
' → logprob: -7.138869285583496
    7. '  ' → logprob: -7.763869285583496
    8. '    ' → logprob: -8.513869285583496
    9. '   
' → logprob: -8.638869285583496
    10. ' and' → logprob: -8.638869285583496

Token 172: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.033861562609672546
    2. 'B' → logprob: -3.4088616371154785
    3. ' ' → logprob: -8.78386116027832
    4. '_B' → logprob: -11.28386116027832
    5. '   ' → logprob: -11.40886116027832
    6. '  ' → logprob: -11.53386116027832
    7. 's' → logprob: -12.84636116027832
    8. 'de' → logprob: -12.90886116027832
    9. ' de' → logprob: -13.15886116027832
    10. 'b' → logprob: -13.22136116027832

Token 173: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06828449666500092
    2. '    
' → logprob: -3.318284511566162
    3. '
' → logprob: -3.693284511566162
    4. 'result' → logprob: -6.318284511566162
    5. ',' → logprob: -7.568284511566162
    6. 'new' → logprob: -7.568284511566162
    7. 'indices' → logprob: -7.818284511566162
    8. ' new' → logprob: -8.318284034729004
    9. '   
' → logprob: -8.443284034729004
    10. ' indices' → logprob: -8.568284034729004

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0096586924046278
    2. '    
' → logprob: -5.5096588134765625
    3. 'result' → logprob: -5.7596588134765625
    4. '
' → logprob: -6.7596588134765625
    5. ' result' → logprob: -7.6346588134765625
    6. 'new' → logprob: -8.634658813476562
    7. ' i' → logprob: -9.259658813476562
    8. ' new' → logprob: -9.384658813476562
    9. 'i' → logprob: -9.634658813476562
    10. 'res' → logprob: -9.759658813476562

Token 175: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5759227871894836
    2. 'new' → logprob: -1.8259227275848389
    3. '   ' → logprob: -2.200922727584839
    4. ' new' → logprob: -2.450922727584839
    5. ' result' → logprob: -2.575922727584839
    6. 'res' → logprob: -7.075922966003418
    7. 'i' → logprob: -7.700922966003418
    8. '    
' → logprob: -7.825922966003418
    9. ' shuffled' → logprob: -7.950922966003418
    10. ' res' → logprob: -8.575922966003418

Token 176: ' ici' (ID: 27994)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2631191909313202
    2. 'new' → logprob: -1.7631192207336426
    3. ' result' → logprob: -3.3881192207336426
    4. ' new' → logprob: -4.263119220733643
    5. 'res' → logprob: -5.263119220733643
    6. 'i' → logprob: -6.263119220733643
    7. '   ' → logprob: -6.638119220733643
    8. 'index' → logprob: -7.138119220733643
    9. ' res' → logprob: -7.638119220733643
    10. 'sh' → logprob: -7.888119220733643

Token 177: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3108541667461395
    2. '
' → logprob: -2.185854196548462
    3. ' result' → logprob: -2.935854196548462
    4. 'result' → logprob: -2.935854196548462
    5. ' new' → logprob: -3.935854196548462
    6. '    
' → logprob: -4.060853958129883
    7. 'new' → logprob: -6.060853958129883
    8. ' res' → logprob: -6.560853958129883
    9. ' merged' → logprob: -6.685853958129883
    10. ' indices' → logprob: -7.060853958129883

Token 178: ' le' (ID: 505)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.1512247323989868
    2. 'result' → logprob: -1.1512247323989868
    3. ' new' → logprob: -1.5262247323989868
    4. 'new' → logprob: -3.1512246131896973
    5. ' i' → logprob: -3.7762246131896973
    6. 'i' → logprob: -3.7762246131896973
    7. ' for' → logprob: -4.776224613189697
    8. ' res' → logprob: -4.901224613189697
    9. 'for' → logprob: -4.901224613189697
    10. '   ' → logprob: -5.026224613189697

Token 179: ' bas' (ID: 3222)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.9269747138023376
    2. ' result' → logprob: -0.9269747138023376
    3. 'result' → logprob: -2.4269747734069824
    4. ' res' → logprob: -3.6769747734069824
    5. 'new' → logprob: -3.9269747734069824
    6. ' index' → logprob: -4.676974773406982
    7. ' bottom' → logprob: -4.926974773406982
    8. ' deck' → logprob: -5.051974773406982
    9. ' idx' → logprob: -5.051974773406982
    10. ' i' → logprob: -5.301974773406982

Token 180: ' est' (ID: 893)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.36464837193489075
    2. ' =' → logprob: -1.8646483421325684
    3. ' de' → logprob: -2.9896483421325684
    4. '   ' → logprob: -3.6146483421325684
    5. 'des' → logprob: -3.8646483421325684
    6. ':' → logprob: -4.989648342132568
    7. '    ' → logprob: -5.114648342132568
    8. ' c' → logprob: -5.239648342132568
    9. '=' → logprob: -5.364648342132568
    10. 'de' → logprob: -5.489648342132568

Token 181: ' l' (ID: 305)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.4447079598903656
    2. ' l' → logprob: -2.1947078704833984
    3. ' deck' → logprob: -2.1947078704833984
    4. 'index' → logprob: -2.8197078704833984
    5. ' le' → logprob: -4.069707870483398
    6. ' ' → logprob: -4.694707870483398
    7. 'l' → logprob: -4.819707870483398
    8. ' à' → logprob: -4.819707870483398
    9. 'deck' → logprob: -4.819707870483398
    10. ' -' → logprob: -4.944707870483398

Token 182: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6990410685539246
    2. 'e' → logprob: -0.8240410685539246
    3. ''' → logprob: -3.1990411281585693
    4. 'es' → logprob: -4.07404088973999
    5. ''end' → logprob: -7.07404088973999
    6. '''' → logprob: -7.32404088973999
    7. ''ex' → logprob: -7.94904088973999
    8. ''a' → logprob: -7.94904088973999
    9. ''ind' → logprob: -8.074041366577148
    10. ''''' → logprob: -8.199041366577148

Token 183: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.14461463689804077
    2. 'indice' → logprob: -3.0196146965026855
    3. ''' → logprob: -3.1446146965026855
    4. ' index' → logprob: -3.6446146965026855
    5. 'a' → logprob: -4.8946146965026855
    6. '[' → logprob: -6.7696146965026855
    7. ''ind' → logprob: -7.0196146965026855
    8. 'e' → logprob: -7.1446146965026855
    9. '"' → logprob: -7.3946146965026855
    10. 'inverse' → logprob: -7.3946146965026855

Token 184: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09238404780626297
    2. '0' → logprob: -2.592384099960327
    3. ' -' → logprob: -4.342383861541748
    4. '-' → logprob: -8.842384338378906
    5. '    ' → logprob: -10.092384338378906
    6. '  ' → logprob: -10.217384338378906
    7. ' :' → logprob: -10.467384338378906
    8. ' =' → logprob: -10.717384338378906
    9. '   ' → logprob: -10.717384338378906
    10. 's' → logprob: -10.717384338378906

Token 185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06018337234854698
    2. ' ' → logprob: -3.06018328666687
    3. '-' → logprob: -4.685183525085449
    4. ' -' → logprob: -6.435183525085449
    5. '-c' → logprob: -8.68518352508545
    6. '   ' → logprob: -8.81018352508545
    7. '  ' → logprob: -10.06018352508545
    8. '1' → logprob: -10.18518352508545
    9. 'c' → logprob: -10.18518352508545
    10. ':' → logprob: -10.18518352508545

Token 186: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06077425926923752
    2. '
' → logprob: -3.560774326324463
    3. '    
' → logprob: -3.560774326324463
    4. 'result' → logprob: -6.810774326324463
    5. 'new' → logprob: -8.685773849487305
    6. '   
' → logprob: -9.185773849487305
    7. 'i' → logprob: -9.560773849487305
    8. 'indices' → logprob: -9.560773849487305
    9. 'deck' → logprob: -9.685773849487305
    10. '  
' → logprob: -9.685773849487305

Token 187: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.352479487657547
    2. ' for' → logprob: -2.8524794578552246
    3. 'for' → logprob: -2.9774794578552246
    4. ' )' → logprob: -3.3524794578552246
    5. '   ' → logprob: -3.6024794578552246
    6. 'len' → logprob: -3.6024794578552246
    7. 'deck' → logprob: -4.852479457855225
    8. '):' → logprob: -5.227479457855225
    9. ')
' → logprob: -5.227479457855225
    10. ' i' → logprob: -5.352479457855225

Token 188: ' deck' (ID: 16942)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.0374199151992798
    2. ' deck' → logprob: -1.6624199151992798
    3. 'deck' → logprob: -2.1624197959899902
    4. ' c' → logprob: -2.7874197959899902
    5. ' les' → logprob: -2.7874197959899902
    6. '   ' → logprob: -3.1624197959899902
    7. ' la' → logprob: -3.7874197959899902
    8. 'c' → logprob: -3.7874197959899902
    9. ' le' → logprob: -3.9124197959899902
    10. 'le' → logprob: -4.03741979598999

Token 189: ' est' (ID: 893)
  Prédit: '_A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.6338207125663757
    2. '_B' → logprob: -0.8838207125663757
    3. '[' → logprob: -3.8838207721710205
    4. 'A' → logprob: -5.008820533752441
    5. '_' → logprob: -5.133820533752441
    6. '   ' → logprob: -5.383820533752441
    7. ' est' → logprob: -5.508820533752441
    8. ')' → logprob: -5.758820533752441
    9. 'B' → logprob: -6.383820533752441
    10. 's' → logprob: -6.508820533752441

Token 190: ' bottom' (ID: 8725)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.3533117771148682
    2. 'index' → logprob: -1.4783117771148682
    3. 'stock' → logprob: -1.9783117771148682
    4. 'list' → logprob: -2.603311777114868
    5. ' une' → logprob: -2.853311777114868
    6. ' stock' → logprob: -3.103311777114868
    7. 'de' → logprob: -3.228311777114868
    8. ' index' → logprob: -3.478311777114868
    9. 'bas' → logprob: -3.728311777114868
    10. 're' → logprob: -4.478311538696289

Token 191: '-to' (ID: 6487)
  Prédit: '_up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_up' → logprob: -0.8622495532035828
    2. '-up' → logprob: -0.9872495532035828
    3. '_to' → logprob: -2.8622496128082275
    4. ' up' → logprob: -3.1122496128082275
    5. 'up' → logprob: -3.3622496128082275
    6. '_' → logprob: -4.112249374389648
    7. ')' → logprob: -4.737249374389648
    8. ' to' → logprob: -4.862249374389648
    9. '-based' → logprob: -4.862249374389648
    10. '[' → logprob: -4.987249374389648

Token 192: '-top' (ID: 16099)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.003294871188700199
    2. 'up' → logprob: -5.878294944763184
    3. ' top' → logprob: -8.003294944763184
    4. 'bottom' → logprob: -8.878294944763184
    5. '_top' → logprob: -12.628294944763184
    6. ' up' → logprob: -13.003294944763184
    7. '[top' → logprob: -13.628294944763184
    8. '-top' → logprob: -13.753294944763184
    9. '	top' → logprob: -13.753294944763184
    10. 'op' → logprob: -13.878294944763184

Token 193: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04856090620160103
    2. ')
' → logprob: -3.173560857772827
    3. ' indexing' → logprob: -6.673561096191406
    4. 'index' → logprob: -6.798561096191406
    5. ',' → logprob: -7.173561096191406
    6. ' )' → logprob: -7.423561096191406
    7. ' order' → logprob: -7.798561096191406
    8. ' index' → logprob: -7.923561096191406
    9. '),' → logprob: -8.798561096191406
    10. '   ' → logprob: -9.173561096191406

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5647582411766052
    2. '
' → logprob: -1.56475830078125
    3. '    
' → logprob: -2.31475830078125
    4. 'result' → logprob: -2.56475830078125
    5. 'new' → logprob: -3.81475830078125
    6. ' new' → logprob: -4.68975830078125
    7. ' result' → logprob: -5.06475830078125
    8. 'res' → logprob: -6.56475830078125
    9. '  
' → logprob: -6.56475830078125
    10. '\n' → logprob: -6.81475830078125

Token 195: ' deck' (ID: 16942)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7731867432594299
    2. 'result' → logprob: -1.0231866836547852
    3. 'new' → logprob: -2.023186683654785
    4. ' new' → logprob: -3.898186683654785
    5. ' result' → logprob: -4.273186683654785
    6. '
' → logprob: -5.273186683654785
    7. '    
' → logprob: -6.148186683654785
    8. 'res' → logprob: -6.273186683654785
    9. 'i' → logprob: -7.523186683654785
    10. 'idx' → logprob: -7.523186683654785

Token 196: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.0037542327772825956
    2. '_' → logprob: -5.628754138946533
    3. '_B' → logprob: -9.628754615783691
    4. '_C' → logprob: -10.878754615783691
    5. 'A' → logprob: -11.253754615783691
    6. '_new' → logprob: -11.628754615783691
    7. '_a' → logprob: -12.128754615783691
    8. ' _' → logprob: -12.378754615783691
    9. '_sh' → logprob: -12.753754615783691
    10. '_=' → logprob: -12.753754615783691

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9864290952682495
    2. '_idx' → logprob: -1.7364290952682495
    3. '_index' → logprob: -1.8614290952682495
    4. '_c' → logprob: -2.736429214477539
    5. '_pos' → logprob: -2.736429214477539
    6. '_bottom' → logprob: -3.111429214477539
    7. '_ptr' → logprob: -3.236429214477539
    8. '_cards' → logprob: -3.861429214477539
    9. '=' → logprob: -4.736429214477539
    10. '_indices' → logprob: -5.111429214477539

Token 198: ' deck' (ID: 16942)
  Prédit: ' deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deck' → logprob: -0.31327322125434875
    2. 'deck' → logprob: -1.3132731914520264
    3. 'deque' → logprob: -12.563273429870605
    4. ' ' → logprob: -12.938273429870605
    5. '(deck' → logprob: -13.063273429870605
    6. '[' → logprob: -14.063273429870605
    7. 'de' → logprob: -14.688273429870605
    8. ' [' → logprob: -14.813273429870605
    9. ' deque' → logprob: -14.938273429870605
    10. '.deck' → logprob: -15.063273429870605

Token 199: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.051693305373191833
    2. '[:' → logprob: -3.5516932010650635
    3. '[-' → logprob: -3.9266932010650635
    4. '[:-' → logprob: -7.051693439483643
    5. '[' → logprob: -7.426693439483643
    6. '[_' → logprob: -8.551692962646484
    7. 'A' → logprob: -9.176692962646484
    8. '[::-' → logprob: -9.551692962646484
    9. '_B' → logprob: -9.676692962646484
    10. '[A' → logprob: -10.676692962646484

Token 200: '[::-' (ID: 159890)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0691988542675972
    2. '[c' → logprob: -3.1941988468170166
    3. '[-' → logprob: -3.6941988468170166
    4. '[' → logprob: -7.819199085235596
    5. '[::-' → logprob: -8.069198608398438
    6. '[:-' → logprob: -8.444198608398438
    7. ' [:' → logprob: -10.694198608398438
    8. '[len' → logprob: -11.569198608398438
    9. '[:]' → logprob: -11.569198608398438
    10. '[n' → logprob: -11.944198608398438

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. 'c' → logprob: -12.750005722045898
    3. ' ' → logprob: -13.500005722045898
    4. '2' → logprob: -15.500005722045898
    5. 'int' → logprob: -15.500005722045898
    6. 'start' → logprob: -16.1250057220459
    7. 'slice' → logprob: -16.6250057220459
    8. 'index' → logprob: -16.7500057220459
    9. 'len' → logprob: -17.5000057220459
    10. '```' → logprob: -17.6250057220459

Token 202: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0025115699972957373
    2. '][:' → logprob: -6.502511501312256
    3. ']
' → logprob: -7.877511501312256
    4. ' ]' → logprob: -8.377511978149414
    5. '[:' → logprob: -8.502511978149414
    6. '   ' → logprob: -9.002511978149414
    7. '][' → logprob: -10.502511978149414
    8. ')' → logprob: -11.002511978149414
    9. ' ' → logprob: -11.627511978149414
    10. '[' → logprob: -11.877511978149414

Token 203: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5996661186218262
    2. '
' → logprob: -1.2246661186218262
    3. '    
' → logprob: -2.349666118621826
    4. '<|end|>' → logprob: -3.599666118621826
    5. ' 
' → logprob: -3.724666118621826
    6. '  
' → logprob: -5.974666118621826
    7. '<|end|>' → logprob: -7.099666118621826
    8. '[' → logprob: -7.099666118621826
    9. 'deck' → logprob: -7.224666118621826
    10. '\n' → logprob: -7.349666118621826

Token 204: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18312746286392212
    2. '
' → logprob: -2.5581274032592773
    3. '    
' → logprob: -2.9331274032592773
    4. ' 
' → logprob: -4.933127403259277
    5. '  
' → logprob: -5.308127403259277
    6. 'for' → logprob: -5.683127403259277
    7. 'def' → logprob: -5.683127403259277
    8. '<|end|>' → logprob: -5.683127403259277
    9. ' ' → logprob: -5.808127403259277
    10. '[' → logprob: -6.058127403259277

Token 205: ' invers' (ID: 38721)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.3395731449127197
    2. ' deck' → logprob: -2.3395731449127197
    3. 'deck' → logprob: -2.4645731449127197
    4. '   ' → logprob: -3.9645731449127197
    5. '[' → logprob: -4.214572906494141
    6. '    
' → logprob: -4.714572906494141
    7. '#' → logprob: -4.964572906494141
    8. ' #' → logprob: -5.339572906494141
    9. ' [' → logprob: -5.339572906494141
    10. ' ' → logprob: -5.589572906494141

Token 206: 'er' (ID: 259)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5357474684715271
    2. 'er' → logprob: -0.9107474684715271
    3. 'é' → logprob: -4.535747528076172
    4. 'ert' → logprob: -6.785747528076172
    5. 'ed' → logprob: -8.785747528076172
    6. 'es' → logprob: -9.035747528076172
    7. ']' → logprob: -9.660747528076172
    8. '[::-' → logprob: -9.660747528076172
    9. '   ' → logprob: -9.910747528076172
    10. '```' → logprob: -10.285747528076172

Token 207: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: ' avoir' (ID: 16595)
  Prédit: ' faciliter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' faciliter' → logprob: -0.4301624596118927
    2. ' pouvoir' → logprob: -1.6801624298095703
    3. 'p' → logprob: -3.6801624298095703
    4. ' travailler' → logprob: -3.9301624298095703
    5. ' accéder' → logprob: -3.9301624298095703
    6. 'tir' → logprob: -4.05516242980957
    7. 'pop' → logprob: -4.30516242980957
    8. 'tr' → logprob: -4.43016242980957
    9. 'fac' → logprob: -4.80516242980957
    10. ' tirer' → logprob: -4.80516242980957

Token 209: ' bottom' (ID: 8725)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.5987432599067688
    2. ' l' → logprob: -1.598743200302124
    3. ' bottom' → logprob: -1.973743200302124
    4. 'le' → logprob: -3.723743200302124
    5. 'bottom' → logprob: -3.973743200302124
    6. ' deck' → logprob: -4.348743438720703
    7. ' index' → logprob: -4.473743438720703
    8. ' les' → logprob: -4.973743438720703
    9. ' un' → logprob: -5.098743438720703
    10. ' accès' → logprob: -5.348743438720703

Token 210: ' à' (ID: 1221)
  Prédit: '-to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-to' → logprob: -0.19838383793830872
    2. '_to' → logprob: -1.9483838081359863
    3. ' to' → logprob: -3.5733838081359863
    4. 'to' → logprob: -5.198383808135986
    5. '-up' → logprob: -6.823383808135986
    6. ' à' → logprob: -7.198383808135986
    7. '-top' → logprob: -7.573383808135986
    8. '-à' → logprob: -8.073384284973145
    9. 'A' → logprob: -8.323384284973145
    10. ' vers' → logprob: -9.073384284973145

Token 211: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6151110529899597
    2. '0' → logprob: -1.1151111125946045
    3. 'index' → logprob: -2.6151111125946045
    4. ' l' → logprob: -3.7401111125946045
    5. ' index' → logprob: -4.615110874176025
    6. ' ' → logprob: -4.615110874176025
    7. '[' → logprob: -5.490110874176025
    8. 'la' → logprob: -5.865110874176025
    9. 'g' → logprob: -6.115110874176025
    10. ' gauche' → logprob: -6.240110874176025

Token 212: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6184718012809753
    2. 'index' → logprob: -1.3684718608856201
    3. ''ind' → logprob: -2.24347186088562
    4. 'indice' → logprob: -3.24347186088562
    5. 'ind' → logprob: -3.86847186088562
    6. 'a' → logprob: -4.118471622467041
    7. '0' → logprob: -4.618471622467041
    8. 'e' → logprob: -4.743471622467041
    9. '[' → logprob: -7.618471622467041
    10. 'in' → logprob: -7.993471622467041

Token 213: 'index' (ID: 2257)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4351242482662201
    2. 'index' → logprob: -1.0601242780685425
    3. 'indice' → logprob: -5.185124397277832
    4. 'x' → logprob: -8.685124397277832
    5. ' index' → logprob: -8.810124397277832
    6. 'ex' → logprob: -9.310124397277832
    7. '1' → logprob: -9.435124397277832
    8. 'élé' → logprob: -10.560124397277832
    9. 'begin' → logprob: -10.685124397277832
    10. ' ' → logprob: -10.685124397277832

Token 214: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4287545382976532
    2. '0' → logprob: -1.0537545680999756
    3. '1' → logprob: -10.178754806518555
    4. ' ' → logprob: -11.303754806518555
    5. ' =' → logprob: -14.553754806518555
    6. 'space' → logprob: -14.678754806518555
    7. '[' → logprob: -14.803754806518555
    8. 'au' → logprob: -14.928754806518555
    9. 's' → logprob: -15.053754806518555
    10. ',' → logprob: -15.491254806518555

Token 215: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '1' → logprob: -18.250017166137695
    4. '   ' → logprob: -19.375017166137695
    5. '۰' → logprob: -20.000017166137695
    6. '=' → logprob: -20.125017166137695
    7. '[' → logprob: -20.250017166137695
    8. '  ' → logprob: -20.437517166137695
    9. 's' → logprob: -20.500017166137695
    10. '```' → logprob: -20.812517166137695

Token 216: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32980602979660034
    2. '<|end|>' → logprob: -1.5798060894012451
    3. '    
' → logprob: -3.329806089401245
    4. '
' → logprob: -4.829805850982666
    5. '(deck' → logprob: -5.454805850982666
    6. ',' → logprob: -5.454805850982666
    7. '  
' → logprob: -5.579805850982666
    8. '<|end|>' → logprob: -5.704805850982666
    9. 'deck' → logprob: -6.079805850982666
    10. '\n' → logprob: -6.329805850982666

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03804987296462059
    2. '    
' → logprob: -3.4130499362945557
    3. ' deck' → logprob: -6.663049697875977
    4. '(deck' → logprob: -6.788049697875977
    5. 'deck' → logprob: -7.038049697875977
    6. '
' → logprob: -7.663049697875977
    7. '  
' → logprob: -9.163049697875977
    8. '   
' → logprob: -9.163049697875977
    9. '<|end|>' → logprob: -9.163049697875977
    10. ' 
' → logprob: -9.163049697875977

Token 218: ' deck' (ID: 16942)
  Prédit: ' deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deck' → logprob: -0.6341237425804138
    2. 'deck' (adapté à ' deck') → logprob: -0.7591237425804138
    3. '   ' → logprob: -6.634123802185059
    4. ' 
' → logprob: -9.509123802185059
    5. '(deck' → logprob: -10.134123802185059
    6. ' ' → logprob: -10.759123802185059
    7. '
' → logprob: -10.884123802185059
    8. ' ' → logprob: -11.384123802185059
    9. '    
' → logprob: -11.634123802185059
    10. '```' → logprob: -11.884123802185059

Token 219: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.4758857190608978
    2. '_A' → logprob: -0.9758857488632202
    3. '_' → logprob: -6.97588586807251
    4. ' _' → logprob: -7.10088586807251
    5. ')_' → logprob: -11.350885391235352
    6. '=_' → logprob: -11.975885391235352
    7. 'A' → logprob: -12.350885391235352
    8. ']_' → logprob: -12.600885391235352
    9. '\' → logprob: -13.225885391235352
    10. '[_' → logprob: -13.350885391235352

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03364604339003563
    2. '=' → logprob: -3.4086461067199707
    3. ' ' → logprob: -16.158645629882812
    4. ' =[' → logprob: -16.283645629882812
    5. '=[]' → logprob: -17.033645629882812
    6. ' ' → logprob: -17.158645629882812
    7. '＝' → logprob: -17.533645629882812
    8. '<|end|>' → logprob: -17.658645629882812
    9. '<|end|>' → logprob: -17.783645629882812
    10. '=[' → logprob: -18.533645629882812

Token 221: ' deck' (ID: 16942)
  Prédit: ' deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deck' → logprob: -0.04300136864185333
    2. 'deck' → logprob: -3.168001413345337
    3. ' ' → logprob: -13.543001174926758
    4. '(deck' → logprob: -14.543001174926758
    5. 'deque' → logprob: -15.418001174926758
    6. ' deque' → logprob: -16.668001174926758
    7. 'de' → logprob: -16.793001174926758
    8. ' desk' → logprob: -17.043001174926758
    9. '   ' → logprob: -17.543001174926758
    10. '.deck' → logprob: -17.543001174926758

Token 222: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -4.656383680412546e-05
    2. '[::-' → logprob: -10.000046730041504
    3. 'B' → logprob: -13.875046730041504
    4. '[_' → logprob: -16.125045776367188
    5. '[:-' → logprob: -17.000045776367188
    6. ' _' → logprob: -17.500045776367188
    7. '[-' → logprob: -17.625045776367188
    8. '_A' → logprob: -17.750045776367188
    9. '```' → logprob: -18.250045776367188
    10. '[' → logprob: -18.375045776367188

Token 223: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.001466057845391333
    2. ' =' → logprob: -7.126466274261475
    3. '=' → logprob: -7.376466274261475
    4. ' [' → logprob: -11.126465797424316
    5. '[' → logprob: -11.376465797424316
    6. '=[' → logprob: -12.001465797424316
    7. '[-' → logprob: -14.251465797424316
    8. '   ' → logprob: -15.001465797424316
    9. '[:-' → logprob: -15.001465797424316
    10. '[...,' → logprob: -15.126465797424316

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017150469357147813
    2. '-' → logprob: -6.376715183258057
    3. '[::-' → logprob: -12.001714706420898
    4. '::-' → logprob: -12.376714706420898
    5. ' ' → logprob: -13.751714706420898
    6. ']' → logprob: -14.376714706420898
    7. '```' → logprob: -15.376714706420898
    8. '[' → logprob: -16.0017147064209
    9. ' -' → logprob: -16.2517147064209
    10. '   ' → logprob: -16.3767147064209

Token 225: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010103991371579468
    2. ')' → logprob: -9.500101089477539
    3. ' ]' → logprob: -10.875101089477539
    4. '   ' → logprob: -12.000101089477539
    5. ']
' → logprob: -14.875101089477539
    6. '])' → logprob: -15.000101089477539
    7. '#' → logprob: -16.75010108947754
    8. '']' → logprob: -16.87510108947754
    9. ' ' → logprob: -17.25010108947754
    10. ')]' → logprob: -17.37510108947754

Token 226: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5468308329582214
    2. '   ' → logprob: -1.4218308925628662
    3. ' result' → logprob: -2.546830892562866
    4. ' new' → logprob: -3.171830892562866
    5. 'new' → logprob: -3.171830892562866
    6. '    
' → logprob: -5.046830654144287
    7. 'res' → logprob: -5.671830654144287
    8. ' res' → logprob: -6.796830654144287
    9. 'merged' → logprob: -6.796830654144287
    10. '
' → logprob: -6.921830654144287

Token 227: ' deck' (ID: 16942)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6243816614151001
    2. 'new' → logprob: -0.9993816614151001
    3. '   ' → logprob: -2.6243815422058105
    4. ' new' → logprob: -4.8743815422058105
    5. 'merged' → logprob: -5.1243815422058105
    6. ' result' → logprob: -5.6243815422058105
    7. 'res' → logprob: -5.9993815422058105
    8. 'sh' → logprob: -7.2493815422058105
    9. 'mixed' → logprob: -7.2493815422058105
    10. '    
' → logprob: -7.6243815422058105

Token 228: '_C' (ID: 1720)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0561811700463295
    2. '_new' → logprob: -2.9311811923980713
    3. '_result' → logprob: -8.431180953979492
    4. '_=' → logprob: -8.556180953979492
    5. '_out' → logprob: -8.681180953979492
    6. '_A' → logprob: -8.931180953979492
    7. '_output' → logprob: -9.056180953979492
    8. '=' → logprob: -9.306180953979492
    9. 'new' → logprob: -9.431180953979492
    10. ' =' → logprob: -9.681180953979492

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06205988675355911
    2. '=' → logprob: -2.8120598793029785
    3. '=[]' → logprob: -9.437060356140137
    4. '_' → logprob: -12.437060356140137
    5. '   ' → logprob: -12.687060356140137
    6. ' ' → logprob: -13.437060356140137
    7. ' []' → logprob: -14.312060356140137
    8. '[]' → logprob: -14.812060356140137
    9. ' =[' → logprob: -14.937060356140137
    10. '.extend' → logprob: -15.062060356140137

Token 230: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.4740869104862213
    2. '[]' → logprob: -0.9740868806838989
    3. ' [' → logprob: -12.09908676147461
    4. '[' → logprob: -12.97408676147461
    5. ' []
' → logprob: -13.97408676147461
    6. '[]
' → logprob: -14.59908676147461
    7. ' ' → logprob: -14.97408676147461
    8. '[]}' → logprob: -15.97408676147461
    9. '[]

' → logprob: -16.34908676147461
    10. ' []

' → logprob: -16.47408676147461

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24094660580158234
    2. 'while' → logprob: -2.1159465312957764
    3. ' while' → logprob: -3.2409465312957764
    4. 'i' → logprob: -3.2409465312957764
    5. ' i' → logprob: -4.4909467697143555
    6. 'for' → logprob: -6.7409467697143555
    7. '
' → logprob: -7.1159467697143555
    8. '    
' → logprob: -7.3659467697143555
    9. ' for' → logprob: -7.4909467697143555
    10. 'index' → logprob: -7.6159467697143555

Token 232: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04444822296500206
    2. '   ' → logprob: -3.669448137283325
    3. 'while' → logprob: -4.544448375701904
    4. 'for' → logprob: -5.044448375701904
    5. ' i' → logprob: -7.919448375701904
    6. 'idx' → logprob: -8.169447898864746
    7. 'index' → logprob: -8.794447898864746
    8. 'min' → logprob: -10.044447898864746
    9. ' while' → logprob: -10.419447898864746
    10. ' for' → logprob: -10.794447898864746

Token 233: ' Ré' (ID: 27181)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.048839882016181946
    2. 'index' → logprob: -3.798839807510376
    3. 'idx' → logprob: -4.048840045928955
    4. '   ' → logprob: -5.548840045928955
    5. 'for' → logprob: -6.298840045928955
    6. 'while' → logprob: -7.048840045928955
    7. ' i' → logprob: -7.673840045928955
    8. 'pos' → logprob: -7.673840045928955
    9. 'a' → logprob: -9.298839569091797
    10. ' idx' → logprob: -9.798839569091797

Token 234: 'p' (ID: 79)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4822060763835907
    2. 'm' → logprob: -1.232206106185913
    3. '   ' → logprob: -3.357206106185913
    4. 'for' → logprob: -3.857206106185913
    5. 'ma' → logprob: -4.482205867767334
    6. 'mainder' → logprob: -5.107205867767334
    7. 'i' → logprob: -5.357205867767334
    8. ' for' → logprob: -5.482205867767334
    9. 'p' → logprob: -5.857205867767334
    10. 'part' → logprob: -7.107205867767334

Token 235: 'éter' (ID: 73737)
  Prédit: 'eter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eter' → logprob: -0.1623162031173706
    2. 'éter' → logprob: -2.28731632232666
    3. 'er' → logprob: -3.91231632232666
    4. 'et' → logprob: -4.16231632232666
    5. '   ' → logprob: -5.41231632232666
    6. 'uter' → logprob: -6.28731632232666
    7. 'érer' → logprob: -6.66231632232666
    8. 'e' → logprob: -7.03731632232666
    9. 'ter' → logprob: -7.53731632232666
    10. 'arer' → logprob: -8.03731632232666

Token 236: ' jusqu' (ID: 21961)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8281945586204529
    2. 'for' → logprob: -0.9531945586204529
    3. '   ' → logprob: -1.8281946182250977
    4. ' i' → logprob: -4.953194618225098
    5. ' c' → logprob: -5.828194618225098
    6. 'while' → logprob: -5.828194618225098
    7. 'c' → logprob: -6.578194618225098
    8. ' while' → logprob: -6.703194618225098
    9. 'i' → logprob: -8.078194618225098
    10. ' len' → logprob: -8.203194618225098

Token 237: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.0014799826312810183
    2. '’à' → logprob: -7.0014801025390625
    3. ''au' → logprob: -7.8764801025390625
    4. 'à' → logprob: -9.626480102539062
    5. 'a' → logprob: -9.751480102539062
    6. ''a' → logprob: -10.001480102539062
    7. ''' → logprob: -11.501480102539062
    8. ' à' → logprob: -12.126480102539062
    9. '   ' → logprob: -13.501480102539062
    10. 'au' → logprob: -13.751480102539062

Token 238: ' ce' (ID: 2357)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.9537873268127441
    2. 'len' → logprob: -1.2037873268127441
    3. ' not' → logprob: -1.8287873268127441
    4. 'deck' → logprob: -2.953787326812744
    5. ' deck' → logprob: -3.203787326812744
    6. 'not' → logprob: -3.203787326812744
    7. ' sum' → logprob: -5.328787326812744
    8. 'sum' → logprob: -5.328787326812744
    9. ' n' → logprob: -5.953787326812744
    10. 'n' → logprob: -6.078787326812744

Token 239: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -1.032413125038147
    2. ' len' → logprob: -1.032413125038147
    3. 'len' → logprob: -1.282413125038147
    4. ' not' → logprob: -5.782413005828857
    5. 'que' → logprob: -5.907413005828857
    6. '(len' → logprob: -6.532413005828857
    7. 'not' → logprob: -7.157413005828857
    8. ' c' → logprob: -7.907413005828857
    9. ' n' → logprob: -8.532413482666016
    10. ' qu' → logprob: -8.532413482666016

Token 240: ' A' (ID: 355)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4011249840259552
    2. 'deck' → logprob: -1.7761249542236328
    3. ' len' → logprob: -2.276124954223633
    4. 'not' → logprob: -3.776124954223633
    5. ' deck' → logprob: -4.026124954223633
    6. ' not' → logprob: -4.151124954223633
    7. 'sum' → logprob: -6.651124954223633
    8. ' sum' → logprob: -8.776124954223633
    9. ' ' → logprob: -9.401124954223633
    10. 'False' → logprob: -9.401124954223633

Token 241: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.7485068440437317
    2. ' and' → logprob: -0.9985068440437317
    3. 'and' → logprob: -2.873506784439087
    4. ' or' → logprob: -3.248506784439087
    5. ' et' → logprob: -3.373506784439087
    6. '   ' → logprob: -4.248507022857666
    7. 'ou' → logprob: -4.623507022857666
    8. 'or' → logprob: -6.373507022857666
    9. ' ou' → logprob: -6.373507022857666
    10. ' ' → logprob: -8.373506546020508

Token 242: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.07067902386188507
    2. 'B' → logprob: -2.695678949356079
    3. 'len' → logprob: -8.6956787109375
    4. ' deck' → logprob: -8.6956787109375
    5. ' len' → logprob: -8.8206787109375
    6. ' ' → logprob: -9.6956787109375
    7. 'deck' → logprob: -9.8206787109375
    8. ' not' → logprob: -10.0706787109375
    9. 'not' → logprob: -10.4456787109375
    10. '_B' → logprob: -10.6956787109375

Token 243: ' soient' (ID: 59497)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.7501068115234375
    2. ' and' → logprob: -1.2501068115234375
    3. 'and' → logprob: -2.1251068115234375
    4. 'or' → logprob: -2.5001068115234375
    5. 'et' → logprob: -4.3751068115234375
    6. ' soient' → logprob: -4.8751068115234375
    7. ' aient' → logprob: -5.1251068115234375
    8. '   ' → logprob: -5.7501068115234375
    9. 'ont' → logprob: -6.1251068115234375
    10. 'ou' → logprob: -6.3751068115234375

Token 244: ' v' (ID: 323)
  Prédit: 'vid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vid' → logprob: -0.33453285694122314
    2. ' v' → logprob: -2.3345327377319336
    3. 'vide' → logprob: -2.7095327377319336
    4. 'v' → logprob: -2.8345327377319336
    5. '[]' → logprob: -4.334532737731934
    6. '   ' → logprob: -4.584532737731934
    7. ' tous' → logprob: -4.709532737731934
    8. ' ' → logprob: -4.709532737731934
    9. ' vide' → logprob: -5.709532737731934
    10. 'ép' → logprob: -6.334532737731934

Token 245: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.31509312987327576
    2. 'ide' → logprob: -1.3150931596755981
    3. 'id' → logprob: -6.565093040466309
    4. 'u' → logprob: -9.065093040466309
    5. 'a' → logprob: -9.690093040466309
    6. 'ideo' → logprob: -10.190093040466309
    7. 'oid' → logprob: -10.315093040466309
    8. 'idé' → logprob: -10.565093040466309
    9. '[' → logprob: -10.940093040466309
    10. 'i' → logprob: -11.190093040466309

Token 246: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023821739479899406
    2. 'while' → logprob: -4.398821830749512
    3. ' while' → logprob: -4.523821830749512
    4. '
' → logprob: -8.648821830749512
    5. '    
' → logprob: -9.148821830749512
    6. '	while' → logprob: -9.148821830749512
    7. '```' → logprob: -12.148821830749512
    8. ',' → logprob: -13.398821830749512
    9. 'While' → logprob: -13.398821830749512
    10. '   
' → logprob: -14.023821830749512

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05139144882559776
    2. ' while' → logprob: -3.176391363143921
    3. 'while' → logprob: -4.9263916015625
    4. '
' → logprob: -7.5513916015625
    5. '    
' → logprob: -7.5513916015625
    6. '	while' → logprob: -11.1763916015625
    7. ',' → logprob: -11.6763916015625
    8. ' 
' → logprob: -11.8013916015625
    9. ' for' → logprob: -12.4263916015625
    10. '```' → logprob: -12.5513916015625

Token 248: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7253334522247314
    2. ' while' → logprob: -0.9753334522247314
    3. 'while' (adapté à ' while') → logprob: -1.9753334522247314
    4. '    
' → logprob: -10.100333213806152
    5. '	while' → logprob: -11.975333213806152
    6. '
' → logprob: -12.725333213806152
    7. '    ' → logprob: -13.600333213806152
    8. '```' → logprob: -13.725333213806152
    9. ' i' → logprob: -14.225333213806152
    10. ' 
' → logprob: -14.850333213806152

Token 249: ' deck' (ID: 16942)
  Prédit: ' deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deck' → logprob: -0.01580430008471012
    2. ' len' → logprob: -4.515804290771484
    3. 'deck' → logprob: -5.390804290771484
    4. 'len' → logprob: -9.140804290771484
    5. '(deck' → logprob: -9.640804290771484
    6. ' ' → logprob: -11.890804290771484
    7. '(len' → logprob: -12.515804290771484
    8. ' (' → logprob: -13.640804290771484
    9. '   ' → logprob: -14.265804290771484
    10. 'Deck' → logprob: -14.515804290771484

Token 250: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -4.961759259458631e-06
    2. '_' → logprob: -13.375004768371582
    3. '_C' → logprob: -13.375004768371582
    4. '_B' → logprob: -14.000004768371582
    5. 'A' → logprob: -14.750004768371582
    6. ' _' → logprob: -15.250004768371582
    7. '```' → logprob: -16.3750057220459
    8. '\' → logprob: -17.0000057220459
    9. ')_' → logprob: -17.2500057220459
    10. '}_' → logprob: -17.3750057220459

Token 251: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8675734996795654
    2. 'and' → logprob: -0.8675734996795654
    3. ' or' → logprob: -1.9925734996795654
    4. 'or' → logprob: -3.7425734996795654
    5. '   ' → logprob: -10.992573738098145
    6. 'andr' → logprob: -13.367573738098145
    7. 'et' → logprob: -13.367573738098145
    8. '	or' → logprob: -14.492573738098145
    9. ' ' → logprob: -14.617573738098145
    10. '       ' → logprob: -14.742573738098145

Token 252: ' deck' (ID: 16942)
  Prédit: ' deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deck' → logprob: -0.6931717991828918
    2. 'deck' → logprob: -0.6931717991828918
    3. '(deck' → logprob: -11.193171501159668
    4. ' ' → logprob: -12.568171501159668
    5. '   ' → logprob: -13.193171501159668
    6. 'de' → logprob: -13.318171501159668
    7. '.deck' → logprob: -13.943171501159668
    8. 'deque' → logprob: -14.193171501159668
    9. '	de' → logprob: -14.693171501159668
    10. ' ' → logprob: -14.943171501159668

Token 253: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -2.5776860184123507e-06
    2. 'B' → logprob: -13.75000286102295
    3. '_' → logprob: -13.75000286102295
    4. '_C' → logprob: -15.00000286102295
    5. '_A' → logprob: -17.125001907348633
    6. ' _' → logprob: -17.375001907348633
    7. '_b' → logprob: -18.375001907348633
    8. '```' → logprob: -18.750001907348633
    9. ' B' → logprob: -19.625001907348633
    10. ')_' → logprob: -19.750001907348633

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003606244223192334
    2. ':
' → logprob: -5.62860631942749
    3. ' :' → logprob: -13.003605842590332
    4. '   ' → logprob: -13.003605842590332
    5. ':
' → logprob: -14.878605842590332
    6. ':

' → logprob: -15.003605842590332
    7. '=' → logprob: -15.378605842590332
    8. ' and' → logprob: -15.628605842590332
    9. '):' → logprob: -15.753605842590332
    10. '):
' → logprob: -16.00360679626465

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00046177039621397853
    2. '        
' → logprob: -8.00046157836914
    3. '   ' → logprob: -9.62546157836914
    4. '```' → logprob: -10.75046157836914
    5. '    
' → logprob: -11.75046157836914
    6. '    ' → logprob: -12.25046157836914
    7. '  
' → logprob: -12.25046157836914
    8. ',' → logprob: -12.62546157836914
    9. '
' → logprob: -13.00046157836914
    10. '      ' → logprob: -13.12546157836914

Token 256: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23189379274845123
    2. ' if' → logprob: -2.48189377784729
    3. ' for' → logprob: -2.85689377784729
    4. 'if' → logprob: -3.23189377784729
    5. 'for' → logprob: -3.73189377784729
    6. ' i' → logprob: -6.606894016265869
    7. '        
' → logprob: -7.731894016265869
    8. 'i' → logprob: -8.356893539428711
    9. '   ' → logprob: -8.481893539428711
    10. '        ' → logprob: -9.856893539428711

Token 257: ' Pr' (ID: 2284)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5826290845870972
    2. '       ' → logprob: -1.3326290845870972
    3. ' for' → logprob: -2.4576292037963867
    4. 'if' → logprob: -3.5826292037963867
    5. 'group' → logprob: -4.207629203796387
    6. 'take' → logprob: -4.207629203796387
    7. 'cards' → logprob: -4.707629203796387
    8. ' if' → logprob: -5.457629203796387
    9. ' group' → logprob: -5.707629203796387
    10. '   ' → logprob: -5.707629203796387

Token 258: 'endre' (ID: 9574)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8153429627418518
    2. 'endre' → logprob: -1.315342903137207
    3. 'é' → logprob: -2.065342903137207
    4. 'ev' → logprob: -3.315342903137207
    5. 'end' → logprob: -3.315342903137207
    6. 'ends' → logprob: -3.940342903137207
    7. '   ' → logprob: -3.940342903137207
    8. 'el' → logprob: -3.940342903137207
    9. '       ' → logprob: -5.065342903137207
    10. 'o' → logprob: -5.190342903137207

Token 259: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3425804674625397
    2. ' for' → logprob: -1.5925804376602173
    3. 'c' → logprob: -2.967580556869507
    4. 'for' → logprob: -3.717580556869507
    5. ' min' → logprob: -4.967580318450928
    6. 'deck' → logprob: -6.342580318450928
    7. ' deck' → logprob: -6.717580318450928
    8. 'min' → logprob: -7.842580318450928
    9. '   ' → logprob: -8.717580795288086
    10. ' cards' → logprob: -9.217580795288086

Token 260: ' cartes' (ID: 70753)
  Prédit: ' cartes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cartes' → logprob: -0.15537029504776
    2. ' cards' → logprob: -2.7803702354431152
    3. 'cart' → logprob: -3.9053702354431152
    4. '_cards' → logprob: -4.155370235443115
    5. 'cards' → logprob: -4.280370235443115
    6. ' if' → logprob: -5.030370235443115
    7. '=' → logprob: -5.405370235443115
    8. ' cartas' → logprob: -5.530370235443115
    9. 'if' → logprob: -5.655370235443115
    10. '_cart' → logprob: -5.780370235443115

Token 261: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6452409625053406
    2. ' de' → logprob: -1.7702410221099854
    3. 'from' → logprob: -2.2702410221099854
    4. ' depuis' → logprob: -2.3952410221099854
    5. ' from' → logprob: -2.8952410221099854
    6. ' for' → logprob: -4.020240783691406
    7. ' if' → logprob: -4.145240783691406
    8. ' pour' → logprob: -5.145240783691406
    9. 'for' → logprob: -5.645240783691406
    10. ',' → logprob: -5.770240783691406

Token 262: ' bas' (ID: 3222)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.2014644891023636
    2. ' deck' → logprob: -1.7014645338058472
    3. '(deck' → logprob: -10.951464653015137
    4. 'de' → logprob: -12.076464653015137
    5. 'deque' → logprob: -12.076464653015137
    6. 'def' → logprob: -12.951464653015137
    7. ' ' → logprob: -13.076464653015137
    8. '   ' → logprob: -13.201464653015137
    9. '.deck' → logprob: -13.451464653015137
    10. '```' → logprob: -13.451464653015137

Token 263: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7444291710853577
    2. ' if' → logprob: -1.119429111480713
    3. ' de' → logprob: -2.119429111480713
    4. ',' → logprob: -3.119429111480713
    5. 'if' → logprob: -5.119429111480713
    6. ' for' → logprob: -5.119429111480713
    7. ' of' → logprob: -5.869429111480713
    8. 'de' → logprob: -5.994429111480713
    9. 'from' → logprob: -6.119429111480713
    10. ' (' → logprob: -6.244429111480713

Token 264: ' A' (ID: 355)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.07895610481500626
    2. ' deck' → logprob: -2.578956127166748
    3. '(deck' → logprob: -9.95395565032959
    4. '   ' → logprob: -12.07895565032959
    5. '       ' → logprob: -12.82895565032959
    6. 'deque' → logprob: -13.07895565032959
    7. '```' → logprob: -13.45395565032959
    8. '.deck' → logprob: -13.82895565032959
    9. 'l' → logprob: -14.26645565032959
    10. 'la' → logprob: -14.26645565032959

Token 265: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09262953698635101
    2. ',' → logprob: -2.8426294326782227
    3. ':' → logprob: -4.342629432678223
    4. '   ' → logprob: -4.967629432678223
    5. ' for' → logprob: -5.467629432678223
    6. ' if' → logprob: -6.217629432678223
    7. '
' → logprob: -7.467629432678223
    8. '        
' → logprob: -7.467629432678223
    9. 'for' → logprob: -7.592629432678223
    10. '           ' → logprob: -8.092629432678223

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031507425010204315
    2. ' for' → logprob: -6.378150939941406
    3. ',' → logprob: -7.003150939941406
    4. ':' → logprob: -8.628150939941406
    5. ' if' → logprob: -9.378150939941406
    6. ' and' → logprob: -9.753150939941406
    7. '        
' → logprob: -10.253150939941406
    8. 'for' → logprob: -10.378150939941406
    9. '[:' → logprob: -10.503150939941406
    10. ' =' → logprob: -11.003150939941406

Token 267: ' take' (ID: 2304)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3909626305103302
    2. 'for' → logprob: -1.5159626007080078
    3. ' taken' → logprob: -3.640962600708008
    4. ' group' → logprob: -4.265962600708008
    5. 'cards' → logprob: -4.265962600708008
    6. ' cards' → logprob: -4.640962600708008
    7. 'take' (adapté à ' take') → logprob: -5.140962600708008
    8. ' to' → logprob: -5.265962600708008
    9. 'taken' → logprob: -5.390962600708008
    10. ' take' → logprob: -5.515962600708008

Token 268: '_A' (ID: 6829)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7453159689903259
    2. '_cards' → logprob: -1.2453160285949707
    3. '_A' → logprob: -2.8703160285949707
    4. '_count' → logprob: -3.1203160285949707
    5. '_c' → logprob: -3.1203160285949707
    6. '=' → logprob: -3.1203160285949707
    7. '_a' → logprob: -3.8703160285949707
    8. '   ' → logprob: -4.995316028594971
    9. 'A' → logprob: -5.245316028594971
    10. '_from' → logprob: -5.495316028594971

Token 269: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029850685968995094
    2. '=' → logprob: -3.529850721359253
    3. '   ' → logprob: -9.279850959777832
    4. '    ' → logprob: -13.154850959777832
    5. ' ' → logprob: -13.529850959777832
    6. '_cards' → logprob: -13.654850959777832
    7. '_' → logprob: -13.904850959777832
    8. '       ' → logprob: -14.404850959777832
    9. '  ' → logprob: -15.779850959777832
    10. '	' → logprob: -15.779850959777832

Token 270: ' min' (ID: 1349)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.7127096652984619
    2. ' deck' → logprob: -0.8377096652984619
    3. ' min' → logprob: -2.712709665298462
    4. 'min' → logprob: -4.587709426879883
    5. '   ' → logprob: -8.837709426879883
    6. ' ' → logprob: -9.462709426879883
    7. '(deck' → logprob: -9.462709426879883
    8. '[min' → logprob: -10.337709426879883
    9. 'deque' → logprob: -10.837709426879883
    10. '[' → logprob: -10.900209426879883

Token 271: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.03337663412094116
    2. '(len' → logprob: -3.533376693725586
    3. '(' → logprob: -5.658376693725586
    4. ' (' → logprob: -9.033376693725586
    5. 'len' → logprob: -11.908376693725586
    6. '(deck' → logprob: -12.783376693725586
    7. '(
' → logprob: -13.908376693725586
    8. ' len' → logprob: -14.908376693725586
    9. 'c' → logprob: -15.158376693725586
    10. ' c' → logprob: -15.783376693725586

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011808603449026123
    2. ' ,' → logprob: -9.250118255615234
    3. ',len' → logprob: -10.750118255615234
    4. 'len' → logprob: -14.875118255615234
    5. ',
' → logprob: -17.875118255615234
    6. ')' → logprob: -18.375118255615234
    7. '   ' → logprob: -18.500118255615234
    8. '),' → logprob: -19.250118255615234
    9. ' len' → logprob: -19.500118255615234
    10. '=len' → logprob: -19.750118255615234

Token 273: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.023245712742209435
    2. 'len' → logprob: -3.7732458114624023
    3. '(len' → logprob: -16.523244857788086
    4. '	len' → logprob: -16.773244857788086
    5. '=len' → logprob: -17.648244857788086
    6. '[len' → logprob: -17.898244857788086
    7. ',len' → logprob: -18.773244857788086
    8. '   ' → logprob: -21.023244857788086
    9. ')' → logprob: -21.148244857788086
    10. '<len' → logprob: -22.023244857788086

Token 274: '(deck' (ID: 195320)
  Prédit: '(deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(deck' → logprob: -1.0206720617134124e-05
    2. '(' → logprob: -11.75001049041748
    3. 'deck' → logprob: -13.00001049041748
    4. ' deck' → logprob: -17.250009536743164
    5. '(
' → logprob: -18.375009536743164
    6. ' (' → logprob: -19.375009536743164
    7. '(depth' → logprob: -19.625009536743164
    8. '(de' → logprob: -19.625009536743164
    9. '.deck' → logprob: -20.375009536743164
    10. 'Deck' → logprob: -20.750009536743164

Token 275: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -4.320199877838604e-07
    2. 'A' → logprob: -14.875
    3. '_' → logprob: -19.375
    4. ')_' → logprob: -20.125
    5. ' _' → logprob: -21.25
    6. ')' → logprob: -22.0
    7. '_a' → logprob: -22.375
    8. '_B' → logprob: -22.875
    9. '```' → logprob: -23.0
    10. '_)' → logprob: -23.0

Token 276: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6932609677314758
    2. '))
' → logprob: -0.6932609677314758
    3. ')' → logprob: -9.81826114654541
    4. '))
' → logprob: -10.56826114654541
    5. ')
' → logprob: -10.94326114654541
    6. ' ))
' → logprob: -11.69326114654541
    7. ' ))' → logprob: -13.06826114654541
    8. '))

' → logprob: -13.31826114654541
    9. '));' → logprob: -13.69326114654541
    10. '   ' → logprob: -13.94326114654541

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04068104177713394
    2. ' for' → logprob: -4.290680885314941
    3. '        
' → logprob: -4.540680885314941
    4. 'for' → logprob: -5.290680885314941
    5. '
' → logprob: -5.665680885314941
    6. ')' → logprob: -5.915680885314941
    7. '   ' → logprob: -6.915680885314941
    8. '    
' → logprob: -7.415680885314941
    9. '<|end|>' → logprob: -7.540680885314941
    10. ')
' → logprob: -7.665680885314941

Token 278: ' for' (ID: 395)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.5309067368507385
    2. ' deck' → logprob: -2.0309066772460938
    3. '       ' → logprob: -2.4059066772460938
    4. ' for' → logprob: -2.5309066772460938
    5. 'for' (adapté à ' for') → logprob: -3.0309066772460938
    6. 'cards' → logprob: -3.4059066772460938
    7. ' cards' → logprob: -3.9059066772460938
    8. ' if' → logprob: -6.155906677246094
    9. 'if' → logprob: -6.405906677246094
    10. ' taken' → logprob: -7.155906677246094

Token 279: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.23737770318984985
    2. ' i' → logprob: -1.737377643585205
    3. '_' → logprob: -3.487377643585205
    4. 'i' → logprob: -5.487377643585205
    5. ' ' → logprob: -8.112378120422363
    6. '_i' → logprob: -8.112378120422363
    7. '	i' → logprob: -13.362378120422363
    8. ' card' → logprob: -13.612378120422363
    9. '__' → logprob: -14.362378120422363
    10. ' ' → logprob: -14.487378120422363

Token 280: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002186545403674245
    2. 'in' → logprob: -6.1271867752075195
    3. ' ' → logprob: -14.12718677520752
    4. 'range' → logprob: -15.50218677520752
    5. 's' → logprob: -16.377185821533203
    6. ',' → logprob: -16.502185821533203
    7. '  ' → logprob: -16.877185821533203
    8. 'import' → logprob: -17.002185821533203
    9. ' ' → logprob: -17.377185821533203
    10. '	in' → logprob: -17.377185821533203

Token 281: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47408589720726013
    2. 'range' → logprob: -0.9740859270095825
    3. 'deck' → logprob: -12.224085807800293
    4. ' deck' → logprob: -12.849085807800293
    5. '	range' → logprob: -14.599085807800293
    6. ' ' → logprob: -14.849085807800293
    7. '   ' → logprob: -15.599085807800293
    8. '(range' → logprob: -15.974085807800293
    9. 'rang' → logprob: -15.974085807800293
    10. '  ' → logprob: -17.22408676147461

Token 282: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0002880337997339666
    2. 'take' → logprob: -8.250288009643555
    3. ' take' → logprob: -10.875288009643555
    4. 't' → logprob: -12.250288009643555
    5. ' (' → logprob: -13.250288009643555
    6. '(' → logprob: -14.125288009643555
    7. '	t' → logprob: -14.750288009643555
    8. 'tak' → logprob: -18.125288009643555
    9. ' t' → logprob: -19.125288009643555
    10. '_take' → logprob: -19.250288009643555

Token 283: 'ake' (ID: 814)
  Prédit: 'ake'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ake' → logprob: -0.10370059311389923
    2. 'take' → logprob: -2.353700637817383
    3. ' take' → logprob: -5.728700637817383
    4. '_take' → logprob: -9.603700637817383
    5. ' ake' → logprob: -9.978700637817383
    6. ' ' → logprob: -10.603700637817383
    7. '   ' → logprob: -10.728700637817383
    8. 'a' → logprob: -10.728700637817383
    9. 'ak' → logprob: -11.478700637817383
    10. 'AKE' → logprob: -11.728700637817383

Token 284: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.0009606543462723494
    2. 'take' → logprob: -7.125960826873779
    3. 'A' → logprob: -9.125960350036621
    4. ' take' → logprob: -11.125960350036621
    5. '_take' → logprob: -11.500960350036621
    6. '   ' → logprob: -11.875960350036621
    7. ')' → logprob: -12.625960350036621
    8. '       ' → logprob: -13.250960350036621
    9. ' ' → logprob: -13.250960350036621
    10. 'ake' → logprob: -13.625960350036621

Token 285: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20170852541923523
    2. '):' → logprob: -1.7017085552215576
    3. ' ):
' → logprob: -8.951708793640137
    4. ' ):' → logprob: -9.701708793640137
    5. '):
' → logprob: -9.826708793640137
    6. ')' → logprob: -10.576708793640137
    7. '   ' → logprob: -10.701708793640137
    8. '):

' → logprob: -14.201708793640137
    9. ':' → logprob: -14.326708793640137
    10. '       ' → logprob: -14.951708793640137

Token 286: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051890142261981964
    2. '           ' → logprob: -3.0518901348114014
    3. ' deck' → logprob: -6.6768903732299805
    4. '```' → logprob: -7.6768903732299805
    5. '        
' → logprob: -8.17689037322998
    6. '   ' → logprob: -8.17689037322998
    7. '
' → logprob: -8.30189037322998
    8. 'deck' → logprob: -8.80189037322998
    9. '	       ' → logprob: -9.55189037322998
    10. '<|end|>' → logprob: -9.67689037322998

Token 287: ' deck' (ID: 16942)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' (adapté à ' deck') → logprob: -0.03739288076758385
    2. ' deck' → logprob: -3.5373928546905518
    3. '           ' → logprob: -4.912393093109131
    4. '               ' → logprob: -8.537392616271973
    5. '   ' → logprob: -11.162392616271973
    6. '(deck' → logprob: -11.412392616271973
    7. '       ' → logprob: -11.787392616271973
    8. 'token' → logprob: -12.037392616271973
    9. 'card' → logprob: -12.037392616271973
    10. 'deque' → logprob: -12.412392616271973

Token 288: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.12694606184959412
    2. '_A' → logprob: -2.126945972442627
    3. '_' → logprob: -12.001946449279785
    4. 'C' → logprob: -12.001946449279785
    5. 'A' → logprob: -12.126946449279785
    6. ' _' → logprob: -16.12694549560547
    7. '_B' → logprob: -16.37694549560547
    8. '	C' → logprob: -17.37694549560547
    9. '_D' → logprob: -17.62694549560547
    10. '   ' → logprob: -17.62694549560547

Token 289: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00027015688829123974
    2. '.' → logprob: -8.250269889831543
    3. '.extend' → logprob: -11.750269889831543
    4. 'append' → logprob: -15.000269889831543
    5. '.app' → logprob: -15.375269889831543
    6. ' .' → logprob: -15.625269889831543
    7. '.ap' → logprob: -16.00027084350586
    8. '   ' → logprob: -16.50027084350586
    9. ' +=' → logprob: -16.87527084350586
    10. '+=' → logprob: -18.00027084350586

Token 290: '(deck' (ID: 195320)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.31385520100593567
    2. '(deck' → logprob: -1.3138551712036133
    3. ' deck' → logprob: -7.438855171203613
    4. '(' → logprob: -12.188855171203613
    5. '.deck' → logprob: -16.93885612487793
    6. '(
' → logprob: -16.93885612487793
    7. '   ' → logprob: -17.06385612487793
    8. 'Deck' → logprob: -17.18885612487793
    9. ' (' → logprob: -18.93885612487793
    10. 'deque' → logprob: -19.06385612487793

Token 291: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -1.1472419600977446e-06
    2. 'A' → logprob: -13.750000953674316
    3. '```' → logprob: -18.875001907348633
    4. '   ' → logprob: -19.500001907348633
    5. '	A' → logprob: -21.000001907348633
    6. ' _' → logprob: -21.500001907348633
    7. '[_' → logprob: -21.750001907348633
    8. '[A' → logprob: -21.750001907348633
    9. '_C' → logprob: -21.875001907348633
    10. '"_' → logprob: -22.000001907348633

Token 292: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -8.180258191714529e-06
    2. 'pop' → logprob: -12.250008583068848
    3. '.' → logprob: -12.750008583068848
    4. ' .' → logprob: -15.000008583068848
    5. ' pop' → logprob: -16.87500762939453
    6. '   ' → logprob: -17.62500762939453
    7. '_pop' → logprob: -18.62500762939453
    8. '	pop' → logprob: -18.87500762939453
    9. '.p' → logprob: -19.00000762939453
    10. ').' → logprob: -19.50000762939453

Token 293: '(' (ID: 7)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07010138034820557
    2. '()' → logprob: -2.820101261138916
    3. '(' → logprob: -4.820101261138916
    4. '())
' → logprob: -11.195101737976074
    5. '0' → logprob: -11.320101737976074
    6. '()
' → logprob: -13.445101737976074
    7. '(-' → logprob: -13.445101737976074
    8. ' ())' → logprob: -13.695101737976074
    9. '()]' → logprob: -14.195101737976074
    10. '();)' → logprob: -14.195101737976074

Token 294: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.141186450899113e-05
    2. ')' → logprob: -10.875020980834961
    3. '))' → logprob: -13.125020980834961
    4. ' ' → logprob: -15.125020980834961
    5. '-' → logprob: -16.00002098083496
    6. '()' → logprob: -18.50002098083496
    7. '(' → logprob: -20.00002098083496
    8. '   ' → logprob: -20.00002098083496
    9. ')))' → logprob: -21.25002098083496
    10. '```' → logprob: -21.25002098083496

Token 295: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011066209524869919
    2. ')' → logprob: -4.511066436767578
    3. '))
' → logprob: -11.386066436767578
    4. ' ))' → logprob: -12.761066436767578
    5. ')))' → logprob: -12.886066436767578
    6. ')
' → logprob: -14.011066436767578
    7. '       ' → logprob: -15.511066436767578
    8. '),' → logprob: -15.636066436767578
    9. ' )' → logprob: -15.761066436767578
    10. '))

' → logprob: -16.386066436767578

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008962811902165413
    2. '
' → logprob: -5.383962631225586
    3. '        
' → logprob: -5.508962631225586
    4. '```' → logprob: -9.633962631225586
    5. '<|end|>' → logprob: -9.883962631225586
    6. '  
' → logprob: -9.883962631225586
    7. '   ' → logprob: -10.008962631225586
    8. '    
' → logprob: -10.883962631225586
    9. ' 
' → logprob: -11.883962631225586
    10. '
' → logprob: -12.133962631225586

Token 297: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002811199810821563
    2. '#' (adapté à ' #') → logprob: -8.50028133392334
    3. '        
' → logprob: -10.12528133392334
    4. '   ' → logprob: -11.12528133392334
    5. '
' → logprob: -11.25028133392334
    6. ' #' → logprob: -12.25028133392334
    7. 'if' → logprob: -12.62528133392334
    8. 'take' → logprob: -14.50028133392334
    9. '           ' → logprob: -14.75028133392334
    10. '      ' → logprob: -15.37528133392334

Token 298: ' Pr' (ID: 2284)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.17600658535957336
    2. '       ' → logprob: -2.176006555557251
    3. '#' → logprob: -3.176006555557251
    4. ' take' → logprob: -5.17600679397583
    5. ' #' → logprob: -8.051006317138672
    6. '   ' → logprob: -9.426006317138672
    7. 'if' → logprob: -10.301006317138672
    8. '        
' → logprob: -11.551006317138672
    9. '.take' → logprob: -12.051006317138672
    10. 'Take' → logprob: -12.176006317138672

Token 299: 'endre' (ID: 9574)
  Prédit: 'endre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endre' → logprob: -1.3856492842023727e-06
    2. 'andre' → logprob: -14.500000953674316
    3. 'nd' → logprob: -14.875000953674316
    4. 'r' → logprob: -16.375001907348633
    5. 'prendre' → logprob: -16.375001907348633
    6. 'endr' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.000001907348633
    8. 'ende' → logprob: -17.000001907348633
    9. 'endres' → logprob: -17.375001907348633
    10. '       ' → logprob: -17.500001907348633

Token 300: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.020547257736325264
    2. 'c' → logprob: -3.8955471515655518
    3. '_c' → logprob: -13.270546913146973
    4. ' ' → logprob: -13.395546913146973
    5. ' take' → logprob: -14.395546913146973
    6. '	c' → logprob: -14.895546913146973
    7. '_' → logprob: -14.895546913146973
    8. ' ' → logprob: -15.770546913146973
    9. 'take' → logprob: -15.770546913146973
    10. '   ' → logprob: -16.27054786682129

Token 301: ' cartes' (ID: 70753)
  Prédit: '_cart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cart' → logprob: -0.4820464849472046
    2. ' cartes' → logprob: -1.7320464849472046
    3. 'cart' → logprob: -1.8570464849472046
    4. ' cart' → logprob: -3.107046604156494
    5. ' cartas' → logprob: -6.607046604156494
    6. '_cards' → logprob: -6.607046604156494
    7. 'car' → logprob: -7.857046604156494
    8. '_c' → logprob: -7.857046604156494
    9. 'cards' → logprob: -7.982046604156494
    10. ' cards' → logprob: -8.232046127319336

Token 302: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.021510520949959755
    2. 'du' → logprob: -4.271510601043701
    3. ' from' → logprob: -5.396510601043701
    4. 'from' → logprob: -6.021510601043701
    5. ' de' → logprob: -8.771510124206543
    6. ' ' → logprob: -9.646510124206543
    7. 'de' → logprob: -10.271510124206543
    8. ' ' → logprob: -10.271510124206543
    9. '_du' → logprob: -10.521510124206543
    10. '       ' → logprob: -10.896510124206543

Token 303: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.1584659367799759
    2. 'bottom' → logprob: -2.15846586227417
    3. ' bas' → logprob: -3.90846586227417
    4. 'deck' → logprob: -5.28346586227417
    5. 'B' → logprob: -5.40846586227417
    6. 'b' → logprob: -7.03346586227417
    7. ' bottom' → logprob: -8.033466339111328
    8. '_bas' → logprob: -9.533466339111328
    9. 'bot' → logprob: -10.408466339111328
    10. ' B' → logprob: -10.533466339111328

Token 304: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.006899251136928797
    2. 'de' → logprob: -5.006899356842041
    3. ' of' → logprob: -9.506898880004883
    4. '       ' → logprob: -9.506898880004883
    5. 'from' → logprob: -11.506898880004883
    6. '   ' → logprob: -12.006898880004883
    7. '_de' → logprob: -12.631898880004883
    8. '(de' → logprob: -12.631898880004883
    9. '(' → logprob: -12.881898880004883
    10. ' (' → logprob: -13.631898880004883

Token 305: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.20271576941013336
    2. ' B' → logprob: -1.7027157545089722
    3. 'deck' → logprob: -6.702715873718262
    4. ' deck' → logprob: -9.577715873718262
    5. ' ' → logprob: -12.452715873718262
    6. '_B' → logprob: -15.077715873718262
    7. '(deck' → logprob: -15.202715873718262
    8. 'b' → logprob: -15.827715873718262
    9. '   ' → logprob: -15.952715873718262
    10. '  ' → logprob: -16.827714920043945

Token 306: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002767094410955906
    2. '
' → logprob: -8.500276565551758
    3. '<|end|>' → logprob: -10.375276565551758
    4. '        
' → logprob: -10.625276565551758
    5. '   ' → logprob: -12.625276565551758
    6. '           ' → logprob: -13.000276565551758
    7. '<|end|>' → logprob: -13.125276565551758
    8. ',' → logprob: -13.375276565551758
    9. '```' → logprob: -14.000276565551758
    10. ':
' → logprob: -14.375276565551758

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023905178532004356
    2. 'take' → logprob: -6.627390384674072
    3. ' take' → logprob: -7.002390384674072
    4. '=' → logprob: -9.75239086151123
    5. ' =' → logprob: -10.50239086151123
    6. ',' → logprob: -10.87739086151123
    7. '.take' → logprob: -11.50239086151123
    8. '        
' → logprob: -11.87739086151123
    9. '           ' → logprob: -12.25239086151123
    10. '
' → logprob: -12.50239086151123

Token 308: ' take' (ID: 2304)
  Prédit: ' take'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' take' → logprob: -0.0891278013586998
    2. 'take' (adapté à ' take') → logprob: -2.464127779006958
    3. '       ' → logprob: -8.589127540588379
    4. '.take' → logprob: -15.089127540588379
    5. ' if' → logprob: -15.214127540588379
    6. '
' → logprob: -15.339127540588379
    7. ' c' → logprob: -15.464127540588379
    8. '        
' → logprob: -15.714127540588379
    9. '   ' → logprob: -15.839127540588379
    10. 'c' → logprob: -16.214128494262695

Token 309: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -1.7120533811976202e-05
    2. '_' → logprob: -11.750017166137695
    3. '=' → logprob: -12.500017166137695
    4. ' =' → logprob: -13.000017166137695
    5. 'B' → logprob: -13.500017166137695
    6. '=_' → logprob: -14.375017166137695
    7. '```' → logprob: -14.625017166137695
    8. '_b' → logprob: -15.000017166137695
    9. '_A' → logprob: -15.500017166137695
    10. ' _' → logprob: -16.875017166137695

Token 310: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602243334054947
    2. '=' → logprob: -1.9102243185043335
    3. '=min' → logprob: -15.910223960876465
    4. ' ' → logprob: -17.28522491455078
    5. '   ' → logprob: -17.91022491455078
    6. 'min' → logprob: -19.28522491455078
    7. '  ' → logprob: -20.16022491455078
    8. ' min' → logprob: -20.78522491455078
    9. ' ' → logprob: -21.28522491455078
    10. ',' → logprob: -21.53522491455078

Token 311: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.25192907452583313
    2. 'min' → logprob: -1.5019290447235107
    3. '(min' → logprob: -17.001928329467773
    4. '0' → logprob: -18.251928329467773
    5. '	min' → logprob: -19.126928329467773
    6. '[min' → logprob: -19.251928329467773
    7. '=min' → logprob: -19.376928329467773
    8. '.min' → logprob: -20.626928329467773
    9. ' ' → logprob: -20.626928329467773
    10. '_min' → logprob: -20.876928329467773

Token 312: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.023427393287420273
    2. '(' → logprob: -3.7734274864196777
    3. 'c' → logprob: -8.64842700958252
    4. '(
' → logprob: -12.64842700958252
    5. ' (' → logprob: -12.77342700958252
    6. ' c' → logprob: -15.14842700958252
    7. ',' → logprob: -17.023427963256836
    8. ')c' → logprob: -17.148427963256836
    9. '(

' → logprob: -17.773427963256836
    10. ')' → logprob: -18.023427963256836

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0087516784551553e-05
    2. ',len' → logprob: -12.25001049041748
    3. ' ,' → logprob: -12.37501049041748
    4. '(len' → logprob: -14.87501049041748
    5. '(' → logprob: -15.25001049041748
    6. ',
' → logprob: -15.87501049041748
    7. 'len' → logprob: -16.500009536743164
    8. ',length' → logprob: -17.125009536743164
    9. '   ' → logprob: -17.375009536743164
    10. ',c' → logprob: -17.625009536743164

Token 314: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.16023103892803192
    2. ' len' → logprob: -1.9102309942245483
    3. '(len' → logprob: -11.91023063659668
    4. ',len' → logprob: -15.66023063659668
    5. '[len' → logprob: -17.28523063659668
    6. '	len' → logprob: -18.53523063659668
    7. '=len' → logprob: -19.16023063659668
    8. ',' → logprob: -20.03523063659668
    9. '<len' → logprob: -20.03523063659668
    10. '.len' → logprob: -21.16023063659668

Token 315: '(deck' (ID: 195320)
  Prédit: '(deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(deck' → logprob: -1.0325924449716695e-05
    2. 'deck' → logprob: -11.50001049041748
    3. '(' → logprob: -16.500009536743164
    4. '(
' → logprob: -20.750009536743164
    5. ' deck' → logprob: -20.875009536743164
    6. '.deck' → logprob: -21.000009536743164
    7. '(dec' → logprob: -21.875009536743164
    8. '(board' → logprob: -22.250009536743164
    9. '(depth' → logprob: -22.375009536743164
    10. '(b' → logprob: -23.125009536743164

Token 316: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.008450273424386978
    2. '(deck' → logprob: -5.258450508117676
    3. 'deck' → logprob: -5.758450508117676
    4. ' deck' → logprob: -10.258450508117676
    5. 'B' → logprob: -11.008450508117676
    6. '_de' → logprob: -13.758450508117676
    7. 'de' → logprob: -14.633450508117676
    8. 'Deck' → logprob: -14.758450508117676
    9. '.deck' → logprob: -15.008450508117676
    10. ')' → logprob: -15.008450508117676

Token 317: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.06218009814620018
    2. '))' → logprob: -2.8121800422668457
    3. ')
' → logprob: -8.687180519104004
    4. ')' → logprob: -10.187180519104004
    5. '       ' → logprob: -13.062180519104004
    6. '))
' → logprob: -13.812180519104004
    7. ' ))
' → logprob: -14.062180519104004
    8. ')):
' → logprob: -14.187180519104004
    9. '   ' → logprob: -14.562180519104004
    10. '):
' → logprob: -14.562180519104004

Token 318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017198040150105953
    2. ' for' → logprob: -6.751719951629639
    3. 'for' → logprob: -8.00171947479248
    4. '<|end|>' → logprob: -8.75171947479248
    5. '   ' → logprob: -10.00171947479248
    6. '	for' → logprob: -12.62671947479248
    7. '<|end|>' → logprob: -12.75171947479248
    8. '```' → logprob: -13.37671947479248
    9. '           ' → logprob: -14.12671947479248
    10. '        
' → logprob: -14.37671947479248

Token 319: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0011705794604495168
    2. ' for' → logprob: -6.751170635223389
    3. '       ' → logprob: -15.37617015838623
    4. '	for' → logprob: -16.376171112060547
    5. '   ' → logprob: -17.251171112060547
    6. ' ' → logprob: -22.626171112060547
    7. '_for' → logprob: -22.751171112060547
    8. '```' → logprob: -22.876171112060547
    9. '           ' → logprob: -23.876171112060547
    10. 'For' → logprob: -24.251171112060547

Token 320: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.31326377391815186
    2. '_' → logprob: -1.3132637739181519
    3. ' ' → logprob: -13.313263893127441
    4. ' ' → logprob: -15.813263893127441
    5. ' range' → logprob: -16.813262939453125
    6. ' in' → logprob: -16.938262939453125
    7. ' _
' → logprob: -17.313262939453125
    8. '_range' → logprob: -17.688262939453125
    9. '	' → logprob: -18.063262939453125
    10. '_in' → logprob: -18.313262939453125

Token 321: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12292329221963882
    2. '_' → logprob: -2.7479233741760254
    3. 'range' → logprob: -3.8729233741760254
    4. 'in' → logprob: -3.8729233741760254
    5. ' range' → logprob: -4.622923374176025
    6. ' _' → logprob: -8.747922897338867
    7. ' ' → logprob: -11.622922897338867
    8. '_range' → logprob: -11.997922897338867
    9. 'import' → logprob: -12.372922897338867
    10. 's' → logprob: -13.247922897338867

Token 322: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47407785058021545
    2. ' range' → logprob: -0.9740778207778931
    3. '_' → logprob: -14.474078178405762
    4. '(range' → logprob: -15.474078178405762
    5. '_range' → logprob: -16.474077224731445
    6. '	range' → logprob: -17.724077224731445
    7. '    ' → logprob: -18.224077224731445
    8. ' ' → logprob: -18.599077224731445
    9. ' _' → logprob: -18.599077224731445
    10. '   ' → logprob: -19.224077224731445

Token 323: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.00016027313540689647
    2. 'take' → logprob: -8.750160217285156
    3. 't' → logprob: -14.000160217285156
    4. ' take' → logprob: -14.125160217285156
    5. '(' → logprob: -15.375160217285156
    6. ' (' → logprob: -17.375160217285156
    7. '(range' → logprob: -18.000160217285156
    8. '	t' → logprob: -19.125160217285156
    9. '_take' → logprob: -19.375160217285156
    10. 'tak' → logprob: -19.625160217285156

Token 324: 'ake' (ID: 814)
  Prédit: 'ake'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ake' → logprob: -0.4287874698638916
    2. 'take' → logprob: -1.0537874698638916
    3. ' take' → logprob: -10.178787231445312
    4. 'ke' → logprob: -11.053787231445312
    5. 'ak' → logprob: -11.178787231445312
    6. '_take' → logprob: -12.428787231445312
    7. '_B' → logprob: -12.678787231445312
    8. 'AKE' → logprob: -12.803787231445312
    9. '   ' → logprob: -13.303787231445312
    10. 'ask' → logprob: -14.303787231445312

Token 325: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.005947640631347895
    2. 'take' → logprob: -5.380947589874268
    3. 'B' → logprob: -6.630947589874268
    4. ' take' → logprob: -12.005948066711426
    5. '```' → logprob: -14.755948066711426
    6. '_take' → logprob: -15.505948066711426
    7. ')' → logprob: -15.505948066711426
    8. '   ' → logprob: -15.755948066711426
    9. 'Б' → logprob: -16.50594711303711
    10. 'Take' → logprob: -16.63094711303711

Token 326: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.037706904113292694
    2. '):' → logprob: -3.4127068519592285
    3. ':
' → logprob: -6.4127068519592285
    4. ':' → logprob: -6.9127068519592285
    5. '           ' → logprob: -7.0377068519592285
    6. '       ' → logprob: -8.662707328796387
    7. '   ' → logprob: -8.787707328796387
    8. ',' → logprob: -9.412707328796387
    9. '):
' → logprob: -10.037707328796387
    10. '():
' → logprob: -10.787707328796387

Token 327: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003927368205040693
    2. 'deck' → logprob: -5.878927230834961
    3. '   ' → logprob: -7.128927230834961
    4. ' deck' → logprob: -8.128927230834961
    5. '       ' → logprob: -11.253927230834961
    6. '               ' → logprob: -12.253927230834961
    7. '(deck' → logprob: -12.503927230834961
    8. '          ' → logprob: -13.753927230834961
    9. ' ' → logprob: -14.503927230834961
    10. '         ' → logprob: -14.753927230834961

Token 328: ' deck' (ID: 16942)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' (adapté à ' deck') → logprob: -1.0325924449716695e-05
    2. ' deck' → logprob: -11.87501049041748
    3. '           ' → logprob: -12.75001049041748
    4. '       ' → logprob: -15.50001049041748
    5. '   ' → logprob: -16.500009536743164
    6. '               ' → logprob: -18.375009536743164
    7. 'deque' → logprob: -19.250009536743164
    8. 'desk' → logprob: -19.500009536743164
    9. '(deck' → logprob: -19.625009536743164
    10. '
' → logprob: -19.750009536743164

Token 329: '_C' (ID: 1720)
  Prédit: '_B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.006715728435665369
    2. '_C' → logprob: -5.006715774536133
    3. '_A' → logprob: -16.256715774536133
    4. '```' → logprob: -16.631715774536133
    5. 'B' → logprob: -17.631715774536133
    6. '_' → logprob: -18.006715774536133
    7. 'C' → logprob: -18.256715774536133
    8. '.append' → logprob: -18.756715774536133
    9. ')_' → logprob: -18.881715774536133
    10. '[' → logprob: -19.131715774536133

Token 330: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005556552205234766
    2. '.' → logprob: -7.500555515289307
    3. 'append' → logprob: -13.250555992126465
    4. ' .' → logprob: -14.250555992126465
    5. '.app' → logprob: -16.12555503845215
    6. '.extend' → logprob: -16.62555503845215
    7. '.Append' → logprob: -17.62555503845215
    8. '   ' → logprob: -18.87555503845215
    9. '.pop' → logprob: -19.25055503845215
    10. ' append' → logprob: -19.37555503845215

Token 331: '(deck' (ID: 195320)
  Prédit: '(deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(deck' → logprob: -7.624555291840807e-05
    2. 'deck' → logprob: -9.500076293945312
    3. '(b' → logprob: -13.625076293945312
    4. '(B' → logprob: -16.625076293945312
    5. '(board' → logprob: -16.750076293945312
    6. '(' → logprob: -18.000076293945312
    7. '(depth' → logprob: -18.875076293945312
    8. ' deck' → logprob: -19.250076293945312
    9. '(bucket' → logprob: -19.875076293945312
    10. '(dead' → logprob: -20.000076293945312

Token 332: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.00043591417488642037
    2. 'B' → logprob: -7.750435829162598
    3. '(deck' → logprob: -13.000435829162598
    4. 'deck' → logprob: -14.125435829162598
    5. '(' → logprob: -14.250435829162598
    6. '```' → logprob: -14.750435829162598
    7. 'b' → logprob: -14.875435829162598
    8. '(B' → logprob: -15.000435829162598
    9. '[' → logprob: -16.375436782836914
    10. '   ' → logprob: -16.625436782836914

Token 333: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -8.77627644513268e-06
    2. 'pop' → logprob: -12.250008583068848
    3. '.' → logprob: -12.500008583068848
    4. ' .' → logprob: -15.250008583068848
    5. '.p' → logprob: -19.250009536743164
    6. '(pop' → logprob: -19.500009536743164
    7. ' pop' → logprob: -20.500009536743164
    8. '	pop' → logprob: -21.625009536743164
    9. ').' → logprob: -21.750009536743164
    10. '   ' → logprob: -22.250009536743164

Token 334: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031797364354133606
    2. '0' → logprob: -5.753179550170898
    3. ' (' → logprob: -13.753179550170898
    4. '   ' → logprob: -15.378179550170898
    5. '(
' → logprob: -15.628179550170898
    6. '[' → logprob: -16.1281795501709
    7. 'def' → logprob: -16.5031795501709
    8. ' ' → logprob: -16.5031795501709
    9. '<|end|>' → logprob: -16.7531795501709
    10. '()' → logprob: -17.8781795501709

Token 335: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.875000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '[' → logprob: -18.125001907348633
    5. ')' → logprob: -18.375001907348633
    6. '۰' → logprob: -18.375001907348633
    7. '   ' → logprob: -19.000001907348633
    8. '<|end|>' → logprob: -19.000001907348633
    9. '```' → logprob: -20.375001907348633
    10. '
' → logprob: -21.125001907348633

Token 336: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008679220452904701
    2. ')' → logprob: -4.758679389953613
    3. '))
' → logprob: -9.883679389953613
    4. '       ' → logprob: -11.508679389953613
    5. ')))' → logprob: -13.383679389953613
    6. '()))' → logprob: -14.258679389953613
    7. ')
' → logprob: -14.633679389953613
    8. ' ))' → logprob: -15.133679389953613
    9. '()' → logprob: -15.758679389953613
    10. '   ' → logprob: -15.883679389953613

Token 337: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04177591949701309
    2. '    
' → logprob: -3.791775941848755
    3. '
' → logprob: -4.541775703430176
    4. 'return' → logprob: -5.041775703430176
    5. '[::-' → logprob: -7.791775703430176
    6. ' return' → logprob: -8.166775703430176
    7. ' 
' → logprob: -8.416775703430176
    8. '  
' → logprob: -8.916775703430176
    9. '        
' → logprob: -10.041775703430176
    10. '```' → logprob: -10.416775703430176

Token 338: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23200902342796326
    2. '
' → logprob: -2.482008934020996
    3. '    
' → logprob: -2.732008934020996
    4. 'return' → logprob: -2.982008934020996
    5. 'deck' → logprob: -5.107008934020996
    6. ' return' → logprob: -6.857008934020996
    7. '

' → logprob: -9.232008934020996
    8. '        
' → logprob: -9.607008934020996
    9. '   
' → logprob: -9.857008934020996
    10. ' 
' → logprob: -9.982008934020996

Token 339: ' deck' (ID: 16942)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04238511621952057
    2. 'deck' → logprob: -3.2923851013183594
    3. ' return' → logprob: -5.792385101318359
    4. '#' → logprob: -7.042385101318359
    5. '   ' → logprob: -8.04238510131836
    6. ' deck' → logprob: -9.79238510131836
    7. 'ret' → logprob: -11.41738510131836
    8. '
' → logprob: -12.16738510131836
    9. 'result' → logprob: -12.54238510131836
    10. '    
' → logprob: -12.54238510131836

Token 340: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.0001290454383706674
    2. 'C' → logprob: -9.750128746032715
    3. ' =' → logprob: -10.125128746032715
    4. '=' → logprob: -11.375128746032715
    5. '_' → logprob: -11.375128746032715
    6. 'return' → logprob: -12.500128746032715
    7. '=C' → logprob: -14.250128746032715
    8. '_=' → logprob: -14.375128746032715
    9. '[::-' → logprob: -14.625128746032715
    10. '	C' → logprob: -14.750128746032715

Token 341: ' contient' (ID: 89067)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0500227212905884
    2. '.reverse' → logprob: -1.1750227212905884
    3. '=' → logprob: -1.5500227212905884
    4. '[::-' → logprob: -2.050022602081299
    5. '=re' → logprob: -9.050023078918457
    6. 'reverse' → logprob: -9.925023078918457
    7. '[:]' → logprob: -10.050023078918457
    8. '_reverse' → logprob: -10.800023078918457
    9. '=[' → logprob: -11.300023078918457
    10. '=
' → logprob: -12.300023078918457

Token 342: ' les' (ID: 1341)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.020956166088581085
    2. 'les' → logprob: -4.645956039428711
    3. 'la' → logprob: -4.770956039428711
    4. ' deck' → logprob: -6.645956039428711
    5. 'le' → logprob: -7.645956039428711
    6. '(deck' → logprob: -7.895956039428711
    7. '[::-' → logprob: -8.145956039428711
    8. ' la' → logprob: -9.395956039428711
    9. 'l' → logprob: -9.520956039428711
    10. ' les' → logprob: -10.645956039428711

Token 343: ' cartes' (ID: 70753)
  Prédit: 'cart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cart' → logprob: -0.10218003392219543
    2. ' cartes' → logprob: -2.352180004119873
    3. 'élé' → logprob: -6.352180004119873
    4. 'car' → logprob: -9.477180480957031
    5. ' cart' → logprob: -9.727180480957031
    6. ' éléments' → logprob: -10.102180480957031
    7. 'cards' → logprob: -11.102180480957031
    8. ' ' → logprob: -11.602180480957031
    9. '_cart' → logprob: -11.602180480957031
    10. '-cart' → logprob: -12.852180480957031

Token 344: ' dans' (ID: 2671)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.0005880602402612567
    2. '#' → logprob: -8.500588417053223
    3. '   ' → logprob: -8.500588417053223
    4. ' #' → logprob: -10.625588417053223
    5. ' en' → logprob: -10.875588417053223
    6. '.reverse' → logprob: -11.000588417053223
    7. ' dans' → logprob: -11.125588417053223
    8. ',' → logprob: -11.250588417053223
    9. '[' → logprob: -11.375588417053223
    10. ' =' → logprob: -11.625588417053223

Token 345: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02111107110977173
    2. ' l' → logprob: -3.896111011505127
    3. 'ordre' → logprob: -8.021111488342285
    4. '[l' → logprob: -9.646111488342285
    5. '	l' → logprob: -10.021111488342285
    6. 'le' → logprob: -10.521111488342285
    7. ''ordre' → logprob: -11.021111488342285
    8. 'leur' → logprob: -11.271111488342285
    9. 'L' → logprob: -11.396111488342285
    10. 'order' → logprob: -11.521111488342285

Token 346: ''ordre' (ID: 124753)
  Prédit: ''ordre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ordre' → logprob: -0.07911449670791626
    2. 'ordre' → logprob: -2.5791144371032715
    3. '’ordre' → logprob: -8.70411491394043
    4. ' ordre' → logprob: -10.45411491394043
    5. ''' → logprob: -10.82911491394043
    6. 'order' → logprob: -12.32911491394043
    7. '[::-' → logprob: -14.07911491394043
    8. ''état' → logprob: -14.20411491394043
    9. 'ordine' → logprob: -14.32911491394043
    10. ''en' → logprob: -14.45411491394043

Token 347: ' du' (ID: 1462)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.8984464406967163
    2. '[::-' → logprob: -0.8984464406967163
    3. 'inverse' → logprob: -2.148446559906006
    4. ' inverse' → logprob: -3.773446559906006
    5. ' deck' → logprob: -4.273446559906006
    6. '(deck' → logprob: -4.648446559906006
    7. 'return' → logprob: -5.523446559906006
    8. '[' → logprob: -5.648446559906006
    9. 'reverse' → logprob: -5.773446559906006
    10. '.reverse' → logprob: -5.773446559906006

Token 348: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.09512677043676376
    2. 'bottom' → logprob: -2.7201268672943115
    3. ' bas' → logprob: -4.220126628875732
    4. 'haut' → logprob: -5.845126628875732
    5. ' bottom' → logprob: -6.595126628875732
    6. 'deck' → logprob: -6.845126628875732
    7. ' haut' → logprob: -6.845126628875732
    8. 'nou' → logprob: -6.970126628875732
    9. 'dess' → logprob: -7.095126628875732
    10. 'top' → logprob: -7.220126628875732

Token 349: ' vers' (ID: 3640)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.6557703018188477
    2. '   ' → logprob: -1.1557703018188477
    3. ',' → logprob: -2.1557703018188477
    4. ' +' → logprob: -4.530770301818848
    5. '+' → logprob: -4.655770301818848
    6. '[' → logprob: -5.405770301818848
    7. ')' → logprob: -5.405770301818848
    8. '_to' → logprob: -6.405770301818848
    9. '
' → logprob: -6.780770301818848
    10. '    
' → logprob: -6.780770301818848

Token 350: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -7.624555291840807e-05
    2. 'len' → logprob: -10.375076293945312
    3. ' le' → logprob: -11.000076293945312
    4. '#' → logprob: -11.375076293945312
    5. 'haut' → logprob: -12.250076293945312
    6. 'la' → logprob: -12.625076293945312
    7. '_le' → logprob: -12.875076293945312
    8. '   ' → logprob: -13.500076293945312
    9. '```' → logprob: -14.375076293945312
    10. 'leur' → logprob: -14.500076293945312

Token 351: ' haut' (ID: 28223)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.001055795350112021
    2. ' haut' → logprob: -7.001055717468262
    3. 'ha' → logprob: -9.376055717468262
    4. 'top' → logprob: -10.376055717468262
    5. 'bas' → logprob: -11.501055717468262
    6. 'som' → logprob: -12.126055717468262
    7. ' ' → logprob: -12.751055717468262
    8. 'dess' → logprob: -13.376055717468262
    9. 'H' → logprob: -13.501055717468262
    10. '#' → logprob: -13.751055717468262

Token 352: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35059669613838196
    2. '   ' → logprob: -1.4755966663360596
    3. '    
' → logprob: -2.8505966663360596
    4. 'return' → logprob: -4.850596904754639
    5. ' return' → logprob: -7.100596904754639
    6. ' 
' → logprob: -8.47559642791748
    7. '
' → logprob: -8.60059642791748
    8. '[::-' → logprob: -9.35059642791748
    9. '  
' → logprob: -9.72559642791748
    10. '        
' → logprob: -10.47559642791748

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45992353558540344
    2. '
' → logprob: -1.209923505783081
    3. '    
' → logprob: -2.834923505783081
    4. 'return' → logprob: -4.58492374420166
    5. ' return' → logprob: -6.83492374420166
    6. ' 
' → logprob: -8.45992374420166
    7. '  
' → logprob: -9.83492374420166
    8. '[::-' → logprob: -9.83492374420166
    9. '   
' → logprob: -10.45992374420166
    10. '        
' → logprob: -10.70992374420166

Token 354: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14813250303268433
    2. 'return' → logprob: -2.148132562637329
    3. ' return' → logprob: -4.27313232421875
    4. '    
' → logprob: -5.39813232421875
    5. '
' → logprob: -6.02313232421875
    6. ' 
' → logprob: -10.27313232421875
    7. '	return' → logprob: -11.27313232421875
    8. 'deck' → logprob: -11.27313232421875
    9. '  
' → logprob: -11.39813232421875
    10. '```' → logprob: -12.14813232421875

Token 355: ' On' (ID: 2160)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01618017442524433
    2. '   ' → logprob: -4.766180038452148
    3. ' return' → logprob: -4.891180038452148
    4. 'deck' → logprob: -10.891180038452148
    5. '
' → logprob: -13.016180038452148
    6. '#' → logprob: -13.516180038452148
    7. 'ret' → logprob: -13.891180038452148
    8. '    
' → logprob: -14.266180038452148
    9. '	return' → logprob: -15.141180038452148
    10. ' ' → logprob: -15.516180038452148

Token 356: ' doit' (ID: 21822)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3530161678791046
    2. ' return' → logprob: -1.2280161380767822
    3. ' retourne' → logprob: -6.603016376495361
    4. '   ' → logprob: -6.978016376495361
    5. 'reverse' → logprob: -6.978016376495361
    6. '_return' → logprob: -7.853016376495361
    7. 'deck' → logprob: -8.228015899658203
    8. 'ret' → logprob: -8.853015899658203
    9. ' reverse' → logprob: -9.353015899658203
    10. ' deck' → logprob: -9.853015899658203

Token 357: ' remettre' (ID: 110405)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5878124833106995
    2. ' return' → logprob: -0.8378124833106995
    3. 'deck' → logprob: -5.837812423706055
    4. ' retourner' → logprob: -5.962812423706055
    5. 'ret' → logprob: -6.212812423706055
    6. 'reverse' → logprob: -6.337812423706055
    7. '   ' → logprob: -6.962812423706055
    8. ' reverse' → logprob: -7.212812423706055
    9. ' deck' → logprob: -8.087812423706055
    10. 're' → logprob: -9.587812423706055

Token 358: ' deck' (ID: 16942)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.16061067581176758
    2. ' deck' → logprob: -1.9106106758117676
    3. '(deck' → logprob: -8.28561019897461
    4. 'le' → logprob: -9.03561019897461
    5. ' le' → logprob: -11.53561019897461
    6. '.deck' → logprob: -13.41061019897461
    7. 'les' → logprob: -13.91061019897461
    8. 'la' → logprob: -14.03561019897461
    9. ' les' → logprob: -14.41061019897461
    10. ' la' → logprob: -14.78561019897461

Token 359: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.00036691725836135447
    2. 'C' → logprob: -8.375367164611816
    3. 'deck' → logprob: -9.750367164611816
    4. '_A' → logprob: -10.500367164611816
    5. '_' → logprob: -10.875367164611816
    6. '(deck' → logprob: -11.375367164611816
    7. '_de' → logprob: -12.250367164611816
    8. '_le' → logprob: -12.500367164611816
    9. '```' → logprob: -13.000367164611816
    10. 'le' → logprob: -13.000367164611816

Token 360: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031675028149038553
    2. ' =' → logprob: -6.628167629241943
    3. '[::-' → logprob: -6.628167629241943
    4. '.reverse' → logprob: -8.003167152404785
    5. '=re' → logprob: -9.753167152404785
    6. 'dans' → logprob: -10.253167152404785
    7. 'reverse' → logprob: -10.503167152404785
    8. 'à' → logprob: -11.253167152404785
    9. 'return' → logprob: -11.503167152404785
    10. '=
' → logprob: -11.753167152404785

Token 361: ' bottom' (ID: 8725)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.38477081060409546
    2. 'ordre' → logprob: -1.6347708702087402
    3. 'bottom' → logprob: -2.7597708702087402
    4. '[::-' → logprob: -3.5097708702087402
    5. ' ordre' → logprob: -4.75977087020874
    6. ' deck' → logprob: -5.13477087020874
    7. 'order' → logprob: -5.50977087020874
    8. 'top' → logprob: -5.63477087020874
    9. ' bottom' → logprob: -6.00977087020874
    10. 'reverse' → logprob: -6.13477087020874

Token 362: '-to' (ID: 6487)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45825839042663574
    2. '=' → logprob: -1.9582583904266357
    3. '_to' → logprob: -2.3332583904266357
    4. '[::-' → logprob: -3.3332583904266357
    5. ' =' → logprob: -4.083258628845215
    6. '   ' → logprob: -4.208258628845215
    7. 'deck' → logprob: -4.458258628845215
    8. '_=' → logprob: -4.458258628845215
    9. '(deck' → logprob: -4.708258628845215
    10. '_C' → logprob: -4.833258628845215

Token 363: '-top' (ID: 16099)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -7.896309739408025e-07
    2. 'bottom' → logprob: -15.375000953674316
    3. '-top' → logprob: -15.625000953674316
    4. 'up' → logprob: -15.875000953674316
    5. ' top' → logprob: -16.375
    6. '_top' → logprob: -16.5
    7. '[top' → logprob: -17.5
    8. 't' → logprob: -19.0
    9. '	top' → logprob: -19.0
    10. '(top' → logprob: -19.375

Token 364: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1545916199684143
    2. '   ' → logprob: -2.5295915603637695
    3. 'return' → logprob: -3.2795915603637695
    4. '[::-' → logprob: -4.1545915603637695
    5. '    
' → logprob: -5.5295915603637695
    6. 'deck' → logprob: -5.9045915603637695
    7. ' return' → logprob: -6.1545915603637695
    8. '
' → logprob: -6.9045915603637695
    9. '  
' → logprob: -8.90459156036377
    10. ' deck' → logprob: -9.90459156036377

Token 365: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3202076554298401
    2. '   ' → logprob: -1.6952075958251953
    3. 'return' → logprob: -2.4452075958251953
    4. 'deck' → logprob: -6.445207595825195
    5. ' deck' → logprob: -6.945207595825195
    6. '    
' → logprob: -7.195207595825195
    7. '
' → logprob: -8.070207595825195
    8. ' 
' → logprob: -9.820207595825195
    9. '    ' → logprob: -11.195207595825195
    10. '```' → logprob: -11.320207595825195

Token 366: ' deck' (ID: 16942)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6829066276550293
    2. 'return' → logprob: -1.1829066276550293
    3. ' return' → logprob: -1.6829066276550293
    4. 'deck' (adapté à ' deck') → logprob: -6.182906627655029
    5. ' deck' → logprob: -7.682906627655029
    6. '    
' → logprob: -9.432907104492188
    7. '
' → logprob: -11.182907104492188
    8. '```' → logprob: -12.432907104492188
    9. '	return' → logprob: -12.807907104492188
    10. ' 
' → logprob: -13.432907104492188

Token 367: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -7.016616291366518e-05
    2. '_' → logprob: -9.625070571899414
    3. 'C' → logprob: -12.875070571899414
    4. '=' → logprob: -14.625070571899414
    5. '_=' → logprob: -14.625070571899414
    6. '=_' → logprob: -15.625070571899414
    7. ' =' → logprob: -16.250070571899414
    8. '\' → logprob: -16.250070571899414
    9. '_A' → logprob: -16.750070571899414
    10. '```' → logprob: -17.000070571899414

Token 368: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23326893150806427
    2. '.reverse' → logprob: -1.7332689762115479
    3. '[::-' → logprob: -3.608268976211548
    4. ' =' → logprob: -5.483268737792969
    5. '=re' → logprob: -9.733268737792969
    6. 'reverse' → logprob: -11.108268737792969
    7. '[:]' → logprob: -11.733268737792969
    8. '.' → logprob: -12.233268737792969
    9. 'return' → logprob: -12.858268737792969
    10. '   ' → logprob: -13.358268737792969

Token 369: ' deck' (ID: 16942)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.005234594456851482
    2. ' deck' → logprob: -5.255234718322754
    3. '(deck' → logprob: -15.005234718322754
    4. 'deque' → logprob: -15.130234718322754
    5. 'desk' → logprob: -16.130233764648438
    6. 'list' → logprob: -16.380233764648438
    7. '.deck' → logprob: -17.505233764648438
    8. 'de' → logprob: -17.755233764648438
    9. '   ' → logprob: -18.880233764648438
    10. 'Deck' → logprob: -19.380233764648438

Token 370: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.003711481112986803
    2. '[::-' → logprob: -5.878711700439453
    3. '_[' → logprob: -7.128711700439453
    4. '_' → logprob: -9.253711700439453
    5. 'C' → logprob: -12.003711700439453
    6. '[_' → logprob: -13.753711700439453
    7. '_.' → logprob: -14.253711700439453
    8. '```' → logprob: -15.128711700439453
    9. '_
' → logprob: -16.003711700439453
    10. '_-' → logprob: -16.128711700439453

Token 371: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.250000953674316
    3. '[:]' → logprob: -16.125
    4. '[:' → logprob: -17.875
    5. ' [' → logprob: -18.375
    6. '[:-' → logprob: -18.5
    7. '[-' → logprob: -18.875
    8. '[
' → logprob: -19.125
    9. '   ' → logprob: -19.5
    10. '.reverse' → logprob: -19.5

Token 372: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ']' → logprob: -12.750004768371582
    3. '[::-' → logprob: -14.375004768371582
    4. '-' → logprob: -15.500004768371582
    5. '```' → logprob: -15.875004768371582
    6. '])' → logprob: -16.625003814697266
    7. 'v' → logprob: -16.625003814697266
    8. ')' → logprob: -16.625003814697266
    9. ' ' → logprob: -17.125003814697266
    10. '::-' → logprob: -17.500003814697266

Token 373: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.372916686814278e-05
    2. ')
' → logprob: -10.2500638961792
    3. '   ' → logprob: -11.2500638961792
    4. ']' → logprob: -11.5000638961792
    5. ')return' → logprob: -12.6250638961792
    6. '<|end|>' → logprob: -14.6250638961792
    7. ' )' → logprob: -14.7500638961792
    8. '}' → logprob: -15.5000638961792
    9. ')

' → logprob: -16.125062942504883
    10. 'return' → logprob: -16.500062942504883

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004135391674935818
    2. 'return' → logprob: -5.504135608673096
    3. ' return' → logprob: -9.879135131835938
    4. '    
' → logprob: -12.379135131835938
    5. '	return' → logprob: -13.754135131835938
    6. '
' → logprob: -15.379135131835938
    7. ':return' → logprob: -16.379135131835938
    8. '```' → logprob: -16.879135131835938
    9. '       ' → logprob: -17.254135131835938
    10. '{return' → logprob: -17.379135131835938

Token 375: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12795940041542053
    2. '   ' → logprob: -2.1279594898223877
    3. ' return' → logprob: -6.877959251403809
    4. '	return' → logprob: -14.627959251403809
    5. 'ret' → logprob: -17.252960205078125
    6. '    
' → logprob: -17.627960205078125
    7. ':return' → logprob: -17.627960205078125
    8. '{return' → logprob: -17.752960205078125
    9. '_return' → logprob: -18.127960205078125
    10. '  ' → logprob: -18.752960205078125

Token 376: ' deck' (ID: 16942)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -9.627176768844947e-05
    2. ' deck' → logprob: -9.250096321105957
    3. '(deck' → logprob: -15.750096321105957
    4. 'desk' → logprob: -19.25009536743164
    5. 'Deck' → logprob: -19.87509536743164
    6. '   ' → logprob: -20.50009536743164
    7. 'deque' → logprob: -20.75009536743164
    8. 'de' → logprob: -21.12509536743164
    9. '.deck' → logprob: -21.12509536743164
    10. 'stack' → logprob: -22.00009536743164

Token 377: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.0002382249804213643
    2. '_' → logprob: -8.375238418579102
    3. 'C' → logprob: -13.125238418579102
    4. '```' → logprob: -13.250238418579102
    5. ' _' → logprob: -13.375238418579102
    6. ''_' → logprob: -14.375238418579102
    7. '[_' → logprob: -15.250238418579102
    8. '._' → logprob: -15.250238418579102
    9. '"_' → logprob: -15.250238418579102
    10. '___' → logprob: -15.625238418579102

Token 378: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 379: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 380: ' main' (ID: 2758)
  Prédit: ' cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cut' → logprob: -0.5114984512329102
    2. ' main' → logprob: -1.8864984512329102
    3. ' perfect' → logprob: -2.51149845123291
    4. ' inter' → logprob: -3.26149845123291
    5. ' shuffle' → logprob: -3.26149845123291
    6. ' in' → logprob: -4.13649845123291
    7. ' bottom' → logprob: -4.51149845123291
    8. 'cut' → logprob: -4.63649845123291
    9. ' riff' → logprob: -5.01149845123291
    10. ' mon' → logprob: -5.13649845123291

Token 381: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00019591135787777603
    2. '(' → logprob: -8.875195503234863
    3. ' ():' → logprob: -10.875195503234863
    4. '():
' → logprob: -11.125195503234863
    5. '()' → logprob: -11.500195503234863
    6. '_' → logprob: -11.750195503234863
    7. '()>' → logprob: -13.750195503234863
    8. ':' → logprob: -14.125195503234863
    9. '():
' → logprob: -14.375195503234863
    10. '_:' → logprob: -14.875195503234863

Token 382: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006349169183522463
    2. ' import' → logprob: -5.631349086761475
    3. ' deck' → logprob: -6.631349086761475
    4. 'import' → logprob: -7.881349086761475
    5. ' n' → logprob: -8.631349563598633
    6. '    
' → logprob: -9.256349563598633
    7. ' input' → logprob: -9.381349563598633
    8. 'n' → logprob: -9.381349563598633
    9. ' line' → logprob: -9.506349563598633
    10. ' code' → logprob: -9.506349563598633

Token 383: ' input' (ID: 3422)
  Prédit: ' deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deck' → logprob: -0.21433337032794952
    2. ' import' → logprob: -2.0893332958221436
    3. '   ' → logprob: -3.2143332958221436
    4. 'deck' → logprob: -4.339333534240723
    5. ' n' → logprob: -4.839333534240723
    6. 'import' → logprob: -6.089333534240723
    7. 'n' → logprob: -7.214333534240723
    8. ' while' → logprob: -7.339333534240723
    9. ' decks' → logprob: -7.464333534240723
    10. ' if' → logprob: -7.714333534240723

Token 384: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7081811428070068
    2. '_line' → logprob: -1.0831811428070068
    3. '_data' → logprob: -2.583181142807007
    4. '_' → logprob: -3.083181142807007
    5. '_lines' → logprob: -3.208181142807007
    6. '_str' → logprob: -6.083181381225586
    7. '_l' → logprob: -6.708181381225586
    8. '_cards' → logprob: -6.958181381225586
    9. '(' → logprob: -7.583181381225586
    10. 's' → logprob: -7.708181381225586

Token 385: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02085844986140728
    2. '=' → logprob: -3.8958585262298584
    3. '()' → logprob: -8.145858764648438
    4. '   ' → logprob: -10.895858764648438
    5. '=[]' → logprob: -12.895858764648438
    6. '_' → logprob: -13.270858764648438
    7. ' ' → logprob: -14.020858764648438
    8. '[]' → logprob: -14.270858764648438
    9. '[' → logprob: -14.895858764648438
    10. '  ' → logprob: -14.895858764648438

Token 386: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3869006633758545
    2. ' sys' → logprob: -1.1369006633758545
    3. '[' → logprob: -10.761900901794434
    4. ' [' → logprob: -12.261900901794434
    5. '	sys' → logprob: -13.886900901794434
    6. '=sys' → logprob: -13.886900901794434
    7. '[]' → logprob: -14.136900901794434
    8. '(sys' → logprob: -14.386900901794434
    9. '   ' → logprob: -15.011900901794434
    10. '[]
' → logprob: -16.011899948120117

Token 387: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.002029277151450515
    2. '.' → logprob: -6.5020294189453125
    3. '.stdout' → logprob: -8.377029418945312
    4. '.argv' → logprob: -8.377029418945312
    5. '.std' → logprob: -9.752029418945312
    6. '.readline' → logprob: -12.752029418945312
    7. '.st' → logprob: -13.502029418945312
    8. ' .' → logprob: -14.002029418945312
    9. 'stdin' → logprob: -14.127029418945312
    10. '._' → logprob: -14.627029418945312

Token 388: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.064644455909729
    2. '.readlines' → logprob: -2.8146443367004395
    3. '.' → logprob: -6.1896443367004395
    4. '.read' → logprob: -7.4396443367004395
    5. 'read' → logprob: -10.314644813537598
    6. '```' → logprob: -14.314644813537598
    7. ' readline' → logprob: -14.439644813537598
    8. ' .' → logprob: -15.439644813537598
    9. '_read' → logprob: -15.814644813537598
    10. '.Read' → logprob: -16.18964385986328

Token 389: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.04859498515725136
    2. '()' → logprob: -3.0485949516296387
    3. '(' → logprob: -12.048595428466797
    4. '()
' → logprob: -15.173595428466797
    5. '()

' → logprob: -15.173595428466797
    6. 'lines' → logprob: -15.298595428466797
    7. '()\' → logprob: -15.548595428466797
    8. '()`' → logprob: -15.673595428466797
    9. '())' → logprob: -16.048595428466797
    10. '（）' → logprob: -16.048595428466797

Token 390: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.2519551217556
    2. 'split' → logprob: -1.5019551515579224
    3. 'decode' → logprob: -10.751955032348633
    4. 'rstrip' → logprob: -12.501955032348633
    5. 'read' → logprob: -13.876955032348633
    6. '(split' → logprob: -17.626955032348633
    7. 'replace' → logprob: -17.751955032348633
    8. ' split' → logprob: -18.001955032348633
    9. '```' → logprob: -18.126955032348633
    10. 'lines' → logprob: -18.876955032348633

Token 391: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01821104995906353
    2. '()' → logprob: -4.0182108879089355
    3. '('' → logprob: -10.018211364746094
    4. '(' → logprob: -11.893211364746094
    5. 'split' → logprob: -11.893211364746094
    6. '().'' → logprob: -13.768211364746094
    7. '("' → logprob: -15.018211364746094
    8. '("("' → logprob: -15.643211364746094
    9. ' ().' → logprob: -15.893211364746094
    10. '.split' → logprob: -15.893211364746094

Token 392: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -18.875
    3. '(split' → logprob: -19.75
    4. 'spl' → logprob: -20.75
    5. 'sp' → logprob: -21.875
    6. 'strip' → logprob: -22.375
    7. 's' → logprob: -22.5
    8. '```' → logprob: -22.875
    9. 'replace' → logprob: -23.25
    10. '.split' → logprob: -23.875

Token 393: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.040509119629859924
    2. '()' → logprob: -4.040509223937988
    3. 'lines' → logprob: -4.540509223937988
    4. '('' → logprob: -4.540509223937988
    5. '("\' → logprob: -7.290509223937988
    6. '(' → logprob: -9.415509223937988
    7. '("("' → logprob: -12.665509223937988
    8. '()\' → logprob: -12.915509223937988
    9. '("' → logprob: -13.540509223937988
    10. '(',' → logprob: -13.790509223937988

Token 394: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.554343366995454e-05
    2. '\n' → logprob: -9.375085830688477
    3. '
' → logprob: -14.875085830688477
    4. '\' → logprob: -15.875085830688477
    5. 'ndef' → logprob: -16.875085830688477
    6. 'lines' → logprob: -17.000085830688477
    7. 'newline' → logprob: -17.125085830688477
    8. '('\' → logprob: -18.000085830688477
    9. '```' → logprob: -18.125085830688477
    10. 'input' → logprob: -18.250085830688477

Token 395: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004130049608647823
    2. '   ' → logprob: -6.254129886627197
    3. '')' → logprob: -6.254129886627197
    4. ')
' → logprob: -8.254130363464355
    5. '[' → logprob: -12.004130363464355
    6. '')
' → logprob: -12.629130363464355
    7. ')
' → logprob: -13.129130363464355
    8. ']' → logprob: -13.254130363464355
    9. '")' → logprob: -13.754130363464355
    10. '`)' → logprob: -15.129130363464355

Token 396: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27189570665359497
    2. ' for' → logprob: -2.02189564704895
    3. 'for' → logprob: -2.27189564704895
    4. 'n' → logprob: -7.271895885467529
    5. '```' → logprob: -7.271895885467529
    6. 'i' → logprob: -7.771895885467529
    7. ' n' → logprob: -8.271895408630371
    8. 'idx' → logprob: -8.771895408630371
    9. ' i' → logprob: -9.396895408630371
    10. 'index' → logprob: -9.646895408630371

Token 397: ' idx' (ID: 14016)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -1.1129730939865112
    2. 'i' → logprob: -1.7379730939865112
    3. 'for' → logprob: -1.8629730939865112
    4. 'n' → logprob: -1.8629730939865112
    5. 't' → logprob: -3.112973213195801
    6. 'idx' (adapté à ' idx') → logprob: -3.237973213195801
    7. '   ' → logprob: -3.362973213195801
    8. ' for' → logprob: -3.737973213195801
    9. 'num' → logprob: -3.987973213195801
    10. ' deck' → logprob: -5.362973213195801

Token 398: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03365122899413109
    2. '=' → logprob: -3.408651113510132
    3. ' ' → logprob: -12.783651351928711
    4. '_' → logprob: -13.408651351928711
    5. ' +=' → logprob: -14.908651351928711
    6. '   ' → logprob: -15.033651351928711
    7. ')' → logprob: -16.15865135192871
    8. '  ' → logprob: -16.28365135192871
    9. 's' → logprob: -16.78365135192871
    10. ' ' → logprob: -17.03365135192871

Token 399: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005396892665885389
    2. ' ' → logprob: -7.750539779663086
    3. '1' → logprob: -9.125539779663086
    4. '   ' → logprob: -16.500539779663086
    5. '2' → logprob: -18.875539779663086
    6. 'int' → logprob: -19.500539779663086
    7. '```' → logprob: -19.875539779663086
    8. '=' → logprob: -20.000539779663086
    9. '  ' → logprob: -20.250539779663086
    10. '۰' → logprob: -20.625539779663086

Token 400: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. '1' → logprob: -11.50001335144043
    3. ' ' → logprob: -12.75001335144043
    4. '   ' → logprob: -19.25001335144043
    5. 'int' → logprob: -20.00001335144043
    6. '2' → logprob: -20.12501335144043
    7. '```' → logprob: -20.87501335144043
    8. '-' → logprob: -21.25001335144043
    9. '  ' → logprob: -21.31251335144043
    10. '=' → logprob: -21.31251335144043

Token 401: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21433518826961517
    2. 'while' → logprob: -2.3393352031707764
    3. '
' → logprob: -2.4643352031707764
    4. ' while' → logprob: -4.589334964752197
    5. '    
' → logprob: -6.964334964752197
    6. '	while' → logprob: -8.339335441589355
    7. '```' → logprob: -9.464335441589355
    8. 'n' → logprob: -11.214335441589355
    9. ' 
' → logprob: -11.589335441589355
    10. '  
' → logprob: -12.589335441589355

Token 402: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06422912329435349
    2. '   ' → logprob: -2.9392290115356445
    3. ' while' → logprob: -4.8142290115356445
    4. 'n' → logprob: -6.9392290115356445
    5. '```' → logprob: -9.314229011535645
    6. '	while' → logprob: -9.439229011535645
    7. '    
' → logprob: -10.564229011535645
    8. ' n' → logprob: -11.439229011535645
    9. '
' → logprob: -12.564229011535645
    10. 't' → logprob: -12.689229011535645

Token 403: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.020002419129014015
    2. 't' → logprob: -4.395002365112305
    3. ' while' → logprob: -5.395002365112305
    4. '   ' → logprob: -6.145002365112305
    5. 'n' → logprob: -7.270002365112305
    6. 'T' → logprob: -10.020002365112305
    7. 'num' → logprob: -11.520002365112305
    8. ' t' → logprob: -11.895002365112305
    9. '    
' → logprob: -12.020002365112305
    10. 'for' → logprob: -12.145002365112305

Token 404: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.00862308219075203
    2. 'idx' → logprob: -4.758623123168945
    3. ' True' → logprob: -12.133623123168945
    4. 'True' → logprob: -13.883623123168945
    5. '	idx' → logprob: -13.883623123168945
    6. '(idx' → logprob: -14.258623123168945
    7. ' len' → logprob: -15.258623123168945
    8. ' ' → logprob: -15.508623123168945
    9. ' input' → logprob: -16.508623123168945
    10. '   ' → logprob: -17.008623123168945

Token 405: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.31382834911346436
    2. '<' → logprob: -1.3138283491134644
    3. '<len' → logprob: -8.188828468322754
    4. '[' → logprob: -9.188828468322754
    5. '   ' → logprob: -9.813828468322754
    6. '<n' → logprob: -9.938828468322754
    7. ' ' → logprob: -11.438828468322754
    8. '<size' → logprob: -11.688828468322754
    9. ' +=' → logprob: -11.938828468322754
    10. ' <=' → logprob: -11.938828468322754

Token 406: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.011047814972698689
    2. ' len' → logprob: -4.511047840118408
    3. 'int' → logprob: -17.51104736328125
    4. '(len' → logprob: -18.26104736328125
    5. 'input' → logprob: -19.13604736328125
    6. 'length' → logprob: -19.26104736328125
    7. '<len' → logprob: -19.26104736328125
    8. ' ' → logprob: -19.51104736328125
    9. '=len' → logprob: -19.63604736328125
    10. '	len' → logprob: -19.76104736328125

Token 407: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00010020548506872728
    2. 'input' → logprob: -9.500100135803223
    3. '(' → logprob: -10.875100135803223
    4. ' input' → logprob: -12.625100135803223
    5. ' (' → logprob: -12.750100135803223
    6. '=input' → logprob: -15.875100135803223
    7. ',input' → logprob: -17.50010108947754
    8. '_input' → logprob: -17.87510108947754
    9. '[input' → logprob: -18.62510108947754
    10. '(
' → logprob: -18.87510108947754

Token 408: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -2.816093228830141e-06
    2. ')_' → logprob: -13.62500286102295
    3. ')' → logprob: -14.37500286102295
    4. '_' → logprob: -14.75000286102295
    5. '_input' → logprob: -16.000001907348633
    6. '_)' → logprob: -16.125001907348633
    7. '_line' → logprob: -16.250001907348633
    8. '_LINES' → logprob: -16.625001907348633
    9. '```' → logprob: -17.500001907348633
    10. '(lines' → logprob: -17.625001907348633

Token 409: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0318588986992836
    2. ':
' → logprob: -3.5318589210510254
    3. ' and' → logprob: -6.781858921051025
    4. '):' → logprob: -7.406858921051025
    5. '   ' → logprob: -8.656858444213867
    6. '):
' → logprob: -9.156858444213867
    7. 'and' → logprob: -9.781858444213867
    8. ' :' → logprob: -11.531858444213867
    9. ')' → logprob: -12.031858444213867
    10. ' :
' → logprob: -13.031858444213867

Token 410: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25594964623451233
    2. '   ' → logprob: -1.50594961643219
    3. '```' → logprob: -6.6309494972229
    4. 'line' → logprob: -7.1309494972229
    5. ':' → logprob: -7.6309494972229
    6. '        
' → logprob: -8.005949974060059
    7. '    
' → logprob: -8.005949974060059
    8. ' line' → logprob: -8.380949974060059
    9. 'n' → logprob: -9.255949974060059
    10. ',' → logprob: -9.505949974060059

Token 411: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5021573901176453
    2. 't' → logprob: -1.75215744972229
    3. 'line' → logprob: -2.50215744972229
    4. ' line' → logprob: -3.37715744972229
    5. ' n' → logprob: -3.50215744972229
    6. '   ' → logprob: -3.87715744972229
    7. 'num' → logprob: -4.752157211303711
    8. ' t' → logprob: -5.002157211303711
    9. 'T' → logprob: -5.127157211303711
    10. 'deck' → logprob: -5.252157211303711

Token 412: ' Lire' (ID: 57624)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.11410810798406601
    2. 'n' → logprob: -2.614108085632324
    3. 'if' → logprob: -4.364108085632324
    4. 'try' → logprob: -4.989108085632324
    5. ' line' → logprob: -5.489108085632324
    6. '   ' → logprob: -5.989108085632324
    7. 't' → logprob: -6.114108085632324
    8. 'num' → logprob: -6.614108085632324
    9. 'parts' → logprob: -6.739108085632324
    10. 'nb' → logprob: -7.239108085632324

Token 413: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6065146327018738
    2. 'line' → logprob: -1.2315146923065186
    3. 't' → logprob: -2.4815146923065186
    4. '   ' → logprob: -3.6065146923065186
    5. 'num' → logprob: -4.7315144538879395
    6. ' line' → logprob: -5.1065144538879395
    7. 'l' → logprob: -5.1065144538879395
    8. 'nb' → logprob: -5.1065144538879395
    9. ' n' → logprob: -5.2315144538879395
    10. 'm' → logprob: -5.8565144538879395

Token 414: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03963504731655121
    2. '=' → logprob: -4.164635181427002
    3. '       ' → logprob: -4.289635181427002
    4. ',' → logprob: -4.914635181427002
    5. 'n' → logprob: -6.789635181427002
    6. '   ' → logprob: -8.039634704589844
    7. ',n' → logprob: -9.289634704589844
    8. ' ,' → logprob: -9.414634704589844
    9. '(n' → logprob: -9.539634704589844
    10. ' and' → logprob: -9.539634704589844

Token 415: ' r' (ID: 428)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0015041481237858534
    2. ' c' → logprob: -6.501503944396973
    3. ' ' → logprob: -14.751503944396973
    4. 'k' → logprob: -14.876503944396973
    5. '<|end|>' → logprob: -15.501503944396973
    6. '	c' → logprob: -15.876503944396973
    7. ',' → logprob: -16.06400489807129
    8. 'cation' → logprob: -16.68900489807129
    9. 'ct' → logprob: -16.81400489807129
    10. '_c' → logprob: -16.81400489807129

Token 416: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7069384455680847
    2. '       ' → logprob: -0.9569384455680847
    3. ',' → logprob: -2.4569385051727295
    4. '=' → logprob: -3.5819385051727295
    5. 'n' → logprob: -5.58193826675415
    6. '        
' → logprob: -6.95693826675415
    7. 'line' → logprob: -7.20693826675415
    8. '   ' → logprob: -7.45693826675415
    9. ' line' → logprob: -7.95693826675415
    10. '=line' → logprob: -7.95693826675415

Token 417: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26564234495162964
    2. ' =' → logprob: -1.8906424045562744
    3. ',' → logprob: -2.6406424045562744
    4. '=' → logprob: -4.765642166137695
    5. '   ' → logprob: -7.640642166137695
    6. '<|end|>' → logprob: -8.140642166137695
    7. 'n' → logprob: -8.265642166137695
    8. '=line' → logprob: -8.765642166137695
    9. ',n' → logprob: -9.015642166137695
    10. ' line' → logprob: -9.015642166137695

Token 418: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3889204263687134
    2. ' n' → logprob: -1.6389204263687134
    3. 'line' → logprob: -3.138920307159424
    4. ' line' → logprob: -3.138920307159424
    5. '       ' → logprob: -3.513920307159424
    6. ' parts' → logprob: -4.763920307159424
    7. 'parts' → logprob: -6.263920307159424
    8. 'ligne' → logprob: -7.638920307159424
    9. 'l' → logprob: -8.013920783996582
    10. ' ligne' → logprob: -8.763920783996582

Token 419: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.11701443791389465
    2. 'not' → logprob: -2.7420144081115723
    3. ' input' → logprob: -3.4920144081115723
    4. 'input' → logprob: -4.242014408111572
    5. ' idx' → logprob: -7.367014408111572
    6. 'idx' → logprob: -8.11701488494873
    7. ' len' → logprob: -8.99201488494873
    8. 'len' → logprob: -9.36701488494873
    9. '   ' → logprob: -11.24201488494873
    10. ' ' → logprob: -11.61701488494873

Token 420: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03804252669215202
    2. ' input' → logprob: -3.2880425453186035
    3. '(input' → logprob: -14.413042068481445
    4. ' ' → logprob: -14.913042068481445
    5. 'idx' → logprob: -15.913042068481445
    6. 'index' → logprob: -18.038042068481445
    7. '	input' → logprob: -18.288042068481445
    8. ' idx' → logprob: -18.788042068481445
    9. '[input' → logprob: -18.788042068481445
    10. '=input' → logprob: -19.038042068481445

Token 421: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -9.162282367469743e-05
    2. 'Lines' → logprob: -10.625091552734375
    3. '[idx' → logprob: -10.875091552734375
    4. 'lines' → logprob: -11.125091552734375
    5. '__' → logprob: -12.250091552734375
    6. '[_' → logprob: -12.250091552734375
    7. '```' → logprob: -12.750091552734375
    8. '._' → logprob: -12.875091552734375
    9. '_LINES' → logprob: -13.250091552734375
    10. '[' → logprob: -13.250091552734375

Token 422: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0015198609326034784
    2. '[' → logprob: -6.501519680023193
    3. ' [' → logprob: -12.251520156860352
    4. '[
' → logprob: -12.876520156860352
    5. '[index' → logprob: -13.251520156860352
    6. 'idx' → logprob: -13.251520156860352
    7. '[int' → logprob: -14.001520156860352
    8. '[id' → logprob: -14.126520156860352
    9. ' idx' → logprob: -14.251520156860352
    10. '[ind' → logprob: -14.376520156860352

Token 423: '].' (ID: 1651)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0005962816649116576
    2. '.' → logprob: -7.500596046447754
    3. ' .' → logprob: -11.250596046447754
    4. ':' → logprob: -11.250596046447754
    5. '.startswith' → logprob: -11.250596046447754
    6. '.split' → logprob: -13.375596046447754
    7. '.trim' → logprob: -13.500596046447754
    8. 'strip' → logprob: -14.625596046447754
    9. '):' → logprob: -14.875596046447754
    10. '.rstrip' → logprob: -16.00059700012207

Token 424: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -5.796184723294573e-06
    2. 'split' → logprob: -12.250005722045898
    3. 'startswith' → logprob: -14.500005722045898
    4. '.strip' → logprob: -14.750005722045898
    5. ' strip' → logprob: -16.3750057220459
    6. 'isdigit' → logprob: -19.0000057220459
    7. 'rstrip' → logprob: -19.8750057220459
    8. '_strip' → logprob: -20.1250057220459
    9. '(strip' → logprob: -21.1250057220459
    10. '```' → logprob: -21.2500057220459

Token 425: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0025357098784297705
    2. ':' → logprob: -6.127535820007324
    3. '():
' → logprob: -8.252535820007324
    4. '()' → logprob: -9.752535820007324
    5. '().' → logprob: -10.752535820007324
    6. ' ():' → logprob: -12.627535820007324
    7. '):' → logprob: -13.252535820007324
    8. '()==' → logprob: -13.627535820007324
    9. '.startswith' → logprob: -13.627535820007324
    10. ' :' → logprob: -13.877535820007324

Token 426: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4527614116668701
    2. '           ' → logprob: -1.5777614116668701
    3. ':
' → logprob: -2.20276141166687
    4. '       ' → logprob: -3.07776141166687
    5. '\n' → logprob: -8.32776165008545
    6. ':return' → logprob: -8.57776165008545
    7. '   ' → logprob: -8.82776165008545
    8. ' or' → logprob: -9.07776165008545
    9. ',' → logprob: -9.45276165008545
    10. '
' → logprob: -10.45276165008545

Token 427: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0259595587849617
    2. '           ' → logprob: -4.025959491729736
    3. ' idx' → logprob: -5.150959491729736
    4. 'break' → logprob: -6.525959491729736
    5. '       ' → logprob: -7.775959491729736
    6. ' break' → logprob: -9.775959968566895
    7. '
' → logprob: -10.775959968566895
    8. '	idx' → logprob: -11.275959968566895
    9. '   ' → logprob: -12.650959968566895
    10. '```' → logprob: -13.275959968566895

Token 428: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0015080781886354089
    2. ' +=' → logprob: -6.5015082359313965
    3. '   ' → logprob: -13.001507759094238
    4. ']+=' → logprob: -13.251507759094238
    5. '+' → logprob: -13.626507759094238
    6. '=' → logprob: -15.001507759094238
    7. '           ' → logprob: -16.376508712768555
    8. '```' → logprob: -17.251508712768555
    9. '+='' → logprob: -17.626508712768555
    10. '+="' → logprob: -17.626508712768555

Token 429: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -16.62510871887207
    4. '
' → logprob: -17.75010871887207
    5. '```' → logprob: -18.62510871887207
    6. 'continue' → logprob: -20.00010871887207
    7. '  ' → logprob: -20.75010871887207
    8. '       ' → logprob: -22.00010871887207
    9. '    ' → logprob: -22.06260871887207
    10. '１' → logprob: -22.37510871887207

Token 430: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -18.250001907348633
    4. '   ' → logprob: -18.750001907348633
    5. 'continue' → logprob: -20.125001907348633
    6. '１' → logprob: -20.625001907348633
    7. '۱' → logprob: -21.062501907348633
    8. '१' → logprob: -21.750001907348633
    9. '১' → logprob: -21.937501907348633
    10. '
' → logprob: -22.062501907348633

Token 431: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00025942857610061765
    2. '       ' → logprob: -9.125259399414062
    3. 'continue' → logprob: -10.250259399414062
    4. '<|end|>' → logprob: -10.250259399414062
    5. '		' → logprob: -10.875259399414062
    6. '               ' → logprob: -11.375259399414062
    7. '            
' → logprob: -11.750259399414062
    8. ' continue' → logprob: -11.875259399414062
    9. '	       ' → logprob: -12.250259399414062
    10. '```' → logprob: -12.375259399414062

Token 432: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009556477889418602
    2. 'continue' → logprob: -7.375955581665039
    3. ' continue' → logprob: -8.125955581665039
    4. '       ' → logprob: -11.000955581665039
    5. '	       ' → logprob: -12.750955581665039
    6. '	continue' → logprob: -12.875955581665039
    7. '		' → logprob: -12.875955581665039
    8. '               ' → logprob: -13.125955581665039
    9. '   ' → logprob: -13.875955581665039
    10. '<|end|>' → logprob: -13.875955581665039

Token 433: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0015084355836734176
    2. '           ' → logprob: -6.7515082359313965
    3. ' continue' → logprob: -8.001508712768555
    4. 'break' → logprob: -13.751508712768555
    5. 'continu' → logprob: -14.376508712768555
    6. '       ' → logprob: -14.376508712768555
    7. 'contin' → logprob: -14.501508712768555
    8. '```' → logprob: -14.876508712768555
    9. '	continue' → logprob: -15.876508712768555
    10. '_continue' → logprob: -17.501508712768555

Token 434: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03174677491188049
    2. 'n' → logprob: -3.5317468643188477
    3. '        
' → logprob: -7.281746864318848
    4. '<|end|>' → logprob: -7.906746864318848
    5. '```' → logprob: -8.156746864318848
    6. ' n' → logprob: -9.156746864318848
    7. '   ' → logprob: -9.406746864318848
    8. ')' → logprob: -9.406746864318848
    9. '(n' → logprob: -10.281746864318848
    10. '
' → logprob: -10.281746864318848

Token 435: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015496233478188515
    2. 'n' → logprob: -4.390496253967285
    3. ' n' → logprob: -6.015496253967285
    4. '        
' → logprob: -8.140496253967285
    5. '   ' → logprob: -9.265496253967285
    6. '```' → logprob: -9.515496253967285
    7. ',' → logprob: -10.765496253967285
    8. ' ' → logprob: -12.140496253967285
    9. '           ' → logprob: -12.265496253967285
    10. '(n' → logprob: -12.515496253967285

Token 436: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0004821505572181195
    2. ' n' → logprob: -7.750482082366943
    3. 'parts' → logprob: -10.375482559204102
    4. '       ' → logprob: -11.500482559204102
    5. '```' → logprob: -12.250482559204102
    6. 'line' → logprob: -13.000482559204102
    7. ' parts' → logprob: -13.250482559204102
    8. '   ' → logprob: -14.375482559204102
    9. 'try' → logprob: -15.625482559204102
    10. '	n' → logprob: -16.0004825592041

Token 437: '_r' (ID: 3442)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005054924986325204
    2. ',r' → logprob: -7.625505447387695
    3. ',c' → logprob: -11.500505447387695
    4. ' ,' → logprob: -12.375505447387695
    5. ',n' → logprob: -14.000505447387695
    6. ',num' → logprob: -14.750505447387695
    7. 'r' → logprob: -14.875505447387695
    8. ',line' → logprob: -15.000505447387695
    9. ',s' → logprob: -15.250505447387695
    10. '_,' → logprob: -15.625505447387695

Token 438: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25197598338127136
    2. '=' → logprob: -1.5019760131835938
    3. ',' → logprob: -10.251976013183594
    4. '_line' → logprob: -12.751976013183594
    5. 's' → logprob: -13.126976013183594
    6. ')' → logprob: -13.251976013183594
    7. ' ' → logprob: -13.251976013183594
    8. '=line' → logprob: -13.376976013183594
    9. '_str' → logprob: -15.001976013183594
    10. 'line' → logprob: -15.376976013183594

Token 439: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01125271525233984
    2. ' input' → logprob: -4.5112528800964355
    3. 'list' → logprob: -8.511252403259277
    4. ' list' → logprob: -12.511252403259277
    5. '[input' → logprob: -20.011253356933594
    6. '=input' → logprob: -20.636253356933594
    7. '(input' → logprob: -21.136253356933594
    8. '	input' → logprob: -21.886253356933594
    9. 'tuple' → logprob: -22.011253356933594
    10. '[' → logprob: -22.136253356933594

Token 440: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.7979163527488708
    2. '()' → logprob: -1.4229164123535156
    3. '[idx' → logprob: -2.4229164123535156
    4. '=' → logprob: -2.4229164123535156
    5. ' =' → logprob: -3.5479164123535156
    6. 's' → logprob: -3.5479164123535156
    7. 'lines' → logprob: -4.297916412353516
    8. '()[' → logprob: -4.422916412353516
    9. '().' → logprob: -4.547916412353516
    10. '(idx' → logprob: -4.547916412353516

Token 441: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -6.456358823925257e-05
    2. '[' → logprob: -9.875064849853516
    3. '   ' → logprob: -12.375064849853516
    4. ' [' → logprob: -13.250064849853516
    5. '```' → logprob: -13.250064849853516
    6. 'idx' → logprob: -14.000064849853516
    7. ')[' → logprob: -14.000064849853516
    8. '][' → logprob: -14.500064849853516
    9. '\[' → logprob: -14.625064849853516
    10. '       ' → logprob: -15.000064849853516

Token 442: '].' (ID: 1651)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.20514428615570068
    2. '].' → logprob: -2.4551444053649902
    3. '.strip' → logprob: -2.4551444053649902
    4. '.' → logprob: -4.45514440536499
    5. '().' → logprob: -6.20514440536499
    6. ').' → logprob: -9.455143928527832
    7. ' .' → logprob: -10.705143928527832
    8. ' ].' → logprob: -11.455143928527832
    9. '.trim' → logprob: -12.455143928527832
    10. ''].' → logprob: -12.455143928527832

Token 443: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.3868710398674011
    2. 'strip' → logprob: -1.136871099472046
    3. ' split' → logprob: -19.136871337890625
    4. ' strip' → logprob: -20.636871337890625
    5. '.strip' → logprob: -21.386871337890625
    6. 'spl' → logprob: -22.636871337890625
    7. 'rstrip' → logprob: -22.761871337890625
    8. '_split' → logprob: -23.761871337890625
    9. '.split' → logprob: -23.886871337890625
    10. '```' → logprob: -24.761871337890625

Token 444: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0010711579816415906
    2. '.split' → logprob: -7.001070976257324
    3. '()' → logprob: -8.751070976257324
    4. '()
' → logprob: -14.251070976257324
    5. '.' → logprob: -14.751070976257324
    6. ' .' → logprob: -16.25107192993164
    7. 'split' → logprob: -16.50107192993164
    8. ' ().' → logprob: -16.62607192993164
    9. '()

' → logprob: -18.75107192993164
    10. '().
' → logprob: -19.12607192993164

Token 445: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -19.75
    3. 'spl' → logprob: -20.125
    4. '(split' → logprob: -22.875
    5. '.split' → logprob: -23.5
    6. '_split' → logprob: -26.0
    7. 'sp' → logprob: -26.25
    8. 'strip' → logprob: -26.5
    9. 'startswith' → logprob: -26.625
    10. 'replace' → logprob: -26.75

Token 446: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09203172475099564
    2. '('' → logprob: -2.592031717300415
    3. '(' → logprob: -4.342031955718994
    4. '("' → logprob: -11.092031478881836
    5. '(',' → logprob: -11.092031478881836
    6. '('.')' → logprob: -12.467031478881836
    7. '()]' → logprob: -12.592031478881836
    8. '())' → logprob: -12.717031478881836
    9. '("("' → logprob: -14.092031478881836
    10. '()[' → logprob: -14.717031478881836

Token 447: '       ' (ID: 309)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.1242489144206047
    2. '       ' → logprob: -2.49924898147583
    3. 'idx' → logprob: -4.74924898147583
    4. '<|end|>' → logprob: -5.24924898147583
    5. '        
' → logprob: -5.99924898147583
    6. '[' → logprob: -5.99924898147583
    7. '```' → logprob: -6.12424898147583
    8. '[n' → logprob: -6.12424898147583
    9. '[
' → logprob: -6.37424898147583
    10. '\n' → logprob: -6.49924898147583

Token 448: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10170033574104309
    2. 'idx' → logprob: -2.3517003059387207
    3. 'if' (adapté à ' if') → logprob: -6.726700305938721
    4. '       ' → logprob: -8.476700782775879
    5. '```' → logprob: -10.476700782775879
    6. '   ' → logprob: -10.851700782775879
    7. ' idx' → logprob: -11.601700782775879
    8. ' n' → logprob: -11.976700782775879
    9. ' if' → logprob: -12.101700782775879
    10. '[idx' → logprob: -12.226700782775879

Token 449: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.26145535707473755
    2. ' len' → logprob: -1.5114552974700928
    3. ' not' → logprob: -4.761455535888672
    4. 'not' → logprob: -7.511455535888672
    5. 'n' → logprob: -8.261455535888672
    6. ' n' → logprob: -9.011455535888672
    7. '(len' → logprob: -14.886455535888672
    8. '	len' → logprob: -15.511455535888672
    9. '   ' → logprob: -16.011455535888672
    10. '[len' → logprob: -16.761455535888672

Token 450: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06240345165133476
    2. '(' → logprob: -2.812403440475464
    3. 'n' → logprob: -7.937403678894043
    4. '()' → logprob: -10.187403678894043
    5. '(
' → logprob: -11.312403678894043
    6. ' n' → logprob: -11.937403678894043
    7. ' (' → logprob: -12.187403678894043
    8. '(input' → logprob: -12.187403678894043
    9. '<n' → logprob: -12.937403678894043
    10. ')n' → logprob: -13.187403678894043

Token 451: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -2.3676733690081164e-05
    2. '_n' → logprob: -11.12502384185791
    3. '(n' → logprob: -12.37502384185791
    4. 'r' → logprob: -12.75002384185791
    5. 'n' → logprob: -14.25002384185791
    6. '[n' → logprob: -14.62502384185791
    7. '<n' → logprob: -15.62502384185791
    8. '_' → logprob: -16.125022888183594
    9. '[' → logprob: -16.375022888183594
    10. ')' → logprob: -16.375022888183594

Token 452: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5407368540763855
    2. '<' → logprob: -1.7907369136810303
    3. '==' → logprob: -2.0407369136810303
    4. ' !=' → logprob: -3.0407369136810303
    5. '!=' → logprob: -3.2907369136810303
    6. ' ==' → logprob: -4.165736675262451
    7. ' <' → logprob: -4.415736675262451
    8. ')<' → logprob: -5.540736675262451
    9. '<|end|>' → logprob: -6.540736675262451
    10. ')!=' → logprob: -7.540736675262451

Token 453: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6531822085380554
    2. '==' → logprob: -1.4031822681427002
    3. '!=' → logprob: -1.6531822681427002
    4. ' !=' → logprob: -3.5281822681427
    5. ' ==' → logprob: -4.653182029724121
    6. ' <' → logprob: -5.903182029724121
    7. '<n' → logprob: -8.778182029724121
    8. '<int' → logprob: -9.028182029724121
    9. '[' → logprob: -9.153182029724121
    10. '=' → logprob: -9.278182029724121

Token 454: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016039881855249405
    2. ' ' → logprob: -4.141039848327637
    3. '1' → logprob: -12.516039848327637
    4. '=' → logprob: -13.391039848327637
    5. ')' → logprob: -15.141039848327637
    6. '```' → logprob: -16.266040802001953
    7. '3' → logprob: -16.641040802001953
    8. '0' → logprob: -17.391040802001953
    9. '<' → logprob: -17.516040802001953
    10. ',' → logprob: -18.141040802001953

Token 455: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.375006675720215
    3. '1' → logprob: -13.000006675720215
    4. '   ' → logprob: -20.0000057220459
    5. '２' → logprob: -20.1250057220459
    6. '```' → logprob: -20.3125057220459
    7. '۲' → logprob: -20.3125057220459
    8. '
' → logprob: -20.3750057220459
    9. ')' → logprob: -20.6875057220459
    10. '=' → logprob: -20.6875057220459

Token 456: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06584390997886658
    2. ':
' → logprob: -2.8158438205718994
    3. ' or' → logprob: -5.9408440589904785
    4. '       ' → logprob: -8.19084358215332
    5. '           ' → logprob: -8.44084358215332
    6. '):' → logprob: -8.69084358215332
    7. ')' → logprob: -9.44084358215332
    8. '):
' → logprob: -9.44084358215332
    9. ' and' → logprob: -9.69084358215332
    10. '[idx' → logprob: -9.69084358215332

Token 457: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003967071825172752
    2. 'break' → logprob: -8.500396728515625
    3. ' break' → logprob: -8.750396728515625
    4. '       ' → logprob: -11.000396728515625
    5. '   ' → logprob: -12.500396728515625
    6. '               ' → logprob: -12.875396728515625
    7. 'idx' → logprob: -13.000396728515625
    8. '	       ' → logprob: -13.125396728515625
    9. '          ' → logprob: -13.500396728515625
    10. '```' → logprob: -13.750396728515625

Token 458: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.4010189175605774
    2. '           ' → logprob: -1.4010188579559326
    3. ' break' → logprob: -2.6510188579559326
    4. 'idx' → logprob: -4.401019096374512
    5. ' idx' → logprob: -7.276019096374512
    6. '       ' → logprob: -8.526019096374512
    7. 'return' → logprob: -9.401019096374512
    8. '               ' → logprob: -9.526019096374512
    9. '	break' → logprob: -9.651019096374512
    10. '   ' → logprob: -10.776019096374512

Token 459: ' Peu' (ID: 189054)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5910978317260742
    2. 'break' → logprob: -0.8410978317260742
    3. ' break' → logprob: -4.341097831726074
    4. ' idx' → logprob: -6.216097831726074
    5. '   ' → logprob: -11.341097831726074
    6. 'return' → logprob: -12.341097831726074
    7. '	idx' → logprob: -13.091097831726074
    8. '       ' → logprob: -13.466097831726074
    9. '```' → logprob: -13.466097831726074
    10. '	break' → logprob: -13.841097831726074

Token 460: ' probable' (ID: 32954)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -1.0751149654388428
    2. 'idx' → logprob: -1.4501149654388428
    3. '           ' → logprob: -1.8251149654388428
    4. '       ' → logprob: -2.8251149654388428
    5. 'import' → logprob: -3.4501149654388428
    6. 'r' → logprob: -3.4501149654388428
    7. '   ' → logprob: -3.9501149654388428
    8. ' ' → logprob: -4.200115203857422
    9. '               ' → logprob: -4.325115203857422
    10. 'reak' → logprob: -4.825115203857422

Token 461: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0044755772687494755
    2. '       ' → logprob: -6.5044755935668945
    3. '   ' → logprob: -6.6294755935668945
    4. '               ' → logprob: -8.004475593566895
    5. '
' → logprob: -8.129475593566895
    6. ',' → logprob: -8.379475593566895
    7. ':
' → logprob: -8.754475593566895
    8. '[idx' → logprob: -9.004475593566895
    9. 'idx' → logprob: -9.129475593566895
    10. '\n' → logprob: -9.504475593566895

Token 462: ' mais' (ID: 2899)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.4346718192100525
    2. '           ' → logprob: -1.9346718788146973
    3. ' break' → logprob: -1.9346718788146973
    4. 'idx' → logprob: -2.9346718788146973
    5. ' idx' → logprob: -4.684671878814697
    6. '       ' → logprob: -6.809671878814697
    7. '               ' → logprob: -10.684671401977539
    8. '	break' → logprob: -10.684671401977539
    9. '   ' → logprob: -10.934671401977539
    10. '```' → logprob: -11.934671401977539

Token 463: ' passer' (ID: 27727)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.01822930946946144
    2. ' idx' → logprob: -4.2682294845581055
    3. 'break' → logprob: -5.7682294845581055
    4. ' break' → logprob: -7.6432294845581055
    5. '   ' → logprob: -8.143229484558105
    6. '       ' → logprob: -9.893229484558105
    7. '	idx' → logprob: -9.893229484558105
    8. '```' → logprob: -10.518229484558105
    9. '           ' → logprob: -10.643229484558105
    10. '
' → logprob: -12.143229484558105

Token 464: ' à' (ID: 1221)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.31367313861846924
    2. '           ' → logprob: -1.5636731386184692
    3. '       ' → logprob: -3.4386730194091797
    4. '
' → logprob: -3.8136730194091797
    5. '[idx' → logprob: -6.06367301940918
    6. ' idx' → logprob: -6.68867301940918
    7. '```' → logprob: -7.18867301940918
    8. '(idx' → logprob: -7.81367301940918
    9. '	idx' → logprob: -8.18867301940918
    10. '   ' → logprob: -8.43867301940918

Token 465: ' la' (ID: 557)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0013192851329222322
    2. 'next' → logprob: -7.001319408416748
    3. '```' → logprob: -9.00131893157959
    4. 'la' → logprob: -9.37631893157959
    5. 'indice' → logprob: -10.12631893157959
    6. 'l' → logprob: -10.25131893157959
    7. ' idx' → logprob: -10.25131893157959
    8. '[idx' → logprob: -10.37631893157959
    9. '   ' → logprob: -11.50131893157959
    10. '	idx' → logprob: -11.75131893157959

Token 466: ' ligne' (ID: 19583)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.001183204003609717
    2. 'next' → logprob: -7.376183032989502
    3. '```' → logprob: -8.37618350982666
    4. 'continue' → logprob: -8.87618350982666
    5. ' idx' → logprob: -10.00118350982666
    6. '1' → logprob: -10.25118350982666
    7. ' suivante' → logprob: -10.75118350982666
    8. '[idx' → logprob: -10.87618350982666
    9. '++' → logprob: -11.00118350982666
    10. 'indice' → logprob: -11.62618350982666

Token 467: ' suivante' (ID: 107439)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5034249424934387
    2. 'idx' → logprob: -1.128424882888794
    3. '       ' → logprob: -3.128424882888794
    4. '
' → logprob: -4.753425121307373
    5. ' idx' → logprob: -4.753425121307373
    6. '[idx' → logprob: -4.878425121307373
    7. '```' → logprob: -6.878425121307373
    8. '(idx' → logprob: -7.503425121307373
    9. ',' → logprob: -7.878425121307373
    10. '\n' → logprob: -8.128424644470215

Token 468: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2451072782278061
    2. '       ' → logprob: -1.6201072931289673
    3. '
' → logprob: -4.620107173919678
    4. '\n' → logprob: -4.995107173919678
    5. '```' → logprob: -7.120107173919678
    6. '   ' → logprob: -7.995107173919678
    7. '        
' → logprob: -8.245107650756836
    8. ',' → logprob: -8.370107650756836
    9. 'idx' → logprob: -8.370107650756836
    10. '               ' → logprob: -8.620107650756836

Token 469: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005570017732679844
    2. '       ' → logprob: -5.255569934844971
    3. '   ' → logprob: -8.380570411682129
    4. '
' → logprob: -10.880570411682129
    5. '               ' → logprob: -10.880570411682129
    6. 'idx' → logprob: -11.380570411682129
    7. ',' → logprob: -11.505570411682129
    8. '```' → logprob: -11.755570411682129
    9. '{
' → logprob: -12.005570411682129
    10. '[idx' → logprob: -12.380570411682129

Token 470: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.012768260203301907
    2. ' idx' → logprob: -4.637768268585205
    3. '           ' → logprob: -5.887768268585205
    4. '       ' → logprob: -9.387767791748047
    5. '   ' → logprob: -9.512767791748047
    6. '	idx' → logprob: -9.637767791748047
    7. '```' → logprob: -11.887767791748047
    8. '[idx' → logprob: -13.012767791748047
    9. '
' → logprob: -14.137767791748047
    10. '               ' → logprob: -14.387767791748047

Token 471: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02325025200843811
    2. ' +=' → logprob: -3.7732503414154053
    3. '+' → logprob: -13.273250579833984
    4. ']+=' → logprob: -13.273250579833984
    5. '   ' → logprob: -13.898250579833984
    6. '```' → logprob: -15.773250579833984
    7. '=' → logprob: -16.773250579833984
    8. '+='' → logprob: -17.398250579833984
    9. '+="' → logprob: -17.648250579833984
    10. '           ' → logprob: -17.773250579833984

Token 472: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '```' → logprob: -19.375261306762695
    4. '   ' → logprob: -20.000261306762695
    5. '
' → logprob: -21.375261306762695
    6. '１' → logprob: -22.125261306762695
    7. ' ' → logprob: -22.375261306762695
    8. '  ' → logprob: -22.500261306762695
    9. '0' → logprob: -22.500261306762695
    10. '+' → logprob: -22.687761306762695

Token 473: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.7500057220459
    4. '```' → logprob: -17.7500057220459
    5. '１' → logprob: -20.0625057220459
    6. '۱' → logprob: -21.1250057220459
    7. '१' → logprob: -21.3750057220459
    8. '১' → logprob: -21.5000057220459
    9. '       ' → logprob: -21.6250057220459
    10. '  ' → logprob: -21.8750057220459

Token 474: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5796170830726624
    2. '           ' → logprob: -0.8296170830726624
    3. '
' → logprob: -6.329617023468018
    4. '               ' → logprob: -7.579617023468018
    5. '   ' → logprob: -7.954617023468018
    6. '\n' → logprob: -8.579617500305176
    7. '        
' → logprob: -8.704617500305176
    8. '            
' → logprob: -9.329617500305176
    9. '<|end|>' → logprob: -9.579617500305176
    10. 'continue' → logprob: -9.954617500305176

Token 475: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004309884272515774
    2. '       ' → logprob: -5.62930965423584
    3. ' continue' → logprob: -8.00430965423584
    4. 'continue' → logprob: -8.25430965423584
    5. '```' → logprob: -9.87930965423584
    6. '   ' → logprob: -10.50430965423584
    7. ',' → logprob: -11.62930965423584
    8. '<|end|>' → logprob: -12.00430965423584
    9. '               ' → logprob: -12.12930965423584
    10. '	       ' → logprob: -12.37930965423584

Token 476: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.07347136735916138
    2. ' continue' → logprob: -3.4484713077545166
    3. '           ' → logprob: -3.8234713077545166
    4. '       ' → logprob: -4.073471546173096
    5. '   ' → logprob: -9.573471069335938
    6. 'idx' → logprob: -10.073471069335938
    7. '```' → logprob: -10.073471069335938
    8. '	continue' → logprob: -12.448471069335938
    9. '               ' → logprob: -12.823471069335938
    10. '
' → logprob: -12.823471069335938

Token 477: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013025980442762375
    2. '```' → logprob: -4.888025760650635
    3. '        
' → logprob: -5.888025760650635
    4. '
' → logprob: -6.763025760650635
    5. '\n' → logprob: -7.638025760650635
    6. '   ' → logprob: -8.138026237487793
    7. '``' → logprob: -8.638026237487793
    8. '    
' → logprob: -9.138026237487793
    9. '\' → logprob: -9.513026237487793
    10. 'idx' → logprob: -9.888026237487793

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34636735916137695
    2. '```' → logprob: -2.346367359161377
    3. 'n' → logprob: -3.221367359161377
    4. '        
' → logprob: -3.346367359161377
    5. 'idx' → logprob: -3.346367359161377
    6. '
' → logprob: -3.471367359161377
    7. ' idx' → logprob: -3.846367359161377
    8. '   ' → logprob: -4.471367359161377
    9. ' 
' → logprob: -5.096367359161377
    10. ' n' → logprob: -5.346367359161377

Token 479: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.007142513524740934
    2. ' n' → logprob: -5.007142543792725
    3. '   ' → logprob: -8.382142066955566
    4. '       ' → logprob: -9.382142066955566
    5. '\n' → logprob: -10.257142066955566
    6. '```' → logprob: -10.632142066955566
    7. '    
' → logprob: -11.382142066955566
    8. 'idx' → logprob: -11.507142066955566
    9. '        
' → logprob: -11.507142066955566
    10. '	n' → logprob: -11.757142066955566

Token 480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020175233657937497
    2. ',r' → logprob: -9.000202178955078
    3. '=' → logprob: -9.875202178955078
    4. ' ,' → logprob: -10.875202178955078
    5. ' =' → logprob: -13.125202178955078
    6. ',n' → logprob: -13.500202178955078
    7. ',
' → logprob: -13.625202178955078
    8. ',int' → logprob: -13.750202178955078
    9. '_,' → logprob: -14.875202178955078
    10. 'r' → logprob: -15.125202178955078

Token 481: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.38704317808151245
    2. 'r' → logprob: -1.1370432376861572
    3. '=' → logprob: -8.762042999267578
    4. ' =' → logprob: -11.887042999267578
    5. '=r' → logprob: -13.137042999267578
    6. ' 
' → logprob: -13.262042999267578
    7. ' ' → logprob: -13.762042999267578
    8. '<|end|>' → logprob: -13.887042999267578
    9. '=int' → logprob: -14.012042999267578
    10. ' ' → logprob: -15.012042999267578

Token 482: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932306289672852
    2. ' =' → logprob: -0.6932306289672852
    3. '=int' → logprob: -9.443230628967285
    4. ',' → logprob: -13.443230628967285
    5. ')' → logprob: -13.943230628967285
    6. '=

' → logprob: -15.068230628967285
    7. 'int' → logprob: -15.318230628967285
    8. ')=' → logprob: -15.318230628967285
    9. '<|end|>' → logprob: -15.443230628967285
    10. '=
' → logprob: -15.568230628967285

Token 483: ' map' (ID: 4014)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5847687721252441
    2. ' int' → logprob: -1.0847687721252441
    3. ' map' → logprob: -2.334768772125244
    4. 'map' → logprob: -4.834768772125244
    5. '[int' → logprob: -12.959768295288086
    6. ' n' → logprob: -14.084768295288086
    7. '(int' → logprob: -15.209768295288086
    8. 'n' → logprob: -15.709768295288086
    9. '   ' → logprob: -16.209768295288086
    10. ' list' → logprob: -16.459768295288086

Token 484: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00010437761375214905
    2. 'int' → logprob: -9.250103950500488
    3. '(' → logprob: -11.750103950500488
    4. ' int' → logprob: -16.000104904174805
    5. '=int' → logprob: -16.250104904174805
    6. '(str' → logprob: -17.000104904174805
    7. '[int' → logprob: -17.500104904174805
    8. '<int' → logprob: -18.500104904174805
    9. '	int' → logprob: -18.625104904174805
    10. '(
' → logprob: -18.875104904174805

Token 485: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.11186832189559937
    2. '(input' → logprob: -2.361868381500244
    3. ')' → logprob: -5.736868381500244
    4. '(' → logprob: -6.111868381500244
    5. ',' → logprob: -6.361868381500244
    6. 'n' → logprob: -6.361868381500244
    7. 'input' → logprob: -6.861868381500244
    8. ',input' → logprob: -6.986868381500244
    9. ',n' → logprob: -7.486868381500244
    10. ' (' → logprob: -9.236867904663086

Token 486: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002476016292348504
    2. ' n' → logprob: -6.002476215362549
    3. '(n' → logprob: -15.12747573852539
    4. 'input' → logprob: -17.50247573852539
    5. '	n' → logprob: -18.00247573852539
    6. '[n' → logprob: -18.37747573852539
    7. ')n' → logprob: -18.50247573852539
    8. '   ' → logprob: -19.25247573852539
    9. ' ' → logprob: -20.50247573852539
    10. '
' → logprob: -20.62747573852539

Token 487: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.5554434657096863
    2. 'input' → logprob: -1.430443525314331
    3. '_lines' → logprob: -2.930443525314331
    4. '[input' → logprob: -3.180443525314331
    5. '_n' → logprob: -3.680443525314331
    6. '[n' → logprob: -3.805443525314331
    7. '(input' → logprob: -4.555443286895752
    8. ')' → logprob: -5.180443286895752
    9. '(n' → logprob: -5.180443286895752
    10. '[' → logprob: -5.180443286895752

Token 488: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014120421838015318
    2. ')
' → logprob: -9.125141143798828
    3. '[idx' → logprob: -10.625141143798828
    4. ');' → logprob: -13.000141143798828
    5. ' )' → logprob: -13.625141143798828
    6. '),' → logprob: -14.625141143798828
    7. ').' → logprob: -14.750141143798828
    8. ')

' → logprob: -14.750141143798828
    9. '(idx' → logprob: -15.125141143798828
    10. ')
' → logprob: -15.250141143798828

Token 489: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11476409435272217
    2. '<|end|>' → logprob: -2.3647642135620117
    3. '
' → logprob: -5.114764213562012
    4. '<|end|>' → logprob: -5.239764213562012
    5. '        
' → logprob: -7.614764213562012
    6. '```' → logprob: -7.864764213562012
    7. '   ' → logprob: -7.864764213562012
    8. ')' → logprob: -7.989764213562012
    9. '\n' → logprob: -8.114764213562012
    10. '[idx' → logprob: -8.489764213562012

Token 490: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.048929568380117416
    2. 'if' → logprob: -3.298929452896118
    3. '       ' → logprob: -4.673929691314697
    4. '```' → logprob: -6.673929691314697
    5. '   ' → logprob: -8.673929214477539
    6. '``' → logprob: -10.923929214477539
    7. '	idx' → logprob: -11.048929214477539
    8. ' idx' → logprob: -11.673929214477539
    9. 'deck' → logprob: -11.923929214477539
    10. 'cards' → logprob: -12.923929214477539

Token 491: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3870818316936493
    2. '+=' → logprob: -1.1370818614959717
    3. '+' → logprob: -8.51208209991455
    4. ']+=' → logprob: -13.01208209991455
    5. ' +' → logprob: -13.26208209991455
    6. '<|end|>' → logprob: -13.26208209991455
    7. ')' → logprob: -13.63708209991455
    8. '=' → logprob: -14.13708209991455
    9. '```' → logprob: -14.63708209991455
    10. '   ' → logprob: -14.76208209991455

Token 492: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '```' → logprob: -20.25010871887207
    4. '   ' → logprob: -20.62510871887207
    5. '+' → logprob: -20.87510871887207
    6. '
' → logprob: -21.25010871887207
    7. ' ' → logprob: -21.75010871887207
    8. '2' → logprob: -22.00010871887207
    9. '0' → logprob: -22.00010871887207
    10. ' +' → logprob: -22.87510871887207

Token 493: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. 'r' → logprob: -18.5
    4. '0' → logprob: -18.625
    5. '```' → logprob: -19.3125
    6. '   ' → logprob: -20.125
    7. '１' → logprob: -20.625
    8. '2' → logprob: -20.625
    9. 'n' → logprob: -21.125
    10. '
' → logprob: -21.3125

Token 494: '
' (ID: 198)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.17781513929367065
    2. '       ' → logprob: -1.9278151988983154
    3. ' deck' → logprob: -5.302814960479736
    4. '   ' → logprob: -5.427814960479736
    5. '        
' → logprob: -6.552814960479736
    6. '```' → logprob: -6.552814960479736
    7. ' decks' → logprob: -6.802814960479736
    8. 'if' → logprob: -6.927814960479736
    9. 'cards' → logprob: -6.927814960479736
    10. '(deck' → logprob: -7.052814960479736

Token 495: '       ' (ID: 309)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.25941532850265503
    2. '       ' → logprob: -1.5094153881072998
    3. '```' → logprob: -5.384415149688721
    4. ' deck' → logprob: -6.634415149688721
    5. '   ' → logprob: -7.884415149688721
    6. 'if' → logprob: -8.009415626525879
    7. 'cards' → logprob: -8.384415626525879
    8. '(deck' → logprob: -8.759415626525879
    9. ' decks' → logprob: -8.884415626525879
    10. 'de' → logprob: -9.509415626525879

Token 496: ' c' (ID: 274)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.0022103239316493273
    2. 'if' → logprob: -7.0022101402282715
    3. 'cards' → logprob: -7.0022101402282715
    4. 'for' → logprob: -8.62721061706543
    5. '```' → logprob: -9.37721061706543
    6. '   ' → logprob: -9.62721061706543
    7. ' deck' → logprob: -10.37721061706543
    8. '#' → logprob: -12.25221061706543
    9. '(deck' → logprob: -12.75221061706543
    10. 'initial' → logprob: -12.87721061706543

Token 497: '_values' (ID: 20393)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.476591557264328
    2. ' =' → logprob: -0.9765915870666504
    3. 's' → logprob: -6.10159158706665
    4. '=[]' → logprob: -9.726591110229492
    5. '   ' → logprob: -10.226591110229492
    6. ',' → logprob: -10.226591110229492
    7. '_values' → logprob: -10.476591110229492
    8. 'ards' → logprob: -10.726591110229492
    9. 'values' → logprob: -11.351591110229492
    10. '=int' → logprob: -11.351591110229492

Token 498: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07891600579023361
    2. '=' → logprob: -2.578916072845459
    3. '=[]' → logprob: -11.2039155960083
    4. '   ' → logprob: -11.3289155960083
    5. ' =[' → logprob: -15.7039155960083
    6. '    ' → logprob: -15.9539155960083
    7. '=[' → logprob: -16.203916549682617
    8. '[]' → logprob: -16.203916549682617
    9. '=[]
' → logprob: -16.828916549682617
    10. ' ' → logprob: -16.828916549682617

Token 499: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.009006052277982235
    2. ' list' → logprob: -4.759006023406982
    3. '[]' → logprob: -8.00900650024414
    4. '[list' → logprob: -10.00900650024414
    5. '[' → logprob: -12.25900650024414
    6. 'input' → logprob: -12.38400650024414
    7. ' []' → logprob: -13.13400650024414
    8. '[]
' → logprob: -13.50900650024414
    9. '[]

' → logprob: -14.50900650024414
    10. '[input' → logprob: -15.13400650024414

Token 500: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03304971754550934
    2. 'while' → logprob: -3.7830498218536377
    3. ' while' → logprob: -5.533049583435059
    4. 'for' → logprob: -6.033049583435059
    5. ' for' → logprob: -6.158049583435059
    6. '   ' → logprob: -7.658049583435059
    7. '	while' → logprob: -8.033049583435059
    8. '<|end|>' → logprob: -8.158049583435059
    9. '	   ' → logprob: -9.783049583435059
    10. '```' → logprob: -10.408049583435059

Token 501: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3897663354873657
    2. 'while' (adapté à ' while') → logprob: -1.1397663354873657
    3. '       ' → logprob: -6.639766216278076
    4. ' for' → logprob: -6.639766216278076
    5. ' while' → logprob: -8.264766693115234
    6. 'c' → logprob: -12.014766693115234
    7. '```' → logprob: -12.639766693115234
    8. '	for' → logprob: -12.764766693115234
    9. '	while' → logprob: -12.764766693115234
    10. '   ' → logprob: -12.764766693115234

Token 502: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10997287929058075
    2. 'idx' → logprob: -2.4849729537963867
    3. ' len' → logprob: -4.109972953796387
    4. ' idx' → logprob: -5.609972953796387
    5. 'r' → logprob: -7.609972953796387
    6. 'c' → logprob: -8.484972953796387
    7. '   ' → logprob: -11.359972953796387
    8. '(len' → logprob: -11.609972953796387
    9. ' c' → logprob: -12.109972953796387
    10. ' r' → logprob: -12.484972953796387

Token 503: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -4.7159857786027715e-05
    2. 'c' → logprob: -10.000046730041504
    3. '(' → logprob: -13.375046730041504
    4. ' c' → logprob: -16.37504768371582
    5. ' (' → logprob: -17.12504768371582
    6. '(code' → logprob: -18.00004768371582
    7. ')c' → logprob: -18.37504768371582
    8. '(input' → logprob: -18.75004768371582
    9. '[c' → logprob: -18.87504768371582
    10. '(com' → logprob: -19.62504768371582

Token 504: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0029479898512363434
    2. '_' → logprob: -6.877947807312012
    3. 's' → logprob: -7.627947807312012
    4. 'values' → logprob: -7.752947807312012
    5. ')' → logprob: -7.877947807312012
    6. '_c' → logprob: -8.252947807312012
    7. '(c' → logprob: -9.627947807312012
    8. '<c' → logprob: -9.627947807312012
    9. '<' → logprob: -9.877947807312012
    10. ' <' → logprob: -9.877947807312012

Token 505: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.02644624561071396
    2. '<' → logprob: -3.6514463424682617
    3. '<n' → logprob: -10.151446342468262
    4. '<c' → logprob: -10.151446342468262
    5. ')' → logprob: -10.401446342468262
    6. '()<' → logprob: -11.401446342468262
    7. '<len' → logprob: -11.526446342468262
    8. ')<' → logprob: -12.651446342468262
    9. ' ' → logprob: -12.651446342468262
    10. '<int' → logprob: -13.651446342468262

Token 506: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2072822004556656
    2. ' <' → logprob: -1.7072821855545044
    3. '<n' → logprob: -5.707282066345215
    4. '<c' → logprob: -6.332282066345215
    5. '<len' → logprob: -7.582282066345215
    6. '<num' → logprob: -9.832282066345215
    7. '<int' → logprob: -9.957282066345215
    8. '<size' → logprob: -10.082282066345215
    9. '<count' → logprob: -11.207282066345215
    10. '<th' → logprob: -11.707282066345215

Token 507: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.941850526549388e-06
    2. ' r' → logprob: -11.750007629394531
    3. '2' → logprob: -17.87500762939453
    4. '(r' → logprob: -18.62500762939453
    5. '	r' → logprob: -19.00000762939453
    6. '=r' → logprob: -19.50000762939453
    7. '[r' → logprob: -19.87500762939453
    8. 'n' → logprob: -20.25000762939453
    9. '_r' → logprob: -20.37500762939453
    10. 'int' → logprob: -20.62500762939453

Token 508: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06757108867168427
    2. ':' → logprob: -2.9425711631774902
    3. ':
' → logprob: -4.69257116317749
    4. 'and' → logprob: -5.69257116317749
    5. '   ' → logprob: -9.817570686340332
    6. '           ' → logprob: -12.192570686340332
    7. '       ' → logprob: -12.817570686340332
    8. '):
' → logprob: -13.817570686340332
    9. ' :' → logprob: -13.817570686340332
    10. ':int' → logprob: -13.817570686340332

Token 509: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23121148347854614
    2. ' c' → logprob: -2.1062114238739014
    3. ' and' → logprob: -2.7312114238739014
    4. '       ' → logprob: -4.8562116622924805
    5. ':' → logprob: -5.3562116622924805
    6. ':
' → logprob: -5.9812116622924805
    7. 'c' → logprob: -6.6062116622924805
    8. '   ' → logprob: -7.1062116622924805
    9. ',' → logprob: -7.4812116622924805
    10. ':c' → logprob: -7.9812116622924805

Token 510: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5694015026092529
    2. ' c' → logprob: -1.194401502609253
    3. '           ' → logprob: -2.069401502609253
    4. '       ' → logprob: -5.694401741027832
    5. '   ' → logprob: -7.069401741027832
    6. '               ' → logprob: -8.319401741027832
    7. ' parts' → logprob: -9.069401741027832
    8. ' ' → logprob: -9.319401741027832
    9. '
' → logprob: -9.944401741027832
    10. 'tokens' → logprob: -10.069401741027832

Token 511: ' Lire' (ID: 57624)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05786220356822014
    2. ' c' → logprob: -2.9328622817993164
    3. 'line' → logprob: -7.057862281799316
    4. ' parts' → logprob: -7.432862281799316
    5. ' line' → logprob: -8.182862281799316
    6. 'for' → logprob: -8.182862281799316
    7. '           ' → logprob: -8.432862281799316
    8. 'parts' → logprob: -8.557862281799316
    9. 'values' → logprob: -8.682862281799316
    10. 'vals' → logprob: -9.182862281799316

Token 512: ' les' (ID: 1341)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.1481294184923172
    2. 'c' → logprob: -2.023129463195801
    3. '   ' → logprob: -6.898129463195801
    4. ' list' → logprob: -7.273129463195801
    5. '           ' → logprob: -7.648129463195801
    6. 'int' → logprob: -7.648129463195801
    7. ' ' → logprob: -7.898129463195801
    8. 'ints' → logprob: -8.2731294631958
    9. ' lines' → logprob: -8.2731294631958
    10. ' parts' → logprob: -8.5231294631958

Token 513: ' valeurs' (ID: 73668)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0648840144276619
    2. ' c' → logprob: -2.8148839473724365
    3. 'vals' → logprob: -6.189884185791016
    4. 'values' → logprob: -7.939884185791016
    5. 'tokens' → logprob: -9.439884185791016
    6. ' lignes' → logprob: -9.689884185791016
    7. ' vals' → logprob: -9.939884185791016
    8. ' line' → logprob: -10.064884185791016
    9. ' parts' → logprob: -10.064884185791016
    10. ' values' → logprob: -10.314884185791016

Token 514: ' de' (ID: 334)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3755905032157898
    2. '           ' → logprob: -2.1255905628204346
    3. ' =' → logprob: -2.7505905628204346
    4. '       ' → logprob: -2.8755905628204346
    5. '=' → logprob: -3.7505905628204346
    6. ' c' → logprob: -3.8755905628204346
    7. '(c' → logprob: -4.8755903244018555
    8. '_c' → logprob: -5.1255903244018555
    9. ' de' → logprob: -6.2505903244018555
    10. 'de' → logprob: -6.3755903244018555

Token 515: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.027695031836628914
    2. 'list' → logprob: -4.152695178985596
    3. ' c' → logprob: -4.777695178985596
    4. ' list' → logprob: -6.152695178985596
    5. 'input' → logprob: -7.152695178985596
    6. ' input' → logprob: -9.152694702148438
    7. '*c' → logprob: -10.402694702148438
    8. ' ' → logprob: -10.777694702148438
    9. 'idx' → logprob: -10.902694702148438
    10. '   ' → logprob: -10.902694702148438

Token 516: ',' (ID: 11)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -1.4043002128601074
    2. '       ' → logprob: -1.6543002128601074
    3. 'tokens' → logprob: -1.6543002128601074
    4. ' =' → logprob: -1.9043002128601074
    5. '           ' → logprob: -2.7793002128601074
    6. ' +=' → logprob: -3.4043002128601074
    7. '_tokens' → logprob: -3.5293002128601074
    8. '=' → logprob: -3.7793002128601074
    9. '_line' → logprob: -4.404300212860107
    10. ',' → logprob: -4.529300212860107

Token 517: ' potent' (ID: 35668)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3488205373287201
    2. ' c' → logprob: -1.4738205671310425
    3. 'c' → logprob: -2.848820447921753
    4. ' line' → logprob: -6.098820686340332
    5. '       ' → logprob: -6.473820686340332
    6. ' parts' → logprob: -7.223820686340332
    7. ' values' → logprob: -7.598820686340332
    8. ' lines' → logprob: -7.723820686340332
    9. 'tokens' → logprob: -7.973820686340332
    10. 'values' → logprob: -8.223820686340332

Token 518: 'iellement' (ID: 70958)
  Prédit: 'iellement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iellement' → logprob: -0.00015586259542033076
    2. 'ent' → logprob: -8.875155448913574
    3. '```' → logprob: -12.250155448913574
    4. 't' → logprob: -13.125155448913574
    5. 'ment' → logprob: -13.625155448913574
    6. 'ielle' → logprob: -13.625155448913574
    7. 'ement' → logprob: -14.000155448913574
    8. 'uellement' → logprob: -14.125155448913574
    9. 'iblement' → logprob: -14.250155448913574
    10. 'el' → logprob: -14.250155448913574

Token 519: ' plusieurs' (ID: 20875)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.5341503620147705
    2. ' c' → logprob: -2.1591503620147705
    3. ' input' → logprob: -2.1591503620147705
    4. 'list' → logprob: -2.1591503620147705
    5. 'input' → logprob: -2.2841503620147705
    6. 'c' → logprob: -2.2841503620147705
    7. ' in' → logprob: -3.5341503620147705
    8. 'split' → logprob: -3.5341503620147705
    9. ' line' → logprob: -3.9091503620147705
    10. '       ' → logprob: -4.034150123596191

Token 520: ' sur' (ID: 1512)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.840414822101593
    2. ' in' → logprob: -1.2154147624969482
    3. ' c' → logprob: -3.0904147624969482
    4. '       ' → logprob: -3.2154147624969482
    5. ' and' → logprob: -3.5904147624969482
    6. ' lines' → logprob: -3.5904147624969482
    7. 'values' → logprob: -3.8404147624969482
    8. 'c' → logprob: -4.215415000915527
    9. '_values' → logprob: -4.340415000915527
    10. 'in' → logprob: -4.590415000915527

Token 521: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5688930153846741
    2. ' la' → logprob: -0.9438930153846741
    3. 'input' → logprob: -4.193892955780029
    4. 'the' → logprob: -5.068892955780029
    5. 'une' → logprob: -5.193892955780029
    6. 'l' → logprob: -5.193892955780029
    7. ' une' → logprob: -5.318892955780029
    8. 'line' → logprob: -5.818892955780029
    9. ' input' → logprob: -6.568892955780029
    10. 'ligne' → logprob: -6.818892955780029

Token 522: ' même' (ID: 9679)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.24167799949645996
    2. 'line' → logprob: -1.99167799949646
    3. 'ligne' → logprob: -3.49167799949646
    4. ' input' → logprob: -4.366678237915039
    5. ' line' → logprob: -4.491678237915039
    6. 'same' → logprob: -4.616678237915039
    7. 'lines' → logprob: -5.366678237915039
    8. 'len' → logprob: -5.616678237915039
    9. ' same' → logprob: -6.491678237915039
    10. 'idx' → logprob: -7.116678237915039

Token 523: ' ligne' (ID: 19583)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5121187567710876
    2. 'ligne' → logprob: -1.6371188163757324
    3. ' line' → logprob: -1.7621188163757324
    4. ' ligne' → logprob: -3.5121188163757324
    5. 'l' → logprob: -5.887118816375732
    6. 'input' → logprob: -7.262118816375732
    7. ' idx' → logprob: -8.012118339538574
    8. 'idx' → logprob: -8.137118339538574
    9. '   ' → logprob: -8.512118339538574
    10. 'lines' → logprob: -9.637118339538574

Token 524: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04407382011413574
    2. ' c' → logprob: -3.5440738201141357
    3. ' and' → logprob: -5.794074058532715
    4. 'c' → logprob: -6.044074058532715
    5. '       ' → logprob: -6.044074058532715
    6. ',' → logprob: -6.669074058532715
    7. ':' → logprob: -6.919074058532715
    8. '(c' → logprob: -7.169074058532715
    9. ':
' → logprob: -7.294074058532715
    10. ',c' → logprob: -7.419074058532715

Token 525: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5473861694335938
    2. '       ' → logprob: -0.9223861694335938
    3. ' c' → logprob: -4.797386169433594
    4. ',' → logprob: -5.047386169433594
    5. 'tokens' → logprob: -6.172386169433594
    6. 'c' → logprob: -7.172386169433594
    7. ' =' → logprob: -7.297386169433594
    8. ' lines' → logprob: -7.547386169433594
    9. '   ' → logprob: -7.547386169433594
    10. ' and' → logprob: -7.797386169433594

Token 526: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.20698808133602142
    2. ' c' → logprob: -1.7069880962371826
    3. '           ' → logprob: -5.9569878578186035
    4. ' parts' → logprob: -6.4569878578186035
    5. 'for' → logprob: -7.9569878578186035
    6. 'parts' → logprob: -8.206988334655762
    7. ' for' → logprob: -8.331988334655762
    8. ' line' → logprob: -8.581988334655762
    9. 'line' → logprob: -8.956988334655762
    10. 'vals' → logprob: -9.956988334655762

Token 527: '_values' (ID: 20393)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.1475858688354492
    2. '_vals' → logprob: -1.1475858688354492
    3. '_tokens' → logprob: -2.147585868835449
    4. '_values' → logprob: -2.272585868835449
    5. '+=' → logprob: -3.147585868835449
    6. '_parts' → logprob: -3.397585868835449
    7. ' +=' → logprob: -3.772585868835449
    8. 'vals' → logprob: -4.397585868835449
    9. '.extend' → logprob: -4.897585868835449
    10. 's' → logprob: -4.897585868835449

Token 528: ' +=' (ID: 2757)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.04606328159570694
    2. ' +=' → logprob: -3.796063184738159
    3. '+=' → logprob: -3.796063184738159
    4. '.' → logprob: -9.296063423156738
    5. '   ' → logprob: -12.046063423156738
    6. 'extend' → logprob: -13.421063423156738
    7. '+' → logprob: -14.796063423156738
    8. ' .' → logprob: -15.421063423156738
    9. '       ' → logprob: -15.546063423156738
    10. '+=(' → logprob: -15.546063423156738

Token 529: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00864659808576107
    2. ' list' → logprob: -5.008646488189697
    3. 'map' → logprob: -6.258646488189697
    4. 'input' → logprob: -11.383646965026855
    5. ' map' → logprob: -13.008646965026855
    6. '[' → logprob: -13.883646965026855
    7. '[list' → logprob: -14.008646965026855
    8. ' input' → logprob: -16.50864601135254
    9. '[input' → logprob: -16.50864601135254
    10. '(list' → logprob: -18.25864601135254

Token 530: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -6.630610641877865e-06
    2. 'map' → logprob: -12.000006675720215
    3. '(' → logprob: -14.750006675720215
    4. '(
' → logprob: -17.6250057220459
    5. ' map' → logprob: -18.0000057220459
    6. '.map' → logprob: -19.3750057220459
    7. '	map' → logprob: -20.0000057220459
    8. '_map' → logprob: -21.7500057220459
    9. ',map' → logprob: -21.7500057220459
    10. '(int' → logprob: -22.5000057220459

Token 531: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005712636047974229
    2. '(' → logprob: -7.500571250915527
    3. 'int' → logprob: -11.125571250915527
    4. '(lambda' → logprob: -13.250571250915527
    5. '(
' → logprob: -14.125571250915527
    6. '[int' → logprob: -14.625571250915527
    7. ' (' → logprob: -15.125571250915527
    8. '=int' → logprob: -16.375572204589844
    9. '<int' → logprob: -16.375572204589844
    10. ' int' → logprob: -16.875572204589844

Token 532: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0010775875998660922
    2. '(' → logprob: -7.376077651977539
    3. ',input' → logprob: -8.626077651977539
    4. 'input' → logprob: -8.876077651977539
    5. ' (' → logprob: -9.126077651977539
    6. ',' → logprob: -11.126077651977539
    7. '(
' → logprob: -12.001077651977539
    8. ' input' → logprob: -13.626077651977539
    9. '(

' → logprob: -15.376077651977539
    10. '```' → logprob: -15.876077651977539

Token 533: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019461298361420631
    2. ' input' → logprob: -6.251945972442627
    3. '(input' → logprob: -11.001946449279785
    4. '   ' → logprob: -14.376946449279785
    5. ',input' → logprob: -16.62694549560547
    6. ' ' → logprob: -16.75194549560547
    7. '           ' → logprob: -16.87694549560547
    8. '[input' → logprob: -17.12694549560547
    9. '	input' → logprob: -17.50194549560547
    10. '               ' → logprob: -17.50194549560547

Token 534: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.05085432901978493
    2. '(input' → logprob: -3.050854444503784
    3. '(' → logprob: -6.925854206085205
    4. '().' → logprob: -8.425854682922363
    5. '_.' → logprob: -8.675854682922363
    6. 'lines' → logprob: -8.800854682922363
    7. '(lines' → logprob: -8.800854682922363
    8. '(_' → logprob: -9.300854682922363
    9. 'Lines' → logprob: -9.800854682922363
    10. ')' → logprob: -9.925854682922363

Token 535: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.054500666621607e-06
    2. 'idx' → logprob: -14.00000286102295
    3. '(idx' → logprob: -14.00000286102295
    4. ' [' → logprob: -14.50000286102295
    5. '[' → logprob: -14.62500286102295
    6. ' idx' → logprob: -15.25000286102295
    7. '```' → logprob: -16.750003814697266
    8. '[
' → logprob: -17.125003814697266
    9. '   ' → logprob: -17.625003814697266
    10. ')[' → logprob: -19.250003814697266

Token 536: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.001375114545226097
    2. '.strip' → logprob: -6.876375198364258
    3. '().' → logprob: -9.001375198364258
    4. '()].' → logprob: -9.501375198364258
    5. ' ].' → logprob: -10.251375198364258
    6. ']' → logprob: -10.626375198364258
    7. ''].' → logprob: -10.626375198364258
    8. '[idx' → logprob: -11.001375198364258
    9. '   ' → logprob: -11.876375198364258
    10. '"].' → logprob: -11.876375198364258

Token 537: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -9.77022064034827e-05
    2. 'split' → logprob: -9.250097274780273
    3. ' strip' → logprob: -13.750097274780273
    4. '.strip' → logprob: -14.625097274780273
    5. '(strip' → logprob: -17.625097274780273
    6. 'rstrip' → logprob: -20.625097274780273
    7. '_strip' → logprob: -21.250097274780273
    8. '-strip' → logprob: -22.125097274780273
    9. ' split' → logprob: -22.250097274780273
    10. '   ' → logprob: -22.750097274780273

Token 538: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '()' → logprob: -15.25
    3. ' ().' → logprob: -15.875
    4. '.split' → logprob: -18.625
    5. '   ' → logprob: -20.75
    6. '.' → logprob: -20.875
    7. '(' → logprob: -21.375
    8. '()
' → logprob: -22.375
    9. ' .' → logprob: -22.75
    10. 'split' → logprob: -23.0

Token 539: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. ' split' → logprob: -15.25
    3. '.split' → logprob: -17.375
    4. '(split' → logprob: -19.125
    5. 'spl' → logprob: -21.75
    6. 'strip' → logprob: -21.75
    7. 'rstrip' → logprob: -22.0
    8. 'replace' → logprob: -23.0
    9. '_split' → logprob: -23.625
    10. ')' → logprob: -24.0

Token 540: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0015950803644955158
    2. '()))
' → logprob: -7.0015950202941895
    3. '()' → logprob: -7.8765950202941895
    4. '))' → logprob: -8.251595497131348
    5. '(' → logprob: -10.501595497131348
    6. '()));' → logprob: -12.376595497131348
    7. '())' → logprob: -12.501595497131348
    8. '())))' → logprob: -12.751595497131348
    9. '()))

' → logprob: -13.251595497131348
    10. '()))
' → logprob: -13.751595497131348

Token 541: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00326980696991086
    2. '       ' → logprob: -6.253269672393799
    3. 'idx' → logprob: -7.003269672393799
    4. '   ' → logprob: -8.628270149230957
    5. '               ' → logprob: -9.253270149230957
    6. '[idx' → logprob: -10.128270149230957
    7. '
' → logprob: -10.628270149230957
    8. '```' → logprob: -11.128270149230957
    9. '                   ' → logprob: -11.253270149230957
    10. '		' → logprob: -11.253270149230957

Token 542: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.017179252579808235
    2. '           ' → logprob: -4.517179489135742
    3. ' idx' → logprob: -5.767179489135742
    4. '       ' → logprob: -5.892179489135742
    5. '   ' → logprob: -9.017179489135742
    6. '	idx' → logprob: -9.767179489135742
    7. '[idx' → logprob: -10.892179489135742
    8. '_idx' → logprob: -11.517179489135742
    9. '               ' → logprob: -12.017179489135742
    10. '
' → logprob: -13.142179489135742

Token 543: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.034074634313583374
    2. ' +=' → logprob: -3.409074544906616
    3. '+' → logprob: -7.784074783325195
    4. ']+=' → logprob: -12.034074783325195
    5. '```' → logprob: -13.034074783325195
    6. '=' → logprob: -13.409074783325195
    7. '   ' → logprob: -14.034074783325195
    8. '++' → logprob: -14.659074783325195
    9. '+='' → logprob: -14.659074783325195
    10. '<|end|>' → logprob: -15.284074783325195

Token 544: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '(' → logprob: -16.37504005432129
    4. '```' → logprob: -17.62504005432129
    5. '0' → logprob: -17.87504005432129
    6. '   ' → logprob: -18.12504005432129
    7. '１' → logprob: -20.06254005432129
    8. '[' → logprob: -20.25004005432129
    9. '       ' → logprob: -20.37504005432129
    10. '           ' → logprob: -20.37504005432129

Token 545: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. 'len' → logprob: -18.250003814697266
    4. '(' → logprob: -19.625003814697266
    5. '```' → logprob: -20.000003814697266
    6. '0' → logprob: -20.125003814697266
    7. '１' → logprob: -20.562503814697266
    8. '   ' → logprob: -20.625003814697266
    9. '
' → logprob: -20.812503814697266
    10. 'r' → logprob: -21.750003814697266

Token 546: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03772435709834099
    2. '
' → logprob: -3.537724256515503
    3. '<|end|>' → logprob: -5.412724494934082
    4. '        
' → logprob: -6.287724494934082
    5. '   ' → logprob: -7.037724494934082
    6. '    
' → logprob: -8.037724494934082
    7. '```' → logprob: -9.162724494934082
    8. '  
' → logprob: -9.537724494934082
    9. ' for' → logprob: -9.787724494934082
    10. '<|end|>' → logprob: -10.412724494934082

Token 547: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034495994448661804
    2. 'for' → logprob: -4.034495830535889
    3. ' for' → logprob: -4.784495830535889
    4. '```' → logprob: -5.534495830535889
    5. '   ' → logprob: -5.909495830535889
    6. '
' → logprob: -7.534495830535889
    7. 'if' → logprob: -8.284496307373047
    8. '        
' → logprob: -8.909496307373047
    9. ' if' → logprob: -9.659496307373047
    10. '<|end|>' → logprob: -9.784496307373047

Token 548: ' #' (ID: 1069)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.03238518908619881
    2. '       ' → logprob: -3.5323851108551025
    3. 'cards' → logprob: -6.532385349273682
    4. '```' → logprob: -7.407385349273682
    5. ' deck' → logprob: -8.282384872436523
    6. '(deck' → logprob: -9.532384872436523
    7. 'for' → logprob: -9.657384872436523
    8. 'n' → logprob: -10.032384872436523
    9. '   ' → logprob: -10.282384872436523
    10. '        
' → logprob: -10.532384872436523

Token 549: ' Initial' (ID: 9209)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.01975233666598797
    2. '       ' → logprob: -4.019752502441406
    3. 'cards' → logprob: -7.269752502441406
    4. '#' → logprob: -7.519752502441406
    5. ' deck' → logprob: -8.519752502441406
    6. '   ' → logprob: -10.019752502441406
    7. '(deck' → logprob: -11.269752502441406
    8. '        
' → logprob: -11.269752502441406
    9. 'for' → logprob: -11.519752502441406
    10. 'n' → logprob: -11.519752502441406

Token 550: 'iser' (ID: 7466)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.028999924659729004
    2. '   ' → logprob: -5.1539998054504395
    3. ' deck' → logprob: -5.1539998054504395
    4. 'iser' → logprob: -5.2789998054504395
    5. '       ' → logprob: -5.5289998054504395
    6. 'ize' → logprob: -6.0289998054504395
    7. '#' → logprob: -6.7789998054504395
    8. '_de' → logprob: -7.1539998054504395
    9. '(deck' → logprob: -7.2789998054504395
    10. 'er' → logprob: -7.4039998054504395

Token 551: ' le' (ID: 505)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.005992312915623188
    2. ' deck' → logprob: -5.130992412567139
    3. '   ' → logprob: -10.38099193572998
    4. '       ' → logprob: -11.75599193572998
    5. '(deck' → logprob: -12.00599193572998
    6. '```' → logprob: -12.38099193572998
    7. 'stack' → logprob: -12.50599193572998
    8. 'current' → logprob: -13.38099193572998
    9. 'le' → logprob: -13.75599193572998
    10. 'deque' → logprob: -13.75599193572998

Token 552: ' deck' (ID: 16942)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -9.686778503237292e-05
    2. ' deck' → logprob: -9.250097274780273
    3. 'stack' → logprob: -15.500097274780273
    4. '```' → logprob: -16.000097274780273
    5. 'deque' → logprob: -16.125097274780273
    6. 'current' → logprob: -16.125097274780273
    7. '   ' → logprob: -16.750097274780273
    8. '(deck' → logprob: -17.125097274780273
    9. 'card' → logprob: -17.250097274780273
    10. 'board' → logprob: -17.500097274780273

Token 553: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2626504600048065
    2. 'deck' → logprob: -1.512650489807129
    3. ' deck' → logprob: -4.637650489807129
    4. '   ' → logprob: -7.637650489807129
    5. '(deck' → logprob: -8.012650489807129
    6. '        
' → logprob: -9.762650489807129
    7. '
' → logprob: -10.637650489807129
    8. '```' → logprob: -11.387650489807129
    9. ' =' → logprob: -11.762650489807129
    10. '=' → logprob: -11.762650489807129

Token 554: ' cartes' (ID: 70753)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.21601632237434387
    2. ' deck' → logprob: -1.8410162925720215
    3. '       ' → logprob: -3.3410162925720215
    4. '   ' → logprob: -9.59101676940918
    5. '```' → logprob: -10.09101676940918
    6. '(deck' → logprob: -10.71601676940918
    7. '[' → logprob: -10.96601676940918
    8. 'list' → logprob: -11.34101676940918
    9. 'deque' → logprob: -11.71601676940918
    10. '        
' → logprob: -11.84101676940918

Token 555: ' num' (ID: 2269)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43003156781196594
    2. '=' → logprob: -1.0550315380096436
    3. '=list' → logprob: -6.680031776428223
    4. '   ' → logprob: -10.555031776428223
    5. ' list' → logprob: -11.055031776428223
    6. '=[' → logprob: -11.055031776428223
    7. 'list' → logprob: -11.805031776428223
    8. 'range' → logprob: -13.680031776428223
    9. '[' → logprob: -13.805031776428223
    10. ' range' → logprob: -13.930031776428223

Token 556: 'é' (ID: 377)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07213225215673447
    2. '=list' → logprob: -3.3221323490142822
    3. 'éro' → logprob: -3.9471323490142822
    4. '=[' → logprob: -5.572132110595703
    5. 'list' → logprob: -5.572132110595703
    6. ' =' → logprob: -6.447132110595703
    7. 'ber' → logprob: -6.572132110595703
    8. 'range' → logprob: -6.947132110595703
    9. 'é' → logprob: -7.197132110595703
    10. 'éros' → logprob: -7.197132110595703

Token 557: 'rot' (ID: 8150)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8478286266326904
    2. 'éro' → logprob: -1.8478286266326904
    3. 'ber' → logprob: -1.9728286266326904
    4. 'range' → logprob: -2.2228286266326904
    5. 'ro' → logprob: -3.2228286266326904
    6. '[' → logprob: -3.5978286266326904
    7. 'éros' → logprob: -3.7228286266326904
    8. 'list' → logprob: -3.9728286266326904
    9. 'érique' → logprob: -4.2228288650512695
    10. 'é' → logprob: -4.7228288650512695

Token 558: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.1340925544500351
    2. 'from' → logprob: -3.0090925693511963
    3. 'é' → logprob: -3.2590925693511963
    4. '=' → logprob: -4.009092330932617
    5. 'de' → logprob: -4.259092330932617
    6. 'ée' → logprob: -5.759092330932617
    7. 'és' → logprob: -7.759092330932617
    8. 'es' → logprob: -8.009092330932617
    9. 'range' → logprob: -8.134092330932617
    10. 'er' → logprob: -8.634092330932617

Token 559: ' de' (ID: 334)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9627569317817688
    2. '=' → logprob: -1.712756872177124
    3. 'from' → logprob: -1.712756872177124
    4. '=list' → logprob: -2.587756872177124
    5. ' =' → logprob: -3.212756872177124
    6. ' list' → logprob: -3.337756872177124
    7. '   ' → logprob: -3.462756872177124
    8. 'de' → logprob: -3.962756872177124
    9. ' from' → logprob: -3.962756872177124
    10. 'range' → logprob: -4.587757110595703

Token 560: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005678961053490639
    2. '0' → logprob: -6.005679130554199
    3. ' ' → logprob: -6.005679130554199
    4. '[' → logprob: -7.380679130554199
    5. 'n' → logprob: -10.1306791305542
    6. ' [' → logprob: -10.2556791305542
    7. ' bas' → logprob: -11.7556791305542
    8. 'bas' → logprob: -11.7556791305542
    9. '[n' → logprob: -12.0056791305542
    10. 'bottom' → logprob: -12.7556791305542

Token 561: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007747277268208563
    2. 'n' → logprob: -8.125774383544922
    3. '0' → logprob: -8.375774383544922
    4. ' ' → logprob: -8.625774383544922
    5. '[' → logprob: -9.875774383544922
    6. '[n' → logprob: -11.375774383544922
    7. ' n' → logprob: -13.500774383544922
    8. ' [' → logprob: -14.000774383544922
    9. 'bottom' → logprob: -14.000774383544922
    10. '
' → logprob: -14.500774383544922

Token 562: ' (' (ID: 350)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.7019946575164795
    2. ' à' → logprob: -0.7019946575164795
    3. '   ' → logprob: -6.326994895935059
    4. '       ' → logprob: -6.451994895935059
    5. ' ' → logprob: -6.701994895935059
    6. ' to' → logprob: -6.826994895935059
    7. 'to' → logprob: -6.826994895935059
    8. '0' → logprob: -7.451994895935059
    9. ',' → logprob: -7.576994895935059
    10. ' jusqu' → logprob: -9.076994895935059

Token 563: 'bas' (ID: 15207)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.333255797624588
    2. '0' → logprob: -1.3332557678222656
    3. ')' → logprob: -4.458255767822266
    4. 'à' → logprob: -5.958255767822266
    5. ' n' → logprob: -6.083255767822266
    6. ' )' → logprob: -6.958255767822266
    7. '(n' → logprob: -7.458255767822266
    8. ')n' → logprob: -7.458255767822266
    9. ' à' → logprob: -8.333255767822266
    10. ' ' → logprob: -8.458255767822266

Token 564: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06800008565187454
    2. ' à' → logprob: -3.443000078201294
    3. 'à' → logprob: -3.693000078201294
    4. 'au' → logprob: -5.943000316619873
    5. ' au' → logprob: -6.318000316619873
    6. ' )' → logprob: -6.443000316619873
    7. ' jusqu' → logprob: -6.693000316619873
    8. ',' → logprob: -7.943000316619873
    9. '   ' → logprob: -8.067999839782715
    10. ' ' → logprob: -8.567999839782715

Token 565: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9722883701324463
    2. 'à' → logprob: -1.0972883701324463
    3. ' à' → logprob: -1.5972883701324463
    4. '       ' → logprob: -3.3472883701324463
    5. ',' → logprob: -4.472288131713867
    6. '```' → logprob: -4.847288131713867
    7. ' jusqu' → logprob: -4.972288131713867
    8. 'au' → logprob: -5.222288131713867
    9. ' to' → logprob: -5.347288131713867
    10. 'to' → logprob: -6.222288131713867

Token 566: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019385118503123522
    2. ' n' → logprob: -6.251938343048096
    3. '(n' → logprob: -11.876938819885254
    4. ' (' → logprob: -13.876938819885254
    5. '   ' → logprob: -14.626938819885254
    6. ' ' → logprob: -15.126938819885254
    7. '0' → logprob: -15.876938819885254
    8. '{' → logprob: -15.876938819885254
    9. 'num' → logprob: -15.876938819885254
    10. '<|end|>' → logprob: -15.876938819885254

Token 567: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006718690041452646
    2. ' -' → logprob: -5.006718635559082
    3. '1' → logprob: -13.881718635559082
    4. '```' → logprob: -14.006718635559082
    5. '   ' → logprob: -14.631718635559082
    6. 'n' → logprob: -15.006718635559082
    7. '
' → logprob: -15.381718635559082
    8. '       ' → logprob: -15.756718635559082
    9. ' ' → logprob: -16.0067195892334
    10. '−' → logprob: -16.3817195892334

Token 568: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023202638840302825
    2. ' ' → logprob: -8.375231742858887
    3. '-' → logprob: -13.625231742858887
    4. ' -' → logprob: -16.000232696533203
    5. '   ' → logprob: -17.000232696533203
    6. '```' → logprob: -17.125232696533203
    7. ' ' → logprob: -17.500232696533203
    8. '+' → logprob: -18.000232696533203
    9. '  ' → logprob: -18.250232696533203
    10. '
' → logprob: -18.750232696533203

Token 569: ' (' (ID: 350)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.1955602616071701
    2. ' deck' → logprob: -2.1955602169036865
    3. '       ' → logprob: -2.9455602169036865
    4. '   ' → logprob: -4.320560455322266
    5. '(deck' → logprob: -8.195560455322266
    6. '```' → logprob: -9.945560455322266
    7. ',' → logprob: -10.445560455322266
    8. ' ' → logprob: -10.570560455322266
    9. '.deck' → logprob: -11.445560455322266
    10. 'de' → logprob: -11.570560455322266

Token 570: 'top' (ID: 8169)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4988360404968262
    2. ' haut' → logprob: -1.4988360404968262
    3. ' n' → logprob: -1.6238360404968262
    4. 'top' → logprob: -1.9988360404968262
    5. 'haut' → logprob: -2.498836040496826
    6. ' top' → logprob: -2.998836040496826
    7. ')' → logprob: -3.373836040496826
    8. '(n' → logprob: -3.498836040496826
    9. '(top' → logprob: -4.748836040496826
    10. ' (' → logprob: -5.123836040496826

Token 571: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14938880503177643
    2. '   ' → logprob: -2.2743887901306152
    3. 'deck' → logprob: -3.7743887901306152
    4. ')
' → logprob: -5.149388790130615
    5. ',' → logprob: -6.024388790130615
    6. '       ' → logprob: -6.774388790130615
    7. '
' → logprob: -7.149388790130615
    8. ' )' → logprob: -7.274388790130615
    9. ' deck' → logprob: -7.649388790130615
    10. '),' → logprob: -7.899388790130615

Token 572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18772383034229279
    2. 'deck' → logprob: -1.8127238750457764
    3. ' deck' → logprob: -5.187723636627197
    4. '   ' → logprob: -6.062723636627197
    5. '(deck' → logprob: -11.437724113464355
    6. '```' → logprob: -11.937724113464355
    7. '           ' → logprob: -12.562724113464355
    8. '        
' → logprob: -12.687724113464355
    9. '.deck' → logprob: -13.312724113464355
    10. 'current' → logprob: -13.437724113464355

Token 573: ' deck' (ID: 16942)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' (adapté à ' deck') → logprob: -0.006719871424138546
    2. ' deck' → logprob: -5.631720066070557
    3. '       ' → logprob: -6.256720066070557
    4. '   ' → logprob: -6.756720066070557
    5. '```' → logprob: -11.131719589233398
    6. '(deck' → logprob: -12.006719589233398
    7. ' ' → logprob: -12.881719589233398
    8. '.deck' → logprob: -13.256719589233398
    9. '    
' → logprob: -13.631719589233398
    10. 'stack' → logprob: -13.631719589233398

Token 574: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687199354171753
    2. '=' → logprob: -1.1368720531463623
    3. '=[' → logprob: -14.636872291564941
    4. '=
' → logprob: -15.511872291564941
    5. '=[]' → logprob: -16.261871337890625
    6. '＝' → logprob: -16.511871337890625
    7. ' =[' → logprob: -16.761871337890625
    8. '=list' → logprob: -17.261871337890625
    9. ' =
' → logprob: -17.386871337890625
    10. ')' → logprob: -17.511871337890625

Token 575: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07922441512346268
    2. ' list' → logprob: -2.5792243480682373
    3. '[list' → logprob: -8.079224586486816
    4. '[' → logprob: -11.079224586486816
    5. ' [' → logprob: -11.829224586486816
    6. '=list' → logprob: -13.579224586486816
    7. '(list' → logprob: -14.454224586486816
    8. '	list' → logprob: -16.5792236328125
    9. ' ' → logprob: -17.3292236328125
    10. 'List' → logprob: -17.5792236328125

Token 576: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0001238004770129919
    2. 'range' → logprob: -9.000123977661133
    3. '(' → logprob: -15.000123977661133
    4. ' range' → logprob: -18.000123977661133
    5. '(
' → logprob: -19.750123977661133
    6. '	range' → logprob: -20.000123977661133
    7. '```' → logprob: -20.625123977661133
    8. '(re' → logprob: -21.000123977661133
    9. '=' → logprob: -21.500123977661133
    10. '(map' → logprob: -22.750123977661133

Token 577: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.32392441527918e-05
    2. 'n' → logprob: -10.125053405761719
    3. '(' → logprob: -11.250053405761719
    4. ')n' → logprob: -17.50005340576172
    5. '0' → logprob: -17.62505340576172
    6. ' (' → logprob: -17.75005340576172
    7. '(
' → logprob: -18.50005340576172
    8. ' n' → logprob: -18.87505340576172
    9. ')' → logprob: -18.87505340576172
    10. '	n' → logprob: -19.12505340576172

Token 578: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008538239635527134
    2. ' ))' → logprob: -7.125854015350342
    3. ')' → logprob: -10.375853538513184
    4. '))
' → logprob: -11.625853538513184
    5. '0' → logprob: -13.250853538513184
    6. '-' → logprob: -13.375853538513184
    7. '   ' → logprob: -13.875853538513184
    8. ')))' → logprob: -14.000853538513184
    9. ' )' → logprob: -14.125853538513184
    10. ' ' → logprob: -14.125853538513184

Token 579: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020712753757834435
    2. 'for' → logprob: -6.252071380615234
    3. ' for' → logprob: -9.002071380615234
    4. '   ' → logprob: -11.002071380615234
    5. '```' → logprob: -13.127071380615234
    6. '           ' → logprob: -15.127071380615234
    7. '<|end|>' → logprob: -15.252071380615234
    8. '        
' → logprob: -15.627071380615234
    9. '	for' → logprob: -17.127071380615234
    10. ')' → logprob: -17.627071380615234

Token 580: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12816894054412842
    2. '       ' → logprob: -2.128169059753418
    3. ' for' → logprob: -6.753169059753418
    4. '   ' → logprob: -10.253169059753418
    5. '```' → logprob: -10.253169059753418
    6. '<|end|>' → logprob: -13.503169059753418
    7. '	for' → logprob: -14.628169059753418
    8. '        
' → logprob: -15.128169059753418
    9. '           ' → logprob: -15.878169059753418
    10. '``' → logprob: -17.2531681060791

Token 581: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004038593906443566
    2. '       ' → logprob: -8.00040340423584
    3. ' for' → logprob: -9.62540340423584
    4. '```' → logprob: -13.25040340423584
    5. '   ' → logprob: -14.37540340423584
    6. '	for' → logprob: -17.125404357910156
    7. '``' → logprob: -17.875404357910156
    8. 'For' → logprob: -18.750404357910156
    9. '        
' → logprob: -18.875404357910156
    10. 'from' → logprob: -19.375404357910156

Token 582: ' chaque' (ID: 21194)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.186801940202713
    2. 'c' → logprob: -1.9368019104003906
    3. ' _' → logprob: -4.186801910400391
    4. '_' → logprob: -4.811801910400391
    5. '_c' → logprob: -6.561801910400391
    6. ' ci' → logprob: -7.311801910400391
    7. ' i' → logprob: -8.81180191040039
    8. 'ci' → logprob: -9.18680191040039
    9. ' ' → logprob: -9.43680191040039
    10. '_i' → logprob: -9.81180191040039

Token 583: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.25207963585853577
    2. 'c' → logprob: -1.5020796060562134
    3. ' shuffle' → logprob: -9.877079963684082
    4. '_c' → logprob: -10.502079963684082
    5. ' riff' → logprob: -11.127079963684082
    6. '   ' → logprob: -11.502079963684082
    7. 'shuffle' → logprob: -11.752079963684082
    8. ' _' → logprob: -12.002079963684082
    9. 'r' → logprob: -12.377079963684082
    10. '	c' → logprob: -12.627079963684082

Token 584: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002162752440199256
    2. 'in' → logprob: -6.252162933349609
    3. '_value' → logprob: -8.75216293334961
    4. '_in' → logprob: -10.75216293334961
    5. '_values' → logprob: -10.87716293334961
    6. ':' → logprob: -11.62716293334961
    7. 'value' → logprob: -12.00216293334961
    8. ' dans' → logprob: -12.75216293334961
    9. '_' → logprob: -12.75216293334961
    10. '   ' → logprob: -12.87716293334961

Token 585: ' effectuer' (ID: 98625)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.3206983208656311
    2. '       ' → logprob: -2.0706982612609863
    3. ' deck' → logprob: -2.3206982612609863
    4. 'for' → logprob: -3.3206982612609863
    5. ' for' → logprob: -4.320698261260986
    6. '   ' → logprob: -8.070698738098145
    7. '(deck' → logprob: -9.070698738098145
    8. '```' → logprob: -9.195698738098145
    9. '           ' → logprob: -10.695698738098145
    10. '.deck' → logprob: -10.820698738098145

Token 586: ' une' (ID: 2463)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.5193963646888733
    2. 'riff' → logprob: -1.6443963050842285
    3. '   ' → logprob: -2.8943963050842285
    4. ' deck' → logprob: -2.8943963050842285
    5. '       ' → logprob: -3.3943963050842285
    6. ' shuffle' → logprob: -3.7693963050842285
    7. ' riff' → logprob: -3.8943963050842285
    8. 'shuffle' → logprob: -4.1443963050842285
    9. '```' → logprob: -6.7693963050842285
    10. 'c' → logprob: -6.8943963050842285

Token 587: ' opération' (ID: 86023)
  Prédit: 'riff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'riff' → logprob: -0.19540496170520782
    2. 'deck' → logprob: -1.8204050064086914
    3. ' riff' → logprob: -4.820405006408691
    4. '   ' → logprob: -6.695405006408691
    5. ' deck' → logprob: -6.695405006408691
    6. 'rif' → logprob: -6.695405006408691
    7. '```' → logprob: -6.820405006408691
    8. 'shuffle' → logprob: -7.070405006408691
    9. 'rift' → logprob: -7.695405006408691
    10. 'for' → logprob: -7.820405006408691

Token 588: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.36469966173171997
    2. 'de' → logprob: -1.3646996021270752
    3. 'riff' → logprob: -3.739699602127075
    4. '   ' → logprob: -4.239699840545654
    5. ' riff' → logprob: -5.239699840545654
    6. 'deck' → logprob: -5.864699840545654
    7. '       ' → logprob: -6.614699840545654
    8. '_de' → logprob: -6.864699840545654
    9. '    ' → logprob: -8.114699363708496
    10. ' deck' → logprob: -8.364699363708496

Token 589: ' riff' (ID: 146141)
  Prédit: 'riff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'riff' → logprob: -0.026990709826350212
    2. ' riff' → logprob: -3.6519906520843506
    3. 'deck' → logprob: -7.90199089050293
    4. 'rif' → logprob: -8.40199089050293
    5. 'rift' → logprob: -10.52699089050293
    6. '```' → logprob: -11.15199089050293
    7. '
' → logprob: -12.02699089050293
    8. 'shuffle' → logprob: -12.15199089050293
    9. 'ruff' → logprob: -12.15199089050293
    10. ' deck' → logprob: -12.27699089050293

Token 590: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.02975349873304367
    2. 'fle' → logprob: -3.5297534465789795
    3. 'f' → logprob: -13.404753684997559
    4. 'fe' → logprob: -14.279753684997559
    5. '_le' → logprob: -15.404753684997559
    6. '_' → logprob: -15.779753684997559
    7. 'lle' → logprob: -16.154752731323242
    8. '_f' → logprob: -16.154752731323242
    9. 'sle' → logprob: -16.529752731323242
    10. 'fl' → logprob: -16.904752731323242

Token 591: ' shuffle' (ID: 53490)
  Prédit: '_shuffle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shuffle' → logprob: -0.005470786709338427
    2. 'shuffle' → logprob: -5.3804707527160645
    3. ' shuffle' → logprob: -7.2554707527160645
    4. '_' → logprob: -9.880471229553223
    5. '   ' → logprob: -9.880471229553223
    6. '       ' → logprob: -10.880471229553223
    7. '_sh' → logprob: -11.130471229553223
    8. '```' → logprob: -13.505471229553223
    9. '.shuffle' → logprob: -13.755471229553223
    10. 'for' → logprob: -14.255471229553223

Token 592: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006977386772632599
    2. ' for' → logprob: -5.381977558135986
    3. 'for' → logprob: -6.131977558135986
    4. 'deck' → logprob: -9.756977081298828
    5. '   ' → logprob: -10.131977081298828
    6. ',' → logprob: -10.631977081298828
    7. '(deck' → logprob: -11.131977081298828
    8. '           ' → logprob: -12.006977081298828
    9. ' with' → logprob: -12.131977081298828
    10. ' and' → logprob: -12.131977081298828

Token 593: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002693363232538104
    2. ' for' → logprob: -6.377693176269531
    3. 'for' → logprob: -7.002693176269531
    4. '   ' → logprob: -9.877693176269531
    5. ',' → logprob: -11.377693176269531
    6. '           ' → logprob: -12.002693176269531
    7. 'deck' → logprob: -13.127693176269531
    8. ' and' → logprob: -13.252693176269531
    9. '```' → logprob: -14.002693176269531
    10. ' with' → logprob: -14.127693176269531

Token 594: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06531651318073273
    2. '       ' → logprob: -3.1903164386749268
    3. ' for' → logprob: -3.8153164386749268
    4. '   ' → logprob: -10.315316200256348
    5. '```' → logprob: -12.440316200256348
    6. 'deck' → logprob: -13.690316200256348
    7. '	for' → logprob: -15.065316200256348
    8. '           ' → logprob: -15.440316200256348
    9. '        
' → logprob: -15.815316200256348
    10. ' ' → logprob: -15.940316200256348

Token 595: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2519305646419525
    2. 'c' → logprob: -1.501930594444275
    3. '   ' → logprob: -14.751930236816406
    4. '	c' → logprob: -14.876930236816406
    5. '_c' → logprob: -15.501930236816406
    6. '```' → logprob: -15.751930236816406
    7. ')c' → logprob: -15.876930236816406
    8. ' ' → logprob: -16.876930236816406
    9. ' ' → logprob: -16.876930236816406
    10. '(c' → logprob: -17.376930236816406

Token 596: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00976813118904829
    2. 'in' → logprob: -4.634768009185791
    3. 's' → logprob: -12.25976848602295
    4. '_in' → logprob: -12.63476848602295
    5. ' ' → logprob: -13.38476848602295
    6. '   ' → logprob: -14.38476848602295
    7. '_' → logprob: -14.63476848602295
    8. 'c' → logprob: -14.88476848602295
    9. '  ' → logprob: -15.38476848602295
    10. '	in' → logprob: -15.50976848602295

Token 597: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20141801238059998
    2. ' c' → logprob: -1.7014180421829224
    3. '   ' → logprob: -12.951417922973633
    4. ')c' → logprob: -14.076417922973633
    5. '	c' → logprob: -14.201417922973633
    6. '(c' → logprob: -14.701417922973633
    7. '_c' → logprob: -15.576417922973633
    8. '```' → logprob: -16.451417922973633
    9. 'cation' → logprob: -16.826417922973633
    10. '$c' → logprob: -17.076417922973633

Token 598: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.012165471911430359
    2. 'c' → logprob: -5.262165546417236
    3. 'in' → logprob: -5.637165546417236
    4. 'values' → logprob: -7.137165546417236
    5. ' in' → logprob: -7.262165546417236
    6. '_c' → logprob: -7.387165546417236
    7. 's' → logprob: -7.762165546417236
    8. '   ' → logprob: -8.012165069580078
    9. '       ' → logprob: -8.887165069580078
    10. '_' → logprob: -9.262165069580078

Token 599: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11620362848043442
    2. ':
' → logprob: -2.241203546524048
    3. '       ' → logprob: -5.741203784942627
    4. '   ' → logprob: -9.241203308105469
    5. '):
' → logprob: -10.866203308105469
    6. '           ' → logprob: -11.616203308105469
    7. '=' → logprob: -11.741203308105469
    8. ',' → logprob: -11.741203308105469
    9. '):' → logprob: -12.491203308105469
    10. '():
' → logprob: -12.491203308105469

Token 600: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005416604224592447
    2. '           ' → logprob: -5.880416393280029
    3. 'deck' → logprob: -6.130416393280029
    4. ' deck' → logprob: -8.505416870117188
    5. '(deck' → logprob: -9.130416870117188
    6. '   ' → logprob: -9.880416870117188
    7. '```' → logprob: -10.630416870117188
    8. '        
' → logprob: -11.505416870117188
    9. '<|end|>' → logprob: -11.755416870117188
    10. ',' → logprob: -12.755416870117188

Token 601: ' deck' (ID: 16942)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' (adapté à ' deck') → logprob: -0.010096853598952293
    2. ' deck' → logprob: -4.760097026824951
    3. '       ' → logprob: -6.635097026824951
    4. '               ' → logprob: -9.510096549987793
    5. '           ' → logprob: -9.885096549987793
    6. '   ' → logprob: -10.635096549987793
    7. '(deck' → logprob: -11.260096549987793
    8. '.deck' → logprob: -12.385096549987793
    9. '```' → logprob: -14.260096549987793
    10. 'Deck' → logprob: -15.385096549987793

Token 602: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692810595035553
    2. ' =' → logprob: -2.1269280910491943
    3. '＝' → logprob: -17.751928329467773
    4. '=
' → logprob: -18.501928329467773
    5. '=

' → logprob: -18.751928329467773
    6. '=r' → logprob: -19.001928329467773
    7. '   ' → logprob: -20.001928329467773
    8. '.=' → logprob: -20.126928329467773
    9. ' ' → logprob: -20.376928329467773
    10. '```' → logprob: -20.876928329467773

Token 603: ' riff' (ID: 146141)
  Prédit: 'riff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'riff' → logprob: -0.10021842271089554
    2. ' riff' → logprob: -2.3502185344696045
    3. 'rif' → logprob: -11.850218772888184
    4. 'rift' → logprob: -12.600218772888184
    5. '   ' → logprob: -14.475218772888184
    6. 'ruff' → logprob: -15.350218772888184
    7. ' ' → logprob: -15.850218772888184
    8. 'rig' → logprob: -16.350217819213867
    9. ' rif' → logprob: -16.600217819213867
    10. '  ' → logprob: -17.225217819213867

Token 604: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.00012701898231171072
    2. 'fle' → logprob: -9.000126838684082
    3. 'f' → logprob: -12.875126838684082
    4. '_shuffle' → logprob: -15.500126838684082
    5. 'fe' → logprob: -15.625126838684082
    6. 'r' → logprob: -16.0001277923584
    7. '```' → logprob: -16.5001277923584
    8. '_le' → logprob: -16.6251277923584
    9. 'shuffle' → logprob: -16.8751277923584
    10. 'e' → logprob: -17.1251277923584

Token 605: '_shuffle' (ID: 197572)
  Prédit: '_shuffle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shuffle' → logprob: -1.5048530030981055e-06
    2. 'shuffle' → logprob: -13.875001907348633
    3. '_sh' → logprob: -15.000001907348633
    4. '_' → logprob: -16.125001907348633
    5. '_flush' → logprob: -17.125001907348633
    6. ' _' → logprob: -18.750001907348633
    7. ' shuffle' → logprob: -19.125001907348633
    8. '_shift' → logprob: -19.125001907348633
    9. '.shuffle' → logprob: -19.500001907348633
    10. 'Shuffle' → logprob: -19.625001907348633

Token 606: '(deck' (ID: 195320)
  Prédit: '(deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(deck' → logprob: -5.848420551046729e-05
    2. 'deck' → logprob: -9.7500581741333
    3. '(' → logprob: -16.500059127807617
    4. ' deck' → logprob: -18.375059127807617
    5. '(depth' → logprob: -19.125059127807617
    6. '(de' → logprob: -19.250059127807617
    7. '(
' → logprob: -19.250059127807617
    8. '(d' → logprob: -20.000059127807617
    9. '.deck' → logprob: -20.000059127807617
    10. ' (' → logprob: -20.125059127807617

Token 607: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014358828775584698
    2. ',c' → logprob: -8.875144004821777
    3. ' ,' → logprob: -13.000144004821777
    4. ',d' → logprob: -14.500144004821777
    5. '(deck' → logprob: -14.500144004821777
    6. 'c' → logprob: -16.00014305114746
    7. '(c' → logprob: -16.12514305114746
    8. '   ' → logprob: -16.62514305114746
    9. ',
' → logprob: -17.12514305114746
    10. ',de' → logprob: -17.37514305114746

Token 608: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.493430894101039e-05
    2. ' c' → logprob: -9.500075340270996
    3. ')c' → logprob: -18.12507438659668
    4. '   ' → logprob: -19.25007438659668
    5. '	c' → logprob: -20.50007438659668
    6. ')' → logprob: -21.75007438659668
    7. ' ' → logprob: -22.62507438659668
    8. '(c' → logprob: -22.75007438659668
    9. '_c' → logprob: -23.12507438659668
    10. '$c' → logprob: -23.25007438659668

Token 609: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008794234017841518
    2. ')
' → logprob: -7.500879287719727
    3. '<|end|>' → logprob: -8.125879287719727
    4. ')return' → logprob: -11.500879287719727
    5. ' )' → logprob: -11.875879287719727
    6. '
' → logprob: -12.375879287719727
    7. '<|end|>' → logprob: -13.500879287719727
    8. ')

' → logprob: -13.750879287719727
    9. '   ' → logprob: -13.875879287719727
    10. ')n' → logprob: -14.000879287719727

Token 610: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030757136642932892
    2. 'print' → logprob: -3.780757188796997
    3. '
' → logprob: -5.280756950378418
    4. '```' → logprob: -6.655756950378418
    5. 'for' → logprob: -7.530756950378418
    6. '       ' → logprob: -8.530756950378418
    7. '    
' → logprob: -8.530756950378418
    8. ' print' → logprob: -9.405756950378418
    9. ' for' → logprob: -9.405756950378418
    10. '  
' → logprob: -12.280756950378418

Token 611: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5817099213600159
    2. 'print' → logprob: -0.8317099213600159
    3. '   ' → logprob: -5.831709861755371
    4. ' for' → logprob: -6.456709861755371
    5. '       ' → logprob: -6.956709861755371
    6. '```' → logprob: -8.456709861755371
    7. ' print' → logprob: -10.206709861755371
    8. '
' → logprob: -10.706709861755371
    9. 'while' → logprob: -11.206709861755371
    10. '``' → logprob: -12.956709861755371

Token 612: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014249415136873722
    2. 'for' → logprob: -4.264249324798584
    3. ' print' → logprob: -10.264249801635742
    4. '       ' → logprob: -10.514249801635742
    5. '   ' → logprob: -11.514249801635742
    6. ' for' → logprob: -11.639249801635742
    7. '#' → logprob: -12.389249801635742
    8. '```' → logprob: -14.514249801635742
    9. '#print' → logprob: -15.264249801635742
    10. '
' → logprob: -16.139249801635742

Token 613: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -3.762356209335849e-05
    2. 'iche' → logprob: -11.37503719329834
    3. 'ic' → logprob: -11.75003719329834
    4. 'ichage' → logprob: -11.87503719329834
    5. 'cher' → logprob: -12.37503719329834
    6. 'ich' → logprob: -12.87503719329834
    7. '#' → logprob: -13.00003719329834
    8. '   ' → logprob: -13.62503719329834
    9. 'ichier' → logprob: -14.62503719329834
    10. 'ichert' → logprob: -16.125038146972656

Token 614: ' la' (ID: 557)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.29243651032447815
    2. '(len' → logprob: -2.4174365997314453
    3. '("' → logprob: -2.5424365997314453
    4. '(*' → logprob: -2.6674365997314453
    5. '('\' → logprob: -4.542436599731445
    6. '(' → logprob: -6.167436599731445
    7. 'print' → logprob: -6.667436599731445
    8. '(n' → logprob: -7.042436599731445
    9. '(deck' → logprob: -7.667436599731445
    10. '("\' → logprob: -8.042436599731445

Token 615: ' carte' (ID: 30276)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.8107748031616211
    2. 'result' → logprob: -2.185774803161621
    3. '('' → logprob: -2.310774803161621
    4. 'print' → logprob: -2.685774803161621
    5. ''' → logprob: -2.810774803161621
    6. 'final' → logprob: -3.060774803161621
    7. 'for' → logprob: -3.060774803161621
    8. '(len' → logprob: -3.435774803161621
    9. '
' → logprob: -4.060774803161621
    10. '('\' → logprob: -4.060774803161621

Token 616: ' au' (ID: 2791)
  Prédit: '(deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(deck' → logprob: -0.06771404296159744
    2. 'deck' → logprob: -3.317713975906372
    3. 'print' → logprob: -3.567713975906372
    4. ' deck' → logprob: -7.567714214324951
    5. '   ' → logprob: -8.442713737487793
    6. '(' → logprob: -9.192713737487793
    7. ' (' → logprob: -10.442713737487793
    8. 'f' → logprob: -10.817713737487793
    9. ' print' → logprob: -10.942713737487793
    10. '(print' → logprob: -10.942713737487793

Token 617: ' sommet' (ID: 130502)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.2867763638496399
    2. 'som' → logprob: -2.036776304244995
    3. 'deck' → logprob: -2.286776304244995
    4. 'print' → logprob: -5.161776542663574
    5. 'dess' → logprob: -5.786776542663574
    6. ' sommet' → logprob: -5.786776542663574
    7. 'bas' → logprob: -6.161776542663574
    8. 'haut' → logprob: -6.536776542663574
    9. 'bottom' → logprob: -7.036776542663574
    10. 'bout' → logprob: -7.286776542663574

Token 618: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.019451795145869255
    2. '   ' → logprob: -4.51945161819458
    3. '(deck' → logprob: -5.14445161819458
    4. '(print' → logprob: -6.76945161819458
    5. '       ' → logprob: -7.14445161819458
    6. '()' → logprob: -8.394452095031738
    7. '(' → logprob: -8.894452095031738
    8. ' print' → logprob: -9.144452095031738
    9. '()
' → logprob: -9.894452095031738
    10. '```' → logprob: -10.519452095031738

Token 619: ' deck' (ID: 16942)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.0015141464537009597
    2. ' deck' → logprob: -6.501513957977295
    3. '(deck' → logprob: -12.376514434814453
    4. 'deque' → logprob: -12.626514434814453
    5. 'print' → logprob: -13.126514434814453
    6. 'stack' → logprob: -14.126514434814453
    7. 'dé' → logprob: -15.501514434814453
    8. 'pile' → logprob: -15.626514434814453
    9. '```' → logprob: -15.751514434814453
    10. '.deck' → logprob: -16.001514434814453

Token 620: ' (=' (ID: 72569)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10521690547466278
    2. '   ' → logprob: -2.3552169799804688
    3. '       ' → logprob: -5.480216979980469
    4. ' print' → logprob: -7.355216979980469
    5. '```' → logprob: -8.605216979980469
    6. '`' → logprob: -13.105216979980469
    7. '	print' → logprob: -13.105216979980469
    8. '``' → logprob: -13.480216979980469
    9. 'if' → logprob: -14.855216979980469
    10. ',' → logprob: -14.980216979980469

Token 621: ' dernière' (ID: 39497)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.008633595891296864
    2. ' deck' → logprob: -4.758633613586426
    3. 'print' → logprob: -11.133633613586426
    4. '(deck' → logprob: -12.383633613586426
    5. '   ' → logprob: -16.13363265991211
    6. '
' → logprob: -16.38363265991211
    7. '.deck' → logprob: -17.25863265991211
    8. 'str' → logprob: -17.75863265991211
    9. ' print' → logprob: -17.75863265991211
    10. ' ' → logprob: -18.63363265991211

Token 622: ' carte' (ID: 30276)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.4024921655654907
    2. 'print' → logprob: -2.027492046356201
    3. ' deck' → logprob: -2.527492046356201
    4. '(deck' → logprob: -2.652492046356201
    5. ' carte' → logprob: -3.777492046356201
    6. ' print' → logprob: -5.402492046356201
    7. ')' → logprob: -5.527492046356201
    8. 'élé' → logprob: -5.777492046356201
    9. '   ' → logprob: -5.902492046356201
    10. 'card' → logprob: -6.402492046356201

Token 623: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022998886182904243
    2. 'print' → logprob: -5.022998809814453
    3. ')
' → logprob: -5.272998809814453
    4. '(deck' → logprob: -5.272998809814453
    5. '   ' → logprob: -6.022998809814453
    6. 'deck' → logprob: -6.647998809814453
    7. ']' → logprob: -7.897998809814453
    8. '())' → logprob: -8.147998809814453
    9. '[' → logprob: -8.272998809814453
    10. '       ' → logprob: -8.272998809814453

Token 624: ' la' (ID: 557)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.00013452880375552922
    2. ' deck' → logprob: -9.000134468078613
    3. 'la' → logprob: -12.125134468078613
    4. 'list' → logprob: -12.500134468078613
    5. '(deck' → logprob: -13.875134468078613
    6. 'liste' → logprob: -14.375134468078613
    7. ' la' → logprob: -15.500134468078613
    8. 'deque' → logprob: -16.00013542175293
    9. '```' → logprob: -17.37513542175293
    10. '`' → logprob: -17.62513542175293

Token 625: ' liste' (ID: 31719)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.00690304022282362
    2. 'list' → logprob: -5.131903171539307
    3. 'liste' → logprob: -7.006903171539307
    4. ' deck' → logprob: -9.756902694702148
    5. 'deque' → logprob: -13.006902694702148
    6. 'lista' → logprob: -13.256902694702148
    7. '(deck' → logprob: -13.256902694702148
    8. ' list' → logprob: -13.881902694702148
    9. ' liste' → logprob: -13.881902694702148
    10. '```' → logprob: -14.381902694702148

Token 626: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.22510428726673126
    2. ')' → logprob: -2.100104331970215
    3. 'print' → logprob: -3.100104331970215
    4. '   ' → logprob: -3.475104331970215
    5. ',' → logprob: -6.225104331970215
    6. '       ' → logprob: -7.225104331970215
    7. ' print' → logprob: -8.350104331970215
    8. ')
' → logprob: -9.725104331970215
    9. '[' → logprob: -10.975104331970215
    10. ')`
' → logprob: -11.225104331970215

Token 627: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21379241347312927
    2. 'print' → logprob: -1.7137924432754517
    3. '   ' → logprob: -4.463792324066162
    4. ' print' → logprob: -7.588792324066162
    5. '```' → logprob: -8.21379280090332
    6. '`' → logprob: -12.71379280090332
    7. '``' → logprob: -12.96379280090332
    8. '	print' → logprob: -13.58879280090332
    9. '           ' → logprob: -14.96379280090332
    10. '#print' → logprob: -16.33879280090332

Token 628: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.630610641877865e-06
    2. ' print' → logprob: -12.250006675720215
    3. '   ' → logprob: -14.000006675720215
    4. '```' → logprob: -14.000006675720215
    5. '       ' → logprob: -15.750006675720215
    6. '	print' → logprob: -18.6250057220459
    7. '``' → logprob: -20.0000057220459
    8. '`' → logprob: -21.6250057220459
    9. '
' → logprob: -21.7500057220459
    10. '#print' → logprob: -22.0000057220459

Token 629: '(deck' (ID: 195320)
  Prédit: '(deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(deck' → logprob: -2.129266067640856e-05
    2. 'deck' → logprob: -11.125020980834961
    3. '(' → logprob: -12.000020980834961
    4. '(f' → logprob: -16.25002098083496
    5. ' deck' → logprob: -17.25002098083496
    6. '(depth' → logprob: -17.37502098083496
    7. '(de' → logprob: -17.37502098083496
    8. '()' → logprob: -18.00002098083496
    9. '(stack' → logprob: -18.00002098083496
    10. ' (' → logprob: -18.12502098083496

Token 630: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -4.320199877838604e-07
    2. '-' → logprob: -15.5
    3. '   ' → logprob: -15.875
    4. ')' → logprob: -16.5
    5. '][-' → logprob: -17.375
    6. '[len' → logprob: -17.625
    7. ' [-' → logprob: -17.75
    8. '[' → logprob: -18.5
    9. ')-' → logprob: -18.75
    10. '  ' → logprob: -19.75

Token 631: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.0
    4. '```' → logprob: -18.75
    5. '  ' → logprob: -19.5
    6. ')' → logprob: -20.625
    7. '0' → logprob: -20.75
    8. '۱' → logprob: -21.0
    9. '
' → logprob: -21.25
    10. '<|end|>' → logprob: -21.75

Token 632: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. '})' → logprob: -14.750000953674316
    3. '])' → logprob: -15.250000953674316
    4. ' )' → logprob: -15.375000953674316
    5. '))' → logprob: -15.375000953674316
    6. ')
' → logprob: -16.750001907348633
    7. ')`' → logprob: -17.625001907348633
    8. ')}' → logprob: -18.000001907348633
    9. '`)' → logprob: -18.500001907348633
    10. ')}}' → logprob: -18.875001907348633

Token 633: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3828916847705841
    2. '<|end|>' → logprob: -1.2578916549682617
    3. '```' → logprob: -3.8828916549682617
    4. '#' → logprob: -4.757891654968262
    5. ' if' → logprob: -5.757891654968262
    6. '
' → logprob: -6.882891654968262
    7. '<|end|>' → logprob: -8.257891654968262
    8. '[' → logprob: -9.257891654968262
    9. '...' → logprob: -10.757891654968262
    10. ')' → logprob: -11.632891654968262

Token 634: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.25195151567459106
    2. '__' → logprob: -1.5019514560699463
    3. ' ' → logprob: -11.626951217651367
    4. 'name' → logprob: -12.001951217651367
    5. '_name' → logprob: -13.126951217651367
    6. ' name' → logprob: -13.626951217651367
    7. ' ' → logprob: -13.876951217651367
    8. ' True' → logprob: -14.126951217651367
    9. '```' → logprob: -14.126951217651367
    10. 'Name' → logprob: -14.501951217651367

Token 635: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0324288047850132
    2. '==' → logprob: -4.032428741455078
    3. ' ==' → logprob: -4.282428741455078
    4. '=="' → logprob: -8.282428741455078
    5. '=='' → logprob: -10.282428741455078
    6. ' __' → logprob: -10.532428741455078
    7. '__.__' → logprob: -11.532428741455078
    8. '[' → logprob: -11.782428741455078
    9. '__[' → logprob: -12.032428741455078
    10. 'name' → logprob: -12.282428741455078

Token 636: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.2471589798224159e-05
    2. '==' → logprob: -11.875012397766113
    3. '__.__' → logprob: -12.250012397766113
    4. ' ==' → logprob: -15.375012397766113
    5. '__.' → logprob: -15.875012397766113
    6. '___' → logprob: -15.875012397766113
    7. '____' → logprob: -16.25001335144043
    8. '__('' → logprob: -16.87501335144043
    9. '__["' → logprob: -17.50001335144043
    10. '=="' → logprob: -17.50001335144043

Token 637: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.745432436466217
    2. '__' → logprob: -0.745432436466217
    3. ' ==' → logprob: -3.1204323768615723
    4. '=="' → logprob: -5.120432376861572
    5. '=='' → logprob: -7.120432376861572
    6. '===' → logprob: -12.37043285369873
    7. '=' → logprob: -12.62043285369873
    8. '==
' → logprob: -13.24543285369873
    9. '___' → logprob: -13.24543285369873
    10. '__.__' → logprob: -13.62043285369873

Token 638: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03806031122803688
    2. ''' → logprob: -3.288060426712036
    3. '__' → logprob: -11.288060188293457
    4. ' "__' → logprob: -12.038060188293457
    5. ' '__' → logprob: -15.288060188293457
    6. '"user' → logprob: -16.913061141967773
    7. '"name' → logprob: -17.163061141967773
    8. ''"' → logprob: -17.413061141967773
    9. '   ' → logprob: -18.663061141967773
    10. '("__' → logprob: -18.913061141967773

Token 639: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0009309909655712545
    2. '__' → logprob: -7.5009307861328125
    3. 'name' → logprob: -8.375930786132812
    4. ''' → logprob: -9.125930786132812
    5. '"' → logprob: -10.625930786132812
    6. 'built' → logprob: -12.750930786132812
    7. '_main' → logprob: -13.250930786132812
    8. '__":
' → logprob: -13.375930786132812
    9. 'python' → logprob: -14.000930786132812
    10. '```' → logprob: -14.000930786132812

Token 640: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5788865685462952
    2. '__":
' → logprob: -0.8288865685462952
    3. '__':
' → logprob: -5.95388650894165
    4. '__:' → logprob: -8.953886985778809
    5. '__.' → logprob: -9.578886985778809
    6. '__.__' → logprob: -9.578886985778809
    7. '__["' → logprob: -9.953886985778809
    8. '==' → logprob: -11.953886985778809
    9. '__
' → logprob: -12.078886985778809
    10. '__",' → logprob: -12.703886985778809

Token 641: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3201058506965637
    2. 'main' → logprob: -1.695105791091919
    3. ' main' → logprob: -2.445105791091919
    4. '	main' → logprob: -6.695106029510498
    5. '__' → logprob: -6.945106029510498
    6. '_main' → logprob: -7.820106029510498
    7. '```' → logprob: -8.19510555267334
    8. '__":
' → logprob: -8.69510555267334
    9. 'if' → logprob: -8.94510555267334
    10. '    
' → logprob: -9.44510555267334

Token 642: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.0
    3. '	main' → logprob: -22.25
    4. '   ' → logprob: -23.875
    5. '_main' → logprob: -25.125
    6. '.main' → logprob: -26.375
    7. '(main' → logprob: -26.75
    8. 'Main' → logprob: -28.125
    9. '```' → logprob: -30.625
    10. '
' → logprob: -30.75

Token 643: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 641
Tokens correctement prédits (1ère position, stricte): 240
Tokens correctement prédits (1ère position, avec adaptation): 261
Tokens correctement prédits (top 10): 473
Précision stricte (1ère position): 37.44%
Précision adaptée (1ère position): 40.72%
Précision (top 10): 73.79%
================================================================================
