================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Lecture des entrées et résolution du problème Yu-kun Likes Rectangles en Python

# La stratégie est la suivante :
# 1) Lire les matrices A, B et C.
# 2) Chercher toutes les positions (i, j) dans B où le motif C peut s'emboîter complètement.
# 3) Pour chaque position, vérifier si le sous-rectangle de B correspond exactement à C.
# 4) Si oui, calculer la somme des entiers correspondants dans A.
# 5) Gérer le maximum sur toutes les correspondances trouvées.
# 6) Afficher le résultat ou "NA" s'il n'y en a pas.

import sys

def main():
    input = sys.stdin.readline

    # Lecture des dimensions H, W 
    H, W = map(int, input().split())
    
    # Lecture de la matrice A (H x W) des entiers
    A = [list(map(int, input().split())) for _ in range(H)]
    
    # Lecture de la matrice B (H x W) des couleurs (0 ou 1)
    B = [list(map(int, input().split())) for _ in range(H)]
    
    # Lecture des dimensions h, w 
    h, w = map(int, input().split())
    
    # Lecture de la matrice C (h x w) des couleurs (0 ou 1)
    C = [list(map(int, input().split())) for _ in range(h)]
    
    max_score = None  # Aucun score trouvé pour l'instant

    # On parcourt toutes les positions possibles où C peut s'imbriquer dans B
    for i in range(H - h + 1):
        for j in range(W - w + 1):
            # Vérification que le sous-rectangle B[i:i+h][j:j+w] correspond exactement à C
            match = True
            for x in range(h):
                for y in range(w):
                    if B[i + x][j + y] != C[x][y]:
                        match = False
                        break
                if not match:
                    break

            if match:
                # Calculer la somme des éléments correspondants dans A
                score = 0
                for x in range(h):
                    for y in range(w):
                        score += A[i + x][j + y]

                # Mettre à jour le max_score
                if (max_score is None) or (score > max_score):
                    max_score = score

    # Afficher le résultat ou "NA"
    if max_score is None:
        print("NA")
    else:
        print(max_score)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Lecture' (ID: 106534)
  → Token d'amorce (pas de prédiction)

Token 2: ' des' (ID: 731)
  → Token d'amorce (pas de prédiction)

Token 3: ' entr' (ID: 7072)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.034175436943769455
    2. 'f' → logprob: -3.909175395965576
    3. '_' → logprob: -5.784175395965576
    4. '#' → logprob: -6.159175395965576
    5. 'd' → logprob: -6.159175395965576
    6. ' d' → logprob: -6.659175395965576
    7. ''' → logprob: -6.909175395965576
    8. ' #' → logprob: -7.159175395965576
    9. 's' → logprob: -7.534175395965576
    10. ' fichier' → logprob: -8.034175872802734

Token 4: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0011130700586363673
    2. 'ée' → logprob: -7.001112937927246
    3. 'és' → logprob: -8.626112937927246
    4. 'é' → logprob: -11.001112937927246
    5. 'ees' → logprob: -12.626112937927246
    6. 'êtes' → logprob: -13.376112937927246
    7. 'ès' → logprob: -15.626112937927246
    8. 'es' → logprob: -15.876112937927246
    9. 'éis' → logprob: -16.376113891601562
    10. 'ês' → logprob: -16.626113891601562

Token 5: ' et' (ID: 859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2775428295135498
    2. '```' → logprob: -1.6525428295135498
    3. '#' → logprob: -1.9025428295135498
    4. 's' → logprob: -2.02754282951355
    5. 'input' → logprob: -2.90254282951355
    6. '`' → logprob: -3.15254282951355
    7. ':' → logprob: -3.40254282951355
    8. 'user' → logprob: -3.52754282951355
    9. 'inputs' → logprob: -3.77754282951355
    10. '\' → logprob: -5.027543067932129

Token 6: ' résolution' (ID: 147402)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.8102492690086365
    2. 'sort' → logprob: -1.4352493286132812
    3. ' sorties' → logprob: -2.3102493286132812
    4. '#' → logprob: -2.6852493286132812
    5. ' sortie' → logprob: -4.060249328613281
    6. 'import' → logprob: -4.060249328613281
    7. 'trait' → logprob: -4.185249328613281
    8. ' traitement' → logprob: -4.560249328613281
    9. 'initial' → logprob: -4.560249328613281
    10. ' affich' → logprob: -4.810249328613281

Token 7: ' du' (ID: 1462)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.763295292854309
    2. 's' → logprob: -2.0132951736450195
    3. 'inputs' → logprob: -2.0132951736450195
    4. '```' → logprob: -2.0132951736450195
    5. 'def' → logprob: -2.8882951736450195
    6. 'n' → logprob: -3.1382951736450195
    7. ':' → logprob: -3.2632951736450195
    8. 'input' → logprob: -3.2632951736450195
    9. '\n' → logprob: -3.5132951736450195
    10. 'import' → logprob: -3.8882951736450195

Token 8: ' problème' (ID: 35630)
  Prédit: ' problème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -0.16754893958568573
    2. ' probl' → logprob: -2.792548894882202
    3. ' ' → logprob: -3.042548894882202
    4. 'pro' → logprob: -4.042549133300781
    5. ' probleme' → logprob: -4.167549133300781
    6. 'proble' → logprob: -5.542549133300781
    7. ' code' → logprob: -6.792549133300781
    8. 's' → logprob: -6.917549133300781
    9. ' problèmes' → logprob: -6.917549133300781
    10. ' problem' → logprob: -7.292549133300781

Token 9: ' Yu' (ID: 44893)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6468783617019653
    2. 'x' → logprob: -2.021878242492676
    3. 'inputs' → logprob: -2.396878242492676
    4. 'input' → logprob: -3.146878242492676
    5. 'n' → logprob: -3.396878242492676
    6. '\n' → logprob: -3.396878242492676
    7. 'i' → logprob: -3.521878242492676
    8. 's' → logprob: -3.521878242492676
    9. '`' → logprob: -3.896878242492676
    10. '``' → logprob: -4.271878242492676

Token 10: '-k' (ID: 10897)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5921238660812378
    2. 'x' → logprob: -1.5921238660812378
    3. 'r' → logprob: -1.8421238660812378
    4. 'm' → logprob: -1.9671238660812378
    5. ':' → logprob: -2.3421239852905273
    6. 'n' → logprob: -3.5921239852905273
    7. ' ' → logprob: -3.7171239852905273
    8. '_' → logprob: -3.8421239852905273
    9. '```' → logprob: -3.8421239852905273
    10. 's' → logprob: -3.9671239852905273

Token 11: 'un' (ID: 373)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.977164626121521
    2. '=' → logprob: -1.727164626121521
    3. 'u' → logprob: -1.727164626121521
    4. '#' → logprob: -2.9771647453308105
    5. ' ' → logprob: -3.2271647453308105
    6. '_' → logprob: -3.6021647453308105
    7. 'e' → logprob: -3.9771647453308105
    8. '```' → logprob: -4.1021647453308105
    9. 's' → logprob: -4.3521647453308105
    10. '.' → logprob: -4.3521647453308105

Token 12: ' Likes' (ID: 90429)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.3866952657699585
    2. '#' → logprob: -1.5116952657699585
    3. '\n' → logprob: -1.7616952657699585
    4. ':' → logprob: -2.011695384979248
    5. '```' → logprob: -2.011695384979248
    6. 's' → logprob: -3.636695384979248
    7. '
' → logprob: -3.886695384979248
    8. '`' → logprob: -5.261695384979248
    9. '_' → logprob: -5.261695384979248
    10. 'def' → logprob: -5.386695384979248

Token 13: ' Rect' (ID: 22765)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18438300490379333
    2. 'n' → logprob: -2.934382915496826
    3. '#' → logprob: -3.559382915496826
    4. 's' → logprob: -3.684382915496826
    5. '```' → logprob: -3.809382915496826
    6. 'a' → logprob: -4.809382915496826
    7. 'def' → logprob: -4.934382915496826
    8. ' :' → logprob: -5.309382915496826
    9. '.' → logprob: -5.434382915496826
    10. ',' → logprob: -5.559382915496826

Token 14: 'angles' (ID: 34011)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0963125228881836
    2. 's' → logprob: -1.2213125228881836
    3. '.' → logprob: -2.8463125228881836
    4. '\' → logprob: -3.2213125228881836
    5. '[' → logprob: -3.4713125228881836
    6. 'def' → logprob: -3.4713125228881836
    7. '```' → logprob: -3.5963125228881836
    8. ''' → logprob: -3.9713125228881836
    9. '`' → logprob: -4.096312522888184
    10. 'e' → logprob: -4.096312522888184

Token 15: ' en' (ID: 469)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.022132432088255882
    2. ':' → logprob: -4.897132396697998
    3. 's' → logprob: -5.647132396697998
    4. 'a' → logprob: -5.772132396697998
    5. '#' → logprob: -6.522132396697998
    6. '\n' → logprob: -6.522132396697998
    7. '.' → logprob: -7.147132396697998
    8. 'x' → logprob: -7.147132396697998
    9. '\' → logprob: -7.147132396697998
    10. '```' → logprob: -7.272132396697998

Token 16: ' Python' (ID: 26534)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.6434561014175415
    2. 'C' → logprob: -1.6434561014175415
    3. ' Python' → logprob: -2.518455982208252
    4. 'python' → logprob: -3.518455982208252
    5. ' python' → logprob: -4.018455982208252
    6. ' ' → logprob: -4.018455982208252
    7. 'Python' → logprob: -4.143455982208252
    8. ' ' → logprob: -4.143455982208252
    9. '202' → logprob: -4.268455982208252
    10. '_' → logprob: -4.518455982208252

Token 17: '

' (ID: 279)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6096813678741455
    2. '#' → logprob: -0.9846813678741455
    3. 'i' → logprob: -3.7346813678741455
    4. 'd' → logprob: -3.8596813678741455
    5. 's' → logprob: -4.859681129455566
    6. '```' → logprob: -4.859681129455566
    7. ':' → logprob: -5.109681129455566
    8. 'import' → logprob: -5.609681129455566
    9. '_' → logprob: -5.859681129455566
    10. 'def' → logprob: -5.984681129455566

Token 18: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4687515199184418
    2. '```' → logprob: -1.3437515497207642
    3. 'n' → logprob: -3.0937514305114746
    4. ':' → logprob: -3.8437514305114746
    5. 'import' → logprob: -4.343751430511475
    6. '
' → logprob: -4.718751430511475
    7. 'd' → logprob: -4.718751430511475
    8. 'i' → logprob: -5.343751430511475
    9. 'def' → logprob: -6.218751430511475
    10. 's' → logprob: -6.343751430511475

Token 19: ' La' (ID: 3038)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012310086749494076
    2. ' ```' → logprob: -5.137310028076172
    3. ' #' → logprob: -6.512310028076172
    4. ' import' → logprob: -6.762310028076172
    5. 'import' → logprob: -7.012310028076172
    6. ' d' → logprob: -8.012310028076172
    7. 'd' → logprob: -8.012310028076172
    8. 'def' → logprob: -8.012310028076172
    9. '```' → logprob: -8.012310028076172
    10. ' ​' → logprob: -8.387310028076172

Token 20: ' stratégie' (ID: 79899)
  Prédit: ' suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suite' → logprob: -0.7309675812721252
    2. ' solution' → logprob: -1.8559675216674805
    3. ' lecture' → logprob: -2.1059675216674805
    4. 'suite' → logprob: -2.9809675216674805
    5. 's' → logprob: -4.3559675216674805
    6. ' bibliothèque' → logprob: -4.3559675216674805
    7. 't' → logprob: -4.8559675216674805
    8. ' ' → logprob: -4.8559675216674805
    9. ' sais' → logprob: -4.9809675216674805
    10. ' #' → logprob: -4.9809675216674805

Token 21: ' est' (ID: 893)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.13243021070957184
    2. ':' → logprob: -2.1324303150177
    3. ' ' → logprob: -5.382430076599121
    4. '#' → logprob: -8.132430076599121
    5. ' =' → logprob: -8.757430076599121
    6. ' :
' → logprob: -9.257430076599121
    7. 's' → logprob: -9.757430076599121
    8. ' #' → logprob: -9.882430076599121
    9. ' ' → logprob: -10.257430076599121
    10. '_' → logprob: -10.382430076599121

Token 22: ' la' (ID: 557)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.45660844445228577
    2. ' d' → logprob: -1.2066084146499634
    3. 'd' → logprob: -3.831608533859253
    4. ':' → logprob: -4.206608295440674
    5. 'de' → logprob: -4.206608295440674
    6. ' :' → logprob: -5.081608295440674
    7. ' ' → logprob: -5.706608295440674
    8. ' "' → logprob: -5.956608295440674
    9. ' =' → logprob: -7.706608295440674
    10. ' #' → logprob: -7.706608295440674

Token 23: ' suivante' (ID: 107439)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6749938130378723
    2. ' suivante' → logprob: -1.2999937534332275
    3. '"""' → logprob: -2.9249937534332275
    4. 'def' → logprob: -3.2999937534332275
    5. ':' → logprob: -3.7999937534332275
    6. 's' → logprob: -3.9249937534332275
    7. ' ' → logprob: -3.9249937534332275
    8. ' #' → logprob: -4.799993991851807
    9. 'suite' → logprob: -4.924993991851807
    10. ' """' → logprob: -5.174993991851807

Token 24: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.09032902121543884
    2. ':' → logprob: -2.4653289318084717
    3. ' :
' → logprob: -7.465329170227051
    4. ' ' → logprob: -7.465329170227051
    5. '```' → logprob: -9.96532917022705
    6. '#' → logprob: -10.21532917022705
    7. ':
' → logprob: -10.59032917022705
    8. '\' → logprob: -10.71532917022705
    9. ' :

' → logprob: -11.21532917022705
    10. '\n' → logprob: -11.46532917022705

Token 25: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31862688064575195
    2. '#' → logprob: -1.818626880645752
    3. ' 
' → logprob: -2.818626880645752
    4. ' #' → logprob: -3.568626880645752
    5. '  
' → logprob: -5.818626880645752
    6. ' ' → logprob: -5.943626880645752
    7. ' 

' → logprob: -6.193626880645752
    8. '\' → logprob: -6.568626880645752
    9. 'n' → logprob: -7.068626880645752
    10. 'd' → logprob: -7.318626880645752

Token 26: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5681450963020325
    2. ' #' → logprob: -1.5681450366973877
    3. '#' → logprob: -2.0681450366973877
    4. ' ' → logprob: -4.568145275115967
    5. ' Lire' → logprob: -4.818145275115967
    6. ' Contin' → logprob: -5.068145275115967
    7. ' 
' → logprob: -5.318145275115967
    8. ' Util' → logprob: -5.568145275115967
    9. ' import' → logprob: -5.630645275115967
    10. ' continuer' → logprob: -5.693145275115967

Token 27: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19259914755821228
    2. 'Lire' → logprob: -2.817599058151245
    3. 'On' → logprob: -3.442599058151245
    4. 'l' → logprob: -4.192599296569824
    5. 'Dé' → logprob: -4.942599296569824
    6. '"""' → logprob: -5.192599296569824
    7. 'Analy' → logprob: -5.317599296569824
    8. 'Pour' → logprob: -5.442599296569824
    9. 'def' → logprob: -5.567599296569824
    10. 'Il' → logprob: -5.692599296569824

Token 28: ')' (ID: 8)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3009822368621826
    2. ' ' → logprob: -1.6759822368621826
    3. ':' → logprob: -3.9259822368621826
    4. '#' → logprob: -4.175982475280762
    5. ')' → logprob: -4.300982475280762
    6. ' .' → logprob: -5.300982475280762
    7. '-' → logprob: -5.425982475280762
    8. ' #' → logprob: -6.050982475280762
    9. ' ' → logprob: -6.425982475280762
    10. ' )' → logprob: -6.550982475280762

Token 29: ' Lire' (ID: 57624)
  Prédit: ' Lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Lire' → logprob: -0.3387629985809326
    2. ' R' → logprob: -2.7137629985809326
    3. ' On' → logprob: -3.2137629985809326
    4. ' Calcul' → logprob: -3.8387629985809326
    5. ' lire' → logprob: -3.8387629985809326
    6. ' Collect' → logprob: -4.088763236999512
    7. ' Import' → logprob: -4.213763236999512
    8. 'Lire' → logprob: -4.338763236999512
    9. ' ' → logprob: -4.588763236999512
    10. ' L' → logprob: -5.338763236999512

Token 30: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015508918091654778
    2. ' l' → logprob: -4.390509128570557
    3. ' les' → logprob: -6.765509128570557
    4. ' la' → logprob: -7.640509128570557
    5. 'l' → logprob: -8.265508651733398
    6. 's' → logprob: -8.390508651733398
    7. '  ' → logprob: -9.265508651733398
    8. ' ' → logprob: -9.390508651733398
    9. '<|end|>' → logprob: -9.390508651733398
    10. ' )' → logprob: -9.640508651733398

Token 31: ' matrices' (ID: 75935)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.46073979139328003
    2. ' entr' → logprob: -2.210739850997925
    3. ' ' → logprob: -2.460739850997925
    4. ' nombres' → logprob: -3.210739850997925
    5. ' nombre' → logprob: -3.710739850997925
    6. ' n' → logprob: -4.085739612579346
    7. 'nombre' → logprob: -4.335739612579346
    8. '_' → logprob: -4.460739612579346
    9. 'n' → logprob: -4.585739612579346
    10. ' inputs' → logprob: -5.085739612579346

Token 32: ' A' (ID: 355)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47448042035102844
    2. '_' → logprob: -2.349480390548706
    3. 'import' → logprob: -2.724480390548706
    4. 's' → logprob: -3.099480390548706
    5. ',' → logprob: -3.224480390548706
    6. ' =' → logprob: -3.724480390548706
    7. '[' → logprob: -3.974480390548706
    8. 'n' → logprob: -4.349480628967285
    9. '[
' → logprob: -4.599480628967285
    10. ' ,' → logprob: -4.724480628967285

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13824963569641113
    2. ' =' → logprob: -2.513249635696411
    3. '[' → logprob: -4.263249397277832
    4. ' ' → logprob: -4.638249397277832
    5. ' ,' → logprob: -5.138249397277832
    6. 'a' → logprob: -6.013249397277832
    7. ' et' → logprob: -6.138249397277832
    8. '.' → logprob: -6.138249397277832
    9. ')' → logprob: -6.513249397277832
    10. '=' → logprob: -6.763249397277832

Token 34: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.9503772258758545
    2. 'B' → logprob: -1.2003772258758545
    3. ' ' → logprob: -2.0753772258758545
    4. ' ,' → logprob: -2.8253772258758545
    5. ',' → logprob: -3.4503772258758545
    6. '[' → logprob: -3.5753772258758545
    7. '  ' → logprob: -4.200377464294434
    8. ' et' → logprob: -4.825377464294434
    9. 'import' → logprob: -5.200377464294434
    10. 'a' → logprob: -5.575377464294434

Token 35: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.050093796104192734
    2. ' ' → logprob: -4.300093650817871
    3. ' ,' → logprob: -5.050093650817871
    4. ' =' → logprob: -5.425093650817871
    5. '<|end|>' → logprob: -5.425093650817871
    6. ')' → logprob: -5.425093650817871
    7. '.' → logprob: -5.925093650817871
    8. ',
' → logprob: -5.925093650817871
    9. '
' → logprob: -6.300093650817871
    10. 'a' → logprob: -6.550093650817871

Token 36: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.0300221499055624
    2. 'C' → logprob: -3.655022144317627
    3. ' ' → logprob: -6.905022144317627
    4. ' leurs' → logprob: -8.217522621154785
    5. ' les' → logprob: -8.405022621154785
    6. ' ' → logprob: -8.530022621154785
    7. ',' → logprob: -8.717522621154785
    8. ' l' → logprob: -9.030022621154785
    9. '<|end|>' → logprob: -9.030022621154785
    10. ' la' → logprob: -9.217522621154785

Token 37: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9404070973396301
    2. '#' → logprob: -1.6904070377349854
    3. '```' → logprob: -2.4404070377349854
    4. '
' → logprob: -2.8154070377349854
    5. ' ' → logprob: -3.1904070377349854
    6. 'import' → logprob: -3.1904070377349854
    7. 'a' → logprob: -3.1904070377349854
    8. ':' → logprob: -3.4404070377349854
    9. 'n' → logprob: -3.5654070377349854
    10. '.' → logprob: -3.9404070377349854

Token 38: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17301331460475922
    2. '2' → logprob: -3.173013210296631
    3. '
' → logprob: -3.548013210296631
    4. 'import' → logprob: -3.673013210296631
    5. 'n' → logprob: -4.423013210296631
    6. ',' → logprob: -4.548013210296631
    7. '```' → logprob: -4.548013210296631
    8. ' ' → logprob: -5.173013210296631
    9. 'A' → logprob: -5.548013210296631
    10. '\' → logprob: -5.798013210296631

Token 39: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5724217891693115
    2. 'import' → logprob: -2.0724217891693115
    3. '```' → logprob: -2.0724217891693115
    4. 'def' → logprob: -2.6974217891693115
    5. 'n' → logprob: -3.5724217891693115
    6. 'A' → logprob: -3.8224217891693115
    7. ' ' → logprob: -4.322422027587891
    8. '\' → logprob: -4.447422027587891
    9. '
' → logprob: -4.697422027587891
    10. ' A' → logprob: -5.322422027587891

Token 40: '2' (ID: 17)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10371306538581848
    2. 'A' → logprob: -3.603713035583496
    3. '2' → logprob: -3.853713035583496
    4. 'def' → logprob: -4.478713035583496
    5. 'import' → logprob: -4.728713035583496
    6. ' ' → logprob: -5.478713035583496
    7. 'a' → logprob: -5.603713035583496
    8. 'for' → logprob: -5.603713035583496
    9. '```' → logprob: -5.603713035583496
    10. 'n' → logprob: -5.853713035583496

Token 41: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01116289384663105
    2. ' )' → logprob: -4.511162757873535
    3. '#' → logprob: -9.511162757873535
    4. '')' → logprob: -10.886162757873535
    5. '.' → logprob: -12.511162757873535
    6. ']' → logprob: -13.136162757873535
    7. 'a' → logprob: -13.386162757873535
    8. ' ' → logprob: -13.386162757873535
    9. '`)' → logprob: -13.386162757873535
    10. ')#' → logprob: -13.386162757873535

Token 42: ' Cher' (ID: 48756)
  Prédit: ' Calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Calcul' → logprob: -0.18013009428977966
    2. 'Calcul' → logprob: -3.1801300048828125
    3. ' Constru' → logprob: -3.5551300048828125
    4. ' Cal' → logprob: -4.0551300048828125
    5. ' calcul' → logprob: -4.3051300048828125
    6. ' Pré' → logprob: -4.4301300048828125
    7. ' Ap' → logprob: -4.8051300048828125
    8. ' Util' → logprob: -5.4301300048828125
    9. ' Effect' → logprob: -6.0551300048828125
    10. 'Constru' → logprob: -6.0551300048828125

Token 43: 'cher' (ID: 6665)
  Prédit: 'cher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cher' → logprob: -0.019722996279597282
    2. '#' → logprob: -4.019722938537598
    3. '   ' → logprob: -6.769722938537598
    4. '	' → logprob: -8.769722938537598
    5. 'er' → logprob: -9.894722938537598
    6. ' ' → logprob: -10.019722938537598
    7. '```' → logprob: -10.144722938537598
    8. ' #' → logprob: -10.644722938537598
    9. '>' → logprob: -11.144722938537598
    10. '     ' → logprob: -11.394722938537598

Token 44: ' toutes' (ID: 17502)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8956372737884521
    2. ' les' → logprob: -1.1456372737884521
    3. 'les' → logprob: -3.020637273788452
    4. ' des' → logprob: -3.395637273788452
    5. ' un' → logprob: -3.520637273788452
    6. ' ' → logprob: -3.645637273788452
    7. ' l' → logprob: -4.020637512207031
    8. ' la' → logprob: -4.145637512207031
    9. 's' → logprob: -4.270637512207031
    10. ' le' → logprob: -4.395637512207031

Token 45: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.19812554121017456
    2. ' ' → logprob: -2.4481256008148193
    3. 'les' → logprob: -2.5731256008148193
    4. 's' → logprob: -4.44812536239624
    5. ' l' → logprob: -6.69812536239624
    6. '<|end|>' → logprob: -6.82312536239624
    7. ' des' → logprob: -7.57312536239624
    8. 'l' → logprob: -7.94812536239624
    9. '(' → logprob: -8.198125839233398
    10. '  ' → logprob: -8.448125839233398

Token 46: ' positions' (ID: 15897)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.160375714302063
    2. ' sous' → logprob: -1.285375714302063
    3. 's' → logprob: -1.535375714302063
    4. ' p' → logprob: -3.0353755950927734
    5. ' positions' → logprob: -4.035375595092773
    6. ' s' → logprob: -4.160375595092773
    7. '   ' → logprob: -4.410375595092773
    8. ' façons' → logprob: -4.535375595092773
    9. 'positions' → logprob: -4.660375595092773
    10. '  ' → logprob: -4.785375595092773

Token 47: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1583297997713089
    2. ' (' → logprob: -2.533329725265503
    3. ' des' → logprob: -3.783329725265503
    4. ' possibles' → logprob: -4.408329963684082
    5. ' de' → logprob: -4.658329963684082
    6. ' d' → logprob: -5.033329963684082
    7. ' possible' → logprob: -5.533329963684082
    8. ' où' → logprob: -5.783329963684082
    9. '(' → logprob: -6.783329963684082
    10. 'possible' → logprob: -7.158329963684082

Token 48: 'i' (ID: 72)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1953670978546143
    2. 'i' → logprob: -1.5703670978546143
    3. ' i' → logprob: -2.3203670978546143
    4. ')' → logprob: -2.4453670978546143
    5. ' ,' → logprob: -2.4453670978546143
    6. ' (' → logprob: -2.4453670978546143
    7. ' ' → logprob: -2.9453670978546143
    8. ' )' → logprob: -3.3203670978546143
    9. '(i' → logprob: -4.445366859436035
    10. '(' → logprob: -4.945366859436035

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00678629707545042
    2. ',j' → logprob: -5.256786346435547
    3. ' ,' → logprob: -6.631786346435547
    4. ',
' → logprob: -9.256786346435547
    5. ')' → logprob: -9.881786346435547
    6. 's' → logprob: -10.506786346435547
    7. ' ' → logprob: -10.631786346435547
    8. ',n' → logprob: -11.631786346435547
    9. ',)' → logprob: -11.881786346435547
    10. 'n' → logprob: -12.881786346435547

Token 50: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6933534145355225
    2. ' j' → logprob: -0.6933534145355225
    3. ' ' → logprob: -9.318353652954102
    4. ',' → logprob: -10.568353652954102
    5. '	j' → logprob: -10.818353652954102
    6. ',j' → logprob: -11.068353652954102
    7. '```' → logprob: -11.068353652954102
    8. '  ' → logprob: -11.318353652954102
    9. ' ' → logprob: -12.193353652954102
    10. '   ' → logprob: -12.318353652954102

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013363128527998924
    2. ' )' → logprob: -7.001336097717285
    3. ',' → logprob: -8.126336097717285
    4. ' ' → logprob: -9.501336097717285
    5. ')
' → logprob: -11.251336097717285
    6. '),' → logprob: -11.501336097717285
    7. ' ' → logprob: -12.501336097717285
    8. '')' → logprob: -12.626336097717285
    9. '```' → logprob: -13.126336097717285
    10. 'où' → logprob: -13.251336097717285

Token 52: ' dans' (ID: 2671)
  Prédit: ' où'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' où' → logprob: -0.6238769292831421
    2. ' ' → logprob: -1.498876929283142
    3. 'où' → logprob: -2.8738770484924316
    4. ')' → logprob: -2.9988770484924316
    5. ' )' → logprob: -3.9988770484924316
    6. ',' → logprob: -4.123877048492432
    7. ' telles' → logprob: -4.373877048492432
    8. ' de' → logprob: -4.498877048492432
    9. ' des' → logprob: -4.623877048492432
    10. ' pour' → logprob: -4.748877048492432

Token 53: ' B' (ID: 418)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.46395254135131836
    2. ' la' → logprob: -1.8389525413513184
    3. 'A' → logprob: -2.7139525413513184
    4. ' les' → logprob: -2.8389525413513184
    5. ' ' → logprob: -3.2139525413513184
    6. ' C' → logprob: -4.088952541351318
    7. 'les' → logprob: -5.213952541351318
    8. ' l' → logprob: -5.463952541351318
    9. 'la' → logprob: -5.713952541351318
    10. ' lesquelles' → logprob: -5.713952541351318

Token 54: ' où' (ID: 15113)
  Prédit: ' où'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' où' → logprob: -0.5420718193054199
    2. 'où' → logprob: -1.79207181930542
    3. ',' → logprob: -2.41707181930542
    4. ' ' → logprob: -3.29207181930542
    5. ' pour' → logprob: -4.16707181930542
    6. '[' → logprob: -4.16707181930542
    7. '.' → logprob: -4.16707181930542
    8. '```' → logprob: -4.29207181930542
    9. ')' → logprob: -4.91707181930542
    10. ' et' → logprob: -5.04207181930542

Token 55: ' le' (ID: 505)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.26256629824638367
    2. 'B' → logprob: -1.512566328048706
    3. ' on' → logprob: -5.387566089630127
    4. 'b' → logprob: -6.887566089630127
    5. ' ' → logprob: -7.137566089630127
    6. ' la' → logprob: -7.137566089630127
    7. ' le' → logprob: -7.637566089630127
    8. ' b' → logprob: -8.012566566467285
    9. 'on' → logprob: -8.137566566467285
    10. '`' → logprob: -8.137566566467285

Token 56: ' motif' (ID: 72753)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.295928418636322
    2. ' B' → logprob: -2.920928478240967
    3. 'val' → logprob: -3.545928478240967
    4. ' élément' → logprob: -3.920928478240967
    5. ' code' → logprob: -4.170928478240967
    6. ' caractère' → logprob: -4.295928478240967
    7. 'B' → logprob: -4.295928478240967
    8. ' pixel' → logprob: -4.295928478240967
    9. ' valeur' → logprob: -4.545928478240967
    10. 'b' → logprob: -5.045928478240967

Token 57: ' C' (ID: 363)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.1387039422988892
    2. ' ' → logprob: -1.7637039422988892
    3. ' "' → logprob: -1.7637039422988892
    4. ' '' → logprob: -2.1387038230895996
    5. '"' → logprob: -3.2637038230895996
    6. 'est' → logprob: -3.5137038230895996
    7. ' B' → logprob: -3.7637038230895996
    8. ''' → logprob: -3.8887038230895996
    9. ' `' → logprob: -4.1387038230896
    10. ' n' → logprob: -4.3887038230896

Token 58: ' peut' (ID: 9216)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.21819458901882172
    2. 'est' → logprob: -2.3431944847106934
    3. ' apparaît' → logprob: -2.9681944847106934
    4. ' n' → logprob: -4.343194484710693
    5. 'ap' → logprob: -4.843194484710693
    6. ' ' → logprob: -4.843194484710693
    7. ' appara' → logprob: -5.968194484710693
    8. 's' → logprob: -6.093194484710693
    9. ' semble' → logprob: -6.093194484710693
    10. ' se' → logprob: -6.593194484710693

Token 59: ' s' (ID: 265)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.9909536242485046
    2. ' s' → logprob: -1.3659536838531494
    3. ' appara' → logprob: -2.1159536838531494
    4. 's' → logprob: -2.1159536838531494
    5. ' être' → logprob: -2.4909536838531494
    6. ' se' → logprob: -4.24095344543457
    7. 'êtres' → logprob: -4.86595344543457
    8. '<|end|>' → logprob: -5.11595344543457
    9. 'se' → logprob: -5.61595344543457
    10. 'êt' → logprob: -6.49095344543457

Token 60: ''em' (ID: 60043)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2280949503183365
    2. ''ins' → logprob: -2.978095054626465
    3. '')' → logprob: -3.353095054626465
    4. ''' → logprob: -3.853095054626465
    5. ''intégr' → logprob: -4.103095054626465
    6. ''em' → logprob: -4.353095054626465
    7. ''é' → logprob: -4.603095054626465
    8. ''emp' → logprob: -5.478095054626465
    9. 'ê' → logprob: -5.603095054626465
    10. 'er' → logprob: -5.853095054626465

Token 61: 'bo' (ID: 1692)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.042613495141267776
    2. 'placer' → logprob: -3.7926135063171387
    3. 'ployer' → logprob: -4.292613506317139
    4. 'placement' → logprob: -6.042613506317139
    5. 'pl' → logprob: -6.917613506317139
    6. 'plac' → logprob: -7.542613506317139
    7. 'place' → logprob: -8.04261302947998
    8. 'patch' → logprob: -8.54261302947998
    9. 'ploy' → logprob: -8.66761302947998
    10. 'pliquer' → logprob: -9.29261302947998

Token 62: 'î' (ID: 2687)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3554553985595703
    2. 'quer' → logprob: -2.6054553985595703
    3. 'r' → logprob: -2.7304553985595703
    4. '#' → logprob: -2.8554553985595703
    5. 'der' → logprob: -3.9804553985595703
    6. 'ucher' → logprob: -4.48045539855957
    7. '```' → logprob: -4.85545539855957
    8. 'c' → logprob: -4.98045539855957
    9. 'rc' → logprob: -5.10545539855957
    10. '\' → logprob: -5.48045539855957

Token 63: 'ter' (ID: 399)
  Prédit: 'der'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'der' → logprob: -0.12736596167087555
    2. 'd' → logprob: -2.502366065979004
    3. 'cher' → logprob: -4.502366065979004
    4. 'dr' → logprob: -5.752366065979004
    5. 'ter' → logprob: -6.002366065979004
    6. 'trer' → logprob: -6.002366065979004
    7. '```' → logprob: -6.377366065979004
    8. 'de' → logprob: -6.627366065979004
    9. 'cter' → logprob: -6.627366065979004
    10. '#' → logprob: -6.752366065979004

Token 64: ' complètement' (ID: 81766)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9507469534873962
    2. '.' → logprob: -0.9507469534873962
    3. ' ' → logprob: -1.950747013092041
    4. ' ,' → logprob: -3.825747013092041
    5. '#' → logprob: -4.325747013092041
    6. ':' → logprob: -4.575747013092041
    7. 's' → logprob: -4.700747013092041
    8. ' (' → logprob: -5.075747013092041
    9. ''' → logprob: -5.950747013092041
    10. ' .' → logprob: -6.200747013092041

Token 65: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7412194013595581
    2. ',' → logprob: -0.8662194013595581
    3. ' ,' → logprob: -3.6162195205688477
    4. 's' → logprob: -3.9912195205688477
    5. ' ' → logprob: -3.9912195205688477
    6. ':' → logprob: -4.116219520568848
    7. ' .' → logprob: -5.491219520568848
    8. ' (' → logprob: -5.866219520568848
    9. '_' → logprob: -6.366219520568848
    10. 'e' → logprob: -6.491219520568848

Token 66: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4748695194721222
    2. ':' → logprob: -2.4748694896698
    3. ',' → logprob: -2.4748694896698
    4. ' ' → logprob: -2.9748694896698
    5. '.' → logprob: -3.2248694896698
    6. ')' → logprob: -3.5998694896698
    7. 'i' → logprob: -3.7248694896698
    8. 'for' → logprob: -3.8498694896698
    9. 'n' → logprob: -4.724869728088379
    10. '[' → logprob: -5.099869728088379

Token 67: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7302996516227722
    2. '#' → logprob: -1.355299711227417
    3. 'i' → logprob: -3.480299711227417
    4. ')' → logprob: -3.605299711227417
    5. ':' → logprob: -3.605299711227417
    6. 'for' → logprob: -3.605299711227417
    7. ',' → logprob: -3.730299711227417
    8. '\' → logprob: -3.855299711227417
    9. 'n' → logprob: -4.105299472808838
    10. '[' → logprob: -4.355299472808838

Token 68: '3' (ID: 18)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6229998469352722
    2. '#' → logprob: -0.8729998469352722
    3. ' ' → logprob: -4.247999668121338
    4. ' for' → logprob: -4.622999668121338
    5. 'i' → logprob: -5.122999668121338
    6. ')' → logprob: -6.247999668121338
    7. '3' → logprob: -6.372999668121338
    8. 'n' → logprob: -6.497999668121338
    9. 'def' → logprob: -6.622999668121338
    10. ' #' → logprob: -6.622999668121338

Token 69: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01622696965932846
    2. ' )' → logprob: -4.141226768493652
    3. '#' → logprob: -8.766226768493652
    4. ')#' → logprob: -11.016226768493652
    5. ' #' → logprob: -11.766226768493652
    6. '   ' → logprob: -13.891226768493652
    7. '.' → logprob: -13.891226768493652
    8. ')
' → logprob: -13.891226768493652
    9. ' ' → logprob: -13.891226768493652
    10. '')' → logprob: -14.141226768493652

Token 70: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9282712340354919
    2. ' for' → logprob: -1.4282712936401367
    3. 'Pour' → logprob: -2.5532712936401367
    4. ' Vér' → logprob: -2.5532712936401367
    5. 'V' → logprob: -3.3032712936401367
    6. ' Pour' → logprob: -3.4282712936401367
    7. ' vérifier' → logprob: -3.5532712936401367
    8. '#' → logprob: -3.9282712936401367
    9. 'For' → logprob: -4.053271293640137
    10. ' For' → logprob: -4.303271293640137

Token 71: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.06274015456438065
    2. 'cha' → logprob: -3.3127400875091553
    3. ' chacune' → logprob: -4.187740325927734
    4. ' each' → logprob: -5.812740325927734
    5. 'each' → logprob: -5.812740325927734
    6. ' cha' → logprob: -7.312740325927734
    7. 'ch' → logprob: -7.687740325927734
    8. 't' → logprob: -8.187740325927734
    9. ' ' → logprob: -8.187740325927734
    10. ' chacun' → logprob: -8.312740325927734

Token 72: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.5242769122123718
    2. ' position' → logprob: -1.0242769718170166
    3. ' (' → logprob: -3.5242769718170166
    4. ' i' → logprob: -4.7742767333984375
    5. 'pos' → logprob: -6.2742767333984375
    6. 'positions' → logprob: -6.2742767333984375
    7. ' ' → logprob: -6.5242767333984375
    8. 'i' → logprob: -6.7742767333984375
    9. ' emplacement' → logprob: -6.8992767333984375
    10. '(i' → logprob: -7.1492767333984375

Token 73: ',' (ID: 11)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.48964303731918335
    2. ',' → logprob: -1.8646430969238281
    3. ' ' → logprob: -2.114643096923828
    4. ' ,' → logprob: -2.614643096923828
    5. ' où' → logprob: -4.114643096923828
    6. 'où' → logprob: -5.239643096923828
    7. '(' → logprob: -5.489643096923828
    8. '(i' → logprob: -6.114643096923828
    9. ' i' → logprob: -6.239643096923828
    10. ' where' → logprob: -6.614643096923828

Token 74: ' vérifier' (ID: 93671)
  Prédit: ' vérifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -0.12269049137830734
    2. ' calcul' → logprob: -2.622690439224243
    3. 'v' → logprob: -4.372690677642822
    4. ' on' → logprob: -4.622690677642822
    5. ' comparer' → logprob: -5.997690677642822
    6. ' effectuer' → logprob: -6.622690677642822
    7. ' v' → logprob: -6.622690677642822
    8. ' vér' → logprob: -6.622690677642822
    9. ' tester' → logprob: -6.747690677642822
    10. ' continuer' → logprob: -6.747690677642822

Token 75: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.5563045740127563
    2. ' if' → logprob: -1.9313045740127563
    3. ' ' → logprob: -2.056304454803467
    4. 'si' → logprob: -2.931304454803467
    5. 's' → logprob: -3.181304454803467
    6. '<|end|>' → logprob: -3.431304454803467
    7. ' que' → logprob: -5.181304454803467
    8. '  ' → logprob: -5.556304454803467
    9. ' s' → logprob: -5.681304454803467
    10. '```' → logprob: -5.931304454803467

Token 76: ' le' (ID: 505)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.49224936962127686
    2. ' all' → logprob: -2.1172494888305664
    3. ' toutes' → logprob: -2.2422494888305664
    4. ' la' → logprob: -3.2422494888305664
    5. ' les' → logprob: -3.4922494888305664
    6. ' le' → logprob: -3.6172494888305664
    7. ' C' → logprob: -3.9922494888305664
    8. ' ' → logprob: -4.617249488830566
    9. 'B' → logprob: -4.742249488830566
    10. ' A' → logprob: -5.242249488830566

Token 77: ' sous' (ID: 14487)
  Prédit: ' motif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' motif' → logprob: -0.019443495199084282
    2. 'mot' → logprob: -4.894443511962891
    3. ' pattern' → logprob: -5.394443511962891
    4. ' mot' → logprob: -6.769443511962891
    5. 's' → logprob: -7.019443511962891
    6. ' morceau' → logprob: -7.394443511962891
    7. ' match' → logprob: -7.519443511962891
    8. 'pattern' → logprob: -7.644443511962891
    9. ' sous' → logprob: -7.769443511962891
    10. ' ' → logprob: -7.769443511962891

Token 78: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7008922100067139
    2. '-m' → logprob: -0.8258922100067139
    3. 'mat' → logprob: -3.825892210006714
    4. '```' → logprob: -4.825892448425293
    5. 'mot' → logprob: -4.825892448425293
    6. ' ' → logprob: -4.950892448425293
    7. 'matrix' → logprob: -5.575892448425293
    8. '   ' → logprob: -6.075892448425293
    9. '' → logprob: -6.325892448425293
    10. 'm' → logprob: -6.325892448425293

Token 79: 'rectangle' (ID: 125332)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.4800044298171997
    2. 'table' → logprob: -1.9800044298171997
    3. '-' → logprob: -3.23000431060791
    4. 'mot' → logprob: -3.23000431060791
    5. 'matrix' → logprob: -3.35500431060791
    6. '-m' → logprob: -3.48000431060791
    7. '```' → logprob: -3.48000431060791
    8. 'rectangle' → logprob: -3.85500431060791
    9. 'bloc' → logprob: -4.60500431060791
    10. ' ' → logprob: -5.35500431060791

Token 80: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1907559633255005
    2. ' de' → logprob: -1.8157559633255005
    3. ' B' → logprob: -6.190755844116211
    4. ' correspondant' → logprob: -6.565755844116211
    5. ' s' → logprob: -6.690755844116211
    6. ' du' → logprob: -7.440755844116211
    7. '```' → logprob: -7.565755844116211
    8. ' d' → logprob: -7.565755844116211
    9. ' dans' → logprob: -7.690755844116211
    10. ' est' → logprob: -7.815755844116211

Token 81: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.1279214322566986
    2. 'B' → logprob: -2.1279213428497314
    3. ' la' → logprob: -8.002921104431152
    4. ' A' → logprob: -8.002921104431152
    5. ' ' → logprob: -8.877921104431152
    6. 'A' → logprob: -9.127921104431152
    7. '#' → logprob: -11.440421104431152
    8. 'l' → logprob: -11.502921104431152
    9. '```' → logprob: -11.565421104431152
    10. 'la' → logprob: -11.690421104431152

Token 82: ' correspond' (ID: 11095)
  Prédit: ' correspond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' correspond' → logprob: -0.9055582880973816
    2. ' correspondant' → logprob: -1.2805583477020264
    3. '[' → logprob: -2.7805583477020264
    4. ' est' → logprob: -3.0305583477020264
    5. ' à' → logprob: -3.0305583477020264
    6. '[i' → logprob: -3.6555583477020264
    7. ' contenant' → logprob: -3.9055583477020264
    8. ' de' → logprob: -3.9055583477020264
    9. '```' → logprob: -4.530558109283447
    10. ' contient' → logprob: -4.780558109283447

Token 83: ' exactement' (ID: 108701)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.19966255128383636
    2. ' au' → logprob: -1.8246625661849976
    3. ' aux' → logprob: -4.449662685394287
    4. 'à' → logprob: -5.324662685394287
    5. 'au' → logprob: -6.949662685394287
    6. 'ra' → logprob: -7.449662685394287
    7. ' a' → logprob: -8.199662208557129
    8. ''à' → logprob: -8.574662208557129
    9. ' exactement' → logprob: -8.949662208557129
    10. '```' → logprob: -8.949662208557129

Token 84: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6167054176330566
    2. ' au' → logprob: -0.8667054176330566
    3. 'à' → logprob: -3.8667054176330566
    4. 'au' → logprob: -4.116705417633057
    5. ' aux' → logprob: -6.616705417633057
    6. ' ' → logprob: -7.241705417633057
    7. '```' → logprob: -9.116704940795898
    8. ''à' → logprob: -9.366704940795898
    9. ''au' → logprob: -9.616704940795898
    10. 'aux' → logprob: -9.616704940795898

Token 85: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.1264282763004303
    2. 'C' → logprob: -2.2514283657073975
    3. ' ' → logprob: -5.001428127288818
    4. ' celui' → logprob: -5.501428127288818
    5. ' la' → logprob: -6.626428127288818
    6. ' le' → logprob: -8.001428604125977
    7. 'l' → logprob: -8.376428604125977
    8. 'le' → logprob: -8.876428604125977
    9. 'la' → logprob: -8.876428604125977
    10. ' l' → logprob: -8.876428604125977

Token 86: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0556219816207886
    2. '#' → logprob: -1.6806219816207886
    3. ':' → logprob: -1.6806219816207886
    4. ',' → logprob: -1.8056219816207886
    5. ' ' → logprob: -3.180622100830078
    6. '```' → logprob: -3.680622100830078
    7. '\' → logprob: -4.555622100830078
    8. 'def' → logprob: -5.055622100830078
    9. '4' → logprob: -5.305622100830078
    10. 'import' → logprob: -5.305622100830078

Token 87: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16891613602638245
    2. 'n' → logprob: -3.6689162254333496
    3. 'i' → logprob: -3.7939162254333496
    4. 'def' → logprob: -4.04391622543335
    5. ' ' → logprob: -4.29391622543335
    6. '```' → logprob: -4.41891622543335
    7. ':' → logprob: -4.79391622543335
    8. 'for' → logprob: -4.79391622543335
    9. 'd' → logprob: -4.91891622543335
    10. 'import' → logprob: -4.91891622543335

Token 88: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2163422107696533
    2. 'import' → logprob: -1.4663422107696533
    3. ' ' → logprob: -1.5913422107696533
    4. 'n' → logprob: -2.8413422107696533
    5. '#' → logprob: -3.2163422107696533
    6. 'for' → logprob: -3.2163422107696533
    7. 'i' → logprob: -3.3413422107696533
    8. '```' → logprob: -3.4663422107696533
    9. '\' → logprob: -4.591341972351074
    10. 'd' → logprob: -4.966341972351074

Token 89: '4' (ID: 19)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3180597126483917
    2. 'def' → logprob: -1.9430596828460693
    3. 'for' → logprob: -2.9430596828460693
    4. ' ' → logprob: -3.9430596828460693
    5. 'i' → logprob: -4.318059921264648
    6. '```' → logprob: -4.818059921264648
    7. 'n' → logprob: -4.818059921264648
    8. 'd' → logprob: -4.818059921264648
    9. 'import' → logprob: -5.318059921264648
    10. '\' → logprob: -6.318059921264648

Token 90: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005578318145126104
    2. ' )' → logprob: -5.380578517913818
    3. '#' → logprob: -7.005578517913818
    4. ')#' → logprob: -10.25557804107666
    5. ' #' → logprob: -12.13057804107666
    6. '')' → logprob: -13.00557804107666
    7. '   ' → logprob: -13.63057804107666
    8. ')
' → logprob: -14.00557804107666
    9. ' ' → logprob: -14.38057804107666
    10. '`)' → logprob: -14.50557804107666

Token 91: ' Si' (ID: 7832)
  Prédit: ' Comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Comp' → logprob: -1.3547461032867432
    2. 'Comp' → logprob: -1.9797461032867432
    3. 'Calcul' → logprob: -1.9797461032867432
    4. 'Afficher' → logprob: -2.354746103286743
    5. ' Calcul' → logprob: -2.604746103286743
    6. ' Aff' → logprob: -2.729746103286743
    7. ' Trou' → logprob: -3.104746103286743
    8. ' compter' → logprob: -4.229745864868164
    9. 'Compte' → logprob: -4.354745864868164
    10. 'Si' → logprob: -4.479745864868164

Token 92: ' oui' (ID: 50908)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.9972917437553406
    2. ' ' → logprob: -1.4972918033599854
    3. ' B' → logprob: -2.8722918033599854
    4. ' found' → logprob: -2.9972918033599854
    5. ' trouvé' → logprob: -2.9972918033599854
    6. ' C' → logprob: -3.2472918033599854
    7. ' l' → logprob: -3.4972918033599854
    8. ' une' → logprob: -3.7472918033599854
    9. ' le' → logprob: -3.7472918033599854
    10. ' a' → logprob: -4.622291564941406

Token 93: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8284715414047241
    2. ',' → logprob: -1.0784715414047241
    3. '   ' → logprob: -1.9534715414047241
    4. ' ,' → logprob: -3.4534716606140137
    5. ' :' → logprob: -4.203471660614014
    6. '    ' → logprob: -4.953471660614014
    7. ' ' → logprob: -5.078471660614014
    8. ' ' → logprob: -5.078471660614014
    9. ' continuer' → logprob: -5.578471660614014
    10. ':
' → logprob: -6.203471660614014

Token 94: ' calcul' (ID: 7559)
  Prédit: ' compter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compter' → logprob: -1.2306160926818848
    2. ' augmenter' → logprob: -1.6056160926818848
    3. ' afficher' → logprob: -2.4806160926818848
    4. ' increment' → logprob: -2.4806160926818848
    5. ' ajouter' → logprob: -2.7306160926818848
    6. ' continuer' → logprob: -2.8556160926818848
    7. ' retourner' → logprob: -3.2306160926818848
    8. ' on' → logprob: -3.4806160926818848
    9. ' incr' → logprob: -3.4806160926818848
    10. ' calcul' → logprob: -3.4806160926818848

Token 95: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -7.982165698194876e-05
    2. 'ate' → logprob: -9.625080108642578
    3. 'e' → logprob: -12.625080108642578
    4. '#' → logprob: -12.625080108642578
    5. '   ' → logprob: -13.625080108642578
    6. 'r' → logprob: -13.875080108642578
    7. 'uer' → logprob: -14.750080108642578
    8. '       ' → logprob: -14.750080108642578
    9. 'ateur' → logprob: -14.875080108642578
    10. '               ' → logprob: -15.000080108642578

Token 96: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5666842460632324
    2. ' la' → logprob: -0.9416842460632324
    3. ' le' → logprob: -4.066684246063232
    4. ' ' → logprob: -4.566684246063232
    5. 'l' → logprob: -5.066684246063232
    6. 'le' → logprob: -6.441684246063232
    7. 'aire' → logprob: -6.816684246063232
    8. ' ' → logprob: -6.941684246063232
    9. 's' → logprob: -7.191684246063232
    10. 'area' → logprob: -7.441684246063232

Token 97: ' somme' (ID: 64484)
  Prédit: ' surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' surface' → logprob: -1.591146469116211
    2. ' somme' → logprob: -1.591146469116211
    3. ' ' → logprob: -1.716146469116211
    4. 's' → logprob: -2.341146469116211
    5. ' nombre' → logprob: -2.716146469116211
    6. ' superficie' → logprob: -3.091146469116211
    7. ' taille' → logprob: -3.216146469116211
    8. 'surface' → logprob: -3.341146469116211
    9. ' score' → logprob: -3.841146469116211
    10. 'aire' → logprob: -3.966146469116211

Token 98: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10854154080152512
    2. ' de' → logprob: -3.608541488647461
    3. ' ' → logprob: -4.358541488647461
    4. '(' → logprob: -4.483541488647461
    5. ' des' → logprob: -4.983541488647461
    6. ')' → logprob: -4.983541488647461
    7. 's' → logprob: -5.108541488647461
    8. ' _' → logprob: -5.108541488647461
    9. ' (' → logprob: -5.233541488647461
    10. ',' → logprob: -5.858541488647461

Token 99: ' ent' (ID: 1121)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.22900734841823578
    2. ' A' → logprob: -2.8540072441101074
    3. ' éléments' → logprob: -2.9790072441101074
    4. ' valeurs' → logprob: -3.3540072441101074
    5. ' pixels' → logprob: -3.6040072441101074
    6. 'A' → logprob: -3.8540072441101074
    7. ' ' → logprob: -5.354007244110107
    8. 'pixels' → logprob: -6.604007244110107
    9. ' i' → logprob: -7.604007244110107
    10. 'i' → logprob: -7.604007244110107

Token 100: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.3413395285606384
    2. 'ières' → logprob: -1.3413395881652832
    3. 't' → logprob: -4.841339588165283
    4. 'ités' → logprob: -5.341339588165283
    5. '   ' → logprob: -5.341339588165283
    6. 'r' → logprob: -5.466339588165283
    7. 'i' → logprob: -5.716339588165283
    8. 'ière' → logprob: -7.841339588165283
    9. 'ié' → logprob: -7.966339588165283
    10. 'ier' → logprob: -7.966339588165283

Token 101: ' correspond' (ID: 11095)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0278713703155518
    2. '_' → logprob: -1.9028713703155518
    3. ' correspond' → logprob: -2.0278713703155518
    4. ' de' → logprob: -2.1528713703155518
    5. ' ' → logprob: -2.5278713703155518
    6. ' du' → logprob: -3.1528713703155518
    7. ' dans' → logprob: -3.4028713703155518
    8. 's' → logprob: -3.9028713703155518
    9. ' correspondant' → logprob: -5.152871131896973
    10. ' s' → logprob: -5.402871131896973

Token 102: 'ants' (ID: 2027)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.349058598279953
    2. 'ant' → logprob: -1.9740586280822754
    3. 'ents' → logprob: -2.3490586280822754
    4. 'ants' → logprob: -4.224058628082275
    5. 'é' → logprob: -4.224058628082275
    6. ' à' → logprob: -4.599058628082275
    7. 'à' → logprob: -4.849058628082275
    8. 'ent' → logprob: -5.474058628082275
    9. 'ée' → logprob: -6.349058628082275
    10. 's' → logprob: -6.349058628082275

Token 103: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7625380754470825
    2. ' ' → logprob: -1.7625380754470825
    3. '
' → logprob: -1.8875380754470825
    4. '#' → logprob: -2.262537956237793
    5. '```' → logprob: -3.012537956237793
    6. ':' → logprob: -3.137537956237793
    7. 'def' → logprob: -3.637537956237793
    8. 'import' → logprob: -3.637537956237793
    9. 'n' → logprob: -3.762537956237793
    10. 's' → logprob: -3.887537956237793

Token 104: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.021694732829928398
    2. 'A' → logprob: -3.8966946601867676
    3. ' B' → logprob: -7.396694660186768
    4. ' ' → logprob: -7.896694660186768
    5. ' ' → logprob: -9.646695137023926
    6. ' l' → logprob: -10.021695137023926
    7. ' la' → logprob: -10.771695137023926
    8. 'B' → logprob: -11.146695137023926
    9. 'l' → logprob: -11.646695137023926
    10. ' le' → logprob: -12.521695137023926

Token 105: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3202567994594574
    2. 'for' → logprob: -2.5702567100524902
    3. '#' → logprob: -3.5702567100524902
    4. 'import' → logprob: -3.6952567100524902
    5. '```' → logprob: -3.9452567100524902
    6. 'def' → logprob: -4.07025671005249
    7. ',' → logprob: -4.19525671005249
    8. 'n' → logprob: -4.19525671005249
    9. '

' → logprob: -4.57025671005249
    10. '\' → logprob: -4.69525671005249

Token 106: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.45649486780166626
    2. '
' → logprob: -2.7064948081970215
    3. ',' → logprob: -3.2064948081970215
    4. '```' → logprob: -3.2064948081970215
    5. 'def' → logprob: -3.3314948081970215
    6. 'a' → logprob: -3.5814948081970215
    7. 'i' → logprob: -3.5814948081970215
    8. 'for' → logprob: -3.5814948081970215
    9. 'n' → logprob: -3.7064948081970215
    10. 'import' → logprob: -4.3314948081970215

Token 107: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6189963817596436
    2. '#' → logprob: -1.7439963817596436
    3. 'i' → logprob: -2.6189963817596436
    4. 'n' → logprob: -3.1189963817596436
    5. '
' → logprob: -3.6189963817596436
    6. 'def' → logprob: -3.6189963817596436
    7. ' for' → logprob: -3.7439963817596436
    8. '```' → logprob: -4.368996620178223
    9. ' ' → logprob: -4.493996620178223
    10. '\' → logprob: -4.618996620178223

Token 108: '5' (ID: 20)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3008359372615814
    2. '#' → logprob: -1.6758359670639038
    3. ' for' → logprob: -3.8008358478546143
    4. 'i' → logprob: -4.425836086273193
    5. 'import' → logprob: -4.925836086273193
    6. ' ' → logprob: -5.175836086273193
    7. '```' → logprob: -5.300836086273193
    8. 'def' → logprob: -5.425836086273193
    9. 'n' → logprob: -5.675836086273193
    10. 's' → logprob: -5.800836086273193

Token 109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020659223664551973
    2. ' )' → logprob: -6.252066135406494
    3. '#' → logprob: -9.002065658569336
    4. ' #' → logprob: -12.502065658569336
    5. ')
' → logprob: -13.002065658569336
    6. ']' → logprob: -13.377065658569336
    7. 'def' → logprob: -13.627065658569336
    8. 'for' → logprob: -14.252065658569336
    9. ' ' → logprob: -14.377065658569336
    10. ' ' → logprob: -14.627065658569336

Token 110: ' G' (ID: 499)
  Prédit: ' Trou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Trou' → logprob: -0.009222472086548805
    2. 'Trou' → logprob: -6.259222507476807
    3. ' Calcul' → logprob: -6.384222507476807
    4. ' Retour' → logprob: -6.509222507476807
    5. ' Re' → logprob: -7.134222507476807
    6. ' Cho' → logprob: -7.384222507476807
    7. ' Met' → logprob: -7.759222507476807
    8. ' Ret' → logprob: -7.884222507476807
    9. ' Compar' → logprob: -8.259222030639648
    10. 'Comparer' → logprob: -8.259222030639648

Token 111: 'érer' (ID: 29097)
  Prédit: 'ard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ard' → logprob: -0.5794269442558289
    2. 'a' → logprob: -1.9544270038604736
    3. 'arder' → logprob: -1.9544270038604736
    4. '#' → logprob: -3.4544270038604736
    5. 'enerate' → logprob: -3.8294270038604736
    6. 'n' → logprob: -3.9544270038604736
    7. 'ood' → logprob: -4.5794267654418945
    8. 'u' → logprob: -4.7044267654418945
    9. 'lobal' → logprob: -4.7044267654418945
    10. 'o' → logprob: -4.7044267654418945

Token 112: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7314315438270569
    2. ' les' → logprob: -1.356431484222412
    3. ' la' → logprob: -1.731431484222412
    4. ' le' → logprob: -3.856431484222412
    5. ' ' → logprob: -4.231431484222412
    6. ' ' → logprob: -4.481431484222412
    7. ' au' → logprob: -4.731431484222412
    8. '  ' → logprob: -5.106431484222412
    9. 's' → logprob: -5.856431484222412
    10. 'les' → logprob: -6.231431484222412

Token 113: ' maximum' (ID: 10562)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.370355486869812
    2. ' maximum' → logprob: -1.620355486869812
    3. ' cas' → logprob: -1.745355486869812
    4. 'max' → logprob: -1.995355486869812
    5. ' meilleur' → logprob: -2.9953556060791016
    6. 'me' → logprob: -2.9953556060791016
    7. ' résultat' → logprob: -3.3703556060791016
    8. '```' → logprob: -3.4953556060791016
    9. 's' → logprob: -3.8703556060791016
    10. 'maximum' → logprob: -4.245355606079102

Token 114: ' sur' (ID: 1512)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3194806575775146
    2. '#' → logprob: -1.6944806575775146
    3. '```' → logprob: -1.9444806575775146
    4. 'import' → logprob: -2.0694806575775146
    5. 'n' → logprob: -2.4444806575775146
    6. '
' → logprob: -3.1944806575775146
    7. 'a' → logprob: -3.8194806575775146
    8. 'A' → logprob: -3.9444806575775146
    9. ',' → logprob: -3.9444806575775146
    10. ':' → logprob: -4.194480895996094

Token 115: ' toutes' (ID: 17502)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7149279117584229
    2. ' ' → logprob: -2.339927911758423
    3. ' les' → logprob: -2.839927911758423
    4. 'la' → logprob: -2.964927911758423
    5. 'tout' → logprob: -2.964927911758423
    6. ' une' → logprob: -3.214927911758423
    7. ' l' → logprob: -3.214927911758423
    8. ' le' → logprob: -3.214927911758423
    9. ' toutes' → logprob: -4.214927673339844
    10. ' toute' → logprob: -4.339927673339844

Token 116: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.325272798538208
    2. 's' → logprob: -1.700272798538208
    3. '_' → logprob: -1.950272798538208
    4. ' ' → logprob: -2.075272798538208
    5. 'positions' → logprob: -3.075272798538208
    6. '_positions' → logprob: -3.200272798538208
    7. '#' → logprob: -3.325272798538208
    8. ' la' → logprob: -3.825272798538208
    9. 'les' → logprob: -4.450272560119629
    10. '   ' → logprob: -4.825272560119629

Token 117: ' correspond' (ID: 11095)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.0378543138504028
    2. 's' → logprob: -1.1628543138504028
    3. ' sommes' → logprob: -2.1628541946411133
    4. ' positions' → logprob: -2.9128541946411133
    5. 'occ' → logprob: -3.5378541946411133
    6. '   ' → logprob: -3.6628541946411133
    7. ' ' → logprob: -3.9128541946411133
    8. 'som' → logprob: -3.9128541946411133
    9. '_s' → logprob: -4.662854194641113
    10. '_' → logprob: -4.787854194641113

Token 118: 'ances' (ID: 3528)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.7333276271820068
    2. 'ences' → logprob: -0.9833276271820068
    3. 'ances' → logprob: -2.358327627182007
    4. 'ces' → logprob: -4.358327865600586
    5. 't' → logprob: -4.733327865600586
    6. '#' → logprob: -5.233327865600586
    7. 'n' → logprob: -5.358327865600586
    8. 'ations' → logprob: -5.483327865600586
    9. 's' → logprob: -5.608327865600586
    10. 'ées' → logprob: -5.858327865600586

Token 119: ' trouv' (ID: 40254)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5040783286094666
    2. 'def' → logprob: -2.0040783882141113
    3. 'A' → logprob: -2.3790783882141113
    4. 'import' → logprob: -2.8790783882141113
    5. '```' → logprob: -3.1290783882141113
    6. '#' → logprob: -3.2540783882141113
    7. 'i' → logprob: -4.379078388214111
    8. 'a' → logprob: -4.879078388214111
    9. 'for' → logprob: -5.504078388214111
    10. '\' → logprob: -6.879078388214111

Token 120: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.4687633216381073
    2. 'ies' → logprob: -1.5937633514404297
    3. 'es' → logprob: -2.2187633514404297
    4. 'er' → logprob: -4.21876335144043
    5. 'és' → logprob: -5.09376335144043
    6. 'ues' → logprob: -5.09376335144043
    7. 'e' → logprob: -5.21876335144043
    8. 'u' → logprob: -5.34376335144043
    9. 'i' → logprob: -5.59376335144043
    10. 'ie' → logprob: -5.71876335144043

Token 121: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9763162136077881
    2. 'n' → logprob: -1.226316213607788
    3. 'A' → logprob: -2.101316213607788
    4. '```' → logprob: -2.976316213607788
    5. 'import' → logprob: -3.101316213607788
    6. '#' → logprob: -3.101316213607788
    7. 'i' → logprob: -3.601316213607788
    8. 'a' → logprob: -3.976316213607788
    9. 'for' → logprob: -5.226316452026367
    10. 'm' → logprob: -5.476316452026367

Token 122: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07497890293598175
    2. 'A' → logprob: -4.074978828430176
    3. 'def' → logprob: -4.074978828430176
    4. 'i' → logprob: -4.574978828430176
    5. 'for' → logprob: -4.699978828430176
    6. 'import' → logprob: -4.949978828430176
    7. '#' → logprob: -5.324978828430176
    8. '```' → logprob: -5.574978828430176
    9. 'a' → logprob: -7.074978828430176
    10. 'm' → logprob: -7.449978828430176

Token 123: ' ' (ID: 220)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6836320757865906
    2. 'def' → logprob: -1.6836321353912354
    3. 'n' → logprob: -2.0586321353912354
    4. 'import' → logprob: -2.6836321353912354
    5. '#' → logprob: -2.8086321353912354
    6. 'i' → logprob: -4.183631896972656
    7. '```' → logprob: -4.183631896972656
    8. 'a' → logprob: -4.433631896972656
    9. '\' → logprob: -5.058631896972656
    10. 'for' → logprob: -6.933631896972656

Token 124: '6' (ID: 21)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6438614130020142
    2. 'def' → logprob: -1.3938614130020142
    3. 'n' → logprob: -2.5188612937927246
    4. 'd' → logprob: -3.2688612937927246
    5. 'i' → logprob: -3.5188612937927246
    6. 'A' → logprob: -3.7688612937927246
    7. 'import' → logprob: -4.393861293792725
    8. 'a' → logprob: -4.893861293792725
    9. ' ' → logprob: -4.893861293792725
    10. '[' → logprob: -5.143861293792725

Token 125: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3538203835487366
    2. '#' → logprob: -1.2288203239440918
    3. ' #' → logprob: -5.603820323944092
    4. ' )' → logprob: -7.228820323944092
    5. 'def' → logprob: -7.853820323944092
    6. ')#' → logprob: -8.60382080078125
    7. ' def' → logprob: -9.85382080078125
    8. '```' → logprob: -10.22882080078125
    9. ' ' → logprob: -10.35382080078125
    10. ' ' → logprob: -10.60382080078125

Token 126: ' Aff' (ID: 13741)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.722378134727478
    2. ' Trou' → logprob: -1.722378134727478
    3. 'Afficher' → logprob: -1.847378134727478
    4. 'Trou' → logprob: -2.3473782539367676
    5. 'Lire' → logprob: -2.7223782539367676
    6. ' Aff' → logprob: -2.7223782539367676
    7. 'print' → logprob: -2.9723782539367676
    8. ' print' → logprob: -3.4723782539367676
    9. ' Lire' → logprob: -4.347378253936768
    10. 'Im' → logprob: -4.347378253936768

Token 127: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.00022308611369226128
    2. 'iner' → logprob: -9.000223159790039
    3. '#' → logprob: -9.625223159790039
    4. 'ich' → logprob: -11.250223159790039
    5. 'ic' → logprob: -11.625223159790039
    6. 'ichage' → logprob: -12.000223159790039
    7. 'cher' → logprob: -13.625223159790039
    8. 'i' → logprob: -14.000223159790039
    9. 'ichern' → logprob: -14.125223159790039
    10. 'ichier' → logprob: -14.250223159790039

Token 128: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.5940924286842346
    2. ' la' → logprob: -0.8440924286842346
    3. '(max' → logprob: -5.09409236907959
    4. 'le' → logprob: -5.21909236907959
    5. 'la' → logprob: -6.21909236907959
    6. ' max' → logprob: -6.59409236907959
    7. 'max' → logprob: -6.59409236907959
    8. '(' → logprob: -7.46909236907959
    9. ' ' → logprob: -7.59409236907959
    10. ' ' → logprob: -9.09409236907959

Token 129: ' résultat' (ID: 62556)
  Prédit: ' maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.3225782513618469
    2. ' résultat' → logprob: -2.447578191757202
    3. 'max' → logprob: -2.822578191757202
    4. 'maximum' → logprob: -2.947578191757202
    5. 'rés' → logprob: -3.197578191757202
    6. ' max' → logprob: -4.072578430175781
    7. 'result' → logprob: -4.447578430175781
    8. ' result' → logprob: -5.572578430175781
    9. ' resultat' → logprob: -6.447578430175781
    10. ' code' → logprob: -6.697578430175781

Token 130: ' ou' (ID: 2031)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1530369222164154
    2. '```' → logprob: -2.6530368328094482
    3. 'import' → logprob: -3.4030368328094482
    4. 'def' → logprob: -3.5280368328094482
    5. 'A' → logprob: -6.028037071228027
    6. '\n' → logprob: -6.403037071228027
    7. '\' → logprob: -6.653037071228027
    8. '#' → logprob: -6.778037071228027
    9. 'a' → logprob: -7.028037071228027
    10. 'i' → logprob: -7.778037071228027

Token 131: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -1.162570834159851
    2. ' -' → logprob: -1.412570834159851
    3. '-' → logprob: -1.912570834159851
    4. ' ' → logprob: -2.0375709533691406
    5. '"' → logprob: -2.1625709533691406
    6. '0' → logprob: -4.662570953369141
    7. ' None' → logprob: -4.787570953369141
    8. ' pas' → logprob: -5.037570953369141
    9. ' #' → logprob: -6.162570953369141
    10. ' aucune' → logprob: -6.287570953369141

Token 132: 'NA' (ID: 9555)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0308903455734253
    2. 'IMP' → logprob: -1.2808903455734253
    3. 'Impossible' → logprob: -2.155890464782715
    4. 'NO' → logprob: -2.405890464782715
    5. '0' → logprob: -3.405890464782715
    6. 'auc' → logprob: -3.655890464782715
    7. 'NONE' → logprob: -3.780890464782715
    8. 'im' → logprob: -3.905890464782715
    9. 'Pas' → logprob: -4.030890464782715
    10. 'A' → logprob: -4.030890464782715

Token 133: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03747934848070145
    2. 'L' → logprob: -3.7874794006347656
    3. '")' → logprob: -5.287479400634766
    4. 'N' → logprob: -6.412479400634766
    5. 'P' → logprob: -6.662479400634766
    6. 'T' → logprob: -7.162479400634766
    7. ')' → logprob: -7.287479400634766
    8. '">' → logprob: -7.287479400634766
    9. 'if' → logprob: -7.787479400634766
    10. '"""' → logprob: -7.912479400634766

Token 134: ' s' (ID: 265)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.27208980917930603
    2. '```' → logprob: -2.272089719772339
    3. 'import' → logprob: -3.022089719772339
    4. 'def' → logprob: -3.147089719772339
    5. 'A' → logprob: -3.897089719772339
    6. '
' → logprob: -5.022089958190918
    7. '#' → logprob: -5.272089958190918
    8. '\n' → logprob: -5.772089958190918
    9. 'a' → logprob: -5.897089958190918
    10. '\' → logprob: -6.522089958190918

Token 135: ''il' (ID: 14683)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2800832986831665
    2. ''il' → logprob: -1.5300832986831665
    3. ''i' → logprob: -3.780083179473877
    4. 'u' → logprob: -5.905083179473877
    5. 'ans' → logprob: -7.155083179473877
    6. ''' → logprob: -7.530083179473877
    7. 'ur' → logprob: -8.780083656311035
    8. ''ils' → logprob: -8.905083656311035
    9. 'ont' → logprob: -9.155083656311035
    10. ''u' → logprob: -9.530083656311035

Token 136: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.38769686222076416
    2. 'n' → logprob: -1.1376968622207642
    3. 'est' → logprob: -7.387696743011475
    4. 'n't' → logprob: -9.262697219848633
    5. '```' → logprob: -9.887697219848633
    6. '_n' → logprob: -11.637697219848633
    7. 'a' → logprob: -11.637697219848633
    8. 'ucune' → logprob: -11.762697219848633
    9. 'auc' → logprob: -12.012697219848633
    10. '#' → logprob: -12.262697219848633

Token 137: ''y' (ID: 27913)
  Prédit: ''ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ex' → logprob: -1.0745536088943481
    2. ''' → logprob: -1.5745536088943481
    3. ''y' → logprob: -1.5745536088943481
    4. ''est' → logprob: -2.1995534896850586
    5. ''a' → logprob: -2.8245534896850586
    6. 'est' → logprob: -3.6995534896850586
    7. 'é' → logprob: -4.074553489685059
    8. 'a' → logprob: -4.574553489685059
    9. ''é' → logprob: -4.699553489685059
    10. 'e' → logprob: -5.699553489685059

Token 138: ' en' (ID: 469)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3240351676940918
    2. ' a' → logprob: -1.4490351676940918
    3. 'pas' → logprob: -3.699035167694092
    4. ' pas' → logprob: -4.574035167694092
    5. ''a' → logprob: -5.074035167694092
    6. 'est' → logprob: -8.69903564453125
    7. 'ont' → logprob: -8.94903564453125
    8. 'avait' → logprob: -9.19903564453125
    9. 'ex' → logprob: -9.44903564453125
    10. ''ont' → logprob: -9.82403564453125

Token 139: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10144338011741638
    2. ' a' → logprob: -2.976443290710449
    3. ''a' → logprob: -3.101443290710449
    4. ' pas' → logprob: -9.22644329071045
    5. 'avait' → logprob: -9.22644329071045
    6. 'pas' → logprob: -9.35144329071045
    7. '#a' → logprob: -9.85144329071045
    8. ' ' → logprob: -10.35144329071045
    9. '	a' → logprob: -10.85144329071045
    10. 'ont' → logprob: -11.10144329071045

Token 140: ' pas' (ID: 2173)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2521145343780518
    2. '#' → logprob: -1.6271145343780518
    3. '

' → logprob: -1.7521145343780518
    4. '
' → logprob: -2.1271145343780518
    5. 'import' → logprob: -2.2521145343780518
    6. 'def' → logprob: -2.8771145343780518
    7. '\n' → logprob: -4.002114295959473
    8. '``' → logprob: -4.627114295959473
    9. '\' → logprob: -5.002114295959473
    10. 'n' → logprob: -5.502114295959473

Token 141: '.

' (ID: 364)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2856159210205078
    2. 'A' → logprob: -2.535615921020508
    3. 'import' → logprob: -2.785615921020508
    4. 'def' → logprob: -3.285615921020508
    5. '```' → logprob: -3.285615921020508
    6. '#' → logprob: -4.410615921020508
    7. '
' → logprob: -4.660615921020508
    8. '\n' → logprob: -5.660615921020508
    9. 'a' → logprob: -5.910615921020508
    10. '\' → logprob: -6.535615921020508

Token 142: 'import' (ID: 561)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13031096756458282
    2. 'import' → logprob: -2.5053110122680664
    3. 'def' → logprob: -3.3803110122680664
    4. '```' → logprob: -5.380311012268066
    5. '#' → logprob: -7.130311012268066
    6. 'A' → logprob: -7.255311012268066
    7. 'i' → logprob: -8.630311012268066
    8. 'a' → logprob: -9.380311012268066
    9. '\' → logprob: -10.755311012268066
    10. 'm' → logprob: -10.880311012268066

Token 143: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.00317783304490149
    2. 'sys' → logprob: -5.753177642822266
    3. '=sys' → logprob: -16.753177642822266
    4. ' numpy' → logprob: -17.253177642822266
    5. '	sys' → logprob: -17.753177642822266
    6. ' math' → logprob: -18.753177642822266
    7. '(sys' → logprob: -19.253177642822266
    8. 'numpy' → logprob: -20.128177642822266
    9. '_sys' → logprob: -20.128177642822266
    10. '.sys' → logprob: -20.878177642822266

Token 144: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22998617589473724
    2. '

' → logprob: -1.7299861907958984
    3. 'def' → logprob: -4.229986190795898
    4. 'input' → logprob: -5.104986190795898
    5. 'import' → logprob: -5.854986190795898
    6. 'data' → logprob: -6.104986190795898
    7. 'n' → logprob: -7.229986190795898
    8. '
 
' → logprob: -7.854986190795898
    9. '


' → logprob: -8.229986190795898
    10. '#' → logprob: -8.729986190795898

Token 145: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3157145380973816
    2. 'input' → logprob: -1.3157145977020264
    3. 'n' → logprob: -6.190714359283447
    4. '#' → logprob: -8.690714836120605
    5. 'data' → logprob: -8.940714836120605
    6. 'lines' → logprob: -9.565714836120605
    7. 'import' → logprob: -11.565714836120605
    8. ' input' → logprob: -11.690714836120605
    9. 'line' → logprob: -12.190714836120605
    10. 'read' → logprob: -13.315714836120605

Token 146: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3634762167930603
    2. ' read' → logprob: -1.488476276397705
    3. ' lire' → logprob: -2.863476276397705
    4. ' solve' → logprob: -4.113476276397705
    5. ' solution' → logprob: -6.113476276397705
    6. ' readline' → logprob: -6.863476276397705
    7. 'read' → logprob: -7.363476276397705
    8. 'main' → logprob: -8.113475799560547
    9. '_read' → logprob: -8.238475799560547
    10. ' parse' → logprob: -8.488475799560547

Token 147: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.014283504337072372
    2. '(' → logprob: -4.264283657073975
    3. ' ():' → logprob: -9.889283180236816
    4. '()' → logprob: -10.764283180236816
    5. '():
' → logprob: -10.889283180236816
    6. ':' → logprob: -10.889283180236816
    7. '(":' → logprob: -12.764283180236816
    8. '(args' → logprob: -13.389283180236816
    9. '(argv' → logprob: -13.389283180236816
    10. ' (' → logprob: -13.764283180236816

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021319972351193428
    2. 'n' → logprob: -4.89631986618042
    3. ' readline' → logprob: -5.14631986618042
    4. ' n' → logprob: -5.89631986618042
    5. ' lines' → logprob: -6.27131986618042
    6. ' input' → logprob: -6.52131986618042
    7. ' line' → logprob: -7.39631986618042
    8. 'input' → logprob: -8.521320343017578
    9. 'import' → logprob: -8.646320343017578
    10. ' import' → logprob: -8.771320343017578

Token 149: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13443735241889954
    2. 'input' (adapté à ' input') → logprob: -2.509437322616577
    3. '   ' → logprob: -3.884437322616577
    4. ' n' → logprob: -4.384437561035156
    5. ' input' → logprob: -4.759437561035156
    6. 'import' → logprob: -6.884437561035156
    7. '#' → logprob: -7.509437561035156
    8. 'N' → logprob: -8.134437561035156
    9. ' lines' → logprob: -8.134437561035156
    10. 'lines' → logprob: -8.259437561035156

Token 150: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.022650370374321938
    2. '_line' → logprob: -4.522650241851807
    3. '_data' → logprob: -5.272650241851807
    4. ' =' → logprob: -5.772650241851807
    5. '_lines' → logprob: -6.522650241851807
    6. '_' → logprob: -7.147650241851807
    7. '().' → logprob: -7.647650241851807
    8. '=' → logprob: -8.022650718688965
    9. '(' → logprob: -10.272650718688965
    10. 's' → logprob: -10.397650718688965

Token 151: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10023632645606995
    2. ' sys' → logprob: -2.350236415863037
    3. 'input' → logprob: -10.725235939025879
    4. '=sys' → logprob: -12.475235939025879
    5. '	sys' → logprob: -12.725235939025879
    6. '(sys' → logprob: -14.600235939025879
    7. ' input' → logprob: -15.100235939025879
    8. 'lambda' → logprob: -15.975235939025879
    9. 'stdin' → logprob: -19.225236892700195
    10. '_sys' → logprob: -19.600236892700195

Token 152: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -6.599403423024341e-05
    2. 'stdin' → logprob: -10.125065803527832
    3. '.' → logprob: -11.375065803527832
    4. '.stdout' → logprob: -12.250065803527832
    5. ' stdin' → logprob: -13.000065803527832
    6. '.__' → logprob: -13.125065803527832
    7. '.readline' → logprob: -13.750065803527832
    8. '.std' → logprob: -14.000065803527832
    9. '   ' → logprob: -14.250065803527832
    10. '```' → logprob: -14.875065803527832

Token 153: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004122092388570309
    2. 'read' → logprob: -5.504122257232666
    3. '.read' → logprob: -11.254121780395508
    4. 'buffer' → logprob: -12.004121780395508
    5. 'reader' → logprob: -12.129121780395508
    6. ' readline' → logprob: -12.129121780395508
    7. '.' → logprob: -12.254121780395508
    8. 'stdin' → logprob: -12.379121780395508
    9. '_read' → logprob: -13.504121780395508
    10. '.readlines' → logprob: -14.129121780395508

Token 154: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0335107184946537
    2. '()
' → logprob: -3.533510684967041
    3. '   ' → logprob: -5.658510684967041
    4. '().' → logprob: -8.9085111618042
    5. '()

' → logprob: -9.5335111618042
    6. '
' → logprob: -10.7835111618042
    7. '()\' → logprob: -11.6585111618042
    8. '    
' → logprob: -11.7835111618042
    9. '()
' → logprob: -12.4085111618042
    10. '(' → logprob: -12.6585111618042

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14479143917560577
    2. 'n' → logprob: -2.0197913646698
    3. ' n' → logprob: -6.269791603088379
    4. '    
' → logprob: -8.519791603088379
    5. '	n' → logprob: -11.894791603088379
    6. '    ' → logprob: -13.019791603088379
    7. 't' → logprob: -13.144791603088379
    8. '
' → logprob: -13.269791603088379
    9. '(n' → logprob: -13.394791603088379
    10. 'import' → logprob: -13.769791603088379

Token 156: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0663783922791481
    2. 'N' → logprob: -2.941378355026245
    3. 'H' → logprob: -5.191378593444824
    4. 'h' → logprob: -5.941378593444824
    5. 't' → logprob: -7.066378593444824
    6. '#' (adapté à ' #') → logprob: -7.316378593444824
    7. 'm' → logprob: -7.441378593444824
    8. 'T' → logprob: -8.066378593444824
    9. '   ' → logprob: -8.566378593444824
    10. 'M' → logprob: -8.566378593444824

Token 157: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.025945384055376053
    2. ' n' → logprob: -4.15094518661499
    3. 'N' → logprob: -5.52594518661499
    4. 'H' → logprob: -6.40094518661499
    5. 'h' → logprob: -6.52594518661499
    6. '#' → logprob: -6.65094518661499
    7. '   ' → logprob: -7.65094518661499
    8. 'r' → logprob: -8.525945663452148
    9. 'm' → logprob: -8.775945663452148
    10. ' H' → logprob: -9.400945663452148

Token 158: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003352855332195759
    2. '   ' → logprob: -6.003352642059326
    3. '(' → logprob: -7.753352642059326
    4. 'n' → logprob: -9.003353118896484
    5. '()
' → logprob: -9.503353118896484
    6. ' ()' → logprob: -10.128353118896484
    7. ' des' → logprob: -10.503353118896484
    8. 's' → logprob: -10.503353118896484
    9. '(n' → logprob: -10.753353118896484
    10. ' =' → logprob: -10.878353118896484

Token 159: ' dimensions' (ID: 23995)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9399354457855225
    2. 'dimensions' → logprob: -0.9399354457855225
    3. ' dimensions' → logprob: -2.4399354457855225
    4. ' n' → logprob: -2.6899354457855225
    5. 'prem' → logprob: -4.064935684204102
    6. 't' → logprob: -4.564935684204102
    7. 'l' → logprob: -4.939935684204102
    8. ' ' → logprob: -5.314935684204102
    9. ' t' → logprob: -5.314935684204102
    10. 'sizes' → logprob: -5.814935684204102

Token 160: ' H' (ID: 487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2996995747089386
    2. ' =' → logprob: -1.7996995449066162
    3. '()' → logprob: -3.424699544906616
    4. 'n' → logprob: -3.799699544906616
    5. ' n' → logprob: -3.924699544906616
    6. '(n' → logprob: -5.299699783325195
    7. ' ' → logprob: -5.924699783325195
    8. '(' → logprob: -6.049699783325195
    9. ' (' → logprob: -6.049699783325195
    10. '[' → logprob: -6.674699783325195

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018565983918961138
    2. ' ,' → logprob: -8.6251859664917
    3. ',M' → logprob: -13.3751859664917
    4. '_,' → logprob: -13.8751859664917
    5. 'et' → logprob: -15.1251859664917
    6. 's' → logprob: -15.3751859664917
    7. ',N' → logprob: -15.3751859664917
    8. ',W' → logprob: -15.3751859664917
    9. ',H' → logprob: -15.3751859664917
    10. '‌,' → logprob: -15.5001859664917

Token 162: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.577404260635376
    2. ' W' → logprob: -0.827404260635376
    3. 'L' → logprob: -6.702404022216797
    4. ' L' → logprob: -8.577404022216797
    5. ' ' → logprob: -10.827404022216797
    6. '   ' → logprob: -11.952404022216797
    7. '  ' → logprob: -12.577404022216797
    8. ',' → logprob: -12.827404022216797
    9. 'T' → logprob: -12.827404022216797
    10. 'M' → logprob: -12.952404022216797

Token 163: ' 
' (ID: 793)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12354929000139236
    2. '=' → logprob: -2.498549222946167
    3. ',' → logprob: -3.498549222946167
    4. '   ' → logprob: -5.623549461364746
    5. '(' → logprob: -9.623549461364746
    6. ' ' → logprob: -10.373549461364746
    7. '()' → logprob: -10.498549461364746
    8. ' ,' → logprob: -10.998549461364746
    9. '    ' → logprob: -12.123549461364746
    10. '  ' → logprob: -12.498549461364746

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3457144796848297
    2. ' =' → logprob: -1.7207144498825073
    3. ',' → logprob: -2.345714569091797
    4. '=' → logprob: -4.095714569091797
    5. ':' → logprob: -8.845714569091797
    6. ' H' → logprob: -8.845714569091797
    7. ',H' → logprob: -8.845714569091797
    8. 'H' → logprob: -9.220714569091797
    9. '(H' → logprob: -9.220714569091797
    10. ' ,' → logprob: -9.595714569091797

Token 165: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -0.009005343541502953
    2. ' H' → logprob: -4.759005546569824
    3. '   ' → logprob: -8.384005546569824
    4. 'h' → logprob: -8.759005546569824
    5. 'line' → logprob: -13.134005546569824
    6. ' line' → logprob: -13.759005546569824
    7. ' h' → logprob: -14.384005546569824
    8. '	H' → logprob: -14.759005546569824
    9. ' ' → logprob: -15.509005546569824
    10. '(H' → logprob: -15.634005546569824

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.607391408877447e-05
    2. ',W' → logprob: -10.875036239624023
    3. ' ,' → logprob: -11.000036239624023
    4. ',H' → logprob: -15.625036239624023
    5. ',
' → logprob: -16.875036239624023
    6. 'W' → logprob: -17.000036239624023
    7. ',int' → logprob: -17.125036239624023
    8. ',w' → logprob: -17.250036239624023
    9. '=' → logprob: -17.250036239624023
    10. '_,' → logprob: -17.500036239624023

Token 167: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.16032719612121582
    2. 'W' → logprob: -1.9103271961212158
    3. ' ' → logprob: -9.785326957702637
    4. '  ' → logprob: -10.285326957702637
    5. ' ' → logprob: -12.160326957702637
    6. '    ' → logprob: -12.910326957702637
    7. '   ' → logprob: -13.035326957702637
    8. '	W' → logprob: -13.910326957702637
    9. '=W' → logprob: -14.410326957702637
    10. ' ' → logprob: -15.160326957702637

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06993787735700607
    2. '=' → logprob: -2.6949379444122314
    3. '=input' → logprob: -14.194937705993652
    4. ' ' → logprob: -14.944937705993652
    5. '=int' → logprob: -15.569937705993652
    6. ')' → logprob: -16.06993865966797
    7. ',' → logprob: -16.44493865966797
    8. '   ' → logprob: -16.56993865966797
    9. '=line' → logprob: -16.94493865966797
    10. '    ' → logprob: -17.44493865966797

Token 169: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0024758970830589533
    2. 'map' → logprob: -6.002475738525391
    3. '	map' → logprob: -16.62747573852539
    4. ' ' → logprob: -17.12747573852539
    5. ' list' → logprob: -17.12747573852539
    6. '(map' → logprob: -18.62747573852539
    7. ' ' → logprob: -19.62747573852539
    8. '[' → logprob: -19.87747573852539
    9. ' [' → logprob: -20.25247573852539
    10. ' tuple' → logprob: -20.50247573852539

Token 170: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.021282510831952095
    2. '(' → logprob: -4.27128267288208
    3. '(str' → logprob: -5.02128267288208
    4. '(input' → logprob: -7.64628267288208
    5. '(list' → logprob: -11.146282196044922
    6. ' (' → logprob: -13.271282196044922
    7. '(lambda' → logprob: -13.646282196044922
    8. 'int' → logprob: -14.521282196044922
    9. '(
' → logprob: -15.021282196044922
    10. '(eval' → logprob: -15.021282196044922

Token 171: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09292039275169373
    2. 'input' → logprob: -2.5929203033447266
    3. ',input' → logprob: -5.342920303344727
    4. '(' → logprob: -5.592920303344727
    5. ')' → logprob: -6.092920303344727
    6. ',' → logprob: -6.092920303344727
    7. '(sys' → logprob: -7.342920303344727
    8. ' input' → logprob: -8.842920303344727
    9. '=input' → logprob: -9.967920303344727
    10. 'sys' → logprob: -10.342920303344727

Token 172: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04858794063329697
    2. ' input' → logprob: -3.0485880374908447
    3. 'sys' → logprob: -14.923587799072266
    4. ' sys' → logprob: -15.298587799072266
    5. '(input' → logprob: -18.923587799072266
    6. '=input' → logprob: -19.298587799072266
    7. ' ' → logprob: -19.298587799072266
    8. '	input' → logprob: -19.423587799072266
    9. '<input' → logprob: -20.423587799072266
    10. ',input' → logprob: -21.173587799072266

Token 173: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00023107275774236768
    2. '()' → logprob: -8.37523078918457
    3. ' ().' → logprob: -15.25023078918457
    4. '())' → logprob: -16.62523078918457
    5. '(' → logprob: -17.12523078918457
    6. '.readline' → logprob: -17.37523078918457
    7. '()
' → logprob: -18.12523078918457
    8. '.strip' → logprob: -18.25023078918457
    9. '().'' → logprob: -19.12523078918457
    10. ')' → logprob: -19.50023078918457

Token 174: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.31570255756378174
    2. 'strip' → logprob: -1.3157025575637817
    3. 'rstrip' → logprob: -6.065702438354492
    4. 'read' → logprob: -9.065702438354492
    5. ' strip' → logprob: -14.565702438354492
    6. '().' → logprob: -14.940702438354492
    7. ' split' → logprob: -15.690702438354492
    8. '(split' → logprob: -16.815702438354492
    9. 'rs' → logprob: -17.440702438354492
    10. '.readline' → logprob: -17.690702438354492

Token 175: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009581250138580799
    2. '()' → logprob: -5.134581089019775
    3. ')' → logprob: -5.634581089019775
    4. '(' → logprob: -10.009581565856934
    5. '())
' → logprob: -11.634581565856934
    6. '()))' → logprob: -12.009581565856934
    7. '(),' → logprob: -12.634581565856934
    8. ' ())' → logprob: -12.759581565856934
    9. '('' → logprob: -12.884581565856934
    10. '()]' → logprob: -13.884581565856934

Token 176: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13386912643909454
    2. '
' → logprob: -2.383869171142578
    3. '    
' → logprob: -3.508869171142578
    4. '  
' → logprob: -7.133869171142578
    5. '#' → logprob: -7.258869171142578
    6. '   
' → logprob: -7.383869171142578
    7. '  ' → logprob: -8.008869171142578
    8. ' 
' → logprob: -8.133869171142578
    9. '

' → logprob: -8.508869171142578
    10. 'A' → logprob: -9.883869171142578

Token 177: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5466282367706299
    2. '   ' → logprob: -1.0466282367706299
    3. 'A' → logprob: -3.04662823677063
    4. ' #' → logprob: -3.92162823677063
    5. ' A' → logprob: -6.296627998352051
    6. 'H' → logprob: -8.29662799835205
    7. 'n' → logprob: -8.79662799835205
    8. ' ' → logprob: -9.04662799835205
    9. '    
' → logprob: -9.79662799835205
    10. '  ' → logprob: -10.29662799835205

Token 178: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.20224639773368835
    2. '#' (adapté à ' #') → logprob: -1.7022464275360107
    3. 'def' → logprob: -8.20224666595459
    4. 'H' → logprob: -8.32724666595459
    5. 'n' → logprob: -8.82724666595459
    6. 'N' → logprob: -10.32724666595459
    7. 'M' → logprob: -10.70224666595459
    8. 'K' → logprob: -11.07724666595459
    9. ' A' → logprob: -11.70224666595459
    10. 'D' → logprob: -11.70224666595459

Token 179: ' Lecture' (ID: 106534)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.14048483967781067
    2. 'A' → logprob: -2.1404848098754883
    3. 'H' → logprob: -5.015484809875488
    4. 'n' → logprob: -5.890484809875488
    5. 'def' → logprob: -6.765484809875488
    6. 'HA' → logprob: -7.140484809875488
    7. ' #' → logprob: -7.265484809875488
    8. ' A' → logprob: -8.015484809875488
    9. 'N' → logprob: -9.015484809875488
    10. 'Reading' → logprob: -9.015484809875488

Token 180: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.08493901044130325
    2. '   ' → logprob: -2.8349390029907227
    3. 'des' → logprob: -3.9599390029907227
    4. '()' → logprob: -6.084939002990723
    5. 'A' → logprob: -7.459939002990723
    6. 's' → logprob: -8.709939002990723
    7. '(A' → logprob: -8.959939002990723
    8. ' de' → logprob: -9.584939002990723
    9. ' of' → logprob: -9.709939002990723
    10. '#' → logprob: -9.959939002990723

Token 181: ' la' (ID: 557)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.511188268661499
    2. 'A' → logprob: -1.011188268661499
    3. ' B' → logprob: -4.386188507080078
    4. ' [' → logprob: -4.886188507080078
    5. 'B' → logprob: -5.511188507080078
    6. '[A' → logprob: -5.636188507080078
    7. '[' → logprob: -5.886188507080078
    8. '[]' → logprob: -6.011188507080078
    9. ' la' → logprob: -6.261188507080078
    10. ' ' → logprob: -7.761188507080078

Token 182: ' matr' (ID: 25095)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2898331880569458
    2. ' matrices' → logprob: -2.4148330688476562
    3. 'mat' → logprob: -2.5398330688476562
    4. ' A' → logprob: -3.4148330688476562
    5. ' matr' → logprob: -3.6648330688476562
    6. '#' → logprob: -5.289833068847656
    7. 'matrix' → logprob: -5.539833068847656
    8. 'B' → logprob: -5.914833068847656
    9. 's' → logprob: -6.289833068847656
    10. 'def' → logprob: -6.789833068847656

Token 183: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.4846648573875427
    2. 'ices' → logprob: -1.1096649169921875
    3. 'rices' → logprob: -3.2346649169921875
    4. 'rice' → logprob: -4.2346649169921875
    5. '#' → logprob: -8.609664916992188
    6. '```' → logprob: -9.359664916992188
    7. 'ix' → logprob: -9.484664916992188
    8. '[' → logprob: -10.109664916992188
    9. '   ' → logprob: -10.859664916992188
    10. 'r' → logprob: -10.984664916992188

Token 184: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.11311734467744827
    2. ' A' → logprob: -2.2381174564361572
    3. 'B' → logprob: -8.363117218017578
    4. ' B' → logprob: -10.113117218017578
    5. 's' → logprob: -11.988117218017578
    6. '   ' → logprob: -12.238117218017578
    7. 'a' → logprob: -12.488117218017578
    8. ' ' → logprob: -13.738117218017578
    9. '_A' → logprob: -13.863117218017578
    10. 'for' → logprob: -13.863117218017578

Token 185: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1696900576353073
    2. 'A' → logprob: -1.9196900129318237
    3. '
' → logprob: -5.044690132141113
    4. ' =' → logprob: -7.044690132141113
    5. ' A' → logprob: -7.169690132141113
    6. '    
' → logprob: -7.294690132141113
    7. '[' → logprob: -8.794690132141113
    8. '=' → logprob: -9.169690132141113
    9. '[
' → logprob: -9.294690132141113
    10. 'a' → logprob: -9.419690132141113

Token 186: 'H' (ID: 39)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04578197002410889
    2. 'H' → logprob: -4.045782089233398
    3. '[int' → logprob: -4.170782089233398
    4. ')' → logprob: -5.170782089233398
    5. ' [' → logprob: -6.420782089233398
    6. '[i' → logprob: -6.670782089233398
    7. '[A' → logprob: -6.670782089233398
    8. '[n' → logprob: -7.920782089233398
    9. ' H' → logprob: -8.045782089233398
    10. '[h' → logprob: -8.170782089233398

Token 187: ' x' (ID: 1215)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6866379976272583
    2. ',' → logprob: -0.9366379976272583
    3. ' lines' → logprob: -2.6866378784179688
    4. ' ,' → logprob: -4.811637878417969
    5. ' x' → logprob: -5.061637878417969
    6. ' )' → logprob: -5.311637878417969
    7. ' rows' → logprob: -6.061637878417969
    8. ' lignes' → logprob: -6.186637878417969
    9. 'x' → logprob: -6.436637878417969
    10. 'times' → logprob: -6.686637878417969

Token 188: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.20152287185192108
    2. ' W' → logprob: -1.7015228271484375
    3. ' ' → logprob: -9.201522827148438
    4. '   ' → logprob: -12.201522827148438
    5. '  ' → logprob: -13.201522827148438
    6. ')' → logprob: -14.201522827148438
    7. '	W' → logprob: -14.451522827148438
    8. ' ' → logprob: -16.014022827148438
    9. '    ' → logprob: -16.139022827148438
    10. 'H' → logprob: -16.576522827148438

Token 189: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030781254172325134
    2. ')
' → logprob: -6.128077983856201
    3. ' )' → logprob: -7.128077983856201
    4. ')
' → logprob: -10.50307846069336
    5. '[' → logprob: -10.87807846069336
    6. ')

' → logprob: -11.87807846069336
    7. '):' → logprob: -11.87807846069336
    8. ' )
' → logprob: -12.00307846069336
    9. ']' → logprob: -12.87807846069336
    10. '`)' → logprob: -13.12807846069336

Token 190: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01839679665863514
    2. 'A' → logprob: -4.018396854400635
    3. '    
' → logprob: -9.018396377563477
    4. '
' → logprob: -9.143396377563477
    5. ' A' → logprob: -11.143396377563477
    6. '  ' → logprob: -13.893396377563477
    7. 'a' → logprob: -14.143396377563477
    8. '	A' → logprob: -14.518396377563477
    9. 'for' → logprob: -14.768396377563477
    10. '    ' → logprob: -15.143396377563477

Token 191: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0953204557299614
    2. ' ent' → logprob: -2.470320463180542
    3. 'int' → logprob: -5.845320224761963
    4. 'inte' → logprob: -6.595320224761963
    5. 'ints' → logprob: -6.970320224761963
    6. ' integers' → logprob: -7.345320224761963
    7. '_ent' → logprob: -8.095320701599121
    8. ' nombres' → logprob: -10.095320701599121
    9. ' int' → logprob: -10.345320701599121
    10. 'ents' → logprob: -10.595320701599121

Token 192: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.038224056363105774
    2. 't' → logprob: -3.5382239818573
    3. 'ières' → logprob: -4.913224220275879
    4. 'i' → logprob: -8.038224220275879
    5. 'ires' → logprob: -8.288224220275879
    6. 'ti' → logprob: -8.663224220275879
    7. 'r' → logprob: -9.788224220275879
    8. 'tir' → logprob: -9.913224220275879
    9. 'ries' → logprob: -10.163224220275879
    10. 'tries' → logprob: -10.288224220275879

Token 193: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016080588102340698
    2. 'A' → logprob: -6.501607894897461
    3. '    
' → logprob: -9.751607894897461
    4. '
' → logprob: -10.626607894897461
    5. ' A' → logprob: -10.876607894897461
    6. '  ' → logprob: -13.751607894897461
    7. '    ' → logprob: -14.626607894897461
    8. 'a' → logprob: -14.751607894897461
    9. ':' → logprob: -14.876607894897461
    10. 'for' → logprob: -15.126607894897461

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018422940047457814
    2. 'A' → logprob: -8.625184059143066
    3. ' A' → logprob: -13.000184059143066
    4. '    
' → logprob: -13.125184059143066
    5. '
' → logprob: -15.875184059143066
    6. '    ' → logprob: -17.125185012817383
    7. 'a' → logprob: -17.125185012817383
    8. '  ' → logprob: -17.250185012817383
    9. '       ' → logprob: -17.375185012817383
    10. ':' → logprob: -17.625185012817383

Token 195: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.001787513610906899
    2. ' A' → logprob: -6.3767876625061035
    3. '   ' → logprob: -9.376787185668945
    4. '	A' → logprob: -15.001787185668945
    5. ' ' → logprob: -15.751787185668945
    6. 'a' → logprob: -16.251787185668945
    7. '    
' → logprob: -17.376787185668945
    8. '  ' → logprob: -18.376787185668945
    9. '
' → logprob: -18.626787185668945
    10. '_A' → logprob: -19.126787185668945

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16072386503219604
    2. '=' → logprob: -1.9107239246368408
    3. '=[]' → logprob: -8.410723686218262
    4. ' ' → logprob: -9.035723686218262
    5. '=[]
' → logprob: -9.285723686218262
    6. '=[' → logprob: -11.160723686218262
    7. '[]' → logprob: -11.285723686218262
    8. ' =[' → logprob: -11.410723686218262
    9. '[' → logprob: -11.535723686218262
    10. '   ' → logprob: -12.410723686218262

Token 197: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003966317046433687
    2. ' [' → logprob: -6.003966331481934
    3. '[int' → logprob: -6.753966331481934
    4. '[A' → logprob: -9.003966331481934
    5. '[array' → logprob: -10.503966331481934
    6. '[list' → logprob: -10.753966331481934
    7. '[str' → logprob: -10.878966331481934
    8. '[input' → logprob: -10.878966331481934
    9. '[List' → logprob: -11.128966331481934
    10. '[class' → logprob: -11.378966331481934

Token 198: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -7.493430894101039e-05
    2. ' list' → logprob: -9.500075340270996
    3. '   ' → logprob: -19.00007438659668
    4. '	list' → logprob: -19.00007438659668
    5. '=list' → logprob: -22.25007438659668
    6. '[list' → logprob: -23.25007438659668
    7. ' ' → logprob: -23.50007438659668
    8. ':list' → logprob: -23.50007438659668
    9. '  ' → logprob: -23.87507438659668
    10. 'tuple' → logprob: -23.87507438659668

Token 199: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.125001907348633
    3. 'map' → logprob: -15.250001907348633
    4. '	map' → logprob: -16.875001907348633
    5. '()' → logprob: -17.625001907348633
    6. '(int' → logprob: -17.750001907348633
    7. ' map' → logprob: -18.375001907348633
    8. '_map' → logprob: -18.875001907348633
    9. '.map' → logprob: -19.125001907348633
    10. ',map' → logprob: -19.375001907348633

Token 200: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.465036105713807e-06
    2. '(' → logprob: -12.750007629394531
    3. 'int' → logprob: -13.125007629394531
    4. ' int' → logprob: -14.375007629394531
    5. ']int' → logprob: -14.500007629394531
    6. '(
' → logprob: -14.875007629394531
    7. '<int' → logprob: -15.250007629394531
    8. '=int' → logprob: -15.250007629394531
    9. '[int' → logprob: -15.250007629394531
    10. ',int' → logprob: -15.250007629394531

Token 201: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.19340519607067108
    2. '(input' → logprob: -2.3184051513671875
    3. ',' → logprob: -2.5684051513671875
    4. 'input' → logprob: -7.4434051513671875
    5. '(' → logprob: -9.443405151367188
    6. ' ,' → logprob: -10.068405151367188
    7. ' input' → logprob: -10.443405151367188
    8. '=input' → logprob: -11.193405151367188
    9. ' (' → logprob: -11.943405151367188
    10. ')' → logprob: -13.568405151367188

Token 202: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006715370807796717
    2. ' input' → logprob: -5.006715297698975
    3. '(input' → logprob: -18.881715774536133
    4. 'sys' → logprob: -19.381715774536133
    5. '	input' → logprob: -20.006715774536133
    6. '=input' → logprob: -20.756715774536133
    7. ',input' → logprob: -20.881715774536133
    8. ' ' → logprob: -21.006715774536133
    9. '_input' → logprob: -21.381715774536133
    10. ' sys' → logprob: -21.631715774536133

Token 203: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0280383548888494e-06
    2. '()' → logprob: -14.125000953674316
    3. ' ().' → logprob: -15.875000953674316
    4. '.readline' → logprob: -16.250001907348633
    5. '(' → logprob: -18.250001907348633
    6. '()
' → logprob: -18.625001907348633
    7. '.' → logprob: -20.500001907348633
    8. ' .' → logprob: -20.500001907348633
    9. '.split' → logprob: -20.875001907348633
    10. '   ' → logprob: -21.000001907348633

Token 204: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004416347946971655
    2. 'strip' → logprob: -5.504416465759277
    3. 'rstrip' → logprob: -8.004416465759277
    4. 'read' → logprob: -12.629416465759277
    5. '(split' → logprob: -14.754416465759277
    6. ' split' → logprob: -15.379416465759277
    7. '_split' → logprob: -18.25441551208496
    8. 'spl' → logprob: -19.00441551208496
    9. ' strip' → logprob: -19.50441551208496
    10. ')' → logprob: -19.87941551208496

Token 205: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0045433384366333485
    2. '))' → logprob: -5.629543304443359
    3. '()' → logprob: -7.004543304443359
    4. '(' → logprob: -11.12954330444336
    5. '())' → logprob: -11.62954330444336
    6. '()))
' → logprob: -12.37954330444336
    7. '())))' → logprob: -12.75454330444336
    8. '()));' → logprob: -13.12954330444336
    9. '())).' → logprob: -14.75454330444336
    10. '().' → logprob: -14.87954330444336

Token 206: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12930631637573242
    2. '())' → logprob: -2.5043063163757324
    3. ')' → logprob: -3.2543063163757324
    4. '(' → logprob: -7.379306316375732
    5. 'for' → logprob: -8.87930679321289
    6. '()]' → logprob: -9.25430679321289
    7. ' for' → logprob: -9.87930679321289
    8. ' ()' → logprob: -11.12930679321289
    9. ' )' → logprob: -11.37930679321289
    10. ')]' → logprob: -11.87930679321289

Token 207: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06053699553012848
    2. ' range' → logprob: -3.685537099838257
    3. '_range' → logprob: -3.810537099838257
    4. 'range' → logprob: -4.560536861419678
    5. ' _' → logprob: -7.060536861419678
    6. '(range' → logprob: -8.935537338256836
    7. ' in' → logprob: -10.435537338256836
    8. '_in' → logprob: -10.935537338256836
    9. '_i' → logprob: -12.060537338256836
    10. '	range' → logprob: -12.560537338256836

Token 208: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.3663626305060461e-05
    2. '(range' → logprob: -11.75001335144043
    3. ' range' → logprob: -12.12501335144043
    4. 'in' → logprob: -15.75001335144043
    5. '   ' → logprob: -16.25001335144043
    6. 'ange' → logprob: -16.37501335144043
    7. '	range' → logprob: -16.62501335144043
    8. '  ' → logprob: -17.87501335144043
    9. '```' → logprob: -18.50001335144043
    10. ' ' → logprob: -18.50001335144043

Token 209: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.836499985889532e-05
    2. ' range' → logprob: -9.7500581741333
    3. '	range' → logprob: -19.625059127807617
    4. '(range' → logprob: -19.750059127807617
    5. '   ' → logprob: -21.625059127807617
    6. 'rang' → logprob: -21.750059127807617
    7. ' ' → logprob: -22.000059127807617
    8. 'H' → logprob: -22.375059127807617
    9. '  ' → logprob: -22.500059127807617
    10. '.range' → logprob: -23.375059127807617

Token 210: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -9.729906196298543e-06
    2. '(' → logprob: -12.000009536743164
    3. 'H' → logprob: -12.625009536743164
    4. ' (' → logprob: -15.750009536743164
    5. ' H' → logprob: -16.750009536743164
    6. '(range' → logprob: -18.000009536743164
    7. 'range' → logprob: -18.375009536743164
    8. '(
' → logprob: -19.000009536743164
    9. ' range' → logprob: -19.125009536743164
    10. '	H' → logprob: -19.250009536743164

Token 211: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.584861744660884e-05
    2. ')' → logprob: -10.250045776367188
    3. ']' → logprob: -11.500045776367188
    4. ')],' → logprob: -16.375045776367188
    5. '')]' → logprob: -17.125045776367188
    6. ' )' → logprob: -17.375045776367188
    7. '])]' → logprob: -17.750045776367188
    8. ')])' → logprob: -17.875045776367188
    9. ')].' → logprob: -18.000045776367188
    10. '   ' → logprob: -18.125045776367188

Token 212: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020744383335113525
    2. '    
' → logprob: -4.645744323730469
    3. 'B' → logprob: -5.270744323730469
    4. '#' → logprob: -5.270744323730469
    5. '
' → logprob: -7.395744323730469
    6. '```' → logprob: -11.270744323730469
    7. '  
' → logprob: -12.145744323730469
    8. '        
' → logprob: -12.645744323730469
    9. ' B' → logprob: -12.895744323730469
    10. '   
' → logprob: -13.020744323730469

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38899222016334534
    2. '#' → logprob: -1.138992190361023
    3. 'B' → logprob: -6.2639923095703125
    4. '    
' → logprob: -8.763992309570312
    5. ' #' → logprob: -10.138992309570312
    6. 'C' → logprob: -11.888992309570312
    7. ' ' → logprob: -12.388992309570312
    8. '
' → logprob: -12.763992309570312
    9. ' B' → logprob: -13.763992309570312
    10. '  ' → logprob: -13.763992309570312

Token 214: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3068518042564392
    2. '   ' → logprob: -1.556851863861084
    3. 'B' → logprob: -2.931851863861084
    4. '    
' → logprob: -9.431851387023926
    5. ' #' → logprob: -10.306851387023926
    6. '```' → logprob: -11.931851387023926
    7. ' B' → logprob: -12.056851387023926
    8. ' ' → logprob: -12.181851387023926
    9. '  ' → logprob: -13.431851387023926
    10. '       ' → logprob: -13.806851387023926

Token 215: ' Lecture' (ID: 106534)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12107723951339722
    2. 'B' → logprob: -2.246077299118042
    3. '   ' → logprob: -5.246077060699463
    4. ' #' → logprob: -6.746077060699463
    5. 'Lecture' → logprob: -6.871077060699463
    6. ' B' → logprob: -7.996077060699463
    7. 'Lire' → logprob: -9.121077537536621
    8. ' ' → logprob: -9.246077537536621
    9. ' Lecture' → logprob: -9.871077537536621
    10. 'C' → logprob: -9.871077537536621

Token 216: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25792524218559265
    2. 'des' → logprob: -2.132925271987915
    3. ' des' → logprob: -2.382925271987915
    4. ' de' → logprob: -4.882925033569336
    5. 'de' → logprob: -5.257925033569336
    6. '#' → logprob: -6.632925033569336
    7. '  ' → logprob: -6.882925033569336
    8. '_des' → logprob: -8.382925033569336
    9. 'of' → logprob: -8.507925033569336
    10. '(' → logprob: -8.632925033569336

Token 217: ' la' (ID: 557)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.470630019903183
    2. ' la' → logprob: -2.345629930496216
    3. 'C' → logprob: -2.470629930496216
    4. ' B' → logprob: -2.845629930496216
    5. '#' → logprob: -3.220629930496216
    6. 'la' → logprob: -3.470629930496216
    7. ' ' → logprob: -4.095630168914795
    8. 'l' → logprob: -4.845630168914795
    9. '
' → logprob: -4.970630168914795
    10. 'the' → logprob: -5.095630168914795

Token 218: ' matr' (ID: 25095)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.46600353717803955
    2. 'mat' → logprob: -1.2160035371780396
    3. ' matr' → logprob: -3.09100341796875
    4. ' B' → logprob: -3.96600341796875
    5. '#' → logprob: -5.84100341796875
    6. 'mot' → logprob: -5.96600341796875
    7. 'matrix' → logprob: -6.09100341796875
    8. 'W' → logprob: -6.46600341796875
    9. '   ' → logprob: -8.09100341796875
    10. ' ' → logprob: -8.34100341796875

Token 219: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.000504658033605665
    2. 'atrice' → logprob: -8.500504493713379
    3. '#' → logprob: -9.250504493713379
    4. 'ix' → logprob: -10.125504493713379
    5. 'rice' → logprob: -10.375504493713379
    6. 'ique' → logprob: -10.625504493713379
    7. '   ' → logprob: -10.750504493713379
    8. 'ices' → logprob: -11.500504493713379
    9. 'ixe' → logprob: -11.625504493713379
    10. '[' → logprob: -11.875504493713379

Token 220: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.10020806640386581
    2. ' B' → logprob: -2.350208044052124
    3. ' ' → logprob: -14.350208282470703
    4. '   ' → logprob: -14.600208282470703
    5. 's' → logprob: -16.225208282470703
    6. ' =' → logprob: -16.975208282470703
    7. 'b' → logprob: -16.975208282470703
    8. '  ' → logprob: -17.100208282470703
    9. '(B' → logprob: -17.100208282470703
    10. 'for' → logprob: -17.350208282470703

Token 221: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030291765928268433
    2. '=' → logprob: -3.530291795730591
    3. '   ' → logprob: -7.530291557312012
    4. 'B' → logprob: -13.280291557312012
    5. '[' → logprob: -14.280291557312012
    6. ' ' → logprob: -14.530291557312012
    7. '=[' → logprob: -15.030291557312012
    8. '#' → logprob: -15.030291557312012
    9. ' (' → logprob: -15.030291557312012
    10. '=B' → logprob: -15.655291557312012

Token 222: 'H' (ID: 39)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.42632418870925903
    2. 'H' → logprob: -1.4263241291046143
    3. ' [' → logprob: -2.8013241291046143
    4. '[list' → logprob: -4.426324367523193
    5. 'list' → logprob: -4.551324367523193
    6. ' H' → logprob: -4.551324367523193
    7. '[int' → logprob: -4.801324367523193
    8. ')' → logprob: -7.176324367523193
    9. '[i' → logprob: -7.176324367523193
    10. '[line' → logprob: -7.301324367523193

Token 223: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.03879036009311676
    2. ',' → logprob: -3.538790464401245
    3. 'x' → logprob: -4.788790225982666
    4. ' ' → logprob: -8.413790702819824
    5. ')' → logprob: -8.538790702819824
    6. ' ,' → logprob: -8.663790702819824
    7. '×' → logprob: -10.288790702819824
    8. '*' → logprob: -10.913790702819824
    9. ' ×' → logprob: -12.038790702819824
    10. '   ' → logprob: -12.413790702819824

Token 224: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.07006647437810898
    2. ' W' → logprob: -2.695066452026367
    3. 'int' → logprob: -9.445066452026367
    4. 'input' → logprob: -10.945066452026367
    5. ' ' → logprob: -11.445066452026367
    6. ' int' → logprob: -11.945066452026367
    7. ')' → logprob: -12.195066452026367
    8. '   ' → logprob: -13.070066452026367
    9. ' input' → logprob: -13.320066452026367
    10. '  ' → logprob: -13.570066452026367

Token 225: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.130576806142926e-05
    2. ' )' → logprob: -10.750031471252441
    3. ']' → logprob: -11.750031471252441
    4. ')
' → logprob: -14.250031471252441
    5. '=' → logprob: -15.000031471252441
    6. ' =' → logprob: -15.500031471252441
    7. ')]' → logprob: -15.500031471252441
    8. '   ' → logprob: -15.625031471252441
    9. '[' → logprob: -15.875031471252441
    10. ',' → logprob: -16.750030517578125

Token 226: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4792161285877228
    2. '   ' → logprob: -1.6042160987854004
    3. '=' → logprob: -1.7292160987854004
    4. 'B' → logprob: -6.2292160987854
    5. ' B' → logprob: -9.229216575622559
    6. '=B' → logprob: -9.729216575622559
    7. ' ' → logprob: -10.229216575622559
    8. '  ' → logprob: -10.729216575622559
    9. 'A' → logprob: -10.979216575622559
    10. ')' → logprob: -10.979216575622559

Token 227: ' couleurs' (ID: 54001)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3841775357723236
    2. 'str' → logprob: -1.634177565574646
    3. 'list' → logprob: -2.1341774463653564
    4. 'sys' → logprob: -5.8841776847839355
    5. ' input' → logprob: -6.6341776847839355
    6. 'int' → logprob: -7.1341776847839355
    7. ' str' → logprob: -8.259177207946777
    8. ' list' → logprob: -8.759177207946777
    9. '[str' → logprob: -8.884177207946777
    10. '[input' → logprob: -9.884177207946777

Token 228: ' (' (ID: 350)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3546583652496338
    2. '   ' → logprob: -1.2296583652496338
    3. ' B' → logprob: -5.104658126831055
    4. ' =' → logprob: -9.854658126831055
    5. ' ' → logprob: -10.104658126831055
    6. '=' → logprob: -11.479658126831055
    7. ':' → logprob: -12.354658126831055
    8. 'b' → logprob: -12.604658126831055
    9. '	B' → logprob: -12.729658126831055
    10. '  ' → logprob: -12.854658126831055

Token 229: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04401484876871109
    2. 'input' → logprob: -4.294014930725098
    3. '[int' → logprob: -4.294014930725098
    4. '[input' → logprob: -5.544014930725098
    5. 'for' → logprob: -5.794014930725098
    6. '[str' → logprob: -6.294014930725098
    7. 'int' → logprob: -6.919014930725098
    8. '   ' → logprob: -7.044014930725098
    9. ' input' → logprob: -7.294014930725098
    10. '[i' → logprob: -7.419014930725098

Token 230: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038648273795843124
    2. ' ,' → logprob: -3.9136483669281006
    3. ')' → logprob: -4.6636481285095215
    4. '-' → logprob: -6.0386481285095215
    5. ' or' → logprob: -6.5386481285095215
    6. ' )' → logprob: -7.4136481285095215
    7. ' for' → logprob: -7.5386481285095215
    8. ' <=' → logprob: -7.9136481285095215
    9. 'for' → logprob: -8.03864860534668
    10. '   ' → logprob: -8.16364860534668

Token 231: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026205103495158255
    2. ' ' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.500262260437012
    4. '255' → logprob: -15.500262260437012
    5. '  ' → logprob: -17.375261306762695
    6. ' ' → logprob: -17.625261306762695
    7. '
' → logprob: -17.750261306762695
    8. ')' → logprob: -18.375261306762695
    9. '2' → logprob: -18.562761306762695
    10. '0' → logprob: -19.000261306762695

Token 232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004050514253322035
    2. ' ' → logprob: -7.8754048347473145
    3. '255' → logprob: -10.625405311584473
    4. '   ' → logprob: -16.250404357910156
    5. '9' → logprob: -16.625404357910156
    6. '2' → logprob: -16.625404357910156
    7. '0' → logprob: -16.875404357910156
    8. '
' → logprob: -17.312904357910156
    9. '3' → logprob: -17.437904357910156
    10. '  ' → logprob: -17.437904357910156

Token 233: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004521222144830972
    2. ')
' → logprob: -8.125452041625977
    3. ' )' → logprob: -9.375452041625977
    4. '   ' → logprob: -10.125452041625977
    5. ')]' → logprob: -10.750452041625977
    6. '):' → logprob: -13.125452041625977
    7. ']' → logprob: -13.375452041625977
    8. 'for' → logprob: -13.750452041625977
    9. '))' → logprob: -13.750452041625977
    10. '])' → logprob: -14.000452041625977

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16042649745941162
    2. 'B' → logprob: -1.9104264974594116
    3. ' B' → logprob: -8.660426139831543
    4. '    
' → logprob: -11.035426139831543
    5. ' ' → logprob: -11.785426139831543
    6. '  ' → logprob: -13.035426139831543
    7. '
' → logprob: -13.910426139831543
    8. '	B' → logprob: -14.035426139831543
    9. 'b' → logprob: -14.785426139831543
    10. '    ' → logprob: -14.910426139831543

Token 235: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.0009306333377026021
    2. ' B' → logprob: -7.0009307861328125
    3. '   ' → logprob: -10.875930786132812
    4. 'b' → logprob: -15.625930786132812
    5. ' ' → logprob: -17.000930786132812
    6. '	B' → logprob: -17.000930786132812
    7. '    
' → logprob: -18.875930786132812
    8. '```' → logprob: -19.500930786132812
    9. '
' → logprob: -19.750930786132812
    10. '#' → logprob: -20.250930786132812

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061968810856342316
    2. '=' → logprob: -2.8119688034057617
    3. ' ' → logprob: -14.686968803405762
    4. ' =[' → logprob: -14.936968803405762
    5. '=[' → logprob: -15.936968803405762
    6. '   ' → logprob: -16.561969757080078
    7. ')' → logprob: -16.811969757080078
    8. '[' → logprob: -17.061969757080078
    9. ' =
' → logprob: -17.561969757080078
    10. '=[]' → logprob: -17.686969757080078

Token 237: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31627172231674194
    2. ' [' → logprob: -1.5662717819213867
    3. '[list' → logprob: -2.8162717819213867
    4. '[List' → logprob: -6.066271781921387
    5. '[line' → logprob: -10.191271781921387
    6. '[int' → logprob: -10.191271781921387
    7. '[b' → logprob: -10.816271781921387
    8. '[class' → logprob: -11.316271781921387
    9. '[l' → logprob: -11.941271781921387
    10. '[layer' → logprob: -12.066271781921387

Token 238: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.15310683415737e-05
    2. ' list' → logprob: -10.750021934509277
    3. '[list' → logprob: -17.87502098083496
    4. '=list' → logprob: -20.87502098083496
    5. 'input' → logprob: -21.00002098083496
    6. '(list' → logprob: -21.00002098083496
    7. '	list' → logprob: -21.62502098083496
    8. '.list' → logprob: -21.87502098083496
    9. 'List' → logprob: -22.00002098083496
    10. ':list' → logprob: -22.25002098083496

Token 239: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00010986098641296849
    2. '(' → logprob: -9.375109672546387
    3. 'map' → logprob: -11.000109672546387
    4. '(int' → logprob: -12.000109672546387
    5. ' (' → logprob: -13.625109672546387
    6. '(list' → logprob: -14.875109672546387
    7. '(
' → logprob: -15.250109672546387
    8. ',map' → logprob: -16.625110626220703
    9. ' map' → logprob: -16.750110626220703
    10. '	map' → logprob: -16.875110626220703

Token 240: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001367977005429566
    2. 'int' → logprob: -6.626368045806885
    3. ',int' → logprob: -11.001367568969727
    4. ' int' → logprob: -11.376367568969727
    5. '=int' → logprob: -12.501367568969727
    6. '(' → logprob: -12.626367568969727
    7. ']int' → logprob: -13.001367568969727
    8. '   ' → logprob: -13.251367568969727
    9. '[int' → logprob: -13.626367568969727
    10. '<int' → logprob: -14.126367568969727

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07006659358739853
    2. '(int' → logprob: -3.1950666904449463
    3. ',int' → logprob: -3.6950666904449463
    4. ',input' → logprob: -6.445066452026367
    5. '(input' → logprob: -9.195066452026367
    6. ' ,' → logprob: -9.695066452026367
    7. '(' → logprob: -9.695066452026367
    8. ' (' → logprob: -10.820066452026367
    9. 'int' → logprob: -10.945066452026367
    10. '   ' → logprob: -12.570066452026367

Token 242: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.020047295838594437
    2. 'int' → logprob: -4.020047187805176
    3. ' input' → logprob: -6.270047187805176
    4. ' int' → logprob: -12.645047187805176
    5. '(input' → logprob: -16.270048141479492
    6. 'sys' → logprob: -17.520048141479492
    7. '(int' → logprob: -18.395048141479492
    8. '<input' → logprob: -19.020048141479492
    9. '[int' → logprob: -19.145048141479492
    10. ' ' → logprob: -19.770048141479492

Token 243: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.696889623621246e-06
    2. '.readline' → logprob: -13.62500286102295
    3. '.' → logprob: -14.00000286102295
    4. ' ().' → logprob: -15.75000286102295
    5. '.split' → logprob: -16.000001907348633
    6. '()' → logprob: -16.375001907348633
    7. ' .' → logprob: -17.000001907348633
    8. '(' → logprob: -17.125001907348633
    9. ').' → logprob: -17.375001907348633
    10. '.read' → logprob: -19.000001907348633

Token 244: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.584239938296378e-06
    2. 'read' → logprob: -12.500007629394531
    3. '().' → logprob: -13.375007629394531
    4. 'strip' → logprob: -14.500007629394531
    5. 'sys' → logprob: -14.500007629394531
    6. '.split' → logprob: -14.750007629394531
    7. '(split' → logprob: -14.750007629394531
    8. 'rstrip' → logprob: -16.12500762939453
    9. '.readline' → logprob: -16.37500762939453
    10. ')' → logprob: -16.62500762939453

Token 245: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -2.6895233531831764e-05
    2. '()' → logprob: -11.37502670288086
    3. '))' → logprob: -11.75002670288086
    4. '()))
' → logprob: -12.62502670288086
    5. '())).' → logprob: -13.62502670288086
    6. '())' → logprob: -13.62502670288086
    7. '().' → logprob: -14.37502670288086
    8. '()[' → logprob: -15.00002670288086
    9. '()
' → logprob: -15.50002670288086
    10. '   ' → logprob: -15.50002670288086

Token 246: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11727060377597809
    2. '()' → logprob: -2.3672707080841064
    3. '())' → logprob: -4.117270469665527
    4. 'for' → logprob: -7.992270469665527
    5. ' for' → logprob: -8.242270469665527
    6. ' )' → logprob: -11.367270469665527
    7. '   ' → logprob: -12.117270469665527
    8. '(H' → logprob: -12.492270469665527
    9. ' ()' → logprob: -12.992270469665527
    10. ' ' → logprob: -12.992270469665527

Token 247: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10044044256210327
    2. 'range' → logprob: -2.350440502166748
    3. '_' → logprob: -8.60044002532959
    4. '_range' → logprob: -10.60044002532959
    5. ' _' → logprob: -11.35044002532959
    6. ' in' → logprob: -11.47544002532959
    7. '(range' → logprob: -12.97544002532959
    8. ' ' → logprob: -15.60044002532959
    9. 'in' → logprob: -16.475440979003906
    10. '	range' → logprob: -17.850440979003906

Token 248: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007106438861228526
    2. ' range' → logprob: -7.250710487365723
    3. '(range' → logprob: -14.375710487365723
    4. '_range' → logprob: -16.50071144104004
    5. '	range' → logprob: -17.75071144104004
    6. 'ange' → logprob: -18.62571144104004
    7. '_' → logprob: -19.50071144104004
    8. 'H' → logprob: -19.87571144104004
    9. '.range' → logprob: -20.50071144104004
    10. '(' → logprob: -20.50071144104004

Token 249: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002475777640938759
    2. ' range' → logprob: -6.002475738525391
    3. '(range' → logprob: -16.12747573852539
    4. '	range' → logprob: -20.00247573852539
    5. '_range' → logprob: -20.62747573852539
    6. '[' → logprob: -20.62747573852539
    7. '.range' → logprob: -22.00247573852539
    8. '(' → logprob: -22.87747573852539
    9. 'Range' → logprob: -23.12747573852539
    10. ' xrange' → logprob: -23.12747573852539

Token 250: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -2.7729658540920354e-05
    2. 'range' → logprob: -11.250027656555176
    3. 'H' → logprob: -11.875027656555176
    4. ' range' → logprob: -12.250027656555176
    5. ' (' → logprob: -13.750027656555176
    6. '(' → logprob: -13.750027656555176
    7. '(range' → logprob: -14.250027656555176
    8. '(W' → logprob: -16.125028610229492
    9. 'Range' → logprob: -17.375028610229492
    10. ' H' → logprob: -17.875028610229492

Token 251: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.8889261304575484e-06
    2. ')' → logprob: -12.875003814697266
    3. ']' → logprob: -14.250003814697266
    4. ')]
' → logprob: -14.875003814697266
    5. ' )' → logprob: -15.875003814697266
    6. '   ' → logprob: -16.875003814697266
    7. ')],' → logprob: -17.250003814697266
    8. ')].' → logprob: -17.375003814697266
    9. '')]' → logprob: -17.375003814697266
    10. ')]

' → logprob: -17.750003814697266

Token 252: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17355121672153473
    2. '    
' → logprob: -2.173551321029663
    3. '#' → logprob: -3.548551321029663
    4. '
' → logprob: -4.798551082611084
    5. 'C' → logprob: -5.048551082611084
    6. 'M' → logprob: -6.923551082611084
    7. '  
' → logprob: -8.048551559448242
    8. 'm' → logprob: -8.298551559448242
    9. 'n' → logprob: -9.048551559448242
    10. 'K' → logprob: -9.673551559448242

Token 253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10067199915647507
    2. '#' → logprob: -2.3506720066070557
    3. '    
' → logprob: -8.850671768188477
    4. 'C' → logprob: -8.975671768188477
    5. 'def' → logprob: -9.850671768188477
    6. ' ' → logprob: -10.975671768188477
    7. 'K' → logprob: -11.100671768188477
    8. ' #' → logprob: -11.100671768188477
    9. 'M' → logprob: -11.100671768188477
    10. 'R' → logprob: -11.350671768188477

Token 254: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.27482348680496216
    2. 'h' → logprob: -2.2748234272003174
    3. '   ' → logprob: -3.1498234272003174
    4. 'R' → logprob: -3.5248234272003174
    5. 'H' → logprob: -4.0248236656188965
    6. 'K' → logprob: -4.6498236656188965
    7. 'r' → logprob: -5.0248236656188965
    8. 'L' → logprob: -5.2748236656188965
    9. 'k' → logprob: -5.3998236656188965
    10. 'HC' → logprob: -5.6498236656188965

Token 255: ' Lecture' (ID: 106534)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6407775282859802
    2. '#' → logprob: -0.8907775282859802
    3. 'HC' → logprob: -4.515777587890625
    4. 'r' → logprob: -4.640777587890625
    5. 'R' → logprob: -4.765777587890625
    6. 'Rh' → logprob: -5.515777587890625
    7. 'P' → logprob: -5.765777587890625
    8. 'H' → logprob: -5.765777587890625
    9. 'hc' → logprob: -6.515777587890625
    10. 'rh' → logprob: -6.640777587890625

Token 256: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4644361734390259
    2. 'def' → logprob: -1.5894361734390259
    3. '#' → logprob: -1.8394361734390259
    4. '()' → logprob: -2.3394360542297363
    5. ' des' → logprob: -3.2144360542297363
    6. '(M' → logprob: -3.4644360542297363
    7. ' de' → logprob: -3.7144360542297363
    8. ' du' → logprob: -3.7144360542297363
    9. 's' → logprob: -3.7144360542297363
    10. '(C' → logprob: -3.9644360542297363

Token 257: ' dimensions' (ID: 23995)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.5155128240585327
    2. 'k' → logprob: -1.6405128240585327
    3. 'h' → logprob: -1.8905128240585327
    4. 'C' → logprob: -1.8905128240585327
    5. 'L' → logprob: -2.8905129432678223
    6. 'c' → logprob: -3.5155129432678223
    7. 'H' → logprob: -3.7655129432678223
    8. 'M' → logprob: -3.8905129432678223
    9. 'r' → logprob: -4.390512943267822
    10. ' h' → logprob: -4.390512943267822

Token 258: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5500970482826233
    2. ' h' → logprob: -0.9250970482826233
    3. 'r' → logprob: -5.4250969886779785
    4. 'R' → logprob: -5.6750969886779785
    5. ' ' → logprob: -5.6750969886779785
    6. ' R' → logprob: -6.0500969886779785
    7. '   ' → logprob: -6.1750969886779785
    8. ' r' → logprob: -6.3000969886779785
    9. 'H' → logprob: -6.4250969886779785
    10. ' H' → logprob: -7.4250969886779785

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.1557283111615106e-05
    2. ' ,' → logprob: -10.625041961669922
    3. ',c' → logprob: -12.125041961669922
    4. ',h' → logprob: -12.250041961669922
    5. 'c' → logprob: -12.375041961669922
    6. 'C' → logprob: -13.500041961669922
    7. ',m' → logprob: -14.750041961669922
    8. ',C' → logprob: -15.250041961669922
    9. ',s' → logprob: -15.625041961669922
    10. ',
' → logprob: -16.125041961669922

Token 260: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.10025531053543091
    2. ' w' → logprob: -2.350255250930786
    3. 'W' → logprob: -10.475255012512207
    4. 'k' → logprob: -11.350255012512207
    5. ' W' → logprob: -12.975255012512207
    6. ' ' → logprob: -13.725255012512207
    7. 's' → logprob: -13.975255012512207
    8. 't' → logprob: -14.350255012512207
    9. 'm' → logprob: -14.725255012512207
    10. 'l' → logprob: -14.725255012512207

Token 261: ' 
' (ID: 793)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8113489747047424
    2. '   ' → logprob: -1.0613489151000977
    3. ' =' → logprob: -1.6863489151000977
    4. ' h' → logprob: -4.436348915100098
    5. ' ,' → logprob: -5.061348915100098
    6. '=' → logprob: -5.811348915100098
    7. ',h' → logprob: -6.436348915100098
    8. 'h' → logprob: -7.311348915100098
    9. '  ' → logprob: -8.061348915100098
    10. '    ' → logprob: -8.186348915100098

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023508911952376366
    2. 'h' → logprob: -3.7735090255737305
    3. ' h' → logprob: -8.52350902557373
    4. '	h' → logprob: -10.27350902557373
    5. ' ' → logprob: -10.64850902557373
    6. '  ' → logprob: -12.52350902557373
    7. '    ' → logprob: -13.77350902557373
    8. ',' → logprob: -14.02350902557373
    9. '    
' → logprob: -14.89850902557373
    10. ',h' → logprob: -15.64850902557373

Token 263: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.001931970240548253
    2. ' h' → logprob: -6.251932144165039
    3. '   ' → logprob: -12.751932144165039
    4. '	h' → logprob: -15.501932144165039
    5. ' ' → logprob: -16.00193214416504
    6. '(h' → logprob: -17.62693214416504
    7. '    
' → logprob: -17.75193214416504
    8. '  ' → logprob: -17.87693214416504
    9. '
' → logprob: -18.00193214416504
    10. '"h' → logprob: -18.75193214416504

Token 264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.265633419388905e-05
    2. ',w' → logprob: -9.750062942504883
    3. ' ,' → logprob: -12.375062942504883
    4. 'w' → logprob: -17.750062942504883
    5. ',W' → logprob: -19.625062942504883
    6. ',h' → logprob: -20.250062942504883
    7. '‌,' → logprob: -20.375062942504883
    8. ',int' → logprob: -20.375062942504883
    9. '_,' → logprob: -20.750062942504883
    10. ',width' → logprob: -20.875062942504883

Token 265: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.020543284714221954
    2. 'w' → logprob: -3.895543336868286
    3. ' W' → logprob: -14.270543098449707
    4. ' ' → logprob: -15.270543098449707
    5. 'W' → logprob: -15.270543098449707
    6. ' ' → logprob: -15.895543098449707
    7. '=w' → logprob: -16.395544052124023
    8. '	w' → logprob: -16.645544052124023
    9. '_w' → logprob: -17.145544052124023
    10. ',w' → logprob: -17.145544052124023

Token 266: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326520442962646
    2. ' =' → logprob: -1.3132652044296265
    3. ',' → logprob: -12.688264846801758
    4. ' ' → logprob: -15.313264846801758
    5. '=int' → logprob: -16.813264846801758
    6. ' ,' → logprob: -17.438264846801758
    7. ')' → logprob: -18.063264846801758
    8. '＝' → logprob: -18.563264846801758
    9. ' ' → logprob: -18.813264846801758
    10. '=
' → logprob: -18.938264846801758

Token 267: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.07889176905155182
    2. ' map' → logprob: -2.5788917541503906
    3. 'm' → logprob: -13.45389175415039
    4. ' ' → logprob: -14.95389175415039
    5. '	map' → logprob: -15.82889175415039
    6. '   ' → logprob: -16.95389175415039
    7. '  ' → logprob: -17.95389175415039
    8. 'list' → logprob: -18.07889175415039
    9. 'ma' → logprob: -18.32889175415039
    10. '(map' → logprob: -18.32889175415039

Token 268: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.635164754698053e-05
    2. '(' → logprob: -10.375066757202148
    3. 'int' → logprob: -10.375066757202148
    4. ' (' → logprob: -13.500066757202148
    5. '=int' → logprob: -13.625066757202148
    6. ' int' → logprob: -14.250066757202148
    7. '[int' → logprob: -15.375066757202148
    8. '<int' → logprob: -15.625066757202148
    9. ',int' → logprob: -16.37506675720215
    10. '(lambda' → logprob: -17.12506675720215

Token 269: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.15431202948093414
    2. ',int' → logprob: -2.1543121337890625
    3. ',' → logprob: -3.7793121337890625
    4. 'int' → logprob: -6.0293121337890625
    5. '=int' → logprob: -6.5293121337890625
    6. '[int' → logprob: -9.029312133789062
    7. '(' → logprob: -9.529312133789062
    8. '<int' → logprob: -10.279312133789062
    9. ':int' → logprob: -10.779312133789062
    10. ')' → logprob: -10.904312133789062

Token 270: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008845245465636253
    2. 'input' → logprob: -4.758845329284668
    3. ' int' → logprob: -8.508845329284668
    4. ' input' → logprob: -10.508845329284668
    5. '(int' → logprob: -14.133845329284668
    6. 'map' → logprob: -14.383845329284668
    7. '[int' → logprob: -15.133845329284668
    8. '<int' → logprob: -17.25884437561035
    9. 'ints' → logprob: -17.50884437561035
    10. ':int' → logprob: -18.38384437561035

Token 271: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.173704271830502e-06
    2. '()' → logprob: -12.75000286102295
    3. ' ().' → logprob: -16.375003814697266
    4. '.split' → logprob: -16.500003814697266
    5. '.' → logprob: -18.000003814697266
    6. ').' → logprob: -19.000003814697266
    7. '()).' → logprob: -19.000003814697266
    8. '(' → logprob: -19.125003814697266
    9. '()
' → logprob: -19.375003814697266
    10. '()[' → logprob: -20.125003814697266

Token 272: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ')' → logprob: -15.625
    3. ' split' → logprob: -15.75
    4. 'spl' → logprob: -16.25
    5. 'strip' → logprob: -16.875
    6. '(split' → logprob: -17.5
    7. 'plit' → logprob: -17.75
    8. '()' → logprob: -19.125
    9. 'rstrip' → logprob: -19.5
    10. '.split' → logprob: -19.625

Token 273: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.32657796144485474
    2. ')' → logprob: -1.32657790184021
    3. '()' → logprob: -4.326578140258789
    4. '())
' → logprob: -11.826578140258789
    5. '(' → logprob: -12.951578140258789
    6. ' )' → logprob: -13.076578140258789
    7. ' ())' → logprob: -13.701578140258789
    8. '()
' → logprob: -14.451578140258789
    9. ')
' → logprob: -14.576578140258789
    10. '))' → logprob: -15.326578140258789

Token 274: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6936720609664917
    2. '    
' → logprob: -0.6936720609664917
    3. 'C' → logprob: -8.443672180175781
    4. '        
' → logprob: -9.193672180175781
    5. '
' → logprob: -9.818672180175781
    6. '  
' → logprob: -9.943672180175781
    7. '   
' → logprob: -10.318672180175781
    8. '	
' → logprob: -10.693672180175781
    9. '	C' → logprob: -11.193672180175781
    10. ' 
' → logprob: -12.068672180175781

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28579607605934143
    2. 'C' → logprob: -1.535796046257019
    3. '#' → logprob: -3.4107961654663086
    4. '    
' → logprob: -8.785796165466309
    5. '
' → logprob: -9.285796165466309
    6. ' C' → logprob: -10.660796165466309
    7. '```' → logprob: -12.910796165466309
    8. ' ' → logprob: -13.035796165466309
    9. '       ' → logprob: -13.285796165466309
    10. '  ' → logprob: -13.285796165466309

Token 276: ' #' (ID: 1069)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.018858879804611206
    2. '#' (adapté à ' #') → logprob: -4.018858909606934
    3. '   ' → logprob: -7.268858909606934
    4. '    
' → logprob: -12.518858909606934
    5. ' C' → logprob: -12.643858909606934
    6. '
' → logprob: -12.643858909606934
    7. '```' → logprob: -14.143858909606934
    8. 'c' → logprob: -15.518858909606934
    9. 'def' → logprob: -15.893858909606934
    10. ' #' → logprob: -16.143857955932617

Token 277: ' Lecture' (ID: 106534)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.004638861399143934
    2. '#' → logprob: -5.379638671875
    3. ' C' → logprob: -11.754638671875
    4. 'def' → logprob: -12.004638671875
    5. '   ' → logprob: -13.629638671875
    6. 'Code' → logprob: -13.879638671875
    7. 'c' → logprob: -14.379638671875
    8. 'for' → logprob: -15.504638671875
    9. '
' → logprob: -15.817138671875
    10. 'import' → logprob: -16.192138671875

Token 278: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025426609441637993
    2. '#' → logprob: -4.525426387786865
    3. ' de' → logprob: -5.400426387786865
    4. ' des' → logprob: -5.400426387786865
    5. 'des' → logprob: -6.275426387786865
    6. 'de' → logprob: -6.650426387786865
    7. 'C' → logprob: -7.400426387786865
    8. ' du' → logprob: -7.650426387786865
    9. 'def' → logprob: -8.025426864624023
    10. 'du' → logprob: -8.650426864624023

Token 279: ' la' (ID: 557)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.006269682198762894
    2. ' C' → logprob: -5.881269454956055
    3. '[' → logprob: -6.631269454956055
    4. '[C' → logprob: -6.881269454956055
    5. '#' → logprob: -8.006269454956055
    6. '
' → logprob: -8.256269454956055
    7. 'c' → logprob: -8.756269454956055
    8. '[
' → logprob: -9.381269454956055
    9. '   ' → logprob: -9.756269454956055
    10. ' [' → logprob: -9.881269454956055

Token 280: ' matr' (ID: 25095)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0011049715103581548
    2. '#' → logprob: -7.876104831695557
    3. 'mat' → logprob: -8.251105308532715
    4. 'matrix' → logprob: -8.251105308532715
    5. ' C' → logprob: -9.751105308532715
    6. 'c' → logprob: -10.126105308532715
    7. 'def' → logprob: -10.501105308532715
    8. 'for' → logprob: -11.126105308532715
    9. 'm' → logprob: -11.751105308532715
    10. 'B' → logprob: -11.876105308532715

Token 281: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.09197103977203369
    2. 'atrice' → logprob: -2.466970920562744
    3. 'ices' → logprob: -7.216970920562744
    4. 'atrix' → logprob: -7.466970920562744
    5. 'atrices' → logprob: -7.591970920562744
    6. 'ixe' → logprob: -7.716970920562744
    7. 'ix' → logprob: -8.091971397399902
    8. 'ize' → logprob: -8.216971397399902
    9. 'rice' → logprob: -9.591971397399902
    10. 'tr' → logprob: -11.216971397399902

Token 282: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00015908108616713434
    2. ' C' → logprob: -8.75015926361084
    3. 'c' → logprob: -15.50015926361084
    4. '(' → logprob: -15.62515926361084
    5. '   ' → logprob: -16.000158309936523
    6. '(C' → logprob: -16.750158309936523
    7. '#' → logprob: -17.500158309936523
    8. 's' → logprob: -17.625158309936523
    9. ' ' → logprob: -18.750158309936523
    10. '_C' → logprob: -19.125158309936523

Token 283: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14778827130794525
    2. '=' → logprob: -2.1477882862091064
    3. 'C' → logprob: -4.272788047790527
    4. '   ' → logprob: -5.022788047790527
    5. '=C' → logprob: -9.897788047790527
    6. ' C' → logprob: -10.272788047790527
    7. 'c' → logprob: -11.272788047790527
    8. '=[' → logprob: -12.522788047790527
    9. '[' → logprob: -13.022788047790527
    10. '=
' → logprob: -13.272788047790527

Token 284: 'h' (ID: 71)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.49080923199653625
    2. 'list' → logprob: -1.4908092021942139
    3. '[int' → logprob: -1.8658092021942139
    4. ')' → logprob: -5.615809440612793
    5. 'int' → logprob: -6.240809440612793
    6. ')[' → logprob: -7.490809440612793
    7. 'C' → logprob: -7.990809440612793
    8. '[' → logprob: -7.990809440612793
    9. '[h' → logprob: -8.365809440612793
    10. '[i' → logprob: -8.365809440612793

Token 285: ' x' (ID: 1215)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03608325123786926
    2. ' x' → logprob: -4.411083221435547
    3. ' ,' → logprob: -4.661083221435547
    4. ')' → logprob: -5.536083221435547
    5. ' ' → logprob: -5.661083221435547
    6. ',list' → logprob: -6.161083221435547
    7. '   ' → logprob: -6.911083221435547
    8. '][' → logprob: -6.911083221435547
    9. 'x' → logprob: -7.411083221435547
    10. '*' → logprob: -7.786083221435547

Token 286: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.38688158988952637
    2. ' w' → logprob: -1.1368815898895264
    3. '   ' → logprob: -12.636881828308105
    4. ' ' → logprob: -13.011881828308105
    5. 'W' → logprob: -13.261881828308105
    6. ' W' → logprob: -14.699381828308105
    7. 'int' → logprob: -14.949381828308105
    8. ')' → logprob: -15.136881828308105
    9. '	w' → logprob: -15.261881828308105
    10. ''w' → logprob: -15.261881828308105

Token 287: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ' )' → logprob: -13.37500286102295
    3. '   ' → logprob: -14.12500286102295
    4. ')
' → logprob: -15.37500286102295
    5. ')]' → logprob: -15.75000286102295
    6. ']' → logprob: -16.375003814697266
    7. '))' → logprob: -17.750003814697266
    8. '）' → logprob: -18.000003814697266
    9. '])' → logprob: -18.125003814697266
    10. ')=' → logprob: -18.125003814697266

Token 288: ' des' (ID: 731)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.16042976081371307
    2. '   ' → logprob: -1.9104297161102295
    3. ' C' → logprob: -8.785429954528809
    4. ' =' → logprob: -10.285429954528809
    5. '=' → logprob: -12.035429954528809
    6. '
' → logprob: -12.535429954528809
    7. 'c' → logprob: -13.535429954528809
    8. ' ' → logprob: -13.535429954528809
    9. '  ' → logprob: -13.660429954528809
    10. '[' → logprob: -14.035429954528809

Token 289: ' couleurs' (ID: 54001)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4234665334224701
    2. 'list' → logprob: -1.5484665632247925
    3. 'ints' → logprob: -2.173466444015503
    4. 'inte' → logprob: -4.548466682434082
    5. 'ent' → logprob: -5.173466682434082
    6. 'cou' → logprob: -7.548466682434082
    7. 'colors' → logprob: -7.673466682434082
    8. ' couleurs' → logprob: -7.923466682434082
    9. '(int' → logprob: -8.048466682434082
    10. '[int' → logprob: -8.673466682434082

Token 290: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015359314857050776
    2. 'C' → logprob: -6.501535892486572
    3. ' C' → logprob: -10.37653636932373
    4. ' ' → logprob: -14.12653636932373
    5. '	C' → logprob: -14.25153636932373
    6. '  ' → logprob: -14.50153636932373
    7. ' =' → logprob: -15.00153636932373
    8. '    ' → logprob: -15.37653636932373
    9. '=' → logprob: -16.751535415649414
    10. '=C' → logprob: -17.626535415649414

Token 291: '0' (ID: 15)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8876217603683472
    2. 'int' → logprob: -1.1376217603683472
    3. 'input' → logprob: -2.0126218795776367
    4. '0' → logprob: -3.0126218795776367
    5. '[int' → logprob: -3.2626218795776367
    6. ')' → logprob: -3.6376218795776367
    7. '[input' → logprob: -4.012621879577637
    8. '[list' → logprob: -7.012621879577637
    9. '[' → logprob: -8.012621879577637
    10. '   ' → logprob: -8.262621879577637

Token 292: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004988207365386188
    2. ')' → logprob: -8.62549877166748
    3. 'or' → logprob: -9.00049877166748
    4. ' or' → logprob: -9.25049877166748
    5. ' ,' → logprob: -10.00049877166748
    6. '),' → logprob: -11.50049877166748
    7. ' ou' → logprob: -11.50049877166748
    8. 'for' → logprob: -11.62549877166748
    9. '   ' → logprob: -11.87549877166748
    10. 'import' → logprob: -12.87549877166748

Token 293: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000574836041778326
    2. 'int' → logprob: -7.625575065612793
    3. ' ' → logprob: -9.500575065612793
    4. ' int' → logprob: -11.625575065612793
    5. 'list' → logprob: -13.375575065612793
    6. ')' → logprob: -14.625575065612793
    7. '   ' → logprob: -15.125575065612793
    8. '(int' → logprob: -15.125575065612793
    9. ' list' → logprob: -16.375574111938477
    10. '0' → logprob: -16.375574111938477

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.52919222577475e-05
    2. 'int' → logprob: -9.625075340270996
    3. ' ' → logprob: -11.750075340270996
    4. 'input' → logprob: -14.250075340270996
    5. 'w' → logprob: -14.875075340270996
    6. '```' → logprob: -16.50007438659668
    7. 'list' → logprob: -16.87507438659668
    8. ' int' → logprob: -16.87507438659668
    9. ')' → logprob: -17.00007438659668
    10. '   ' → logprob: -17.75007438659668

Token 295: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013295256067067385
    2. '   ' → logprob: -6.75132942199707
    3. ')]' → logprob: -9.00132942199707
    4. ' )' → logprob: -11.12632942199707
    5. ')
' → logprob: -11.25132942199707
    6. '))' → logprob: -12.50132942199707
    7. '):' → logprob: -13.62632942199707
    8. ')=' → logprob: -14.25132942199707
    9. '")' → logprob: -14.62632942199707
    10. '])' → logprob: -15.25132942199707

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28245705366134644
    2. 'C' → logprob: -1.4074571132659912
    3. ' C' → logprob: -6.657456874847412
    4. ' ' → logprob: -12.15745735168457
    5. '    
' → logprob: -12.28245735168457
    6. '
' → logprob: -12.40745735168457
    7. '	C' → logprob: -13.28245735168457
    8. '#' → logprob: -13.90745735168457
    9. ')' → logprob: -13.90745735168457
    10. '  ' → logprob: -14.15745735168457

Token 297: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -1.1472419600977446e-06
    2. ' C' → logprob: -14.125000953674316
    3. '   ' → logprob: -15.000000953674316
    4. 'c' → logprob: -19.500001907348633
    5. '
' → logprob: -20.500001907348633
    6. '#' → logprob: -20.625001907348633
    7. ' ' → logprob: -20.625001907348633
    8. 'def' → logprob: -21.250001907348633
    9. '	C' → logprob: -21.750001907348633
    10. 'for' → logprob: -22.250001907348633

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890091091394424
    2. '=' → logprob: -2.5789008140563965
    3. '=[' → logprob: -11.953901290893555
    4. ' =[' → logprob: -12.578901290893555
    5. '=[]' → logprob: -14.953901290893555
    6. '=list' → logprob: -15.703901290893555
    7. '[' → logprob: -15.828901290893555
    8. ' ' → logprob: -16.203901290893555
    9. '   ' → logprob: -16.328901290893555
    10. '=[]
' → logprob: -16.328901290893555

Token 299: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.21617086231708527
    2. '[list' → logprob: -2.2161707878112793
    3. '[' → logprob: -2.4661707878112793
    4. '[List' → logprob: -7.716170787811279
    5. '[l' → logprob: -11.966171264648438
    6. '[line' → logprob: -12.716171264648438
    7. '[class' → logprob: -12.841171264648438
    8. '[int' → logprob: -13.091171264648438
    9. '   ' → logprob: -13.591171264648438
    10. '[next' → logprob: -14.341171264648438

Token 300: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.9361264946837764e-07
    2. ' list' → logprob: -16.375
    3. '[list' → logprob: -19.625
    4. '(list' → logprob: -22.0
    5. '=list' → logprob: -22.5
    6. 'map' → logprob: -22.625
    7. '.list' → logprob: -23.625
    8. '	list' → logprob: -23.875
    9. ':list' → logprob: -24.25
    10. 'int' → logprob: -24.75

Token 301: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0005611348897218704
    2. 'map' → logprob: -7.750561237335205
    3. '(int' → logprob: -9.000560760498047
    4. 'int' → logprob: -12.750560760498047
    5. '(lambda' → logprob: -12.750560760498047
    6. ',map' → logprob: -14.875560760498047
    7. ' map' → logprob: -15.250560760498047
    8. ' (' → logprob: -15.375560760498047
    9. '(' → logprob: -15.625560760498047
    10. '	map' → logprob: -16.125560760498047

Token 302: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004099892918020487
    2. 'int' → logprob: -5.5040998458862305
    3. ' int' → logprob: -12.12909984588623
    4. '[int' → logprob: -12.12909984588623
    5. '<int' → logprob: -13.00409984588623
    6. ',int' → logprob: -13.00409984588623
    7. '(' → logprob: -13.12909984588623
    8. '=int' → logprob: -13.12909984588623
    9. ']int' → logprob: -13.75409984588623
    10. ' (' → logprob: -14.12909984588623

Token 303: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.009110135957598686
    2. ',int' → logprob: -5.384109973907471
    3. ',' → logprob: -6.134109973907471
    4. 'int' → logprob: -6.384109973907471
    5. '(input' → logprob: -7.509109973907471
    6. '=int' → logprob: -10.509110450744629
    7. '[int' → logprob: -11.134110450744629
    8. ',input' → logprob: -11.259110450744629
    9. '<int' → logprob: -12.134110450744629
    10. ' int' → logprob: -12.509110450744629

Token 304: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005941359326243401
    2. 'int' → logprob: -5.255941390991211
    3. ' input' → logprob: -7.255941390991211
    4. '(input' → logprob: -13.755941390991211
    5. ' int' → logprob: -15.630941390991211
    6. 'sys' → logprob: -16.50594139099121
    7. '<input' → logprob: -17.63094139099121
    8. '_input' → logprob: -17.88094139099121
    9. '(int' → logprob: -18.38094139099121
    10. '=input' → logprob: -18.50594139099121

Token 305: '().' (ID: 1454)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001080683316104114
    2. 'int' → logprob: -8.126080513000488
    3. '=int' → logprob: -8.126080513000488
    4. ',int' → logprob: -8.126080513000488
    5. '(lambda' → logprob: -9.751080513000488
    6. '[int' → logprob: -10.626080513000488
    7. ' (' → logprob: -10.626080513000488
    8. '(' → logprob: -10.876080513000488
    9. '   ' → logprob: -11.126080513000488
    10. '```' → logprob: -11.251080513000488

Token 306: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. ' split' → logprob: -15.250000953674316
    3. 'sys' → logprob: -15.625000953674316
    4. 'read' → logprob: -16.125
    5. 'spl' → logprob: -16.375
    6. '(split' → logprob: -17.0
    7. 'int' → logprob: -17.5
    8. 'strip' → logprob: -18.125
    9. 'skip' → logprob: -19.125
    10. ')' → logprob: -19.375

Token 307: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00025776340044103563
    2. '()' → logprob: -8.62525749206543
    3. '))' → logprob: -10.62525749206543
    4. '())' → logprob: -10.75025749206543
    5. '()[' → logprob: -11.50025749206543
    6. '().' → logprob: -12.00025749206543
    7. '())).' → logprob: -12.25025749206543
    8. '()))
' → logprob: -12.50025749206543
    9. '()));' → logprob: -13.25025749206543
    10. '())))' → logprob: -13.37525749206543

Token 308: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01783815398812294
    2. 'for' → logprob: -4.392838001251221
    3. '()' → logprob: -5.267838001251221
    4. ' for' → logprob: -9.267838478088379
    5. '())' → logprob: -9.892838478088379
    6. '))' → logprob: -11.892838478088379
    7. ' )' → logprob: -12.767838478088379
    8. ')]' → logprob: -12.892838478088379
    9. '   ' → logprob: -13.517838478088379
    10. ')
' → logprob: -15.392838478088379

Token 309: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04889369755983353
    2. ' range' → logprob: -3.048893690109253
    3. '(range' → logprob: -8.298893928527832
    4. 'int' → logprob: -10.923893928527832
    5. 'for' → logprob: -11.173893928527832
    6. ')' → logprob: -11.923893928527832
    7. '_' → logprob: -12.048893928527832
    8. '_range' → logprob: -12.798893928527832
    9. ' ' → logprob: -13.548893928527832
    10. '   ' → logprob: -13.548893928527832

Token 310: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067469896748661995
    2. ' range' → logprob: -5.006746768951416
    3. '(range' → logprob: -10.506747245788574
    4. '_range' → logprob: -12.381747245788574
    5. '	range' → logprob: -16.381746292114258
    6. '.range' → logprob: -17.381746292114258
    7. '-range' → logprob: -18.881746292114258
    8. '_' → logprob: -18.881746292114258
    9. ' xrange' → logprob: -19.256746292114258
    10. '
' → logprob: -19.506746292114258

Token 311: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00043353010551072657
    2. ' range' → logprob: -7.750433444976807
    3. '(range' → logprob: -12.750433921813965
    4. '_range' → logprob: -18.25043296813965
    5. '	range' → logprob: -18.25043296813965
    6. '.range' → logprob: -19.00043296813965
    7. '-range' → logprob: -20.87543296813965
    8. 'for' → logprob: -21.12543296813965
    9. 'map' → logprob: -21.25043296813965
    10. '0' → logprob: -21.62543296813965

Token 312: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -4.320199877838604e-07
    2. 'h' → logprob: -15.375
    3. '(' → logprob: -15.875
    4. ' (' → logprob: -19.0
    5. '(H' → logprob: -20.25
    6. '(w' → logprob: -20.875
    7. '(
' → logprob: -21.0
    8. '((' → logprob: -21.0
    9. '[h' → logprob: -21.25
    10. '(s' → logprob: -22.25

Token 313: ')]
' (ID: 11587)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001394284307025373
    2. ')]' → logprob: -6.876394271850586
    3. ']))' → logprob: -8.251394271850586
    4. '))]
' → logprob: -9.876394271850586
    5. '])]' → logprob: -11.126394271850586
    6. ')))' → logprob: -11.501394271850586
    7. ')])' → logprob: -12.001394271850586
    8. ' ))' → logprob: -12.126394271850586
    9. ']' → logprob: -12.251394271850586
    10. ')' → logprob: -12.501394271850586

Token 314: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07127375900745392
    2. '   ' → logprob: -2.8212738037109375
    3. '    
' → logprob: -4.8212738037109375
    4. 'max' → logprob: -7.3212738037109375
    5. '

' → logprob: -8.071273803710938
    6. 'result' → logprob: -9.821273803710938
    7. '#' → logprob: -10.071273803710938
    8. '
' → logprob: -10.446273803710938
    9. '  
' → logprob: -10.696273803710938
    10. '```' → logprob: -10.946273803710938

Token 315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2247161567211151
    2. '
' → logprob: -1.7247161865234375
    3. '    
' → logprob: -4.3497161865234375
    4. 'max' → logprob: -4.5997161865234375
    5. '#' → logprob: -10.599716186523438
    6. 'result' → logprob: -11.599716186523438
    7. ' max' → logprob: -11.849716186523438
    8. '```' → logprob: -11.974716186523438
    9. '   
' → logprob: -12.599716186523438
    10. '  
' → logprob: -12.599716186523438

Token 316: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.03728251904249191
    2. 'result' → logprob: -3.7872824668884277
    3. 'best' → logprob: -5.162282466888428
    4. '   ' → logprob: -5.412282466888428
    5. '#' → logprob: -6.287282466888428
    6. 'res' → logprob: -6.787282466888428
    7. 'min' → logprob: -8.537282943725586
    8. '    
' → logprob: -8.912282943725586
    9. 'ans' → logprob: -8.912282943725586
    10. '
' → logprob: -9.162282943725586

Token 317: '_score' (ID: 22555)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.002255410421639681
    2. '_val' → logprob: -6.252255439758301
    3. '_s' → logprob: -8.2522554397583
    4. 'sum' → logprob: -10.6272554397583
    5. '_score' → logprob: -11.1272554397583
    6. '_value' → logprob: -11.2522554397583
    7. '_' → logprob: -11.5022554397583
    8. 'Sum' → logprob: -12.8772554397583
    9. '_result' → logprob: -14.8772554397583
    10. 's' → logprob: -15.2522554397583

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142346620559692
    2. '=' → logprob: -1.7014234066009521
    3. '=-' → logprob: -11.701423645019531
    4. '=None' → logprob: -13.826423645019531
    5. ' ' → logprob: -14.326423645019531
    6. ',' → logprob: -15.826423645019531
    7. '   ' → logprob: -16.57642364501953
    8. 's' → logprob: -17.07642364501953
    9. '  ' → logprob: -17.45142364501953
    10. '=int' → logprob: -18.07642364501953

Token 319: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06282289326190948
    2. '-' → logprob: -2.8128228187561035
    3. ' None' → logprob: -7.6878228187561035
    4. 'float' → logprob: -8.187823295593262
    5. '-none' → logprob: -9.687823295593262
    6. '-n' → logprob: -10.187823295593262
    7. '-N' → logprob: -11.562823295593262
    8. ' -' → logprob: -11.812823295593262
    9. '-s' → logprob: -14.062823295593262
    10. '"' → logprob: -15.937823295593262

Token 320: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7865049242973328
    2. '   ' → logprob: -0.7865049242973328
    3. '    
' → logprob: -2.7865049839019775
    4. '  
' → logprob: -4.786504745483398
    5. ' for' → logprob: -4.786504745483398
    6. 'for' → logprob: -5.411504745483398
    7. '   
' → logprob: -5.911504745483398
    8. ' 
' → logprob: -6.411504745483398
    9. '<|end|>' → logprob: -8.036504745483398
    10. '\n' → logprob: -8.036504745483398

Token 321: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22865714132785797
    2. '
' → logprob: -1.7286571264266968
    3. '   ' → logprob: -4.103657245635986
    4. ' for' → logprob: -4.728657245635986
    5. '    
' → logprob: -6.603657245635986
    6. '  
' → logprob: -9.478656768798828
    7. '   
' → logprob: -10.478656768798828
    8. ' 
' → logprob: -10.478656768798828
    9. '	for' → logprob: -11.228656768798828
    10. '  ' → logprob: -12.353656768798828

Token 322: ' Aucun' (ID: 199365)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6576769351959229
    2. 'for' → logprob: -1.1576769351959229
    3. ' for' → logprob: -2.407676935195923
    4. 'max' → logprob: -3.657676935195923
    5. 'None' → logprob: -4.032676696777344
    6. '#' → logprob: -4.157676696777344
    7. ' None' → logprob: -5.407676696777344
    8. ' max' → logprob: -5.407676696777344
    9. ' ' → logprob: -5.532676696777344
    10. '
' → logprob: -7.032676696777344

Token 323: ' score' (ID: 8429)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.43321236968040466
    2. 'score' → logprob: -1.808212399482727
    3. 'result' → logprob: -1.808212399482727
    4. 'for' → logprob: -4.9332122802734375
    5. ' max' → logprob: -5.0582122802734375
    6. 'n' → logprob: -6.3082122802734375
    7. 'found' → logprob: -6.5582122802734375
    8. ' score' → logprob: -6.8082122802734375
    9. ' résultat' → logprob: -6.8082122802734375
    10. ' result' → logprob: -7.0582122802734375

Token 324: ' trouvé' (ID: 60081)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 325: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5319768786430359
    2. '   ' → logprob: -1.7819769382476807
    3. 'for' → logprob: -2.0319769382476807
    4. ' for' → logprob: -2.7819769382476807
    5. '    
' → logprob: -3.0319769382476807
    6. '  
' → logprob: -6.281976699829102
    7. '   
' → logprob: -7.656976699829102
    8. ' 
' → logprob: -8.281976699829102
    9. '\n' → logprob: -8.781976699829102
    10. '  ' → logprob: -9.906976699829102

Token 326: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.18589119613170624
    2. ' le' → logprob: -1.9358911514282227
    3. 'l' → logprob: -4.310891151428223
    4. 'le' → logprob: -4.560891151428223
    5. '_le' → logprob: -7.435891151428223
    6. '_l' → logprob: -7.685891151428223
    7. '_' → logprob: -8.685891151428223
    8. 'maint' → logprob: -8.810891151428223
    9. ' maintenant' → logprob: -10.935891151428223
    10. 's' → logprob: -11.060891151428223

Token 327: ''instant' (ID: 166425)
  Prédit: ''instant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''instant' → logprob: -0.0012367760064080358
    2. 'instant' → logprob: -6.751236915588379
    3. 'e' → logprob: -10.126236915588379
    4. ''' → logprob: -11.876236915588379
    5. 'a' → logprob: -12.001236915588379
    6. ' instant' → logprob: -12.626236915588379
    7. 'es' → logprob: -12.751236915588379
    8. 'moment' → logprob: -13.376236915588379
    9. '''' → logprob: -13.751236915588379
    10. 'inst' → logprob: -14.001236915588379

Token 328: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23685981333255768
    2. ' for' → logprob: -2.7368597984313965
    3. '   ' → logprob: -2.7368597984313965
    4. 'for' → logprob: -3.1118597984313965
    5. '    
' → logprob: -3.9868597984313965
    6. '  
' → logprob: -4.6118597984313965
    7. ' 
' → logprob: -5.7368597984313965
    8. '<|end|>' → logprob: -6.1118597984313965
    9. '   
' → logprob: -6.6118597984313965
    10. '\n' → logprob: -7.7368597984313965

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1567355841398239
    2. 'for' → logprob: -2.65673565864563
    3. ' for' → logprob: -2.78173565864563
    4. '
' → logprob: -4.531735420227051
    5. '    
' → logprob: -6.156735420227051
    6. '  
' → logprob: -10.15673542022705
    7. '   
' → logprob: -11.03173542022705
    8. '  ' → logprob: -11.90673542022705
    9. ' 
' → logprob: -12.28173542022705
    10. '	for' → logprob: -12.65673542022705

Token 330: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006491714157164097
    2. ' for' → logprob: -7.5006489753723145
    3. '   ' → logprob: -9.250649452209473
    4. '	for' → logprob: -16.000648498535156
    5. ' ' → logprob: -17.625648498535156
    6. '  ' → logprob: -18.125648498535156
    7. '#' (adapté à ' #') → logprob: -18.750648498535156
    8. '
' → logprob: -18.875648498535156
    9. '    
' → logprob: -19.375648498535156
    10. '  
' → logprob: -21.375648498535156

Token 331: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.2729995988775045e-06
    2. ' for' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.6250057220459
    4. '#' → logprob: -19.0000057220459
    5. '	for' → logprob: -20.5000057220459
    6. '
' → logprob: -21.1250057220459
    7. 'fo' → logprob: -23.2500057220459
    8. 'range' → logprob: -23.2500057220459
    9. '```' → logprob: -23.3750057220459
    10. 'For' → logprob: -23.6250057220459

Token 332: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25193214416503906
    2. ' for' → logprob: -1.501932144165039
    3. 'or' → logprob: -13.126932144165039
    4. ' range' → logprob: -15.126932144165039
    5. '   ' → logprob: -15.501932144165039
    6. 'range' → logprob: -15.501932144165039
    7. ' pour' → logprob: -16.50193214416504
    8. ' ' → logprob: -17.00193214416504
    9. ' or' → logprob: -17.00193214416504
    10. '	for' → logprob: -17.12693214416504

Token 333: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.03908984735608101
    2. 'ours' → logprob: -3.6640899181365967
    3. 'oure' → logprob: -4.414089679718018
    4. 'our' → logprob: -7.914089679718018
    5. '_' → logprob: -8.664090156555176
    6. 'orre' → logprob: -11.164090156555176
    7. 'ourse' → logprob: -11.414090156555176
    8. '#' → logprob: -11.789090156555176
    9. 'court' → logprob: -12.539090156555176
    10. '[' → logprob: -12.664090156555176

Token 334: ' toutes' (ID: 17502)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0769588947296143
    2. ' for' → logprob: -1.5769588947296143
    3. ' range' → logprob: -1.9519588947296143
    4. 'for' → logprob: -2.2019588947296143
    5. 'range' → logprob: -2.2019588947296143
    6. 'i' → logprob: -2.4519588947296143
    7. ' la' → logprob: -6.701958656311035
    8. ' ' → logprob: -7.076958656311035
    9. ' les' → logprob: -7.326958656311035
    10. ' le' → logprob: -9.451958656311035

Token 335: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2955453097820282
    2. 'i' → logprob: -1.4205453395843506
    3. '(i' → logprob: -5.2955451011657715
    4. 'range' → logprob: -5.4205451011657715
    5. '_i' → logprob: -6.4205451011657715
    6. ' range' → logprob: -6.6705451011657715
    7. ' les' → logprob: -7.6705451011657715
    8. '(range' → logprob: -8.54554557800293
    9. '_range' → logprob: -8.79554557800293
    10. ' for' → logprob: -9.29554557800293

Token 336: ' positions' (ID: 15897)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029619257897138596
    2. ' i' → logprob: -4.154619216918945
    3. ' positions' → logprob: -4.779619216918945
    4. 'positions' → logprob: -5.404619216918945
    5. 'range' → logprob: -7.904619216918945
    6. ' range' → logprob: -8.529619216918945
    7. ' possible' → logprob: -11.654619216918945
    8. 'pos' → logprob: -12.404619216918945
    9. 'possible' → logprob: -12.404619216918945
    10. 'ranges' → logprob: -12.404619216918945

Token 337: ' possibles' (ID: 97753)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.8419089317321777
    2. ' i' → logprob: -1.8419089317321777
    3. '   ' → logprob: -1.9669089317321777
    4. '(' → logprob: -2.0919089317321777
    5. ' for' → logprob: -2.3419089317321777
    6. ' (' → logprob: -4.091908931732178
    7. ' ' → logprob: -4.716908931732178
    8. 'for' → logprob: -4.966908931732178
    9. ' in' → logprob: -5.591908931732178
    10. ' range' → logprob: -5.966908931732178

Token 338: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7338578701019287
    2. ' for' → logprob: -1.1088578701019287
    3. 'for' → logprob: -1.7338578701019287
    4. ' in' → logprob: -5.358858108520508
    5. ' i' → logprob: -6.108858108520508
    6. ' ' → logprob: -6.358858108520508
    7. '(i' → logprob: -6.608858108520508
    8. 'in' → logprob: -6.733858108520508
    9. 'range' → logprob: -7.858858108520508
    10. '  ' → logprob: -7.983858108520508

Token 339: ' C' (ID: 363)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.26564526557922363
    2. 'i' → logprob: -2.1406452655792236
    3. 'C' → logprob: -3.5156452655792236
    4. '0' → logprob: -3.6406452655792236
    5. ' C' → logprob: -4.1406450271606445
    6. 'B' → logprob: -4.1406450271606445
    7. ' B' → logprob: -4.8906450271606445
    8. ' ' → logprob: -5.3906450271606445
    9. ' h' → logprob: -5.7656450271606445
    10. ' le' → logprob: -6.1406450271606445

Token 340: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.13416124880313873
    2. 'pe' → logprob: -2.8841612339019775
    3. ' pourrait' → logprob: -3.3841612339019775
    4. ' peux' → logprob: -4.759161472320557
    5. ' pourra' → logprob: -4.759161472320557
    6. 'p' → logprob: -5.259161472320557
    7. ')' → logprob: -5.634161472320557
    8. ' pouvait' → logprob: -6.134161472320557
    9. 'pour' → logprob: -6.759161472320557
    10. ' can' → logprob: -6.884161472320557

Token 341: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.023101165890693665
    2. 'se' → logprob: -4.523101329803467
    3. ' s' → logprob: -4.898101329803467
    4. 'être' → logprob: -5.898101329803467
    5. 'entr' → logprob: -8.398100852966309
    6. ' se' → logprob: -8.523100852966309
    7. '_s' → logprob: -8.773100852966309
    8. 'prendre' → logprob: -9.023100852966309
    9. 'placer' → logprob: -9.273100852966309
    10. ' être' → logprob: -9.398100852966309

Token 342: ''' (ID: 6)
  Prédit: ''em'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''em' → logprob: -0.37745994329452515
    2. ''ins' → logprob: -1.75246000289917
    3. 'embo' → logprob: -2.25246000289917
    4. 'em' → logprob: -4.12746000289917
    5. 'e' → logprob: -5.37746000289917
    6. ''' → logprob: -5.50246000289917
    7. ''intégr' → logprob: -6.12746000289917
    8. '')' → logprob: -6.12746000289917
    9. ''emp' → logprob: -6.37746000289917
    10. '_em' → logprob: -6.75246000289917

Token 343: 'imb' (ID: 8147)
  Prédit: 'embo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'embo' → logprob: -0.28859230875968933
    2. 'em' → logprob: -1.5385923385620117
    3. ''em' → logprob: -3.7885923385620117
    4. ''ins' → logprob: -5.038592338562012
    5. 'ins' → logprob: -5.663592338562012
    6. 'emb' → logprob: -7.038592338562012
    7. ''' → logprob: -7.663592338562012
    8. 'inc' → logprob: -8.288592338562012
    9. ''intégr' → logprob: -8.413592338562012
    10. 'in' → logprob: -8.538592338562012

Token 344: 'ri' (ID: 872)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.4723438024520874
    2. 'er' → logprob: -1.0973438024520874
    3. 'e' → logprob: -3.972343921661377
    4. 'or' → logprob: -5.972343921661377
    5. 'os' → logprob: -5.972343921661377
    6. 'orer' → logprob: -6.472343921661377
    7. 'ed' → logprob: -6.472343921661377
    8. '```' → logprob: -6.972343921661377
    9. 'ot' → logprob: -7.097343921661377
    10. 'ri' → logprob: -7.097343921661377

Token 345: 'quer' (ID: 8054)
  Prédit: 'quer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quer' → logprob: -0.10183384269475937
    2. 'er' → logprob: -3.7268338203430176
    3. 'r' → logprob: -3.8518338203430176
    4. 'ri' → logprob: -4.226833820343018
    5. 'der' → logprob: -4.851833820343018
    6. 'ter' → logprob: -5.476833820343018
    7. 'cher' → logprob: -5.851833820343018
    8. 'rer' → logprob: -5.851833820343018
    9. '#' → logprob: -5.976833820343018
    10. 'ler' → logprob: -6.101833820343018

Token 346: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.353076696395874
    2. ' for' → logprob: -1.478076696395874
    3. 'for' → logprob: -3.228076696395874
    4. ' in' → logprob: -4.478076934814453
    5. ' dans' → logprob: -4.978076934814453
    6. ':' → logprob: -5.353076934814453
    7. 'in' → logprob: -6.478076934814453
    8. ',' → logprob: -6.603076934814453
    9. ' en' → logprob: -6.978076934814453
    10. '
' → logprob: -7.353076934814453

Token 347: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.10596700012683868
    2. ' B' → logprob: -2.4809670448303223
    3. 'range' → logprob: -4.605967044830322
    4. ' range' → logprob: -4.980967044830322
    5. ' ' → logprob: -11.855966567993164
    6. '(range' → logprob: -12.480966567993164
    7. 'Range' → logprob: -12.730966567993164
    8. '   ' → logprob: -12.980966567993164
    9. 'b' → logprob: -12.980966567993164
    10. ' la' → logprob: -14.293466567993164

Token 348: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.369202196598053
    2. ':' → logprob: -1.8692021369934082
    3. ' for' → logprob: -2.369202136993408
    4. 'for' → logprob: -3.369202136993408
    5. '  
' → logprob: -4.994202136993408
    6. ':
' → logprob: -5.119202136993408
    7. '
' → logprob: -5.119202136993408
    8. '    
' → logprob: -5.244202136993408
    9. ',' → logprob: -7.744202136993408
    10. '   
' → logprob: -7.744202136993408

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032445008400827646
    2. ' for' → logprob: -6.003244400024414
    3. 'for' → logprob: -8.253244400024414
    4. '    
' → logprob: -8.378244400024414
    5. ':' → logprob: -9.003244400024414
    6. '
' → logprob: -9.128244400024414
    7. '  
' → logprob: -10.878244400024414
    8. ',' → logprob: -11.753244400024414
    9. ':
' → logprob: -12.503244400024414
    10. '.' → logprob: -12.503244400024414

Token 350: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28163474798202515
    2. 'for' (adapté à ' for') → logprob: -1.53163480758667
    3. '   ' → logprob: -3.53163480758667
    4. '
' → logprob: -12.156634330749512
    5. '	for' → logprob: -12.406634330749512
    6. '    
' → logprob: -13.656634330749512
    7. ' ' → logprob: -14.406634330749512
    8. '```' → logprob: -14.781634330749512
    9. '  
' → logprob: -16.281635284423828
    10. '  ' → logprob: -16.531635284423828

Token 351: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07893606275320053
    2. 'i' → logprob: -2.5789361000061035
    3. '   ' → logprob: -10.578935623168945
    4. '	i' → logprob: -11.453935623168945
    5. '_i' → logprob: -12.203935623168945
    6. ' ' → logprob: -13.328935623168945
    7. '  ' → logprob: -13.828935623168945
    8. '```' → logprob: -15.078935623168945
    9. 'r' → logprob: -15.328935623168945
    10. ')' → logprob: -15.453935623168945

Token 352: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020591288805007935
    2. 'in' → logprob: -3.8955912590026855
    3. ' ' → logprob: -10.020591735839844
    4. '	in' → logprob: -13.520591735839844
    5. ' i' → logprob: -14.020591735839844
    6. '0' → logprob: -14.645591735839844
    7. '  ' → logprob: -15.020591735839844
    8. 'space' → logprob: -15.395591735839844
    9. '   ' → logprob: -15.645591735839844
    10. ')' → logprob: -15.770591735839844

Token 353: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31326204538345337
    2. ' range' → logprob: -1.3132619857788086
    3. '(range' → logprob: -15.938261985778809
    4. 'in' → logprob: -16.688262939453125
    5. '0' → logprob: -16.813262939453125
    6. ' in' → logprob: -17.188262939453125
    7. '	range' → logprob: -17.438262939453125
    8. ' ' → logprob: -17.813262939453125
    9. ')' → logprob: -17.938262939453125
    10. '   ' → logprob: -18.188262939453125

Token 354: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0025487891398370266
    2. '(' → logprob: -6.002548694610596
    3. ' (' → logprob: -9.627549171447754
    4. ' H' → logprob: -13.002549171447754
    5. 'H' → logprob: -13.002549171447754
    6. ' ' → logprob: -14.127549171447754
    7. '   ' → logprob: -14.502549171447754
    8. ')' → logprob: -14.627549171447754
    9. '0' → logprob: -15.627549171447754
    10. '((' → logprob: -15.877549171447754

Token 355: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01824476383626461
    2. '-' → logprob: -4.018244743347168
    3. '-h' → logprob: -9.393244743347168
    4. ' ' → logprob: -11.893244743347168
    5. '   ' → logprob: -12.393244743347168
    6. ')' → logprob: -15.518244743347168
    7. '):
' → logprob: -16.018245697021484
    8. '-H' → logprob: -16.643245697021484
    9. ' ' → logprob: -17.143245697021484
    10. '  ' → logprob: -17.268245697021484

Token 356: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.03804241120815277
    2. ' h' → logprob: -3.2880423069000244
    3. '(h' → logprob: -14.413042068481445
    4. '   ' → logprob: -16.038042068481445
    5. '	h' → logprob: -16.163042068481445
    6. ' ' → logprob: -16.663042068481445
    7. '<h' → logprob: -18.038042068481445
    8. '[h' → logprob: -18.538042068481445
    9. ')' → logprob: -19.788042068481445
    10. '"h' → logprob: -20.163042068481445

Token 357: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47407835721969604
    2. ' +' → logprob: -0.974078357219696
    3. '   ' → logprob: -13.849078178405762
    4. ' ' → logprob: -15.724078178405762
    5. '
' → logprob: -16.224079132080078
    6. '+
' → logprob: -16.724079132080078
    7. ')' → logprob: -17.849079132080078
    8. ' ' → logprob: -17.849079132080078
    9. ' +
' → logprob: -18.224079132080078
    10. ' plus' → logprob: -18.224079132080078

Token 358: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038038729690015316
    2. ' ' → logprob: -7.875380516052246
    3. '   ' → logprob: -15.625380516052246
    4. '```' → logprob: -18.31287956237793
    5. '  ' → logprob: -18.37537956237793
    6. '
' → logprob: -18.43787956237793
    7. ')' → logprob: -18.62537956237793
    8. ' ' → logprob: -18.75037956237793
    9. '+' → logprob: -19.18787956237793
    10. '    ' → logprob: -19.50037956237793

Token 359: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.125021934509277
    4. ')' → logprob: -17.43752098083496
    5. '  ' → logprob: -17.43752098083496
    6. '{' → logprob: -17.62502098083496
    7. '    ' → logprob: -17.68752098083496
    8. '```' → logprob: -17.93752098083496
    9. '=' → logprob: -18.12502098083496
    10. '１' → logprob: -18.25002098083496

Token 360: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004107727203518152
    2. '):
' → logprob: -5.50410795211792
    3. ' ):' → logprob: -11.129107475280762
    4. ')' → logprob: -12.004107475280762
    5. ':' → logprob: -12.129107475280762
    6. '):
' → logprob: -13.004107475280762
    7. '   ' → logprob: -15.004107475280762
    8. '):

' → logprob: -15.504107475280762
    9. ' ):
' → logprob: -16.504108428955078
    10. '+' → logprob: -17.254108428955078

Token 361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1840084046125412
    2. ':' → logprob: -2.6840083599090576
    3. '   ' → logprob: -2.8090083599090576
    4. ' for' → logprob: -3.3090083599090576
    5. 'for' → logprob: -6.559008598327637
    6. '<|end|>' → logprob: -8.059008598327637
    7. ':
' → logprob: -8.184008598327637
    8. '    ' → logprob: -8.309008598327637
    9. ' :' → logprob: -8.434008598327637
    10. ' ' → logprob: -8.934008598327637

Token 362: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08334469795227051
    2. '       ' → logprob: -3.4583446979522705
    3. 'for' (adapté à ' for') → logprob: -3.7083446979522705
    4. '   ' → logprob: -4.458344459533691
    5. ' ' → logprob: -4.833344459533691
    6. '           ' → logprob: -6.333344459533691
    7. '    ' → logprob: -6.458344459533691
    8. '        ' → logprob: -7.833344459533691
    9. '  ' → logprob: -8.958344459533691
    10. ' 
' → logprob: -9.083344459533691

Token 363: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5759425163269043
    2. ' j' → logprob: -0.8259425163269043
    3. '0' → logprob: -14.075942993164062
    4. '   ' → logprob: -14.325942993164062
    5. ' in' → logprob: -14.450942993164062
    6. 'range' → logprob: -15.325942993164062
    7. ' range' → logprob: -15.700942993164062
    8. '(j' → logprob: -16.325942993164062
    9. '_j' → logprob: -16.450942993164062
    10. ')' → logprob: -16.700942993164062

Token 364: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008630403317511082
    2. 'in' → logprob: -4.758630275726318
    3. '<|end|>' → logprob: -11.883630752563477
    4. ' ' → logprob: -12.508630752563477
    5. '    ' → logprob: -14.008630752563477
    6. 'In' → logprob: -14.383630752563477
    7. '	in' → logprob: -14.383630752563477
    8. '<|end|>' → logprob: -14.508630752563477
    9. ')' → logprob: -14.633630752563477
    10. '```' → logprob: -15.133630752563477

Token 365: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029750604182481766
    2. ' range' → logprob: -3.5297505855560303
    3. '(range' → logprob: -16.27975082397461
    4. ' ' → logprob: -18.40475082397461
    5. 'in' → logprob: -19.65475082397461
    6. '   ' → logprob: -19.90475082397461
    7. '	range' → logprob: -20.40475082397461
    8. '0' → logprob: -21.02975082397461
    9. ' in' → logprob: -21.40475082397461
    10. 'Range' → logprob: -21.65475082397461

Token 366: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -7.505351095460355e-05
    2. 'W' → logprob: -9.750075340270996
    3. ' (' → logprob: -11.500075340270996
    4. '(' → logprob: -13.000075340270996
    5. '(H' → logprob: -13.500075340270996
    6. 'range' → logprob: -13.625075340270996
    7. ' W' → logprob: -13.625075340270996
    8. '   ' → logprob: -15.250075340270996
    9. ' range' → logprob: -15.625075340270996
    10. ')' → logprob: -16.25007438659668

Token 367: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.001939938636496663
    2. '-' → logprob: -6.25193977355957
    3. '-w' → logprob: -11.50193977355957
    4. ')' → logprob: -14.62693977355957
    5. '   ' → logprob: -14.75193977355957
    6. ' ' → logprob: -15.75193977355957
    7. '-h' → logprob: -16.62693977355957
    8. '-j' → logprob: -16.75193977355957
    9. 'w' → logprob: -17.25193977355957
    10. '    ' → logprob: -17.87693977355957

Token 368: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.02330394648015499
    2. ' w' → logprob: -3.773303985595703
    3. '(w' → logprob: -9.773303985595703
    4. ' (' → logprob: -14.273303985595703
    5. '   ' → logprob: -14.648303985595703
    6. ' ' → logprob: -15.898303985595703
    7. 'j' → logprob: -16.148303985595703
    8. '	w' → logprob: -16.773303985595703
    9. '<w' → logprob: -17.273303985595703
    10. ')' → logprob: -17.398303985595703

Token 369: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25193122029304504
    2. ' +' → logprob: -1.5019311904907227
    3. '()+' → logprob: -14.376931190490723
    4. '):
' → logprob: -14.876931190490723
    5. '   ' → logprob: -15.376931190490723
    6. '):' → logprob: -15.376931190490723
    7. '1' → logprob: -15.376931190490723
    8. '+j' → logprob: -15.501931190490723
    9. ')+' → logprob: -16.25193214416504
    10. ')' → logprob: -16.37693214416504

Token 370: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013277375837787986
    2. ' ' → logprob: -6.6263275146484375
    3. ')' → logprob: -14.126327514648438
    4. '+' → logprob: -14.501327514648438
    5. '   ' → logprob: -15.126327514648438
    6. '```' → logprob: -15.501327514648438
    7. '0' → logprob: -16.751327514648438
    8. 'j' → logprob: -17.563827514648438
    9. '):
' → logprob: -18.251327514648438
    10. '`' → logprob: -18.376327514648438

Token 371: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.125005722045898
    3. '+' → logprob: -15.375005722045898
    4. '   ' → logprob: -16.7500057220459
    5. '```' → logprob: -17.2500057220459
    6. ')' → logprob: -17.3750057220459
    7. '2' → logprob: -19.0000057220459
    8. '0' → logprob: -19.5000057220459
    9. 'int' → logprob: -19.5000057220459
    10. 'j' → logprob: -19.7500057220459

Token 372: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0052634067833423615
    2. '):
' → logprob: -5.505263328552246
    3. ':' → logprob: -6.755263328552246
    4. ')' → logprob: -11.755263328552246
    5. '       ' → logprob: -12.505263328552246
    6. ' ):' → logprob: -12.505263328552246
    7. '           ' → logprob: -13.380263328552246
    8. '   ' → logprob: -14.005263328552246
    9. ':
' → logprob: -14.380263328552246
    10. '):
' → logprob: -14.630263328552246

Token 373: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026358263567090034
    2. ':' → logprob: -6.252635955810547
    3. '            
' → logprob: -7.752635955810547
    4. '<|end|>' → logprob: -9.627635955810547
    5. '       ' → logprob: -9.752635955810547
    6. '          ' → logprob: -10.627635955810547
    7. '
' → logprob: -11.127635955810547
    8. '               ' → logprob: -11.377635955810547
    9. '        
' → logprob: -11.377635955810547
    10. ' :' → logprob: -11.377635955810547

Token 374: ' #' (ID: 1069)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.36259469389915466
    2. '               ' → logprob: -2.3625946044921875
    3. 'matches' → logprob: -2.7375946044921875
    4. ' match' → logprob: -2.8625946044921875
    5. 'if' → logprob: -3.1125946044921875
    6. '           ' → logprob: -4.1125946044921875
    7. 'valid' → logprob: -4.9875946044921875
    8. 'matched' → logprob: -5.1125946044921875
    9. ' matches' → logprob: -5.3625946044921875
    10. ' if' → logprob: -5.6125946044921875

Token 375: ' Vér' (ID: 159169)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.020243922248482704
    2. 'if' → logprob: -5.270244121551514
    3. 'valid' → logprob: -5.520244121551514
    4. 'matches' → logprob: -5.770244121551514
    5. 'found' → logprob: -6.270244121551514
    6. 'possible' → logprob: -6.270244121551514
    7. 'ok' → logprob: -6.895244121551514
    8. '#' → logprob: -7.020244121551514
    9. 'cor' → logprob: -7.895244121551514
    10. 'sub' → logprob: -7.895244121551514

Token 376: 'ification' (ID: 3166)
  Prédit: 'ifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.006245276425033808
    2. 'if' → logprob: -5.131245136260986
    3. 'f' → logprob: -9.381245613098145
    4. 'ifie' → logprob: -9.881245613098145
    5. 'ifer' → logprob: -10.006245613098145
    6. 'er' → logprob: -10.256245613098145
    7. '           ' → logprob: -10.381245613098145
    8. 'ifiez' → logprob: -10.756245613098145
    9. '               ' → logprob: -11.631245613098145
    10. '   ' → logprob: -11.631245613098145

Token 377: ' que' (ID: 661)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28441277146339417
    2. ' if' → logprob: -1.7844127416610718
    3. ' match' → logprob: -3.7844128608703613
    4. ' complète' → logprob: -4.284412860870361
    5. ' flag' → logprob: -5.034412860870361
    6. ' =' → logprob: -5.284412860870361
    7. ' possible' → logprob: -5.284412860870361
    8. ' valid' → logprob: -5.409412860870361
    9. ' des' → logprob: -5.909412860870361
    10. 'match' → logprob: -6.034412860870361

Token 378: ' le' (ID: 505)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.8195079565048218
    2. 'B' → logprob: -1.0695079565048218
    3. 'all' → logprob: -1.6945079565048218
    4. ' B' → logprob: -3.4445080757141113
    5. '   ' → logprob: -8.944507598876953
    6. 'C' → logprob: -9.194507598876953
    7. ' ' → logprob: -9.569507598876953
    8. '[B' → logprob: -9.819507598876953
    9. ' any' → logprob: -10.444507598876953
    10. 'any' → logprob: -10.444507598876953

Token 379: ' sous' (ID: 14487)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.3453385829925537
    2. 'all' → logprob: -2.4703385829925537
    3. 'B' → logprob: -2.5953385829925537
    4. 'sub' → logprob: -2.9703385829925537
    5. 'matches' → logprob: -3.3453385829925537
    6. 'mot' → logprob: -4.595338821411133
    7. 's' → logprob: -4.595338821411133
    8. 'valid' → logprob: -4.845338821411133
    9. 'matched' → logprob: -5.470338821411133
    10. 'compatible' → logprob: -5.970338821411133

Token 380: '-' (ID: 12)
  Prédit: 'rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rectangle' → logprob: -0.8065205812454224
    2. '_rectangle' → logprob: -0.9315205812454224
    3. '           ' → logprob: -2.556520462036133
    4. '               ' → logprob: -3.306520462036133
    5. '_rect' → logprob: -4.056520462036133
    6. '-' → logprob: -4.181520462036133
    7. 'rect' → logprob: -4.806520462036133
    8. ' rectangle' → logprob: -7.181520462036133
    9. 'B' → logprob: -7.681520462036133
    10. 'match' → logprob: -7.681520462036133

Token 381: 'rectangle' (ID: 125332)
  Prédit: 'rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rectangle' → logprob: -0.00883673969656229
    2. 'B' → logprob: -4.88383674621582
    3. 'rect' → logprob: -6.88383674621582
    4. 'for' → logprob: -9.13383674621582
    5. 'mat' → logprob: -10.88383674621582
    6. 'matrix' → logprob: -10.88383674621582
    7. ' B' → logprob: -11.50883674621582
    8. 'b' → logprob: -11.50883674621582
    9. '```' → logprob: -11.88383674621582
    10. ' rectangle' → logprob: -12.13383674621582

Token 382: ' B' (ID: 418)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.9721183180809021
    2. ' de' → logprob: -1.2221183776855469
    3. '           ' → logprob: -1.7221183776855469
    4. 'B' → logprob: -2.222118377685547
    5. ' of' → logprob: -4.347118377685547
    6. 'match' → logprob: -5.472118377685547
    7. 'correct' → logprob: -5.972118377685547
    8. 'all' → logprob: -5.972118377685547
    9. 'of' → logprob: -6.222118377685547
    10. ' B' → logprob: -6.222118377685547

Token 383: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8519087433815002
    2. 'matches' → logprob: -1.3519086837768555
    3. '           ' → logprob: -1.8519086837768555
    4. '[' → logprob: -2.9769086837768555
    5. 'match' → logprob: -3.2269086837768555
    6. ' matches' → logprob: -3.3519086837768555
    7. '[
' → logprob: -4.9769086837768555
    8. '_matches' → logprob: -5.7269086837768555
    9. '_match' → logprob: -5.8519086837768555
    10. '[j' → logprob: -5.9769086837768555

Token 384: ':i' (ID: 34041)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.035525981336832047
    2. '+i' → logprob: -3.9105260372161865
    3. '+j' → logprob: -5.160525798797607
    4. '+k' → logprob: -5.660525798797607
    5. ' +' → logprob: -5.785525798797607
    6. '+' → logprob: -6.535525798797607
    7. ']' → logprob: -8.035526275634766
    8. '[i' → logprob: -8.410526275634766
    9. '+m' → logprob: -8.660526275634766
    10. '[j' → logprob: -9.160526275634766

Token 385: '+h' (ID: 150992)
  Prédit: '+h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+h' → logprob: -0.007408681325614452
    2. '+' → logprob: -5.382408618927002
    3. ' +' → logprob: -6.132408618927002
    4. '][' → logprob: -8.00740909576416
    5. '+i' → logprob: -8.75740909576416
    6. 'h' → logprob: -9.63240909576416
    7. '+j' → logprob: -10.13240909576416
    8. '+k' → logprob: -12.25740909576416
    9. '+t' → logprob: -12.63240909576416
    10. '+m' → logprob: -13.38240909576416

Token 386: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0014447571011260152
    2. ']' → logprob: -7.3764448165893555
    3. ',' → logprob: -7.5014448165893555
    4. ',j' → logprob: -9.501444816589355
    5. '[i' → logprob: -9.876444816589355
    6. ' ][' → logprob: -9.876444816589355
    7. ',i' → logprob: -10.626444816589355
    8. '   ' → logprob: -10.751444816589355
    9. '[j' → logprob: -11.126444816589355
    10. ' ,' → logprob: -11.751444816589355

Token 387: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.790129555156454e-05
    2. '][' → logprob: -10.125067710876465
    3. ' j' → logprob: -10.750067710876465
    4. 'k' → logprob: -13.375067710876465
    5. '   ' → logprob: -14.125067710876465
    6. '```' → logprob: -14.125067710876465
    7. '[j' → logprob: -14.250067710876465
    8. ']' → logprob: -14.500067710876465
    9. '
' → logprob: -14.750067710876465
    10. ':j' → logprob: -14.875067710876465

Token 388: ':j' (ID: 123557)
  Prédit: ':j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':j' → logprob: -0.005319616291671991
    2. '+j' → logprob: -6.130319595336914
    3. '][' → logprob: -6.755319595336914
    4. ':' → logprob: -6.880319595336914
    5. ' :' → logprob: -8.130319595336914
    6. '+' → logprob: -8.630319595336914
    7. ' +' → logprob: -9.130319595336914
    8. 'j' → logprob: -9.505319595336914
    9. '   ' → logprob: -9.630319595336914
    10. ',j' → logprob: -9.880319595336914

Token 389: '+w' (ID: 155687)
  Prédit: '+w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+w' → logprob: -0.002543439855799079
    2. '+j' → logprob: -6.0025434494018555
    3. '+' → logprob: -10.377543449401855
    4. ' +' → logprob: -10.877543449401855
    5. '+h' → logprob: -11.127543449401855
    6. 'w' → logprob: -13.877543449401855
    7. '+k' → logprob: -14.627543449401855
    8. '+
' → logprob: -15.377543449401855
    9. ':w' → logprob: -15.502543449401855
    10. '+i' → logprob: -15.502543449401855

Token 390: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002528575947508216
    2. ']==' → logprob: -6.877528667449951
    3. '][' → logprob: -7.877528667449951
    4. ' ]' → logprob: -8.252528190612793
    5. '])' → logprob: -8.252528190612793
    6. ']
' → logprob: -8.627528190612793
    7. '           ' → logprob: -8.627528190612793
    8. '   ' → logprob: -9.752528190612793
    9. '       ' → logprob: -10.252528190612793
    10. '][:' → logprob: -11.127528190612793

Token 391: ' correspond' (ID: 11095)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.14718759059906
    2. ' matches' → logprob: -1.27218759059906
    3. '==' → logprob: -1.39718759059906
    4. 'matches' → logprob: -2.5221877098083496
    5. '           ' → logprob: -3.0221877098083496
    6. ']==' → logprob: -4.64718770980835
    7. '               ' → logprob: -5.14718770980835
    8. ' corresponds' → logprob: -6.14718770980835
    9. 'match' → logprob: -6.52218770980835
    10. ' match' → logprob: -6.52218770980835

Token 392: ' exactement' (ID: 108701)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14592748880386353
    2. '               ' → logprob: -2.8959274291992188
    3. ' exactement' → logprob: -3.1459274291992188
    4. 'exact' → logprob: -4.145927429199219
    5. ' exactly' → logprob: -5.395927429199219
    6. ' à' → logprob: -5.645927429199219
    7. '_exact' → logprob: -5.770927429199219
    8. '            ' → logprob: -6.145927429199219
    9. 'à' → logprob: -6.395927429199219
    10. ' ==' → logprob: -6.520927429199219

Token 393: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04622606188058853
    2. ' à' → logprob: -4.0462260246276855
    3. 'à' → logprob: -4.2962260246276855
    4. '               ' → logprob: -4.4212260246276855
    5. ' aux' → logprob: -7.2962260246276855
    6. 'to' → logprob: -8.171226501464844
    7. '            ' → logprob: -8.546226501464844
    8. ',' → logprob: -8.671226501464844
    9. 'au' → logprob: -8.921226501464844
    10. '   ' → logprob: -8.921226501464844

Token 394: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.008889674209058285
    2. ' C' → logprob: -5.008889675140381
    3. '[C' → logprob: -7.008889675140381
    4. '[' → logprob: -7.258889675140381
    5. ' [' → logprob: -8.758889198303223
    6. 'True' → logprob: -9.008889198303223
    7. '[
' → logprob: -9.258889198303223
    8. '[[' → logprob: -9.508889198303223
    9. '   ' → logprob: -10.133889198303223
    10. ' True' → logprob: -11.383889198303223

Token 395: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027762170881032944
    2. ':' → logprob: -3.7777621746063232
    3. '            
' → logprob: -6.152761936187744
    4. ':
' → logprob: -6.777761936187744
    5. '               ' → logprob: -7.027761936187744
    6. ',' → logprob: -9.402762413024902
    7. '            ' → logprob: -10.277762413024902
    8. ' and' → logprob: -10.402762413024902
    9. '       ' → logprob: -10.652762413024902
    10. ' if' → logprob: -10.652762413024902

Token 396: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029964817222207785
    2. '            
' → logprob: -6.627996444702148
    3. ':' → logprob: -6.877996444702148
    4. '               ' → logprob: -7.877996444702148
    5. ':
' → logprob: -9.377996444702148
    6. '            ' → logprob: -10.252996444702148
    7. '       ' → logprob: -11.252996444702148
    8. ',' → logprob: -11.252996444702148
    9. '          ' → logprob: -11.377996444702148
    10. ' and' → logprob: -11.502996444702148

Token 397: ' match' (ID: 3981)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' (adapté à ' match') → logprob: -0.05382538586854935
    2. 'if' → logprob: -3.5538253784179688
    3. '           ' → logprob: -4.303825378417969
    4. 'matches' → logprob: -5.053825378417969
    5. 'valid' → logprob: -6.178825378417969
    6. 'matched' → logprob: -7.303825378417969
    7. ' match' → logprob: -7.553825378417969
    8. 'cor' → logprob: -8.553825378417969
    9. 'matching' → logprob: -9.053825378417969
    10. ' if' → logprob: -9.803825378417969

Token 398: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42881307005882263
    2. '=' → logprob: -1.053813099861145
    3. '_' → logprob: -10.678812980651855
    4. '   ' → logprob: -10.803812980651855
    5. '=True' → logprob: -10.803812980651855
    6. '_found' → logprob: -10.803812980651855
    7. '=False' → logprob: -12.053812980651855
    8. '_=' → logprob: -12.178812980651855
    9. ':' → logprob: -12.303812980651855
    10. ' ' → logprob: -12.928812980651855

Token 399: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.001176416757516563
    2. ' True' → logprob: -6.751176357269287
    3. 'all' → logprob: -12.001176834106445
    4. '(True' → logprob: -16.751176834106445
    5. '   ' → logprob: -17.001176834106445
    6. ' all' → logprob: -17.751176834106445
    7. '           ' → logprob: -18.751176834106445
    8. 'true' → logprob: -19.751176834106445
    9. '       ' → logprob: -19.751176834106445
    10. '=True' → logprob: -20.376176834106445

Token 400: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019837100990116596
    2. '            
' → logprob: -6.876983642578125
    3. '<|end|>' → logprob: -7.501983642578125
    4. '
' → logprob: -8.126983642578125
    5. '<|end|>' → logprob: -10.626983642578125
    6. '               ' → logprob: -10.751983642578125
    7. '            ' → logprob: -11.626983642578125
    8. ',' → logprob: -11.876983642578125
    9. '		' → logprob: -12.376983642578125
    10. ' for' → logprob: -12.376983642578125

Token 401: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.070975071750581e-05
    2. '            
' → logprob: -10.875030517578125
    3. '<|end|>' → logprob: -12.125030517578125
    4. '               ' → logprob: -13.375030517578125
    5. '		' → logprob: -14.125030517578125
    6. ' for' → logprob: -14.250030517578125
    7. '          ' → logprob: -14.500030517578125
    8. '
' → logprob: -14.500030517578125
    9. '	       ' → logprob: -14.500030517578125
    10. '       ' → logprob: -14.875030517578125

Token 402: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11882026493549347
    2. 'for' (adapté à ' for') → logprob: -2.3688201904296875
    3. ' for' → logprob: -3.9938201904296875
    4. '       ' → logprob: -12.868820190429688
    5. '		' → logprob: -13.243820190429688
    6. '	for' → logprob: -13.368820190429688
    7. '            
' → logprob: -13.368820190429688
    8. '               ' → logprob: -13.618820190429688
    9. '	       ' → logprob: -13.743820190429688
    10. '   ' → logprob: -14.118820190429688

Token 403: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011616185307502747
    2. 'di' → logprob: -4.511616230010986
    3. 'ii' → logprob: -8.511615753173828
    4. 'dx' → logprob: -8.761615753173828
    5. ' x' → logprob: -9.511615753173828
    6. 'r' → logprob: -10.011615753173828
    7. 'dh' → logprob: -10.261615753173828
    8. 'k' → logprob: -10.761615753173828
    9. ' di' → logprob: -11.386615753173828
    10. 'pi' → logprob: -11.636615753173828

Token 404: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031855558045208454
    2. 'in' → logprob: -5.753185749053955
    3. '	in' → logprob: -13.503185272216797
    4. ')' → logprob: -13.753185272216797
    5. ' ' → logprob: -13.878185272216797
    6. '   ' → logprob: -14.003185272216797
    7. '           ' → logprob: -14.503185272216797
    8. 'In' → logprob: -14.628185272216797
    9. 'range' → logprob: -14.878185272216797
    10. 'd' → logprob: -15.378185272216797

Token 405: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011047814972698689
    2. ' range' → logprob: -4.511047840118408
    3. '   ' → logprob: -18.01104736328125
    4. '(range' → logprob: -18.01104736328125
    5. ' ' → logprob: -18.38604736328125
    6. '	range' → logprob: -19.01104736328125
    7. '0' → logprob: -19.38604736328125
    8. 'in' → logprob: -20.01104736328125
    9. ')' → logprob: -20.26104736328125
    10. '```' → logprob: -21.13604736328125

Token 406: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.020600277930498123
    2. 'h' → logprob: -3.8956003189086914
    3. ' h' → logprob: -10.145600318908691
    4. '(' → logprob: -11.020600318908691
    5. ' (' → logprob: -14.145600318908691
    6. '	h' → logprob: -14.520600318908691
    7. '   ' → logprob: -15.020600318908691
    8. '(
' → logprob: -15.270600318908691
    9. '           ' → logprob: -15.270600318908691
    10. '[h' → logprob: -15.520600318908691

Token 407: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.043093740940093994
    2. '):' → logprob: -3.168093681335449
    3. '           ' → logprob: -10.41809368133545
    4. '               ' → logprob: -10.66809368133545
    5. '       ' → logprob: -11.29309368133545
    6. ':
' → logprob: -11.54309368133545
    7. ':' → logprob: -11.54309368133545
    8. '   ' → logprob: -12.41809368133545
    9. '):
' → logprob: -13.16809368133545
    10. ')' → logprob: -13.66809368133545

Token 408: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00014847563579678535
    2. '           ' → logprob: -10.00014877319336
    3. '<|end|>' → logprob: -10.87514877319336
    4. '       ' → logprob: -11.00014877319336
    5. '	           ' → logprob: -11.00014877319336
    6. '			' → logprob: -11.87514877319336
    7. '                ' → logprob: -12.12514877319336
    8. '                
' → logprob: -12.25014877319336
    9. '		       ' → logprob: -12.25014877319336
    10. ':' → logprob: -12.37514877319336

Token 409: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14007019996643066
    2. ' for' → logprob: -2.2650701999664307
    3. 'for' (adapté à ' for') → logprob: -3.7650701999664307
    4. '           ' → logprob: -6.515069961547852
    5. ' if' → logprob: -6.890069961547852
    6. 'if' → logprob: -7.640069961547852
    7. '                   ' → logprob: -7.890069961547852
    8. '	           ' → logprob: -8.890069961547852
    9. '	for' → logprob: -9.890069961547852
    10. '   ' → logprob: -9.890069961547852

Token 410: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0019289902411401272
    2. ' y' → logprob: -6.251928806304932
    3. 'k' → logprob: -15.00192928314209
    4. 'x' → logprob: -17.501928329467773
    5. '	y' → logprob: -17.501928329467773
    6. '   ' → logprob: -17.751928329467773
    7. ' ' → logprob: -18.376928329467773
    8. 'w' → logprob: -18.501928329467773
    9. 'z' → logprob: -18.876928329467773
    10. '_y' → logprob: -19.001928329467773

Token 411: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0040831477381289005
    2. 'in' → logprob: -5.504083156585693
    3. ')' → logprob: -13.004082679748535
    4. ' ' → logprob: -13.879082679748535
    5. 'In' → logprob: -14.879082679748535
    6. '<|end|>' → logprob: -14.879082679748535
    7. '	in' → logprob: -16.25408363342285
    8. '                   ' → logprob: -16.62908363342285
    9. '    ' → logprob: -16.75408363342285
    10. '+' → logprob: -16.87908363342285

Token 412: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03917456418275833
    2. ' range' → logprob: -3.2891745567321777
    3. 'w' → logprob: -6.789174556732178
    4. '(range' → logprob: -12.414175033569336
    5. '(w' → logprob: -13.539175033569336
    6. ' w' → logprob: -13.664175033569336
    7. '<w' → logprob: -18.539175033569336
    8. '	range' → logprob: -18.789175033569336
    9. '[w' → logprob: -18.914175033569336
    10. '       ' → logprob: -19.539175033569336

Token 413: '(w' (ID: 7420)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6932947635650635
    2. '(w' → logprob: -0.6932947635650635
    3. ' w' → logprob: -9.193294525146484
    4. '               ' → logprob: -10.818294525146484
    5. '(' → logprob: -11.693294525146484
    6. '           ' → logprob: -12.193294525146484
    7. '                   ' → logprob: -12.693294525146484
    8. '<w' → logprob: -13.193294525146484
    9. ' (' → logprob: -13.568294525146484
    10. '       ' → logprob: -13.693294525146484

Token 414: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2841304838657379
    2. '):' → logprob: -1.4091304540634155
    3. '+' → logprob: -6.284130573272705
    4. '                   ' → logprob: -7.784130573272705
    5. ')' → logprob: -8.034130096435547
    6. ':' → logprob: -9.284130096435547
    7. '               ' → logprob: -9.284130096435547
    8. '                           ' → logprob: -10.784130096435547
    9. '):
' → logprob: -11.034130096435547
    10. '```' → logprob: -11.034130096435547

Token 415: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00028398085851222277
    2. '               ' → logprob: -8.875284194946289
    3. '                       ' → logprob: -10.000284194946289
    4. '                    ' → logprob: -10.500284194946289
    5. '                    
' → logprob: -10.500284194946289
    6. '                           ' → logprob: -11.375284194946289
    7. '           ' → logprob: -11.375284194946289
    8. '                  ' → logprob: -11.750284194946289
    9. '                 ' → logprob: -13.000284194946289
    10. '                ' → logprob: -13.000284194946289

Token 416: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5896188020706177
    2. 'if' (adapté à ' if') → logprob: -1.3396188020706177
    3. ' if' → logprob: -1.8396188020706177
    4. '                   ' → logprob: -3.714618682861328
    5. '                           ' → logprob: -9.339618682861328
    6. '               ' → logprob: -9.464618682861328
    7. '                               ' → logprob: -10.464618682861328
    8. '           ' → logprob: -10.964618682861328
    9. '                     ' → logprob: -11.339618682861328
    10. '   ' → logprob: -11.464618682861328

Token 417: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.34848538041114807
    2. 'B' → logprob: -1.2234853506088257
    3. '                   ' → logprob: -10.473484992980957
    4. ' not' → logprob: -12.223484992980957
    5. '               ' → logprob: -13.098484992980957
    6. '                       ' → logprob: -13.973484992980957
    7. '                           ' → logprob: -14.098484992980957
    8. '           ' → logprob: -14.348484992980957
    9. '                    ' → logprob: -14.348484992980957
    10. 'not' → logprob: -14.723484992980957

Token 418: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. ' [' → logprob: -15.250000953674316
    3. '           ' → logprob: -15.875000953674316
    4. 'i' → logprob: -16.125
    5. '[' → logprob: -16.5
    6. '][' → logprob: -16.75
    7. '               ' → logprob: -16.75
    8. '[x' → logprob: -16.875
    9. '   ' → logprob: -17.625
    10. '                   ' → logprob: -17.625

Token 419: ' +' (ID: 659)
  Prédit: '+x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+x' → logprob: -0.09889271855354309
    2. '+' → logprob: -2.5988926887512207
    3. ' +' → logprob: -4.098892688751221
    4. '][' → logprob: -5.848892688751221
    5. '[x' → logprob: -8.598893165588379
    6. '+i' → logprob: -9.223893165588379
    7. '+y' → logprob: -10.723893165588379
    8. '+t' → logprob: -12.223893165588379
    9. ']' → logprob: -12.348893165588379
    10. '+k' → logprob: -12.723893165588379

Token 420: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12709976732730865
    2. 'j' → logprob: -2.1270997524261475
    3. 'y' → logprob: -9.127099990844727
    4. ' x' → logprob: -10.127099990844727
    5. ' j' → logprob: -11.627099990844727
    6. '   ' → logprob: -12.377099990844727
    7. ' ' → logprob: -12.502099990844727
    8. '```' → logprob: -13.127099990844727
    9. '           ' → logprob: -14.752099990844727
    10. '	x' → logprob: -14.877099990844727

Token 421: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0048558651469647884
    2. '[j' → logprob: -5.629855632781982
    3. '+' → logprob: -7.629855632781982
    4. '+j' → logprob: -7.629855632781982
    5. ' +' → logprob: -8.75485610961914
    6. ']' → logprob: -9.87985610961914
    7. ' ][' → logprob: -10.25485610961914
    8. '[' → logprob: -10.75485610961914
    9. '   ' → logprob: -12.62985610961914
    10. ']][' → logprob: -12.75485610961914

Token 422: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.718606891809031e-05
    2. ' j' → logprob: -9.625066757202148
    3. '   ' → logprob: -14.625066757202148
    4. '[j' → logprob: -15.500066757202148
    5. '                   ' → logprob: -16.00006675720215
    6. '	j' → logprob: -16.50006675720215
    7. '(j' → logprob: -17.25006675720215
    8. ']' → logprob: -17.87506675720215
    9. '           ' → logprob: -17.87506675720215
    10. ':j' → logprob: -18.12506675720215

Token 423: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016675150021910667
    2. ' +' → logprob: -4.141674995422363
    3. '+y' → logprob: -7.391674995422363
    4. '+j' → logprob: -10.766674995422363
    5. 'y' → logprob: -13.516674995422363
    6. '＋' → logprob: -14.266674995422363
    7. ']' → logprob: -14.266674995422363
    8. '][' → logprob: -16.01667594909668
    9. '   ' → logprob: -16.14167594909668
    10. ']+' → logprob: -16.14167594909668

Token 424: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.157039049663581e-05
    2. ' y' → logprob: -9.875051498413086
    3. '	y' → logprob: -17.250051498413086
    4. '+y' → logprob: -17.500051498413086
    5. ''y' → logprob: -17.875051498413086
    6. '   ' → logprob: -18.500051498413086
    7. ' ' → logprob: -19.625051498413086
    8. ')y' → logprob: -19.875051498413086
    9. '           ' → logprob: -20.250051498413086
    10. '                   ' → logprob: -20.375051498413086

Token 425: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2657213807106018
    2. ']!=' → logprob: -2.015721321105957
    3. '!=' → logprob: -2.390721321105957
    4. ' !=' → logprob: -4.890721321105957
    5. ' ]' → logprob: -6.890721321105957
    6. ')!=' → logprob: -10.890721321105957
    7. '```' → logprob: -13.140721321105957
    8. '()!=' → logprob: -13.765721321105957
    9. ']==' → logprob: -13.890721321105957
    10. ')' → logprob: -14.140721321105957

Token 426: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.014240606687963009
    2. ' !=' → logprob: -4.264240741729736
    3. ']!=' → logprob: -9.639240264892578
    4. ')!=' → logprob: -11.639240264892578
    5. '()!=' → logprob: -13.639240264892578
    6. '!==' → logprob: -13.764240264892578
    7. ']' → logprob: -14.389240264892578
    8. '==' → logprob: -16.514240264892578
    9. '```' → logprob: -16.514240264892578
    10. '!=(' → logprob: -16.514240264892578

Token 427: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.07889155298471451
    2. ' C' → logprob: -2.5788915157318115
    3. '                   ' → logprob: -13.45389175415039
    4. '                           ' → logprob: -15.95389175415039
    5. '   ' → logprob: -16.45389175415039
    6. '                       ' → logprob: -16.70389175415039
    7. '	C' → logprob: -16.70389175415039
    8. ' ' → logprob: -16.82889175415039
    9. '               ' → logprob: -17.57889175415039
    10. '                    ' → logprob: -17.82889175415039

Token 428: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.2519526183605194
    2. '[i' → logprob: -1.5019526481628418
    3. '[' → logprob: -11.626952171325684
    4. 'x' → logprob: -12.126952171325684
    5. '[j' → logprob: -12.626952171325684
    6. 'i' → logprob: -13.501952171325684
    7. '[y' → logprob: -13.751952171325684
    8. '   ' → logprob: -13.876952171325684
    9. '][' → logprob: -14.001952171325684
    10. '```' → logprob: -14.626952171325684

Token 429: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004038593906443566
    2. '[y' → logprob: -7.875403881072998
    3. ' ][' → logprob: -11.37540340423584
    4. ']' → logprob: -12.37540340423584
    5. '[' → logprob: -12.62540340423584
    6. 'y' → logprob: -12.75040340423584
    7. '[j' → logprob: -14.12540340423584
    8. ' [' → logprob: -15.37540340423584
    9. '"][' → logprob: -15.62540340423584
    10. '           ' → logprob: -15.75040340423584

Token 430: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.848420551046729e-05
    2. ' y' → logprob: -9.7500581741333
    3. '	y' → logprob: -16.875059127807617
    4. ' ' → logprob: -17.375059127807617
    5. '   ' → logprob: -17.625059127807617
    6. ']' → logprob: -18.125059127807617
    7. ')y' → logprob: -19.125059127807617
    8. '  ' → logprob: -19.625059127807617
    9. '                   ' → logprob: -19.875059127807617
    10. '    ' → logprob: -19.875059127807617

Token 431: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6414064764976501
    2. ']:' → logprob: -0.8914064764976501
    3. ']:
' → logprob: -3.891406536102295
    4. ':
' → logprob: -4.266406536102295
    5. '):' → logprob: -4.391406536102295
    6. '                       ' → logprob: -5.391406536102295
    7. '                   ' → logprob: -5.641406536102295
    8. '):
' → logprob: -5.766406536102295
    9. ']' → logprob: -6.391406536102295
    10. '<|end|>' → logprob: -7.266406536102295

Token 432: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0017143317963927984
    2. '                           ' → logprob: -6.50171422958374
    3. '                               ' → logprob: -9.126714706420898
    4. '                        
' → logprob: -10.251714706420898
    5. '                   ' → logprob: -10.501714706420898
    6. '                        ' → logprob: -10.626714706420898
    7. '                      ' → logprob: -12.751714706420898
    8. '               ' → logprob: -12.876714706420898
    9. '                     ' → logprob: -13.251714706420898
    10. '                         ' → logprob: -13.501714706420898

Token 433: ' match' (ID: 3981)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' (adapté à ' match') → logprob: -0.00038586699520237744
    2. ' match' → logprob: -8.000386238098145
    3. '                           ' → logprob: -10.000386238098145
    4. '                       ' → logprob: -12.375386238098145
    5. '                               ' → logprob: -15.500386238098145
    6. '	match' → logprob: -15.875386238098145
    7. '           ' → logprob: -16.250385284423828
    8. '
' → logprob: -16.250385284423828
    9. '                   ' → logprob: -16.500385284423828
    10. '               ' → logprob: -16.750385284423828

Token 434: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47975772619247437
    2. '=' → logprob: -0.9797577261924744
    3. '=False' → logprob: -5.229757785797119
    4. '=True' → logprob: -8.229757308959961
    5. '                           ' → logprob: -10.729757308959961
    6. '                               ' → logprob: -11.354757308959961
    7. '                       ' → logprob: -13.104757308959961
    8. '=false' → logprob: -13.354757308959961
    9. '=
' → logprob: -13.479757308959961
    10. '                                   ' → logprob: -13.479757308959961

Token 435: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.011047814972698689
    2. ' False' → logprob: -4.511047840118408
    3. '(False' → logprob: -19.63604736328125
    4. '=False' → logprob: -19.76104736328125
    5. '_false' → logprob: -21.51104736328125
    6. '.False' → logprob: -22.76104736328125
    7. 'false' → logprob: -23.76104736328125
    8. 'True' → logprob: -25.01104736328125
    9. '   ' → logprob: -25.13604736328125
    10. '_FALSE' → logprob: -25.38604736328125

Token 436: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0004026673559565097
    2. '                        
' → logprob: -8.375402450561523
    3. '                        ' → logprob: -9.000402450561523
    4. '<|end|>' → logprob: -10.750402450561523
    5. '                           ' → logprob: -11.250402450561523
    6. '                   ' → logprob: -12.875402450561523
    7. '                      ' → logprob: -12.875402450561523
    8. '               ' → logprob: -13.500402450561523
    9. '
' → logprob: -13.625402450561523
    10. '                     ' → logprob: -13.625402450561523

Token 437: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0009919608710333705
    2. '                        
' → logprob: -7.5009918212890625
    3. '                        ' → logprob: -8.000991821289062
    4. '                           ' → logprob: -10.000991821289062
    5. '<|end|>' → logprob: -10.625991821289062
    6. '                   ' → logprob: -11.500991821289062
    7. '                      ' → logprob: -11.875991821289062
    8. '                    ' → logprob: -13.000991821289062
    9. '```' → logprob: -13.125991821289062
    10. '               ' → logprob: -13.125991821289062

Token 438: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.017890965566039085
    2. ' break' → logprob: -4.517890930175781
    3. '                       ' → logprob: -5.017890930175781
    4. '                           ' → logprob: -9.267890930175781
    5. '                               ' → logprob: -9.392890930175781
    6. '                   ' → logprob: -11.642890930175781
    7. '	break' → logprob: -12.267890930175781
    8. '                                   ' → logprob: -13.142890930175781
    9. '
' → logprob: -13.267890930175781
    10. '                                       ' → logprob: -13.392890930175781

Token 439: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20182961225509644
    2. '                
' → logprob: -3.201829671859741
    3. '  
' → logprob: -3.326829671859741
    4. ' 
' → logprob: -3.576829671859741
    5. '                ' → logprob: -4.076829433441162
    6. '           ' → logprob: -4.701829433441162
    7. '
' → logprob: -4.826829433441162
    8. '                   ' → logprob: -4.951829433441162
    9. '                        
' → logprob: -4.951829433441162
    10. '                    
' → logprob: -5.076829433441162

Token 440: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0321262925863266
    2. '                ' → logprob: -4.407126426696777
    3. '           ' → logprob: -5.407126426696777
    4. '                   ' → logprob: -5.532126426696777
    5. '<|end|>' → logprob: -5.782126426696777
    6. '                
' → logprob: -6.282126426696777
    7. '                        
' → logprob: -6.532126426696777
    8. '                    
' → logprob: -7.157126426696777
    9. '              ' → logprob: -7.282126426696777
    10. '            ' → logprob: -7.407126426696777

Token 441: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005690688267350197
    2. '               ' → logprob: -5.505690574645996
    3. '            ' → logprob: -6.755690574645996
    4. '       ' → logprob: -9.380690574645996
    5. '                   ' → logprob: -9.505690574645996
    6. '          ' → logprob: -9.755690574645996
    7. '             ' → logprob: -9.880690574645996
    8. '                ' → logprob: -10.005690574645996
    9. '                       ' → logprob: -10.255690574645996
    10. '         ' → logprob: -10.630690574645996

Token 442: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.47409260272979736
    2. ' not' → logprob: -0.9740926027297974
    3. '               ' → logprob: -11.849092483520508
    4. '                   ' → logprob: -12.349092483520508
    5. '                       ' → logprob: -13.474092483520508
    6. '           ' → logprob: -13.849092483520508
    7. '   ' → logprob: -14.599092483520508
    8. '	not' → logprob: -14.849092483520508
    9. 'n' → logprob: -15.224092483520508
    10. '
' → logprob: -15.474092483520508

Token 443: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.0380416102707386
    2. 'match' → logprob: -3.288041591644287
    3. '	match' → logprob: -16.788042068481445
    4. '(match' → logprob: -17.163042068481445
    5. ' ' → logprob: -18.413042068481445
    6. ' ' → logprob: -18.538042068481445
    7. '_match' → logprob: -19.163042068481445
    8. ' break' → logprob: -19.288042068481445
    9. '   ' → logprob: -19.663042068481445
    10. '                       ' → logprob: -19.788042068481445

Token 444: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15124207735061646
    2. ':
' → logprob: -2.2762420177459717
    3. ':' → logprob: -3.4012420177459717
    4. '                       ' → logprob: -5.526242256164551
    5. '               ' → logprob: -8.15124225616455
    6. '                           ' → logprob: -10.52624225616455
    7. '           ' → logprob: -10.77624225616455
    8. '                  ' → logprob: -11.40124225616455
    9. 'break' → logprob: -11.52624225616455
    10. '                 ' → logprob: -12.27624225616455

Token 445: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005353651940822601
    2. '                       ' → logprob: -5.2553534507751465
    3. '               ' → logprob: -9.380353927612305
    4. ' break' → logprob: -10.880353927612305
    5. '           ' → logprob: -12.130353927612305
    6. '                    ' → logprob: -12.755353927612305
    7. '                 ' → logprob: -13.130353927612305
    8. '                  ' → logprob: -13.255353927612305
    9. '                           ' → logprob: -13.380353927612305
    10. '                     ' → logprob: -14.130353927612305

Token 446: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.32224491238594055
    2. 'break' (adapté à ' break') → logprob: -1.8222448825836182
    3. ' break' → logprob: -2.322244882583618
    4. '                       ' → logprob: -4.197245121002197
    5. '               ' → logprob: -7.322245121002197
    6. '           ' → logprob: -10.822244644165039
    7. '	break' → logprob: -11.072244644165039
    8. '                           ' → logprob: -11.697244644165039
    9. '   ' → logprob: -11.697244644165039
    10. '                 ' → logprob: -13.197244644165039

Token 447: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007086760830134153
    2. '            
' → logprob: -5.132086753845215
    3. '
' → logprob: -7.632086753845215
    4. '          ' → logprob: -8.757086753845215
    5. '    
' → logprob: -9.507086753845215
    6. '  
' → logprob: -9.632086753845215
    7. '                        
' → logprob: -9.882086753845215
    8. '           
' → logprob: -9.882086753845215
    9. '            ' → logprob: -10.007086753845215
    10. '                    
' → logprob: -10.257086753845215

Token 448: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006225967314094305
    2. '            
' → logprob: -5.131226062774658
    3. '
' → logprob: -9.1312255859375
    4. '    
' → logprob: -10.0062255859375
    5. '          ' → logprob: -10.0062255859375
    6. '        
' → logprob: -10.2562255859375
    7. '            ' → logprob: -11.1312255859375
    8. '           
' → logprob: -11.5062255859375
    9. '  
' → logprob: -11.7562255859375
    10. '                    
' → logprob: -11.8812255859375

Token 449: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.771655115589965e-05
    2. '       ' → logprob: -11.375018119812012
    3. 'if' (adapté à ' if') → logprob: -13.250018119812012
    4. '            
' → logprob: -13.500018119812012
    5. '          ' → logprob: -13.750018119812012
    6. '   ' → logprob: -14.250018119812012
    7. '               ' → logprob: -14.500018119812012
    8. '		' → logprob: -14.875018119812012
    9. '         ' → logprob: -15.625018119812012
    10. '	       ' → logprob: -16.375017166137695

Token 450: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.00034535606391727924
    2. 'match' → logprob: -8.000345230102539
    3. ' ' → logprob: -11.875345230102539
    4. ' not' → logprob: -13.375345230102539
    5. ' ' → logprob: -14.625345230102539
    6. '	match' → logprob: -14.750345230102539
    7. '(match' → logprob: -15.250345230102539
    8. ' max' → logprob: -15.750345230102539
    9. '    ' → logprob: -17.12534523010254
    10. '  ' → logprob: -17.37534523010254

Token 451: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029784860089421272
    2. ':
' → logprob: -3.529784917831421
    3. '               ' → logprob: -10.90478515625
    4. ' :' → logprob: -11.77978515625
    5. ' :
' → logprob: -13.15478515625
    6. ':
' → logprob: -13.27978515625
    7. ':

' → logprob: -13.40478515625
    8. '           ' → logprob: -13.77978515625
    9. '):
' → logprob: -14.52978515625
    10. '):' → logprob: -14.90478515625

Token 452: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004938427824527025
    2. ' score' → logprob: -6.12993860244751
    3. '                
' → logprob: -7.25493860244751
    4. ' sum' → logprob: -7.62993860244751
    5. 'score' → logprob: -7.75493860244751
    6. ' if' → logprob: -7.75493860244751
    7. '           ' → logprob: -8.504938125610352
    8. 'sum' → logprob: -8.754938125610352
    9. ' ' → logprob: -9.754938125610352
    10. ' current' → logprob: -9.754938125610352

Token 453: ' #' (ID: 1069)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.09166143089532852
    2. ' score' → logprob: -2.5916614532470703
    3. 'sum' → logprob: -5.71666145324707
    4. '               ' → logprob: -5.84166145324707
    5. 'current' → logprob: -6.09166145324707
    6. ' current' → logprob: -6.21666145324707
    7. 'total' → logprob: -6.96666145324707
    8. 's' → logprob: -7.46666145324707
    9. ' total' → logprob: -8.34166145324707
    10. ' sum' → logprob: -8.84166145324707

Token 454: ' Calcul' (ID: 57243)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.010759158991277218
    2. 'sum' → logprob: -5.260759353637695
    3. 'current' → logprob: -6.260759353637695
    4. ' score' → logprob: -6.260759353637695
    5. 'total' → logprob: -6.885759353637695
    6. 's' → logprob: -8.135759353637695
    7. ' current' → logprob: -9.135759353637695
    8. 'sub' → logprob: -9.260759353637695
    9. ' sum' → logprob: -9.760759353637695
    10. 'curr' → logprob: -10.510759353637695

Token 455: 'er' (ID: 259)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01304139755666256
    2. 'sum' → logprob: -5.7630414962768555
    3. 'ation' → logprob: -6.0130414962768555
    4. ' sum' → logprob: -6.2630414962768555
    5. '   ' → logprob: -6.7630414962768555
    6. ' de' → logprob: -6.8880414962768555
    7. '                   ' → logprob: -7.3880414962768555
    8. '           ' → logprob: -7.7630414962768555
    9. ' total' → logprob: -8.013041496276855
    10. 'er' → logprob: -8.138041496276855

Token 456: ' la' (ID: 557)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.2644502520561218
    2. ' score' → logprob: -1.5144503116607666
    3. 's' → logprob: -5.5144500732421875
    4. 'total' → logprob: -6.0144500732421875
    5. 'sum' → logprob: -6.0144500732421875
    6. '               ' → logprob: -6.6394500732421875
    7. ' s' → logprob: -6.8894500732421875
    8. ' total' → logprob: -7.1394500732421875
    9. 'current' → logprob: -9.389450073242188
    10. 'the' → logprob: -9.639450073242188

Token 457: ' somme' (ID: 64484)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.053841765969991684
    2. 's' → logprob: -3.5538418292999268
    3. 'sum' → logprob: -3.8038418292999268
    4. 'total' → logprob: -7.428841590881348
    5. ' score' → logprob: -8.053841590881348
    6. 'current' → logprob: -8.053841590881348
    7. 'sub' → logprob: -8.928841590881348
    8. 'subtotal' → logprob: -10.053841590881348
    9. 'som' → logprob: -10.428841590881348
    10. ' sum' → logprob: -11.178841590881348

Token 458: ' des' (ID: 731)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4536679685115814
    2. 'score' → logprob: -1.3286679983139038
    3. ' =' → logprob: -3.3286678791046143
    4. '_score' → logprob: -3.7036678791046143
    5. 'sum' → logprob: -4.828668117523193
    6. '                   ' → logprob: -4.953668117523193
    7. '=' → logprob: -5.078668117523193
    8. ' score' → logprob: -5.328668117523193
    9. 's' → logprob: -5.453668117523193
    10. 'val' → logprob: -5.703668117523193

Token 459: ' éléments' (ID: 57375)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0040947855450212955
    2. ' A' → logprob: -5.50409460067749
    3. 'score' → logprob: -11.504095077514648
    4. 'scores' → logprob: -13.129095077514648
    5. 'sum' → logprob: -13.879095077514648
    6. '[A' → logprob: -14.879095077514648
    7. ' scores' → logprob: -14.879095077514648
    8. ' score' → logprob: -15.004095077514648
    9. 's' → logprob: -15.004095077514648
    10. 'x' → logprob: -15.129095077514648

Token 460: ' correspond' (ID: 11095)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19714967906475067
    2. 'A' → logprob: -2.8221497535705566
    3. ' of' → logprob: -3.5721497535705566
    4. ' dans' → logprob: -3.9471497535705566
    5. '                   ' → logprob: -3.9471497535705566
    6. ' A' → logprob: -4.447149753570557
    7. ' des' → logprob: -4.697149753570557
    8. 'of' → logprob: -4.947149753570557
    9. 'score' → logprob: -5.322149753570557
    10. ' =' → logprob: -5.947149753570557

Token 461: 'ants' (ID: 2027)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.44853970408439636
    2. '               ' → logprob: -1.0735397338867188
    3. ' à' → logprob: -4.698539733886719
    4. 'ants' → logprob: -5.073539733886719
    5. '                   ' → logprob: -6.573539733886719
    6. 'ent' → logprob: -6.698539733886719
    7. '           ' → logprob: -7.198539733886719
    8. 'ant' → logprob: -7.698539733886719
    9. 'entes' → logprob: -9.323539733886719
    10. '   ' → logprob: -9.448539733886719

Token 462: ' dans' (ID: 2671)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5474913120269775
    2. ' dans' → logprob: -2.4224913120269775
    3. 'score' → logprob: -2.6724913120269775
    4. ' for' → logprob: -2.9224913120269775
    5. 'for' → logprob: -3.0474913120269775
    6. ' of' → logprob: -3.1724913120269775
    7. ' score' → logprob: -3.7974913120269775
    8. ' des' → logprob: -4.047491073608398
    9. '                   ' → logprob: -4.172491073608398
    10. ' in' → logprob: -4.422491073608398

Token 463: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.014165041036903858
    2. ' A' → logprob: -4.264164924621582
    3. '   ' → logprob: -14.514164924621582
    4. '               ' → logprob: -14.764164924621582
    5. ' ' → logprob: -15.264164924621582
    6. '           ' → logprob: -15.389164924621582
    7. '                   ' → logprob: -16.1391658782959
    8. '	A' → logprob: -17.1391658782959
    9. '
' → logprob: -17.3891658782959
    10. 'a' → logprob: -17.5141658782959

Token 464: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08073338121175766
    2. 'score' → logprob: -2.955733299255371
    3. 'sum' → logprob: -4.080733299255371
    4. '                
' → logprob: -5.830733299255371
    5. ' score' → logprob: -5.955733299255371
    6. 's' → logprob: -6.580733299255371
    7. 'total' → logprob: -6.955733299255371
    8. ' sum' → logprob: -8.455733299255371
    9. ',' → logprob: -9.080733299255371
    10. ' s' → logprob: -9.080733299255371

Token 465: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.061290595680475235
    2. 'score' → logprob: -3.0612905025482178
    3. 'sum' → logprob: -4.936290740966797
    4. '                
' → logprob: -5.936290740966797
    5. ' score' → logprob: -7.061290740966797
    6. 's' → logprob: -7.061290740966797
    7. 'total' → logprob: -7.561290740966797
    8. '                   ' → logprob: -8.311290740966797
    9. '           ' → logprob: -9.561290740966797
    10. ' sum' → logprob: -9.811290740966797

Token 466: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' (adapté à ' score') → logprob: -0.006688614375889301
    2. ' score' → logprob: -5.506688594818115
    3. 'total' → logprob: -6.506688594818115
    4. 'sum' → logprob: -7.506688594818115
    5. 's' → logprob: -8.256689071655273
    6. 'current' → logprob: -8.631689071655273
    7. ' total' → logprob: -9.756689071655273
    8. '               ' → logprob: -10.256689071655273
    9. ' current' → logprob: -11.506689071655273
    10. ' s' → logprob: -12.131689071655273

Token 467: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759425163269043
    2. '=' → logprob: -0.8259425163269043
    3. ' +=' → logprob: -13.325942993164062
    4. '=sum' → logprob: -13.700942993164062
    5. '+=' → logprob: -15.825942993164062
    6. ' =
' → logprob: -16.325942993164062
    7. ' ' → logprob: -17.200942993164062
    8. '=
' → logprob: -17.325942993164062
    9. '＝' → logprob: -17.450942993164062
    10. '               ' → logprob: -17.700942993164062

Token 468: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03020097129046917
    2. 'sum' → logprob: -3.530200958251953
    3. ' sum' → logprob: -7.780200958251953
    4. ' ' → logprob: -10.530200958251953
    5. '   ' → logprob: -12.155200958251953
    6. '           ' → logprob: -15.530200958251953
    7. '               ' → logprob: -16.155200958251953
    8. '       ' → logprob: -16.405200958251953
    9. '	sum' → logprob: -16.405200958251953
    10. '                   ' → logprob: -17.405200958251953

Token 469: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06197071075439453
    2. 'sum' → logprob: -2.8119707107543945
    3. ' sum' → logprob: -13.061970710754395
    4. ' ' → logprob: -14.311970710754395
    5. '   ' → logprob: -14.936970710754395
    6. '       ' → logprob: -18.811969757080078
    7. '	sum' → logprob: -18.811969757080078
    8. '           ' → logprob: -19.061969757080078
    9. '```' → logprob: -19.311969757080078
    10. '  ' → logprob: -19.436969757080078

Token 470: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29516223073005676
    2. 'for' → logprob: -2.0451622009277344
    3. '
' → logprob: -2.6701622009277344
    4. ' for' → logprob: -3.1701622009277344
    5. '                   ' → logprob: -4.795162200927734
    6. '           ' → logprob: -6.420162200927734
    7. '                ' → logprob: -6.670162200927734
    8. '                
' → logprob: -7.170162200927734
    9. '  
' → logprob: -7.420162200927734
    10. ' 
' → logprob: -7.670162200927734

Token 471: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05414525419473648
    2. ' for' → logprob: -3.804145336151123
    3. '                   ' → logprob: -4.179145336151123
    4. 'for' → logprob: -4.304145336151123
    5. '           ' → logprob: -7.679145336151123
    6. '                       ' → logprob: -8.304144859313965
    7. '
' → logprob: -8.554144859313965
    8. '                ' → logprob: -8.554144859313965
    9. '                
' → logprob: -8.929144859313965
    10. '              ' → logprob: -9.179144859313965

Token 472: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0013439236208796501
    2. '               ' → logprob: -7.001343727111816
    3. ' for' → logprob: -7.751343727111816
    4. '                   ' → logprob: -13.251343727111816
    5. '	for' → logprob: -15.126343727111816
    6. '           ' → logprob: -16.126344680786133
    7. '                       ' → logprob: -18.001344680786133
    8. '                ' → logprob: -18.376344680786133
    9. '              ' → logprob: -18.626344680786133
    10. '   ' → logprob: -18.626344680786133

Token 473: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003178782993927598
    2. ' x' → logprob: -5.753178596496582
    3. '	x' → logprob: -14.878178596496582
    4. '   ' → logprob: -15.128178596496582
    5. '_x' → logprob: -15.878178596496582
    6. ' ' → logprob: -16.1281795501709
    7. 'dx' → logprob: -16.5031795501709
    8. '```' → logprob: -16.6281795501709
    9. 'a' → logprob: -16.7531795501709
    10. 'xx' → logprob: -17.5031795501709

Token 474: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004079589620232582
    2. 'in' → logprob: -5.504079818725586
    3. ' ' → logprob: -14.254079818725586
    4. 'range' → logprob: -15.629079818725586
    5. '   ' → logprob: -16.254079818725586
    6. '```' → logprob: -16.379079818725586
    7. 'x' → logprob: -17.504079818725586
    8. 'In' → logprob: -17.629079818725586
    9. '	in' → logprob: -17.629079818725586
    10. '    ' → logprob: -17.629079818725586

Token 475: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01814994215965271
    2. ' range' → logprob: -4.0181498527526855
    3. '0' → logprob: -18.018150329589844
    4. ' ' → logprob: -19.018150329589844
    5. '(range' → logprob: -19.143150329589844
    6. '	range' → logprob: -19.518150329589844
    7. ')' → logprob: -21.143150329589844
    8. '
' → logprob: -21.143150329589844
    9. '```' → logprob: -21.268150329589844
    10. '   ' → logprob: -21.518150329589844

Token 476: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5761957764625549
    2. '(h' → logprob: -0.8261957764625549
    3. ' h' → logprob: -8.32619571685791
    4. '(' → logprob: -11.95119571685791
    5. '<h' → logprob: -13.57619571685791
    6. ' (' → logprob: -13.57619571685791
    7. '	h' → logprob: -13.82619571685791
    8. '           ' → logprob: -13.82619571685791
    9. '[h' → logprob: -13.82619571685791
    10. '(
' → logprob: -14.82619571685791

Token 477: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.035094454884529114
    2. '):' → logprob: -3.4100944995880127
    3. ':
' → logprob: -8.035094261169434
    4. '               ' → logprob: -8.410094261169434
    5. '   ' → logprob: -8.785094261169434
    6. '                   ' → logprob: -8.785094261169434
    7. ':' → logprob: -9.035094261169434
    8. '           ' → logprob: -9.160094261169434
    9. '<|end|>' → logprob: -9.160094261169434
    10. '       ' → logprob: -9.785094261169434

Token 478: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003156092017889023
    2. '               ' → logprob: -5.8781561851501465
    3. ' for' → logprob: -8.878155708312988
    4. '           ' → logprob: -9.128155708312988
    5. '   ' → logprob: -10.503155708312988
    6. '       ' → logprob: -10.753155708312988
    7. '                       ' → logprob: -10.878155708312988
    8. '		           ' → logprob: -11.253155708312988
    9. '	               ' → logprob: -11.503155708312988
    10. 'for' → logprob: -13.003155708312988

Token 479: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01128289382904768
    2. ' for' → logprob: -4.761282920837402
    3. '                   ' → logprob: -6.011282920837402
    4. '               ' → logprob: -8.636282920837402
    5. '   ' → logprob: -10.886282920837402
    6. '                       ' → logprob: -11.511282920837402
    7. '       ' → logprob: -12.886282920837402
    8. '	for' → logprob: -13.136282920837402
    9. '           ' → logprob: -13.761282920837402
    10. 'score' → logprob: -14.261282920837402

Token 480: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.04300685599446297
    2. 'y' → logprob: -3.1680068969726562
    3. '                    ' → logprob: -12.418006896972656
    4. ')' → logprob: -14.543006896972656
    5. '                   ' → logprob: -14.543006896972656
    6. ' ' → logprob: -14.793006896972656
    7. ' w' → logprob: -15.168006896972656
    8. '	y' → logprob: -15.168006896972656
    9. '                        ' → logprob: -15.418006896972656
    10. '(y' → logprob: -15.668006896972656

Token 481: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007590179797261953
    2. 'in' → logprob: -5.007590293884277
    3. '                   ' → logprob: -8.007590293884277
    4. '[' → logprob: -8.882590293884277
    5. '                    ' → logprob: -9.007590293884277
    6. '+' → logprob: -9.632590293884277
    7. ' ' → logprob: -10.382590293884277
    8. '                       ' → logprob: -10.632590293884277
    9. '                        ' → logprob: -10.632590293884277
    10. '                ' → logprob: -10.757590293884277

Token 482: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20303457975387573
    2. ' range' → logprob: -1.7030346393585205
    3. 'w' → logprob: -6.453034400939941
    4. ' w' → logprob: -10.078034400939941
    5. '(range' → logprob: -13.203034400939941
    6. '(w' → logprob: -15.578034400939941
    7. '0' → logprob: -17.328035354614258
    8. 'W' → logprob: -17.828035354614258
    9. '	range' → logprob: -18.328035354614258
    10. '_range' → logprob: -18.578035354614258

Token 483: '(w' (ID: 7420)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.028381945565342903
    2. '(w' → logprob: -3.7783820629119873
    3. ' w' → logprob: -5.278381824493408
    4. '<w' → logprob: -12.403382301330566
    5. '[w' → logprob: -12.403382301330566
    6. ' (' → logprob: -12.528382301330566
    7. '   ' → logprob: -13.278382301330566
    8. '                   ' → logprob: -13.278382301330566
    9. '               ' → logprob: -13.653382301330566
    10. 'W' → logprob: -14.028382301330566

Token 484: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1173107773065567
    2. '):' → logprob: -2.3673107624053955
    3. '                   ' → logprob: -4.617311000823975
    4. ']:
' → logprob: -5.367311000823975
    5. '                       ' → logprob: -6.742311000823975
    6. ']:' → logprob: -6.992311000823975
    7. ')' → logprob: -9.617310523986816
    8. '):
' → logprob: -9.867310523986816
    9. '               ' → logprob: -10.367310523986816
    10. ':' → logprob: -10.617310523986816

Token 485: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.011260728351771832
    2. '                   ' → logprob: -4.636260509490967
    3. ' score' → logprob: -6.636260509490967
    4. '                               ' → logprob: -10.136260986328125
    5. 'score' → logprob: -10.261260986328125
    6. '                           ' → logprob: -10.636260986328125
    7. '               ' → logprob: -10.761260986328125
    8. '                        ' → logprob: -11.011260986328125
    9. '                    ' → logprob: -11.011260986328125
    10. '   ' → logprob: -11.761260986328125

Token 486: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.4740865230560303
    2. 'score' (adapté à ' score') → logprob: -0.9740865230560303
    3. '                               ' → logprob: -12.59908676147461
    4. '                       ' → logprob: -12.84908676147461
    5. '	score' → logprob: -13.72408676147461
    6. '                           ' → logprob: -14.09908676147461
    7. '(score' → logprob: -14.72408676147461
    8. '                   ' → logprob: -14.72408676147461
    9. '_score' → logprob: -15.22408676147461
    10. '   ' → logprob: -15.47408676147461

Token 487: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07900193333625793
    2. ' +=' → logprob: -2.5790019035339355
    3. '+' → logprob: -10.329002380371094
    4. ']+=' → logprob: -10.454002380371094
    5. '=' → logprob: -10.954002380371094
    6. '                       ' → logprob: -11.454002380371094
    7. '                        ' → logprob: -11.829002380371094
    8. '                           ' → logprob: -11.829002380371094
    9. '                               ' → logprob: -13.079002380371094
    10. '                            ' → logprob: -13.579002380371094

Token 488: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3868710398674011
    2. ' A' → logprob: -1.136871099472046
    3. ' ' → logprob: -17.636871337890625
    4. '	A' → logprob: -18.011871337890625
    5. '_A' → logprob: -18.511871337890625
    6. '   ' → logprob: -18.636871337890625
    7. '                   ' → logprob: -19.261871337890625
    8. ' ' → logprob: -19.886871337890625
    9. '    ' → logprob: -20.011871337890625
    10. 'a' → logprob: -20.386871337890625

Token 489: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.127333340875339e-06
    2. 'i' → logprob: -12.500003814697266
    3. '[' → logprob: -15.000003814697266
    4. '                   ' → logprob: -18.750003814697266
    5. '   ' → logprob: -18.875003814697266
    6. ' [' → logprob: -19.000003814697266
    7. '               ' → logprob: -19.125003814697266
    8. '[I' → logprob: -19.250003814697266
    9. '[
' → logprob: -19.625003814697266
    10. '           ' → logprob: -20.250003814697266

Token 490: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.33102932572364807
    2. '+x' → logprob: -1.5810292959213257
    3. ' +' → logprob: -2.5810294151306152
    4. '[x' → logprob: -8.331028938293457
    5. '][' → logprob: -9.331028938293457
    6. '+[' → logprob: -11.706028938293457
    7. '[' → logprob: -11.831028938293457
    8. '＋' → logprob: -12.331028938293457
    9. '   ' → logprob: -12.956028938293457
    10. 'x' → logprob: -13.581028938293457

Token 491: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.0126840758603066e-05
    2. ' x' → logprob: -10.125040054321289
    3. '	x' → logprob: -16.87504005432129
    4. ')x' → logprob: -19.87504005432129
    5. ''x' → logprob: -19.87504005432129
    6. '"x' → logprob: -20.00004005432129
    7. '+x' → logprob: -20.12504005432129
    8. '```' → logprob: -20.25004005432129
    9. '<|end|>' → logprob: -20.25004005432129
    10. '{x' → logprob: -20.62504005432129

Token 492: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.861651490908116e-05
    2. '[j' → logprob: -10.000068664550781
    3. ' ][' → logprob: -10.875068664550781
    4. ']' → logprob: -12.625068664550781
    5. '"][' → logprob: -15.500068664550781
    6. '                   ' → logprob: -15.625068664550781
    7. '[' → logprob: -15.750068664550781
    8. '                       ' → logprob: -16.25006866455078
    9. '   ' → logprob: -16.25006866455078
    10. ''][' → logprob: -16.50006866455078

Token 493: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1637164789135568e-05
    2. ' j' → logprob: -11.375011444091797
    3. '[j' → logprob: -17.000011444091797
    4. '   ' → logprob: -17.250011444091797
    5. '	j' → logprob: -17.875011444091797
    6. '(j' → logprob: -18.625011444091797
    7. '$j' → logprob: -19.875011444091797
    8. '       ' → logprob: -20.250011444091797
    9. '+j' → logprob: -20.250011444091797
    10. '  ' → logprob: -20.250011444091797

Token 494: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07911395281553268
    2. '+y' → logprob: -2.8291139602661133
    3. ' +' → logprob: -4.079113960266113
    4. '+j' → logprob: -9.579113960266113
    5. 'y' → logprob: -11.829113960266113
    6. ' y' → logprob: -15.329113960266113
    7. '+]' → logprob: -15.454113960266113
    8. '＋' → logprob: -15.829113960266113
    9. '   ' → logprob: -16.329113006591797
    10. '+k' → logprob: -16.704113006591797

Token 495: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001093841710826382
    2. ' y' → logprob: -9.125109672546387
    3. '+y' → logprob: -15.125109672546387
    4. '	y' → logprob: -16.62510871887207
    5. '   ' → logprob: -17.50010871887207
    6. 'yj' → logprob: -19.00010871887207
    7. '                   ' → logprob: -19.37510871887207
    8. ' ' → logprob: -19.37510871887207
    9. ''y' → logprob: -19.75010871887207
    10. '     ' → logprob: -19.87510871887207

Token 496: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006514362758025527
    2. ' ]' → logprob: -7.3756513595581055
    3. '<|end|>' → logprob: -11.250651359558105
    4. ']
' → logprob: -11.500651359558105
    5. '                       ' → logprob: -15.000651359558105
    6. '[' → logprob: -15.500651359558105
    7. '                   ' → logprob: -15.750651359558105
    8. ')' → logprob: -15.875651359558105
    9. '])' → logprob: -15.875651359558105
    10. ']+' → logprob: -16.000652313232422

Token 497: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04424319788813591
    2. '               ' → logprob: -3.169243097305298
    3. '  
' → logprob: -7.544243335723877
    4. '                
' → logprob: -8.294242858886719
    5. ' 
' → logprob: -8.794242858886719
    6. '           ' → logprob: -9.669242858886719
    7. '                   ' → logprob: -9.919242858886719
    8. '                        
' → logprob: -10.294242858886719
    9. '    
' → logprob: -10.419242858886719
    10. '                    
' → logprob: -10.669242858886719

Token 498: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020918576046824455
    2. 'if' → logprob: -4.020918369293213
    3. ' if' → logprob: -6.020918369293213
    4. '           ' → logprob: -8.020918846130371
    5. '                   ' → logprob: -12.520918846130371
    6. '
' → logprob: -12.770918846130371
    7. '   ' → logprob: -13.895918846130371
    8. '```' → logprob: -14.895918846130371
    9. '                
' → logprob: -15.020918846130371
    10. '              ' → logprob: -15.145918846130371

Token 499: ' Met' (ID: 7227)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0001499060745118186
    2. '               ' → logprob: -9.500149726867676
    3. ' if' → logprob: -9.750149726867676
    4. '           ' → logprob: -11.000149726867676
    5. '                   ' → logprob: -17.375150680541992
    6. '   ' → logprob: -18.125150680541992
    7. '```' → logprob: -18.375150680541992
    8. '       ' → logprob: -18.875150680541992
    9. '              ' → logprob: -19.250150680541992
    10. '             ' → logprob: -19.625150680541992

Token 500: 'tre' (ID: 4086)
  Prédit: 'tre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.03472791612148285
    2. 'if' → logprob: -4.409728050231934
    3. '=' → logprob: -5.284728050231934
    4. '#' → logprob: -5.284728050231934
    5. 'max' → logprob: -5.284728050231934
    6. '=max' → logprob: -5.909728050231934
    7. 'endre' → logprob: -7.034728050231934
    8. 're' → logprob: -7.284728050231934
    9. 'à' → logprob: -7.659728050231934
    10. '_max' → logprob: -7.909728050231934

Token 501: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.04991962015628815
    2. ' à' → logprob: -3.049919605255127
    3. 'a' → logprob: -7.299919605255127
    4. 'if' → logprob: -8.799920082092285
    5. 'aj' → logprob: -9.424920082092285
    6. 'À' → logprob: -9.424920082092285
    7. '           ' → logprob: -9.674920082092285
    8. '               ' → logprob: -9.674920082092285
    9. '```' → logprob: -10.049920082092285
    10. '   ' → logprob: -10.049920082092285

Token 502: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0006719246739521623
    2. ' jour' → logprob: -7.500671863555908
    3. '```' → logprob: -9.750672340393066
    4. 'jours' → logprob: -10.000672340393066
    5. 'day' → logprob: -12.375672340393066
    6. 'jou' → logprob: -12.500672340393066
    7. ' ' → logprob: -13.750672340393066
    8. '   ' → logprob: -13.750672340393066
    9. 'Jour' → logprob: -13.875672340393066
    10. 'j' → logprob: -14.125672340393066

Token 503: ' le' (ID: 505)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05697254091501236
    2. 'if' → logprob: -3.1819725036621094
    3. '               ' → logprob: -4.306972503662109
    4. '                   ' → logprob: -8.18197250366211
    5. '```' → logprob: -9.93197250366211
    6. '                ' → logprob: -11.05697250366211
    7. ' max' → logprob: -11.43197250366211
    8. '           ' → logprob: -11.43197250366211
    9. '	if' → logprob: -11.55697250366211
    10. 'max' → logprob: -12.18197250366211

Token 504: ' max' (ID: 2999)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02987753041088581
    2. ' if' → logprob: -3.5298774242401123
    3. 'max' → logprob: -9.654877662658691
    4. '               ' → logprob: -9.779877662658691
    5. '                   ' → logprob: -12.529877662658691
    6. '           ' → logprob: -13.654877662658691
    7. ' max' → logprob: -14.154877662658691
    8. '```' → logprob: -14.654877662658691
    9. '                       ' → logprob: -15.779877662658691
    10. '   ' → logprob: -16.779876708984375

Token 505: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.028416341170668602
    2. '               ' → logprob: -4.153416156768799
    3. 'if' → logprob: -4.903416156768799
    4. '                   ' → logprob: -6.153416156768799
    5. ' if' → logprob: -6.153416156768799
    6. '   ' → logprob: -8.403416633605957
    7. '           ' → logprob: -9.153416633605957
    8. 'score' → logprob: -9.278416633605957
    9. '_' → logprob: -9.653416633605957
    10. '_scores' → logprob: -10.528416633605957

Token 506: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009591517969965935
    2. '           ' → logprob: -4.759591579437256
    3. ' if' → logprob: -7.134591579437256
    4. '                   ' → logprob: -9.634591102600098
    5. 'if' → logprob: -9.884591102600098
    6. ' =' → logprob: -11.009591102600098
    7. ',' → logprob: -11.384591102600098
    8. '<|end|>' → logprob: -11.384591102600098
    9. '=' → logprob: -12.509591102600098
    10. '              ' → logprob: -13.009591102600098

Token 507: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014526620507240295
    2. '           ' → logprob: -4.639526844024658
    3. ' if' → logprob: -5.764526844024658
    4. ' =' → logprob: -6.764526844024658
    5. '                   ' → logprob: -8.5145263671875
    6. 'if' → logprob: -9.3895263671875
    7. '<|end|>' → logprob: -9.7645263671875
    8. '=' → logprob: -10.5145263671875
    9. '	           ' → logprob: -11.3895263671875
    10. ',' → logprob: -11.3895263671875

Token 508: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6695227026939392
    2. ' if' → logprob: -0.9195227026939392
    3. 'if' (adapté à ' if') → logprob: -2.419522762298584
    4. '           ' → logprob: -7.919522762298584
    5. '                   ' → logprob: -12.294522285461426
    6. '   ' → logprob: -12.919522285461426
    7. '```' → logprob: -13.919522285461426
    8. '       ' → logprob: -14.044522285461426
    9. '              ' → logprob: -15.044522285461426
    10. '                       ' → logprob: -15.544522285461426

Token 509: ' (' (ID: 350)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.014165983535349369
    2. 'max' → logprob: -4.264165878295898
    3. '(max' → logprob: -13.014165878295898
    4. '               ' → logprob: -16.5141658782959
    5. '	max' → logprob: -16.5141658782959
    6. ' (' → logprob: -17.1391658782959
    7. '   ' → logprob: -18.0141658782959
    8. '_max' → logprob: -18.0141658782959
    9. '[max' → logprob: -18.2641658782959
    10. '                   ' → logprob: -18.2641658782959

Token 510: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.006715967319905758
    2. ' max' → logprob: -5.006715774536133
    3. '               ' → logprob: -15.131715774536133
    4. '(max' → logprob: -15.131715774536133
    5. '           ' → logprob: -17.381715774536133
    6. '	max' → logprob: -17.756715774536133
    7. '                   ' → logprob: -18.006715774536133
    8. '[max' → logprob: -18.256715774536133
    9. '_max' → logprob: -18.631715774536133
    10. '   ' → logprob: -19.756715774536133

Token 511: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -6.704273118884885e-07
    2. 'score' → logprob: -15.375000953674316
    3. '_' → logprob: -15.500000953674316
    4. '_scores' → logprob: -15.625000953674316
    5. '_token' → logprob: -17.875
    6. '_s' → logprob: -18.375
    7. '_SCORE' → logprob: -19.875
    8. ')' → logprob: -20.25
    9. '_max' → logprob: -20.625
    10. '_code' → logprob: -20.875

Token 512: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.061969365924596786
    2. 'is' → logprob: -2.81196928024292
    3. ')' → logprob: -13.936969757080078
    4. ' )' → logprob: -14.936969757080078
    5. '	is' → logprob: -15.561969757080078
    6. ')is' → logprob: -16.561969757080078
    7. ' ' → logprob: -16.811969757080078
    8. 'i' → logprob: -17.311969757080078
    9. '                   ' → logprob: -17.436969757080078
    10. '==' → logprob: -17.686969757080078

Token 513: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.31326204538345337
    2. 'None' → logprob: -1.3132619857788086
    3. '=None' → logprob: -15.563261985778809
    4. '(None' → logprob: -16.813262939453125
    5. ' ' → logprob: -17.688262939453125
    6. '_None' → logprob: -17.938262939453125
    7. ' not' → logprob: -18.313262939453125
    8. '_none' → logprob: -19.063262939453125
    9. ',None' → logprob: -19.938262939453125
    10. '  ' → logprob: -20.688262939453125

Token 514: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4881274104118347
    2. ' or' → logprob: -0.9881274104118347
    3. 'or' → logprob: -4.6131272315979
    4. ' )' → logprob: -5.6131272315979
    5. '                   ' → logprob: -8.488127708435059
    6. '               ' → logprob: -8.863127708435059
    7. '                ' → logprob: -10.863127708435059
    8. '                  ' → logprob: -12.488127708435059
    9. '                    ' → logprob: -12.613127708435059
    10. '              ' → logprob: -13.488127708435059

Token 515: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.12714427709579468
    2. 'or' → logprob: -2.1271443367004395
    3. '               ' → logprob: -8.877143859863281
    4. '                   ' → logprob: -9.627143859863281
    5. '              ' → logprob: -12.377143859863281
    6. '           ' → logprob: -13.502143859863281
    7. '                ' → logprob: -13.627143859863281
    8. '                  ' → logprob: -13.627143859863281
    9. '	or' → logprob: -14.127143859863281
    10. '            ' → logprob: -14.627143859863281

Token 516: ' (' (ID: 350)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.10326829552650452
    2. 'score' → logprob: -2.9782683849334717
    3. '(score' → logprob: -3.1032683849334717
    4. ' (' → logprob: -6.103268146514893
    5. '                   ' → logprob: -9.72826862335205
    6. '               ' → logprob: -11.22826862335205
    7. '	score' → logprob: -11.47826862335205
    8. '                       ' → logprob: -12.35326862335205
    9. '(' → logprob: -12.35326862335205
    10. '   ' → logprob: -13.22826862335205

Token 517: 'score' (ID: 21200)
  Prédit: 'score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.011057372204959393
    2. ' score' → logprob: -4.511057376861572
    3. '                       ' → logprob: -12.011056900024414
    4. '                   ' → logprob: -13.261056900024414
    5. '	score' → logprob: -14.136056900024414
    6. '               ' → logprob: -15.261056900024414
    7. '   ' → logprob: -15.511056900024414
    8. '(score' → logprob: -16.011056900024414
    9. 'max' → logprob: -16.261056900024414
    10. '_score' → logprob: -16.511056900024414

Token 518: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5248926281929016
    2. '>' → logprob: -0.8998926281929016
    3. ' <' → logprob: -6.774892807006836
    4. '<' → logprob: -7.399892807006836
    5. ' is' → logprob: -12.149892807006836
    6. 'max' → logprob: -13.149892807006836
    7. ' ' → logprob: -13.274892807006836
    8. ')' → logprob: -13.274892807006836
    9. ')>' → logprob: -14.024892807006836
    10. ' >
' → logprob: -15.274892807006836

Token 519: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.31326186656951904
    2. 'max' → logprob: -1.313261866569519
    3. '	max' → logprob: -16.563261032104492
    4. '_max' → logprob: -16.938261032104492
    5. '=max' → logprob: -18.063261032104492
    6. '   ' → logprob: -18.188261032104492
    7. '[max' → logprob: -18.813261032104492
    8. '(max' → logprob: -18.938261032104492
    9. ' ' → logprob: -19.563261032104492
    10. ',max' → logprob: -19.563261032104492

Token 520: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.0007536433404311538
    2. 'max' → logprob: -7.375753879547119
    3. '_max' → logprob: -9.625753402709961
    4. 'score' → logprob: -9.750753402709961
    5. ' max' → logprob: -13.500753402709961
    6. '_scores' → logprob: -13.875753402709961
    7. '   ' → logprob: -15.875753402709961
    8. 'Score' → logprob: -16.25075340270996
    9. ')' → logprob: -16.50075340270996
    10. ' score' → logprob: -17.00075340270996

Token 521: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14318333566188812
    2. '):
' → logprob: -2.0181832313537598
    3. ':' → logprob: -8.018183708190918
    4. ')' → logprob: -9.518183708190918
    5. '):
' → logprob: -9.893183708190918
    6. '               ' → logprob: -11.268183708190918
    7. ' ):' → logprob: -11.268183708190918
    8. '                   ' → logprob: -11.643183708190918
    9. ' ):
' → logprob: -11.893183708190918
    10. '           ' → logprob: -12.268183708190918

Token 522: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0055418009869754314
    2. '                       ' → logprob: -5.505541801452637
    3. '               ' → logprob: -6.630541801452637
    4. ' max' → logprob: -9.755541801452637
    5. ':' → logprob: -10.880541801452637
    6. '           ' → logprob: -11.130541801452637
    7. ':
' → logprob: -11.505541801452637
    8. '                           ' → logprob: -11.755541801452637
    9. 'max' → logprob: -12.005541801452637
    10. '   ' → logprob: -12.380541801452637

Token 523: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.37923118472099304
    2. 'max' (adapté à ' max') → logprob: -1.6292312145233154
    3. '                       ' → logprob: -2.3792312145233154
    4. '                   ' → logprob: -3.6292312145233154
    5. '               ' → logprob: -8.629231452941895
    6. '   ' → logprob: -9.254231452941895
    7. '       ' → logprob: -10.379231452941895
    8. '           ' → logprob: -10.504231452941895
    9. '                           ' → logprob: -11.504231452941895
    10. '                               ' → logprob: -12.129231452941895

Token 524: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -4.320199877838604e-07
    2. 'score' → logprob: -15.375
    3. '_scores' → logprob: -15.75
    4. '_code' → logprob: -17.875
    5. 'Score' → logprob: -18.25
    6. '_s' → logprob: -18.375
    7. '_SCORE' → logprob: -18.75
    8. '_' → logprob: -18.875
    9. '```' → logprob: -19.875
    10. '._' → logprob: -20.5

Token 525: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014147937297821
    2. ' =' → logprob: -1.7014148235321045
    3. '＝' → logprob: -13.826415061950684
    4. '=max' → logprob: -15.201415061950684
    5. '=int' → logprob: -16.826414108276367
    6. '=None' → logprob: -17.201414108276367
    7. '=True' → logprob: -17.326414108276367
    8. '=s' → logprob: -17.451414108276367
    9. '=com' → logprob: -17.826414108276367
    10. '=cut' → logprob: -17.951414108276367

Token 526: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.6931471824645996
    2. 'score' → logprob: -0.6931471824645996
    3. '	score' → logprob: -17.943147659301758
    4. '(score' → logprob: -19.568147659301758
    5. '_score' → logprob: -19.818147659301758
    6. '                   ' → logprob: -19.943147659301758
    7. '                       ' → logprob: -20.943147659301758
    8. 'Score' → logprob: -21.443147659301758
    9. '.score' → logprob: -21.568147659301758
    10. ' ' → logprob: -21.943147659301758

Token 527: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2473466396331787
    2. '    
' → logprob: -1.6223466396331787
    3. '   ' → logprob: -4.122346878051758
    4. '  
' → logprob: -6.372346878051758
    5. '

' → logprob: -6.747346878051758
    6. '\n' → logprob: -7.622346878051758
    7. '   
' → logprob: -7.747346878051758
    8. '
    
' → logprob: -7.747346878051758
    9. '                    
' → logprob: -8.247346878051758
    10. '```' → logprob: -8.622346878051758

Token 528: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1331530660390854
    2. '   ' → logprob: -2.133152961730957
    3. '```' → logprob: -5.758152961730957
    4. '    
' → logprob: -5.883152961730957
    5. 'if' → logprob: -8.633152961730957
    6. 'print' → logprob: -10.133152961730957
    7. '

' → logprob: -11.133152961730957
    8. '        
' → logprob: -12.008152961730957
    9. '\n' → logprob: -12.133152961730957
    10. '  
' → logprob: -12.133152961730957

Token 529: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38876521587371826
    2. '   ' → logprob: -1.1387652158737183
    3. ' if' → logprob: -6.513765335083008
    4. '```' → logprob: -8.013765335083008
    5. '
' → logprob: -9.638765335083008
    6. '    
' → logprob: -11.888765335083008
    7. '	if' → logprob: -12.388765335083008
    8. 'print' → logprob: -13.263765335083008
    9. '``' → logprob: -15.638765335083008
    10. '
' → logprob: -16.513765335083008

Token 530: ' Aff' (ID: 13741)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.927930654550437e-05
    2. '   ' → logprob: -10.500029563903809
    3. ' if' → logprob: -13.750029563903809
    4. '```' → logprob: -14.250029563903809
    5. '
' → logprob: -21.000028610229492
    6. '``' → logprob: -21.250028610229492
    7. 'print' → logprob: -21.750028610229492
    8. '	if' → logprob: -22.500028610229492
    9. '    
' → logprob: -22.625028610229492
    10. 'import' → logprob: -23.375028610229492

Token 531: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0062340255826711655
    2. '   ' → logprob: -5.256234169006348
    3. 'ichage' → logprob: -7.506234169006348
    4. '#' → logprob: -8.256234169006348
    5. 'ich' → logprob: -8.881234169006348
    6. 'ichier' → logprob: -10.631234169006348
    7. 'cher' → logprob: -11.881234169006348
    8. '  ' → logprob: -12.131234169006348
    9. '```' → logprob: -12.881234169006348
    10. '    ' → logprob: -13.006234169006348

Token 532: ' le' (ID: 505)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.1633109301328659
    2. '(' → logprob: -1.9133108854293823
    3. 'max' → logprob: -6.538311004638672
    4. '(
' → logprob: -6.663311004638672
    5. '("' → logprob: -8.413311004638672
    6. '(""' → logprob: -9.288311004638672
    7. '   ' → logprob: -11.538311004638672
    8. '()' → logprob: -12.038311004638672
    9. '('' → logprob: -12.288311004638672
    10. 'print' → logprob: -12.413311004638672

Token 533: ' résultat' (ID: 62556)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0025043170899152756
    2. '(max' → logprob: -6.127504348754883
    3. ' max' → logprob: -8.127504348754883
    4. 'result' → logprob: -10.752504348754883
    5. 'print' → logprob: -13.502504348754883
    6. '(' → logprob: -14.252504348754883
    7. 'maximum' → logprob: -16.377504348754883
    8. 'ma' → logprob: -16.877504348754883
    9. 'res' → logprob: -17.127504348754883
    10. '   ' → logprob: -17.252504348754883

Token 534: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007684823591262102
    2. 'if' → logprob: -5.007684707641602
    3. ' if' → logprob: -7.632684707641602
    4. '```' → logprob: -8.132684707641602
    5. '
' → logprob: -8.882684707641602
    6. '    
' → logprob: -10.257684707641602
    7. 'print' → logprob: -11.257684707641602
    8. '``' → logprob: -13.257684707641602
    9. '	if' → logprob: -14.257684707641602
    10. '  
' → logprob: -14.382684707641602

Token 535: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.6123611330986023
    2. '"' → logprob: -1.112361192703247
    3. ' "' → logprob: -3.237361192703247
    4. '(' → logprob: -3.862361192703247
    5. 'print' → logprob: -4.112360954284668
    6. '(max' → logprob: -4.487360954284668
    7. ' max' → logprob: -4.612360954284668
    8. 'max' → logprob: -4.612360954284668
    9. ' ("' → logprob: -4.862360954284668
    10. '(
' → logprob: -4.987360954284668

Token 536: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -0.030161181464791298
    2. '"' → logprob: -3.530161142349243
    3. ' NA' → logprob: -7.905161380767822
    4. ''' → logprob: -10.280160903930664
    5. ' "' → logprob: -12.405160903930664
    6. 'na' → logprob: -13.655160903930664
    7. '"N' → logprob: -14.405160903930664
    8. 'print' → logprob: -14.780160903930664
    9. 'Na' → logprob: -15.030160903930664
    10. '```' → logprob: -15.655160903930664

Token 537: '"
' (ID: 1092)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.47625473141670227
    2. ' if' → logprob: -1.3512547016143799
    3. 'print' → logprob: -2.22625470161438
    4. '   ' → logprob: -4.976254940032959
    5. ')' → logprob: -6.226254940032959
    6. ',' → logprob: -6.351254940032959
    7. ' print' → logprob: -8.3512544631958
    8. '(' → logprob: -8.6012544631958
    9. '(max' → logprob: -8.6012544631958
    10. '()' → logprob: -8.6012544631958

Token 538: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.054818976670503616
    2. '   ' → logprob: -3.554818868637085
    3. ' if' → logprob: -4.429819107055664
    4. 'print' → logprob: -4.679819107055664
    5. '```' → logprob: -6.179819107055664
    6. '
' → logprob: -6.554819107055664
    7. '    
' → logprob: -10.679819107055664
    8. '``' → logprob: -11.054819107055664
    9. ' print' → logprob: -11.804819107055664
    10. '  
' → logprob: -12.304819107055664

Token 539: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0003122247871942818
    2. '   ' → logprob: -8.750311851501465
    3. ' if' → logprob: -9.000311851501465
    4. 'print' → logprob: -10.500311851501465
    5. '```' → logprob: -12.750311851501465
    6. ' print' → logprob: -19.37531280517578
    7. '``' → logprob: -20.50031280517578
    8. '	if' → logprob: -21.25031280517578
    9. '    
' → logprob: -23.00031280517578
    10. 'If' → logprob: -23.25031280517578

Token 540: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.0024756586644798517
    2. 'max' → logprob: -6.002475738525391
    3. '(max' → logprob: -18.87747573852539
    4. ' ' → logprob: -19.00247573852539
    5. '	max' → logprob: -19.62747573852539
    6. ' ' → logprob: -20.50247573852539
    7. '_max' → logprob: -21.12747573852539
    8. ' maximal' → logprob: -21.62747573852539
    9. ' maximum' → logprob: -22.00247573852539
    10. ' is' → logprob: -22.62747573852539

Token 541: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.9361264946837764e-07
    2. 'score' → logprob: -16.5
    3. '_' → logprob: -18.0
    4. '_scores' → logprob: -19.25
    5. '_s' → logprob: -21.25
    6. '_SCORE' → logprob: -21.25
    7. ' score' → logprob: -22.375
    8. '_code' → logprob: -22.375
    9. ' _' → logprob: -22.875
    10. 'Score' → logprob: -23.0

Token 542: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00593033991754055
    2. 'is' → logprob: -5.130930423736572
    3. '==' → logprob: -14.005929946899414
    4. '	is' → logprob: -15.005929946899414
    5. '>' → logprob: -15.880929946899414
    6. ' ==' → logprob: -16.255929946899414
    7. '<|end|>' → logprob: -16.380929946899414
    8. ' ' → logprob: -17.380929946899414
    9. 'Is' → logprob: -17.505929946899414
    10. '=is' → logprob: -17.755929946899414

Token 543: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.25268444418907166
    2. ' None' → logprob: -1.502684473991394
    3. ' not' → logprob: -7.502684593200684
    4. 'not' → logprob: -8.502684593200684
    5. '_None' → logprob: -15.377684593200684
    6. '=None' → logprob: -16.002683639526367
    7. 'Not' → logprob: -16.127683639526367
    8. '(None' → logprob: -16.127683639526367
    9. '_none' → logprob: -18.127683639526367
    10. 'none' → logprob: -18.627683639526367

Token 544: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037300107069313526
    2. ':
' → logprob: -5.628729820251465
    3. '   ' → logprob: -9.628729820251465
    4. 'print' → logprob: -10.628729820251465
    5. ' :' → logprob: -11.003729820251465
    6. '       ' → logprob: -11.628729820251465
    7. ' print' → logprob: -11.753729820251465
    8. '==' → logprob: -13.878729820251465
    9. ')' → logprob: -14.128729820251465
    10. '=' → logprob: -14.378729820251465

Token 545: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020769787952303886
    2. '   ' → logprob: -6.502077102661133
    3. ' print' → logprob: -7.627077102661133
    4. 'print' → logprob: -9.377077102661133
    5. '	print' → logprob: -13.127077102661133
    6. '```' → logprob: -14.877077102661133
    7. '           ' → logprob: -16.002077102661133
    8. '<|end|>' → logprob: -16.502077102661133
    9. '	   ' → logprob: -16.627077102661133
    10. '.print' → logprob: -17.377077102661133

Token 546: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.31380006670951843
    2. ' print' → logprob: -1.3138000965118408
    3. '   ' → logprob: -7.563799858093262
    4. '       ' → logprob: -10.938799858093262
    5. '	print' → logprob: -13.563799858093262
    6. '```' → logprob: -15.813799858093262
    7. '           ' → logprob: -16.313800811767578
    8. '    ' → logprob: -16.938800811767578
    9. 'pr' → logprob: -19.813800811767578
    10. '.print' → logprob: -19.813800811767578

Token 547: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.001234518364071846
    2. '(' → logprob: -6.751234531402588
    3. '('' → logprob: -10.00123405456543
    4. 'NA' → logprob: -11.12623405456543
    5. ' ("' → logprob: -12.62623405456543
    6. '"' → logprob: -14.37623405456543
    7. ' NA' → logprob: -15.87623405456543
    8. 'Na' → logprob: -16.75123405456543
    9. '(
' → logprob: -16.87623405456543
    10. '()' → logprob: -17.12623405456543

Token 548: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: 0.0
    2. '"' → logprob: -19.0
    3. ' NA' → logprob: -20.875
    4. 'N' → logprob: -23.125
    5. 'Na' → logprob: -24.0
    6. ''' → logprob: -25.75
    7. 'na' → logprob: -25.75
    8. 'NO' → logprob: -26.25
    9. '0' → logprob: -26.75
    10. '   ' → logprob: -27.25

Token 549: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3133046627044678
    2. '")
' → logprob: -1.3133046627044678
    3. '")
' → logprob: -10.063304901123047
    4. ')")
' → logprob: -16.063304901123047
    5. ')' → logprob: -16.313304901123047
    6. '"' → logprob: -16.688304901123047
    7. '")

' → logprob: -17.438304901123047
    8. ')
' → logprob: -17.938304901123047
    9. ')")' → logprob: -18.313304901123047
    10. '```' → logprob: -18.813304901123047

Token 550: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017829985590651631
    2. 'else' → logprob: -6.3767828941345215
    3. ' else' → logprob: -9.50178337097168
    4. '<|end|>' → logprob: -12.62678337097168
    5. '```' → logprob: -13.62678337097168
    6. '	else' → logprob: -14.37678337097168
    7. '    
' → logprob: -14.87678337097168
    8. ')' → logprob: -16.25178337097168
    9. '       ' → logprob: -16.37678337097168
    10. '<|end|>' → logprob: -16.62678337097168

Token 551: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16233505308628082
    2. 'else' (adapté à ' else') → logprob: -1.9123350381851196
    3. ' else' → logprob: -6.16233491897583
    4. '	else' → logprob: -13.787335395812988
    5. '```' → logprob: -16.162334442138672
    6. ' ' → logprob: -16.662334442138672
    7. 'elif' → logprob: -16.787334442138672
    8. '       ' → logprob: -17.162334442138672
    9. '  ' → logprob: -17.162334442138672
    10. '    
' → logprob: -17.787334442138672

Token 552: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5402991771697998
    2. '       ' → logprob: -1.0402991771697998
    3. ':
' → logprob: -2.7902991771698
    4. '   ' → logprob: -7.415299415588379
    5. ' print' → logprob: -7.415299415588379
    6. '(' → logprob: -7.540299415588379
    7. '(print' → logprob: -7.915299415588379
    8. 'print' → logprob: -8.540299415588379
    9. ' :' → logprob: -8.790299415588379
    10. ' :
' → logprob: -10.040299415588379

Token 553: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.27103763818740845
    2. '       ' → logprob: -2.0210375785827637
    3. ' print' → logprob: -2.2710375785827637
    4. '   ' → logprob: -6.396037578582764
    5. '```' → logprob: -11.021038055419922
    6. '	print' → logprob: -12.646038055419922
    7. '           ' → logprob: -14.396038055419922
    8. '(print' → logprob: -14.771038055419922
    9. '.print' → logprob: -15.271038055419922
    10. '     ' → logprob: -16.146038055419922

Token 554: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.000000953674316
    3. '```' → logprob: -21.0
    4. '   ' → logprob: -21.25
    5. '       ' → logprob: -24.125
    6. '	print' → logprob: -24.875
    7. 'printf' → logprob: -25.625
    8. 'python' → logprob: -26.125
    9. '``' → logprob: -26.125
    10. '.print' → logprob: -26.125

Token 555: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0005530327325686812
    2. '(' → logprob: -7.500553131103516
    3. 'max' → logprob: -17.750553131103516
    4. '(
' → logprob: -20.125553131103516
    5. '(min' → logprob: -20.125553131103516
    6. ' max' → logprob: -20.375553131103516
    7. ' (' → logprob: -20.625553131103516
    8. '(Max' → logprob: -20.625553131103516
    9. '(m' → logprob: -21.000553131103516
    10. ',max' → logprob: -21.000553131103516

Token 556: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -3.128163257315464e-07
    2. 'score' → logprob: -15.375
    3. '_scores' → logprob: -19.875
    4. '_SCORE' → logprob: -20.5
    5. 'Score' → logprob: -20.875
    6. '_code' → logprob: -21.25
    7. '_token' → logprob: -21.25
    8. ' score' → logprob: -21.625
    9. '(score' → logprob: -22.0
    10. '_line' → logprob: -22.5

Token 557: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.125000953674316
    3. ')
' → logprob: -14.750000953674316
    4. '())' → logprob: -16.000001907348633
    5. '()' → logprob: -16.750001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '))' → logprob: -18.875001907348633
    8. '")' → logprob: -19.000001907348633
    9. ')`' → logprob: -19.000001907348633
    10. '```' → logprob: -20.125001907348633

Token 558: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3046071529388428
    2. '<|end|>' → logprob: -1.4296071529388428
    3. '
' → logprob: -4.054607391357422
    4. '```' → logprob: -5.554607391357422
    5. 'main' → logprob: -7.054607391357422
    6. '\n' → logprob: -7.929607391357422
    7. ' if' → logprob: -8.429607391357422
    8. '#' → logprob: -8.554607391357422
    9. ')' → logprob: -9.554607391357422
    10. '<|end|>' → logprob: -9.929607391357422

Token 559: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.029825346544384956
    2. '__' → logprob: -3.529825448989868
    3. '_' → logprob: -10.029825210571289
    4. '_name' → logprob: -10.904825210571289
    5. '___' → logprob: -12.779825210571289
    6. 'name' → logprob: -13.029825210571289
    7. ' ' → logprob: -13.154825210571289
    8. ' _' → logprob: -13.279825210571289
    9. '  ' → logprob: -13.654825210571289
    10. ' True' → logprob: -14.404825210571289

Token 560: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07946722209453583
    2. ' ==' → logprob: -3.204467296600342
    3. '==' → logprob: -3.579467296600342
    4. 'if' → logprob: -6.204467296600342
    5. 'name' → logprob: -6.204467296600342
    6. '=="' → logprob: -6.204467296600342
    7. ' __' → logprob: -7.454467296600342
    8. '.__' → logprob: -7.579467296600342
    9. '=='' → logprob: -8.704466819763184
    10. '[' → logprob: -8.829466819763184

Token 561: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.2994620242971e-06
    2. '__.__' → logprob: -11.750008583068848
    3. '==' → logprob: -15.500008583068848
    4. '__.' → logprob: -16.00000762939453
    5. '__["' → logprob: -18.00000762939453
    6. '____' → logprob: -18.50000762939453
    7. '__[' → logprob: -19.00000762939453
    8. '=="' → logprob: -19.25000762939453
    9. '__('' → logprob: -19.50000762939453
    10. '___' → logprob: -19.62500762939453

Token 562: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5991340279579163
    2. '==' → logprob: -1.3491339683532715
    3. ' ==' → logprob: -2.3491339683532715
    4. '=="' → logprob: -2.3491339683532715
    5. '=='' → logprob: -8.47413444519043
    6. '.__' → logprob: -9.47413444519043
    7. '__.__' → logprob: -10.84913444519043
    8. ' =="' → logprob: -11.59913444519043
    9. '==="' → logprob: -12.09913444519043
    10. '=' → logprob: -12.47413444519043

Token 563: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0015368813183158636
    2. ''' → logprob: -6.501536846160889
    3. ' "__' → logprob: -10.626537322998047
    4. '__' → logprob: -11.501537322998047
    5. ' '__' → logprob: -16.376537322998047
    6. '"name' → logprob: -17.126537322998047
    7. '("__' → logprob: -17.876537322998047
    8. '"user' → logprob: -18.251537322998047
    9. '"_' → logprob: -18.751537322998047
    10. '"class' → logprob: -19.501537322998047

Token 564: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.16052427887916565
    2. '__' → logprob: -1.9105242490768433
    3. '"' → logprob: -8.160524368286133
    4. 'name' → logprob: -11.410524368286133
    5. ''' → logprob: -14.160524368286133
    6. '_main' → logprob: -14.160524368286133
    7. 'built' → logprob: -14.410524368286133
    8. '__":
' → logprob: -15.285524368286133
    9. 'python' → logprob: -15.285524368286133
    10. '___' → logprob: -15.660524368286133

Token 565: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0033009357284754515
    2. '__' → logprob: -5.75330114364624
    3. '__':
' → logprob: -9.003300666809082
    4. '__.' → logprob: -16.1283016204834
    5. '__["' → logprob: -17.0033016204834
    6. '__.__' → logprob: -18.0033016204834
    7. '__("' → logprob: -18.1283016204834
    8. '```' → logprob: -19.1283016204834
    9. '__
' → logprob: -19.2533016204834
    10. '("__' → logprob: -19.8783016204834

Token 566: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.10028635710477829
    2. ' main' → logprob: -2.3502862453460693
    3. '	main' → logprob: -9.975286483764648
    4. '   ' → logprob: -10.350286483764648
    5. '_main' → logprob: -13.725286483764648
    6. '__' → logprob: -16.97528648376465
    7. '(main' → logprob: -17.10028648376465
    8. '.main' → logprob: -17.35028648376465
    9. '    
' → logprob: -18.47528648376465
    10. ' ' → logprob: -18.72528648376465

Token 567: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.25
    3. '	main' → logprob: -23.0
    4. '   ' → logprob: -24.375
    5. '.main' → logprob: -26.375
    6. '(main' → logprob: -26.875
    7. '_main' → logprob: -27.75
    8. 'Main' → logprob: -29.0
    9. 'import' → logprob: -30.0
    10. 'ma' → logprob: -30.75

Token 568: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 566
Tokens correctement prédits (1ère position, stricte): 210
Tokens correctement prédits (1ère position, avec adaptation): 228
Tokens correctement prédits (top 10): 439
Précision stricte (1ère position): 37.10%
Précision adaptée (1ère position): 40.28%
Précision (top 10): 77.56%
================================================================================
