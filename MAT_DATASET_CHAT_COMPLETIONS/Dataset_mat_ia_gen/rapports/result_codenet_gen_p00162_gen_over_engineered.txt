================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:01:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class HammingNumbers:
    def __init__(self, limit: int = 10**6):
        self.limit = limit
        self.primes = (2, 3, 5)
        self._hamming_numbers = None

    def _generate_hamming_numbers(self):
        # Using a sophisticated abstracted method with priority queues and multiple iterators
        import heapq
        heap = [1]
        seen = set(heap)
        hamming_list = []

        while heap:
            current = heapq.heappop(heap)
            if current > self.limit:
                continue
            hamming_list.append(current)
            for p in self.primes:
                nxt = current * p
                if nxt <= self.limit and nxt not in seen:
                    seen.add(nxt)
                    heapq.heappush(heap, nxt)
        hamming_list.sort()
        return hamming_list

    def hamming_numbers(self):
        if self._hamming_numbers is None:
            self._hamming_numbers = self._generate_hamming_numbers()
        return self._hamming_numbers

class HammingNumberCounter:
    def __init__(self, hamming_numbers_obj: HammingNumbers):
        self.hamming_numbers = hamming_numbers_obj.hamming_numbers()

    def count_in_range(self, m: int, n: int) -> int:
        # Abstraction with binary search for counting in range
        from bisect import bisect_left, bisect_right
        left = bisect_left(self.hamming_numbers, m)
        right = bisect_right(self.hamming_numbers, n)
        return right - left

class InputProcessor:
    def __init__(self, counter: HammingNumberCounter):
        self.counter = counter

    def process(self):
        import sys
        for line in sys.stdin:
            line = line.strip()
            if line == '0':
                break
            m, n = map(int, line.split())
            print(self.counter.count_in_range(m, n))

def main():
    hamming_obj = HammingNumbers(limit=10**6)
    counter = HammingNumberCounter(hamming_obj)
    processor = InputProcessor(counter)
    processor.process()

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' H' (ID: 487)
  → Token d'amorce (pas de prédiction)

Token 2: 'amming' (ID: 62981)
  → Token d'amorce (pas de prédiction)

Token 3: 'Numbers' (ID: 31274)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2944823205471039
    2. ':' → logprob: -1.4194823503494263
    3. '{' → logprob: -4.544482231140137
    4. '```' → logprob: -6.294482231140137
    5. '.' → logprob: -7.669482231140137
    6. ' ' → logprob: -9.169482231140137
    7. ' {' → logprob: -10.294482231140137
    8. ' (' → logprob: -10.669482231140137
    9. ' :' → logprob: -10.794482231140137
    10. '(
' → logprob: -11.294482231140137

Token 4: ':
' (ID: 734)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.4370909631252289
    2. ':' → logprob: -1.6870909929275513
    3. '(' → logprob: -1.9370909929275513
    4. '.' → logprob: -3.9370908737182617
    5. ' {' → logprob: -5.437090873718262
    6. '```' → logprob: -7.562090873718262
    7. '[' → logprob: -8.187090873718262
    8. ' ' → logprob: -10.312090873718262
    9. '(:' → logprob: -10.687090873718262
    10. ' (' → logprob: -10.687090873718262

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6181623339653015
    2. '```' → logprob: -1.7431623935699463
    3. '   ' → logprob: -1.8681623935699463
    4. '(' → logprob: -2.2431623935699463
    5. ':
' → logprob: -4.868162155151367
    6. '\' → logprob: -5.618162155151367
    7. '():' → logprob: -5.868162155151367
    8. '``' → logprob: -5.868162155151367
    9. '    
' → logprob: -6.368162155151367
    10. '(
' → logprob: -6.618162155151367

Token 6: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7825796008110046
    2. ' def' → logprob: -1.2825796604156494
    3. '```' → logprob: -2.0325796604156494
    4. '    ' → logprob: -3.2825796604156494
    5. 'def' (adapté à ' def') → logprob: -3.5325796604156494
    6. ' ' → logprob: -3.6575796604156494
    7. '_' → logprob: -4.40757942199707
    8. '(' → logprob: -4.53257942199707
    9. '`' → logprob: -5.90757942199707
    10. '    
' → logprob: -6.03257942199707

Token 7: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18630971014499664
    2. ' __' → logprob: -2.436309814453125
    3. '__' → logprob: -3.061309814453125
    4. ' calculate' → logprob: -4.186309814453125
    5. ' ' → logprob: -4.811309814453125
    6. '_' → logprob: -5.686309814453125
    7. 'calculate' → logprob: -5.686309814453125
    8. ' def' → logprob: -7.186309814453125
    9. '  ' → logprob: -7.436309814453125
    10. 'space' → logprob: -7.686309814453125

Token 8: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.047134305234067e-05
    2. ' init' → logprob: -10.500030517578125
    3. '_init' → logprob: -12.750030517578125
    4. 'ini' → logprob: -17.250030517578125
    5. 'int' → logprob: -18.625030517578125
    6. '	init' → logprob: -18.875030517578125
    7. '_' → logprob: -19.250030517578125
    8. 'i' → logprob: -19.750030517578125
    9. '-init' → logprob: -20.125030517578125
    10. '```' → logprob: -20.250030517578125

Token 9: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.29683035612106323
    2. '__' → logprob: -1.421830415725708
    3. '(' → logprob: -4.421830177307129
    4. '__(
' → logprob: -6.546830177307129
    5. '(self' → logprob: -6.796830177307129
    6. '_' → logprob: -7.671830177307129
    7. '__((' → logprob: -8.296830177307129
    8. '__('' → logprob: -9.921830177307129
    9. '__(*' → logprob: -10.046830177307129
    10. ' (' → logprob: -10.171830177307129

Token 10: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0059630488976836205
    2. ' self' → logprob: -5.13096284866333
    3. ')' → logprob: -10.505963325500488
    4. ' ' → logprob: -13.130963325500488
    5. '(self' → logprob: -13.505963325500488
    6. ' )' → logprob: -13.880963325500488
    7. '   ' → logprob: -14.630963325500488
    8. '       ' → logprob: -14.630963325500488
    9. '	self' → logprob: -14.755963325500488
    10. '*self' → logprob: -15.130963325500488

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020549481734633446
    2. 'self' → logprob: -5.145549297332764
    3. ')' → logprob: -5.270549297332764
    4. ' ,' → logprob: -5.395549297332764
    5. '):' → logprob: -5.645549297332764
    6. '<|end|>' → logprob: -7.895549297332764
    7. ',self' → logprob: -8.770549774169922
    8. '   ' → logprob: -8.895549774169922
    9. '_' → logprob: -9.145549774169922
    10. ' )' → logprob: -9.395549774169922

Token 12: ' limit' (ID: 5967)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.034281421452760696
    2. ' self' → logprob: -3.4092814922332764
    3. ')' → logprob: -7.784281253814697
    4. 'n' → logprob: -9.284281730651855
    5. '   ' → logprob: -10.159281730651855
    6. ' )' → logprob: -10.534281730651855
    7. '       ' → logprob: -11.159281730651855
    8. '	self' → logprob: -11.659281730651855
    9. 'base' → logprob: -11.909281730651855
    10. ' n' → logprob: -12.534281730651855

Token 13: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020240426063537598
    2. '=' → logprob: -4.395240306854248
    3. ':' → logprob: -5.270240306854248
    4. ')' → logprob: -6.270240306854248
    5. ',' → logprob: -7.520240306854248
    6. ' ):' → logprob: -9.645240783691406
    7. '):
' → logprob: -11.270240783691406
    8. '_' → logprob: -11.770240783691406
    9. '```' → logprob: -11.895240783691406
    10. '   ' → logprob: -12.395240783691406

Token 14: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47409453988075256
    2. 'int' → logprob: -0.9740945100784302
    3. '=int' → logprob: -11.47409439086914
    4. ' ' → logprob: -13.22409439086914
    5. ':int' → logprob: -13.59909439086914
    6. '  ' → logprob: -13.97409439086914
    7. ' ' → logprob: -13.97409439086914
    8. '   ' → logprob: -14.59909439086914
    9. '(int' → logprob: -14.84909439086914
    10. '[int' → logprob: -15.22409439086914

Token 15: ' =' (ID: 314)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008973448537290096
    2. ')' → logprob: -4.758973598480225
    3. '):
' → logprob: -8.133973121643066
    4. '   ' → logprob: -10.633973121643066
    5. ',' → logprob: -11.258973121643066
    6. ':' → logprob: -11.383973121643066
    7. '       ' → logprob: -12.258973121643066
    8. '```' → logprob: -12.883973121643066
    9. ' ):' → logprob: -13.633973121643066
    10. '):

' → logprob: -13.758973121643066

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9212867021560669
    2. '100' → logprob: -0.9212867021560669
    3. '1' → logprob: -1.796286702156067
    4. '10' → logprob: -3.5462865829467773
    5. '50' → logprob: -6.171286582946777
    6. '   ' → logprob: -6.421286582946777
    7. '2' → logprob: -7.171286582946777
    8. '  ' → logprob: -7.296286582946777
    9. ' )' → logprob: -7.296286582946777
    10. ')' → logprob: -7.671286582946777

Token 17: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.844678521156311
    2. '100' → logprob: -0.844678521156311
    3. ' ' → logprob: -2.7196784019470215
    4. '10' → logprob: -3.7196784019470215
    5. '2' → logprob: -3.9696784019470215
    6. '50' → logprob: -4.5946784019470215
    7. '500' → logprob: -5.7196784019470215
    8. '0' → logprob: -5.8446784019470215
    9. '40' → logprob: -5.9696784019470215
    10. ')' → logprob: -6.0946784019470215

Token 18: '**' (ID: 410)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0043902406468987465
    2. ')' → logprob: -5.504390239715576
    3. '):
' → logprob: -8.254390716552734
    4. ':' → logprob: -10.754390716552734
    5. '):
' → logprob: -11.379390716552734
    6. ' ):' → logprob: -12.504390716552734
    7. '   ' → logprob: -12.754390716552734
    8. '```' → logprob: -12.879390716552734
    9. '0' → logprob: -13.004390716552734
    10. ',' → logprob: -13.504390716552734

Token 19: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.039444830268621445
    2. '9' → logprob: -3.914444923400879
    3. '3' → logprob: -4.039444923400879
    4. '5' → logprob: -7.164444923400879
    5. '7' → logprob: -8.789444923400879
    6. '8' → logprob: -9.164444923400879
    7. '4' → logprob: -10.289444923400879
    8. '0' → logprob: -11.164444923400879
    9. '```' → logprob: -11.539444923400879
    10. '2' → logprob: -11.789444923400879

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013499957276508212
    2. ')' → logprob: -6.626349925994873
    3. ' ):' → logprob: -11.626350402832031
    4. '):
' → logprob: -12.001350402832031
    5. ':' → logprob: -12.126350402832031
    6. '):
' → logprob: -13.751350402832031
    7. ',' → logprob: -13.876350402832031
    8. '   ' → logprob: -14.126350402832031
    9. ' ' → logprob: -15.501350402832031
    10. ' )' → logprob: -16.12635040283203

Token 21: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.609490156173706
    2. ':' → logprob: -0.859490156173706
    3. ':
' → logprob: -4.734490394592285
    4. '```' → logprob: -4.734490394592285
    5. '   ' → logprob: -5.984490394592285
    6. '\' → logprob: -6.109490394592285
    7. '\n' → logprob: -6.234490394592285
    8. '
' → logprob: -6.984490394592285
    9. '        
' → logprob: -6.984490394592285
    10. ' :' → logprob: -7.234490394592285

Token 22: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2411971539258957
    2. '       ' → logprob: -1.616197109222412
    3. ' self' → logprob: -4.616197109222412
    4. '   ' → logprob: -6.241197109222412
    5. '\n' → logprob: -6.741197109222412
    6. '```' → logprob: -6.866197109222412
    7. '\' → logprob: -7.116197109222412
    8. ' ' → logprob: -8.86619758605957
    9. '        
' → logprob: -9.36619758605957
    10. ' ' → logprob: -9.49119758605957

Token 23: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -0.009790443815290928
    2. '.' → logprob: -4.759790420532227
    3. '.h' → logprob: -7.884790420532227
    4. ' .' → logprob: -8.009790420532227
    5. '._' → logprob: -8.509790420532227
    6. 'limit' → logprob: -9.259790420532227
    7. '.n' → logprob: -9.884790420532227
    8. '.H' → logprob: -11.509790420532227
    9. '.max' → logprob: -11.509790420532227
    10. '_limit' → logprob: -11.634790420532227

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889385521411896
    2. '=' → logprob: -2.5788938999176025
    3. '<|end|>' → logprob: -13.828893661499023
    4. ' ' → logprob: -13.953893661499023
    5. '   ' → logprob: -14.828893661499023
    6. '_' → logprob: -14.828893661499023
    7. ' =
' → logprob: -15.328893661499023
    8. '  ' → logprob: -15.578893661499023
    9. ' =)' → logprob: -15.703893661499023
    10. ',' → logprob: -15.703893661499023

Token 25: ' limit' (ID: 5967)
  Prédit: ' limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.033683739602565765
    2. 'limit' → logprob: -3.4086837768554688
    3. '(limit' → logprob: -11.033683776855469
    4. '10' → logprob: -11.283683776855469
    5. ' ' → logprob: -12.033683776855469
    6. ' ' → logprob: -13.283683776855469
    7. '    ' → logprob: -15.033683776855469
    8. '100' → logprob: -15.158683776855469
    9. '_limit' → logprob: -15.158683776855469
    10. '.limit' → logprob: -15.533683776855469

Token 26: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09115825593471527
    2. '\n' → logprob: -3.466158151626587
    3. '   ' → logprob: -3.591158151626587
    4. '    
' → logprob: -4.216158390045166
    5. ' 
' → logprob: -5.966158390045166
    6. '  
' → logprob: -5.966158390045166
    7. '\' → logprob: -6.341158390045166
    8. '<|end|>' → logprob: -6.591158390045166
    9. '```' → logprob: -7.091158390045166
    10. '       ' → logprob: -7.341158390045166

Token 27: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16989728808403015
    2. '   ' → logprob: -2.4198973178863525
    3. '\n' → logprob: -3.5448973178863525
    4. '    
' → logprob: -4.044897079467773
    5. '```' → logprob: -4.919897079467773
    6. '\' → logprob: -5.544897079467773
    7. '  
' → logprob: -6.044897079467773
    8. 'def' → logprob: -7.044897079467773
    9. ':' → logprob: -7.044897079467773
    10. ' 
' → logprob: -7.294897079467773

Token 28: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6482568979263306
    2. '\n' → logprob: -0.8982568979263306
    3. '```' → logprob: -3.273256778717041
    4. '   ' → logprob: -4.773256778717041
    5. '\' → logprob: -4.898256778717041
    6. '       ' → logprob: -5.023256778717041
    7. '    
' → logprob: -6.023256778717041
    8. '``' → logprob: -6.398256778717041
    9. '`' → logprob: -6.898256778717041
    10. '        
' → logprob: -7.023256778717041

Token 29: '.pr' (ID: 27292)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4022422432899475
    2. '.n' → logprob: -1.6522421836853027
    3. '._' → logprob: -2.7772421836853027
    4. '.h' → logprob: -3.4022421836853027
    5. '.generated' → logprob: -3.6522421836853027
    6. '.values' → logprob: -4.402242183685303
    7. ' .' → logprob: -6.027242183685303
    8. '.next' → logprob: -7.527242183685303
    9. '.queue' → logprob: -8.152242660522461
    10. '.cache' → logprob: -8.277242660522461

Token 30: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.5290209054946899
    2. 'ime' → logprob: -0.9040209054946899
    3. 'im' → logprob: -6.0290207862854
    4. 'e' → logprob: -7.5290207862854
    5. 'od' → logprob: -7.7790207862854
    6. 'ices' → logprob: -7.9040207862854
    7. 'i' → logprob: -8.029021263122559
    8. 'o' → logprob: -8.029021263122559
    9. 'oc' → logprob: -8.029021263122559
    10. 'ob' → logprob: -8.779021263122559

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868788182735443
    2. '=' → logprob: -1.1368788480758667
    3. '[' → logprob: -13.261878967285156
    4. ' =[' → logprob: -13.386878967285156
    5. '=[' → logprob: -13.761878967285156
    6. '=[]' → logprob: -14.011878967285156
    7. '_' → logprob: -14.136878967285156
    8. '[:]' → logprob: -14.261878967285156
    9. '[]' → logprob: -15.636878967285156
    10. 's' → logprob: -15.636878967285156

Token 32: ' (' (ID: 350)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.1602409929037094
    2. '[' → logprob: -1.9102410078048706
    3. ' ' → logprob: -11.16024112701416
    4. '[]' → logprob: -13.91024112701416
    5. ' ' → logprob: -14.16024112701416
    6. ' {' → logprob: -14.41024112701416
    7. ' []' → logprob: -15.41024112701416
    8. '{' → logprob: -16.660240173339844
    9. '   ' → logprob: -17.535240173339844
    10. '(' → logprob: -17.535240173339844

Token 33: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008753741858527064
    2. ' ' → logprob: -7.375875473022461
    3. '(' → logprob: -8.500875473022461
    4. ')' → logprob: -10.625875473022461
    5. '   ' → logprob: -11.625875473022461
    6. '[' → logprob: -11.875875473022461
    7. '{' → logprob: -13.750875473022461
    8. ' (' → logprob: -14.000875473022461
    9. '       ' → logprob: -14.375875473022461
    10. '  ' → logprob: -14.625875473022461

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011331788846291602
    2. ' ,' → logprob: -9.125113487243652
    3. ',
' → logprob: -12.875113487243652
    4. ',

' → logprob: -13.875113487243652
    5. '3' → logprob: -15.250113487243652
    6. '2' → logprob: -16.125112533569336
    7. ' ' → logprob: -16.375112533569336
    8. ',)' → logprob: -16.625112533569336
    9. ',,' → logprob: -16.750112533569336
    10. '4' → logprob: -16.750112533569336

Token 35: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4741307497024536
    2. '3' → logprob: -0.9741307497024536
    3. ')' → logprob: -10.474130630493164
    4. ' ' → logprob: -11.599130630493164
    5. ' )' → logprob: -11.974130630493164
    6. ',' → logprob: -13.349130630493164
    7. ' ,' → logprob: -13.724130630493164
    8. '```' → logprob: -13.724130630493164
    9. '   ' → logprob: -13.786630630493164
    10. '  ' → logprob: -13.911630630493164

Token 36: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0263078510761261
    2. ' ' → logprob: -3.6513078212738037
    3. ' ' → logprob: -13.151308059692383
    4. '   ' → logprob: -13.401308059692383
    5. '```' → logprob: -13.401308059692383
    6. '  ' → logprob: -14.276308059692383
    7. '	' → logprob: -14.838808059692383
    8. ')' → logprob: -15.151308059692383
    9. '    ' → logprob: -15.401308059692383
    10. '"""' → logprob: -16.213808059692383

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.994086627149954e-05
    2. ' ,' → logprob: -9.750080108642578
    3. ')' → logprob: -10.875080108642578
    4. '2' → logprob: -14.000080108642578
    5. '4' → logprob: -14.500080108642578
    6. ',)' → logprob: -14.500080108642578
    7. ',
' → logprob: -15.125080108642578
    8. ',

' → logprob: -15.875080108642578
    9. ' )' → logprob: -16.125080108642578
    10. '<|end|>' → logprob: -16.250080108642578

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011191172525286674
    2. '5' → logprob: -4.511191368103027
    3. '4' → logprob: -9.136191368103027
    4. ')' → logprob: -11.011191368103027
    5. ' )' → logprob: -11.386191368103027
    6. ' ' → logprob: -12.636191368103027
    7. '2' → logprob: -14.136191368103027
    8. ' and' → logprob: -14.136191368103027
    9. '<|end|>' → logprob: -14.136191368103027
    10. '  ' → logprob: -14.511191368103027

Token 39: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.08895810693502426
    2. ' ' → logprob: -2.4639580249786377
    3. ')' → logprob: -11.213957786560059
    4. ' )' → logprob: -13.088957786560059
    5. ' and' → logprob: -13.713957786560059
    6. 'and' → logprob: -14.338957786560059
    7. ',' → logprob: -14.776457786560059
    8. ' ,' → logprob: -15.151457786560059
    9. ' ' → logprob: -15.151457786560059
    10. '  ' → logprob: -16.463958740234375

Token 40: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -13.12500286102295
    3. ')
' → logprob: -14.37500286102295
    4. ',)' → logprob: -15.25000286102295
    5. ',' → logprob: -16.125003814697266
    6. '}' → logprob: -16.625003814697266
    7. '   ' → logprob: -17.000003814697266
    8. ')

' → logprob: -18.250003814697266
    9. '```' → logprob: -18.250003814697266
    10. '       ' → logprob: -18.250003814697266

Token 41: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12307107448577881
    2. '<|end|>' → logprob: -2.2480711936950684
    3. '   ' → logprob: -5.373071193695068
    4. '\n' → logprob: -6.623071193695068
    5. '    
' → logprob: -7.123071193695068
    6. ' 
' → logprob: -7.248071193695068
    7. '<|end|>' → logprob: -7.373071193695068
    8. '```' → logprob: -7.623071193695068
    9. 'def' → logprob: -7.748071193695068
    10. ' def' → logprob: -8.37307071685791

Token 42: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18216627836227417
    2. 'def' → logprob: -1.932166337966919
    3. '<|end|>' → logprob: -4.55716609954834
    4. ' def' → logprob: -5.05716609954834
    5. '   ' → logprob: -6.55716609954834
    6. '    
' → logprob: -7.18216609954834
    7. '       ' → logprob: -7.30716609954834
    8. '\n' → logprob: -7.43216609954834
    9. ' 
' → logprob: -8.43216609954834
    10. '\' → logprob: -8.43216609954834

Token 43: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2487824708223343
    2. '.n' → logprob: -2.7487823963165283
    3. '.generated' → logprob: -3.1237823963165283
    4. '._' → logprob: -3.3737823963165283
    5. '.h' → logprob: -3.6237823963165283
    6. '.values' → logprob: -3.8737823963165283
    7. ' .' → logprob: -4.373782634735107
    8. '.cache' → logprob: -5.873782634735107
    9. '.available' → logprob: -6.123782634735107
    10. '.next' → logprob: -6.498782634735107

Token 44: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.24807541072368622
    2. 'cache' → logprob: -2.373075485229492
    3. 'generate' → logprob: -2.748075485229492
    4. 'numbers' → logprob: -3.248075485229492
    5. 'next' → logprob: -5.123075485229492
    6. 'seen' → logprob: -5.623075485229492
    7. 'generated' → logprob: -6.123075485229492
    8. 'nums' → logprob: -6.123075485229492
    9. 'queue' → logprob: -6.373075485229492
    10. 'ham' → logprob: -6.748075485229492

Token 45: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -0.008563155308365822
    2. 'amm' → logprob: -6.258563041687012
    3. 'numbers' → logprob: -6.258563041687012
    4. '_numbers' → logprob: -6.758563041687012
    5. 'am' → logprob: -6.883563041687012
    6. '   ' → logprob: -7.633563041687012
    7. 'ammers' → logprob: -8.008563041687012
    8. '_values' → logprob: -8.133563041687012
    9. '_' → logprob: -8.258563041687012
    10. '```' → logprob: -8.758563041687012

Token 46: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.03306575492024422
    2. '_' → logprob: -4.2830657958984375
    3. 's' → logprob: -4.5330657958984375
    4. '_cache' → logprob: -6.2830657958984375
    5. ' =' → logprob: -6.5330657958984375
    6. '_set' → logprob: -6.6580657958984375
    7. '_nums' → logprob: -7.1580657958984375
    8. '_values' → logprob: -7.4080657958984375
    9. '_list' → logprob: -7.5330657958984375
    10. '_queue' → logprob: -7.6580657958984375

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3134792149066925
    2. ' =' → logprob: -1.3134791851043701
    3. '=[]' → logprob: -8.56347942352295
    4. ' ' → logprob: -10.93847942352295
    5. ':' → logprob: -12.56347942352295
    6. '=set' → logprob: -13.43847942352295
    7. 's' → logprob: -14.18847942352295
    8. '=[]
' → logprob: -14.31347942352295
    9. '   ' → logprob: -14.56347942352295
    10. '  ' → logprob: -14.68847942352295

Token 48: ' None' (ID: 4662)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3422516882419586
    2. ' {' → logprob: -2.342251777648926
    3. ' []' → logprob: -2.467251777648926
    4. ' set' → logprob: -2.717251777648926
    5. '[' → logprob: -3.467251777648926
    6. '{' → logprob: -5.342251777648926
    7. 'set' → logprob: -5.592251777648926
    8. '[]' → logprob: -5.842251777648926
    9. ' ' → logprob: -8.592251777648926
    10. '   ' → logprob: -11.467251777648926

Token 49: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10509736090898514
    2. '   ' → logprob: -2.4800972938537598
    3. 'def' → logprob: -5.48009729385376
    4. '    
' → logprob: -5.60509729385376
    5. ' def' → logprob: -6.10509729385376
    6. '\n' → logprob: -6.10509729385376
    7. '```' → logprob: -6.35509729385376
    8. '\' → logprob: -7.10509729385376
    9. '<|end|>' → logprob: -8.105097770690918
    10. ' 
' → logprob: -8.480097770690918

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043615855276584625
    2. ' def' → logprob: -4.418615818023682
    3. '
' → logprob: -4.543615818023682
    4. 'def' → logprob: -4.918615818023682
    5. '    
' → logprob: -4.918615818023682
    6. ' ' → logprob: -6.543615818023682
    7. ' 
' → logprob: -6.543615818023682
    8. '\n' → logprob: -7.668615818023682
    9. '\' → logprob: -7.918615818023682
    10. '  
' → logprob: -8.04361629486084

Token 51: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.15383756160736084
    2. ' def' → logprob: -2.1538376808166504
    3. '   ' → logprob: -3.7788376808166504
    4. 'd' → logprob: -6.27883768081665
    5. ' ' → logprob: -7.65383768081665
    6. '
' → logprob: -7.77883768081665
    7. ' 
' → logprob: -7.90383768081665
    8. '```' → logprob: -8.653837203979492
    9. '    
' → logprob: -8.778837203979492
    10. 'de' → logprob: -9.528837203979492

Token 52: ' _' (ID: 1175)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -1.088531255722046
    2. ' def' → logprob: -1.213531255722046
    3. ' _' → logprob: -1.713531255722046
    4. ' generate' → logprob: -2.588531255722046
    5. '_' → logprob: -3.213531255722046
    6. ' ' → logprob: -3.463531255722046
    7. ' iter' → logprob: -4.463531494140625
    8. ' space' → logprob: -5.088531494140625
    9. ' calculate' → logprob: -5.838531494140625
    10. ' h' → logprob: -5.963531494140625

Token 53: 'generate' (ID: 36386)
  Prédit: 'generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.004451127722859383
    2. 'h' → logprob: -6.754451274871826
    3. 'compute' → logprob: -6.754451274871826
    4. '_generate' → logprob: -7.004451274871826
    5. 'init' → logprob: -7.129451274871826
    6. 'gen' → logprob: -8.629450798034668
    7. 'initialize' → logprob: -9.754450798034668
    8. 'calculate' → logprob: -10.379450798034668
    9. 'get' → logprob: -10.379450798034668
    10. 'is' → logprob: -10.879450798034668

Token 54: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.6152816414833069
    2. '_' → logprob: -0.8652816414833069
    3. '(' → logprob: -4.240281581878662
    4. '_numbers' → logprob: -4.490281581878662
    5. '(self' → logprob: -4.865281581878662
    6. '_self' → logprob: -5.990281581878662
    7. ' _' → logprob: -7.740281581878662
    8. '```' → logprob: -7.740281581878662
    9. '_list' → logprob: -7.865281581878662
    10. 'self' → logprob: -8.49028205871582

Token 55: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -0.0003256911295466125
    2. '_' → logprob: -8.500326156616211
    3. 'am' → logprob: -10.750326156616211
    4. 'amm' → logprob: -10.875326156616211
    5. '   ' → logprob: -11.500326156616211
    6. '```' → logprob: -11.750326156616211
    7. ' _' → logprob: -12.000326156616211
    8. 'ammer' → logprob: -12.000326156616211
    9. 'umming' → logprob: -12.000326156616211
    10. 'a' → logprob: -12.000326156616211

Token 56: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.011423029005527496
    2. '_' → logprob: -4.636423110961914
    3. '_n' → logprob: -6.761423110961914
    4. '_N' → logprob: -8.011423110961914
    5. 'Numbers' → logprob: -9.011423110961914
    6. '_number' → logprob: -11.136423110961914
    7. ' _' → logprob: -11.636423110961914
    8. '```' → logprob: -12.136423110961914
    9. '_values' → logprob: -12.261423110961914
    10. '_words' → logprob: -13.261423110961914

Token 57: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03438923507928848
    2. '(' → logprob: -3.4093892574310303
    3. ' (' → logprob: -7.534389019012451
    4. 'self' → logprob: -8.65938949584961
    5. '   ' → logprob: -11.53438949584961
    6. '(
' → logprob: -11.65938949584961
    7. ' ' → logprob: -12.28438949584961
    8. '(s' → logprob: -12.53438949584961
    9. ' self' → logprob: -12.78438949584961
    10. '       ' → logprob: -13.40938949584961

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001985140610486269
    2. ')' → logprob: -7.2519850730896
    3. 'self' → logprob: -7.3769850730896
    4. ',' → logprob: -7.5019850730896
    5. '):
' → logprob: -9.751985549926758
    6. ':' → logprob: -10.751985549926758
    7. ' ):' → logprob: -11.376985549926758
    8. '   ' → logprob: -13.626985549926758
    9. '):

' → logprob: -14.376985549926758
    10. '):
' → logprob: -14.751985549926758

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12427449971437454
    2. '        ' → logprob: -2.374274492263794
    3. '[]' → logprob: -5.499274730682373
    4. '    ' → logprob: -5.624274730682373
    5. ':' → logprob: -5.874274730682373
    6. ' ' → logprob: -5.999274730682373
    7. '   ' → logprob: -6.374274730682373
    8. 'n' → logprob: -6.499274730682373
    9. '[' → logprob: -6.749274730682373
    10. '```' → logprob: -6.874274730682373

Token 60: ' #' (ID: 1069)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5878673195838928
    2. 'h' → logprob: -0.8378673195838928
    3. ' numbers' → logprob: -5.337867259979248
    4. 'numbers' → logprob: -6.337867259979248
    5. ' result' → logprob: -6.837867259979248
    6. '       ' → logprob: -7.087867259979248
    7. ' self' → logprob: -7.212867259979248
    8. 'import' → logprob: -7.462867259979248
    9. ' import' → logprob: -7.587867259979248
    10. ' nums' → logprob: -8.212867736816406

Token 61: ' Using' (ID: 17511)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.850051999092102
    2. ' numbers' → logprob: -1.475051999092102
    3. 'h' → logprob: -1.850051999092102
    4. ' if' → logprob: -2.7250518798828125
    5. 'numbers' → logprob: -3.1000518798828125
    6. ' import' → logprob: -3.7250518798828125
    7. ' generated' → logprob: -4.4750518798828125
    8. 'import' → logprob: -4.9750518798828125
    9. ' nums' → logprob: -5.2250518798828125
    10. ' self' → logprob: -5.4750518798828125

Token 62: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.25781160593032837
    2. ' import' → logprob: -1.8828115463256836
    3. ' dynamic' → logprob: -3.8828115463256836
    4. ' self' → logprob: -5.007811546325684
    5. ' an' → logprob: -5.132811546325684
    6. ' sets' → logprob: -5.132811546325684
    7. 'import' → logprob: -5.257811546325684
    8. 'a' → logprob: -5.382811546325684
    9. ' set' → logprob: -5.382811546325684
    10. ' h' → logprob: -5.507811546325684

Token 63: ' sophisticated' (ID: 36278)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.2119276076555252
    2. 'min' → logprob: -1.8369276523590088
    3. ' heap' → logprob: -4.08692741394043
    4. 'import' → logprob: -5.08692741394043
    5. 'heap' → logprob: -5.46192741394043
    6. ' set' → logprob: -6.33692741394043
    7. ' import' → logprob: -6.46192741394043
    8. ' dynamic' → logprob: -8.33692741394043
    9. 'from' → logprob: -8.71192741394043
    10. ' from' → logprob: -8.83692741394043

Token 64: ' abstract' (ID: 13004)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.26663070917129517
    2. ' algorithm' → logprob: -1.8916306495666504
    3. ' method' → logprob: -3.1416306495666504
    4. ' dynamic' → logprob: -4.64163064956665
    5. 'algorithm' → logprob: -4.76663064956665
    6. 'appro' → logprob: -5.14163064956665
    7. ' min' → logprob: -5.89163064956665
    8. ' set' → logprob: -6.26663064956665
    9. ' priority' → logprob: -6.64163064956665
    10. ' merge' → logprob: -6.89163064956665

Token 65: 'ed' (ID: 295)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.386820524930954
    2. ' method' → logprob: -1.7618205547332764
    3. 'method' → logprob: -2.7618205547332764
    4. 'ion' → logprob: -3.5118205547332764
    5. ' data' → logprob: -3.7618205547332764
    6. ' algorithm' → logprob: -4.261820316314697
    7. 'data' → logprob: -5.261820316314697
    8. 'algorithm' → logprob: -6.636820316314697
    9. 'heap' → logprob: -6.886820316314697
    10. 'ed' → logprob: -6.886820316314697

Token 66: ' method' (ID: 2595)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.24047937989234924
    2. ' method' → logprob: -1.7404793500900269
    3. ' algorithm' → logprob: -3.8654794692993164
    4. 'appro' → logprob: -5.615479469299316
    5. 'method' → logprob: -5.865479469299316
    6. ' heap' → logprob: -6.615479469299316
    7. ' generator' → logprob: -6.865479469299316
    8. ' set' → logprob: -6.990479469299316
    9. 'algorithm' → logprob: -7.115479469299316
    10. '```' → logprob: -7.240479469299316

Token 67: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' priority' (ID: 17621)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9613736271858215
    2. ' heap' → logprob: -0.9613736271858215
    3. ' dynamic' → logprob: -2.7113735675811768
    4. 'heap' → logprob: -2.8363735675811768
    5. ' import' → logprob: -3.4613735675811768
    6. 'import' → logprob: -3.9613735675811768
    7. 'a' → logprob: -4.211373805999756
    8. ' self' → logprob: -4.586373805999756
    9. ' the' → logprob: -4.961373805999756
    10. ' sets' → logprob: -5.086373805999756

Token 69: ' queues' (ID: 101913)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02739107608795166
    2. ' queue' → logprob: -4.152390956878662
    3. '_queue' → logprob: -5.402390956878662
    4. ' _' → logprob: -5.652390956878662
    5. ' ' → logprob: -6.027390956878662
    6. 'queue' → logprob: -7.777390956878662
    7. '   ' → logprob: -8.77739143371582
    8. ')' → logprob: -9.15239143371582
    9. 'q' → logprob: -9.77739143371582
    10. ' )' → logprob: -10.27739143371582

Token 70: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2973202168941498
    2. '<|end|>' → logprob: -1.5473202466964722
    3. '
' → logprob: -3.7973201274871826
    4. ':' → logprob: -4.672320365905762
    5. '<|end|>' → logprob: -5.422320365905762
    6. ',' → logprob: -5.922320365905762
    7. '   ' → logprob: -6.297320365905762
    8. 'import' → logprob: -7.172320365905762
    9. ')' → logprob: -7.547320365905762
    10. '```' → logprob: -7.797320365905762

Token 71: ' multiple' (ID: 7598)
  Prédit: ' sets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sets' → logprob: -0.1347936987876892
    2. ' dynamic' → logprob: -2.509793758392334
    3. ' heap' → logprob: -3.634793758392334
    4. ' heaps' → logprob: -5.634793758392334
    5. ' set' → logprob: -5.759793758392334
    6. ' a' → logprob: -5.759793758392334
    7. 'sets' → logprob: -6.134793758392334
    8. ' multiple' → logprob: -6.384793758392334
    9. ' import' → logprob: -6.759793758392334
    10. ' generators' → logprob: -7.259793758392334

Token 72: ' iter' (ID: 10621)
  Prédit: ' pointers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pointers' → logprob: -0.6144593358039856
    2. ' iter' → logprob: -1.6144592761993408
    3. ' indices' → logprob: -1.6144592761993408
    4. 'indices' → logprob: -3.989459276199341
    5. ' indexes' → logprob: -4.48945951461792
    6. '   ' → logprob: -4.48945951461792
    7. 'p' → logprob: -5.61445951461792
    8. 'indexes' → logprob: -5.73945951461792
    9. ' generators' → logprob: -6.11445951461792
    10. 'iter' → logprob: -6.36445951461792

Token 73: 'ators' (ID: 4840)
  Prédit: 'ators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ators' → logprob: -0.04878629371523857
    2. 'tools' → logprob: -3.0487864017486572
    3. '   ' → logprob: -9.548786163330078
    4. 'ools' → logprob: -10.173786163330078
    5. '```' → logprob: -10.423786163330078
    6. 'ertools' → logprob: -10.923786163330078
    7. 'ables' → logprob: -11.673786163330078
    8. 'a' → logprob: -12.298786163330078
    9. 'actors' → logprob: -13.048786163330078
    10. ' ' → logprob: -13.173786163330078

Token 74: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7187443375587463
    2. ':' → logprob: -1.9687442779541016
    3. '<|end|>' → logprob: -1.9687442779541016
    4. '
' → logprob: -2.2187442779541016
    5. '(' → logprob: -4.093744277954102
    6. ' =' → logprob: -4.343744277954102
    7. '\' → logprob: -4.593744277954102
    8. ',' → logprob: -4.593744277954102
    9. '   ' → logprob: -4.718744277954102
    10. ' ' → logprob: -4.718744277954102

Token 75: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5581116676330566
    2. '       ' → logprob: -1.0581116676330566
    3. '
' → logprob: -3.8081116676330566
    4. '<|end|>' → logprob: -3.8081116676330566
    5. '   ' → logprob: -4.433111667633057
    6. ',' → logprob: -5.308111667633057
    7. '\' → logprob: -5.808111667633057
    8. '[' → logprob: -5.933111667633057
    9. '):' → logprob: -5.933111667633057
    10. ')' → logprob: -6.558111667633057

Token 76: ' import' (ID: 1588)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27550604939460754
    2. '        ' → logprob: -2.525506019592285
    3. '
' → logprob: -2.900506019592285
    4. 'import' (adapté à ' import') → logprob: -3.150506019592285
    5. 'n' → logprob: -4.150506019592285
    6. '        
' → logprob: -4.900506019592285
    7. '```' → logprob: -5.150506019592285
    8. '<|end|>' → logprob: -5.150506019592285
    9. ' ' → logprob: -5.650506019592285
    10. ' 
' → logprob: -5.900506019592285

Token 77: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.0005969968624413013
    2. ' ' → logprob: -8.12559700012207
    3. ' itertools' → logprob: -8.25059700012207
    4. 'heap' → logprob: -10.25059700012207
    5. ' queue' → logprob: -13.12559700012207
    6. '  ' → logprob: -14.75059700012207
    7. ' math' → logprob: -15.00059700012207
    8. ' he' → logprob: -15.12559700012207
    9. ' ' → logprob: -15.12559700012207
    10. ' heaps' → logprob: -15.50059700012207

Token 78: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0445127372804563e-05
    2. 'queue' → logprob: -11.62501049041748
    3. '_queue' → logprob: -15.00001049041748
    4. '_' → logprob: -15.37501049041748
    5. ',' → logprob: -15.87501049041748
    6. ' queue' → logprob: -15.87501049041748
    7. '=' → logprob: -16.000009536743164
    8. 's' → logprob: -16.375009536743164
    9. ')' → logprob: -16.500009536743164
    10. '<|end|>' → logprob: -17.125009536743164

Token 79: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46890273690223694
    2. '       ' → logprob: -1.0939027070999146
    3. '        
' → logprob: -3.593902826309204
    4. '        ' → logprob: -5.593902587890625
    5. '<|end|>' → logprob: -5.718902587890625
    6. ' 
' → logprob: -6.718902587890625
    7. '

' → logprob: -7.343902587890625
    8. '
' → logprob: -7.468902587890625
    9. '  
' → logprob: -7.968902587890625
    10. '    
' → logprob: -7.968902587890625

Token 80: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4059083163738251
    2. '       ' → logprob: -1.1559083461761475
    3. '        
' → logprob: -4.405908107757568
    4. '<|end|>' → logprob: -6.030908107757568
    5. '

' → logprob: -6.405908107757568
    6. '  
' → logprob: -7.405908107757568
    7. ' 
' → logprob: -7.655908107757568
    8. '    
' → logprob: -7.905908107757568
    9. '
' → logprob: -8.780908584594727
    10. '        ' → logprob: -8.905908584594727

Token 81: ' heap' (ID: 37237)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.038431715220212936
    2. '       ' → logprob: -3.7884316444396973
    3. '

' → logprob: -4.913431644439697
    4. '        
' → logprob: -5.288431644439697
    5. '
' → logprob: -7.788431644439697
    6. ' 
' → logprob: -7.788431644439697
    7. 'numbers' → logprob: -8.288432121276855
    8. 'n' → logprob: -8.663432121276855
    9. '    
' → logprob: -8.663432121276855
    10. 'h' → logprob: -8.663432121276855

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33431312441825867
    2. '=' → logprob: -1.334313154220581
    3. ',' → logprob: -4.584312915802002
    4. 'q' → logprob: -4.834312915802002
    5. '<|end|>' → logprob: -6.959312915802002
    6. '=[]' → logprob: -7.584312915802002
    7. ')' → logprob: -7.709312915802002
    8. ' ' → logprob: -8.45931339263916
    9. '_' → logprob: -8.70931339263916
    10. '.' → logprob: -8.83431339263916

Token 83: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6326619386672974
    2. '[' → logprob: -0.7576619386672974
    3. '[]' → logprob: -10.632661819458008
    4. ' []' → logprob: -10.632661819458008
    5. ' ' → logprob: -11.632661819458008
    6. '[self' → logprob: -13.757661819458008
    7. '{' → logprob: -14.007661819458008
    8. ' ' → logprob: -14.257661819458008
    9. '   ' → logprob: -14.632661819458008
    10. '[h' → logprob: -15.257661819458008

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024631983251310885
    2. ' ' → logprob: -8.375246047973633
    3. '(' → logprob: -11.375246047973633
    4. '   ' → logprob: -12.875246047973633
    5. ' (' → logprob: -14.250246047973633
    6. '    ' → logprob: -15.125246047973633
    7. '  ' → logprob: -15.250246047973633
    8. '```' → logprob: -16.312746047973633
    9. '       ' → logprob: -16.812746047973633
    10. '
' → logprob: -17.250246047973633

Token 85: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06231653690338135
    2. ',' → logprob: -2.812316417694092
    3. ' ]' → logprob: -8.31231689453125
    4. ']
' → logprob: -9.68731689453125
    5. ')' → logprob: -11.06231689453125
    6. ',
' → logprob: -11.81231689453125
    7. '}' → logprob: -12.81231689453125
    8. '   ' → logprob: -12.81231689453125
    9. '<|end|>' → logprob: -12.93731689453125
    10. ' ' → logprob: -13.31231689453125

Token 86: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24682307243347168
    2. '       ' → logprob: -1.7468230724334717
    3. '<|end|>' → logprob: -3.4968230724334717
    4. ',' → logprob: -4.996823310852051
    5. ' 
' → logprob: -5.871823310852051
    6. '        ' → logprob: -6.371823310852051
    7. '        
' → logprob: -6.746823310852051
    8. '  
' → logprob: -7.746823310852051
    9. ')' → logprob: -8.24682331085205
    10. ',
' → logprob: -8.37182331085205

Token 87: ' seen' (ID: 6177)
  Prédit: ' seen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seen' → logprob: -0.6383339166641235
    2. 'seen' (adapté à ' seen') → logprob: -1.0133339166641235
    3. ' h' → logprob: -3.013333797454834
    4. 'h' → logprob: -4.388333797454834
    5. ' generated' → logprob: -4.388333797454834
    6. ' self' → logprob: -4.763333797454834
    7. 'self' → logprob: -5.388333797454834
    8. '       ' → logprob: -5.513333797454834
    9. 'generated' → logprob: -5.513333797454834
    10. ' s' → logprob: -6.013333797454834

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005263645201921463
    2. '=' → logprob: -5.255263805389404
    3. ' ' → logprob: -11.380263328552246
    4. '<|end|>' → logprob: -11.505263328552246
    5. '=set' → logprob: -13.130263328552246
    6. ',' → logprob: -13.130263328552246
    7. 's' → logprob: -13.255263328552246
    8. ' ={' → logprob: -14.380263328552246
    9. ' =
' → logprob: -14.380263328552246
    10. ':' → logprob: -15.130263328552246

Token 89: ' set' (ID: 920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.47444143891334534
    2. ' {' → logprob: -0.974441409111023
    3. 'set' → logprob: -8.474441528320312
    4. ' set' → logprob: -8.849441528320312
    5. '{s' → logprob: -11.974441528320312
    6. ' ' → logprob: -12.349441528320312
    7. ' ' → logprob: -13.849441528320312
    8. '   ' → logprob: -15.724441528320312
    9. '{
' → logprob: -15.849441528320312
    10. '{return' → logprob: -16.849441528320312

Token 90: '(heap' (ID: 173794)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32763388752937317
    2. '()' → logprob: -2.452633857727051
    3. '({' → logprob: -2.452633857727051
    4. '([' → logprob: -2.827633857727051
    5. '{' → logprob: -3.077633857727051
    6. ' {' → logprob: -7.327633857727051
    7. '(
' → logprob: -7.577633857727051
    8. '<|end|>' → logprob: -8.20263385772705
    9. '<|end|>' → logprob: -9.32763385772705
    10. '(heap' → logprob: -9.57763385772705

Token 91: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003490514063742012
    2. ')
' → logprob: -8.000349044799805
    3. ' )' → logprob: -11.750349044799805
    4. '       ' → logprob: -13.375349044799805
    5. ')
' → logprob: -13.375349044799805
    6. ')

' → logprob: -13.875349044799805
    7. '   ' → logprob: -14.125349044799805
    8. ',' → logprob: -15.875349044799805
    9. '}' → logprob: -16.125349044799805
    10. ' ' → logprob: -16.375349044799805

Token 92: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002092326758429408
    2. '       ' → logprob: -6.502092361450195
    3. '<|end|>' → logprob: -8.877092361450195
    4. '
' → logprob: -9.002092361450195
    5. '        
' → logprob: -9.377092361450195
    6. ' 
' → logprob: -9.752092361450195
    7. '

' → logprob: -10.252092361450195
    8. '  
' → logprob: -10.502092361450195
    9. '\n' → logprob: -10.752092361450195
    10. '' → logprob: -10.752092361450195

Token 93: ' h' (ID: 312)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05573558062314987
    2. '       ' → logprob: -3.8057355880737305
    3. ' 
' → logprob: -4.0557355880737305
    4. '        
' → logprob: -5.3057355880737305
    5. 'while' → logprob: -5.5557355880737305
    6. '    
' → logprob: -6.9307355880737305
    7. ' while' → logprob: -6.9307355880737305
    8. '  
' → logprob: -7.3057355880737305
    9. 'result' → logprob: -7.5557355880737305
    10. '```' → logprob: -7.5557355880737305

Token 94: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -0.38020169734954834
    2. ' ' → logprob: -2.630201816558838
    3. '   ' → logprob: -2.630201816558838
    4. '       ' → logprob: -3.505201816558838
    5. '    ' → logprob: -3.880201816558838
    6. '        ' → logprob: -3.880201816558838
    7. 'amm' → logprob: -4.380201816558838
    8. '_' → logprob: -4.630201816558838
    9. '  ' → logprob: -4.755201816558838
    10. '```' → logprob: -4.880201816558838

Token 95: '_list' (ID: 4162)
  Prédit: '_numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.03267885372042656
    2. '_' → logprob: -3.5326788425445557
    3. '_values' → logprob: -6.782679080963135
    4. '_n' → logprob: -7.907679080963135
    5. 's' → logprob: -8.032678604125977
    6. '_list' → logprob: -8.157678604125977
    7. ' _' → logprob: -8.407678604125977
    8. '_nums' → logprob: -8.407678604125977
    9. '_indices' → logprob: -9.157678604125977
    10. ' =' → logprob: -9.782678604125977

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008677801117300987
    2. '=' → logprob: -4.758677959442139
    3. '=[]' → logprob: -10.38367748260498
    4. ',' → logprob: -10.63367748260498
    5. ' ' → logprob: -12.50867748260498
    6. ':' → logprob: -13.63367748260498
    7. 's' → logprob: -13.88367748260498
    8. ')' → logprob: -15.00867748260498
    9. '=[]
' → logprob: -15.25867748260498
    10. '[:]' → logprob: -15.38367748260498

Token 97: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.20540361106395721
    2. ' []' → logprob: -1.7054035663604736
    3. '[' → logprob: -5.580403804779053
    4. ' [' → logprob: -8.580403327941895
    5. '[]
' → logprob: -11.080403327941895
    6. '[]

' → logprob: -12.705403327941895
    7. '[]>' → logprob: -13.455403327941895
    8. ' []
' → logprob: -13.705403327941895
    9. '[]}' → logprob: -13.830403327941895
    10. ' ' → logprob: -14.330403327941895

Token 98: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18194817006587982
    2. '       ' → logprob: -1.806948184967041
    3. '        
' → logprob: -7.306948184967041
    4. ' 
' → logprob: -7.681948184967041
    5. '
' → logprob: -8.431947708129883
    6. '  
' → logprob: -8.931947708129883
    7. '<|end|>' → logprob: -9.181947708129883
    8. '\n' → logprob: -9.306947708129883
    9. '    
' → logprob: -9.431947708129883
    10. '   ' → logprob: -9.556947708129883

Token 99: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.06045350804924965
    2. '       ' → logprob: -3.310453414916992
    3. ' while' → logprob: -3.810453414916992
    4. '	while' → logprob: -11.560453414916992
    5. '
' → logprob: -11.935453414916992
    6. 'While' → logprob: -12.810453414916992
    7. '        
' → logprob: -12.935453414916992
    8. '   ' → logprob: -13.185453414916992
    9. '```' → logprob: -14.810453414916992
    10. ' While' → logprob: -15.185453414916992

Token 100: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.22762462496757507
    2. 'len' → logprob: -2.4776246547698975
    3. ' heap' → logprob: -2.6026246547698975
    4. ' len' → logprob: -3.1026246547698975
    5. '   ' → logprob: -7.977624416351318
    6. ' True' → logprob: -9.352624893188477
    7. 'h' → logprob: -9.727624893188477
    8. 'True' → logprob: -10.102624893188477
    9. 'he' → logprob: -10.977624893188477
    10. ' ' → logprob: -11.227624893188477

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.053002458065748215
    2. ' and' → logprob: -3.30300235748291
    3. ':
' → logprob: -4.30300235748291
    4. '[' → logprob: -7.67800235748291
    5. 'and' → logprob: -7.67800235748291
    6. '.pop' → logprob: -8.92800235748291
    7. '>' → logprob: -9.55300235748291
    8. '>:' → logprob: -10.30300235748291
    9. '<|end|>' → logprob: -10.67800235748291
    10. '   ' → logprob: -10.92800235748291

Token 102: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009230857715010643
    2. '       ' → logprob: -5.009231090545654
    3. 'n' → logprob: -7.009231090545654
    4. '   ' → logprob: -7.509231090545654
    5. '```' → logprob: -8.134230613708496
    6. ',' → logprob: -9.009230613708496
    7. ' current' → logprob: -9.509230613708496
    8. '               ' → logprob: -9.759230613708496
    9. '        ' → logprob: -9.759230613708496
    10. '	       ' → logprob: -10.009230613708496

Token 103: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.358985960483551
    2. ' current' → logprob: -2.1089859008789062
    3. 'num' → logprob: -2.4839859008789062
    4. 'curr' → logprob: -3.2339859008789062
    5. 'x' → logprob: -4.108985900878906
    6. 'n' → logprob: -4.483985900878906
    7. ' x' → logprob: -4.733985900878906
    8. ' curr' → logprob: -5.233985900878906
    9. ' num' → logprob: -5.608985900878906
    10. 'number' → logprob: -5.858985900878906

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02630564197897911
    2. '=' → logprob: -3.651305675506592
    3. '_number' → logprob: -13.151305198669434
    4. ' ' → logprob: -13.526305198669434
    5. ' =
' → logprob: -14.651305198669434
    6. '   ' → logprob: -14.776305198669434
    7. ' ' → logprob: -15.151305198669434
    8. '_' → logprob: -16.15130615234375
    9. '_num' → logprob: -16.15130615234375
    10. '=
' → logprob: -16.27630615234375

Token 105: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.12693944573402405
    2. 'heap' → logprob: -2.126939535140991
    3. '(heap' → logprob: -12.00193977355957
    4. ' he' → logprob: -12.62693977355957
    5. 'he' → logprob: -13.50193977355957
    6. '.heap' → logprob: -14.75193977355957
    7. '_heap' → logprob: -16.37693977355957
    8. ' ' → logprob: -17.00193977355957
    9. '   ' → logprob: -17.00193977355957
    10. '
' → logprob: -18.25193977355957

Token 106: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.04706013947725296
    2. ' =' → logprob: -3.422060251235962
    3. '.pop' → logprob: -4.672060012817383
    4. '=' → logprob: -5.672060012817383
    5. '[' → logprob: -8.547060012817383
    6. '       ' → logprob: -9.047060012817383
    7. 'pop' → logprob: -9.922060012817383
    8. '   ' → logprob: -10.172060012817383
    9. '.heap' → logprob: -10.672060012817383
    10. '.' → logprob: -11.172060012817383

Token 107: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -8.85235276655294e-05
    2. '.heap' → logprob: -9.500088691711426
    3. '.' → logprob: -11.750088691711426
    4. '   ' → logprob: -12.875088691711426
    5. 'he' → logprob: -13.625088691711426
    6. 'q' → logprob: -14.125088691711426
    7. '.pop' → logprob: -14.500088691711426
    8. ' .' → logprob: -15.000088691711426
    9. ' he' → logprob: -15.500088691711426
    10. '```' → logprob: -16.87508773803711

Token 108: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0007173155900090933
    2. 'pp' → logprob: -7.2507171630859375
    3. 'ap' → logprob: -12.375717163085938
    4. 'pop' → logprob: -13.000717163085938
    5. 'p' → logprob: -14.750717163085938
    6. 'replace' → logprob: -16.125717163085938
    7. 'op' → logprob: -16.125717163085938
    8. '[' → logprob: -16.625717163085938
    9. '```' → logprob: -17.000717163085938
    10. 'appe' → logprob: -17.250717163085938

Token 109: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0060898307710886
    2. 'ush' → logprob: -5.381089687347412
    3. 'app' → logprob: -6.881089687347412
    4. 'pop' → logprob: -8.00609016418457
    5. 'ap' → logprob: -9.63109016418457
    6. 'p' → logprob: -11.13109016418457
    7. 'u' → logprob: -12.38109016418457
    8. 'opf' → logprob: -12.38109016418457
    9. '[' → logprob: -13.00609016418457
    10. 'opleft' → logprob: -13.00609016418457

Token 110: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -4.127333340875339e-06
    2. '(' → logprob: -12.500003814697266
    3. 'heap' → logprob: -15.750003814697266
    4. ' (' → logprob: -16.000003814697266
    5. '(queue' → logprob: -16.250003814697266
    6. ' heap' → logprob: -17.625003814697266
    7. '```' → logprob: -18.000003814697266
    8. '   ' → logprob: -18.750003814697266
    9. '(
' → logprob: -19.375003814697266
    10. ' ' → logprob: -19.375003814697266

Token 111: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47442713379859924
    2. ')' → logprob: -0.9744271039962769
    3. ')
' → logprob: -8.599427223205566
    4. '           ' → logprob: -8.974427223205566
    5. ')

' → logprob: -10.599427223205566
    6. ' )
' → logprob: -12.224427223205566
    7. '       ' → logprob: -12.724427223205566
    8. ')`' → logprob: -13.599427223205566
    9. ')`
' → logprob: -13.849427223205566
    10. '               ' → logprob: -13.974427223205566

Token 112: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000657154421787709
    2. 'h' → logprob: -7.875657081604004
    3. '
' → logprob: -8.750657081604004
    4. ' h' → logprob: -9.750657081604004
    5. '            
' → logprob: -10.375657081604004
    6. '       ' → logprob: -11.625657081604004
    7. '```' → logprob: -11.625657081604004
    8. '               ' → logprob: -12.625657081604004
    9. '   ' → logprob: -12.750657081604004
    10. '<|end|>' → logprob: -13.750657081604004

Token 113: ' if' (ID: 538)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.17560094594955444
    2. 'h' → logprob: -2.300601005554199
    3. '           ' → logprob: -2.800601005554199
    4. '   ' → logprob: -10.0506010055542
    5. '	h' → logprob: -10.8006010055542
    6. ' ' → logprob: -13.1756010055542
    7. ' ' → logprob: -13.4256010055542
    8. '       ' → logprob: -13.4256010055542
    9. ',h' → logprob: -14.0506010055542
    10. '_h' → logprob: -14.0506010055542

Token 114: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0031794982496649027
    2. ' current' → logprob: -5.753179550170898
    3. '   ' → logprob: -14.378179550170898
    4. 'len' → logprob: -14.753179550170898
    5. '(current' → logprob: -15.378179550170898
    6. '	current' → logprob: -15.378179550170898
    7. '$current' → logprob: -16.1281795501709
    8. 'urrent' → logprob: -16.6281795501709
    9. ' ' → logprob: -16.7531795501709
    10. '=current' → logprob: -17.2531795501709

Token 115: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5759428143501282
    2. '>' → logprob: -0.8259428143501282
    3. ' ' → logprob: -13.575942993164062
    4. ' <=' → logprob: -14.075942993164062
    5. '<=' → logprob: -14.950942993164062
    6. '>=' → logprob: -15.075942993164062
    7. ' >=' → logprob: -15.450942993164062
    8. ' ' → logprob: -15.825942993164062
    9. '   ' → logprob: -16.325942993164062
    10. ' >
' → logprob: -16.950942993164062

Token 116: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10021767020225525
    2. ' self' → logprob: -2.350217580795288
    3. '           ' → logprob: -11.600217819213867
    4. '=self' → logprob: -13.975217819213867
    5. '       ' → logprob: -14.975217819213867
    6. '   ' → logprob: -15.725217819213867
    7. '(self' → logprob: -15.975217819213867
    8. '
' → logprob: -16.100217819213867
    9. '               ' → logprob: -16.100217819213867
    10. '	self' → logprob: -16.350217819213867

Token 117: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -6.253713218029588e-05
    2. '.' → logprob: -10.000062942504883
    3. 'limit' → logprob: -11.125062942504883
    4. ' .' → logprob: -13.250062942504883
    5. ' limit' → logprob: -14.875062942504883
    6. '.l' → logprob: -16.625062942504883
    7. '_limit' → logprob: -16.750062942504883
    8. 'Limit' → logprob: -17.500062942504883
    9. '   ' → logprob: -18.000062942504883
    10. '(limit' → logprob: -18.250062942504883

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3166240155696869
    2. ':
' → logprob: -1.3166240453720093
    3. '           ' → logprob: -5.816624164581299
    4. '               ' → logprob: -8.19162368774414
    5. ':
' → logprob: -9.81662368774414
    6. ' or' → logprob: -11.06662368774414
    7. ':return' → logprob: -11.56662368774414
    8. ' :
' → logprob: -11.81662368774414
    9. '):
' → logprob: -12.19162368774414
    10. ' :' → logprob: -12.81662368774414

Token 119: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.8624639324116288e-06
    2. '           ' → logprob: -14.125001907348633
    3. '                   ' → logprob: -15.625001907348633
    4. '              ' → logprob: -15.750001907348633
    5. 'break' → logprob: -15.750001907348633
    6. ' break' → logprob: -16.000001907348633
    7. ':' → logprob: -16.250001907348633
    8. '
' → logprob: -16.375001907348633
    9. '                
' → logprob: -16.500001907348633
    10. '```' → logprob: -16.625001907348633

Token 120: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0439915731549263
    2. 'break' → logprob: -3.4189915657043457
    3. ' break' → logprob: -4.668991565704346
    4. '           ' → logprob: -7.043991565704346
    5. '	break' → logprob: -11.168992042541504
    6. '                   ' → logprob: -11.793992042541504
    7. '_break' → logprob: -12.043992042541504
    8. '```' → logprob: -12.418992042541504
    9. 'continue' (adapté à ' continue') → logprob: -13.293992042541504
    10. '
' → logprob: -13.418992042541504

Token 121: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29295939207077026
    2. '
' → logprob: -1.417959451675415
    3. '            
' → logprob: -4.542959213256836
    4. '    
' → logprob: -7.792959213256836
    5. '  
' → logprob: -7.917959213256836
    6. '\n' → logprob: -9.167959213256836
    7. ' 
' → logprob: -9.917959213256836
    8. '<|end|>' → logprob: -10.167959213256836
    9. '           
' → logprob: -10.542959213256836
    10. '
' → logprob: -10.667959213256836

Token 122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010017190128564835
    2. '
' → logprob: -5.260017395019531
    3. '            
' → logprob: -5.385017395019531
    4. '    
' → logprob: -9.635017395019531
    5. '  
' → logprob: -9.760017395019531
    6. '<|end|>' → logprob: -10.760017395019531
    7. '           
' → logprob: -12.010017395019531
    8. '\n' → logprob: -12.135017395019531
    9. '        
' → logprob: -12.260017395019531
    10. '   
' → logprob: -12.510017395019531

Token 123: ' h' (ID: 312)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1595546305179596
    2. 'h' (adapté à ' h') → logprob: -2.0345547199249268
    3. '       ' → logprob: -4.534554481506348
    4. ' h' → logprob: -5.409554481506348
    5. '   ' → logprob: -6.534554481506348
    6. '            
' → logprob: -11.409554481506348
    7. 'if' → logprob: -11.784554481506348
    8. '
' → logprob: -11.784554481506348
    9. ' ' → logprob: -11.909554481506348
    10. '	h' → logprob: -12.284554481506348

Token 124: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -0.00014883324911352247
    2. '   ' → logprob: -9.50014877319336
    3. '       ' → logprob: -10.50014877319336
    4. '           ' → logprob: -12.12514877319336
    5. '_' → logprob: -12.62514877319336
    6. '        ' → logprob: -12.62514877319336
    7. 'am' → logprob: -12.62514877319336
    8. '```' → logprob: -12.62514877319336
    9. '    ' → logprob: -12.75014877319336
    10. '  ' → logprob: -12.87514877319336

Token 125: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.999452772201039e-05
    2. '_numbers' → logprob: -10.500029563903809
    3. '_' → logprob: -13.500029563903809
    4. 'list' → logprob: -15.000029563903809
    5. 'numbers' → logprob: -15.625029563903809
    6. ' _' → logprob: -15.875029563903809
    7. '_lists' → logprob: -16.125030517578125
    8. 'List' → logprob: -16.500030517578125
    9. '           ' → logprob: -17.250030517578125
    10. 's' → logprob: -17.250030517578125

Token 126: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004343645414337516
    2. '.' → logprob: -7.750434398651123
    3. '.app' → logprob: -13.500433921813965
    4. ' .' → logprob: -13.875433921813965
    5. '.ap' → logprob: -14.125433921813965
    6. '.extend' → logprob: -15.000433921813965
    7. 'append' → logprob: -15.375433921813965
    8. '_append' → logprob: -17.12543487548828
    9. '.Append' → logprob: -18.25043487548828
    10. '           ' → logprob: -18.75043487548828

Token 127: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.00408516637980938
    2. '(' → logprob: -5.504085063934326
    3. '(
' → logprob: -12.629085540771484
    4. 'current' → logprob: -12.754085540771484
    5. ' current' → logprob: -14.879085540771484
    6. '(cur' → logprob: -16.629085540771484
    7. '(

' → logprob: -17.004085540771484
    8. '(curr' → logprob: -17.504085540771484
    9. ' (' → logprob: -18.504085540771484
    10. '	current' → logprob: -19.254085540771484

Token 128: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12449714541435242
    2. '
' → logprob: -2.624497175216675
    3. ')' → logprob: -3.249497175216675
    4. ')
' → logprob: -5.499496936798096
    5. '            
' → logprob: -6.499496936798096
    6. ',' → logprob: -9.749497413635254
    7. '       ' → logprob: -10.624497413635254
    8. '               ' → logprob: -10.624497413635254
    9. '
' → logprob: -11.124497413635254
    10. '<|end|>' → logprob: -11.374497413635254

Token 129: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013840439496561885
    2. ' for' → logprob: -6.876384258270264
    3. 'for' → logprob: -8.001383781433105
    4. '            
' → logprob: -11.501383781433105
    5. '
' → logprob: -13.001383781433105
    6. '       ' → logprob: -13.626383781433105
    7. '   ' → logprob: -14.001383781433105
    8. '               ' → logprob: -14.501383781433105
    9. '```' → logprob: -14.501383781433105
    10. ',' → logprob: -15.876383781433105

Token 130: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.7146746763028204e-05
    2. ' for' → logprob: -10.25003719329834
    3. '           ' → logprob: -13.25003719329834
    4. '	for' → logprob: -19.500036239624023
    5. '   ' → logprob: -20.000036239624023
    6. '            
' → logprob: -20.125036239624023
    7. '       ' → logprob: -22.125036239624023
    8. '```' → logprob: -22.375036239624023
    9. '
' → logprob: -22.500036239624023
    10. ' ' → logprob: -23.250036239624023

Token 131: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5964918732643127
    2. 'prime' → logprob: -0.8464918732643127
    3. ' prime' → logprob: -4.096491813659668
    4. ' p' → logprob: -5.596491813659668
    5. '   ' → logprob: -14.846491813659668
    6. 'pr' → logprob: -15.721491813659668
    7. 'factor' → logprob: -15.971491813659668
    8. '_prime' → logprob: -15.971491813659668
    9. 'Prime' → logprob: -16.471492767333984
    10. '	p' → logprob: -17.096492767333984

Token 132: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006741304416209459
    2. 'in' → logprob: -5.006741523742676
    3. ' ' → logprob: -10.756741523742676
    4. ' p' → logprob: -13.256741523742676
    5. 'p' → logprob: -13.381741523742676
    6. '  ' → logprob: -15.006741523742676
    7. 's' → logprob: -15.256741523742676
    8. 'i' → logprob: -15.881741523742676
    9. '_in' → logprob: -16.00674057006836
    10. '	in' → logprob: -16.00674057006836

Token 133: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004082197323441505
    2. ' self' → logprob: -5.504082202911377
    3. '   ' → logprob: -13.129081726074219
    4. '(self' → logprob: -14.504081726074219
    5. 'elf' → logprob: -14.754081726074219
    6. ' ' → logprob: -14.754081726074219
    7. '       ' → logprob: -16.00408172607422
    8. '    ' → logprob: -16.00408172607422
    9. '  ' → logprob: -16.25408172607422
    10. '           ' → logprob: -17.12908172607422

Token 134: '.pr' (ID: 27292)
  Prédit: '.pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -7.350386295001954e-05
    2. 'pr' → logprob: -10.000073432922363
    3. '.' → logprob: -10.625073432922363
    4. ' .' → logprob: -13.250073432922363
    5. '	pr' → logprob: -13.875073432922363
    6. '.p' → logprob: -15.375073432922363
    7. ').' → logprob: -15.500073432922363
    8. '.pe' → logprob: -16.12507438659668
    9. 'Pr' → logprob: -16.62507438659668
    10. '].' → logprob: -16.75007438659668

Token 135: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.0012852331856265664
    2. 'mes' → logprob: -7.126285076141357
    3. 'es' → logprob: -9.501285552978516
    4. '[' → logprob: -10.126285552978516
    5. 'omes' → logprob: -10.126285552978516
    6. '#' → logprob: -10.626285552978516
    7. '(self' → logprob: -10.751285552978516
    8. 's' → logprob: -10.938785552978516
    9. '
' → logprob: -11.001285552978516
    10. '>' → logprob: -11.251285552978516

Token 136: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.28234273195266724
    2. ':' → logprob: -1.4073426723480225
    3. ' :
' → logprob: -7.282342910766602
    4. '):
' → logprob: -8.532342910766602
    5. ':
' → logprob: -8.782342910766602
    6. ' :' → logprob: -9.407342910766602
    7. '           ' → logprob: -10.032342910766602
    8. ':

' → logprob: -11.782342910766602
    9. '):' → logprob: -11.907342910766602
    10. '               ' → logprob: -12.907342910766602

Token 137: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010120340622961521
    2. ':
' → logprob: -4.760120391845703
    3. ':' → logprob: -7.760120391845703
    4. ',' → logprob: -8.135120391845703
    5. '):
' → logprob: -8.135120391845703
    6. ' new' → logprob: -8.760120391845703
    7. '	           ' → logprob: -9.135120391845703
    8. '           ' → logprob: -9.510120391845703
    9. 'new' → logprob: -10.510120391845703
    10. ' if' → logprob: -10.885120391845703

Token 138: ' nxt' (ID: 160200)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.8717753291130066
    2. ' next' → logprob: -1.4967753887176514
    3. 'next' → logprob: -1.9967753887176514
    4. 'new' → logprob: -2.1217753887176514
    5. ' nxt' → logprob: -2.7467753887176514
    6. 'candidate' → logprob: -4.121775150299072
    7. ' candidate' → logprob: -4.746775150299072
    8. 'n' → logprob: -5.121775150299072
    9. '               ' → logprob: -5.746775150299072
    10. '           ' → logprob: -5.996775150299072

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0052354102954268456
    2. '=' → logprob: -5.255235195159912
    3. 'u' → logprob: -14.50523567199707
    4. ' ' → logprob: -14.75523567199707
    5. '   ' → logprob: -15.25523567199707
    6. '_' → logprob: -15.50523567199707
    7. 'er' → logprob: -15.75523567199707
    8. '  ' → logprob: -17.38023567199707
    9. '	' → logprob: -17.38023567199707
    10. '=u' → logprob: -17.63023567199707

Token 140: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.3132643401622772
    2. 'current' → logprob: -1.3132643699645996
    3. '(current' → logprob: -13.563263893127441
    4. ' ' → logprob: -15.063263893127441
    5. '[current' → logprob: -15.188263893127441
    6. '$current' → logprob: -15.688263893127441
    7. '=current' → logprob: -15.813263893127441
    8. '	current' → logprob: -15.938263893127441
    9. 'urrent' → logprob: -16.188264846801758
    10. '   ' → logprob: -16.563264846801758

Token 141: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01470987219363451
    2. '*' → logprob: -4.264709949493408
    3. '*p' → logprob: -7.514709949493408
    4. ' ' → logprob: -14.01470947265625
    5. ' ' → logprob: -14.88970947265625
    6. '*object' → logprob: -17.51470947265625
    7. '*q' → logprob: -18.38970947265625
    8. '*n' → logprob: -18.76470947265625
    9. ' p' → logprob: -18.88970947265625
    10. ' **' → logprob: -19.63970947265625

Token 142: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.7610454708337784e-05
    2. ' p' → logprob: -10.500027656555176
    3. '_p' → logprob: -22.75002670288086
    4. '   ' → logprob: -24.25002670288086
    5. '*p' → logprob: -24.50002670288086
    6. '	p' → logprob: -25.00002670288086
    7. ' ' → logprob: -25.25002670288086
    8. '<p' → logprob: -25.62502670288086
    9. '  ' → logprob: -26.37502670288086
    10. 'п' → logprob: -27.37502670288086

Token 143: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03669753670692444
    2. '
' → logprob: -3.4116976261138916
    3. '<|end|>' → logprob: -6.5366973876953125
    4. '                
' → logprob: -7.6616973876953125
    5. '           ' → logprob: -8.036697387695312
    6. ' 
' → logprob: -8.536697387695312
    7. '              ' → logprob: -9.036697387695312
    8. '
' → logprob: -9.411697387695312
    9. '                ' → logprob: -9.411697387695312
    10. '<|end|>' → logprob: -9.536697387695312

Token 144: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.282920129597187e-05
    2. '           ' → logprob: -11.875012397766113
    3. '              ' → logprob: -13.000012397766113
    4. '                
' → logprob: -13.750012397766113
    5. '			' → logprob: -13.875012397766113
    6. '                ' → logprob: -14.875012397766113
    7. ' if' → logprob: -15.250012397766113
    8. '	           ' → logprob: -15.375012397766113
    9. '                   ' → logprob: -15.750012397766113
    10. '		       ' → logprob: -15.750012397766113

Token 145: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1144019216299057
    2. 'if' (adapté à ' if') → logprob: -2.6144018173217773
    3. '               ' → logprob: -3.3644018173217773
    4. '                ' → logprob: -8.739401817321777
    5. '
' → logprob: -9.489401817321777
    6. '                
' → logprob: -10.489401817321777
    7. ' 
' → logprob: -11.114401817321777
    8. ' ' → logprob: -11.739401817321777
    9. '	if' → logprob: -12.364401817321777
    10. '              ' → logprob: -12.489401817321777

Token 146: ' nxt' (ID: 160200)
  Prédit: ' nxt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nxt' → logprob: -0.38688117265701294
    2. 'n' → logprob: -1.1368811130523682
    3. 'n't' → logprob: -13.261880874633789
    4. '(n' → logprob: -13.386880874633789
    5. 'x' → logprob: -13.386880874633789
    6. '	n' → logprob: -13.511880874633789
    7. 'next' → logprob: -13.636880874633789
    8. ' next' → logprob: -14.136880874633789
    9. 'nx' → logprob: -14.636880874633789
    10. ' nex' → logprob: -15.011880874633789

Token 147: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.254456102848053
    2. ' not' → logprob: -2.129456043243408
    3. '<=' → logprob: -2.254456043243408
    4. 'not' → logprob: -7.129456043243408
    5. '>' → logprob: -11.754456520080566
    6. ' >' → logprob: -11.754456520080566
    7. ' <' → logprob: -12.379456520080566
    8. '<' → logprob: -12.879456520080566
    9. ' ' → logprob: -13.129456520080566
    10. '<|end|>' → logprob: -14.129456520080566

Token 148: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015023599844425917
    2. ' self' → logprob: -6.501502513885498
    3. '(self' → logprob: -19.376502990722656
    4. '   ' → logprob: -19.626502990722656
    5. '[self' → logprob: -20.126502990722656
    6. '           ' → logprob: -20.376502990722656
    7. '	self' → logprob: -20.626502990722656
    8. ' ' → logprob: -20.876502990722656
    9. '       ' → logprob: -20.876502990722656
    10. '=self' → logprob: -21.126502990722656

Token 149: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -0.3132895827293396
    2. 'limit' → logprob: -1.3132896423339844
    3. ' limit' → logprob: -10.688289642333984
    4. '.' → logprob: -13.063289642333984
    5. 'Limit' → logprob: -13.938289642333984
    6. '_limit' → logprob: -14.063289642333984
    7. '-limit' → logprob: -14.313289642333984
    8. ' .' → logprob: -14.563289642333984
    9. '(limit' → logprob: -16.813289642333984
    10. '.l' → logprob: -16.938289642333984

Token 150: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0046430183574557304
    2. 'and' → logprob: -5.379642963409424
    3. '                ' → logprob: -11.004643440246582
    4. '               ' → logprob: -12.629643440246582
    5. ' ' → logprob: -13.879643440246582
    6. '                   ' → logprob: -14.379643440246582
    7. '                    ' → logprob: -14.379643440246582
    8. '            ' → logprob: -15.504643440246582
    9. '              ' → logprob: -15.754643440246582
    10. '                  ' → logprob: -15.879643440246582

Token 151: ' nxt' (ID: 160200)
  Prédit: ' nxt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nxt' → logprob: -0.2014186978340149
    2. 'n' → logprob: -1.7014186382293701
    3. 'n't' → logprob: -13.20141887664795
    4. '(n' → logprob: -13.57641887664795
    5. 'x' → logprob: -14.32641887664795
    6. '	n' → logprob: -14.57641887664795
    7. 'nx' → logprob: -15.32641887664795
    8. ' n' → logprob: -15.57641887664795
    9. '[n' → logprob: -15.95141887664795
    10. ' nex' → logprob: -16.076417922973633

Token 152: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16022524237632751
    2. 'not' → logprob: -1.91022527217865
    3. ')' → logprob: -14.910224914550781
    4. ':not' → logprob: -15.660224914550781
    5. 'n' → logprob: -16.03522491455078
    6. '	not' → logprob: -16.41022491455078
    7. ' no' → logprob: -16.53522491455078
    8. '
' → logprob: -16.66022491455078
    9. ']' → logprob: -17.03522491455078
    10. 'and' → logprob: -17.41022491455078

Token 153: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08506329357624054
    2. 'in' → logprob: -2.9600632190704346
    3. ' seen' → logprob: -4.210063457489014
    4. 'seen' → logprob: -4.335063457489014
    5. '               ' → logprob: -7.585063457489014
    6. '_seen' → logprob: -7.710063457489014
    7. '           ' → logprob: -8.085062980651855
    8. 'se' → logprob: -8.460062980651855
    9. '                   ' → logprob: -9.460062980651855
    10. 's' → logprob: -9.960062980651855

Token 154: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.00020401719666551799
    2. ' seen' → logprob: -8.500204086303711
    3. '
' → logprob: -15.125204086303711
    4. '   ' → logprob: -16.12520408630371
    5. 'shown' → logprob: -17.00020408630371
    6. '           ' → logprob: -17.87520408630371
    7. 'see' → logprob: -17.87520408630371
    8. 's' → logprob: -19.00020408630371
    9. '       ' → logprob: -19.12520408630371
    10. '
' → logprob: -19.37520408630371

Token 155: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06748730689287186
    2. ':' → logprob: -3.0674872398376465
    3. '                   ' → logprob: -4.0674872398376465
    4. '               ' → logprob: -6.8174872398376465
    5. '                       ' → logprob: -8.442487716674805
    6. '):
' → logprob: -9.567487716674805
    7. '           ' → logprob: -9.692487716674805
    8. ' and' → logprob: -9.942487716674805
    9. ':
' → logprob: -10.442487716674805
    10. ' :
' → logprob: -10.817487716674805

Token 156: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00011892046313732862
    2. '                       ' → logprob: -10.12511920928955
    3. '               ' → logprob: -10.50011920928955
    4. '                    
' → logprob: -10.62511920928955
    5. '                  ' → logprob: -11.87511920928955
    6. '                           ' → logprob: -12.00011920928955
    7. '                    ' → logprob: -12.37511920928955
    8. '           ' → logprob: -12.87511920928955
    9. ',' → logprob: -13.75011920928955
    10. '
' → logprob: -13.87511920928955

Token 157: ' seen' (ID: 6177)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.4704661965370178
    2. ' seen' → logprob: -1.470466136932373
    3. '                       ' → logprob: -2.345466136932373
    4. '                   ' → logprob: -3.470466136932373
    5. 'heap' → logprob: -4.595466136932373
    6. 'seen' (adapté à ' seen') → logprob: -5.345466136932373
    7. '                    ' → logprob: -6.345466136932373
    8. '               ' → logprob: -7.720466136932373
    9. '   ' → logprob: -8.845466613769531
    10. '                     ' → logprob: -8.970466613769531

Token 158: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0019416073337197304
    2. '.' → logprob: -6.251941680908203
    3. '                   ' → logprob: -12.001941680908203
    4. 'add' → logprob: -12.501941680908203
    5. ' .' → logprob: -12.876941680908203
    6. '.update' → logprob: -15.626941680908203
    7. '.Add' → logprob: -16.001941680908203
    8. ' add' → logprob: -16.251941680908203
    9. '                       ' → logprob: -17.126941680908203
    10. '   ' → logprob: -17.501941680908203

Token 159: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009120595059357584
    2. '(' → logprob: -7.000912189483643
    3. ' (' → logprob: -14.750911712646484
    4. '(
' → logprob: -16.125911712646484
    5. '(nx' → logprob: -17.375911712646484
    6. 'n' → logprob: -17.625911712646484
    7. '(next' → logprob: -18.250911712646484
    8. '(

' → logprob: -18.875911712646484
    9. '(x' → logprob: -19.500911712646484
    10. '((' → logprob: -20.125911712646484

Token 160: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -4.3464544432936236e-05
    2. 'x' → logprob: -10.250043869018555
    3. 't' → logprob: -12.000043869018555
    4. '   ' → logprob: -13.875043869018555
    5. '```' → logprob: -14.875043869018555
    6. ')' → logprob: -15.750043869018555
    7. 'st' → logprob: -16.375043869018555
    8. 'ext' → logprob: -16.500043869018555
    9. '
' → logprob: -16.875043869018555
    10. ' nxt' → logprob: -17.000043869018555

Token 161: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2817825973033905
    2. ')' → logprob: -1.656782627105713
    3. '                   ' → logprob: -2.906782627105713
    4. ')
' → logprob: -9.406782150268555
    5. '               ' → logprob: -10.281782150268555
    6. '           ' → logprob: -10.906782150268555
    7. '       ' → logprob: -12.406782150268555
    8. '   ' → logprob: -12.531782150268555
    9. '                       ' → logprob: -13.031782150268555
    10. ' )
' → logprob: -13.156782150268555

Token 162: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0026636465918272734
    2. 'heap' → logprob: -6.127663612365723
    3. ' heap' → logprob: -8.127663612365723
    4. '           ' → logprob: -9.752663612365723
    5. '               ' → logprob: -10.377663612365723
    6. '(heap' → logprob: -10.502663612365723
    7. '```' → logprob: -10.502663612365723
    8. '
' → logprob: -11.127663612365723
    9. '				' → logprob: -11.502663612365723
    10. '   ' → logprob: -12.752663612365723

Token 163: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.0015154577558860183
    2. ' heap' → logprob: -6.5015153884887695
    3. '                   ' → logprob: -11.75151538848877
    4. '               ' → logprob: -12.75151538848877
    5. '           ' → logprob: -13.37651538848877
    6. '   ' → logprob: -15.12651538848877
    7. 'he' → logprob: -15.75151538848877
    8. '                       ' → logprob: -16.376516342163086
    9. '.heap' → logprob: -16.501516342163086
    10. '(heap' → logprob: -16.626516342163086

Token 164: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.704273118884885e-07
    2. '.q' → logprob: -15.000000953674316
    3. 'p' → logprob: -16.625
    4. '.' → logprob: -16.75
    5. '.he' → logprob: -16.75
    6. '.push' → logprob: -16.875
    7. ' .' → logprob: -17.125
    8. ' q' → logprob: -17.25
    9. '.append' → logprob: -17.5
    10. '.heap' → logprob: -18.25

Token 165: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -6.034592388459714e-06
    2. '.heap' → logprob: -12.375005722045898
    3. '.' → logprob: -14.125005722045898
    4. '.push' → logprob: -14.375005722045898
    5. 'he' → logprob: -14.750005722045898
    6. ' .' → logprob: -17.0000057220459
    7. ').' → logprob: -18.2500057220459
    8. 'q' → logprob: -18.8750057220459
    9. '.h' → logprob: -18.8750057220459
    10. ' he' → logprob: -19.1250057220459

Token 166: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -5.200166469876422e-06
    2. 'ap' → logprob: -12.375004768371582
    3. 'pp' → logprob: -14.125004768371582
    4. 'appen' → logprob: -17.0000057220459
    5. 'push' → logprob: -18.0000057220459
    6. 'a' → logprob: -18.0000057220459
    7. 'appe' → logprob: -18.6250057220459
    8. '[' → logprob: -18.8750057220459
    9. ' app' → logprob: -19.0000057220459
    10. 'append' → logprob: -19.0000057220459

Token 167: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -1.1994775377388578e-05
    2. 'push' → logprob: -11.375012397766113
    3. 'sh' → logprob: -14.875012397766113
    4. 'app' → logprob: -18.375011444091797
    5. 'USH' → logprob: -18.375011444091797
    6. '   ' → logprob: -18.875011444091797
    7. '```' → logprob: -19.500011444091797
    8. 'op' → logprob: -19.625011444091797
    9. 'p' → logprob: -20.125011444091797
    10. 'us' → logprob: -20.500011444091797

Token 168: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.981667537620524e-06
    2. 'heap' → logprob: -13.500001907348633
    3. '(' → logprob: -14.875001907348633
    4. ' (' → logprob: -16.500001907348633
    5. ' heap' → logprob: -17.500001907348633
    6. '(
' → logprob: -19.125001907348633
    7. '```' → logprob: -19.250001907348633
    8. '(h' → logprob: -19.750001907348633
    9. '.heap' → logprob: -19.875001907348633
    10. '(queue' → logprob: -20.375001907348633

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24599021673202515
    2. 'heap' → logprob: -2.24599027633667
    3. '(heap' → logprob: -2.24599027633667
    4. ' heap' → logprob: -5.62099027633667
    5. ' ,' → logprob: -6.62099027633667
    6. ',n' → logprob: -6.87099027633667
    7. ')' → logprob: -8.370989799499512
    8. '.heap' → logprob: -9.245989799499512
    9. '),' → logprob: -10.620989799499512
    10. '_heap' → logprob: -10.995989799499512

Token 170: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0036131395027041435
    2. ' nxt' → logprob: -5.628612995147705
    3. '   ' → logprob: -12.378613471984863
    4. ' n' → logprob: -13.003613471984863
    5. ' ' → logprob: -13.628613471984863
    6. '	n' → logprob: -13.753613471984863
    7. '(n' → logprob: -14.003613471984863
    8. '  ' → logprob: -14.253613471984863
    9. 'nx' → logprob: -14.253613471984863
    10. '       ' → logprob: -15.128613471984863

Token 171: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020914296328555793
    2. ')
' → logprob: -8.500208854675293
    3. ' )' → logprob: -13.125208854675293
    4. '               ' → logprob: -13.500208854675293
    5. '       ' → logprob: -13.875208854675293
    6. '           ' → logprob: -14.625208854675293
    7. ')

' → logprob: -15.125208854675293
    8. '                   ' → logprob: -15.625208854675293
    9. ')return' → logprob: -15.750208854675293
    10. '<|end|>' → logprob: -16.37520980834961

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009361166739836335
    2. '
' → logprob: -8.125936508178711
    3. 'return' → logprob: -8.125936508178711
    4. '<|end|>' → logprob: -8.875936508178711
    5. ' return' → logprob: -9.625936508178711
    6. '   ' → logprob: -10.000936508178711
    7. '           ' → logprob: -10.125936508178711
    8. 'self' → logprob: -11.375936508178711
    9. '               ' → logprob: -11.750936508178711
    10. '```' → logprob: -12.000936508178711

Token 173: ' h' (ID: 312)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08354999870061874
    2. 'self' → logprob: -2.583549976348877
    3. ' self' → logprob: -5.583549976348877
    4. 'return' → logprob: -7.708549976348877
    5. '   ' → logprob: -8.208550453186035
    6. ' return' → logprob: -9.833550453186035
    7. '	self' → logprob: -10.083550453186035
    8. '
' → logprob: -10.833550453186035
    9. '_self' → logprob: -10.958550453186035
    10. ' ' → logprob: -11.208550453186035

Token 174: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -0.05408629775047302
    2. 'return' → logprob: -3.054086208343506
    3. 'self' → logprob: -5.929086208343506
    4. '   ' → logprob: -6.429086208343506
    5. '       ' → logprob: -7.429086208343506
    6. 'else' → logprob: -8.429086685180664
    7. 'am' → logprob: -9.804086685180664
    8. '```' → logprob: -9.929086685180664
    9. 'amm' → logprob: -10.304086685180664
    10. ' ' → logprob: -10.929086685180664

Token 175: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.017927029868588e-05
    2. '_numbers' → logprob: -9.500080108642578
    3. 'List' → logprob: -12.750080108642578
    4. 'list' → logprob: -14.250080108642578
    5. '_' → logprob: -14.625080108642578
    6. '```' → logprob: -15.250080108642578
    7. '_lists' → logprob: -15.500080108642578
    8. '_l' → logprob: -15.750080108642578
    9. '\' → logprob: -15.750080108642578
    10. ' _' → logprob: -16.250080108642578

Token 176: '.sort' (ID: 19551)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14546875655651093
    2. '
' → logprob: -3.2704687118530273
    3. '       ' → logprob: -3.5204687118530273
    4. '<|end|>' → logprob: -3.6454687118530273
    5. ':return' → logprob: -3.7704687118530273
    6. '=' → logprob: -4.895468711853027
    7. ' return' → logprob: -5.645468711853027
    8. '   ' → logprob: -6.895468711853027
    9. '_return' → logprob: -6.895468711853027
    10. ' =' → logprob: -7.145468711853027

Token 177: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.12723225355148315
    2. '()' → logprob: -2.127232313156128
    3. '       ' → logprob: -8.502232551574707
    4. '()
' → logprob: -9.627232551574707
    5. '
' → logprob: -11.002232551574707
    6. '()

' → logprob: -11.877232551574707
    7. 'return' → logprob: -12.127232551574707
    8. '()\' → logprob: -13.127232551574707
    9. 'self' → logprob: -13.377232551574707
    10. '(
' → logprob: -13.627232551574707

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009571973932906985
    2. 'self' → logprob: -7.000957012176514
    3. ' self' → logprob: -10.500957489013672
    4. '
' → logprob: -12.375957489013672
    5. '<|end|>' → logprob: -12.750957489013672
    6. '```' → logprob: -12.875957489013672
    7. '	self' → logprob: -13.125957489013672
    8. 'return' → logprob: -13.375957489013672
    9. '        
' → logprob: -13.750957489013672
    10. ',' → logprob: -14.125957489013672

Token 179: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08633068203926086
    2. '       ' → logprob: -2.5863306522369385
    3. 'return' (adapté à ' return') → logprob: -5.336330890655518
    4. ' self' → logprob: -5.961330890655518
    5. ' return' → logprob: -11.08633041381836
    6. '   ' → logprob: -12.33633041381836
    7. '	self' → logprob: -13.21133041381836
    8. '
' → logprob: -14.21133041381836
    9. ' ' → logprob: -14.96133041381836
    10. '        
' → logprob: -15.21133041381836

Token 180: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.014164102263748646
    2. ' h' → logprob: -4.264163970947266
    3. '[h' → logprob: -15.139163970947266
    4. '	h' → logprob: -15.264163970947266
    5. '(h' → logprob: -16.639163970947266
    6. '   ' → logprob: -17.139163970947266
    7. '_h' → logprob: -18.639163970947266
    8. 'ham' → logprob: -19.139163970947266
    9. '```' → logprob: -19.639163970947266
    10. ' ' → logprob: -19.764163970947266

Token 181: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -0.0015268829884007573
    2. 'h' → logprob: -6.501526832580566
    3. 'ham' → logprob: -11.876526832580566
    4. '[' → logprob: -12.126526832580566
    5. 'amping' → logprob: -12.751526832580566
    6. 'am' → logprob: -12.751526832580566
    7. 'aming' → logprob: -14.001526832580566
    8. 'umming' → logprob: -14.126526832580566
    9. 'apping' → logprob: -14.626526832580566
    10. '```' → logprob: -14.626526832580566

Token 182: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.128163257315464e-07
    2. '_l' → logprob: -16.625
    3. '_numbers' → logprob: -16.625
    4. '_' → logprob: -17.375
    5. 'list' → logprob: -17.75
    6. '_lists' → logprob: -18.0
    7. 'List' → logprob: -19.0
    8. ' _' → logprob: -19.625
    9. '_List' → logprob: -20.25
    10. '```' → logprob: -20.375

Token 183: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10320894420146942
    2. 'def' → logprob: -2.6032090187072754
    3. '<|end|>' → logprob: -4.353209018707275
    4. ' def' → logprob: -5.478209018707275
    5. '
' → logprob: -5.603209018707275
    6. '    
' → logprob: -5.978209018707275
    7. ' ' → logprob: -8.228208541870117
    8. '```' → logprob: -8.978208541870117
    9. '	def' → logprob: -9.103208541870117
    10. '<|end|>' → logprob: -9.353208541870117

Token 185: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00199608551338315
    2. ' def' → logprob: -6.501996040344238
    3. '@property' → logprob: -8.001996040344238
    4. '   ' → logprob: -8.751996040344238
    5. '	def' → logprob: -15.251996040344238
    6. '    
' → logprob: -15.626996040344238
    7. '@' → logprob: -16.126996994018555
    8. ' ' → logprob: -16.251996994018555
    9. '```' → logprob: -17.126996994018555
    10. '
' → logprob: -17.626996994018555

Token 186: ' h' (ID: 312)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.08123655617237091
    2. 'get' → logprob: -3.2062366008758545
    3. ' h' → logprob: -3.4562366008758545
    4. 'h' → logprob: -6.581236362457275
    5. ' property' → logprob: -6.956236362457275
    6. ' _' → logprob: -7.081236362457275
    7. '_h' → logprob: -7.081236362457275
    8. ' def' → logprob: -7.206236362457275
    9. '_get' → logprob: -7.456236362457275
    10. 'def' → logprob: -8.581236839294434

Token 187: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -0.0005346827092580497
    2. 'amm' → logprob: -8.375535011291504
    3. 'am' → logprob: -9.750535011291504
    4. 'ammer' → logprob: -9.750535011291504
    5. '   ' → logprob: -10.375535011291504
    6. '_numbers' → logprob: -10.625535011291504
    7. 'aming' → logprob: -10.750535011291504
    8. '_' → logprob: -11.000535011291504
    9. '```' → logprob: -11.125535011291504
    10. 'def' → logprob: -11.500535011291504

Token 188: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.0011665337951853871
    2. '_' → logprob: -7.751166343688965
    3. '(self' → logprob: -8.376166343688965
    4. '_number' → logprob: -8.876166343688965
    5. '_n' → logprob: -9.001166343688965
    6. 's' → logprob: -9.751166343688965
    7. '(' → logprob: -10.626166343688965
    8. 'numbers' → logprob: -10.751166343688965
    9. '_list' → logprob: -11.126166343688965
    10. '   ' → logprob: -11.126166343688965

Token 189: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001956467516720295
    2. '(' → logprob: -6.251956462860107
    3. 'self' → logprob: -11.001956939697266
    4. 's' → logprob: -11.876956939697266
    5. '(s' → logprob: -13.626956939697266
    6. '_generator' → logprob: -14.251956939697266
    7. '(
' → logprob: -14.376956939697266
    8. '_list' → logprob: -14.376956939697266
    9. ' (' → logprob: -14.751956939697266
    10. 'def' → logprob: -15.626956939697266

Token 190: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08609161525964737
    2. 'self' → logprob: -2.9610915184020996
    3. '):
' → logprob: -3.8360915184020996
    4. ',' → logprob: -4.9610915184021
    5. ')' → logprob: -7.2110915184021
    6. '       ' → logprob: -7.4610915184021
    7. '   ' → logprob: -7.7110915184021
    8. '(self' → logprob: -8.961091995239258
    9. 'def' → logprob: -9.836091995239258
    10. '):
' → logprob: -10.211091995239258

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004919566214084625
    2. '(self' → logprob: -5.754919528961182
    3. 'self' → logprob: -6.754919528961182
    4. '(' → logprob: -8.50492000579834
    5. 'if' → logprob: -8.87992000579834
    6. ' self' → logprob: -9.37992000579834
    7. ' if' → logprob: -9.50492000579834
    8. ':' → logprob: -11.25492000579834
    9. '(
' → logprob: -11.25492000579834
    10. '   ' → logprob: -11.37992000579834

Token 192: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2157195806503296
    2. '       ' → logprob: -2.215719699859619
    3. ' if' → logprob: -2.465719699859619
    4. '   ' → logprob: -11.215719223022461
    5. '	if' → logprob: -13.215719223022461
    6. '```' → logprob: -15.340719223022461
    7. 'def' → logprob: -16.09071922302246
    8. '    ' → logprob: -16.34071922302246
    9. 'If' → logprob: -16.84071922302246
    10. 'self' → logprob: -16.96571922302246

Token 193: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023246178403496742
    2. ' self' → logprob: -3.7732462882995605
    3. '       ' → logprob: -15.148245811462402
    4. ' not' → logprob: -15.273245811462402
    5. 'not' → logprob: -15.773245811462402
    6. '(self' → logprob: -18.02324676513672
    7. '   ' → logprob: -18.27324676513672
    8. '	self' → logprob: -18.77324676513672
    9. 'elf' → logprob: -19.77324676513672
    10. '=self' → logprob: -20.64824676513672

Token 194: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -7.3458322731312364e-06
    2. '_h' → logprob: -11.875007629394531
    3. '.' → logprob: -16.12500762939453
    4. '_' → logprob: -16.25000762939453
    5. '_self' → logprob: -16.62500762939453
    6. ' _' → logprob: -18.00000762939453
    7. '_are' → logprob: -18.50000762939453
    8. '.h' → logprob: -18.62500762939453
    9. '_is' → logprob: -18.62500762939453
    10. '.__' → logprob: -19.00000762939453

Token 195: 'h' (ID: 71)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.0023397314362227917
    2. 'h' → logprob: -6.252339839935303
    3. '_generate' → logprob: -7.877339839935303
    4. 'generate' → logprob: -10.377339363098145
    5. ' _' → logprob: -15.627339363098145
    6. '_generated' → logprob: -16.00234031677246
    7. 'H' → logprob: -16.50234031677246
    8. '\' → logprob: -16.50234031677246
    9. '-h' → logprob: -17.12734031677246
    10. ' h' → logprob: -17.12734031677246

Token 196: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -0.0007260137936100364
    2. '_' → logprob: -8.000725746154785
    3. '_h' → logprob: -8.875725746154785
    4. 'am' → logprob: -9.625725746154785
    5. 'aming' → logprob: -10.375725746154785
    6. '_generate' → logprob: -10.500725746154785
    7. ' _' → logprob: -10.875725746154785
    8. 'generate' → logprob: -11.375725746154785
    9. '   ' → logprob: -11.750725746154785
    10. '_m' → logprob: -11.875725746154785

Token 197: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -9.088346359931165e-07
    2. 'numbers' → logprob: -14.750000953674316
    3. '_number' → logprob: -15.250000953674316
    4. '_values' → logprob: -16.5
    5. '_' → logprob: -17.0
    6. 's' → logprob: -17.25
    7. '\' → logprob: -17.75
    8. ' _' → logprob: -18.0
    9. '_list' → logprob: -18.125
    10. '```' → logprob: -18.5

Token 198: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.31326204538345337
    2. 'is' → logprob: -1.3132619857788086
    3. '	is' → logprob: -16.188262939453125
    4. ' ' → logprob: -16.938262939453125
    5. 'in' → logprob: -17.063262939453125
    6. 'i' → logprob: -17.313262939453125
    7. '   ' → logprob: -17.688262939453125
    8. 'None' → logprob: -18.313262939453125
    9. ')is' → logprob: -18.313262939453125
    10. ')' → logprob: -18.438262939453125

Token 199: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.048587486147880554
    2. ' None' → logprob: -3.0485875606536865
    3. '_None' → logprob: -17.173587799072266
    4. '   ' → logprob: -17.423587799072266
    5. 'not' → logprob: -18.298587799072266
    6. 'none' → logprob: -18.298587799072266
    7. ' not' → logprob: -19.798587799072266
    8. ' ' → logprob: -19.923587799072266
    9. '    ' → logprob: -20.798587799072266
    10. '=None' → logprob: -20.923587799072266

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10026588290929794
    2. ':
' → logprob: -2.3502659797668457
    3. '       ' → logprob: -10.975265502929688
    4. '():
' → logprob: -11.225265502929688
    5. '):
' → logprob: -11.725265502929688
    6. ':
' → logprob: -12.225265502929688
    7. '):' → logprob: -12.850265502929688
    8. ':

' → logprob: -12.975265502929688
    9. ' :' → logprob: -13.350265502929688
    10. '():' → logprob: -13.350265502929688

Token 201: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7735766768455505
    2. ':
' → logprob: -1.2735767364501953
    3. '       ' → logprob: -1.8985767364501953
    4. ':' → logprob: -2.2735767364501953
    5. '():
' → logprob: -5.523576736450195
    6. '):
' → logprob: -7.773576736450195
    7. 'self' → logprob: -7.773576736450195
    8. '(self' → logprob: -8.398576736450195
    9. '():' → logprob: -8.398576736450195
    10. ' self' → logprob: -9.023576736450195

Token 202: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.35569873452186584
    2. ' self' → logprob: -1.3556987047195435
    3. '       ' → logprob: -3.230698823928833
    4. '           ' → logprob: -6.230698585510254
    5. '   ' → logprob: -11.105698585510254
    6. '	self' → logprob: -11.230698585510254
    7. '(self' → logprob: -12.105698585510254
    8. '               ' → logprob: -12.230698585510254
    9. ' ' → logprob: -12.605698585510254
    10. ' ' → logprob: -12.855698585510254

Token 203: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0002875569916795939
    2. '_h' → logprob: -8.375288009643555
    3. '.' → logprob: -10.375288009643555
    4. '_generate' → logprob: -11.250288009643555
    5. '_' → logprob: -12.250288009643555
    6. ' .' → logprob: -13.125288009643555
    7. '.h' → logprob: -13.625288009643555
    8. ']._' → logprob: -14.250288009643555
    9. '_code' → logprob: -14.500288009643555
    10. '   ' → logprob: -14.500288009643555

Token 204: 'h' (ID: 71)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.12974156439304352
    2. 'h' → logprob: -2.129741668701172
    3. '_h' → logprob: -6.004741668701172
    4. '_generate' → logprob: -8.004741668701172
    5. ' generate' → logprob: -13.129741668701172
    6. 'H' → logprob: -13.129741668701172
    7. '.generate' → logprob: -14.004741668701172
    8. '(generate' → logprob: -14.379741668701172
    9. 'init' → logprob: -15.004741668701172
    10. 'ham' → logprob: -15.129741668701172

Token 205: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -0.1786957085132599
    2. '_generate' → logprob: -2.1786956787109375
    3. 'generate' → logprob: -3.1786956787109375
    4. 'am' → logprob: -5.6786956787109375
    5. 'enerate' → logprob: -6.1786956787109375
    6. '_' → logprob: -7.3036956787109375
    7. 'amm' → logprob: -7.8036956787109375
    8. '_h' → logprob: -8.178695678710938
    9. ' _' → logprob: -8.428695678710938
    10. 'h' → logprob: -8.428695678710938

Token 206: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -3.650518920039758e-06
    2. 'numbers' → logprob: -13.125003814697266
    3. '_generate' → logprob: -14.250003814697266
    4. 'generate' → logprob: -15.125003814697266
    5. '   ' → logprob: -16.250003814697266
    6. '```' → logprob: -16.500003814697266
    7. '_number' → logprob: -16.750003814697266
    8. 'self' → logprob: -16.750003814697266
    9. 'Numbers' → logprob: -16.750003814697266
    10. '       ' → logprob: -17.125003814697266

Token 207: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014150768518448
    2. ' =' → logprob: -1.7014150619506836
    3. '=self' → logprob: -13.326415061950684
    4. '＝' → logprob: -16.201416015625
    5. '=

' → logprob: -17.576416015625
    6. 'self' → logprob: -18.201416015625
    7. '=
' → logprob: -18.576416015625
    8. '=create' → logprob: -18.701416015625
    9. ' ' → logprob: -19.201416015625
    10. ' =
' → logprob: -19.576416015625

Token 208: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0380416102707386
    2. ' self' → logprob: -3.288041591644287
    3. '(self' → logprob: -17.163042068481445
    4. '[self' → logprob: -17.788042068481445
    5. '   ' → logprob: -17.913042068481445
    6. '	self' → logprob: -18.663042068481445
    7. 'list' → logprob: -18.913042068481445
    8. '           ' → logprob: -19.913042068481445
    9. 'set' → logprob: -20.038042068481445
    10. '       ' → logprob: -20.288042068481445

Token 209: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.014168680645525455
    2. '_generate' → logprob: -4.264168739318848
    3. '.' → logprob: -13.264168739318848
    4. '_generated' → logprob: -13.639168739318848
    5. '.generate' → logprob: -14.389168739318848
    6. '_h' → logprob: -14.514168739318848
    7. ' .' → logprob: -15.514168739318848
    8. '_' → logprob: -15.639168739318848
    9. ' _' → logprob: -15.889168739318848
    10. '_create' → logprob: -16.51416778564453

Token 210: 'generate' (ID: 36386)
  Prédit: 'generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -1.3306015716807451e-05
    2. '_generate' → logprob: -11.25001335144043
    3. '.generate' → logprob: -15.62501335144043
    4. 'enerate' → logprob: -17.87501335144043
    5. '(generate' → logprob: -18.12501335144043
    6. ' generate' → logprob: -19.00001335144043
    7. 'Generate' → logprob: -20.62501335144043
    8. 'h' → logprob: -22.37501335144043
    9. '
' → logprob: -22.62501335144043
    10. 'get' → logprob: -22.87501335144043

Token 211: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -4.60414821645827e-06
    2. '_' → logprob: -12.500004768371582
    3. ' _' → logprob: -14.750004768371582
    4. 'h' → logprob: -15.500004768371582
    5. '```' → logprob: -17.000003814697266
    6. '_H' → logprob: -17.625003814697266
    7. '\' → logprob: -17.750003814697266
    8. '_a' → logprob: -17.750003814697266
    9. 'H' → logprob: -17.875003814697266
    10. '_m' → logprob: -18.375003814697266

Token 212: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -0.002271581906825304
    2. '_h' → logprob: -6.50227165222168
    3. '_' → logprob: -7.37727165222168
    4. 'aming' → logprob: -10.12727165222168
    5. ' _' → logprob: -10.75227165222168
    6. 'am' → logprob: -11.25227165222168
    7. '```' → logprob: -11.25227165222168
    8. 'amm' → logprob: -11.50227165222168
    9. 'h' → logprob: -12.00227165222168
    10. '[' → logprob: -12.75227165222168

Token 213: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.00011725161311915144
    2. '_' → logprob: -9.125117301940918
    3. '_n' → logprob: -12.375117301940918
    4. '_tokens' → logprob: -13.500117301940918
    5. ' _' → logprob: -14.375117301940918
    6. 'numbers' → logprob: -14.500117301940918
    7. '_values' → logprob: -15.375117301940918
    8. '_nums' → logprob: -15.500117301940918
    9. '_number' → logprob: -15.625117301940918
    10. '_names' → logprob: -15.625117301940918

Token 214: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001503313542343676
    2. '()
' → logprob: -6.5015034675598145
    3. '()

' → logprob: -14.876502990722656
    4. '()
' → logprob: -15.251502990722656
    5. '()`' → logprob: -15.751502990722656
    6. '(' → logprob: -16.001502990722656
    7. ' ()' → logprob: -16.626502990722656
    8. '())' → logprob: -18.626502990722656
    9. '()"' → logprob: -19.126502990722656
    10. '（）' → logprob: -19.626502990722656

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040767391328699887
    2. 'return' → logprob: -8.000407218933105
    3. ' return' → logprob: -9.625407218933105
    4. '   ' → logprob: -12.625407218933105
    5. '           ' → logprob: -13.875407218933105
    6. '        
' → logprob: -14.125407218933105
    7. '
' → logprob: -14.500407218933105
    8. '      ' → logprob: -15.750407218933105
    9. '	' → logprob: -16.125408172607422
    10. '	return' → logprob: -16.125408172607422

Token 216: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.19279183447360992
    2. '       ' → logprob: -1.9427918195724487
    3. ' return' → logprob: -3.4427919387817383
    4. '   ' → logprob: -9.942791938781738
    5. '
' → logprob: -11.067791938781738
    6. '	return' → logprob: -12.817791938781738
    7. ':return' → logprob: -14.817791938781738
    8. '           ' → logprob: -15.692791938781738
    9. ' ' → logprob: -15.942791938781738
    10. '        
' → logprob: -16.067790985107422

Token 217: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.10020667314529419
    2. 'self' → logprob: -2.3502066135406494
    3. ' ' → logprob: -17.60020637512207
    4. '(self' → logprob: -18.10020637512207
    5. '[self' → logprob: -18.60020637512207
    6. '	self' → logprob: -18.85020637512207
    7. ' ' → logprob: -19.47520637512207
    8. '       ' → logprob: -20.22520637512207
    9. '_self' → logprob: -20.35020637512207
    10. '   ' → logprob: -20.60020637512207

Token 218: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.531315314830863e-06
    2. '.' → logprob: -13.000003814697266
    3. ' .' → logprob: -14.125003814697266
    4. '.h' → logprob: -14.875003814697266
    5. '_h' → logprob: -16.250003814697266
    6. '.__' → logprob: -17.500003814697266
    7. ' ' → logprob: -18.250003814697266
    8. '   ' → logprob: -18.750003814697266
    9. ')._' → logprob: -19.000003814697266
    10. ' _' → logprob: -19.500003814697266

Token 219: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -6.170270353322849e-05
    2. '_h' → logprob: -10.125061988830566
    3. 'ham' → logprob: -11.625061988830566
    4. 'generate' → logprob: -12.000061988830566
    5. '_generate' → logprob: -13.750061988830566
    6. '-h' → logprob: -14.250061988830566
    7. 'amming' → logprob: -14.375061988830566
    8. '.h' → logprob: -14.500061988830566
    9. '```' → logprob: -14.937561988830566
    10. '_' → logprob: -15.187561988830566

Token 220: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -4.704065213445574e-05
    2. '_' → logprob: -10.500046730041504
    3. 'am' → logprob: -11.625046730041504
    4. 'aming' → logprob: -11.750046730041504
    5. 'amping' → logprob: -14.500046730041504
    6. 'amm' → logprob: -14.750046730041504
    7. 'umming' → logprob: -14.750046730041504
    8. '[' → logprob: -15.000046730041504
    9. 'ing' → logprob: -16.00004768371582
    10. ' _' → logprob: -16.37504768371582

Token 221: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -3.128163257315464e-07
    2. ' _' → logprob: -15.75
    3. '_number' → logprob: -17.125
    4. '_' → logprob: -17.875
    5. 'numbers' → logprob: -18.0
    6. '```' → logprob: -18.0
    7. '._' → logprob: -18.375
    8. 'umbers' → logprob: -18.625
    9. '\' → logprob: -18.625
    10. '_n' → logprob: -18.75

Token 222: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 223: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 224: ' H' (ID: 487)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35398536920547485
    2. ' Prime' → logprob: -1.97898530960083
    3. ' H' → logprob: -2.60398530960083
    4. ' Factor' → logprob: -3.47898530960083
    5. ' Lucas' → logprob: -4.97898530960083
    6. ' Cube' → logprob: -5.47898530960083
    7. ' Ugly' → logprob: -5.60398530960083
    8. ' Perfect' → logprob: -5.72898530960083
    9. ' Fibonacci' → logprob: -5.97898530960083
    10. 'Prime' → logprob: -6.22898530960083

Token 225: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -0.008407718501985073
    2. '   ' → logprob: -6.1959075927734375
    3. 'am' → logprob: -6.6959075927734375
    4. 'ammer' → logprob: -7.5709075927734375
    5. 'e' → logprob: -8.383407592773438
    6. 'class' → logprob: -8.570907592773438
    7. 'amilton' → logprob: -8.758407592773438
    8. 'amm' → logprob: -8.758407592773438
    9. ' ' → logprob: -8.820907592773438
    10. '```' → logprob: -8.883407592773438

Token 226: 'Number' (ID: 3695)
  Prédit: 'Numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Numbers' → logprob: -0.00976482592523098
    2. 'Number' → logprob: -4.759764671325684
    3. 'Sequence' → logprob: -7.884764671325684
    4. 'Generator' → logprob: -8.634764671325684
    5. ':' → logprob: -9.134764671325684
    6. 'Prime' → logprob: -9.884764671325684
    7. '_numbers' → logprob: -10.134764671325684
    8. ' Numbers' → logprob: -10.259764671325684
    9. 'numbers' → logprob: -10.259764671325684
    10. '(' → logprob: -10.384764671325684

Token 227: 'Counter' (ID: 16263)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9465360045433044
    2. 'Iterator' → logprob: -0.9465360045433044
    3. ':' → logprob: -2.071536064147949
    4. 'Generator' → logprob: -3.946536064147949
    5. 'Set' → logprob: -4.196536064147949
    6. 'List' → logprob: -4.446536064147949
    7. 'Finder' → logprob: -4.446536064147949
    8. 'Index' → logprob: -5.196536064147949
    9. ':
' → logprob: -5.321536064147949
    10. 'Utils' → logprob: -5.571536064147949

Token 228: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008625093847513199
    2. ':
' → logprob: -4.758625030517578
    3. '(' → logprob: -12.383625030517578
    4. ' :' → logprob: -13.258625030517578
    5. ':def' → logprob: -13.383625030517578
    6. '(H' → logprob: -14.008625030517578
    7. ':

' → logprob: -14.258625030517578
    8. '   ' → logprob: -14.883625030517578
    9. ':
' → logprob: -15.758625030517578
    10. '):' → logprob: -15.883625030517578

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017113516805693507
    2. ' def' → logprob: -7.251711368560791
    3. '    
' → logprob: -7.751711368560791
    4. ' 
' → logprob: -9.126710891723633
    5. '<|end|>' → logprob: -9.126710891723633
    6. '    ' → logprob: -9.376710891723633
    7. '```' → logprob: -9.626710891723633
    8. ':
' → logprob: -10.126710891723633
    9. 'def' → logprob: -10.376710891723633
    10. '(' → logprob: -10.501710891723633

Token 230: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.02008877322077751
    2. 'def' (adapté à ' def') → logprob: -4.1450886726379395
    3. '   ' → logprob: -5.5200886726379395
    4. 'class' → logprob: -10.520089149475098
    5. ' class' → logprob: -11.395089149475098
    6. '    ' → logprob: -14.145089149475098
    7. ' ' → logprob: -14.270089149475098
    8. '```' → logprob: -14.395089149475098
    9. '	def' → logprob: -14.895089149475098
    10. '  ' → logprob: -15.645089149475098

Token 231: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00016337241686414927
    2. '__' → logprob: -8.750163078308105
    3. ' init' → logprob: -12.625163078308105
    4. ' def' → logprob: -14.125163078308105
    5. 'init' → logprob: -14.625163078308105
    6. '_init' → logprob: -15.625163078308105
    7. ' _' → logprob: -16.625164031982422
    8. ' ' → logprob: -17.250164031982422
    9. ' ___' → logprob: -17.375164031982422
    10. '```' → logprob: -17.875164031982422

Token 232: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.0
    3. 'int' → logprob: -19.625
    4. '_init' → logprob: -19.625
    5. 'def' → logprob: -19.75
    6. 'inite' → logprob: -20.375
    7. 'ini' → logprob: -20.5
    8. '	init' → logprob: -20.625
    9. 'nit' → logprob: -21.125
    10. '   ' → logprob: -21.5

Token 233: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.06277117133140564
    2. '(self' → logprob: -2.8127710819244385
    3. ' (' → logprob: -7.937771320343018
    4. '__' → logprob: -8.81277084350586
    5. '__(
' → logprob: -9.06277084350586
    6. '(' → logprob: -9.18777084350586
    7. '_(' → logprob: -10.43777084350586
    8. 'self' → logprob: -10.56277084350586
    9. '   ' → logprob: -11.43777084350586
    10. ' ' → logprob: -12.43777084350586

Token 234: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008065330912359059
    2. ' self' → logprob: -7.1258063316345215
    3. ',' → logprob: -13.87580680847168
    4. '   ' → logprob: -14.87580680847168
    5. '
' → logprob: -15.00080680847168
    6. '(self' → logprob: -16.37580680847168
    7. 'limit' → logprob: -16.50080680847168
    8. '       ' → logprob: -16.75080680847168
    9. ' ' → logprob: -17.00080680847168
    10. '0' → logprob: -17.12580680847168

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023626508191227913
    2. 'self' → logprob: -3.7736265659332275
    3. ' ,' → logprob: -8.398626327514648
    4. '(self' → logprob: -9.398626327514648
    5. ' self' → logprob: -10.273626327514648
    6. ',self' → logprob: -10.523626327514648
    7. '   ' → logprob: -12.148626327514648
    8. '       ' → logprob: -12.898626327514648
    9. ' (' → logprob: -13.648626327514648
    10. 'def' → logprob: -15.148626327514648

Token 236: ' h' (ID: 312)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.5147504210472107
    2. ' limit' → logprob: -1.0147504806518555
    3. ' max' → logprob: -3.7647504806518555
    4. 'max' → logprob: -4.7647504806518555
    5. 'n' → logprob: -6.6397504806518555
    6. ' n' → logprob: -6.6397504806518555
    7. ' upper' → logprob: -6.6397504806518555
    8. 'h' → logprob: -7.1397504806518555
    9. '   ' → logprob: -7.2647504806518555
    10. ' h' → logprob: -7.5147504806518555

Token 237: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -0.07393922656774521
    2. 'limit' → logprob: -3.198939323425293
    3. '   ' → logprob: -4.198939323425293
    4. ' limit' → logprob: -4.948939323425293
    5. '_limit' → logprob: -5.573939323425293
    6. 'amm' → logprob: -6.573939323425293
    7. 'ammer' → logprob: -7.698939323425293
    8. 'am' → logprob: -7.823939323425293
    9. ' ' → logprob: -8.073939323425293
    10. '  ' → logprob: -8.323939323425293

Token 238: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.014958515763282776
    2. ':' → logprob: -4.764958381652832
    3. 'numbers' → logprob: -6.014958381652832
    4. '):
' → logprob: -6.639958381652832
    5. '   ' → logprob: -7.389958381652832
    6. '):' → logprob: -7.764958381652832
    7. 'Numbers' → logprob: -8.139958381652832
    8. '_list' → logprob: -8.389958381652832
    9. 'class' → logprob: -8.389958381652832
    10. '_class' → logprob: -8.764958381652832

Token 239: '_obj' (ID: 16879)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08923661708831787
    2. ':' → logprob: -2.5892367362976074
    3. '=None' → logprob: -5.339236736297607
    4. '):
' → logprob: -5.964236736297607
    5. ' ):' → logprob: -6.339236736297607
    6. '=' → logprob: -7.089236736297607
    7. ')' → logprob: -9.33923625946045
    8. ' :' → logprob: -9.83923625946045
    9. '=[]' → logprob: -10.21423625946045
    10. '_list' → logprob: -10.33923625946045

Token 240: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3570327162742615
    2. '):
' → logprob: -1.2320327758789062
    3. ':' → logprob: -4.857032775878906
    4. '=None' → logprob: -7.982032775878906
    5. ',' → logprob: -8.357032775878906
    6. ' ):' → logprob: -9.357032775878906
    7. '=' → logprob: -10.357032775878906
    8. '):
' → logprob: -10.857032775878906
    9. ')' → logprob: -10.982032775878906
    10. ' ):
' → logprob: -11.357032775878906

Token 241: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.16022849082946777
    2. ' H' → logprob: -1.9102284908294678
    3. '   ' → logprob: -13.285228729248047
    4. ' ' → logprob: -13.785228729248047
    5. ')' → logprob: -13.910228729248047
    6. '	H' → logprob: -14.785228729248047
    7. '  ' → logprob: -16.035228729248047
    8. ' ' → logprob: -16.785228729248047
    9. '_H' → logprob: -17.035228729248047
    10. '    ' → logprob: -17.410228729248047

Token 242: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -9.729906196298543e-06
    2. 'am' → logprob: -12.750009536743164
    3. 'aming' → logprob: -13.375009536743164
    4. 'umming' → logprob: -13.500009536743164
    5. ' am' → logprob: -14.000009536743164
    6. '[' → logprob: -15.000009536743164
    7. 'emming' → logprob: -15.125009536743164
    8. 'ammer' → logprob: -15.375009536743164
    9. '   ' → logprob: -15.500009536743164
    10. '_' → logprob: -15.625009536743164

Token 243: 'Numbers' (ID: 31274)
  Prédit: 'Numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Numbers' → logprob: -4.847109812544659e-05
    2. 'Number' → logprob: -10.000048637390137
    3. '_numbers' → logprob: -13.500048637390137
    4. 'numbers' → logprob: -13.625048637390137
    5. ' Numbers' → logprob: -15.500048637390137
    6. 'Objects' → logprob: -16.62504768371582
    7. ')' → logprob: -16.87504768371582
    8. ' numbers' → logprob: -17.12504768371582
    9. 'Counts' → logprob: -17.25004768371582
    10. 'Count' → logprob: -17.75004768371582

Token 244: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31330859661102295
    2. '):
' → logprob: -1.313308596611023
    3. '):
' → logprob: -10.563308715820312
    4. '   ' → logprob: -11.438308715820312
    5. ',' → logprob: -12.313308715820312
    6. ')' → logprob: -13.188308715820312
    7. '):

' → logprob: -13.938308715820312
    8. ':' → logprob: -13.938308715820312
    9. ' ):' → logprob: -13.938308715820312
    10. '       ' → logprob: -15.063308715820312

Token 245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024335073248948902
    2. 'self' → logprob: -8.750243186950684
    3. 'def' → logprob: -10.625243186950684
    4. ',' → logprob: -10.750243186950684
    5. ' self' → logprob: -11.250243186950684
    6. '   ' → logprob: -11.500243186950684
    7. '):
' → logprob: -12.500243186950684
    8. ')' → logprob: -12.750243186950684
    9. '(self' → logprob: -13.000243186950684
    10. '        
' → logprob: -13.375243186950684

Token 246: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08383265137672424
    2. ' self' → logprob: -2.8338327407836914
    3. '       ' → logprob: -3.8338327407836914
    4. '	self' → logprob: -14.458832740783691
    5. '   ' → logprob: -15.708832740783691
    6. '(self' → logprob: -15.833832740783691
    7. 'def' → logprob: -16.333831787109375
    8. 'import' → logprob: -16.708831787109375
    9. ' ' → logprob: -17.708831787109375
    10. 'class' → logprob: -17.833831787109375

Token 247: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.11348201334476471
    2. '.' → logprob: -2.2384819984436035
    3. ' .' → logprob: -7.6134819984436035
    4. '.limit' → logprob: -8.863482475280762
    5. '._' → logprob: -11.363482475280762
    6. '.hpp' → logprob: -13.238482475280762
    7. '.ham' → logprob: -13.363482475280762
    8. '.H' → logprob: -13.613482475280762
    9. '.count' → logprob: -14.238482475280762
    10. '.hm' → logprob: -14.238482475280762

Token 248: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -1.306760805164231e-05
    2. 'aming' → logprob: -12.25001335144043
    3. '_' → logprob: -12.37501335144043
    4. 'am' → logprob: -13.12501335144043
    5. '   ' → logprob: -15.12501335144043
    6. 'amping' → logprob: -15.62501335144043
    7. 'ammer' → logprob: -15.62501335144043
    8. 'umming' → logprob: -15.75001335144043
    9. '_am' → logprob: -16.12501335144043
    10. ' am' → logprob: -16.25001335144043

Token 249: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -4.008129963040119e-06
    2. 'numbers' → logprob: -13.125003814697266
    3. '_number' → logprob: -14.125003814697266
    4. 'Numbers' → logprob: -14.250003814697266
    5. '_n' → logprob: -15.625003814697266
    6. 's' → logprob: -16.375003814697266
    7. '       ' → logprob: -16.375003814697266
    8. '   ' → logprob: -16.875003814697266
    9. '_objects' → logprob: -17.250003814697266
    10. '_' → logprob: -17.500003814697266

Token 250: ' =' (ID: 314)
  Prédit: '_obj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -0.06320927292108536
    2. ' =' → logprob: -3.813209295272827
    3. '_' → logprob: -3.938209295272827
    4. '=' → logprob: -3.938209295272827
    5. '=obj' → logprob: -9.813209533691406
    6. 's' → logprob: -10.313209533691406
    7. '_objs' → logprob: -10.313209533691406
    8. '=_' → logprob: -11.188209533691406
    9. '_list' → logprob: -11.438209533691406
    10. 'obj' → logprob: -11.438209533691406

Token 251: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5759410262107849
    2. 'h' → logprob: -0.8259410262107849
    3. '	h' → logprob: -13.82594108581543
    4. ' ' → logprob: -15.57594108581543
    5. '   ' → logprob: -16.57594108581543
    6. '=h' → logprob: -16.95094108581543
    7. '[h' → logprob: -17.07594108581543
    8. '_h' → logprob: -17.07594108581543
    9. '(h' → logprob: -17.07594108581543
    10. '       ' → logprob: -17.32594108581543

Token 252: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -1.1279553291387856e-05
    2. 'aming' → logprob: -12.625011444091797
    3. 'h' → logprob: -13.250011444091797
    4. 'am' → logprob: -13.625011444091797
    5. 'ham' → logprob: -14.125011444091797
    6. '   ' → logprob: -14.250011444091797
    7. '[' → logprob: -14.250011444091797
    8. '_' → logprob: -15.250011444091797
    9. 'ashing' → logprob: -15.375011444091797
    10. '```' → logprob: -15.375011444091797

Token 253: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -3.309382373117842e-05
    2. 'umbers' → logprob: -10.875033378601074
    3. 'numbers' → logprob: -12.000033378601074
    4. 'Numbers' → logprob: -12.625033378601074
    5. '_number' → logprob: -12.625033378601074
    6. '_' → logprob: -14.125033378601074
    7. '_objects' → logprob: -15.500033378601074
    8. ' numbers' → logprob: -16.250032424926758
    9. 'umber' → logprob: -16.250032424926758
    10. '_n' → logprob: -16.875032424926758

Token 254: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -3.4285862057004124e-05
    2. 'obj' → logprob: -11.87503433227539
    3. '_numbers' → logprob: -11.87503433227539
    4. '_objs' → logprob: -12.50003433227539
    5. '._' → logprob: -12.62503433227539
    6. '_objects' → logprob: -12.62503433227539
    7. '   ' → logprob: -12.75003433227539
    8. '_object' → logprob: -13.25003433227539
    9. 's' → logprob: -14.12503433227539
    10. '_' → logprob: -14.12503433227539

Token 255: '.h' (ID: 1508)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.056784700602293015
    2. '   ' → logprob: -2.9317846298217773
    3. 'def' → logprob: -7.181784629821777
    4. '    
' → logprob: -7.306784629821777
    5. ' def' → logprob: -8.681784629821777
    6. '

' → logprob: -8.931784629821777
    7. '<|end|>' → logprob: -9.556784629821777
    8. '  
' → logprob: -10.056784629821777
    9. '	def' → logprob: -11.431784629821777
    10. '
' → logprob: -11.681784629821777

Token 256: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -2.47495681833243e-05
    2. '_' → logprob: -11.000024795532227
    3. 'am' → logprob: -13.250024795532227
    4. 'aming' → logprob: -13.625024795532227
    5. '[' → logprob: -14.000024795532227
    6. '_h' → logprob: -14.125024795532227
    7. 'umming' → logprob: -14.375024795532227
    8. 'ammer' → logprob: -15.000024795532227
    9. 'amping' → logprob: -15.125024795532227
    10. '```' → logprob: -15.375024795532227

Token 257: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -6.704273118884885e-07
    2. 'numbers' → logprob: -14.750000953674316
    3. '_' → logprob: -16.125
    4. '_number' → logprob: -16.25
    5. '_n' → logprob: -18.25
    6. 'Numbers' → logprob: -19.0
    7. '()' → logprob: -19.75
    8. '_names' → logprob: -20.625
    9. '_values' → logprob: -21.375
    10. 'umbers' → logprob: -21.375

Token 258: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0015545014757663012
    2. '()

' → logprob: -7.001554489135742
    3. '().' → logprob: -8.501554489135742
    4. 'def' → logprob: -8.626554489135742
    5. '()
' → logprob: -9.126554489135742
    6. '   ' → logprob: -9.501554489135742
    7. '().__' → logprob: -10.751554489135742
    8. '()[' → logprob: -11.001554489135742
    9. ' ()' → logprob: -11.751554489135742
    10. ' def' → logprob: -12.251554489135742

Token 259: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48563140630722046
    2. '   ' → logprob: -0.9856314063072205
    3. 'def' → logprob: -4.985631465911865
    4. '<|end|>' → logprob: -6.110631465911865
    5. '    
' → logprob: -6.485631465911865
    6. ' def' → logprob: -7.735631465911865
    7. '```' → logprob: -8.735630989074707
    8. '<|end|>' → logprob: -9.985630989074707
    9. '  ' → logprob: -10.110630989074707
    10. '  
' → logprob: -10.110630989074707

Token 260: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.16546298563480377
    2. ' def' → logprob: -1.9154629707336426
    3. '   ' → logprob: -5.290462970733643
    4. '
' → logprob: -9.4154634475708
    5. ' ' → logprob: -9.4154634475708
    6. '	def' → logprob: -11.6654634475708
    7. '    
' → logprob: -12.5404634475708
    8. '  ' → logprob: -13.0404634475708
    9. 'import' → logprob: -13.1654634475708
    10. '```' → logprob: -13.2904634475708

Token 261: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.14271949231624603
    2. ' count' → logprob: -2.0177195072174072
    3. '_count' → logprob: -10.392719268798828
    4. '__' → logprob: -12.767719268798828
    5. 'get' → logprob: -13.142719268798828
    6. 'def' → logprob: -13.392719268798828
    7. '	count' → logprob: -13.892719268798828
    8. ' ' → logprob: -14.267719268798828
    9. 'less' → logprob: -14.517719268798828
    10. 'le' → logprob: -14.517719268798828

Token 262: '_in' (ID: 2267)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12309341132640839
    2. '(' → logprob: -2.373093366622925
    3. '_less' → logprob: -4.623093605041504
    4. '_up' → logprob: -5.498093605041504
    5. '_between' → logprob: -5.623093605041504
    6. '_b' → logprob: -6.623093605041504
    7. '_in' → logprob: -6.873093605041504
    8. '_by' → logprob: -6.998093605041504
    9. '_sm' → logprob: -7.748093605041504
    10. '_' → logprob: -7.998093605041504

Token 263: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.03624730929732323
    2. 'range' → logprob: -3.7862472534179688
    3. 'ter' → logprob: -4.786247253417969
    4. '(self' → logprob: -6.036247253417969
    5. '_interval' → logprob: -6.661247253417969
    6. '_' → logprob: -7.786247253417969
    7. 'te' → logprob: -8.286247253417969
    8. '(' → logprob: -10.036247253417969
    9. 't' → logprob: -10.161247253417969
    10. '(range' → logprob: -10.536247253417969

Token 264: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004342453321442008
    2. '(' → logprob: -7.750434398651123
    3. ' (' → logprob: -12.625433921813965
    4. 'self' → logprob: -15.750433921813965
    5. '(s' → logprob: -17.25043487548828
    6. '(
' → logprob: -17.37543487548828
    7. ' ' → logprob: -17.87543487548828
    8. '(sel' → logprob: -18.25043487548828
    9. '(Self' → logprob: -18.75043487548828
    10. '   ' → logprob: -19.00043487548828

Token 265: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02225147746503353
    2. ',' → logprob: -4.647251605987549
    3. 'self' → logprob: -4.772251605987549
    4. '(' → logprob: -6.147251605987549
    5. ' (' → logprob: -6.522251605987549
    6. ')' → logprob: -9.27225112915039
    7. ' self' → logprob: -9.64725112915039
    8. '       ' → logprob: -10.14725112915039
    9. ')(' → logprob: -10.27225112915039
    10. ',self' → logprob: -10.27225112915039

Token 266: ' m' (ID: 284)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.584819495677948
    2. 'self' → logprob: -0.834819495677948
    3. ' start' → logprob: -5.084819316864014
    4. 'start' → logprob: -5.959819316864014
    5. ' low' → logprob: -10.709819793701172
    6. 'low' → logprob: -11.584819793701172
    7. 'lower' → logprob: -11.709819793701172
    8. ' lower' → logprob: -11.959819793701172
    9. '   ' → logprob: -12.084819793701172
    10. 'left' → logprob: -12.334819793701172

Token 267: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011305751278996468
    2. ' ,' → logprob: -4.511305809020996
    3. '=' → logprob: -9.386305809020996
    4. '   ' → logprob: -10.636305809020996
    5. 'self' → logprob: -10.636305809020996
    6. ':' → logprob: -10.636305809020996
    7. '1' → logprob: -11.386305809020996
    8. '_start' → logprob: -11.511305809020996
    9. ',int' → logprob: -11.511305809020996
    10. ' self' → logprob: -11.511305809020996

Token 268: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03669098764657974
    2. ' int' → logprob: -3.4116909503936768
    3. 'self' → logprob: -6.161691188812256
    4. ',' → logprob: -7.661691188812256
    5. ' self' → logprob: -8.411690711975098
    6. ',int' → logprob: -8.786690711975098
    7. 'm' → logprob: -9.911690711975098
    8. '(int' → logprob: -11.786690711975098
    9. 'a' → logprob: -12.161690711975098
    10. ':int' → logprob: -12.411690711975098

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003365350130479783
    2. ' ,' → logprob: -8.000336647033691
    3. ':' → logprob: -15.000336647033691
    4. ',int' → logprob: -15.250336647033691
    5. ',m' → logprob: -15.625336647033691
    6. ',
' → logprob: -15.625336647033691
    7. '_,' → logprob: -17.125335693359375
    8. '=' → logprob: -17.375335693359375
    9. '   ' → logprob: -17.500335693359375
    10. 'def' → logprob: -17.625335693359375

Token 270: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28121018409729004
    2. ' n' → logprob: -1.40621018409729
    3. '   ' → logprob: -11.531209945678711
    4. 'M' → logprob: -11.531209945678711
    5. ' M' → logprob: -12.031209945678711
    6. ' ' → logprob: -12.281209945678711
    7. 'k' → logprob: -12.281209945678711
    8. '	n' → logprob: -12.406209945678711
    9. ')' → logprob: -12.531209945678711
    10. 'N' → logprob: -12.906209945678711

Token 271: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6405466198921204
    2. '):' → logprob: -0.7655466198921204
    3. ')' → logprob: -5.140546798706055
    4. '):
' → logprob: -6.265546798706055
    5. ':int' → logprob: -9.640546798706055
    6. ' ):' → logprob: -10.015546798706055
    7. '   ' → logprob: -10.765546798706055
    8. '):
' → logprob: -12.140546798706055
    9. ' :' → logprob: -12.140546798706055
    10. '=' → logprob: -12.515546798706055

Token 272: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04863709583878517
    2. ' int' → logprob: -3.0486371517181396
    3. ')' → logprob: -10.673637390136719
    4. ':int' → logprob: -10.923637390136719
    5. '(int' → logprob: -12.673637390136719
    6. '[int' → logprob: -13.673637390136719
    7. '=int' → logprob: -13.798637390136719
    8. '	int' → logprob: -14.173637390136719
    9. ']int' → logprob: -14.298637390136719
    10. ',int' → logprob: -15.048637390136719

Token 273: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1306152194738388
    2. ')' → logprob: -2.130615234375
    3. '):
' → logprob: -5.630615234375
    4. '):
' → logprob: -9.880615234375
    5. ')->' → logprob: -10.755615234375
    6. ':' → logprob: -11.880615234375
    7. ' ):' → logprob: -12.005615234375
    8. '   ' → logprob: -12.630615234375
    9. '):

' → logprob: -13.130615234375
    10. ' )' → logprob: -13.255615234375

Token 274: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010677010286599398
    2. ':
' → logprob: -7.251067638397217
    3. '):' → logprob: -8.126068115234375
    4. '       ' → logprob: -10.751068115234375
    5. ' :' → logprob: -11.501068115234375
    6. '():' → logprob: -11.626068115234375
    7. '):
' → logprob: -11.751068115234375
    8. ' ->' → logprob: -12.501068115234375
    9. '->' → logprob: -13.126068115234375
    10. ':return' → logprob: -13.626068115234375

Token 275: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6931474208831787
    2. ' int' → logprob: -0.6931474208831787
    3. '(int' → logprob: -16.193147659301758
    4. ' ' → logprob: -16.318147659301758
    5. '[int' → logprob: -17.443147659301758
    6. '	int' → logprob: -18.068147659301758
    7. '   ' → logprob: -18.818147659301758
    8. ':int' → logprob: -19.693147659301758
    9. '=int' → logprob: -20.318147659301758
    10. ']int' → logprob: -20.443147659301758

Token 276: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08375196158885956
    2. '       ' → logprob: -2.958751916885376
    3. ':
' → logprob: -4.083752155303955
    4. '(self' → logprob: -4.958752155303955
    5. '(' → logprob: -6.458752155303955
    6. '   ' → logprob: -6.833752155303955
    7. '<|end|>' → logprob: -7.333752155303955
    8. '():
' → logprob: -8.458751678466797
    9. '(
' → logprob: -8.458751678466797
    10. ',' → logprob: -8.583751678466797

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002562137378845364
    2. '        
' → logprob: -9.875256538391113
    3. '	' → logprob: -10.125256538391113
    4. '   ' → logprob: -10.625256538391113
    5. 'import' → logprob: -10.875256538391113
    6. '      ' → logprob: -11.000256538391113
    7. '<|end|>' → logprob: -11.250256538391113
    8. '
' → logprob: -11.375256538391113
    9. '[' → logprob: -11.625256538391113
    10. ' from' → logprob: -11.875256538391113

Token 278: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.10240236669778824
    2. '       ' → logprob: -3.102402448654175
    3. 'from' → logprob: -3.102402448654175
    4. ' import' → logprob: -5.102402210235596
    5. ' from' → logprob: -6.602402210235596
    6. '```' → logprob: -11.852402687072754
    7. '	import' → logprob: -13.977402687072754
    8. 'left' → logprob: -13.977402687072754
    9. '   ' → logprob: -14.102402687072754
    10. 'if' → logprob: -14.227402687072754

Token 279: ' Ab' (ID: 3483)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5878597497940063
    2. 'from' → logprob: -0.8378597497940063
    3. ' from' → logprob: -4.962859630584717
    4. '       ' → logprob: -5.962859630584717
    5. ' import' → logprob: -6.087859630584717
    6. '   ' → logprob: -12.837860107421875
    7. '	from' → logprob: -12.962860107421875
    8. 'left' → logprob: -13.087860107421875
    9. '	import' → logprob: -13.462860107421875
    10. '```' → logprob: -13.712860107421875

Token 280: 'straction' (ID: 79887)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2416454255580902
    2. 'ort' → logprob: -2.241645336151123
    3. '       ' → logprob: -2.491645336151123
    4. 'solute' → logprob: -5.116645336151123
    5. 's' → logprob: -5.366645336151123
    6. '   ' → logprob: -5.366645336151123
    7. 'stract' → logprob: -5.991645336151123
    8. 'from' → logprob: -6.366645336151123
    9. ' import' → logprob: -6.741645336151123
    10. '           ' → logprob: -6.866645336151123

Token 281: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12392323464155197
    2. 'import' → logprob: -2.3739233016967773
    3. '
' → logprob: -4.248923301696777
    4. '        
' → logprob: -5.873923301696777
    5. ':' → logprob: -6.748923301696777
    6. '<|end|>' → logprob: -6.998923301696777
    7. ' import' → logprob: -7.248923301696777
    8. ',' → logprob: -7.373923301696777
    9. 'from' → logprob: -7.498923301696777
    10. ' from' → logprob: -7.748923301696777

Token 282: ' binary' (ID: 15600)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7018693685531616
    2. 'from' → logprob: -0.9518693685531616
    3. ' from' → logprob: -2.826869487762451
    4. ' bis' → logprob: -3.201869487762451
    5. ' import' → logprob: -4.076869487762451
    6. 'bis' → logprob: -6.701869487762451
    7. ' self' → logprob: -9.201869010925293
    8. 'self' → logprob: -9.826869010925293
    9. '   ' → logprob: -10.576869010925293
    10. '       ' → logprob: -10.576869010925293

Token 283: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -1.0223243236541748
    2. ' search' → logprob: -1.0223243236541748
    3. '_search' → logprob: -1.2723243236541748
    4. '_' → logprob: -8.522324562072754
    5. ' _' → logprob: -9.522324562072754
    6. 'earch' → logprob: -11.022324562072754
    7. ' searches' → logprob: -11.772324562072754
    8. 'import' → logprob: -12.647324562072754
    9. '_SEARCH' → logprob: -13.647324562072754
    10. '	search' → logprob: -13.772324562072754

Token 284: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4799862802028656
    2. '
' → logprob: -0.979986310005188
    3. 'import' → logprob: -5.479986190795898
    4. ':
' → logprob: -7.479986190795898
    5. '```' → logprob: -7.979986190795898
    6. '        
' → logprob: -8.104986190795898
    7. ':' → logprob: -8.479986190795898
    8. ',' → logprob: -9.354986190795898
    9. '  
' → logprob: -9.854986190795898
    10. '
' → logprob: -10.354986190795898

Token 285: ' counting' (ID: 43276)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.09719677269458771
    2. 'from' → logprob: -3.0971968173980713
    3. ' import' → logprob: -3.3471968173980713
    4. ' from' → logprob: -5.597196578979492
    5. ' bis' → logprob: -5.847196578979492
    6. ' self' → logprob: -5.972196578979492
    7. 'self' → logprob: -6.972196578979492
    8. 'bis' → logprob: -7.597196578979492
    9. 'm' → logprob: -7.847196578979492
    10. ' the' → logprob: -7.972196578979492

Token 286: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020118683576583862
    2. 'import' → logprob: -4.270118713378906
    3. '
' → logprob: -5.520118713378906
    4. '        
' → logprob: -7.520118713378906
    5. ' from' → logprob: -7.770118713378906
    6. ' import' → logprob: -7.895118713378906
    7. 'from' → logprob: -8.520118713378906
    8. ',' → logprob: -8.770118713378906
    9. '<|end|>' → logprob: -9.520118713378906
    10. ' ' → logprob: -10.520118713378906

Token 287: ' range' (ID: 3352)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1088697910308838
    2. ' self' → logprob: -1.2338697910308838
    3. 'self' → logprob: -1.7338697910308838
    4. ' sorted' → logprob: -2.858869791030884
    5. 'sorted' → logprob: -2.983869791030884
    6. 'the' → logprob: -3.358869791030884
    7. ' a' → logprob: -3.358869791030884
    8. ' range' → logprob: -4.858869552612305
    9. 'range' → logprob: -5.483869552612305
    10. 'import' → logprob: -5.483869552612305

Token 288: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025220380630344152
    2. '
' → logprob: -6.627521991729736
    3. '        
' → logprob: -7.377521991729736
    4. 'import' → logprob: -8.252522468566895
    5. '<|end|>' → logprob: -9.252522468566895
    6. ',' → logprob: -9.627522468566895
    7. '  
' → logprob: -10.127522468566895
    8. '   ' → logprob: -10.377522468566895
    9. '```' → logprob: -10.752522468566895
    10. '      ' → logprob: -11.752522468566895

Token 289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002266232157126069
    2. '
' → logprob: -6.3772664070129395
    3. 'import' → logprob: -7.8772664070129395
    4. '```' → logprob: -9.877265930175781
    5. 'from' → logprob: -10.002265930175781
    6. '        
' → logprob: -10.252265930175781
    7. ' from' → logprob: -10.752265930175781
    8. ',' → logprob: -11.752265930175781
    9. '  
' → logprob: -12.377265930175781
    10. ':
' → logprob: -12.752265930175781

Token 290: ' from' (ID: 591)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.17346931993961334
    2. 'from' (adapté à ' from') → logprob: -1.9234693050384521
    3. '       ' → logprob: -4.548469543457031
    4. ' from' → logprob: -6.548469543457031
    5. ' import' → logprob: -6.798469543457031
    6. '```' → logprob: -11.298469543457031
    7. '	import' → logprob: -11.923469543457031
    8. '	from' → logprob: -12.423469543457031
    9. '   ' → logprob: -12.923469543457031
    10. ' ' → logprob: -15.548469543457031

Token 291: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.018152287229895592
    2. ' bis' → logprob: -4.018152236938477
    3. 'b' → logprob: -13.018152236938477
    4. 'import' → logprob: -16.268152236938477
    5. ' ' → logprob: -16.893152236938477
    6. '   ' → logprob: -17.018152236938477
    7. '	b' → logprob: -17.268152236938477
    8. '  ' → logprob: -19.643152236938477
    9. ',b' → logprob: -20.143152236938477
    10. 'typing' → logprob: -20.268152236938477

Token 292: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.030499329790472984
    2. 'import' → logprob: -3.530499219894409
    3. ' import' → logprob: -7.780499458312988
    4. 'ort' → logprob: -8.405499458312988
    5. 'e' → logprob: -10.280499458312988
    6. 'lib' → logprob: -10.780499458312988
    7. 't' → logprob: -11.280499458312988
    8. 'earch' → logprob: -12.030499458312988
    9. 'ector' → logprob: -12.155499458312988
    10. 'ection' → logprob: -12.780499458312988

Token 293: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.11290004104375839
    2. 'import' → logprob: -2.2379000186920166
    3. '<|end|>' → logprob: -10.487899780273438
    4. '	import' → logprob: -10.612899780273438
    5. '_import' → logprob: -11.362899780273438
    6. ' ' → logprob: -11.487899780273438
    7. ' importar' → logprob: -13.987899780273438
    8. ' ' → logprob: -14.237899780273438
    9. ' imports' → logprob: -14.612899780273438
    10. '<|end|>' → logprob: -15.362899780273438

Token 294: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.02979157119989395
    2. ' bis' → logprob: -3.5297915935516357
    3. 'left' → logprob: -10.654791831970215
    4. 'import' → logprob: -11.279791831970215
    5. '_left' → logprob: -12.529791831970215
    6. 'b' → logprob: -14.154791831970215
    7. ' left' → logprob: -15.654791831970215
    8. 'ins' → logprob: -15.904791831970215
    9. '	b' → logprob: -16.6547908782959
    10. 'bl' → logprob: -17.1547908782959

Token 295: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.3856492842023727e-06
    2. 'e' → logprob: -13.750000953674316
    3. '_left' → logprob: -16.500001907348633
    4. 'ected' → logprob: -17.750001907348633
    5. 'ection' → logprob: -17.875001907348633
    6. 'ectl' → logprob: -17.875001907348633
    7. 'ects' → logprob: -18.125001907348633
    8. 'ec' → logprob: -18.500001907348633
    9. 'ector' → logprob: -18.875001907348633
    10. 'eft' → logprob: -18.875001907348633

Token 296: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0005588700296357274
    2. '_right' → logprob: -7.500558853149414
    3. 'left' → logprob: -12.125558853149414
    4. '_' → logprob: -15.500558853149414
    5. '_LEFT' → logprob: -16.125558853149414
    6. '<|end|>' → logprob: -16.500558853149414
    7. 'Left' → logprob: -17.625558853149414
    8. '_Left' → logprob: -18.000558853149414
    9. 'right' → logprob: -18.250558853149414
    10. ' left' → logprob: -19.000558853149414

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0061331987380981445
    2. ',b' → logprob: -5.131133079528809
    3. '       ' → logprob: -9.506133079528809
    4. '
' → logprob: -9.506133079528809
    5. ' ,' → logprob: -10.256133079528809
    6. ',
' → logprob: -12.131133079528809
    7. 'from' → logprob: -12.256133079528809
    8. '<|end|>' → logprob: -12.631133079528809
    9. '<|end|>' → logprob: -13.506133079528809
    10. 'b' → logprob: -13.506133079528809

Token 298: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.5231262445449829
    2. ' bis' → logprob: -0.8981262445449829
    3. 'b' → logprob: -13.273126602172852
    4. ' ' → logprob: -14.898126602172852
    5. '	b' → logprob: -15.023126602172852
    6. '```' → logprob: -16.02312660217285
    7. 'bi' → logprob: -16.89812660217285
    8. '
' → logprob: -16.96062660217285
    9. '   ' → logprob: -17.02312660217285
    10. 'ins' → logprob: -17.08562660217285

Token 299: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0820331946015358
    2. 'ct' → logprob: -2.832033157348633
    3. 'sect' → logprob: -3.957033157348633
    4. 'n' → logprob: -8.082033157348633
    5. '```' → logprob: -8.582033157348633
    6. 'e' → logprob: -10.207033157348633
    7. 't' → logprob: -10.457033157348633
    8. 'ce' → logprob: -10.707033157348633
    9. 'is' → logprob: -11.082033157348633
    10. '#' → logprob: -11.332033157348633

Token 300: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.6305902004241943
    2. 'ght' → logprob: -1.1305902004241943
    3. 'right' → logprob: -2.6305902004241943
    4. 'ight' → logprob: -2.6305902004241943
    5. 't' → logprob: -7.380590438842773
    6. 'ht' → logprob: -9.505590438842773
    7. 'Right' → logprob: -10.130590438842773
    8. 'gt' → logprob: -10.880590438842773
    9. 'r' → logprob: -11.005590438842773
    10. 'igh' → logprob: -12.005590438842773

Token 301: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06651291996240616
    2. '       ' → logprob: -2.8165128231048584
    3. '<|end|>' → logprob: -6.3165130615234375
    4. '(n' → logprob: -6.8165130615234375
    5. '        
' → logprob: -8.066513061523438
    6. '  
' → logprob: -8.691513061523438
    7. '(' → logprob: -8.691513061523438
    8. 'return' → logprob: -8.816513061523438
    9. 'n' → logprob: -8.816513061523438
    10. '
' → logprob: -8.941513061523438

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2540602385997772
    2. '
' → logprob: -1.5040602684020996
    3. '        
' → logprob: -6.5040602684021
    4. 'return' → logprob: -8.629059791564941
    5. '<|end|>' → logprob: -9.004059791564941
    6. '  
' → logprob: -9.379059791564941
    7. '    
' → logprob: -9.879059791564941
    8. '
' → logprob: -10.379059791564941
    9. ' return' → logprob: -10.379059791564941
    10. ' 
' → logprob: -10.629059791564941

Token 303: ' left' (ID: 3561)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5070070624351501
    2. ' left' → logprob: -1.632007122039795
    3. 'left' (adapté à ' left') → logprob: -1.632007122039795
    4. 'start' → logprob: -5.632007122039795
    5. 'l' → logprob: -6.507007122039795
    6. ' start' → logprob: -7.507007122039795
    7. 'low' → logprob: -8.007006645202637
    8. '
' → logprob: -8.882006645202637
    9. 'lower' → logprob: -8.882006645202637
    10. ' l' → logprob: -9.507006645202637

Token 304: ' =' (ID: 314)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.6866288185119629
    2. '_index' → logprob: -0.9366288185119629
    3. ' =' → logprob: -2.311628818511963
    4. '=' → logprob: -5.311628818511963
    5. '_pos' → logprob: -8.061628341674805
    6. '_' → logprob: -8.311628341674805
    7. '_ind' → logprob: -9.811628341674805
    8. '_ix' → logprob: -9.811628341674805
    9. 'idx' → logprob: -11.186628341674805
    10. '=_' → logprob: -11.561628341674805

Token 305: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.06986184418201447
    2. 'bis' → logprob: -2.819861888885498
    3. ' self' → logprob: -5.319861888885498
    4. 'self' → logprob: -5.819861888885498
    5. '       ' → logprob: -13.56986141204834
    6. 'b' → logprob: -15.06986141204834
    7. ' ' → logprob: -17.194862365722656
    8. 'Bis' → logprob: -17.694862365722656
    9. '0' → logprob: -17.819862365722656
    10. '   ' → logprob: -17.944862365722656

Token 306: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0001843485952122137
    2. 'ct' → logprob: -9.125184059143066
    3. 'sect' → logprob: -9.625184059143066
    4. 'cet' → logprob: -12.625184059143066
    5. 'ce' → logprob: -13.250184059143066
    6. 'ects' → logprob: -13.875184059143066
    7. 'e' → logprob: -14.625184059143066
    8. 'ected' → logprob: -14.875184059143066
    9. 'bis' → logprob: -14.875184059143066
    10. 'is' → logprob: -15.125184059143066

Token 307: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -8.542423165636137e-05
    2. '_right' → logprob: -9.375085830688477
    3. '_self' → logprob: -15.625085830688477
    4. '_' → logprob: -16.500085830688477
    5. '_LEFT' → logprob: -16.500085830688477
    6. '_b' → logprob: -16.875085830688477
    7. 'left' → logprob: -17.000085830688477
    8. '_le' → logprob: -17.375085830688477
    9. '_low' → logprob: -18.000085830688477
    10. ' _' → logprob: -18.000085830688477

Token 308: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.3425219549390022e-05
    2. '(' → logprob: -11.25001335144043
    3. '       ' → logprob: -16.00001335144043
    4. ' self' → logprob: -16.00001335144043
    5. 'self' → logprob: -16.00001335144043
    6. ' (' → logprob: -17.87501335144043
    7. '(
' → logprob: -18.00001335144043
    8. ',' → logprob: -19.25001335144043
    9. ',self' → logprob: -19.25001335144043
    10. '(this' → logprob: -19.62501335144043

Token 309: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -1.8908587662735954e-05
    2. 'h' → logprob: -11.500019073486328
    3. ' .' → logprob: -12.500019073486328
    4. '(h' → logprob: -12.875019073486328
    5. '.' → logprob: -14.000019073486328
    6. '   ' → logprob: -14.250019073486328
    7. '.ham' → logprob: -15.500019073486328
    8. '	h' → logprob: -15.625019073486328
    9. ').' → logprob: -15.875019073486328
    10. ',h' → logprob: -16.625019073486328

Token 310: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -3.523948907968588e-05
    2. '   ' → logprob: -10.875035285949707
    3. 'aming' → logprob: -12.000035285949707
    4. 'am' → logprob: -12.375035285949707
    5. 'ham' → logprob: -13.375035285949707
    6. 'anging' → logprob: -14.250035285949707
    7. 'amm' → logprob: -14.750035285949707
    8. 'ammer' → logprob: -14.875035285949707
    9. ' ' → logprob: -15.000035285949707
    10. '    ' → logprob: -15.250035285949707

Token 311: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.00016825977945700288
    2. 'numbers' → logprob: -9.000167846679688
    3. 'self' → logprob: -10.625167846679688
    4. '       ' → logprob: -12.375167846679688
    5. '   ' → logprob: -12.875167846679688
    6. '           ' → logprob: -13.000167846679688
    7. '_n' → logprob: -13.125167846679688
    8. 'Numbers' → logprob: -13.375167846679688
    9. ')' → logprob: -13.375167846679688
    10. '_number' → logprob: -14.125167846679688

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024406595912296325
    2. ',m' → logprob: -8.375244140625
    3. ' ,' → logprob: -11.500244140625
    4. ',n' → logprob: -13.125244140625
    5. '(m' → logprob: -14.125244140625
    6. ',h' → logprob: -15.375244140625
    7. '(' → logprob: -15.875244140625
    8. ',
' → logprob: -16.375244140625
    9. ',(' → logprob: -16.750244140625
    10. ',self' → logprob: -16.875244140625

Token 313: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.474077433347702
    2. ' m' → logprob: -0.9740774631500244
    3. ')m' → logprob: -15.349077224731445
    4. ')' → logprob: -15.974077224731445
    5. '	m' → logprob: -16.724077224731445
    6. '(m' → logprob: -17.974077224731445
    7. '   ' → logprob: -18.224077224731445
    8. ' ' → logprob: -19.474077224731445
    9. ' ' → logprob: -19.849077224731445
    10. '[m' → logprob: -19.849077224731445

Token 314: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04860769584774971
    2. ')
' → logprob: -3.048607587814331
    3. '       ' → logprob: -11.29860782623291
    4. ')
' → logprob: -12.67360782623291
    5. ' )' → logprob: -12.67360782623291
    6. ' )
' → logprob: -14.04860782623291
    7. '   ' → logprob: -14.92360782623291
    8. ')

' → logprob: -15.17360782623291
    9. '),' → logprob: -16.673606872558594
    10. ',' → logprob: -16.798606872558594

Token 315: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04428436607122421
    2. '       ' → logprob: -3.2942843437194824
    3. 'right' → logprob: -5.544284343719482
    4. ' right' → logprob: -7.169284343719482
    5. '        
' → logprob: -7.294284343719482
    6. '[right' → logprob: -9.04428482055664
    7. ' 
' → logprob: -9.16928482055664
    8. '<|end|>' → logprob: -9.41928482055664
    9. ',
' → logprob: -9.66928482055664
    10. '
' → logprob: -9.79428482055664

Token 316: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.6936137080192566
    2. 'right' (adapté à ' right') → logprob: -0.6936137080192566
    3. '       ' → logprob: -7.693613529205322
    4. '	right' → logprob: -12.31861400604248
    5. 'left' → logprob: -12.56861400604248
    6. '
' → logprob: -14.06861400604248
    7. '.right' → logprob: -14.19361400604248
    8. ' left' → logprob: -14.44361400604248
    9. '_right' → logprob: -15.19361400604248
    10. '[right' → logprob: -15.94361400604248

Token 317: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01814994215965271
    2. '=' → logprob: -4.0181498527526855
    3. ' ' → logprob: -17.268150329589844
    4. ' =
' → logprob: -18.268150329589844
    5. '=b' → logprob: -19.143150329589844
    6. '   ' → logprob: -19.643150329589844
    7. ')' → logprob: -19.768150329589844
    8. '	' → logprob: -20.643150329589844
    9. '=
' → logprob: -20.893150329589844
    10. '>' → logprob: -21.143150329589844

Token 318: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.12692904472351074
    2. 'bis' → logprob: -2.1269290447235107
    3. 'b' → logprob: -14.25192928314209
    4. '	b' → logprob: -17.001928329467773
    5. '   ' → logprob: -17.501928329467773
    6. ' ' → logprob: -17.626928329467773
    7. 'bs' → logprob: -18.376928329467773
    8. 'bi' → logprob: -18.501928329467773
    9. ' b' → logprob: -18.751928329467773
    10. ' bi' → logprob: -18.876928329467773

Token 319: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.3905479907989502
    2. 'ect' → logprob: -1.1405479907989502
    3. 'sect' → logprob: -5.640547752380371
    4. 't' → logprob: -9.890547752380371
    5. 'ce' → logprob: -10.890547752380371
    6. 'ght' → logprob: -11.265547752380371
    7. 'cht' → logprob: -11.390547752380371
    8. 'set' → logprob: -11.890547752380371
    9. 'et' → logprob: -12.640547752380371
    10. 'right' → logprob: -13.015547752380371

Token 320: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0006647797417826951
    2. 'ight' → logprob: -7.375664710998535
    3. 'right' → logprob: -10.500664710998535
    4. 'ght' → logprob: -11.625664710998535
    5. 't' → logprob: -14.875664710998535
    6. 'r' → logprob: -15.000664710998535
    7. 'Right' → logprob: -15.125664710998535
    8. '_' → logprob: -15.125664710998535
    9. '_left' → logprob: -15.250664710998535
    10. 'igh' → logprob: -16.12566566467285

Token 321: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00023178798437584192
    2. '(' → logprob: -8.375231742858887
    3. '(
' → logprob: -14.625231742858887
    4. 'self' → logprob: -14.875231742858887
    5. ' self' → logprob: -15.250231742858887
    6. ' (' → logprob: -15.625231742858887
    7. '(this' → logprob: -16.875232696533203
    8. '=self' → logprob: -17.875232696533203
    9. '	self' → logprob: -18.375232696533203
    10. ')' → logprob: -18.500232696533203

Token 322: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -8.73314929776825e-05
    2. ' .' → logprob: -9.87508773803711
    3. '.' → logprob: -10.87508773803711
    4. 'h' → logprob: -11.50008773803711
    5. '   ' → logprob: -13.00008773803711
    6. '_h' → logprob: -14.00008773803711
    7. ',' → logprob: -14.25008773803711
    8. ' ' → logprob: -14.50008773803711
    9. 'self' → logprob: -14.50008773803711
    10. ').' → logprob: -15.00008773803711

Token 323: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -0.0016209072200581431
    2. 'am' → logprob: -7.876620769500732
    3. '   ' → logprob: -8.00162124633789
    4. 'amm' → logprob: -8.62662124633789
    5. 'aming' → logprob: -8.75162124633789
    6. 'h' → logprob: -9.00162124633789
    7. 'ham' → logprob: -10.37662124633789
    8. ',' → logprob: -10.50162124633789
    9. '_' → logprob: -10.50162124633789
    10. 'ammer' → logprob: -10.62662124633789

Token 324: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.0004827465454582125
    2. '_n' → logprob: -8.625482559204102
    3. 'self' → logprob: -9.125482559204102
    4. 'numbers' → logprob: -9.375482559204102
    5. 'Numbers' → logprob: -10.500482559204102
    6. 'n' → logprob: -10.750482559204102
    7. ',' → logprob: -10.750482559204102
    8. 's' → logprob: -11.250482559204102
    9. ',n' → logprob: -12.750482559204102
    10. '   ' → logprob: -12.750482559204102

Token 325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004973902832716703
    2. ',n' → logprob: -7.625497341156006
    3. ' ,' → logprob: -11.750497817993164
    4. ',self' → logprob: -14.500497817993164
    5. '(n' → logprob: -15.000497817993164
    6. ',
' → logprob: -15.750497817993164
    7. ')' → logprob: -15.750497817993164
    8. ',h' → logprob: -16.000497817993164
    9. 'self' → logprob: -16.125497817993164
    10. ',m' → logprob: -17.000497817993164

Token 326: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5264384746551514
    2. 'n' → logprob: -1.7764384746551514
    3. 'self' → logprob: -1.9014384746551514
    4. ' self' → logprob: -2.4014384746551514
    5. '(self' → logprob: -10.52643871307373
    6. '_n' → logprob: -11.65143871307373
    7. ' ' → logprob: -11.65143871307373
    8. '   ' → logprob: -11.77643871307373
    9. ')n' → logprob: -12.02643871307373
    10. '    ' → logprob: -12.15143871307373

Token 327: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10029347240924835
    2. ')
' → logprob: -2.3502933979034424
    3. '       ' → logprob: -9.600293159484863
    4. ')
' → logprob: -11.475293159484863
    5. ')return' → logprob: -11.850293159484863
    6. ' )' → logprob: -14.350293159484863
    7. ' )
' → logprob: -15.100293159484863
    8. ')

' → logprob: -15.225293159484863
    9. ')\
' → logprob: -16.72529411315918
    10. '),' → logprob: -16.97529411315918

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02387412078678608
    2. '
' → logprob: -3.773874044418335
    3. 'return' → logprob: -7.648874282836914
    4. ' return' → logprob: -9.523874282836914
    5. '        
' → logprob: -10.273874282836914
    6. '<|end|>' → logprob: -11.148874282836914
    7. '   ' → logprob: -11.273874282836914
    8. '
' → logprob: -12.273874282836914
    9. '  
' → logprob: -12.773874282836914
    10. '    
' → logprob: -13.023874282836914

Token 329: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34948021173477173
    2. 'return' (adapté à ' return') → logprob: -1.349480152130127
    3. ' return' → logprob: -3.349480152130127
    4. '
' → logprob: -7.724480152130127
    5. '	return' → logprob: -10.974480628967285
    6. '   ' → logprob: -12.224480628967285
    7. '        
' → logprob: -13.974480628967285
    8. '	' → logprob: -14.349480628967285
    9. 'eturn' → logprob: -14.974480628967285
    10. '{return' → logprob: -14.974480628967285

Token 330: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.0019286326132714748
    2. 'right' → logprob: -6.251928806304932
    3. '	right' → logprob: -17.126928329467773
    4. '(right' → logprob: -18.751928329467773
    5. ' ' → logprob: -20.126928329467773
    6. ' rights' → logprob: -20.376928329467773
    7. '[right' → logprob: -20.751928329467773
    8. '_right' → logprob: -20.876928329467773
    9. ' ' → logprob: -21.126928329467773
    10. '.right' → logprob: -22.251928329467773

Token 331: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.001930301426909864
    2. '-' → logprob: -6.251930236816406
    3. '-left' → logprob: -13.376930236816406
    4. ' ' → logprob: -16.876930236816406
    5. ' ' → logprob: -17.126930236816406
    6. ' –' → logprob: -17.376930236816406
    7. ' -
' → logprob: -18.126930236816406
    8. ' −' → logprob: -18.126930236816406
    9. '-l' → logprob: -19.001930236816406
    10. '   ' → logprob: -19.126930236816406

Token 332: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.005233763717114925
    2. ' left' → logprob: -5.2552337646484375
    3. '	left' → logprob: -17.755233764648438
    4. '1' → logprob: -18.755233764648438
    5. '[left' → logprob: -19.130233764648438
    6. '_left' → logprob: -20.630233764648438
    7. '.left' → logprob: -21.005233764648438
    8. ' ' → logprob: -21.755233764648438
    9. '(left' → logprob: -22.505233764648438
    10. '   ' → logprob: -22.505233764648438

Token 333: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: ' Input' (ID: 10090)
  Prédit: 'Prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Prime' → logprob: -1.1253293752670288
    2. ' H' → logprob: -1.6253293752670288
    3. ' Prime' → logprob: -1.8753293752670288
    4. 'H' → logprob: -2.0003294944763184
    5. 'Test' → logprob: -3.0003294944763184
    6. ' Test' → logprob: -3.2503294944763184
    7. ' Fibonacci' → logprob: -4.250329494476318
    8. ' Ugly' → logprob: -4.500329494476318
    9. ' Perfect' → logprob: -4.875329494476318
    10. 'Range' → logprob: -5.000329494476318

Token 336: 'Processor' (ID: 22334)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.2305217683315277
    2. 'Reader' → logprob: -1.98052179813385
    3. 'Processor' → logprob: -3.6055216789245605
    4. 'Parser' → logprob: -3.8555216789245605
    5. 'Data' → logprob: -4.8555216789245605
    6. ':' → logprob: -5.7305216789245605
    7. 'Manager' → logprob: -5.9805216789245605
    8. 'Validator' → logprob: -6.2305216789245605
    9. 'Provider' → logprob: -7.3555216789245605
    10. '():' → logprob: -7.4805216789245605

Token 337: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028115289751440287
    2. ':
' → logprob: -5.877811431884766
    3. ' :' → logprob: -12.377811431884766
    4. ':def' → logprob: -13.752811431884766
    5. ':

' → logprob: -15.127811431884766
    6. '):' → logprob: -15.252811431884766
    7. '(' → logprob: -15.752811431884766
    8. ':
' → logprob: -16.002811431884766
    9. '<|end|>' → logprob: -16.252811431884766
    10. '():' → logprob: -16.377811431884766

Token 338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008716211654245853
    2. ' def' → logprob: -4.758716106414795
    3. ' class' → logprob: -10.008716583251953
    4. 'def' → logprob: -10.133716583251953
    5. 'class' → logprob: -11.133716583251953
    6. '```' → logprob: -14.258716583251953
    7. '<|end|>' → logprob: -14.258716583251953
    8. '    ' → logprob: -15.758716583251953
    9. ':' → logprob: -15.883716583251953
    10. '   ' → logprob: -16.133716583251953

Token 339: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.27006208896636963
    2. 'def' (adapté à ' def') → logprob: -1.5200620889663696
    3. '   ' → logprob: -4.02006196975708
    4. 'class' → logprob: -11.020062446594238
    5. '	def' → logprob: -14.770062446594238
    6. ' class' → logprob: -14.770062446594238
    7. 'import' → logprob: -15.645062446594238
    8. '```' → logprob: -15.770062446594238
    9. ' ' → logprob: -16.270061492919922
    10. '    ' → logprob: -17.020061492919922

Token 340: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.014699297957122326
    2. '__' → logprob: -4.764699459075928
    3. ' def' → logprob: -5.264699459075928
    4. 'def' → logprob: -7.639699459075928
    5. ' init' → logprob: -8.63969898223877
    6. 'init' → logprob: -9.51469898223877
    7. ' process' → logprob: -9.63969898223877
    8. 'process' → logprob: -10.01469898223877
    9. '_init' → logprob: -11.13969898223877
    10. ' ___' → logprob: -11.63969898223877

Token 341: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.6286106983898208e-05
    2. 'call' → logprob: -11.125016212463379
    3. ' init' → logprob: -14.375016212463379
    4. 'def' → logprob: -15.250016212463379
    5. 'new' → logprob: -16.000017166137695
    6. '(init' → logprob: -16.000017166137695
    7. '   ' → logprob: -16.375017166137695
    8. '_init' → logprob: -16.625017166137695
    9. '	init' → logprob: -17.000017166137695
    10. 'next' → logprob: -17.125017166137695

Token 342: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.16174067556858063
    2. '(self' → logprob: -1.9117406606674194
    3. '(' → logprob: -7.161740779876709
    4. ' (' → logprob: -8.28674030303955
    5. '__(
' → logprob: -8.41174030303955
    6. '__' → logprob: -9.03674030303955
    7. 'self' → logprob: -9.53674030303955
    8. '_(' → logprob: -10.03674030303955
    9. '   ' → logprob: -11.53674030303955
    10. ')(' → logprob: -12.03674030303955

Token 343: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001170132018160075
    2. ' self' → logprob: -10.000117301940918
    3. '):
' → logprob: -10.500117301940918
    4. ')' → logprob: -10.750117301940918
    5. '
' → logprob: -11.375117301940918
    6. '   ' → logprob: -11.500117301940918
    7. ')
' → logprob: -15.375117301940918
    8. 'elf' → logprob: -15.500117301940918
    9. '       ' → logprob: -16.1251163482666
    10. '(self' → logprob: -16.3751163482666

Token 344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06905901432037354
    2. '):
' → logprob: -3.194058895111084
    3. '):' → logprob: -3.944058895111084
    4. 'self' → logprob: -5.194058895111084
    5. ' ,' → logprob: -8.319059371948242
    6. '   ' → logprob: -8.319059371948242
    7. '(self' → logprob: -9.944059371948242
    8. ')' → logprob: -10.069059371948242
    9. '):

' → logprob: -10.069059371948242
    10. ' self' → logprob: -10.194059371948242

Token 345: ' counter' (ID: 9446)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5871531963348389
    2. 'h' → logprob: -2.087153196334839
    3. 'inputs' → logprob: -2.587153196334839
    4. ' input' → logprob: -2.712153196334839
    5. 'limit' → logprob: -3.087153196334839
    6. ')' → logprob: -3.337153196334839
    7. '):' → logprob: -3.962153196334839
    8. 'lines' → logprob: -4.212153434753418
    9. '):
' → logprob: -4.212153434753418
    10. ' inputs' → logprob: -4.587153434753418

Token 346: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05059744045138359
    2. '):
' → logprob: -3.4255974292755127
    3. ':' → logprob: -4.300597667694092
    4. ',' → logprob: -5.925597667694092
    5. ' ):' → logprob: -8.175597190856934
    6. ')' → logprob: -8.550597190856934
    7. '   ' → logprob: -9.925597190856934
    8. '):
' → logprob: -11.675597190856934
    9. '  ' → logprob: -11.925597190856934
    10. ' ' → logprob: -11.925597190856934

Token 347: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.16023559868335724
    2. ' H' → logprob: -1.9102356433868408
    3. '   ' → logprob: -11.535235404968262
    4. ' ' → logprob: -13.785235404968262
    5. ')' → logprob: -15.160235404968262
    6. '	H' → logprob: -15.660235404968262
    7. '  ' → logprob: -16.285236358642578
    8. '_H' → logprob: -16.410236358642578
    9. ',H' → logprob: -17.160236358642578
    10. '    ' → logprob: -17.660236358642578

Token 348: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -4.286852345103398e-05
    2. '   ' → logprob: -10.625042915344238
    3. 'am' → logprob: -11.750042915344238
    4. 'aming' → logprob: -12.875042915344238
    5. 'amm' → logprob: -13.875042915344238
    6. 'class' → logprob: -14.000042915344238
    7. 'ammer' → logprob: -14.375042915344238
    8. 'apping' → logprob: -14.375042915344238
    9. '    ' → logprob: -14.625042915344238
    10. '```' → logprob: -14.875042915344238

Token 349: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -1.5048530030981055e-06
    2. 'Numbers' → logprob: -14.000001907348633
    3. 'number' → logprob: -14.750001907348633
    4. ' Number' → logprob: -16.250001907348633
    5. '_number' → logprob: -16.500001907348633
    6. '_Number' → logprob: -19.125001907348633
    7. '
' → logprob: -19.375001907348633
    8. 'umber' → logprob: -20.000001907348633
    9. '_NUMBER' → logprob: -20.250001907348633
    10. ' number' → logprob: -20.375001907348633

Token 350: 'Counter' (ID: 16263)
  Prédit: 'Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -4.811348480870947e-05
    2. 'counter' → logprob: -10.12504768371582
    3. 'ounter' → logprob: -12.37504768371582
    4. 'Count' → logprob: -13.62504768371582
    5. ' counter' → logprob: -13.87504768371582
    6. '_counter' → logprob: -14.87504768371582
    7. 'C' → logprob: -15.25004768371582
    8. '   ' → logprob: -16.00004768371582
    9. ' ' → logprob: -16.12504768371582
    10. ' Counter' → logprob: -16.12504768371582

Token 351: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12698963284492493
    2. '):' → logprob: -2.1269896030426025
    3. '   ' → logprob: -10.251989364624023
    4. '):
' → logprob: -11.501989364624023
    5. '       ' → logprob: -11.626989364624023
    6. ',' → logprob: -12.501989364624023
    7. ' ):
' → logprob: -13.626989364624023
    8. '):

' → logprob: -14.001989364624023
    9. ')' → logprob: -14.751989364624023
    10. ' ):' → logprob: -15.126989364624023

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01259194128215313
    2. 'self' → logprob: -4.63759183883667
    3. 'def' → logprob: -6.38759183883667
    4. '   ' → logprob: -7.01259183883667
    5. ' self' → logprob: -8.387592315673828
    6. ' def' → logprob: -11.137592315673828
    7. 'class' → logprob: -13.387592315673828
    8. '	self' → logprob: -13.512592315673828
    9. '(self' → logprob: -13.637592315673828
    10. '```' → logprob: -14.762592315673828

Token 353: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0014321435010060668
    2. '       ' → logprob: -6.751431941986084
    3. ' self' → logprob: -8.251432418823242
    4. '   ' → logprob: -14.126432418823242
    5. '
' → logprob: -15.876432418823242
    6. '	self' → logprob: -16.251432418823242
    7. 'def' → logprob: -17.126432418823242
    8. 's' → logprob: -18.876432418823242
    9. 'class' → logprob: -19.501432418823242
    10. '        
' → logprob: -19.626432418823242

Token 354: '.counter' (ID: 89645)
  Prédit: '.counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.counter' → logprob: -9.436450636712834e-05
    2. '.' → logprob: -10.250094413757324
    3. 'counter' → logprob: -10.625094413757324
    4. '._' → logprob: -10.625094413757324
    5. '.count' → logprob: -12.500094413757324
    6. ' .' → logprob: -13.625094413757324
    7. ' counter' → logprob: -13.625094413757324
    8. '   ' → logprob: -13.750094413757324
    9. '.Counter' → logprob: -14.125094413757324
    10. '	counter' → logprob: -14.250094413757324

Token 355: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48705580830574036
    2. ' =' → logprob: -0.987055778503418
    3. '.counter' → logprob: -4.487055778503418
    4. '.' → logprob: -7.112055778503418
    5. 'counter' → logprob: -8.112055778503418
    6. '_counter' → logprob: -8.362055778503418
    7. '       ' → logprob: -9.487055778503418
    8. '   ' → logprob: -9.487055778503418
    9. '	counter' → logprob: -10.737055778503418
    10. ' counter' → logprob: -10.862055778503418

Token 356: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.16022463142871857
    2. ' counter' → logprob: -1.9102246761322021
    3. '	counter' → logprob: -15.160224914550781
    4. '(counter' → logprob: -16.03522491455078
    5. '[counter' → logprob: -16.53522491455078
    6. 'count' → logprob: -17.66022491455078
    7. '       ' → logprob: -17.78522491455078
    8. '_counter' → logprob: -18.53522491455078
    9. '.counter' → logprob: -18.66022491455078
    10. '   ' → logprob: -19.03522491455078

Token 357: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13015034794807434
    2. '   ' → logprob: -2.130150318145752
    3. '    
' → logprob: -5.755150318145752
    4. '        
' → logprob: -10.88015079498291
    5. '

' → logprob: -11.63015079498291
    6. '<|end|>' → logprob: -11.63015079498291
    7. 'def' → logprob: -11.88015079498291
    8. '  
' → logprob: -12.75515079498291
    9. ' 
' → logprob: -13.25515079498291
    10. '   
' → logprob: -14.13015079498291

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010099569335579872
    2. 'def' → logprob: -4.760099411010742
    3. '
' → logprob: -6.635099411010742
    4. ' def' → logprob: -8.885099411010742
    5. '    
' → logprob: -10.510099411010742
    6. '	def' → logprob: -13.135099411010742
    7. '<|end|>' → logprob: -13.760099411010742
    8. '```' → logprob: -14.760099411010742
    9. '        
' → logprob: -15.135099411010742
    10. '

' → logprob: -15.510099411010742

Token 359: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003357006062287837
    2. ' def' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.125335693359375
    4. '
' → logprob: -18.500335693359375
    5. '	def' → logprob: -18.875335693359375
    6. 'de' → logprob: -19.125335693359375
    7. '```' → logprob: -19.125335693359375
    8. 'd' → logprob: -20.125335693359375
    9. ' ' → logprob: -20.875335693359375
    10. 'import' → logprob: -21.750335693359375

Token 360: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.47411486506462097
    2. ' process' → logprob: -0.9741148948669434
    3. 'count' → logprob: -10.974114418029785
    4. ' count' → logprob: -11.224114418029785
    5. '	process' → logprob: -13.099114418029785
    6. 'read' → logprob: -13.349114418029785
    7. ' read' → logprob: -14.474114418029785
    8. '_process' → logprob: -14.474114418029785
    9. 'handle' → logprob: -14.599114418029785
    10. '.process' → logprob: -14.974114418029785

Token 361: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16334566473960876
    2. '_input' → logprob: -2.0383455753326416
    3. '(' → logprob: -4.538345813751221
    4. '_' → logprob: -5.538345813751221
    5. '_line' → logprob: -6.163345813751221
    6. '_range' → logprob: -6.413345813751221
    7. '_query' → logprob: -7.038345813751221
    8. '_inputs' → logprob: -7.913345813751221
    9. '_(' → logprob: -8.163345336914062
    10. 'self' → logprob: -8.788345336914062

Token 362: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17546501755714417
    2. '_input' → logprob: -1.9254649877548218
    3. '_line' → logprob: -5.175465106964111
    4. '_' → logprob: -5.550465106964111
    5. '_,' → logprob: -6.425465106964111
    6. 'self' → logprob: -7.175465106964111
    7. '_range' → logprob: -7.425465106964111
    8. ',input' → logprob: -7.425465106964111
    9. '_query' → logprob: -7.675465106964111
    10. ',_' → logprob: -7.800465106964111

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011858227662742138
    2. 'import' → logprob: -7.376185894012451
    3. ',' → logprob: -8.376185417175293
    4. 'input' → logprob: -9.376185417175293
    5. 'n' → logprob: -9.626185417175293
    6. '()' → logprob: -9.876185417175293
    7. '```' → logprob: -10.751185417175293
    8. ' for' → logprob: -11.376185417175293
    9. 'while' → logprob: -11.376185417175293
    10. '   ' → logprob: -11.501185417175293

Token 364: ' import' (ID: 1588)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8687122464179993
    2. 'import' (adapté à ' import') → logprob: -1.6187121868133545
    3. ' import' → logprob: -1.7437121868133545
    4. 'while' → logprob: -2.1187121868133545
    5. '       ' → logprob: -2.7437121868133545
    6. 'try' → logprob: -4.243712425231934
    7. ' try' → logprob: -4.868712425231934
    8. ' n' → logprob: -8.118712425231934
    9. ' for' → logprob: -8.493712425231934
    10. '```' → logprob: -8.618712425231934

Token 365: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.12693114578723907
    2. ' sys' → logprob: -2.1269311904907227
    3. '=sys' → logprob: -13.126931190490723
    4. '	sys' → logprob: -13.876931190490723
    5. '```' → logprob: -17.001930236816406
    6. '.sys' → logprob: -17.251930236816406
    7. '_sys' → logprob: -17.376930236816406
    8. '(sys' → logprob: -17.501930236816406
    9. 'built' → logprob: -17.751930236816406
    10. 's' → logprob: -18.251930236816406

Token 366: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003268380183726549
    2. ' for' → logprob: -6.378268241882324
    3. 'for' → logprob: -6.628268241882324
    4. '
' → logprob: -9.378268241882324
    5. '        
' → logprob: -9.628268241882324
    6. ',' → logprob: -9.878268241882324
    7. '<|end|>' → logprob: -10.753268241882324
    8. ' lines' → logprob: -13.128268241882324
    9. '.readline' → logprob: -13.378268241882324
    10. 'while' → logprob: -13.503268241882324

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004100008402019739
    2. 'for' → logprob: -5.7540998458862305
    3. ' for' → logprob: -7.0040998458862305
    4. ' lines' → logprob: -11.62909984588623
    5. 'input' → logprob: -13.37909984588623
    6. ' readline' → logprob: -14.37909984588623
    7. 'lines' → logprob: -14.50409984588623
    8. ' line' → logprob: -14.62909984588623
    9. 'line' → logprob: -14.75409984588623
    10. 'data' → logprob: -15.00409984588623

Token 368: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.552230179309845
    2. ' for' → logprob: -1.3022301197052002
    3. '       ' → logprob: -1.9272301197052002
    4. ' lines' → logprob: -5.052230358123779
    5. 'lines' → logprob: -9.177229881286621
    6. 'input' → logprob: -9.427229881286621
    7. 'data' → logprob: -9.552229881286621
    8. 'line' → logprob: -9.802229881286621
    9. ' line' → logprob: -9.927229881286621
    10. ' input' → logprob: -10.052229881286621

Token 369: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0009338518721051514
    2. 'line' → logprob: -7.000933647155762
    3. '	line' → logprob: -10.750933647155762
    4. '_line' → logprob: -14.750933647155762
    5. ' lin' → logprob: -16.000934600830078
    6. '#line' → logprob: -16.125934600830078
    7. '=line' → logprob: -16.750934600830078
    8. '(line' → logprob: -17.000934600830078
    9. ' linen' → logprob: -17.125934600830078
    10. ' l' → logprob: -17.625934600830078

Token 370: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00029685118352063
    2. 'in' → logprob: -8.125296592712402
    3. ' ' → logprob: -14.375296592712402
    4. 'line' → logprob: -15.750296592712402
    5. 's' → logprob: -16.75029754638672
    6. 'import' → logprob: -17.62529754638672
    7. '	in' → logprob: -17.87529754638672
    8. 'n' → logprob: -18.00029754638672
    9. '_in' → logprob: -18.50029754638672
    10. '_' → logprob: -18.50029754638672

Token 371: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.20141470432281494
    2. ' sys' → logprob: -1.701414704322815
    3. '=sys' → logprob: -13.951415061950684
    4. '	sys' → logprob: -14.951415061950684
    5. '(sys' → logprob: -15.701415061950684
    6. 'import' → logprob: -17.451414108276367
    7. '_sys' → logprob: -18.701414108276367
    8. 's' → logprob: -19.201414108276367
    9. 'stdin' → logprob: -19.326414108276367
    10. 'Sys' → logprob: -19.451414108276367

Token 372: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00011069540778407827
    2. 'stdin' → logprob: -9.125110626220703
    3. '.' → logprob: -14.625110626220703
    4. '.stdout' → logprob: -14.750110626220703
    5. ' stdin' → logprob: -15.000110626220703
    6. 'in' → logprob: -15.125110626220703
    7. '.readline' → logprob: -15.750110626220703
    8. '(stdin' → logprob: -15.875110626220703
    9. '.argv' → logprob: -16.750110626220703
    10. '.stderr' → logprob: -17.000110626220703

Token 373: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7092175483703613
    2. '.readline' → logprob: -1.7092175483703613
    3. ':
' → logprob: -1.8342175483703613
    4. '.strip' → logprob: -2.5842175483703613
    5. ':' → logprob: -3.0842175483703613
    6. '.rstrip' → logprob: -3.5842175483703613
    7. '.' → logprob: -5.084217548370361
    8. '       ' → logprob: -5.584217548370361
    9. '.readlines' → logprob: -5.959217548370361
    10. '():
' → logprob: -6.459217548370361

Token 374: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003124632057733834
    2. '            
' → logprob: -9.250312805175781
    3. ':' → logprob: -9.750312805175781
    4. '<|end|>' → logprob: -10.375312805175781
    5. ',' → logprob: -10.750312805175781
    6. ' if' → logprob: -10.750312805175781
    7. '.strip' → logprob: -10.875312805175781
    8. ':
' → logprob: -11.500312805175781
    9. '<|end|>' → logprob: -12.125312805175781
    10. '.rstrip' → logprob: -12.250312805175781

Token 375: ' line' (ID: 2543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05980078503489494
    2. ' line' → logprob: -2.934800863265991
    3. 'line' (adapté à ' line') → logprob: -6.184800624847412
    4. ' if' → logprob: -6.559800624847412
    5. ' stripped' → logprob: -7.309800624847412
    6. '            
' → logprob: -8.18480110168457
    7. '               ' → logprob: -8.30980110168457
    8. 'strip' → logprob: -10.30980110168457
    9. '=line' → logprob: -10.55980110168457
    10. 'if' → logprob: -10.68480110168457

Token 376: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1598345786333084
    2. ' =' → logprob: -2.159834623336792
    3. '=line' → logprob: -3.909834623336792
    4. '.strip' → logprob: -4.409834384918213
    5. '_strip' → logprob: -9.159834861755371
    6. 'strip' → logprob: -10.159834861755371
    7. '.rstrip' → logprob: -11.534834861755371
    8. '           ' → logprob: -12.534834861755371
    9. '=str' → logprob: -12.659834861755371
    10. '.=' → logprob: -12.659834861755371

Token 377: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0031777136027812958
    2. ' line' → logprob: -5.753177642822266
    3. '=line' → logprob: -18.753177642822266
    4. '	line' → logprob: -19.878177642822266
    5. '(line' → logprob: -20.753177642822266
    6. '#line' → logprob: -21.628177642822266
    7. 'lin' → logprob: -23.003177642822266
    8. '[line' → logprob: -23.128177642822266
    9. '_line' → logprob: -23.628177642822266
    10. 'Line' → logprob: -23.628177642822266

Token 378: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0015386694576591253
    2. '.rstrip' → logprob: -6.5015387535095215
    3. '.' → logprob: -10.501538276672363
    4. 'strip' → logprob: -11.751538276672363
    5. '.readline' → logprob: -14.876538276672363
    6. 'rstrip' → logprob: -15.626538276672363
    7. ' strip' → logprob: -16.00153923034668
    8. '.chomp' → logprob: -16.37653923034668
    9. ' .' → logprob: -16.87653923034668
    10. '.trim' → logprob: -17.00153923034668

Token 379: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5235241651535034
    2. '()
' → logprob: -0.8985241651535034
    3. '           ' → logprob: -8.523524284362793
    4. '()
' → logprob: -9.648524284362793
    5. '()

' → logprob: -10.023524284362793
    6. '()\' → logprob: -10.523524284362793
    7. '():
' → logprob: -10.773524284362793
    8. '();' → logprob: -11.648524284362793
    9. '       ' → logprob: -11.898524284362793
    10. '<|end|>' → logprob: -12.273524284362793

Token 380: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001029471677611582
    2. ' if' → logprob: -9.875102996826172
    3. '<|end|>' → logprob: -10.625102996826172
    4. 'if' → logprob: -11.500102996826172
    5. '       ' → logprob: -12.125102996826172
    6. '            
' → logprob: -12.250102996826172
    7. '<|end|>' → logprob: -13.625102996826172
    8. ',' → logprob: -13.625102996826172
    9. '   ' → logprob: -13.750102996826172
    10. '               ' → logprob: -14.250102996826172

Token 381: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008947220630943775
    2. ' if' → logprob: -4.758947372436523
    3. '           ' → logprob: -8.008947372436523
    4. '	if' → logprob: -16.758947372436523
    5. 'If' → logprob: -16.883947372436523
    6. '
' → logprob: -17.008947372436523
    7. '```' → logprob: -17.633947372436523
    8. '       ' → logprob: -17.758947372436523
    9. ';if' → logprob: -18.383947372436523
    10. '            
' → logprob: -18.508947372436523

Token 382: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.021167198196053505
    2. 'not' → logprob: -3.896167278289795
    3. ' line' → logprob: -7.521167278289795
    4. 'line' → logprob: -9.396166801452637
    5. ' ' → logprob: -15.271166801452637
    6. ' no' → logprob: -16.521167755126953
    7. '	not' → logprob: -16.646167755126953
    8. '!' → logprob: -16.771167755126953
    9. ' ' → logprob: -17.271167755126953
    10. 'n't' → logprob: -18.021167755126953

Token 383: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47412362694740295
    2. ' ==' → logprob: -0.9741235971450806
    3. '=' → logprob: -10.84912395477295
    4. '()==' → logprob: -11.22412395477295
    5. '.startswith' → logprob: -12.22412395477295
    6. '===' → logprob: -12.72412395477295
    7. ' =' → logprob: -13.34912395477295
    8. '==
' → logprob: -13.84912395477295
    9. ')==' → logprob: -13.84912395477295
    10. '=="' → logprob: -13.97412395477295

Token 384: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.31114888191223145
    2. '""' → logprob: -1.5611488819122314
    3. '"' → logprob: -3.5611488819122314
    4. '"":' → logprob: -4.061148643493652
    5. ''' → logprob: -4.436148643493652
    6. ''ex' → logprob: -11.561148643493652
    7. ''end' → logprob: -13.186148643493652
    8. ' ""' → logprob: -13.811148643493652
    9. ' ''' → logprob: -14.311148643493652
    10. ''b' → logprob: -14.561148643493652

Token 385: '0' (ID: 15)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.19079528748989105
    2. '':
' → logprob: -2.0657951831817627
    3. ''' → logprob: -3.3157951831817627
    4. '''' → logprob: -5.440795421600342
    5. '0' → logprob: -5.690795421600342
    6. '""' → logprob: -7.065795421600342
    7. '':
' → logprob: -7.565795421600342
    8. 'END' → logprob: -7.815795421600342
    9. 'end' → logprob: -8.690794944763184
    10. '"' → logprob: -8.690794944763184

Token 386: '':
' (ID: 7669)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0495942085981369
    2. '0' → logprob: -3.0495941638946533
    3. '':
' → logprob: -7.549594402313232
    4. '':' → logprob: -7.799594402313232
    5. '':
' → logprob: -10.424593925476074
    6. ''' → logprob: -10.549593925476074
    7. ' '' → logprob: -12.174593925476074
    8. '1' → logprob: -13.174593925476074
    9. ':' → logprob: -13.299593925476074
    10. ' or' → logprob: -13.799593925476074

Token 387: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08899737894535065
    2. '           ' → logprob: -2.4639973640441895
    3. '                   ' → logprob: -10.963997840881348
    4. '              ' → logprob: -11.588997840881348
    5. '	           ' → logprob: -11.838997840881348
    6. '   ' → logprob: -12.213997840881348
    7. '       ' → logprob: -12.338997840881348
    8. ' break' → logprob: -12.713997840881348
    9. '            ' → logprob: -12.838997840881348
    10. '             ' → logprob: -13.338997840881348

Token 388: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.4286983013153076
    2. '               ' → logprob: -1.1786983013153076
    3. ' break' → logprob: -3.4286983013153076
    4. '                   ' → logprob: -5.053698539733887
    5. '           ' → logprob: -6.553698539733887
    6. 'return' → logprob: -7.428698539733887
    7. '	break' → logprob: -9.303698539733887
    8. '                       ' → logprob: -11.053698539733887
    9. '
' → logprob: -11.303698539733887
    10. ' return' → logprob: -12.678698539733887

Token 389: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04596912860870361
    2. '            
' → logprob: -3.670969009399414
    3. '
' → logprob: -4.045969009399414
    4. '<|end|>' → logprob: -6.545969009399414
    5. '    
' → logprob: -8.420969009399414
    6. '  
' → logprob: -9.295969009399414
    7. '        
' → logprob: -10.045969009399414
    8. '		' → logprob: -10.420969009399414
    9. '<|end|>' → logprob: -10.420969009399414
    10. '           
' → logprob: -10.545969009399414

Token 390: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016021024202927947
    2. '            
' → logprob: -6.8766021728515625
    3. '
' → logprob: -7.6266021728515625
    4. '       ' → logprob: -10.751602172851562
    5. '        
' → logprob: -11.376602172851562
    6. '<|end|>' → logprob: -11.626602172851562
    7. '    
' → logprob: -11.751602172851562
    8. '          ' → logprob: -11.751602172851562
    9. '```' → logprob: -12.251602172851562
    10. '  
' → logprob: -12.376602172851562

Token 391: ' m' (ID: 284)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0547324419021606
    2. '       ' → logprob: -1.4297324419021606
    3. ' parts' → logprob: -1.6797324419021606
    4. 'm' (adapté à ' m') → logprob: -2.054732322692871
    5. 'parts' → logprob: -2.679732322692871
    6. ' m' → logprob: -4.179732322692871
    7. 'nums' → logprob: -6.054732322692871
    8. 'try' → logprob: -6.179732322692871
    9. 'tokens' → logprob: -6.179732322692871
    10. 'values' → logprob: -7.054732322692871

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008229722734540701
    2. ',n' → logprob: -7.125823020935059
    3. ' ,' → logprob: -11.250823020935059
    4. '_,' → logprob: -13.250823020935059
    5. 'n' → logprob: -14.125823020935059
    6. ',m' → logprob: -14.750823020935059
    7. ',s' → logprob: -14.750823020935059
    8. '‌,' → logprob: -14.750823020935059
    9. ',num' → logprob: -15.000823020935059
    10. ',
' → logprob: -15.625823020935059

Token 393: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2520068287849426
    2. ' n' → logprob: -1.5020067691802979
    3. ' ' → logprob: -9.502006530761719
    4. '	n' → logprob: -13.377006530761719
    5. '  ' → logprob: -14.252006530761719
    6. '    ' → logprob: -15.002006530761719
    7. '_n' → logprob: -15.252006530761719
    8. ',n' → logprob: -16.50200653076172
    9. ' ' → logprob: -17.25200653076172
    10. '<|end|>' → logprob: -17.37700653076172

Token 394: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692958116531372
    2. ' =' → logprob: -2.126929521560669
    3. ',' → logprob: -13.87692928314209
    4. ' ' → logprob: -15.75192928314209
    5. '=line' → logprob: -15.87692928314209
    6. ')' → logprob: -16.001930236816406
    7. '<|end|>' → logprob: -16.251930236816406
    8. '＝' → logprob: -16.876930236816406
    9. '=int' → logprob: -17.251930236816406
    10. '	' → logprob: -17.251930236816406

Token 395: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.06373744457960129
    2. 'map' → logprob: -2.813737392425537
    3. ' line' → logprob: -6.563737392425537
    4. 'line' → logprob: -7.938737392425537
    5. ' ' → logprob: -14.813737869262695
    6. '(map' → logprob: -15.563737869262695
    7. '	map' → logprob: -15.563737869262695
    8. '[line' → logprob: -16.938737869262695
    9. '[' → logprob: -17.063737869262695
    10. ' ' → logprob: -17.313737869262695

Token 396: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00018935515254270285
    2. '(' → logprob: -8.750189781188965
    3. '(str' → logprob: -11.000189781188965
    4. 'int' → logprob: -11.375189781188965
    5. '(lambda' → logprob: -13.000189781188965
    6. '```' → logprob: -16.75018882751465
    7. ' int' → logprob: -16.87518882751465
    8. ' (' → logprob: -17.00018882751465
    9. '<int' → logprob: -17.25018882751465
    10. '(float' → logprob: -17.25018882751465

Token 397: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.002174766268581152
    2. ',line' → logprob: -6.5021748542785645
    3. ' line' → logprob: -7.8771748542785645
    4. ')' → logprob: -9.002174377441406
    5. 'line' → logprob: -9.127174377441406
    6. ',' → logprob: -10.252174377441406
    7. '=line' → logprob: -11.252174377441406
    8. '(' → logprob: -12.502174377441406
    9. '[line' → logprob: -12.627174377441406
    10. '#line' → logprob: -12.627174377441406

Token 398: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06196802109479904
    2. ' line' → logprob: -2.8119680881500244
    3. '(line' → logprob: -15.186967849731445
    4. '	line' → logprob: -16.436967849731445
    5. '[line' → logprob: -17.686967849731445
    6. '           ' → logprob: -17.811967849731445
    7. '#line' → logprob: -17.936967849731445
    8. '=line' → logprob: -18.186967849731445
    9. ',line' → logprob: -18.936967849731445
    10. '_line' → logprob: -19.311967849731445

Token 399: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.06910362839698792
    2. '.split' → logprob: -2.819103717803955
    3. '.strip' → logprob: -5.194103717803955
    4. '.' → logprob: -7.694103717803955
    5. '()' → logprob: -7.944103717803955
    6. '(line' → logprob: -8.444103240966797
    7. ' .' → logprob: -8.569103240966797
    8. ')' → logprob: -9.194103240966797
    9. 'split' → logprob: -9.694103240966797
    10. '(' → logprob: -9.819103240966797

Token 400: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00884938519448042
    2. '()' → logprob: -4.758849620819092
    3. '())
' → logprob: -9.008849143981934
    4. '('' → logprob: -9.633849143981934
    5. ')' → logprob: -10.883849143981934
    6. '(' → logprob: -11.258849143981934
    7. '()))' → logprob: -12.258849143981934
    8. ' ())' → logprob: -12.758849143981934
    9. '(','' → logprob: -12.883849143981934
    10. '()
' → logprob: -13.633849143981934

Token 401: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00014776040916331112
    2. '<|end|>' → logprob: -9.500147819519043
    3. '       ' → logprob: -10.625147819519043
    4. '            
' → logprob: -10.750147819519043
    5. '
' → logprob: -11.750147819519043
    6. '          ' → logprob: -11.875147819519043
    7. 'return' → logprob: -12.875147819519043
    8. '<|end|>' → logprob: -13.375147819519043
    9. '               ' → logprob: -13.500147819519043
    10. '```' → logprob: -13.750147819519043

Token 402: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.33233022689819336
    2. 'count' → logprob: -1.3323302268981934
    3. 'result' → logprob: -4.457330226898193
    4. ' print' → logprob: -5.457330226898193
    5. '           ' → logprob: -6.082330226898193
    6. ' count' → logprob: -7.457330226898193
    7. ' result' → logprob: -9.332330703735352
    8. '
' → logprob: -10.707330703735352
    9. 'answer' → logprob: -10.832330703735352
    10. 'output' → logprob: -11.082330703735352

Token 403: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0325924449716695e-05
    2. '(' → logprob: -11.87501049041748
    3. 'self' → logprob: -12.62501049041748
    4. ' self' → logprob: -18.875009536743164
    5. '(
' → logprob: -19.750009536743164
    6. '[self' → logprob: -19.750009536743164
    7. '	self' → logprob: -20.500009536743164
    8. '=self' → logprob: -20.750009536743164
    9. ' (' → logprob: -21.375009536743164
    10. '           ' → logprob: -21.625009536743164

Token 404: '.counter' (ID: 89645)
  Prédit: '.counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.counter' → logprob: -2.0219828002154827e-05
    2. '.count' → logprob: -11.250020027160645
    3. 'counter' → logprob: -12.375020027160645
    4. '.' → logprob: -13.375020027160645
    5. '[counter' → logprob: -14.125020027160645
    6. ').' → logprob: -15.000020027160645
    7. ' counter' → logprob: -15.375020027160645
    8. ' .' → logprob: -16.75002098083496
    9. '	counter' → logprob: -16.75002098083496
    10. '(counter' → logprob: -17.25002098083496

Token 405: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -6.153795766294934e-06
    2. ' .' → logprob: -12.250005722045898
    3. 'count' → logprob: -14.250005722045898
    4. '.' → logprob: -14.375005722045898
    5. ').' → logprob: -17.3750057220459
    6. ' count' → logprob: -18.1250057220459
    7. '.counter' → logprob: -18.2500057220459
    8. '.Count' → logprob: -18.7500057220459
    9. '	count' → logprob: -19.6250057220459
    10. '<count' → logprob: -19.7500057220459

Token 406: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -3.054500666621607e-06
    2. '_' → logprob: -12.87500286102295
    3. ')' → logprob: -16.125003814697266
    4. '(' → logprob: -16.250003814697266
    5. '(_' → logprob: -16.250003814697266
    6. '(in' → logprob: -17.125003814697266
    7. ' _' → logprob: -17.125003814697266
    8. ')_' → logprob: -17.250003814697266
    9. '_i' → logprob: -18.000003814697266
    10. '_IN' → logprob: -18.125003814697266

Token 407: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.004623799119144678
    2. 'range' → logprob: -5.379623889923096
    3. '_' → logprob: -14.254623413085938
    4. ' range' → logprob: -14.754623413085938
    5. '_count' → logprob: -15.004623413085938
    6. 'Range' → logprob: -15.129623413085938
    7. 'rang' → logprob: -15.129623413085938
    8. '_r' → logprob: -15.254623413085938
    9. '(range' → logprob: -15.754623413085938
    10. '_in' → logprob: -15.879623413085938

Token 408: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -2.7848862373502925e-05
    2. '(' → logprob: -10.500027656555176
    3. ' (' → logprob: -15.625027656555176
    4. '(
' → logprob: -17.125028610229492
    5. ')' → logprob: -18.125028610229492
    6. ')(' → logprob: -18.375028610229492
    7. '(n' → logprob: -19.625028610229492
    8. ')m' → logprob: -19.875028610229492
    9. '(

' → logprob: -21.750028610229492
    10. '((' → logprob: -21.750028610229492

Token 409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00423665065318346
    2. ',n' → logprob: -5.504236698150635
    3. ' ,' → logprob: -8.754236221313477
    4. ',
' → logprob: -15.129236221313477
    5. 'n' → logprob: -15.754236221313477
    6. '‌,' → logprob: -17.629236221313477
    7. '(n' → logprob: -18.379236221313477
    8. ',m' → logprob: -18.629236221313477
    9. ' n' → logprob: -18.754236221313477
    10. ',p' → logprob: -19.004236221313477

Token 410: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4740821421146393
    2. ' n' → logprob: -0.9740821123123169
    3. ' ' → logprob: -12.849081993103027
    4. ')n' → logprob: -14.224081993103027
    5. '_n' → logprob: -14.974081993103027
    6. '	n' → logprob: -14.974081993103027
    7. '(n' → logprob: -15.599081993103027
    8. ' ' → logprob: -15.849081993103027
    9. '    ' → logprob: -15.849081993103027
    10. ')' → logprob: -15.974081993103027

Token 411: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0380522795021534
    2. ')' → logprob: -3.2880523204803467
    3. '))
' → logprob: -11.663052558898926
    4. ')))' → logprob: -14.038052558898926
    5. ')
' → logprob: -14.538052558898926
    6. '),' → logprob: -15.538052558898926
    7. ' ))' → logprob: -15.538052558898926
    8. '()))' → logprob: -16.03805160522461
    9. '       ' → logprob: -16.16305160522461
    10. '   ' → logprob: -17.16305160522461

Token 412: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001474152784794569
    2. '```' → logprob: -7.126474380493164
    3. '#' → logprob: -8.251474380493164
    4. '
' → logprob: -8.626474380493164
    5. ' if' → logprob: -9.001474380493164
    6. 'processor' → logprob: -9.876474380493164
    7. '    
' → logprob: -11.001474380493164
    8. '#if' → logprob: -11.876474380493164
    9. '  
' → logprob: -12.126474380493164
    10. '<|end|>' → logprob: -12.126474380493164

Token 413: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0006646605907008052
    2. ' __' → logprob: -8.250664710998535
    3. 'main' → logprob: -8.875664710998535
    4. ' _' → logprob: -9.000664710998535
    5. '_main' → logprob: -9.500664710998535
    6. '_' → logprob: -10.875664710998535
    7. ' solve' → logprob: -11.125664710998535
    8. ' run' → logprob: -11.375664710998535
    9. '__' → logprob: -11.375664710998535
    10. ' process' → logprob: -12.875664710998535

Token 414: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00029947367147542536
    2. '():
' → logprob: -8.125299453735352
    3. ' ():' → logprob: -13.000299453735352
    4. '()' → logprob: -14.125299453735352
    5. '():
' → logprob: -14.875299453735352
    6. '():

' → logprob: -17.00029945373535
    7. ':' → logprob: -18.00029945373535
    8. '()>' → logprob: -18.25029945373535
    9. '(' → logprob: -18.37529945373535
    10. '();' → logprob: -19.37529945373535

Token 415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15789134800434113
    2. ' h' → logprob: -2.032891273498535
    3. 'h' → logprob: -4.282891273498535
    4. ' counter' → logprob: -7.407891273498535
    5. ' limit' → logprob: -8.157891273498535
    6. '```' → logprob: -9.032891273498535
    7. '	h' → logprob: -10.032891273498535
    8. ' hn' → logprob: -10.282891273498535
    9. '    ' → logprob: -10.532891273498535
    10. 'counter' → logprob: -10.532891273498535

Token 416: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.6782949566841125
    2. 'h' (adapté à ' h') → logprob: -0.8032949566841125
    3. '   ' → logprob: -4.053295135498047
    4. 'ham' → logprob: -4.678295135498047
    5. ' limit' → logprob: -4.928295135498047
    6. 'hn' → logprob: -5.178295135498047
    7. 'limit' → logprob: -6.053295135498047
    8. ' hn' → logprob: -6.803295135498047
    9. ' ham' → logprob: -7.303295135498047
    10. 'hm' → logprob: -8.053295135498047

Token 417: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -0.006813761778175831
    2. ' =' → logprob: -5.2568135261535645
    3. 'h' → logprob: -7.7568135261535645
    4. '=' → logprob: -7.7568135261535645
    5. '   ' → logprob: -8.131814002990723
    6. '_h' → logprob: -9.256814002990723
    7. 'am' → logprob: -9.381814002990723
    8. 'aming' → logprob: -10.006814002990723
    9. 'ammer' → logprob: -10.381814002990723
    10. 'amm' → logprob: -10.631814002990723

Token 418: '_obj' (ID: 16879)
  Prédit: '_numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.13760501146316528
    2. ' =' → logprob: -2.1376049518585205
    3. '_obj' → logprob: -5.3876051902771
    4. '=' → logprob: -5.7626051902771
    5. 'numbers' → logprob: -6.7626051902771
    6. '_nums' → logprob: -6.7626051902771
    7. 's' → logprob: -8.512604713439941
    8. 'Numbers' → logprob: -8.762604713439941
    9. 'obj' → logprob: -9.012604713439941
    10. '   ' → logprob: -10.512604713439941

Token 419: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033648233860731125
    2. '=' → logprob: -3.4086482524871826
    3. '   ' → logprob: -13.283648490905762
    4. ' ' → logprob: -15.033648490905762
    5. '  ' → logprob: -15.783648490905762
    6. 's' → logprob: -16.408647537231445
    7. '    ' → logprob: -16.533647537231445
    8. ' =
' → logprob: -16.783647537231445
    9. ' =
' → logprob: -17.783647537231445
    10. ')' → logprob: -17.908647537231445

Token 420: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.005233763717114925
    2. ' H' → logprob: -5.2552337646484375
    3. '	H' → logprob: -22.005233764648438
    4. '   ' → logprob: -23.130233764648438
    5. ' ' → logprob: -23.380233764648438
    6. '<H' → logprob: -23.505233764648438
    7. '_H' → logprob: -23.880233764648438
    8. '(H' → logprob: -25.130233764648438
    9. '.H' → logprob: -26.005233764648438
    10. '  ' → logprob: -26.130233764648438

Token 421: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -0.00023524489370174706
    2. 'H' → logprob: -8.500235557556152
    3. 'am' → logprob: -11.125235557556152
    4. 'aming' → logprob: -11.625235557556152
    5. 'umming' → logprob: -12.875235557556152
    6. '[' → logprob: -14.000235557556152
    7. '   ' → logprob: -14.750235557556152
    8. 'h' → logprob: -14.875235557556152
    9. 'emming' → logprob: -15.125235557556152
    10. '(' → logprob: -15.125235557556152

Token 422: 'Numbers' (ID: 31274)
  Prédit: 'Numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Numbers' → logprob: -5.512236498361744e-07
    2. 'numbers' → logprob: -15.500000953674316
    3. 'Number' → logprob: -15.750000953674316
    4. '_numbers' → logprob: -16.875
    5. 'Objects' → logprob: -17.0
    6. 'umbers' → logprob: -17.375
    7. 'H' → logprob: -17.875
    8. ' Numbers' → logprob: -19.125
    9. 'Nums' → logprob: -19.5
    10. '   ' → logprob: -19.75

Token 423: '(limit' (ID: 112473)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2560900151729584
    2. '()
' → logprob: -1.5060900449752808
    3. '   ' → logprob: -6.13109016418457
    4. '(limit' → logprob: -6.88109016418457
    5. '(' → logprob: -7.00609016418457
    6. '()
' → logprob: -10.38109016418457
    7. '()

' → logprob: -12.63109016418457
    8. 'limit' → logprob: -12.75609016418457
    9. '()\' → logprob: -13.50609016418457
    10. ' ()' → logprob: -13.75609016418457

Token 424: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0645432099699974
    2. '())' → logprob: -2.8145432472229004
    3. '(' → logprob: -6.0645432472229
    4. '()' → logprob: -9.439542770385742
    5. '())
' → logprob: -9.564542770385742
    6. ' =' → logprob: -9.939542770385742
    7. ')' → logprob: -10.564542770385742
    8. '=(' → logprob: -11.314542770385742
    9. '=int' → logprob: -12.439542770385742
    10. '())

' → logprob: -12.939542770385742

Token 425: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.000627014203928411
    2. '100' → logprob: -7.375627040863037
    3. ' ' → logprob: -15.000626564025879
    4. '1' → logprob: -17.000627517700195
    5. 'int' → logprob: -17.875627517700195
    6. '   ' → logprob: -18.500627517700195
    7. '999' → logprob: -19.125627517700195
    8. '  ' → logprob: -19.375627517700195
    9. '１０' → logprob: -19.375627517700195
    10. '```' → logprob: -19.750627517700195

Token 426: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.018165161833167076
    2. '6' → logprob: -4.018165111541748
    3. ' **' → logprob: -11.768165588378906
    4. '```' → logprob: -12.518165588378906
    5. '7' → logprob: -13.518165588378906
    6. '*' → logprob: -13.768165588378906
    7. '^' → logprob: -14.518165588378906
    8. ' ' → logprob: -15.768165588378906
    9. '=' → logprob: -15.893165588378906
    10. '   ' → logprob: -16.143165588378906

Token 427: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.055428750813007355
    2. '9' → logprob: -3.5554287433624268
    3. '7' → logprob: -3.8054287433624268
    4. '8' → logprob: -6.180428981781006
    5. '12' → logprob: -6.930428981781006
    6. '10' → logprob: -10.055428504943848
    7. '```' → logprob: -12.305428504943848
    8. '11' → logprob: -13.180428504943848
    9. '18' → logprob: -13.555428504943848
    10. '15' → logprob: -13.992928504943848

Token 428: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2015068084001541
    2. ')
' → logprob: -1.7015068531036377
    3. '   ' → logprob: -9.826506614685059
    4. ')
' → logprob: -10.201506614685059
    5. ')

' → logprob: -13.951506614685059
    6. ' )
' → logprob: -14.201506614685059
    7. ' )' → logprob: -14.201506614685059
    8. ' ' → logprob: -15.826506614685059
    9. '  ' → logprob: -17.826507568359375
    10. ')\
' → logprob: -17.826507568359375

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5013056397438049
    2. 'counter' → logprob: -1.0013055801391602
    3. ' counter' → logprob: -3.75130558013916
    4. '
' → logprob: -5.75130558013916
    5. 'count' → logprob: -9.50130558013916
    6. '	counter' → logprob: -9.87630558013916
    7. '_counter' → logprob: -10.50130558013916
    8. '[counter' → logprob: -11.50130558013916
    9. '  ' → logprob: -11.87630558013916
    10. ' ' → logprob: -12.00130558013916

Token 430: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' (adapté à ' counter') → logprob: -0.014183484017848969
    2. ' counter' → logprob: -4.264183521270752
    3. 'count' → logprob: -11.514183044433594
    4. '   ' → logprob: -11.764183044433594
    5. '
' → logprob: -13.764183044433594
    6. '	counter' → logprob: -14.639183044433594
    7. '_counter' → logprob: -15.639183044433594
    8. ' ' → logprob: -15.889183044433594
    9. 'Counter' → logprob: -16.264183044433594
    10. '    
' → logprob: -16.889183044433594

Token 431: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020752996206284
    2. '=' → logprob: -2.350207567214966
    3. '   ' → logprob: -15.350207328796387
    4. '_' → logprob: -15.350207328796387
    5. ' =
' → logprob: -16.100208282470703
    6. '	' → logprob: -16.475208282470703
    7. ' ' → logprob: -16.725208282470703
    8. '=_' → logprob: -16.975208282470703
    9. ' =
' → logprob: -16.975208282470703
    10. '  ' → logprob: -17.350208282470703

Token 432: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.25192907452583313
    2. ' H' → logprob: -1.5019290447235107
    3. '	H' → logprob: -19.876928329467773
    4. '   ' → logprob: -20.001928329467773
    5. ' ' → logprob: -21.626928329467773
    6. '_H' → logprob: -21.626928329467773
    7. ' ' → logprob: -22.751928329467773
    8. '(H' → logprob: -22.876928329467773
    9. '<H' → logprob: -23.126928329467773
    10. '```' → logprob: -24.126928329467773

Token 433: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -3.650518920039758e-06
    2. 'am' → logprob: -13.375003814697266
    3. 'aming' → logprob: -13.750003814697266
    4. 'umming' → logprob: -15.375003814697266
    5. 'H' → logprob: -15.750003814697266
    6. 'Counting' → logprob: -16.125003814697266
    7. 'ammer' → logprob: -16.500003814697266
    8. 'amm' → logprob: -16.750003814697266
    9. '   ' → logprob: -16.875003814697266
    10. '=' → logprob: -17.250003814697266

Token 434: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -1.9862216504407115e-05
    2. 'Numbers' → logprob: -11.250020027160645
    3. 'umber' → logprob: -12.000020027160645
    4. 'Counter' → logprob: -14.625020027160645
    5. 'number' → logprob: -16.500019073486328
    6. ' Number' → logprob: -16.875019073486328
    7. 'Count' → logprob: -17.000019073486328
    8. '_number' → logprob: -17.125019073486328
    9. 'umbers' → logprob: -17.750019073486328
    10. 'Num' → logprob: -18.250019073486328

Token 435: 'Counter' (ID: 16263)
  Prédit: 'Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -7.803360495017841e-05
    2. 'Number' → logprob: -9.625078201293945
    3. 'counter' → logprob: -11.750078201293945
    4. 'Count' → logprob: -13.125078201293945
    5. 'ounter' → logprob: -14.000078201293945
    6. 'umber' → logprob: -14.625078201293945
    7. 'er' → logprob: -15.500078201293945
    8. ' counter' → logprob: -15.625078201293945
    9. '_counter' → logprob: -16.125078201293945
    10. 'Numbers' → logprob: -16.125078201293945

Token 436: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -5.676981345459353e-06
    2. 'h' → logprob: -12.375005722045898
    3. '(' → logprob: -14.250005722045898
    4. '(
' → logprob: -14.875005722045898
    5. '(H' → logprob: -15.125005722045898
    6. '   ' → logprob: -16.8750057220459
    7. '```' → logprob: -19.6250057220459
    8. 'H' → logprob: -20.2500057220459
    9. ' (' → logprob: -20.5000057220459
    10. '       ' → logprob: -21.1250057220459

Token 437: 'amming' (ID: 62981)
  Prédit: 'amming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amming' → logprob: -8.061054359131958e-06
    2. 'aming' → logprob: -12.750007629394531
    3. '   ' → logprob: -13.375007629394531
    4. 'am' → logprob: -13.500007629394531
    5. '=' → logprob: -14.875007629394531
    6. 'amm' → logprob: -15.125007629394531
    7. '(' → logprob: -15.250007629394531
    8. '[' → logprob: -15.625007629394531
    9. 'ammer' → logprob: -15.750007629394531
    10. '
' → logprob: -16.75000762939453

Token 438: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -0.00022976152831688523
    2. 'obj' → logprob: -8.500229835510254
    3. 'Obj' → logprob: -11.000229835510254
    4. '_numbers' → logprob: -11.750229835510254
    5. 'Numbers' → logprob: -14.500229835510254
    6. 'numbers' → logprob: -15.000229835510254
    7. '_objs' → logprob: -15.625229835510254
    8. '=obj' → logprob: -15.750229835510254
    9. '$obj' → logprob: -15.875229835510254
    10. 's' → logprob: -16.500228881835938

Token 439: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1294030100107193
    2. ')' → logprob: -2.1294031143188477
    3. '   ' → logprob: -6.004403114318848
    4. ')
' → logprob: -12.879403114318848
    5. ' )
' → logprob: -14.379403114318848
    6. '
' → logprob: -15.004403114318848
    7. ' ' → logprob: -15.254403114318848
    8. '  ' → logprob: -16.25440216064453
    9. ')

' → logprob: -16.37940216064453
    10. ',' → logprob: -16.50440216064453

Token 440: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023526018485426903
    2. 'processor' → logprob: -4.023526191711426
    3. 'input' → logprob: -5.773526191711426
    4. ' processor' → logprob: -6.273526191711426
    5. ' input' → logprob: -8.523526191711426
    6. 'ip' → logprob: -8.898526191711426
    7. 'process' → logprob: -11.148526191711426
    8. ' ip' → logprob: -11.773526191711426
    9. '    
' → logprob: -13.523526191711426
    10. '(process' → logprob: -13.648526191711426

Token 441: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' (adapté à ' processor') → logprob: -0.005257714539766312
    2. 'input' → logprob: -5.255257606506348
    3. ' processor' → logprob: -10.755257606506348
    4. '   ' → logprob: -13.630257606506348
    5. 'ip' → logprob: -14.005257606506348
    6. 'process' → logprob: -15.005257606506348
    7. 'proc' → logprob: -16.255258560180664
    8. 'import' → logprob: -16.630258560180664
    9. ' input' → logprob: -17.380258560180664
    10. 'inp' → logprob: -17.630258560180664

Token 442: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0020826896652579308
    2. '=' → logprob: -6.377082824707031
    3. '.process' → logprob: -7.877082824707031
    4. '(process' → logprob: -14.127082824707031
    5. 'process' → logprob: -15.627082824707031
    6. '   ' → logprob: -16.37708282470703
    7. '.' → logprob: -16.37708282470703
    8. ' ' → logprob: -16.75208282470703
    9. '	process' → logprob: -18.62708282470703
    10. ' process' → logprob: -19.12708282470703

Token 443: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.3868713080883026
    2. ' Input' → logprob: -1.136871337890625
    3. '	Input' → logprob: -16.136871337890625
    4. '_Input' → logprob: -16.761871337890625
    5. '_input' → logprob: -17.136871337890625
    6. '<Input' → logprob: -17.511871337890625
    7. '(Input' → logprob: -19.136871337890625
    8. ' input' → logprob: -19.636871337890625
    9. '\Input' → logprob: -19.761871337890625
    10. '.Input' → logprob: -19.761871337890625

Token 444: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: 0.0
    2. 'Process' → logprob: -18.75
    3. 'processor' → logprob: -20.25
    4. ' Processor' → logprob: -21.25
    5. '_processor' → logprob: -21.25
    6. 'Processors' → logprob: -23.375
    7. 'Proces' → logprob: -23.625
    8. ' processor' → logprob: -24.125
    9. 'Processed' → logprob: -24.25
    10. 'PROCESS' → logprob: -24.375

Token 445: '(counter' (ID: 85625)
  Prédit: '(counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(counter' → logprob: -0.011229608207941055
    2. 'counter' → logprob: -4.511229515075684
    3. '(
' → logprob: -9.136229515075684
    4. '   ' → logprob: -10.261229515075684
    5. '(' → logprob: -10.511229515075684
    6. '[counter' → logprob: -12.136229515075684
    7. '(process' → logprob: -12.761229515075684
    8. ' counter' → logprob: -13.636229515075684
    9. 'processor' → logprob: -14.136229515075684
    10. '(count' → logprob: -14.261229515075684

Token 446: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32512345910072327
    2. ')
' → logprob: -1.3251234292984009
    3. '   ' → logprob: -4.450123310089111
    4. 'processor' → logprob: -9.95012378692627
    5. ' processor' → logprob: -10.82512378692627
    6. ')
' → logprob: -10.95012378692627
    7. '(process' → logprob: -11.20012378692627
    8. ' ' → logprob: -12.70012378692627
    9. '.processor' → logprob: -13.07512378692627
    10. '()
' → logprob: -13.07512378692627

Token 447: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014444372616708279
    2. 'processor' → logprob: -4.264444351196289
    3. ' processor' → logprob: -8.264444351196289
    4. '
' → logprob: -11.014444351196289
    5. '    
' → logprob: -12.889444351196289
    6. '.processor' → logprob: -13.264444351196289
    7. '_processor' → logprob: -14.014444351196289
    8. 'process' → logprob: -14.389444351196289
    9. 'processors' → logprob: -14.889444351196289
    10. '  ' → logprob: -15.389444351196289

Token 448: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' (adapté à ' processor') → logprob: -1.4259644558478612e-05
    2. ' processor' → logprob: -11.250014305114746
    3. '   ' → logprob: -13.750014305114746
    4. 'process' → logprob: -17.37501335144043
    5. '.processor' → logprob: -17.50001335144043
    6. 'processors' → logprob: -20.25001335144043
    7. 'Processor' → logprob: -20.50001335144043
    8. '_processor' → logprob: -20.62501335144043
    9. '
' → logprob: -20.87501335144043
    10. 'producer' → logprob: -21.25001335144043

Token 449: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -1.8624639324116288e-06
    2. '.' → logprob: -13.250001907348633
    3. '.run' → logprob: -17.750001907348633
    4. ' .' → logprob: -19.625001907348633
    5. 'process' → logprob: -19.625001907348633
    6. '.perform' → logprob: -19.750001907348633
    7. '.print' → logprob: -20.875001907348633
    8. '.play' → logprob: -21.000001907348633
    9. '.pro' → logprob: -21.250001907348633
    10. '.execute' → logprob: -21.750001907348633

Token 450: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016402659937739372
    2. '()
' → logprob: -4.516402721405029
    3. '
' → logprob: -6.141402721405029
    4. '<|end|>' → logprob: -6.516402721405029
    5. 'if' → logprob: -6.766402721405029
    6. '()

' → logprob: -8.641402244567871
    7. '```' → logprob: -8.641402244567871
    8. '(
' → logprob: -9.516402244567871
    9. '\n' → logprob: -9.766402244567871
    10. '(' → logprob: -10.516402244567871

Token 451: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.2200749754119897e-06
    2. '```' → logprob: -13.625001907348633
    3. ' if' → logprob: -13.875001907348633
    4. '
' → logprob: -17.625001907348633
    5. '\n' → logprob: -18.625001907348633
    6. '#' → logprob: -18.875001907348633
    7. '\' → logprob: -19.000001907348633
    8. '<|end|>' → logprob: -19.750001907348633
    9. '    
' → logprob: -20.250001907348633
    10. '	if' → logprob: -20.250001907348633

Token 452: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16058367490768433
    2. '__' → logprob: -1.910583734512329
    3. '_name' → logprob: -8.28558349609375
    4. 'name' → logprob: -9.28558349609375
    5. '_' → logprob: -12.28558349609375
    6. '___' → logprob: -12.53558349609375
    7. ' "__' → logprob: -13.28558349609375
    8. ' name' → logprob: -13.78558349609375
    9. ' ' → logprob: -13.78558349609375
    10. 'Name' → logprob: -14.28558349609375

Token 453: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07244995981454849
    2. ' ==' → logprob: -3.3224499225616455
    3. '==' → logprob: -3.4474499225616455
    4. '=="' → logprob: -7.322450160980225
    5. '__.__' → logprob: -7.822450160980225
    6. ' __' → logprob: -7.822450160980225
    7. '=='' → logprob: -8.322449684143066
    8. '.__' → logprob: -8.947449684143066
    9. '[' → logprob: -10.197449684143066
    10. '__.' → logprob: -10.322449684143066

Token 454: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.5776860184123507e-06
    2. '==' → logprob: -13.62500286102295
    3. '__.__' → logprob: -13.87500286102295
    4. ' ==' → logprob: -16.000001907348633
    5. '__.' → logprob: -16.625001907348633
    6. '__('' → logprob: -17.125001907348633
    7. '___' → logprob: -17.375001907348633
    8. '__
' → logprob: -17.625001907348633
    9. '____' → logprob: -18.875001907348633
    10. '=='' → logprob: -19.000001907348633

Token 455: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5477279424667358
    2. '==' → logprob: -1.0477279424667358
    3. ' ==' → logprob: -2.6727280616760254
    4. '=="' → logprob: -6.797728061676025
    5. '=='' → logprob: -7.172728061676025
    6. '===' → logprob: -10.922727584838867
    7. '_' → logprob: -11.172727584838867
    8. '__.__' → logprob: -11.797727584838867
    9. '___' → logprob: -12.172727584838867
    10. '['' → logprob: -12.797727584838867

Token 456: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10022522509098053
    2. ''' → logprob: -2.3502252101898193
    3. ' "__' → logprob: -11.100225448608398
    4. '__' → logprob: -13.350225448608398
    5. ' '__' → logprob: -13.475225448608398
    6. ''"' → logprob: -16.2252254486084
    7. '"name' → logprob: -16.3502254486084
    8. '"user' → logprob: -16.4752254486084
    9. '"'' → logprob: -17.7252254486084
    10. '"class' → logprob: -17.7252254486084

Token 457: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0019305398454889655
    2. 'name' → logprob: -6.2519307136535645
    3. '__' → logprob: -13.376930236816406
    4. '_main' → logprob: -15.126930236816406
    5. 'm' → logprob: -16.626930236816406
    6. ' main' → logprob: -17.751930236816406
    7. 'built' → logprob: -18.376930236816406
    8. 'if' → logprob: -19.126930236816406
    9. 'ma' → logprob: -19.126930236816406
    10. '__':
' → logprob: -19.126930236816406

Token 458: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.07892636209726334
    2. '__' → logprob: -2.5789263248443604
    3. '_' → logprob: -10.703926086425781
    4. '__":
' → logprob: -12.078926086425781
    5. '__:' → logprob: -12.203926086425781
    6. '__.' → logprob: -13.078926086425781
    7. '':' → logprob: -14.453926086425781
    8. ':' → logprob: -15.453926086425781
    9. '':
' → logprob: -15.828926086425781
    10. '__.__' → logprob: -15.953926086425781

Token 459: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6018628478050232
    2. 'main' → logprob: -0.8518628478050232
    3. '__' → logprob: -3.726862907409668
    4. ' main' → logprob: -6.851862907409668
    5. '   ' → logprob: -8.351862907409668
    6. '"' → logprob: -8.851862907409668
    7. '_main' → logprob: -10.851862907409668
    8. ' '__' → logprob: -11.226862907409668
    9. '____' → logprob: -11.476862907409668
    10. ' __' → logprob: -11.601862907409668

Token 460: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -19.0
    3. '	main' → logprob: -23.75
    4. '.main' → logprob: -26.875
    5. '(main' → logprob: -27.25
    6. '_main' → logprob: -27.5
    7. 'import' → logprob: -27.625
    8. '   ' → logprob: -28.875
    9. '__' → logprob: -29.875
    10. 'mai' → logprob: -30.75

Token 461: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 459
Tokens correctement prédits (1ère position, stricte): 248
Tokens correctement prédits (1ère position, avec adaptation): 270
Tokens correctement prédits (top 10): 407
Précision stricte (1ère position): 54.03%
Précision adaptée (1ère position): 58.82%
Précision (top 10): 88.67%
================================================================================
