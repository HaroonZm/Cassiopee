================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:08:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
scores = [int(input()) for _ in range(5)]
adjusted = [score if score >= 40 else 40 for score in scores]
print(sum(adjusted) // 5)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'scores' (ID: 109945)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' [' (ID: 723)
  → Token d'amorce (pas de prédiction)

Token 3: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13901697099208832
    2. '10' → logprob: -2.51401686668396
    3. ']' → logprob: -3.51401686668396
    4. '100' → logprob: -4.639017105102539
    5. '1' → logprob: -5.139017105102539
    6. '95' → logprob: -6.764017105102539
    7. '85' → logprob: -7.139017105102539
    8. '42' → logprob: -7.764017105102539
    9. '90' → logprob: -8.514017105102539
    10. '98' → logprob: -8.889017105102539

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00027301779482513666
    2. '(s' → logprob: -9.500272750854492
    3. '('' → logprob: -9.750272750854492
    4. '(scores' → logprob: -10.250272750854492
    5. ']' → logprob: -10.625272750854492
    6. 's' → logprob: -10.625272750854492
    7. '(x' → logprob: -11.000272750854492
    8. '(score' → logprob: -11.125272750854492
    9. '(user' → logprob: -12.250272750854492
    10. '(token' → logprob: -13.250272750854492

Token 5: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.792651891708374
    2. '(' → logprob: -0.917651891708374
    3. ')' → logprob: -2.792651891708374
    4. '()' → logprob: -3.792651891708374
    5. ')]' → logprob: -4.167652130126953
    6. '()]' → logprob: -4.542652130126953
    7. '])' → logprob: -4.917652130126953
    8. '('' → logprob: -4.917652130126953
    9. ']' → logprob: -5.417652130126953
    10. '(()' → logprob: -5.792652130126953

Token 6: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20310892164707184
    2. ')' → logprob: -2.3281090259552
    3. ')]' → logprob: -2.4531090259552
    4. '])' → logprob: -9.578108787536621
    5. ' ]' → logprob: -9.703108787536621
    6. '`]' → logprob: -10.078108787536621
    7. '']' → logprob: -10.328108787536621
    8. '[' → logprob: -10.328108787536621
    9. ' for' → logprob: -11.328108787536621
    10. ')])' → logprob: -11.578108787536621

Token 7: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5833833813667297
    2. ' ' → logprob: -0.9583833813667297
    3. ' i' → logprob: -3.333383321762085
    4. ' _' → logprob: -4.583383560180664
    5. ' scores' → logprob: -5.833383560180664
    6. ' in' → logprob: -6.083383560180664
    7. ' s' → logprob: -6.083383560180664
    8. 'range' → logprob: -6.208383560180664
    9. ' score' → logprob: -7.208383560180664
    10. '  ' → logprob: -7.458383560180664

Token 8: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02056139148771763
    2. 'in' → logprob: -3.895561456680298
    3. ' ' → logprob: -11.145561218261719
    4. ')' → logprob: -14.270561218261719
    5. 'range' → logprob: -14.270561218261719
    6. 'import' → logprob: -14.395561218261719
    7. '	in' → logprob: -14.520561218261719
    8. '_' → logprob: -14.770561218261719
    9. '<|end|>' → logprob: -15.395561218261719
    10. 'space' → logprob: -15.520561218261719

Token 9: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31326377391815186
    2. 'range' → logprob: -1.3132637739181519
    3. ' ' → logprob: -13.563263893127441
    4. '	range' → logprob: -15.188263893127441
    5. '[' → logprob: -16.438262939453125
    6. '  ' → logprob: -16.438262939453125
    7. 'score' → logprob: -16.688262939453125
    8. '   ' → logprob: -17.188262939453125
    9. 'scores' → logprob: -17.188262939453125
    10. '(range' → logprob: -17.188262939453125

Token 10: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.696889623621246e-06
    2. ' (' → logprob: -13.00000286102295
    3. '(len' → logprob: -15.00000286102295
    4. '(
' → logprob: -17.250001907348633
    5. '```' → logprob: -18.250001907348633
    6. '(n' → logprob: -18.500001907348633
    7. '(

' → logprob: -18.500001907348633
    8. '(int' → logprob: -19.125001907348633
    9. '(range' → logprob: -19.125001907348633
    10. '6' → logprob: -19.250001907348633

Token 11: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.1731344312429428
    2. '10' → logprob: -2.0481343269348145
    3. '3' → logprob: -3.7981343269348145
    4. '6' → logprob: -4.9231343269348145
    5. '7' → logprob: -8.798134803771973
    6. ' ' → logprob: -9.298134803771973
    7. '8' → logprob: -10.173134803771973
    8. '4' → logprob: -11.798134803771973
    9. '100' → logprob: -11.798134803771973
    10. '9' → logprob: -12.673134803771973

Token 12: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001305950863752514
    2. ')' → logprob: -9.250130653381348
    3. ']' → logprob: -10.375130653381348
    4. ')])' → logprob: -13.375130653381348
    5. '')]' → logprob: -14.625130653381348
    6. '])]' → logprob: -14.875130653381348
    7. ' )' → logprob: -15.750130653381348
    8. ')],' → logprob: -16.00012969970703
    9. '))' → logprob: -16.25012969970703
    10. '])' → logprob: -16.37512969970703

Token 13: 'adjust' (ID: 78460)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5515614151954651
    2. '
' → logprob: -2.4265613555908203
    3. 'max' → logprob: -2.6765613555908203
    4. '' → logprob: -2.6765613555908203
    5. '\n' → logprob: -2.8015613555908203
    6. 's' → logprob: -3.5515613555908203
    7. '```' → logprob: -4.05156135559082
    8. 'if' → logprob: -4.42656135559082
    9. 'sorted' → logprob: -4.55156135559082
    10. 'scores' → logprob: -4.67656135559082

Token 14: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.004449227824807167
    2. 'ment' → logprob: -6.004449367523193
    3. '_scores' → logprob: -6.629449367523193
    4. 'ments' → logprob: -8.004448890686035
    5. '_' → logprob: -9.129448890686035
    6. '_score' → logprob: -10.004448890686035
    7. 'e' → logprob: -10.129448890686035
    8. ' =' → logprob: -10.754448890686035
    9. 's' → logprob: -11.004448890686035
    10. 'scores' → logprob: -11.254448890686035

Token 15: ' =' (ID: 314)
  Prédit: '_scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.007699491921812296
    2. '_' → logprob: -5.132699489593506
    3. '_score' → logprob: -6.507699489593506
    4. 'scores' → logprob: -8.507699966430664
    5. '[' → logprob: -10.632699966430664
    6. 's' → logprob: -11.132699966430664
    7. '_s' → logprob: -11.632699966430664
    8. '(' → logprob: -12.882699966430664
    9. '```' → logprob: -12.882699966430664
    10. '_values' → logprob: -13.007699966430664

Token 16: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.22776788473129272
    2. '[s' → logprob: -1.9777679443359375
    3. '[' → logprob: -2.9777679443359375
    4. ' scores' → logprob: -5.7277679443359375
    5. '[max' → logprob: -5.7277679443359375
    6. 'scores' → logprob: -6.3527679443359375
    7. '[len' → logprob: -6.8527679443359375
    8. '[i' → logprob: -6.9777679443359375
    9. '[min' → logprob: -7.1027679443359375
    10. ' []' → logprob: -7.4777679443359375

Token 17: 'score' (ID: 21200)
  Prédit: 'score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.41605550050735474
    2. 'max' → logprob: -1.41605544090271
    3. ' max' → logprob: -3.66605544090271
    4. 's' → logprob: -3.79105544090271
    5. 'x' → logprob: -4.041055679321289
    6. 'scores' → logprob: -4.291055679321289
    7. ' score' → logprob: -4.916055679321289
    8. 'min' → logprob: -5.416055679321289
    9. ' x' → logprob: -6.291055679321289
    10. ' s' → logprob: -6.916055679321289

Token 18: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1607080698013306
    2. ' -' → logprob: -1.2857080698013306
    3. '-' → logprob: -1.4107080698013306
    4. ' +' → logprob: -1.9107080698013306
    5. ' for' → logprob: -4.910707950592041
    6. '*' → logprob: -5.535707950592041
    7. ' *' → logprob: -5.785707950592041
    8. ' if' → logprob: -6.660707950592041
    9. ' //' → logprob: -6.910707950592041
    10. '//' → logprob: -7.410707950592041

Token 19: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.002057596342638135
    2. 'score' → logprob: -6.2520575523376465
    3. '(score' → logprob: -9.752058029174805
    4. ' scores' → logprob: -10.252058029174805
    5. '	score' → logprob: -10.502058029174805
    6. ' ' → logprob: -12.127058029174805
    7. '>' → logprob: -14.127058029174805
    8. 'scores' → logprob: -14.502058029174805
    9. ' >' → logprob: -15.377058029174805
    10. 's' → logprob: -15.752058029174805

Token 20: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6058952212333679
    2. '>=' → logprob: -0.8558952212333679
    3. '>' → logprob: -3.7308952808380127
    4. ' >' → logprob: -5.355895042419434
    5. '<' → logprob: -8.605895042419434
    6. '<=' → logprob: -8.855895042419434
    7. ' <' → logprob: -9.105895042419434
    8. ' ' → logprob: -9.230895042419434
    9. '<|end|>' → logprob: -9.730895042419434
    10. ' <=' → logprob: -9.855895042419434

Token 21: ' ' (ID: 220)
  Prédit: '40'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -0.281455934047699
    2. '38' → logprob: -1.9064559936523438
    3. '60' → logprob: -3.0314559936523438
    4. ' ' → logprob: -3.4064559936523438
    5. '50' → logprob: -5.281455993652344
    6. '0' → logprob: -5.406455993652344
    7. '35' → logprob: -6.281455993652344
    8. '100' → logprob: -7.031455993652344
    9. '30' → logprob: -7.406455993652344
    10. '10' → logprob: -8.031455993652344

Token 22: '40' (ID: 1723)
  Prédit: '40'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -0.3946117162704468
    2. '38' → logprob: -1.1446117162704468
    3. '50' → logprob: -5.394611835479736
    4. '60' → logprob: -6.644611835479736
    5. '0' → logprob: -7.394611835479736
    6. '30' → logprob: -8.644611358642578
    7. '35' → logprob: -8.644611358642578
    8. '100' → logprob: -9.019611358642578
    9. ' ' → logprob: -9.269611358642578
    10. 'threshold' → logprob: -9.269611358642578

Token 23: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.38687992095947266
    2. 'else' → logprob: -1.1368799209594727
    3. '	else' → logprob: -12.511879920959473
    4. ' ' → logprob: -12.886879920959473
    5. '-' → logprob: -13.261879920959473
    6. '   ' → logprob: -15.386879920959473
    7. '_else' → logprob: -15.386879920959473
    8. '```' → logprob: -16.386878967285156
    9. '  ' → logprob: -16.636878967285156
    10. '+' → logprob: -16.636878967285156

Token 24: ' ' (ID: 220)
  Prédit: '40'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -0.069948211312294
    2. ' ' → logprob: -2.694948196411133
    3. ' ' → logprob: -13.069948196411133
    4. '41' → logprob: -13.319948196411133
    5. '   ' → logprob: -13.444948196411133
    6. '`' → logprob: -13.632448196411133
    7. '4' → logprob: -13.944948196411133
    8. ''' → logprob: -14.257448196411133
    9. '0' → logprob: -14.569948196411133
    10. '39' → logprob: -14.694948196411133

Token 25: '40' (ID: 1723)
  Prédit: '40'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -0.006816134788095951
    2. ' ' → logprob: -5.0068159103393555
    3. '4' → logprob: -9.256815910339355
    4. '0' → logprob: -13.756815910339355
    5. '`' → logprob: -14.006815910339355
    6. '41' → logprob: -14.506815910339355
    7. '   ' → logprob: -14.569315910339355
    8. ''' → logprob: -14.569315910339355
    9. '  ' → logprob: -15.006815910339355
    10. '400' → logprob: -15.194315910339355

Token 26: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10023190826177597
    2. 'for' → logprob: -2.350231885910034
    3. '	for' → logprob: -11.975232124328613
    4. ' score' → logprob: -11.975232124328613
    5. ' ' → logprob: -12.100232124328613
    6. ')' → logprob: -12.975232124328613
    7. '   ' → logprob: -13.225232124328613
    8. 'score' → logprob: -13.475232124328613
    9. '```' → logprob: -14.725232124328613
    10. ']' → logprob: -15.100232124328613

Token 27: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.48306265473365784
    2. ' score' → logprob: -0.9830626249313354
    3. ' scores' → logprob: -5.358062744140625
    4. 'scores' → logprob: -5.483062744140625
    5. 's' → logprob: -10.733062744140625
    6. '	score' → logprob: -10.983062744140625
    7. ' ' → logprob: -11.108062744140625
    8. '(score' → logprob: -11.608062744140625
    9. '_' → logprob: -11.733062744140625
    10. '_score' → logprob: -13.608062744140625

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14272527396678925
    2. 'in' → logprob: -2.0177252292633057
    3. ']' → logprob: -10.142724990844727
    4. 's' → logprob: -12.517724990844727
    5. ' ]' → logprob: -12.642724990844727
    6. 'score' → logprob: -13.767724990844727
    7. ' ' → logprob: -13.892724990844727
    8. 'ins' → logprob: -14.392724990844727
    9. 'scores' → logprob: -15.142724990844727
    10. ')' → logprob: -15.267724990844727

Token 29: ' scores' (ID: 18923)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.20150572061538696
    2. ' scores' → logprob: -1.7015056610107422
    3. 'score' → logprob: -9.451505661010742
    4. 's' → logprob: -11.576505661010742
    5. '(scores' → logprob: -13.076505661010742
    6. ' ' → logprob: -13.701505661010742
    7. ' score' → logprob: -14.576505661010742
    8. '_scores' → logprob: -14.826505661010742
    9. 'sc' → logprob: -15.826505661010742
    10. 'adjust' → logprob: -16.326505661010742

Token 30: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.968312951968983e-06
    2. ')]' → logprob: -12.250009536743164
    3. ']
' → logprob: -12.750009536743164
    4. ' ]' → logprob: -13.125009536743164
    5. ')' → logprob: -16.000009536743164
    6. '`]' → logprob: -17.125009536743164
    7. ']

' → logprob: -17.250009536743164
    8. ']
' → logprob: -17.250009536743164
    9. '])' → logprob: -17.750009536743164
    10. '()]' → logprob: -17.875009536743164

Token 31: 'print' (ID: 1598)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.220267191529274
    2. '<|end|>' → logprob: -1.8452671766281128
    3. 'print' → logprob: -4.720267295837402
    4. ']' → logprob: -5.095267295837402
    5. ' 
' → logprob: -5.345267295837402
    6. ')' → logprob: -5.345267295837402
    7. ' ' → logprob: -5.845267295837402
    8. 'sum' → logprob: -6.095267295837402
    9. '\n' → logprob: -6.345267295837402
    10. 'max' → logprob: -6.720267295837402

Token 32: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008664563298225403
    2. '(ad' → logprob: -4.758664608001709
    3. '('' → logprob: -11.88366413116455
    4. '("("' → logprob: -11.88366413116455
    5. '((' → logprob: -12.00866413116455
    6. '(sum' → logprob: -12.13366413116455
    7. '()' → logprob: -12.25866413116455
    8. '(max' → logprob: -12.75866413116455
    9. '(adj' → logprob: -13.00866413116455
    10. '(`' → logprob: -13.00866413116455

Token 33: '(ad' (ID: 36787)
  Prédit: '(ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ad' → logprob: -0.0024775585625320673
    2. '(' → logprob: -6.002477645874023
    3. ')' → logprob: -14.752477645874023
    4. 'adjust' → logprob: -14.877477645874023
    5. '(scores' → logprob: -14.877477645874023
    6. '(updated' → logprob: -15.502477645874023
    7. '(adj' → logprob: -15.502477645874023
    8. ' (' → logprob: -16.502477645874023
    9. '(score' → logprob: -16.627477645874023
    10. ' adjusted' → logprob: -16.752477645874023

Token 34: 'just' (ID: 5283)
  Prédit: 'just'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'just' → logprob: -0.06766056269407272
    2. 'usted' → logprob: -2.8176605701446533
    3. 'ust' → logprob: -5.192660331726074
    4. 'uste' → logprob: -10.192660331726074
    5. 'Just' → logprob: -10.442660331726074
    6. ' just' → logprob: -10.942660331726074
    7. 'j' → logprob: -11.192660331726074
    8. 'adjust' → logprob: -11.442660331726074
    9. 'ustr' → logprob: -13.067660331726074
    10. 'ost' → logprob: -13.442660331726074

Token 35: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.0002538296685088426
    2. 'usted' → logprob: -8.875253677368164
    3. 'ust' → logprob: -9.750253677368164
    4. 'ted' → logprob: -10.625253677368164
    5. 'ested' → logprob: -11.750253677368164
    6. 'sted' → logprob: -11.875253677368164
    7. 'isted' → logprob: -12.000253677368164
    8. 'uted' → logprob: -12.625253677368164
    9. 'ined' → logprob: -13.250253677368164
    10. 'e' → logprob: -13.875253677368164

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1602407842874527
    2. '))' → logprob: -1.9102407693862915
    3. ' )' → logprob: -12.03524112701416
    4. ')))' → logprob: -12.28524112701416
    5. ' ))' → logprob: -13.78524112701416
    6. '])' → logprob: -13.78524112701416
    7. ')`' → logprob: -13.78524112701416
    8. '`)' → logprob: -14.91024112701416
    9. ')}' → logprob: -15.16024112701416
    10. ')]' → logprob: -15.16024112701416

Token 37: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8219583075260743e-05
    2. '))' → logprob: -10.250038146972656
    3. '`)' → logprob: -13.750038146972656
    4. ' )' → logprob: -14.125038146972656
    5. ')`' → logprob: -15.125038146972656
    6. '*' → logprob: -15.625038146972656
    7. '')' → logprob: -15.875038146972656
    8. ')
' → logprob: -17.000038146972656
    9. '```' → logprob: -17.000038146972656
    10. ')))' → logprob: -17.000038146972656

Token 38: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0013903543585911393
    2. 'len' → logprob: -6.62639045715332
    3. ' len' → logprob: -10.00139045715332
    4. ' ' → logprob: -10.87639045715332
    5. '```' → logprob: -16.00139045715332
    6. '(len' → logprob: -17.25139045715332
    7. ' five' → logprob: -18.62639045715332
    8. '   ' → logprob: -19.37639045715332
    9. ' ' → logprob: -19.37639045715332
    10. '`' → logprob: -19.50139045715332

Token 39: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0015043864259496331
    2. 'len' → logprob: -6.501504421234131
    3. ' len' → logprob: -13.251503944396973
    4. ' ' → logprob: -15.126503944396973
    5. '(len' → logprob: -17.12650489807129
    6. '```' → logprob: -18.00150489807129
    7. '(' → logprob: -20.12650489807129
    8. '５' → logprob: -20.50150489807129
    9. '  ' → logprob: -20.50150489807129
    10. '   ' → logprob: -21.12650489807129

Token 40: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ' )' → logprob: -13.125003814697266
    3. '))' → logprob: -14.250003814697266
    4. '`)' → logprob: -14.500003814697266
    5. ')`' → logprob: -15.750003814697266
    6. ')
' → logprob: -16.375003814697266
    7. '')' → logprob: -16.500003814697266
    8. '）' → logprob: -17.125003814697266
    9. '")' → logprob: -18.500003814697266
    10. '```' → logprob: -18.500003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 38
Tokens correctement prédits (1ère position, stricte): 21
Tokens correctement prédits (1ère position, avec adaptation): 21
Tokens correctement prédits (top 10): 32
Précision stricte (1ère position): 55.26%
Précision adaptée (1ère position): 55.26%
Précision (top 10): 84.21%
================================================================================
