================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import threading
def main():
    sys.setrecursionlimit(10**7)
    input=sys.stdin.readline
    while True:
        N=int(input())
        if N==0:
            break
        # parse marks
        jump_marks=[None]*N  # (type:str, number:int) or None
        has_v=[False]*N
        for i in range(N):
            s=input().strip()
            if s=='-':
                continue
            if 'v' in s:
                has_v[i]=True
                s=s.replace('v','')
            if s=='':
                continue
            # jump mark present
            # separate type and number
            # type: a-z letters, number: digits at end
            j=0
            while j<len(s) and s[j].isalpha():
                j+=1
            t=s[:j]
            n=int(s[j:])
            jump_marks[i]=(t,n)
        # precompute:
        # For each jump mark type, number, store list of indices in ascending order
        jm_pos = dict()  # (type,number) -> sorted list of indices
        for i,(t,n) in enumerate(jump_marks):
            if t is None:
                continue
            if (t,n) not in jm_pos:
                jm_pos[(t,n)] = []
            jm_pos[(t,n)].append(i)
        # store for jump mark type t the index of most recently read letter with (t,1)
        last_read_type = dict()
        read = [False]*N
        order = []

        # we start reading with the first letter if it is not skipped by rule 2 (jump mark with number>=2)
        # but the problem's rule 1 says first letter is read first anyway, but rule 2 says if jump mark number>=2 skip
        # so we try first letter, but if jump mark number >=2 skip it and move on
        # but precise reading from rules: first letter should be read or skipped first, i.e. start from 0 index
        i = 0
        # Use function to get next letter index without reading it
        def next_linear(k):
            # k is the index of last read letter with number 1 or previous letter in normal reading order ? see rules
            # rule 3 says: If no such letter L (jump mark t,n+1) . the (k+1)-th letter is read,
            # where k is the index of most recent read letter with jump mark t,1
            # So linear reading is from 0 upwards skipping read, so next <= N-1
            n = k+1
            while n < N and read[n]:
                n += 1
            if n >= N:
                return -1
            return n
        def find_unread_pos(lst):
            # lst sorted ascending letter indices
            # find unread letter with minimal index in lst
            # binary search to find first unread
            left,right=0,len(lst)
            while left<right:
                mid=(left+right)//2
                if read[lst[mid]]:
                    left=mid+1
                else:
                    right=mid
            if left==len(lst):
                return -1
            return lst[left]

        # According to rules priority:
        # 1) if the i-th letter read has jump mark (t,n), n>=2 skip it.
        # 2) when reading i-th letter with (t,n), if exists unread letter with (t,n+1) at pos < i, read it next
        #    else read (k+1)-th letter where k is last read letter with (t,1)
        # 3) letter with 'v' must be skipped
        # 4) if i-th read letter's previous letter (i-1) has 'v', read i-1-th letter next
        # 5) read next letter in linear order default
        # Multiple rules applicable: apply latter in the list first.
        # So rule 4 first, then 3,2,1

        # We'll proceed stepwise:
        current = None
        # find first letter that can be read (start at 0)
        # because first letter may be skipped (number>=2 or v)
        # so implement loop until find first readable letter
        pos = 0
        while pos<N and (read[pos] or has_v[pos] or (jump_marks[pos] is not None and jump_marks[pos][1]>=2)):
            pos+=1
        if pos==N:
            # no letter can be read? problem states input well formed and all letters read, so this doesn't happen
            continue
        current = pos
        while current!=-1:
            order.append(current)
            read[current]=True
            # update last_read_type
            jm = jump_marks[current]
            if jm is not None and jm[1]==1:
                last_read_type[jm[0]]=current
            # find the next letter to read
            nxt=-1
            # Rule 4: if current>0 and previous letter has 'v' and not read, read it next
            if current>0 and has_v[current-1] and not read[current-1]:
                nxt=current-1
            # else Rule3 &2 &1 combined:
            # if current letter has jump mark (t,n), n>=1
            if nxt==-1 and jm is not None:
                t,n=jm
                if n>=2:
                    # letter with jump mark number >=2 must be skipped (already skipped before reading)
                    # no action needed, but if read, nothing special said; already skipped before reading
                    pass
                else:
                    # n=1
                    # Rule2: if exists unread letter with (t,n+1) at pos < current, read it next
                    lst = jm_pos.get((t,n+1),[])
                    ch = -1
                    if lst:
                        # find unread position < current in lst
                        # lst is sorted ascending
                        # find max index in lst less than current and unread
                        # binary search with upper_bound for current
                        # then scan backward since must be pos < current and unread
                        import bisect
                        idx = bisect.bisect_left(lst,current)
                        # scan left from idx-1 down to 0
                        for p in range(idx-1,-1,-1):
                            if not read[lst[p]]:
                                ch = lst[p]
                                break
                    if ch!=-1:
                        nxt = ch
                    else:
                        # else read (k+1)-th letter where k = last read letter with (t,1)
                        k = last_read_type.get(t,-1)
                        candidate = next_linear(k)
                        if candidate!=-1 and not read[candidate]:
                            nxt = candidate
            # if no jump mark or no next found by jump mark:
            if nxt==-1:
                # Rule1 and 3 and 4 not triggered, so read next letter in linear order
                nxt = next_linear(current)
            current = nxt
        for o in order:
            print(o+1)
threading.Thread(target=main).start()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29739612340927124
    2. '\n' → logprob: -1.547396183013916
    3. '<|end|>' → logprob: -3.797396183013916
    4. '\' → logprob: -4.922396183013916
    5. 'newline' → logprob: -5.672396183013916
    6. 'import' → logprob: -5.672396183013916
    7. '<|end|>' → logprob: -6.047396183013916
    8. '
' → logprob: -6.922396183013916
    9. '```' → logprob: -6.922396183013916
    10. '' → logprob: -7.547396183013916

Token 4: ' threading' (ID: 72047)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2611512541770935
    2. '\n' → logprob: -2.6361513137817383
    3. '

' → logprob: -2.8861513137817383
    4. '\' → logprob: -3.7611513137817383
    5. '```' → logprob: -3.8861513137817383
    6. 'import' → logprob: -4.011151313781738
    7. '.' → logprob: -4.386151313781738
    8. '#' → logprob: -5.136151313781738
    9. '<|end|>' → logprob: -5.136151313781738
    10. 'def' → logprob: -5.386151313781738

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7626941800117493
    2. '\n' → logprob: -1.7626941204071045
    3. '
' → logprob: -1.8876941204071045
    4. 'import' → logprob: -2.8876941204071045
    5. '\' → logprob: -3.1376941204071045
    6. '

' → logprob: -3.5126941204071045
    7. '.Thread' → logprob: -4.012694358825684
    8. '```' → logprob: -4.137694358825684
    9. '' → logprob: -4.137694358825684
    10. ',' → logprob: -4.637694358825684

Token 7: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003432454075664282
    2. '_' → logprob: -6.003432273864746
    3. ' _' → logprob: -8.128432273864746
    4. ' t' → logprob: -8.878432273864746
    5. ' main' → logprob: -9.253432273864746
    6. ' ' → logprob: -9.503432273864746
    7. ' my' → logprob: -9.878432273864746
    8. ' space' → logprob: -10.003432273864746
    9. '_space' → logprob: -10.253432273864746
    10. '  ' → logprob: -10.378432273864746

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019211750477552414
    2. '():' → logprob: -4.019211769104004
    3. '(:' → logprob: -7.144211769104004
    4. ':' → logprob: -8.769211769104004
    5. ' (' → logprob: -10.394211769104004
    6. '(":' → logprob: -10.894211769104004
    7. '(
' → logprob: -11.269211769104004
    8. '(`' → logprob: -11.894211769104004
    9. '```' → logprob: -11.894211769104004
    10. '()' → logprob: -12.144211769104004

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.111076220870018
    2. '(' → logprob: -2.6110761165618896
    3. '\' → logprob: -3.9860761165618896
    4. '    ' → logprob: -4.736076354980469
    5. ' ' → logprob: -6.486076354980469
    6. ' (' → logprob: -7.611076354980469
    7. '    
' → logprob: -7.736076354980469
    8. '\n' → logprob: -8.486076354980469
    9. '(n' → logprob: -8.861076354980469
    10. 'print' → logprob: -8.986076354980469

Token 10: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7184262871742249
    2. 't' → logprob: -1.46842622756958
    3. 'print' → logprob: -2.84342622756958
    4. '    ' → logprob: -2.96842622756958
    5. ' pass' → logprob: -3.21842622756958
    6. 'pass' → logprob: -3.46842622756958
    7. ' ' → logprob: -3.96842622756958
    8. '#' → logprob: -4.09342622756958
    9. ' print' → logprob: -4.09342622756958
    10. 'r' → logprob: -4.46842622756958

Token 11: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -7.350386295001954e-05
    2. '.exit' → logprob: -10.000073432922363
    3. '.stdout' → logprob: -11.625073432922363
    4. '.argv' → logprob: -11.875073432922363
    5. '.stdin' → logprob: -12.750073432922363
    6. '.readline' → logprob: -13.000073432922363
    7. '.write' → logprob: -13.000073432922363
    8. '.setdefault' → logprob: -13.875073432922363
    9. '.stderr' → logprob: -14.250073432922363
    10. ' .' → logprob: -14.250073432922363

Token 12: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trace' → logprob: -1.0106134414672852
    2. '_trace' → logprob: -1.2606134414672852
    3. '_' → logprob: -1.6356134414672852
    4. '_version' → logprob: -3.010613441467285
    5. 'rec' → logprob: -3.510613441467285
    6. '_ex' → logprob: -3.885613441467285
    7. '_execution' → logprob: -4.260613441467285
    8. 's' → logprob: -5.135613441467285
    9. 'ex' → logprob: -5.260613441467285
    10. '_max' → logprob: -5.760613441467285

Token 13: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0012349952012300491
    2. 'urs' → logprob: -7.251235008239746
    3. 'urse' → logprob: -8.626235008239746
    4. 'ursive' → logprob: -8.876235008239746
    5. 'ur' → logprob: -8.876235008239746
    6. 'urf' → logprob: -10.001235008239746
    7. 'ursor' → logprob: -11.626235008239746
    8. 'utf' → logprob: -11.751235008239746
    9. 'ursively' → logprob: -14.501235008239746
    10. 'urn' → logprob: -14.876235008239746

Token 14: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -6.704273118884885e-07
    2. 'depth' → logprob: -14.875000953674316
    3. 'lim' → logprob: -16.0
    4. ' limit' → logprob: -16.25
    5. '_limit' → logprob: -16.75
    6. '-' → logprob: -18.25
    7. 'Limit' → logprob: -18.75
    8. '_' → logprob: -19.125
    9. 'stack' → logprob: -20.625
    10. '.limit' → logprob: -21.0

Token 15: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.968312951968983e-06
    2. '((' → logprob: -12.875009536743164
    3. ' (' → logprob: -13.250009536743164
    4. '("("' → logprob: -13.375009536743164
    5. '(

' → logprob: -13.750009536743164
    6. '(
' → logprob: -13.750009536743164
    7. '40' → logprob: -14.375009536743164
    8. '```' → logprob: -15.250009536743164
    9. '()' → logprob: -16.000009536743164
    10. ')(' → logprob: -16.375009536743164

Token 16: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16042639315128326
    2. '100' → logprob: -1.910426378250122
    3. ' ' → logprob: -8.535426139831543
    4. '1' → logprob: -12.285426139831543
    5. '   ' → logprob: -14.910426139831543
    6. '500' → logprob: -15.410426139831543
    7. '(' → logprob: -15.410426139831543
    8. '  ' → logprob: -15.535426139831543
    9. '400' → logprob: -16.28542709350586
    10. '300' → logprob: -16.28542709350586

Token 17: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.4435471296310425
    2. '0' → logprob: -2.068547248840332
    3. '00' → logprob: -2.068547248840332
    4. '**' → logprob: -2.943547248840332
    5. '6' → logprob: -3.068547248840332
    6. '7' → logprob: -5.193547248840332
    7. '5' → logprob: -7.318547248840332
    8. '8' → logprob: -9.568547248840332
    9. '4' → logprob: -10.568547248840332
    10. '_' → logprob: -12.318547248840332

Token 18: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0012849947670474648
    2. '8' → logprob: -7.501285076141357
    3. '9' → logprob: -7.501285076141357
    4. '6' → logprob: -8.6262845993042
    5. '```' → logprob: -18.751285552978516
    6. '**' → logprob: -19.001285552978516
    7. ' ' → logprob: -20.376285552978516
    8. ')' → logprob: -20.376285552978516
    9. '5' → logprob: -20.876285552978516
    10. '``' → logprob: -21.001285552978516

Token 19: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016277639952022582
    2. ')
' → logprob: -8.750163078308105
    3. ' )' → logprob: -12.625163078308105
    4. '   ' → logprob: -14.875163078308105
    5. ')
' → logprob: -15.125163078308105
    6. ' ' → logprob: -16.50016212463379
    7. '))' → logprob: -16.62516212463379
    8. ')return' → logprob: -17.37516212463379
    9. ')

' → logprob: -17.75016212463379
    10. '）' → logprob: -17.87516212463379

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3414430618286133
    2. '
' → logprob: -1.5914430618286133
    3. '    
' → logprob: -2.5914430618286133
    4. '\' → logprob: -5.466443061828613
    5. ')' → logprob: -6.216443061828613
    6. ' 
' → logprob: -6.591443061828613
    7. '' → logprob: -7.341443061828613
    8. '    ' → logprob: -7.591443061828613
    9. '```' → logprob: -7.591443061828613
    10. '  
' → logprob: -8.091443061828613

Token 21: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07746389508247375
    2. 'thread' → logprob: -3.2024638652801514
    3. ' threading' → logprob: -3.5774638652801514
    4. ' thread' → logprob: -6.5774641036987305
    5. '    
' → logprob: -6.7024641036987305
    6. '\' → logprob: -6.8274641036987305
    7. '    ' → logprob: -7.5774641036987305
    8. ')' → logprob: -7.9524641036987305
    9. ' ' → logprob: -8.20246410369873
    10. '(' → logprob: -8.45246410369873

Token 22: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048406001180410385
    2. '()' → logprob: -3.173405885696411
    3. '('' → logprob: -6.17340612411499
    4. ')' → logprob: -7.79840612411499
    5. 'data' → logprob: -7.92340612411499
    6. '_data' → logprob: -8.173405647277832
    7. '```' → logprob: -8.173405647277832
    8. '.' → logprob: -8.298405647277832
    9. '40' → logprob: -8.298405647277832
    10. '("")' → logprob: -8.423405647277832

Token 23: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006862253649160266
    2. '.readline' → logprob: -7.500686168670654
    3. ' .' → logprob: -9.500686645507812
    4. '.read' → logprob: -11.625686645507812
    5. '().' → logprob: -12.000686645507812
    6. '.)' → logprob: -12.125686645507812
    7. '(' → logprob: -12.125686645507812
    8. '(.)' → logprob: -12.375686645507812
    9. '.(' → logprob: -12.500686645507812
    10. '.​' → logprob: -12.500686645507812

Token 24: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5839897990226746
    2. '.' → logprob: -0.8339897990226746
    3. '.read' → logprob: -4.83398962020874
    4. '.Read' → logprob: -10.708990097045898
    5. 'read' → logprob: -11.583990097045898
    6. '.readlines' → logprob: -11.708990097045898
    7. ' readline' → logprob: -12.708990097045898
    8. '.READ' → logprob: -13.083990097045898
    9. '.\' → logprob: -13.208990097045898
    10. '.​' → logprob: -13.208990097045898

Token 25: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005072941072285175
    2. '()
' → logprob: -5.880073070526123
    3. '(' → logprob: -6.380073070526123
    4. '   ' → logprob: -7.880073070526123
    5. '(
' → logprob: -9.755072593688965
    6. '()\' → logprob: -10.380072593688965
    7. '()

' → logprob: -10.630072593688965
    8. ')' → logprob: -10.755072593688965
    9. '    
' → logprob: -11.130072593688965
    10. '
' → logprob: -11.630072593688965

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007709077559411526
    2. '    
' → logprob: -5.13270902633667
    3. '()' → logprob: -7.00770902633667
    4. '(' → logprob: -8.507709503173828
    5. '```' → logprob: -8.882709503173828
    6. '(n' → logprob: -9.507709503173828
    7. 'n' → logprob: -9.632709503173828
    8. '
' → logprob: -9.632709503173828
    9. '    ' → logprob: -9.882709503173828
    10. 'def' → logprob: -10.132709503173828

Token 27: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7227300405502319
    2. '   ' → logprob: -0.7227300405502319
    3. 'data' → logprob: -5.0977301597595215
    4. 'for' → logprob: -5.3477301597595215
    5. 't' → logprob: -5.5977301597595215
    6. '(n' → logprob: -5.8477301597595215
    7. ' ' → logprob: -6.2227301597595215
    8. ')' → logprob: -6.3477301597595215
    9. '(' → logprob: -6.5977301597595215
    10. 'd' → logprob: -6.9727301597595215

Token 28: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0029097271617501974
    2. ' ' → logprob: -6.7529096603393555
    3. 'True' → logprob: -6.7529096603393555
    4. ' not' → logprob: -8.502909660339355
    5. '(True' → logprob: -8.502909660339355
    6. ' (' → logprob: -9.252909660339355
    7. '(' → logprob: -9.877909660339355
    8. '    ' → logprob: -12.627909660339355
    9. '  ' → logprob: -12.627909660339355
    10. ' true' → logprob: -12.877909660339355

Token 29: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027904920279979706
    2. '():' → logprob: -6.252790451049805
    3. ' :' → logprob: -7.377790451049805
    4. '):' → logprob: -8.877790451049805
    5. ':**' → logprob: -9.877790451049805
    6. '   ' → logprob: -11.127790451049805
    7. '    ' → logprob: -12.002790451049805
    8. '       ' → logprob: -12.627790451049805
    9. '(:' → logprob: -12.752790451049805
    10. '(' → logprob: -12.877790451049805

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19096843898296356
    2. ' ' → logprob: -2.5659685134887695
    3. '    ' → logprob: -2.5659685134887695
    4. '        
' → logprob: -4.8159685134887695
    5. '        ' → logprob: -5.1909685134887695
    6. '   ' → logprob: -5.8159685134887695
    7. '      ' → logprob: -7.0659685134887695
    8. '     ' → logprob: -7.9409685134887695
    9. '     
' → logprob: -8.19096851348877
    10. '<|end|>' → logprob: -8.19096851348877

Token 31: ' N' (ID: 478)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.051209233701229095
    2. 'line' → logprob: -3.4262092113494873
    3. '   ' → logprob: -4.426209449768066
    4. ' data' → logprob: -6.426209449768066
    5. ' try' → logprob: -6.801209449768066
    6. 'data' → logprob: -6.926209449768066
    7. '    ' → logprob: -6.926209449768066
    8. ' ' → logprob: -8.551209449768066
    9. ' n' → logprob: -8.926209449768066
    10. 'n' → logprob: -9.051209449768066

Token 32: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03599319979548454
    2. '=' → logprob: -3.4109930992126465
    3. ' >' → logprob: -6.9109930992126465
    4. ' ==' → logprob: -7.2859930992126465
    5. ' :=' → logprob: -7.9109930992126465
    6. ' ' → logprob: -8.660993576049805
    7. '>' → logprob: -9.785993576049805
    8. '=int' → logprob: -10.910993576049805
    9. ' <' → logprob: -11.285993576049805
    10. ' <=' → logprob: -12.160993576049805

Token 33: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06198964640498161
    2. '(' → logprob: -2.8119895458221436
    3. ' (' → logprob: -11.561989784240723
    4. '(sys' → logprob: -11.936989784240723
    5. 'input' → logprob: -13.061989784240723
    6. '(
' → logprob: -13.561989784240723
    7. '(in' → logprob: -14.311989784240723
    8. '((' → logprob: -14.686989784240723
    9. '(

' → logprob: -14.686989784240723
    10. '()' → logprob: -15.561989784240723

Token 34: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004194624722003937
    2. '()' → logprob: -5.504194736480713
    3. '().' → logprob: -10.254194259643555
    4. '())
' → logprob: -10.379194259643555
    5. ' ())' → logprob: -10.504194259643555
    6. '()))' → logprob: -11.129194259643555
    7. '(' → logprob: -13.004194259643555
    8. ')' → logprob: -13.379194259643555
    9. '();)' → logprob: -13.754194259643555
    10. '()
' → logprob: -14.254194259643555

Token 35: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7441149950027466
    2. '<|end|>' → logprob: -0.9941149950027466
    3. '    ' → logprob: -2.619114875793457
    4. '   ' → logprob: -3.744114875793457
    5. ')' → logprob: -4.244114875793457
    6. ' if' → logprob: -4.369114875793457
    7. '       ' → logprob: -5.119114875793457
    8. ':' → logprob: -5.619114875793457
    9. '
' → logprob: -5.869114875793457
    10. '  ' → logprob: -5.869114875793457

Token 36: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.34863606095314026
    2. ' not' → logprob: -1.2236360311508179
    3. ' ' → logprob: -8.84863567352295
    4. 'N' → logprob: -10.47363567352295
    5. 'not' → logprob: -11.09863567352295
    6. ' ' → logprob: -12.47363567352295
    7. ' Not' → logprob: -15.09863567352295
    8. '(not' → logprob: -16.223636627197266
    9. '<|end|>' → logprob: -16.223636627197266
    10. '>N' → logprob: -17.911136627197266

Token 38: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6933082342147827
    2. ' ==' → logprob: -0.6933082342147827
    3. '<' → logprob: -9.818307876586914
    4. '<=' → logprob: -10.193307876586914
    5. '=' → logprob: -10.443307876586914
    6. ' <' → logprob: -11.818307876586914
    7. ' <=' → logprob: -11.943307876586914
    8. '===' → logprob: -12.193307876586914
    9. ')==' → logprob: -12.193307876586914
    10. '()==' → logprob: -12.318307876586914

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0059296246618032455
    2. ' ' → logprob: -5.130929470062256
    3. '-' → logprob: -14.505929946899414
    4. ' -' → logprob: -15.505929946899414
    5. '   ' → logprob: -16.505929946899414
    6. '```' → logprob: -16.505929946899414
    7. ')' → logprob: -17.130929946899414
    8. '  ' → logprob: -17.193429946899414
    9. '    ' → logprob: -17.505929946899414
    10. '=' → logprob: -17.818429946899414

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013624972198158503
    2. ':
' → logprob: -7.501362323760986
    3. '       ' → logprob: -7.501362323760986
    4. ' :' → logprob: -9.001362800598145
    5. '   ' → logprob: -9.376362800598145
    6. '           ' → logprob: -10.626362800598145
    7. ':return' → logprob: -11.251362800598145
    8. ' break' → logprob: -13.001362800598145
    9. '    ' → logprob: -13.251362800598145
    10. '	break' → logprob: -13.751362800598145

Token 41: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027289576828479767
    2. '       ' → logprob: -3.652289628982544
    3. '   ' → logprob: -8.152289390563965
    4. ' break' → logprob: -8.277289390563965
    5. '	break' → logprob: -9.527289390563965
    6. ':' → logprob: -10.027289390563965
    7. '        ' → logprob: -10.277289390563965
    8. '	       ' → logprob: -10.402289390563965
    9. 'break' → logprob: -10.527289390563965
    10. '<|end|>' → logprob: -10.527289390563965

Token 42: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6715567111968994
    2. 'break' (adapté à ' break') → logprob: -0.9215567111968994
    3. '           ' → logprob: -3.0465567111968994
    4. '       ' → logprob: -3.1715567111968994
    5. '	break' → logprob: -7.17155647277832
    6. 'return' → logprob: -7.54655647277832
    7. '   ' → logprob: -8.29655647277832
    8. '               ' → logprob: -9.67155647277832
    9. ' return' → logprob: -9.67155647277832
    10. '_break' → logprob: -11.17155647277832

Token 43: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8627137541770935
    2. ' graph' → logprob: -0.9877137541770935
    3. 'graph' → logprob: -2.1127138137817383
    4. '        ' → logprob: -4.362713813781738
    5. '    ' → logprob: -4.987713813781738
    6. '   ' → logprob: -5.112713813781738
    7. 'dp' → logprob: -5.487713813781738
    8. ' distances' → logprob: -5.862713813781738
    9. 'dist' → logprob: -5.987713813781738
    10. ' dp' → logprob: -5.987713813781738

Token 46: ' parse' (ID: 8420)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.5258973240852356
    2. 'graph' → logprob: -3.150897264480591
    3. ' stack' → logprob: -3.150897264480591
    4. ' dp' → logprob: -3.150897264480591
    5. 'dp' → logprob: -3.650897264480591
    6. ' tree' → logprob: -3.900897264480591
    7. ' tower' → logprob: -4.40089750289917
    8. '   ' → logprob: -4.40089750289917
    9. ' depth' → logprob: -4.40089750289917
    10. ' numbers' → logprob: -4.52589750289917

Token 47: ' marks' (ID: 22891)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5921821594238281
    2. '<|end|>' → logprob: -1.4671821594238281
    3. '   ' → logprob: -2.092182159423828
    4. '    ' → logprob: -3.967182159423828
    5. ' ' → logprob: -4.092182159423828
    6. '        ' → logprob: -4.342182159423828
    7. '<|end|>' → logprob: -4.342182159423828
    8. '```' → logprob: -4.467182159423828
    9. '[' → logprob: -5.592182159423828
    10. ')' → logprob: -5.592182159423828

Token 48: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16482265293598175
    2. '<|end|>' → logprob: -3.414822578430176
    3. '        ' → logprob: -3.664822578430176
    4. '    ' → logprob: -3.664822578430176
    5. '   ' → logprob: -4.039822578430176
    6. '[' → logprob: -4.164822578430176
    7. ' ' → logprob: -4.914822578430176
    8. ')' → logprob: -4.914822578430176
    9. '<|end|>' → logprob: -5.164822578430176
    10. ' for' → logprob: -6.289822578430176

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2795950770378113
    2. '   ' → logprob: -2.529595136642456
    3. '[' → logprob: -3.029595136642456
    4. '<|end|>' → logprob: -3.654595136642456
    5. '    ' → logprob: -3.904595136642456
    6. ' ' → logprob: -3.904595136642456
    7. 'marks' → logprob: -4.529594898223877
    8. ' marks' → logprob: -5.154594898223877
    9. ',' → logprob: -5.154594898223877
    10. '        ' → logprob: -5.529594898223877

Token 50: ' jump' (ID: 13843)
  Prédit: ' marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' marks' → logprob: -0.5887563824653625
    2. 'marks' → logprob: -1.3387563228607178
    3. '   ' → logprob: -2.8387563228607178
    4. '       ' → logprob: -3.0887563228607178
    5. 'm' → logprob: -3.7137563228607178
    6. '    ' → logprob: -4.338756561279297
    7. '_marks' → logprob: -4.713756561279297
    8. '[' → logprob: -5.338756561279297
    9. ' ' → logprob: -5.463756561279297
    10. '<|end|>' → logprob: -5.463756561279297

Token 51: '_marks' (ID: 196622)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14244277775287628
    2. '=' → logprob: -2.5174427032470703
    3. '_marks' → logprob: -4.14244270324707
    4. '_points' → logprob: -4.39244270324707
    5. '_lengths' → logprob: -4.89244270324707
    6. ' =' → logprob: -4.89244270324707
    7. '_dist' → logprob: -6.39244270324707
    8. 'es' → logprob: -6.64244270324707
    9. '_sizes' → logprob: -6.76744270324707
    10. '_' → logprob: -7.76744270324707

Token 52: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16330507397651672
    2. ' =' → logprob: -1.9133050441741943
    3. '=[]' → logprob: -6.788305282592773
    4. ',' → logprob: -6.788305282592773
    5. '   ' → logprob: -8.288305282592773
    6. '=[' → logprob: -8.413305282592773
    7. 's' → logprob: -9.538305282592773
    8. '={}' → logprob: -9.538305282592773
    9. '[' → logprob: -9.913305282592773
    10. ' ' → logprob: -10.163305282592773

Token 53: 'None' (ID: 8505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8639009594917297
    2. 'list' → logprob: -1.613900899887085
    3. 'False' → logprob: -1.738900899887085
    4. 'int' → logprob: -2.113900899887085
    5. '[]' → logprob: -2.988900899887085
    6. ']' → logprob: -4.488901138305664
    7. 'tuple' → logprob: -4.863901138305664
    8. '[int' → logprob: -5.238901138305664
    9. '[' → logprob: -6.363901138305664
    10. '(int' → logprob: -6.738901138305664

Token 54: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5846692323684692
    2. ' for' → logprob: -1.5846692323684692
    3. '()' → logprob: -2.7096691131591797
    4. ']*' → logprob: -2.8346691131591797
    5. '()]' → logprob: -2.9596691131591797
    6. 'for' → logprob: -3.0846691131591797
    7. '(' → logprob: -5.08466911315918
    8. ']*(' → logprob: -5.08466911315918
    9. ' ]' → logprob: -6.95966911315918
    10. ',' → logprob: -7.33466911315918

Token 55: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.14473584294319153
    2. '(N' → logprob: -2.019735813140869
    3. '(' → logprob: -6.394735813140869
    4. ' N' → logprob: -8.394736289978027
    5. ' (' → logprob: -9.144736289978027
    6. '   ' → logprob: -12.019736289978027
    7. '100' → logprob: -12.144736289978027
    8. '	N' → logprob: -12.644736289978027
    9. ',N' → logprob: -12.832236289978027
    10. '2' → logprob: -13.019736289978027

Token 56: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2214643806219101
    2. '<|end|>' → logprob: -1.7214643955230713
    3. '\' → logprob: -5.346464157104492
    4. '\n' → logprob: -5.596464157104492
    5. '' → logprob: -6.096464157104492
    6. '<|end|>' → logprob: -6.346464157104492
    7. '
' → logprob: -6.721464157104492
    8. ' 
' → logprob: -6.846464157104492
    9. '[' → logprob: -7.221464157104492
    10. '```' → logprob: -7.471464157104492

Token 57: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013874807395040989
    2. 'for' → logprob: -5.5138750076293945
    3. '<|end|>' → logprob: -5.5138750076293945
    4. '   ' → logprob: -6.5138750076293945
    5. ' for' → logprob: -6.8888750076293945
    6. '
' → logprob: -6.8888750076293945
    7. '\n' → logprob: -7.7638750076293945
    8. '' → logprob: -7.8888750076293945
    9. '       ' → logprob: -8.638875007629395
    10. '    
' → logprob: -8.638875007629395

Token 58: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3804996013641357
    2. '<|end|>' → logprob: -1.8804996013641357
    3. '[' → logprob: -2.0054996013641357
    4. '0' → logprob: -2.2554996013641357
    5. ' 
' → logprob: -2.8804996013641357
    6. ' ' → logprob: -2.8804996013641357
    7. ' for' → logprob: -3.3804996013641357
    8. ')' → logprob: -3.5054996013641357
    9. 'for' → logprob: -3.8804996013641357
    10. '<|end|>' → logprob: -4.005499839782715

Token 59: 'type' (ID: 2493)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07167340815067291
    2. ')' → logprob: -3.1966733932495117
    3. '(int' → logprob: -4.821673393249512
    4. ',int' → logprob: -5.196673393249512
    5. ' int' → logprob: -5.321673393249512
    6. ',' → logprob: -6.321673393249512
    7. 'tuple' → logprob: -6.321673393249512
    8. '[int' → logprob: -6.446673393249512
    9. 'start' → logprob: -7.071673393249512
    10. 'List' → logprob: -7.821673393249512

Token 60: ':str' (ID: 153326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002708581043407321
    2. ')' → logprob: -6.252708435058594
    3. ' ,' → logprob: -7.877708435058594
    4. '<|end|>' → logprob: -9.127708435058594
    5. ',)' → logprob: -9.877708435058594
    6. ',int' → logprob: -10.002708435058594
    7. 's' → logprob: -10.252708435058594
    8. ',size' → logprob: -10.377708435058594
    9. ',j' → logprob: -11.252708435058594
    10. ',value' → logprob: -11.502708435058594

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003385614836588502
    2. ' ,' → logprob: -9.125338554382324
    3. ')' → logprob: -9.875338554382324
    4. ',size' → logprob: -10.375338554382324
    5. ',index' → logprob: -10.875338554382324
    6. ',int' → logprob: -11.000338554382324
    7. ',length' → logprob: -11.000338554382324
    8. '<|end|>' → logprob: -11.000338554382324
    9. ',
' → logprob: -11.250338554382324
    10. ',value' → logprob: -11.250338554382324

Token 62: ' number' (ID: 2086)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.30328449606895447
    2. 'int' → logprob: -2.1782844066619873
    3. ' position' → logprob: -3.1782844066619873
    4. ' index' → logprob: -4.303284645080566
    5. ' value' → logprob: -4.428284645080566
    6. ' target' → logprob: -4.553284645080566
    7. ' pos' → logprob: -4.678284645080566
    8. ')' → logprob: -4.928284645080566
    9. ' idx' → logprob: -4.928284645080566
    10. ' x' → logprob: -5.053284645080566

Token 63: ':int' (ID: 30362)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16206298768520355
    2. ',' → logprob: -1.9120630025863647
    3. '<|end|>' → logprob: -7.162063121795654
    4. ',int' → logprob: -7.537063121795654
    5. 's' → logprob: -8.537062644958496
    6. ',)' → logprob: -9.412062644958496
    7. ',None' → logprob: -10.037062644958496
    8. ',index' → logprob: -10.037062644958496
    9. '<|end|>' → logprob: -10.537062644958496
    10. ' )' → logprob: -11.287062644958496

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007869947585277259
    2. ',' → logprob: -7.375786781311035
    3. ' )' → logprob: -8.875786781311035
    4. '),' → logprob: -11.875786781311035
    5. ')
' → logprob: -12.500786781311035
    6. ',)' → logprob: -12.500786781311035
    7. '   ' → logprob: -13.750786781311035
    8. ',None' → logprob: -14.000786781311035
    9. '))' → logprob: -14.250786781311035
    10. ' ' → logprob: -14.375786781311035

Token 65: ' or' (ID: 503)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.5408986806869507
    2. '   ' → logprob: -1.7908986806869507
    3. ' for' → logprob: -1.9158986806869507
    4. '
' → logprob: -3.1658987998962402
    5. 'for' → logprob: -3.5408987998962402
    6. '    
' → logprob: -4.91589879989624
    7. '' → logprob: -5.54089879989624
    8. ')' → logprob: -5.66589879989624
    9. '       ' → logprob: -5.79089879989624
    10. '\t' → logprob: -5.79089879989624

Token 66: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.39096522331237793
    2. 'None' → logprob: -1.890965223312378
    3. '[]' → logprob: -2.640965223312378
    4. ' []' → logprob: -3.640965223312378
    5. ' (' → logprob: -3.890965223312378
    6. '(None' → logprob: -4.015965461730957
    7. '[' → logprob: -4.265965461730957
    8. ' tuple' → logprob: -5.640965461730957
    9. '(' → logprob: -6.015965461730957
    10. ' str' → logprob: -6.390965461730957

Token 67: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6116238832473755
    2. '<|end|>' → logprob: -1.7366238832473755
    3. ' for' → logprob: -2.361623764038086
    4. '       ' → logprob: -2.361623764038086
    5. ' 
' → logprob: -2.486623764038086
    6. '\n' → logprob: -2.611623764038086
    7. '
' → logprob: -2.736623764038086
    8. ' ' → logprob: -2.861623764038086
    9. 'for' → logprob: -3.611623764038086
    10. '    
' → logprob: -3.736623764038086

Token 69: ' has' (ID: 853)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4937639832496643
    2. 'for' → logprob: -0.9937639832496643
    3. '	for' → logprob: -4.6187639236450195
    4. '   ' → logprob: -4.9937639236450195
    5. ' ' → logprob: -6.6187639236450195
    6. '\t' → logprob: -7.4937639236450195
    7. '    ' → logprob: -8.24376392364502
    8. '
' → logprob: -8.74376392364502
    9. '    
' → logprob: -8.99376392364502
    10. '<|end|>' → logprob: -9.36876392364502

Token 70: '_v' (ID: 5390)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.209539532661438
    2. '_jump' → logprob: -2.2095394134521484
    3. '_space' → logprob: -3.2095394134521484
    4. '_j' → logprob: -4.459539413452148
    5. '_marks' → logprob: -5.209539413452148
    6. '_continue' → logprob: -5.209539413452148
    7. '_mark' → logprob: -5.459539413452148
    8. '_lower' → logprob: -5.834539413452148
    9. '_spaces' → logprob: -7.834539413452148
    10. '_return' → logprob: -7.834539413452148

Token 71: '=[' (ID: 13370)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.830039381980896
    2. 'alue' → logprob: -0.830039381980896
    3. 'alid' → logprob: -3.2050395011901855
    4. 'al' → logprob: -3.4550395011901855
    5. 'isible' → logprob: -3.5800395011901855
    6. 'ariable' → logprob: -5.0800395011901855
    7. 'iew' → logprob: -5.5800395011901855
    8. 'isted' → logprob: -5.7050395011901855
    9. 'ert' → logprob: -5.9550395011901855
    10. 'a' → logprob: -6.3300395011901855

Token 72: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.004713261034339666
    2. ' False' → logprob: -6.62971305847168
    3. '[' → logprob: -6.75471305847168
    4. 'True' → logprob: -6.87971305847168
    5. ']' → logprob: -7.37971305847168
    6. '0' → logprob: -7.87971305847168
    7. ' [' → logprob: -9.62971305847168
    8. '[]' → logprob: -10.12971305847168
    9. '   ' → logprob: -10.87971305847168
    10. '(False' → logprob: -11.25471305847168

Token 73: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009507791139185429
    2. ')' → logprob: -5.634507656097412
    3. ' for' → logprob: -5.634507656097412
    4. 'for' → logprob: -6.884507656097412
    5. ']*' → logprob: -7.009507656097412
    6. ' ]' → logprob: -8.63450813293457
    7. '[' → logprob: -9.75950813293457
    8. '   ' → logprob: -10.00950813293457
    9. '[N' → logprob: -10.63450813293457
    10. '       ' → logprob: -11.25950813293457

Token 74: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.001176416757516563
    2. '(N' → logprob: -6.876176357269287
    3. '(' → logprob: -9.376176834106445
    4. ' N' → logprob: -11.001176834106445
    5. ' (' → logprob: -11.751176834106445
    6. '100' → logprob: -12.376176834106445
    7. '10' → logprob: -12.501176834106445
    8. '20' → logprob: -13.001176834106445
    9. '7' → logprob: -13.251176834106445
    10. '26' → logprob: -13.376176834106445

Token 75: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.45755770802497864
    2. 'for' (adapté à ' for') → logprob: -1.0825576782226562
    3. '   ' → logprob: -3.9575576782226562
    4. '	for' → logprob: -5.082557678222656
    5. '\t' → logprob: -6.832557678222656
    6. ' ' → logprob: -7.582557678222656
    7. '    ' → logprob: -8.082557678222656
    8. '
' → logprob: -8.332557678222656
    9. '```' → logprob: -8.957557678222656
    10. '    
' → logprob: -9.082557678222656

Token 78: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.026776256039738655
    2. ' _' → logprob: -3.6517763137817383
    3. ' ' → logprob: -8.276776313781738
    4. 'i' → logprob: -8.776776313781738
    5. '_' → logprob: -9.651776313781738
    6. '	i' → logprob: -13.651776313781738
    7. '_i' → logprob: -14.401776313781738
    8. ' ‌' → logprob: -14.776776313781738
    9. ' ' → logprob: -15.276776313781738
    10. ' I' → logprob: -15.776776313781738

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04306427761912346
    2. 'in' → logprob: -3.1680643558502197
    3. ' ' → logprob: -9.91806411743164
    4. ',' → logprob: -12.16806411743164
    5. '	in' → logprob: -12.16806411743164
    6. 'range' → logprob: -14.29306411743164
    7. 'import' → logprob: -14.41806411743164
    8. 'In' → logprob: -14.54306411743164
    9. 'n' → logprob: -14.54306411743164
    10. ',in' → logprob: -14.54306411743164

Token 80: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04858816787600517
    2. 'range' → logprob: -3.048588275909424
    3. ' ' → logprob: -14.673587799072266
    4. '	range' → logprob: -15.548587799072266
    5. '(range' → logprob: -16.673587799072266
    6. 'rang' → logprob: -17.173587799072266
    7. ' xrange' → logprob: -17.298587799072266
    8. ' rang' → logprob: -17.423587799072266
    9. '  ' → logprob: -18.173587799072266
    10. '_range' → logprob: -18.798587799072266

Token 81: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2704009711742401
    2. '(' → logprob: -1.6454010009765625
    3. ' (' → logprob: -3.1454010009765625
    4. '(n' → logprob: -7.7704010009765625
    5. ' N' → logprob: -8.270401000976562
    6. ' ' → logprob: -8.395401000976562
    7. '(len' → logprob: -11.520401000976562
    8. '(i' → logprob: -12.145401000976562
    9. '<|end|>' → logprob: -12.520401000976562
    10. ')' → logprob: -12.895401000976562

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006491714157164097
    2. ':' → logprob: -8.500649452209473
    3. '):
' → logprob: -8.500649452209473
    4. ')' → logprob: -8.625649452209473
    5. ' ):' → logprob: -10.000649452209473
    6. '+' → logprob: -11.500649452209473
    7. '   ' → logprob: -13.125649452209473
    8. '():' → logprob: -13.875649452209473
    9. ']:' → logprob: -14.375649452209473
    10. '       ' → logprob: -14.375649452209473

Token 83: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1815519779920578
    2. '<|end|>' → logprob: -2.931551933288574
    3. ' ' → logprob: -3.306551933288574
    4. '   ' → logprob: -3.931551933288574
    5. '        ' → logprob: -4.306551933288574
    6. ':' → logprob: -4.431551933288574
    7. '           ' → logprob: -4.681551933288574
    8. '    ' → logprob: -5.181551933288574
    9. ',' → logprob: -5.556551933288574
    10. '<|end|>' → logprob: -5.681551933288574

Token 84: ' s' (ID: 265)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.18302950263023376
    2. ' parts' → logprob: -2.8080294132232666
    3. ' data' → logprob: -2.8080294132232666
    4. ' s' → logprob: -4.058029651641846
    5. ' marks' → logprob: -4.683029651641846
    6. ' l' → logprob: -5.433029651641846
    7. 'line' → logprob: -5.683029651641846
    8. 'data' → logprob: -5.808029651641846
    9. ' tokens' → logprob: -6.183029651641846
    10. 's' (adapté à ' s') → logprob: -6.183029651641846

Token 85: '=input' (ID: 87911)
  Prédit: '=input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=input' → logprob: -0.496964693069458
    2. '=' → logprob: -1.246964693069458
    3. '=line' → logprob: -2.496964693069458
    4. ' =' → logprob: -3.996964693069458
    5. '=list' → logprob: -6.746964454650879
    6. '=sys' → logprob: -6.996964454650879
    7. 'tr' → logprob: -7.621964454650879
    8. '_=' → logprob: -8.496964454650879
    9. '=str' → logprob: -8.496964454650879
    10. '=i' → logprob: -9.246964454650879

Token 86: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.10030630230903625
    2. '()' → logprob: -2.350306272506714
    3. '())' → logprob: -9.975306510925293
    4. ')' → logprob: -10.725306510925293
    5. ' ().' → logprob: -11.350306510925293
    6. ' ()' → logprob: -12.225306510925293
    7. '>().' → logprob: -12.350306510925293
    8. '()).' → logprob: -12.975306510925293
    9. '(' → logprob: -13.225306510925293
    10. '>()' → logprob: -13.850306510925293

Token 87: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.06669772416353226
    2. 'rstrip' → logprob: -3.316697835922241
    3. 'split' → logprob: -3.566697835922241
    4. 'rs' → logprob: -14.81669807434082
    5. ' strip' → logprob: -16.06669807434082
    6. '```' → logprob: -17.31669807434082
    7. ' split' → logprob: -17.44169807434082
    8. 'str' → logprob: -17.69169807434082
    9. '.strip' → logprob: -18.31669807434082
    10. '.rstrip' → logprob: -18.44169807434082

Token 88: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25259891152381897
    2. '().' → logprob: -1.5025988817214966
    3. '())' → logprob: -8.127598762512207
    4. '(' → logprob: -8.252598762512207
    5. '('' → logprob: -10.377598762512207
    6. ' ()' → logprob: -11.252598762512207
    7. '()]' → logprob: -11.377598762512207
    8. '()
' → logprob: -11.627598762512207
    9. '()='' → logprob: -12.127598762512207
    10. '()>' → logprob: -12.502598762512207

Token 89: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.448179841041565
    2. 'tokens' → logprob: -1.573179841041565
    3. '           ' → logprob: -1.823179841041565
    4. ' tokens' → logprob: -2.1981797218322754
    5. '_tokens' → logprob: -2.5731797218322754
    6. ' parts' → logprob: -3.0731797218322754
    7. 's' → logprob: -3.1981797218322754
    8. 'split' → logprob: -3.5731797218322754
    9. '<|end|>' → logprob: -4.198179721832275
    10. 'if' → logprob: -4.448179721832275

Token 90: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18516793847084045
    2. 'if' (adapté à ' if') → logprob: -2.4351680278778076
    3. ' parts' → logprob: -3.0601680278778076
    4. 'tokens' → logprob: -4.3101677894592285
    5. ' tokens' → logprob: -4.8101677894592285
    6. 'parts' → logprob: -4.9351677894592285
    7. ' ' → logprob: -5.6851677894592285
    8. 's' → logprob: -7.6851677894592285
    9. '<|end|>' → logprob: -7.6851677894592285
    10. ' =' → logprob: -8.435168266296387

Token 91: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5190666317939758
    2. 's' → logprob: -1.019066572189331
    3. ''' → logprob: -4.14406681060791
    4. ' len' → logprob: -4.64406681060791
    5. 'len' → logprob: -5.14406681060791
    6. ' '' → logprob: -5.39406681060791
    7. ''s' → logprob: -5.89406681060791
    8. ' not' → logprob: -5.89406681060791
    9. ' ' → logprob: -6.51906681060791
    10. ' '('' → logprob: -8.51906681060791

Token 92: '=='' (ID: 20651)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.5026827454566956
    2. '==' → logprob: -1.3776826858520508
    3. '[' → logprob: -2.252682685852051
    4. ' ==' → logprob: -4.002682685852051
    5. ':' → logprob: -4.752682685852051
    6. '.' → logprob: -5.377682685852051
    7. 'startswith' → logprob: -5.627682685852051
    8. '=='' → logprob: -7.127682685852051
    9. '.endswith' → logprob: -7.377682685852051
    10. '=' → logprob: -8.12768268585205

Token 93: '-' (ID: 12)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1491972208023071
    2. 'END' → logprob: -1.6491972208023071
    3. '0' → logprob: -1.7741972208023071
    4. '#' → logprob: -2.2741971015930176
    5. '*' → logprob: -2.7741971015930176
    6. '-' → logprob: -3.0241971015930176
    7. 'E' → logprob: -3.7741971015930176
    8. 'LEFT' → logprob: -4.399197101593018
    9. 'end' → logprob: -4.524197101593018
    10. 'B' → logprob: -5.399197101593018

Token 94: '':
' (ID: 7669)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.032679084688425064
    2. ''>' → logprob: -3.9076790809631348
    3. '':' → logprob: -4.907679080963135
    4. ''' → logprob: -6.157679080963135
    5. '<|end|>' → logprob: -6.907679080963135
    6. '-' → logprob: -7.407679080963135
    7. '">' → logprob: -8.032679557800293
    8. ''-' → logprob: -8.907679557800293
    9. ' ' → logprob: -9.032679557800293
    10. ''>
' → logprob: -9.657679557800293

Token 95: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3956758975982666
    2. '               ' → logprob: -1.2706758975982666
    3. ' continue' → logprob: -3.3956758975982666
    4. 'continue' → logprob: -5.0206756591796875
    5. '<|end|>' → logprob: -6.2706756591796875
    6. ' jump' → logprob: -6.5206756591796875
    7. ' continues' → logprob: -7.8956756591796875
    8. '	continue' → logprob: -8.145675659179688
    9. '<|end|>' → logprob: -8.520675659179688
    10. '
' → logprob: -8.520675659179688

Token 96: ' continue' (ID: 4901)
  Prédit: ' jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jump' → logprob: -0.28177136182785034
    2. ' continue' → logprob: -2.156771421432495
    3. 'jump' → logprob: -2.656771421432495
    4. '               ' → logprob: -3.531771421432495
    5. 'continue' (adapté à ' continue') → logprob: -4.156771183013916
    6. '           ' → logprob: -4.406771183013916
    7. ' pass' → logprob: -6.781771183013916
    8. '   ' → logprob: -7.656771183013916
    9. ' None' → logprob: -8.156771659851074
    10. 'pass' → logprob: -9.156771659851074

Token 97: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00039051592466421425
    2. '<|end|>' → logprob: -8.37539005279541
    3. '          ' → logprob: -9.62539005279541
    4. 'else' → logprob: -10.37539005279541
    5. '       ' → logprob: -11.25039005279541
    6. ' else' → logprob: -11.62539005279541
    7. '               ' → logprob: -11.75039005279541
    8. '            
' → logprob: -11.75039005279541
    9. '            ' → logprob: -12.37539005279541
    10. '
' → logprob: -12.50039005279541

Token 98: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008015265921130776
    2. '       ' → logprob: -8.500801086425781
    3. 'else' → logprob: -8.500801086425781
    4. '<|end|>' → logprob: -8.625801086425781
    5. '          ' → logprob: -9.500801086425781
    6. ' else' → logprob: -10.125801086425781
    7. 'elif' → logprob: -10.250801086425781
    8. '               ' → logprob: -10.875801086425781
    9. '```' → logprob: -11.625801086425781
    10. '            
' → logprob: -12.000801086425781

Token 99: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1382920742034912
    2. ' else' → logprob: -1.3882920742034912
    3. 'else' → logprob: -1.8882920742034912
    4. ' parts' → logprob: -2.263292074203491
    5. ' elif' → logprob: -2.388292074203491
    6. 'elif' → logprob: -3.013292074203491
    7. ' tokens' → logprob: -5.01329231262207
    8. 'tokens' → logprob: -5.01329231262207
    9. 'parts' → logprob: -5.13829231262207
    10. ' if' → logprob: -5.76329231262207

Token 100: ' '' (ID: 461)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2279655933380127
    2. 's' → logprob: -1.6029655933380127
    3. ' '' → logprob: -6.977965354919434
    4. ''' → logprob: -7.227965354919434
    5. ''s' → logprob: -8.227965354919434
    6. ' ' → logprob: -9.227965354919434
    7. ' '('' → logprob: -9.227965354919434
    8. 'len' → logprob: -9.352965354919434
    9. ' len' → logprob: -9.352965354919434
    10. ' ':'' → logprob: -9.852965354919434

Token 101: 'v' (ID: 85)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.655457615852356
    2. ''' → logprob: -1.780457615852356
    3. '[' → logprob: -3.0304574966430664
    4. 's' → logprob: -3.7804574966430664
    5. '+' → logprob: -4.030457496643066
    6. '=' → logprob: -4.155457496643066
    7. 'j' → logprob: -4.155457496643066
    8. ' ' → logprob: -4.280457496643066
    9. ' '>' → logprob: -4.405457496643066
    10. 'L' → logprob: -4.530457496643066

Token 102: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006999996956437826
    2. ' '' → logprob: -5.381999969482422
    3. '=' → logprob: -7.131999969482422
    4. 'alue' → logprob: -7.631999969482422
    5. '='' → logprob: -8.881999969482422
    6. ''=' → logprob: -8.881999969482422
    7. ''>' → logprob: -9.006999969482422
    8. ' in' → logprob: -9.006999969482422
    9. ''''' → logprob: -9.506999969482422
    10. ''in' → logprob: -9.631999969482422

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0018536734860390425
    2. 'in' → logprob: -6.7518534660339355
    3. ''' → logprob: -7.8768534660339355
    4. ''in' → logprob: -9.126853942871094
    5. ' ' → logprob: -9.876853942871094
    6. ' '' → logprob: -10.001853942871094
    7. ' v' → logprob: -10.876853942871094
    8. 'v' → logprob: -11.126853942871094
    9. 'alue' → logprob: -11.376853942871094
    10. '')' → logprob: -11.751853942871094

Token 104: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008615399710834026
    2. ' s' → logprob: -4.758615493774414
    3. '_s' → logprob: -14.258615493774414
    4. '(s' → logprob: -15.633615493774414
    5. '<|end|>' → logprob: -17.633615493774414
    6. '	s' → logprob: -18.258615493774414
    7. '{s' → logprob: -18.258615493774414
    8. ' ' → logprob: -18.383615493774414
    9. 'S' → logprob: -19.008615493774414
    10. '-s' → logprob: -19.008615493774414

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0199350006878376
    2. '           ' → logprob: -4.644935131072998
    3. ':
' → logprob: -5.269935131072998
    4. ' and' → logprob: -5.894935131072998
    5. '=' → logprob: -7.894935131072998
    6. ',' → logprob: -8.39493465423584
    7. '               ' → logprob: -8.51993465423584
    8. '       ' → logprob: -8.51993465423584
    9. '):' → logprob: -8.51993465423584
    10. '':' → logprob: -8.64493465423584

Token 106: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16761839389801025
    2. ':' → logprob: -2.6676182746887207
    3. 'al' → logprob: -3.2926182746887207
    4. '               ' → logprob: -4.292618274688721
    5. 'alue' → logprob: -5.292618274688721
    6. 'alid' → logprob: -5.542618274688721
    7. ',' → logprob: -5.667618274688721
    8. 'ariable' → logprob: -5.792618274688721
    9. '       ' → logprob: -5.917618274688721
    10. ' and' → logprob: -6.042618274688721

Token 107: ' has' (ID: 853)
  Prédit: ' has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.08472282439470291
    2. '           ' → logprob: -2.7097227573394775
    3. 'has' (adapté à ' has') → logprob: -4.584722995758057
    4. '               ' → logprob: -5.959722995758057
    5. ' jump' → logprob: -7.459722995758057
    6. 'v' → logprob: -8.584722518920898
    7. '.has' → logprob: -8.834722518920898
    8. '                   ' → logprob: -9.459722518920898
    9. 's' → logprob: -9.709722518920898
    10. '_has' → logprob: -9.834722518920898

Token 108: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.03855937719345093
    2. '_' → logprob: -3.2885594367980957
    3. ' _' → logprob: -8.038558959960938
    4. '<|end|>' → logprob: -9.663558959960938
    5. 'v' → logprob: -9.913558959960938
    6. '_s' → logprob: -11.288558959960938
    7. ' ' → logprob: -11.538558959960938
    8. 'space' → logprob: -11.663558959960938
    9. 's' → logprob: -11.788558959960938
    10. '_space' → logprob: -12.663558959960938

Token 109: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003100791363976896
    2. '[s' → logprob: -8.375309944152832
    3. '[' → logprob: -9.750309944152832
    4. '[int' → logprob: -11.500309944152832
    5. '[N' → logprob: -12.625309944152832
    6. '[v' → logprob: -12.875309944152832
    7. 's' → logprob: -13.500309944152832
    8. '[j' → logprob: -14.250309944152832
    9. ' [' → logprob: -14.250309944152832
    10. 'i' → logprob: -14.750309944152832

Token 110: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5788920521736145
    2. ']=' → logprob: -0.8288920521736145
    3. '=True' → logprob: -6.203892230987549
    4. '[i' → logprob: -7.703892230987549
    5. '=' → logprob: -8.57889175415039
    6. '']=' → logprob: -8.82889175415039
    7. ' ]' → logprob: -10.07889175415039
    8. ' =' → logprob: -10.07889175415039
    9. '[' → logprob: -10.70389175415039
    10. '']' → logprob: -11.95389175415039

Token 111: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.001170225441455841
    2. ' True' → logprob: -6.7511701583862305
    3. '(True' → logprob: -17.001171112060547
    4. 'Tr' → logprob: -17.501171112060547
    5. '1' → logprob: -17.876171112060547
    6. 'true' → logprob: -18.001171112060547
    7. 's' → logprob: -18.501171112060547
    8. 'False' → logprob: -18.626171112060547
    9. '=True' → logprob: -18.876171112060547
    10. 'T' → logprob: -19.001171112060547

Token 112: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4627666175365448
    2. '<|end|>' → logprob: -1.7127666473388672
    3. '               ' → logprob: -2.462766647338867
    4. '
' → logprob: -2.712766647338867
    5. ' ' → logprob: -4.337766647338867
    6. '<|end|>' → logprob: -4.837766647338867
    7. ',' → logprob: -5.212766647338867
    8. '            
' → logprob: -6.087766647338867
    9. '            ' → logprob: -6.462766647338867
    10. ' 
' → logprob: -6.587766647338867

Token 113: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16392867267131805
    2. '               ' → logprob: -2.288928747177124
    3. '<|end|>' → logprob: -4.038928508758545
    4. ',' → logprob: -4.538928508758545
    5. ' ' → logprob: -5.038928508758545
    6. '
' → logprob: -5.538928508758545
    7. '       ' → logprob: -5.913928508758545
    8. '<|end|>' → logprob: -6.913928508758545
    9. '        ' → logprob: -7.163928508758545
    10. '          ' → logprob: -7.288928508758545

Token 114: ' s' (ID: 265)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3840484619140625
    2. '               ' → logprob: -1.3840484619140625
    3. ' jump' → logprob: -1.3840484619140625
    4. ' s' → logprob: -2.1340484619140625
    5. 's' (adapté à ' s') → logprob: -3.0090484619140625
    6. 'jump' → logprob: -3.3840484619140625
    7. ' continue' → logprob: -4.6340484619140625
    8. ' type' → logprob: -5.1340484619140625
    9. ',' → logprob: -5.3840484619140625
    10. 'continue' → logprob: -6.0090484619140625

Token 115: '=s' (ID: 32455)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18087978661060333
    2. '=s' → logprob: -1.805879831314087
    3. ' =' → logprob: -7.055879592895508
    4. 's' → logprob: -9.430879592895508
    5. '=re' → logprob: -10.180879592895508
    6. '=''' → logprob: -10.930879592895508
    7. '=sys' → logprob: -11.180879592895508
    8. '=i' → logprob: -11.805879592895508
    9. '.replace' → logprob: -11.805879592895508
    10. '='' → logprob: -11.930879592895508

Token 116: '.replace' (ID: 12804)
  Prédit: '.replace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.replace' → logprob: -0.00026968008023686707
    2. '.' → logprob: -9.625269889831543
    3. '.split' → logprob: -10.000269889831543
    4. '.rstrip' → logprob: -10.250269889831543
    5. '[:-' → logprob: -10.250269889831543
    6. '[' → logprob: -10.500269889831543
    7. 'replace' → logprob: -10.750269889831543
    8. '.remove' → logprob: -11.000269889831543
    9. ' .' → logprob: -11.625269889831543
    10. 's' → logprob: -11.750269889831543

Token 117: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00025561772054061294
    2. '("' → logprob: -8.375255584716797
    3. '(' → logprob: -10.625255584716797
    4. ' ('' → logprob: -15.625255584716797
    5. ''' → logprob: -16.000255584716797
    6. '('*' → logprob: -16.750255584716797
    7. '('\' → logprob: -16.750255584716797
    8. '(',' → logprob: -17.125255584716797
    9. '('+' → logprob: -17.125255584716797
    10. '('-' → logprob: -17.125255584716797

Token 118: 'v' (ID: 85)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00021605310030281544
    2. '"' → logprob: -8.625216484069824
    3. ''s' → logprob: -12.250216484069824
    4. ''y' → logprob: -12.500216484069824
    5. '
' → logprob: -12.625216484069824
    6. ''ve' → logprob: -12.750216484069824
    7. ''u' → logprob: -12.875216484069824
    8. ''i' → logprob: -12.875216484069824
    9. ' '' → logprob: -13.125216484069824
    10. ''a' → logprob: -13.125216484069824

Token 119: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.008864745497703552
    2. '',' → logprob: -4.758864879608154
    3. '',"' → logprob: -8.508864402770996
    4. ''' → logprob: -10.383864402770996
    5. '','','' → logprob: -11.883864402770996
    6. '","' → logprob: -12.508864402770996
    7. ',' → logprob: -13.758864402770996
    8. '')' → logprob: -14.133864402770996
    9. ''',' → logprob: -14.133864402770996
    10. '','#' → logprob: -14.133864402770996

Token 120: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00013655527436640114
    2. '')
' → logprob: -9.375136375427246
    3. '0' → logprob: -11.250136375427246
    4. ''' → logprob: -11.500136375427246
    5. ' ')' → logprob: -11.875136375427246
    6. '','' → logprob: -12.125136375427246
    7. ')' → logprob: -12.875136375427246
    8. '')

' → logprob: -13.125136375427246
    9. '")' → logprob: -13.250136375427246
    10. '',' → logprob: -13.500136375427246

Token 121: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015501394867897034
    2. '               ' → logprob: -6.015501499176025
    3. ',' → logprob: -6.265501499176025
    4. '       ' → logprob: -6.640501499176025
    5. '            
' → logprob: -6.640501499176025
    6. 'tokens' → logprob: -6.765501499176025
    7. '[' → logprob: -7.140501499176025
    8. ')' → logprob: -7.390501499176025
    9. ' tokens' → logprob: -7.515501499176025
    10. 'token' → logprob: -7.765501499176025

Token 122: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1077771186828613
    2. 'if' (adapté à ' if') → logprob: -1.9827771186828613
    3. ' parts' → logprob: -1.9827771186828613
    4. 'parts' → logprob: -2.4827771186828613
    5. 'type' → logprob: -2.9827771186828613
    6. ' jump' → logprob: -2.9827771186828613
    7. 'tokens' → logprob: -2.9827771186828613
    8. '           ' → logprob: -3.1077771186828613
    9. 'jump' → logprob: -3.2327771186828613
    10. ' type' → logprob: -3.8577771186828613

Token 123: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7742643356323242
    2. ' s' → logprob: -1.1492643356323242
    3. ''' → logprob: -1.8992643356323242
    4. ' '+'' → logprob: -3.774264335632324
    5. ' '('' → logprob: -4.274264335632324
    6. ''s' → logprob: -4.774264335632324
    7. ' '' → logprob: -5.149264335632324
    8. ''-' → logprob: -5.524264335632324
    9. ' '['' → logprob: -5.649264335632324
    10. ' '-'' → logprob: -6.274264335632324

Token 124: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6349361538887024
    2. '.startswith' → logprob: -1.1349360942840576
    3. '[' → logprob: -2.3849360942840576
    4. '=='' → logprob: -3.7599360942840576
    5. '=' → logprob: -4.884936332702637
    6. '.is' → logprob: -5.134936332702637
    7. '!='' → logprob: -5.384936332702637
    8. ' ==' → logprob: -5.384936332702637
    9. 'startswith' → logprob: -5.884936332702637
    10. ':' → logprob: -5.884936332702637

Token 125: '''' (ID: 5830)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.3670498728752136
    2. ''' → logprob: -1.7420499324798584
    3. ''+' → logprob: -2.8670499324798584
    4. '''' → logprob: -3.1170499324798584
    5. ''*' → logprob: -3.9920499324798584
    6. ''#' → logprob: -5.367049694061279
    7. ''.' → logprob: -5.742049694061279
    8. ''>' → logprob: -7.242049694061279
    9. ''?' → logprob: -7.242049694061279
    10. ''<' → logprob: -7.992049694061279

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19682742655277252
    2. ':
' → logprob: -1.9468274116516113
    3. ' or' → logprob: -3.5718274116516113
    4. '               ' → logprob: -5.321827411651611
    5. '           ' → logprob: -6.446827411651611
    6. 'or' → logprob: -7.321827411651611
    7. ':return' → logprob: -8.07182788848877
    8. '   ' → logprob: -10.19682788848877
    9. '-' → logprob: -10.19682788848877
    10. 'continue' → logprob: -10.44682788848877

Token 127: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35816898941993713
    2. '               ' → logprob: -1.7331689596176147
    3. ':' → logprob: -2.9831690788269043
    4. 'jump' → logprob: -3.3581690788269043
    5. ' jump' → logprob: -4.608169078826904
    6. ':
' → logprob: -4.983169078826904
    7. ' or' → logprob: -5.108169078826904
    8. '   ' → logprob: -6.108169078826904
    9. '[' → logprob: -6.358169078826904
    10. '):
' → logprob: -6.608169078826904

Token 128: ' continue' (ID: 4901)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.5819349884986877
    2. 'continue' (adapté à ' continue') → logprob: -1.456934928894043
    3. ' jump' → logprob: -2.456934928894043
    4. '               ' → logprob: -2.956934928894043
    5. 'None' → logprob: -3.456934928894043
    6. '                   ' → logprob: -4.081934928894043
    7. ' continue' → logprob: -4.331934928894043
    8. '   ' → logprob: -5.581934928894043
    9. ' None' → logprob: -5.706934928894043
    10. '           ' → logprob: -7.581934928894043

Token 129: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018016720190644264
    2. '<|end|>' → logprob: -4.643016815185547
    3. '       ' → logprob: -5.143016815185547
    4. '<|end|>' → logprob: -7.518016815185547
    5. ',' → logprob: -7.643016815185547
    6. 'elif' → logprob: -8.643016815185547
    7. 'else' → logprob: -8.893016815185547
    8. ')' → logprob: -9.018016815185547
    9. '
' → logprob: -9.268016815185547
    10. '            
' → logprob: -9.268016815185547

Token 130: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7086021304130554
    2. '<|end|>' → logprob: -1.3336021900177002
    3. '       ' → logprob: -1.8336021900177002
    4. '        ' → logprob: -4.458601951599121
    5. '[' → logprob: -4.583601951599121
    6. ')' → logprob: -5.208601951599121
    7. '<|end|>' → logprob: -5.208601951599121
    8. ',' → logprob: -5.333601951599121
    9. ' ' → logprob: -5.458601951599121
    10. ' jump' → logprob: -5.708601951599121

Token 131: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2284232378005981
    2. 'parts' → logprob: -1.9784232378005981
    3. ' if' → logprob: -2.1034231185913086
    4. 'type' → logprob: -2.2284231185913086
    5. 'tokens' → logprob: -2.3534231185913086
    6. 't' → logprob: -2.4784231185913086
    7. ' parts' → logprob: -2.8534231185913086
    8. 'token' → logprob: -3.7284231185913086
    9. '           ' → logprob: -3.8534231185913086
    10. 'jump' → logprob: -4.603423118591309

Token 132: ' jump' (ID: 13843)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -1.1352958679199219
    2. 'parts' → logprob: -1.2602958679199219
    3. 'if' → logprob: -1.5102958679199219
    4. ' if' → logprob: -2.510295867919922
    5. 'type' → logprob: -3.135295867919922
    6. ' type' → logprob: -4.385295867919922
    7. 't' → logprob: -4.510295867919922
    8. ' t' → logprob: -4.885295867919922
    9. ' typ' → logprob: -5.760295867919922
    10. ' mark' → logprob: -6.010295867919922

Token 133: ' mark' (ID: 1983)
  Prédit: '_marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_marks' → logprob: -0.21015775203704834
    2. '_type' → logprob: -1.8351577520370483
    3. 'type' → logprob: -4.210157871246338
    4. '_parts' → logprob: -5.710157871246338
    5. '_mark' → logprob: -5.960157871246338
    6. '_tokens' → logprob: -6.460157871246338
    7. '_num' → logprob: -6.710157871246338
    8. '=' → logprob: -7.210157871246338
    9. '_jump' → logprob: -7.460157871246338
    10. 'marks' → logprob: -7.585157871246338

Token 134: ' present' (ID: 3333)
  Prédit: '_type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.18640658259391785
    2. '=' → logprob: -1.9364066123962402
    3. 'type' → logprob: -4.43640661239624
    4. ' =' → logprob: -5.56140661239624
    5. '=i' → logprob: -6.56140661239624
    6. '=int' → logprob: -6.81140661239624
    7. '_parts' → logprob: -6.81140661239624
    8. ',' → logprob: -6.81140661239624
    9. '=line' → logprob: -6.93640661239624
    10. 's' → logprob: -7.18640661239624

Token 135: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1850123107433319
    2. ',' → logprob: -2.5600123405456543
    3. ' =' → logprob: -3.6850123405456543
    4. '       ' → logprob: -4.810012340545654
    5. ' tokens' → logprob: -4.935012340545654
    6. '=' → logprob: -5.060012340545654
    7. 'tokens' → logprob: -5.060012340545654
    8. 'token' → logprob: -5.560012340545654
    9. 'type' → logprob: -5.810012340545654
    10. '[' → logprob: -6.185012340545654

Token 136: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4016034603118896
    2. '       ' → logprob: -1.9016034603118896
    3. 'token' → logprob: -2.1516034603118896
    4. 'tokens' → logprob: -2.1516034603118896
    5. 'type' → logprob: -2.6516034603118896
    6. ' tokens' → logprob: -2.9016034603118896
    7. ' jump' → logprob: -3.0266034603118896
    8. ' parts' → logprob: -3.6516034603118896
    9. ' t' → logprob: -3.9016034603118896
    10. '[' → logprob: -4.026603698730469

Token 137: ' #' (ID: 1069)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.7886148691177368
    2. ' parts' → logprob: -1.7886148691177368
    3. 'type' → logprob: -2.0386147499084473
    4. 't' → logprob: -2.2886147499084473
    5. 'jump' → logprob: -3.0386147499084473
    6. ' t' → logprob: -3.7886147499084473
    7. ' jump' → logprob: -4.413614749908447
    8. ' typ' → logprob: -4.538614749908447
    9. 'mark' → logprob: -4.913614749908447
    10. ' type' → logprob: -5.288614749908447

Token 138: ' separate' (ID: 13574)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -1.0795130729675293
    2. 'type' → logprob: -1.7045130729675293
    3. ' parts' → logprob: -1.7045130729675293
    4. 't' → logprob: -2.5795130729675293
    5. ' t' → logprob: -2.7045130729675293
    6. ' jump' → logprob: -3.5795130729675293
    7. ' typ' → logprob: -3.5795130729675293
    8. 'jump' → logprob: -3.7045130729675293
    9. ' type' → logprob: -3.9545130729675293
    10. ' mark' → logprob: -4.204513072967529

Token 139: ' type' (ID: 1490)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'type' → logprob: -0.2383563369512558
    2. ' type' → logprob: -2.363356351852417
    3. 'token' → logprob: -4.238356113433838
    4. 't' → logprob: -4.488356113433838
    5. 'parts' → logprob: -4.488356113433838
    6. ' t' → logprob: -4.738356113433838
    7. 'if' → logprob: -4.738356113433838
    8. 'num' → logprob: -4.863356113433838
    9. 'j' → logprob: -4.988356113433838
    10. 'idx' → logprob: -4.988356113433838

Token 140: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027599023655056953
    2. '_,' → logprob: -4.152598857879639
    3. '=' → logprob: -5.402598857879639
    4. '_type' → logprob: -6.777598857879639
    5. ',type' → logprob: -6.777598857879639
    6. '_' → logprob: -7.152598857879639
    7. ' ,' → logprob: -7.152598857879639
    8. '_idx' → logprob: -7.527598857879639
    9. 'type' → logprob: -7.652598857879639
    10. 's' → logprob: -8.152599334716797

Token 141: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.024201028048992157
    2. ' number' → logprob: -3.899200916290283
    3. 'num' → logprob: -5.649200916290283
    4. 'value' → logprob: -9.649201393127441
    5. 's' → logprob: -10.399201393127441
    6. 'digits' → logprob: -12.024201393127441
    7. 'target' → logprob: -12.149201393127441
    8. ' num' → logprob: -12.399201393127441
    9. 'digit' → logprob: -12.399201393127441
    10. 'numbers' → logprob: -12.899201393127441

Token 142: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0927261114120483
    2. '=' → logprob: -1.5927261114120483
    3. ',' → logprob: -1.8427261114120483
    4. '           ' → logprob: -1.9677261114120483
    5. 'type' → logprob: -2.967726230621338
    6. ' type' → logprob: -3.592726230621338
    7. '_type' → logprob: -3.717726230621338
    8. '_' → logprob: -4.967726230621338
    9. ',type' → logprob: -5.467726230621338
    10. ' ,' → logprob: -5.717726230621338

Token 143: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12255202233791351
    2. ' type' → logprob: -3.122551918029785
    3. 'type' → logprob: -3.747551918029785
    4. ',' → logprob: -4.872551918029785
    5. '            ' → logprob: -4.872551918029785
    6. ' =' → logprob: -5.247551918029785
    7. ' t' → logprob: -5.247551918029785
    8. ' c' → logprob: -5.872551918029785
    9. '=' → logprob: -5.997551918029785
    10. ' mark' → logprob: -6.497551918029785

Token 144: ' #' (ID: 1069)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.4520529508590698
    2. 'type' → logprob: -1.5770529508590698
    3. ' type' → logprob: -1.8270529508590698
    4. ' mark' → logprob: -2.4520530700683594
    5. 'j' → logprob: -2.5770530700683594
    6. '           ' → logprob: -2.9520530700683594
    7. 't' → logprob: -3.0770530700683594
    8. ' c' → logprob: -3.5770530700683594
    9. ' j' → logprob: -3.7020530700683594
    10. ' jump' → logprob: -3.9520530700683594

Token 145: ' type' (ID: 1490)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.6167007088661194
    2. 'type' → logprob: -1.8667006492614746
    3. ' c' → logprob: -2.6167006492614746
    4. ' type' → logprob: -2.7417006492614746
    5. 'j' → logprob: -2.8667006492614746
    6. 't' → logprob: -3.2417006492614746
    7. ' j' → logprob: -3.7417006492614746
    8. 'c' → logprob: -4.366700649261475
    9. ' typ' → logprob: -4.616700649261475
    10. ' mark' → logprob: -4.991700649261475

Token 146: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2355494648218155
    2. ',' → logprob: -2.2355494499206543
    3. ' =' → logprob: -2.3605494499206543
    4. '_' → logprob: -6.485549449920654
    5. '_idx' → logprob: -6.860549449920654
    6. '_=' → logprob: -6.860549449920654
    7. '_,' → logprob: -7.360549449920654
    8. '=s' → logprob: -7.360549449920654
    9. '=end' → logprob: -7.485549449920654
    10. '_end' → logprob: -7.610549449920654

Token 147: ' a' (ID: 261)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3886697292327881
    2. ' s' → logprob: -1.138669729232788
    3. 'c' → logprob: -7.263669967651367
    4. 'j' → logprob: -8.138669967651367
    5. ' c' → logprob: -9.138669967651367
    6. 'a' → logprob: -9.513669967651367
    7. 't' → logprob: -9.638669967651367
    8. 'alpha' → logprob: -9.888669967651367
    9. ' j' → logprob: -10.013669967651367
    10. 'char' → logprob: -10.138669967651367

Token 148: '-z' (ID: 16826)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23798976838588715
    2. '=' → logprob: -1.7379897832870483
    3. 'b' → logprob: -5.112989902496338
    4. '=s' → logprob: -5.237989902496338
    5. '=b' → logprob: -5.612989902496338
    6. 'type' → logprob: -5.737989902496338
    7. '=line' → logprob: -6.362989902496338
    8. 's' → logprob: -6.487989902496338
    9. ',' → logprob: -6.487989902496338
    10. 'nd' → logprob: -6.737989902496338

Token 149: ' letters' (ID: 18151)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1383391618728638
    2. ' =' → logprob: -1.1383391618728638
    3. ' c' → logprob: -1.8883391618728638
    4. ',' → logprob: -2.638339042663574
    5. ' type' → logprob: -2.888339042663574
    6. 'type' → logprob: -4.013339042663574
    7. ' t' → logprob: -4.388339042663574
    8. ' ' → logprob: -5.013339042663574
    9. ' mark' → logprob: -5.638339042663574
    10. 'c' → logprob: -5.763339042663574

Token 150: ',' (ID: 11)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4944673776626587
    2. ' idx' → logprob: -1.2444673776626587
    3. 'j' → logprob: -3.244467258453369
    4. ' j' → logprob: -3.244467258453369
    5. 'pos' → logprob: -5.244467258453369
    6. 'i' → logprob: -5.244467258453369
    7. '           ' → logprob: -5.244467258453369
    8. ' pos' → logprob: -5.494467258453369
    9. ' i' → logprob: -6.369467258453369
    10. 'index' → logprob: -7.744467258453369

Token 151: ' number' (ID: 2086)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.2568069696426392
    2. 'j' → logprob: -1.5068069696426392
    3. ' idx' → logprob: -1.5068069696426392
    4. 'num' → logprob: -1.8818069696426392
    5. ' num' → logprob: -2.7568068504333496
    6. 'idx' → logprob: -3.1318068504333496
    7. ' pos' → logprob: -5.38180685043335
    8. ' index' → logprob: -6.38180685043335
    9. 'pos' → logprob: -6.63180685043335
    10. ' number' → logprob: -6.88180685043335

Token 152: ':' (ID: 25)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.16816334426403046
    2. '_start' → logprob: -2.918163299560547
    3. '=' → logprob: -3.543163299560547
    4. '_index' → logprob: -3.793163299560547
    5. 'idx' → logprob: -3.918163299560547
    6. ' =' → logprob: -4.543163299560547
    7. '_pos' → logprob: -5.168163299560547
    8. 'pos' → logprob: -5.793163299560547
    9. '=''' → logprob: -6.418163299560547
    10. '_=' → logprob: -6.543163299560547

Token 153: ' digits' (ID: 37806)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.4920946955680847
    2. 'int' → logprob: -1.6170947551727295
    3. '0' → logprob: -1.9920947551727295
    4. 's' → logprob: -3.2420947551727295
    5. '""' → logprob: -5.24209451675415
    6. '012' → logprob: -5.99209451675415
    7. '[]' → logprob: -6.24209451675415
    8. '''.' → logprob: -7.11709451675415
    9. '''
' → logprob: -7.24209451675415
    10. '"' → logprob: -7.36709451675415

Token 154: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6819610595703125
    2. ' idx' → logprob: -1.8069610595703125
    3. 'idx' → logprob: -2.0569610595703125
    4. ' i' → logprob: -2.8069610595703125
    5. ' j' → logprob: -3.8069610595703125
    6. ' ' → logprob: -4.0569610595703125
    7. '       ' → logprob: -4.0569610595703125
    8. ' 
' → logprob: -4.1819610595703125
    9. 'token' → logprob: -5.0569610595703125
    10. 'i' → logprob: -5.0569610595703125

Token 155: ' end' (ID: 1268)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2652234435081482
    2. ' the' → logprob: -1.515223503112793
    3. 'end' → logprob: -4.515223503112793
    4. ' end' → logprob: -6.140223503112793
    5. 's' → logprob: -9.890223503112793
    6. 'right' → logprob: -11.265223503112793
    7. ' ' → logprob: -11.390223503112793
    8. '<|end|>' → logprob: -11.640223503112793
    9. 'start' → logprob: -12.015223503112793
    10. '_end' → logprob: -12.015223503112793

Token 156: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.112170934677124
    2. '           ' → logprob: -1.237170934677124
    3. '            ' → logprob: -2.862170934677124
    4. ' 
' → logprob: -2.862170934677124
    5. 'import' → logprob: -3.362170934677124
    6. ' =' → logprob: -3.487170934677124
    7. ' j' → logprob: -3.987170934677124
    8. 'idx' → logprob: -3.987170934677124
    9. ' idx' → logprob: -4.112171173095703
    10. '            
' → logprob: -4.237171173095703

Token 157: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48760145902633667
    2. '<|end|>' → logprob: -2.4876015186309814
    3. ' j' → logprob: -2.7376015186309814
    4. '           ' → logprob: -3.6126015186309814
    5. '       ' → logprob: -3.7376015186309814
    6. ' 
' → logprob: -3.7376015186309814
    7. '        ' → logprob: -4.112601280212402
    8. 'j' → logprob: -4.362601280212402
    9. ' t' → logprob: -4.487601280212402
    10. 'token' → logprob: -4.612601280212402

Token 158: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.7566569447517395
    2. ' idx' → logprob: -1.3816568851470947
    3. ' pos' → logprob: -2.5066568851470947
    4. '           ' → logprob: -2.6316568851470947
    5. 'idx' → logprob: -3.3816568851470947
    6. 'j' (adapté à ' j') → logprob: -3.3816568851470947
    7. 'pos' → logprob: -4.006657123565674
    8. ' import' → logprob: -4.631657123565674
    9. 'import' → logprob: -4.631657123565674
    10. ' i' → logprob: -5.131657123565674

Token 159: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1834973394870758
    2. ' =' → logprob: -1.8084973096847534
    3. '=len' → logprob: -6.058497428894043
    4. '=i' → logprob: -6.933497428894043
    5. '=j' → logprob: -8.558497428894043
    6. '=index' → logprob: -9.933497428894043
    7. '=int' → logprob: -10.308497428894043
    8. 'import' → logprob: -10.808497428894043
    9. '=end' → logprob: -11.058497428894043
    10. '=k' → logprob: -11.433497428894043

Token 160: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029852071776986122
    2. 'len' → logprob: -3.5298521518707275
    3. ' ' → logprob: -9.529851913452148
    4. '-' → logprob: -10.654851913452148
    5. ' len' → logprob: -12.654851913452148
    6. '1' → logprob: -14.654851913452148
    7. 'next' → logprob: -15.029851913452148
    8. '[len' → logprob: -15.029851913452148
    9. '(len' → logprob: -15.404851913452148
    10. '<len' → logprob: -15.404851913452148

Token 161: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: '           ' (ID: 352)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.9660921692848206
    2. '<|end|>' → logprob: -0.9660921692848206
    3. 'while' → logprob: -1.4660921096801758
    4. '<|end|>' → logprob: -5.591092109680176
    5. ' ' → logprob: -6.841092109680176
    6. '	while' → logprob: -6.841092109680176
    7. '   ' → logprob: -7.216092109680176
    8. 's' → logprob: -7.841092109680176
    9. '    ' → logprob: -8.091092109680176
    10. '
' → logprob: -8.841092109680176

Token 163: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.3136219084262848
    2. ' while' → logprob: -1.3136218786239624
    3. '<|end|>' → logprob: -8.063621520996094
    4. 'for' → logprob: -10.688621520996094
    5. '	while' → logprob: -11.563621520996094
    6. '
' → logprob: -12.813621520996094
    7. 'While' → logprob: -12.813621520996094
    8. ' for' → logprob: -13.313621520996094
    9. 'import' → logprob: -13.938621520996094
    10. ' While' → logprob: -14.063621520996094

Token 164: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04311051964759827
    2. ' j' → logprob: -3.1681106090545654
    3. ' not' → logprob: -9.793110847473145
    4. 's' → logprob: -10.668110847473145
    5. 'not' → logprob: -10.918110847473145
    6. ' s' → logprob: -11.543110847473145
    7. ' ' → logprob: -12.793110847473145
    8. '	j' → logprob: -14.168110847473145
    9. '   ' → logprob: -15.168110847473145
    10. 'len' → logprob: -15.293110847473145

Token 165: '<len' (ID: 141365)
  Prédit: '<len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<len' → logprob: -0.12340326607227325
    2. '<' → logprob: -2.748403310775757
    3. ' <' → logprob: -2.998403310775757
    4. '<N' → logprob: -6.623403072357178
    5. '<n' → logprob: -7.998403072357178
    6. 'j' → logprob: -8.248403549194336
    7. 'len' → logprob: -9.498403549194336
    8. ' j' → logprob: -9.873403549194336
    9. '[j' → logprob: -10.498403549194336
    10. '()<' → logprob: -10.998403549194336

Token 166: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.031209301203489304
    2. '(s' → logprob: -3.5312092304229736
    3. ' s' → logprob: -6.531209468841553
    4. '(' → logprob: -15.406208992004395
    5. ')s' → logprob: -16.28120994567871
    6. '`s' → logprob: -16.53120994567871
    7. '_s' → logprob: -16.90620994567871
    8. ')' → logprob: -17.15620994567871
    9. '{s' → logprob: -17.40620994567871
    10. '```' → logprob: -17.53120994567871

Token 167: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10710986703634262
    2. 'and' → logprob: -2.357109785079956
    3. ')' → logprob: -4.982110023498535
    4. ' )' → logprob: -11.357110023498535
    5. ' ' → logprob: -12.357110023498535
    6. '):
' → logprob: -13.232110023498535
    7. '	and' → logprob: -14.232110023498535
    8. '   ' → logprob: -15.107110023498535
    9. '<|end|>' → logprob: -15.357110023498535
    10. '```' → logprob: -16.10710906982422

Token 168: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06196925416588783
    2. 'and' → logprob: -2.81196928024292
    3. '<|end|>' → logprob: -13.936968803405762
    4. 's' → logprob: -15.311968803405762
    5. ' ' → logprob: -15.686968803405762
    6. '   ' → logprob: -16.311969757080078
    7. '```' → logprob: -16.436969757080078
    8. '<|end|>' → logprob: -16.811969757080078
    9. ' or' → logprob: -17.061969757080078
    10. 'import' → logprob: -17.186969757080078

Token 169: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.017370229586958885
    2. ' s' → logprob: -4.142370223999023
    3. ''s' → logprob: -6.767370223999023
    4. '('' → logprob: -10.142370223999023
    5. 'ord' → logprob: -10.392370223999023
    6. '(s' → logprob: -11.017370223999023
    7. 'not' → logprob: -11.392370223999023
    8. ''' → logprob: -11.517370223999023
    9. '	s' → logprob: -11.767370223999023
    10. ' '' → logprob: -11.767370223999023

Token 170: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.50000286102295
    3. '[
' → logprob: -15.00000286102295
    4. '```' → logprob: -15.62500286102295
    5. 'j' → logprob: -16.000001907348633
    6. '[i' → logprob: -16.250001907348633
    7. ' [' → logprob: -16.500001907348633
    8. '[js' → logprob: -17.250001907348633
    9. 'import' → logprob: -17.750001907348633
    10. '[s' → logprob: -17.875001907348633

Token 171: '].' (ID: 1651)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.43881362676620483
    2. '.is' → logprob: -1.0638136863708496
    3. 'import' → logprob: -5.43881368637085
    4. '[' → logprob: -7.43881368637085
    5. 'a' → logprob: -7.56381368637085
    6. 'isdigit' → logprob: -7.81381368637085
    7. ' in' → logprob: -7.93881368637085
    8. ' .' → logprob: -7.93881368637085
    9. '>=' → logprob: -8.063813209533691
    10. 'j' → logprob: -8.063813209533691

Token 172: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -7.839121826691553e-05
    2. 'isl' → logprob: -9.500078201293945
    3. 'isdigit' → logprob: -13.250078201293945
    4. 'isas' → logprob: -13.625078201293945
    5. 'isal' → logprob: -15.000078201293945
    6. ' is' → logprob: -15.625078201293945
    7. 'a' → logprob: -18.500078201293945
    8. ''is' → logprob: -18.500078201293945
    9. 'isz' → logprob: -18.875078201293945
    10. 'ist' → logprob: -19.250078201293945

Token 173: 'alpha' (ID: 15453)
  Prédit: 'alpha'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alpha' → logprob: -4.723352049040841e-06
    2. 'lower' → logprob: -12.625004768371582
    3. 'al' → logprob: -14.500004768371582
    4. 'a' → logprob: -14.625004768371582
    5. '_alpha' → logprob: -15.375004768371582
    6. ' alpha' → logprob: -16.750003814697266
    7. '-alpha' → logprob: -17.125003814697266
    8. 'letter' → logprob: -17.750003814697266
    9. '.alpha' → logprob: -18.000003814697266
    10. 'alphabet' → logprob: -18.125003814697266

Token 174: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2680487632751465
    2. '()' → logprob: -1.5180487632751465
    3. '():
' → logprob: -4.1430487632751465
    4. '()==' → logprob: -10.393049240112305
    5. 'j' → logprob: -11.268049240112305
    6. '():

' → logprob: -11.268049240112305
    7. '[j' → logprob: -11.768049240112305
    8. '(j' → logprob: -11.768049240112305
    9. '():
' → logprob: -12.143049240112305
    10. '()[' → logprob: -12.268049240112305

Token 175: '               ' (ID: 506)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.033349547535181046
    2. ' j' → logprob: -4.033349514007568
    3. '       ' → logprob: -5.908349514007568
    4. '           ' → logprob: -6.283349514007568
    5. '	j' → logprob: -6.408349514007568
    6. '   ' → logprob: -6.408349514007568
    7. ':
' → logprob: -6.658349514007568
    8. '<|end|>' → logprob: -6.783349514007568
    9. ':' → logprob: -6.908349514007568
    10. '):
' → logprob: -7.158349514007568

Token 176: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.0031812789384275675
    2. ' j' → logprob: -5.753181457519531
    3. '	j' → logprob: -13.003181457519531
    4. '   ' → logprob: -13.753181457519531
    5. '_j' → logprob: -16.62818145751953
    6. '[j' → logprob: -17.37818145751953
    7. '           ' → logprob: -17.37818145751953
    8. ' ' → logprob: -17.62818145751953
    9. 's' → logprob: -18.12818145751953
    10. ',j' → logprob: -18.25318145751953

Token 177: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.002283003181219101
    2. ' +=' → logprob: -6.127283096313477
    3. '+' → logprob: -9.752283096313477
    4. ']+=' → logprob: -10.377283096313477
    5. '=' → logprob: -12.127283096313477
    6. '=j' → logprob: -13.752283096313477
    7. '+j' → logprob: -14.627283096313477
    8. 'j' → logprob: -14.752283096313477
    9. '```' → logprob: -15.252283096313477
    10. '+="' → logprob: -15.877283096313477

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -19.1250057220459
    4. '   ' → logprob: -20.5625057220459
    5. 'j' → logprob: -20.9375057220459
    6. '۱' → logprob: -21.0000057220459
    7. '１' → logprob: -21.3125057220459
    8. '१' → logprob: -21.6875057220459
    9. '১' → logprob: -21.7500057220459
    10. '0' → logprob: -22.0625057220459

Token 179: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34371867775917053
    2. '           ' → logprob: -1.4687186479568481
    3. '<|end|>' → logprob: -3.7187187671661377
    4. '        ' → logprob: -5.093718528747559
    5. '
' → logprob: -5.468718528747559
    6. ' ' → logprob: -5.968718528747559
    7. '	       ' → logprob: -6.093718528747559
    8. ' type' → logprob: -6.218718528747559
    9. '   ' → logprob: -6.218718528747559
    10. 'token' → logprob: -6.343718528747559

Token 180: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07237378507852554
    2. '           ' → logprob: -2.947373867034912
    3. ' type' → logprob: -5.447373867034912
    4. '        ' → logprob: -6.072373867034912
    5. 'type' → logprob: -6.447373867034912
    6. ' s' → logprob: -6.697373867034912
    7. 'token' → logprob: -6.822373867034912
    8. ' jump' → logprob: -6.822373867034912
    9. ' if' → logprob: -7.072373867034912
    10. ' token' → logprob: -7.072373867034912

Token 181: ' t' (ID: 260)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'type' → logprob: -0.8545142412185669
    2. 'mark' → logprob: -1.104514241218567
    3. 'jump' → logprob: -2.2295141220092773
    4. ' mark' → logprob: -2.8545141220092773
    5. ' jump' → logprob: -3.7295141220092773
    6. ' type' → logprob: -3.9795141220092773
    7. '           ' → logprob: -4.479514122009277
    8. 't' (adapté à ' t') → logprob: -4.729514122009277
    9. 'token' → logprob: -5.229514122009277
    10. 'typ' → logprob: -5.729514122009277

Token 182: '=s' (ID: 32455)
  Prédit: 'ype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ype' → logprob: -0.023329799994826317
    2. ' =' → logprob: -5.148329734802246
    3. '=' → logprob: -5.273329734802246
    4. 'y' → logprob: -5.523329734802246
    5. 'yp' → logprob: -5.648329734802246
    6. 'p' → logprob: -6.148329734802246
    7. 'ypes' → logprob: -6.273329734802246
    8. 'yped' → logprob: -8.398329734802246
    9. 'pe' → logprob: -8.523329734802246
    10. ',' → logprob: -10.398329734802246

Token 183: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.00025084958178922534
    2. '[j' → logprob: -8.375250816345215
    3. '[' → logprob: -10.875250816345215
    4. ':j' → logprob: -14.000250816345215
    5. '[:]' → logprob: -15.375250816345215
    6. ':' → logprob: -15.750250816345215
    7. '[:-' → logprob: -16.87525177001953
    8. ' [:' → logprob: -17.25025177001953
    9. '[
' → logprob: -17.75025177001953
    10. '[i' → logprob: -18.12525177001953

Token 184: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.9361264946837764e-07
    2. ' j' → logprob: -16.125
    3. '	j' → logprob: -18.0
    4. '[j' → logprob: -18.5
    5. '   ' → logprob: -19.5
    6. '<|end|>' → logprob: -19.625
    7. '```' → logprob: -20.5
    8. 'import' → logprob: -20.625
    9. ':j' → logprob: -21.125
    10. ',j' → logprob: -21.125

Token 185: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7807379961013794
    2. ',' → logprob: -1.0307379961013794
    3. '<|end|>' → logprob: -1.7807379961013794
    4. '],' → logprob: -5.15573787689209
    5. 's' → logprob: -5.78073787689209
    6. '<|end|>' → logprob: -5.90573787689209
    7. ')' → logprob: -6.03073787689209
    8. ']
' → logprob: -7.28073787689209
    9. ',
' → logprob: -7.78073787689209
    10. '
' → logprob: -8.53073787689209

Token 186: '           ' (ID: 352)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6679970026016235
    2. 'n' → logprob: -1.0429970026016235
    3. '           ' → logprob: -2.667996883392334
    4. 'num' → logprob: -3.417996883392334
    5. ' num' → logprob: -3.542996883392334
    6. '       ' → logprob: -7.667996883392334
    7. 'd' → logprob: -7.792996883392334
    8. ',n' → logprob: -7.917996883392334
    9. ' number' → logprob: -7.917996883392334
    10. 'number' → logprob: -8.292997360229492

Token 187: ' n' (ID: 297)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.17440789937973022
    2. 'k' → logprob: -2.799407958984375
    3. 'n' (adapté à ' n') → logprob: -2.924407958984375
    4. ' num' → logprob: -3.174407958984375
    5. ' k' → logprob: -6.174407958984375
    6. ' n' → logprob: -6.674407958984375
    7. '           ' → logprob: -8.674407958984375
    8. 'number' → logprob: -9.549407958984375
    9. 'd' → logprob: -10.424407958984375
    10. 'x' → logprob: -11.299407958984375

Token 188: '=int' (ID: 37431)
  Prédit: '=int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.004137410782277584
    2. '=' → logprob: -5.5041375160217285
    3. '=s' → logprob: -10.50413703918457
    4. '=len' → logprob: -10.87913703918457
    5. 's' → logprob: -12.00413703918457
    6. '=
' → logprob: -13.75413703918457
    7. '=i' → logprob: -13.75413703918457
    8. '=j' → logprob: -13.87913703918457
    9. ' =' → logprob: -14.62913703918457
    10. '=num' → logprob: -15.00413703918457

Token 189: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.36574100604048e-06
    2. 's' → logprob: -12.500004768371582
    3. '(' → logprob: -14.500004768371582
    4. ' (' → logprob: -18.500003814697266
    5. '(
' → logprob: -19.000003814697266
    6. ' s' → logprob: -20.500003814697266
    7. ')s' → logprob: -20.750003814697266
    8. ')' → logprob: -21.250003814697266
    9. '((' → logprob: -21.375003814697266
    10. '()' → logprob: -21.500003814697266

Token 190: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.146429223008454e-05
    2. '(j' → logprob: -9.75006103515625
    3. ')' → logprob: -13.75006103515625
    4. 'j' → logprob: -14.12506103515625
    5. '[' → logprob: -15.00006103515625
    6. ')[' → logprob: -15.00006103515625
    7. '```' → logprob: -15.75006103515625
    8. '[s' → logprob: -15.87506103515625
    9. ',j' → logprob: -15.87506103515625
    10. 's' → logprob: -16.25006103515625

Token 191: ':])
' (ID: 109592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00042983482126146555
    2. ':]' → logprob: -8.3754301071167
    3. ':j' → logprob: -9.3754301071167
    4. ':])
' → logprob: -9.5004301071167
    5. ':].' → logprob: -10.5004301071167
    6. '])' → logprob: -11.7504301071167
    7. ':],' → logprob: -13.7504301071167
    8. ':]
' → logprob: -14.0004301071167
    9. ':)' → logprob: -14.8754301071167
    10. 'j' → logprob: -15.0004301071167

Token 192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04747607186436653
    2. '       ' → logprob: -3.922476053237915
    3. '<|end|>' → logprob: -4.422476291656494
    4. '
' → logprob: -4.797476291656494
    5. ')
' → logprob: -6.297476291656494
    6. ')' → logprob: -6.297476291656494
    7. '<|end|>' → logprob: -6.797476291656494
    8. ' jump' → logprob: -7.422476291656494
    9. 'jump' → logprob: -8.172475814819336
    10. ',' → logprob: -8.922475814819336

Token 193: ' jump' (ID: 13843)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9049579501152039
    2. ' jump' → logprob: -0.9049579501152039
    3. 'jump' (adapté à ' jump') → logprob: -1.9049580097198486
    4. '           ' → logprob: -3.9049580097198486
    5. '
' → logprob: -4.9049577713012695
    6. '<|end|>' → logprob: -5.1549577713012695
    7. ')' → logprob: -5.6549577713012695
    8. ')
' → logprob: -6.5299577713012695
    9. '.jump' → logprob: -6.7799577713012695
    10. '<|end|>' → logprob: -7.7799577713012695

Token 194: '_marks' (ID: 196622)
  Prédit: '_marks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_marks' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.125000953674316
    3. '_mark' → logprob: -15.500000953674316
    4. 'marks' → logprob: -17.625
    5. '_masks' → logprob: -17.875
    6. 'Marks' → logprob: -18.125
    7. ' _' → logprob: -18.375
    8. ' Marks' → logprob: -18.75
    9. ' marks' → logprob: -19.375
    10. '_matches' → logprob: -19.5

Token 195: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -15.375
    3. '[j' → logprob: -17.125
    4. '=' → logprob: -17.25
    5. '[I' → logprob: -17.375
    6. '[' → logprob: -18.0
    7. '=[' → logprob: -18.5
    8. '```' → logprob: -18.75
    9. ')[' → logprob: -18.875
    10. '\[' → logprob: -20.0

Token 196: ']=(' (ID: 138510)
  Prédit: ']=('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=(' → logprob: -0.5950503945350647
    2. ']' → logprob: -0.8450503945350647
    3. ']=' → logprob: -3.97005033493042
    4. ']={' → logprob: -10.845050811767578
    5. '=(' → logprob: -10.970050811767578
    6. '=' → logprob: -11.970050811767578
    7. ']='' → logprob: -12.595050811767578
    8. ' ]' → logprob: -12.720050811767578
    9. ']="' → logprob: -12.845050811767578
    10. '[i' → logprob: -13.470050811767578

Token 197: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.6240566083070007e-06
    2. ' t' → logprob: -13.750001907348633
    3. '(t' → logprob: -14.500001907348633
    4. '`t' → logprob: -17.500001907348633
    5. ')t' → logprob: -18.000001907348633
    6. '   ' → logprob: -19.000001907348633
    7. '	t' → logprob: -19.375001907348633
    8. ''t' → logprob: -20.375001907348633
    9. ',t' → logprob: -20.500001907348633
    10. '_t' → logprob: -20.625001907348633

Token 198: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4741421043872833
    2. ',n' → logprob: -0.9741420745849609
    3. ' ,' → logprob: -9.724142074584961
    4. ',
' → logprob: -13.474142074584961
    5. 'n' → logprob: -13.599142074584961
    6. ',int' → logprob: -14.099142074584961
    7. ',j' → logprob: -14.724142074584961
    8. '[n' → logprob: -15.099142074584961
    9. ',num' → logprob: -15.099142074584961
    10. ' n' → logprob: -15.599142074584961

Token 199: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.796184723294573e-06
    2. ')
' → logprob: -12.250005722045898
    3. '<|end|>' → logprob: -14.625005722045898
    4. ' )' → logprob: -14.750005722045898
    5. ')return' → logprob: -16.7500057220459
    6. '),' → logprob: -17.7500057220459
    7. ')#' → logprob: -17.8750057220459
    8. '))' → logprob: -18.3750057220459
    9. ')}}' → logprob: -18.3750057220459
    10. ')

' → logprob: -18.6250057220459

Token 200: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: ' pre' (ID: 876)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3931438624858856
    2. 'pos' → logprob: -2.518143892288208
    3. 'visited' → logprob: -3.018143892288208
    4. '       ' → logprob: -3.143143892288208
    5. 'def' → logprob: -3.643143892288208
    6. 'dist' → logprob: -3.893143892288208
    7. '#' → logprob: -4.268143653869629
    8. 'graph' → logprob: -4.643143653869629
    9. 'distance' → logprob: -4.768143653869629
    10. 'reachable' → logprob: -4.768143653869629

Token 203: 'compute' (ID: 54521)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.24224703013896942
    2. 'dict' → logprob: -2.4922471046447754
    3. 'sum' → logprob: -2.4922471046447754
    4. 'd' → logprob: -3.8672471046447754
    5. 'compute' → logprob: -4.492247104644775
    6. 'v' → logprob: -5.117247104644775
    7. 'vious' → logprob: -5.367247104644775
    8. 'f' → logprob: -6.242247104644775
    9. 'pare' → logprob: -7.242247104644775
    10. 'c' → logprob: -7.492247104644775

Token 204: ':
' (ID: 734)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.650802731513977
    2. 'dist' → logprob: -2.0258026123046875
    3. ' next' → logprob: -2.1508026123046875
    4. ' distances' → logprob: -2.1508026123046875
    5. 'next' → logprob: -2.6508026123046875
    6. ' max' → logprob: -2.9008026123046875
    7. ' graph' → logprob: -3.2758026123046875
    8. ' dp' → logprob: -3.2758026123046875
    9. 'reachable' → logprob: -3.2758026123046875
    10. 'graph' → logprob: -3.5258026123046875

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.574267864227295
    2. 'dp' → logprob: -1.824267864227295
    3. ' next' → logprob: -2.199267864227295
    4. 'next' → logprob: -2.449267864227295
    5. ' graph' → logprob: -2.824267864227295
    6. ' dp' → logprob: -2.949267864227295
    7. ' can' → logprob: -3.074267864227295
    8. 'graph' → logprob: -3.324267864227295
    9. ' reachable' → logprob: -3.324267864227295
    10. 'reachable' → logprob: -3.574267864227295

Token 206: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5146903991699219
    2. 'dist' → logprob: -3.014690399169922
    3. ' dp' → logprob: -3.139690399169922
    4. 'can' → logprob: -3.389690399169922
    5. 'next' → logprob: -3.389690399169922
    6. 'graph' → logprob: -3.514690399169922
    7. 'reachable' → logprob: -3.639690399169922
    8. ' can' → logprob: -4.139690399169922
    9. ' next' → logprob: -4.389690399169922
    10. 'visited' → logprob: -4.389690399169922

Token 207: ' For' (ID: 2214)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6049576997756958
    2. ' dp' → logprob: -2.9799575805664062
    3. 'can' → logprob: -3.1049575805664062
    4. 'next' → logprob: -3.1049575805664062
    5. 'reachable' → logprob: -3.1049575805664062
    6. ' can' → logprob: -3.4799575805664062
    7. 'dist' → logprob: -3.4799575805664062
    8. 'visited' → logprob: -3.7299575805664062
    9. ' reachable' → logprob: -3.7299575805664062
    10. ' next' → logprob: -3.7299575805664062

Token 208: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.8554531931877136
    2. ' i' → logprob: -1.2304532527923584
    3. 'each' → logprob: -1.6054532527923584
    4. 'i' → logprob: -2.7304532527923584
    5. ' all' → logprob: -5.730453014373779
    6. ' every' → logprob: -6.480453014373779
    7. 'all' → logprob: -6.605453014373779
    8. ' next' → logprob: -6.730453014373779
    9. 'e' → logprob: -7.292953014373779
    10. 'next' → logprob: -7.667953014373779

Token 209: ' jump' (ID: 13843)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16265170276165009
    2. 'i' → logprob: -1.9126516580581665
    3. ' position' → logprob: -7.037651538848877
    4. 'position' → logprob: -8.037652015686035
    5. ' index' → logprob: -8.912652015686035
    6. 'index' → logprob: -8.912652015686035
    7. 'v' → logprob: -9.287652015686035
    8. ' v' → logprob: -9.287652015686035
    9. ' mark' → logprob: -9.537652015686035
    10. ' idx' → logprob: -9.537652015686035

Token 210: ' mark' (ID: 1983)
  Prédit: '_marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_marks' → logprob: -0.3911270201206207
    2. '_mark' → logprob: -2.391127109527588
    3. '_points' → logprob: -2.891127109527588
    4. ',' → logprob: -3.516127109527588
    5. 'point' → logprob: -3.516127109527588
    6. 'mark' → logprob: -3.766127109527588
    7. '<|end|>' → logprob: -4.266127109527588
    8. 'distance' → logprob: -4.641127109527588
    9. 'type' → logprob: -5.266127109527588
    10. 'def' → logprob: -5.266127109527588

Token 211: ' type' (ID: 1490)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021805429831147194
    2. ' i' → logprob: -4.521805286407471
    3. ' ,' → logprob: -5.771805286407471
    4. 'type' → logprob: -6.521805286407471
    5. ' type' → logprob: -6.521805286407471
    6. ' in' → logprob: -7.021805286407471
    7. 'i' → logprob: -7.271805286407471
    8. ' at' → logprob: -7.396805286407471
    9. '[i' → logprob: -7.771805286407471
    10. ',i' → logprob: -8.021805763244629

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02713424153625965
    2. ' ,' → logprob: -3.9021341800689697
    3. ' t' → logprob: -6.402134418487549
    4. ' in' → logprob: -6.652134418487549
    5. ':' → logprob: -7.277134418487549
    6. '   ' → logprob: -8.02713394165039
    7. ' s' → logprob: -8.27713394165039
    8. 's' → logprob: -8.40213394165039
    9. 't' → logprob: -8.65213394165039
    10. ' ' → logprob: -8.65213394165039

Token 213: ' number' (ID: 2086)
  Prédit: ' create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' create' → logprob: -1.2332600355148315
    2. ' store' → logprob: -1.4832600355148315
    3. ' positions' → logprob: -1.9832600355148315
    4. ' build' → logprob: -2.608260154724121
    5. ' compute' → logprob: -3.108260154724121
    6. ' next' → logprob: -3.483260154724121
    7. ' from' → logprob: -3.608260154724121
    8. 'from' → logprob: -3.858260154724121
    9. ' calculate' → logprob: -4.233260154724121
    10. ' we' → logprob: -4.233260154724121

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6068355441093445
    2. 's' → logprob: -1.2318356037139893
    3. ':' → logprob: -2.2318356037139893
    4. '=' → logprob: -4.85683536529541
    5. ' =' → logprob: -5.10683536529541
    6. '_to' → logprob: -5.10683536529541
    7. ' ,' → logprob: -5.60683536529541
    8. ' s' → logprob: -5.73183536529541
    9. '<|end|>' → logprob: -5.73183536529541
    10. ']' → logprob: -6.23183536529541

Token 215: ' store' (ID: 4897)
  Prédit: ' store'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' store' → logprob: -0.48681801557540894
    2. ' create' → logprob: -2.4868180751800537
    3. 'store' → logprob: -2.8618180751800537
    4. ' build' → logprob: -3.7368180751800537
    5. '<|end|>' → logprob: -3.8618180751800537
    6. ' we' → logprob: -3.9868180751800537
    7. ' next' → logprob: -4.236817836761475
    8. ' compute' → logprob: -4.361817836761475
    9. ' find' → logprob: -4.361817836761475
    10. ' jump' → logprob: -4.486817836761475

Token 216: ' list' (ID: 1562)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: ' indices' (ID: 30378)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.9900076985359192
    2. 'indices' → logprob: -1.2400076389312744
    3. ' positions' → logprob: -1.3650076389312744
    4. ' indices' → logprob: -2.6150076389312744
    5. 'indexes' → logprob: -4.9900078773498535
    6. ' indexes' → logprob: -6.6150078773498535
    7. 'all' → logprob: -7.4900078773498535
    8. ' all' → logprob: -8.115007400512695
    9. 'occ' → logprob: -8.615007400512695
    10. ' lines' → logprob: -9.115007400512695

Token 219: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6404983997344971
    2. 'from' → logprob: -1.640498399734497
    3. '=' → logprob: -3.015498399734497
    4. ' =' → logprob: -3.265498399734497
    5. ':' → logprob: -3.515498399734497
    6. '
' → logprob: -3.640498399734497
    7. ',' → logprob: -3.640498399734497
    8. '<|end|>' → logprob: -4.015498161315918
    9. ' from' → logprob: -4.515498161315918
    10. '        
' → logprob: -4.640498161315918

Token 220: ' ascending' (ID: 75564)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6410894393920898
    2. 'jump' → logprob: -1.2660894393920898
    3. 'has' → logprob: -2.89108943939209
    4. ' range' → logprob: -2.89108943939209
    5. ' jump' → logprob: -3.39108943939209
    6. '[' → logprob: -4.26608943939209
    7. '       ' → logprob: -5.26608943939209
    8. ' has' → logprob: -5.39108943939209
    9. 'ranges' → logprob: -5.76608943939209
    10. '   ' → logprob: -6.26608943939209

Token 221: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.2555781900882721
    2. ' order' → logprob: -1.5055781602859497
    3. ']' → logprob: -6.38057804107666
    4. ')' → logprob: -7.63057804107666
    5. '<|end|>' → logprob: -7.63057804107666
    6. 'jump' → logprob: -8.25557804107666
    7. '[]' → logprob: -8.88057804107666
    8. 'indices' → logprob: -9.25557804107666
    9. '[' → logprob: -9.50557804107666
    10. '_order' → logprob: -9.50557804107666

Token 222: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027556808665394783
    2. '
' → logprob: -4.402556896209717
    3. '        
' → logprob: -5.027556896209717
    4. ',' → logprob: -6.152556896209717
    5. 'from' → logprob: -6.402556896209717
    6. '<|end|>' → logprob: -6.777556896209717
    7. ' from' → logprob: -6.902556896209717
    8. 'jump' → logprob: -6.902556896209717
    9. ' jump' → logprob: -7.652556896209717
    10. '_jump' → logprob: -8.527556419372559

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10789279639720917
    2. '        
' → logprob: -3.1078927516937256
    3. '  
' → logprob: -3.7328927516937256
    4. ' 
' → logprob: -4.482892990112305
    5. '
' → logprob: -5.357892990112305
    6. '   ' → logprob: -6.232892990112305
    7. '\t' → logprob: -6.357892990112305
    8. '```' → logprob: -6.482892990112305
    9. '\n' → logprob: -6.607892990112305
    10. '    
' → logprob: -6.732892990112305

Token 224: ' jm' (ID: 178927)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.561331033706665
    2. ' from' → logprob: -1.811331033706665
    3. '       ' → logprob: -2.436331033706665
    4. 'types' → logprob: -2.811331033706665
    5. 'jump' → logprob: -2.936331033706665
    6. 'type' → logprob: -3.811331033706665
    7. '        
' → logprob: -4.436330795288086
    8. ' jump' → logprob: -4.686330795288086
    9. 'marks' → logprob: -5.186330795288086
    10. ' types' → logprob: -5.311330795288086

Token 225: '_pos' (ID: 14692)
  Prédit: '_types'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_types' → logprob: -0.8982240557670593
    2. '_indices' → logprob: -1.148224115371704
    3. 'ap' → logprob: -1.898224115371704
    4. 'aps' → logprob: -3.148224115371704
    5. '_positions' → logprob: -3.773224115371704
    6. 'p' → logprob: -4.523223876953125
    7. '_' → logprob: -4.523223876953125
    8. '_indexes' → logprob: -4.773223876953125
    9. '_map' → logprob: -5.023223876953125
    10. '_p' → logprob: -5.648223876953125

Token 226: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14127406477928162
    2. '={}' → logprob: -2.1412739753723145
    3. 's' → logprob: -5.1412739753723145
    4. ' =' → logprob: -5.6412739753723145
    5. '={' → logprob: -5.6412739753723145
    6. '={}
' → logprob: -7.6412739753723145
    7. '={
' → logprob: -8.391274452209473
    8. '=[]' → logprob: -8.391274452209473
    9. '=dict' → logprob: -8.641274452209473
    10. '={'' → logprob: -10.391274452209473

Token 227: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.282920129597187e-05
    2. ' {}' → logprob: -12.250012397766113
    3. 'dict' → logprob: -12.250012397766113
    4. '{}
' → logprob: -13.000012397766113
    5. 'default' → logprob: -14.625012397766113
    6. '{' → logprob: -15.000012397766113
    7. '{})' → logprob: -16.12501335144043
    8. '{}

' → logprob: -16.87501335144043
    9. '={}' → logprob: -17.00001335144043
    10. '{},' → logprob: -17.12501335144043

Token 228: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1146073117852211
    2. '()
' → logprob: -2.239607334136963
    3. '<|end|>' → logprob: -6.989607334136963
    4. '       ' → logprob: -8.114606857299805
    5. ')' → logprob: -8.614606857299805
    6. '()

' → logprob: -9.489606857299805
    7. '<|end|>' → logprob: -9.614606857299805
    8. '.setdefault' → logprob: -9.989606857299805
    9. ']' → logprob: -10.489606857299805
    10. '()]' → logprob: -11.114606857299805

Token 229: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 231: ' (' (ID: 350)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.007182991597801447
    2. 'default' → logprob: -6.132183074951172
    3. 'from' → logprob: -6.507183074951172
    4. ' defaultdict' → logprob: -7.007183074951172
    5. '{' → logprob: -7.132183074951172
    6. '{}
' → logprob: -7.632183074951172
    7. ' {}' → logprob: -7.632183074951172
    8. 'type' → logprob: -8.507183074951172
    9. '()' → logprob: -9.007183074951172
    10. 'import' → logprob: -9.507183074951172

Token 232: 'type' (ID: 2493)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2208901047706604
    2. 'str' → logprob: -1.9708900451660156
    3. '(str' → logprob: -3.3458900451660156
    4. 'tuple' → logprob: -5.470890045166016
    5. 'type' → logprob: -5.720890045166016
    6. 'jump' → logprob: -5.720890045166016
    7. ' (' → logprob: -5.845890045166016
    8. '(t' → logprob: -6.470890045166016
    9. 't' → logprob: -6.470890045166016
    10. '(' → logprob: -6.845890045166016

Token 233: ',' (ID: 11)
  Prédit: ',str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',str' → logprob: -0.8850166201591492
    2. ',' → logprob: -1.135016679763794
    3. '[str' → logprob: -1.510016679763794
    4. ':str' → logprob: -4.135016441345215
    5. 'str' → logprob: -5.260016441345215
    6. '(str' → logprob: -5.260016441345215
    7. ',t' → logprob: -5.635016441345215
    8. ',(' → logprob: -6.010016441345215
    9. ' ,' → logprob: -6.260016441345215
    10. ')' → logprob: -6.510016441345215

Token 234: 'number' (ID: 8096)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6277400851249695
    2. 'str' → logprob: -1.1277401447296143
    3. ')' → logprob: -3.0027401447296143
    4. ' str' → logprob: -3.6277401447296143
    5. 'n' → logprob: -3.7527401447296143
    6. ' int' → logprob: -4.127739906311035
    7. '<|end|>' → logprob: -4.877739906311035
    8. ' n' → logprob: -5.252739906311035
    9. 'number' → logprob: -5.627739906311035
    10. '[int' → logprob: -6.127739906311035

Token 235: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08667430281639099
    2. '):' → logprob: -3.211674213409424
    3. ',' → logprob: -4.336674213409424
    4. '),' → logprob: -4.961674213409424
    5. '):(' → logprob: -5.086674213409424
    6. ')=' → logprob: -5.461674213409424
    7. ' )' → logprob: -5.586674213409424
    8. ')]' → logprob: -5.586674213409424
    9. '),(' → logprob: -6.336674213409424
    10. ':' → logprob: -7.336674213409424

Token 236: ' ->' (ID: 2747)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2199421375989914
    2. ':' → logprob: -2.344942092895508
    3. '=[]' → logprob: -2.594942092895508
    4. ' =' → logprob: -3.969942092895508
    5. ':list' → logprob: -6.219942092895508
    6. ')' → logprob: -6.344942092895508
    7. '=[]
' → logprob: -6.719942092895508
    8. '[]' → logprob: -6.844942092895508
    9. ',' → logprob: -7.344942092895508
    10. '=>' → logprob: -8.344942092895508

Token 237: ' sorted' (ID: 20099)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.012098586186766624
    2. ' []' → logprob: -4.512098789215088
    3. '[' → logprob: -7.012098789215088
    4. 'list' → logprob: -9.63709831237793
    5. ' [' → logprob: -9.88709831237793
    6. '[list' → logprob: -11.01209831237793
    7. '[]>' → logprob: -11.76209831237793
    8. ' list' → logprob: -12.51209831237793
    9. '[]}' → logprob: -12.76209831237793
    10. '[List' → logprob: -14.01209831237793

Token 238: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38755762577056885
    2. '[]' → logprob: -1.2625576257705688
    3. 'list' → logprob: -3.6375575065612793
    4. ' [' → logprob: -5.137557506561279
    5. ' list' → logprob: -6.137557506561279
    6. '[
' → logprob: -6.637557506561279
    7. '[list' → logprob: -6.637557506561279
    8. ' []' → logprob: -7.137557506561279
    9. '[array' → logprob: -8.887557983398438
    10. 'set' → logprob: -9.387557983398438

Token 239: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 240: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.06842900067567825
    2. ' indices' → logprob: -2.9434289932250977
    3. 'positions' → logprob: -4.818428993225098
    4. ' positions' → logprob: -6.068428993225098
    5. '[int' → logprob: -6.318428993225098
    6. 'indexes' → logprob: -7.443428993225098
    7. '[]' → logprob: -8.568428993225098
    8. 'int' → logprob: -8.818428993225098
    9. 'ints' → logprob: -8.943428993225098
    10. '[' → logprob: -9.568428993225098

Token 241: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6458094120025635
    2. '<|end|>' → logprob: -1.1458094120025635
    3. '
' → logprob: -1.8958094120025635
    4. '<|end|>' → logprob: -5.520809173583984
    5. '        
' → logprob: -5.895809173583984
    6. ',' → logprob: -8.895809173583984
    7. '
' → logprob: -9.020809173583984
    8. '  
' → logprob: -9.395809173583984
    9. ')' → logprob: -9.520809173583984
    10. '\n' → logprob: -9.520809173583984

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22833748161792755
    2. '
' → logprob: -2.603337526321411
    3. '	' → logprob: -3.603337526321411
    4. '		
' → logprob: -3.853337526321411
    5. '<|end|>' → logprob: -3.853337526321411
    6. '        
' → logprob: -3.978337526321411
    7. '\t' → logprob: -4.353337287902832
    8. ' for' → logprob: -5.728337287902832
    9. 'for' → logprob: -5.853337287902832
    10. '  
' → logprob: -5.978337287902832

Token 243: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.8691030144691467
    2. '       ' → logprob: -1.244102954864502
    3. ' for' → logprob: -1.244102954864502
    4. '        
' → logprob: -6.619102954864502
    5. '
' → logprob: -7.119102954864502
    6. '<|end|>' → logprob: -7.119102954864502
    7. '	for' → logprob: -7.744102954864502
    8. 'import' → logprob: -8.99410343170166
    9. ' 
' → logprob: -9.11910343170166
    10. '   ' → logprob: -9.11910343170166

Token 244: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04913659393787384
    2. ' i' → logprob: -3.0491366386413574
    3. '(i' → logprob: -8.4241361618042
    4. ' (' → logprob: -8.7991361618042
    5. 'idx' → logprob: -9.9241361618042
    6. '(' → logprob: -10.1741361618042
    7. 't' → logprob: -11.0491361618042
    8. ' idx' → logprob: -11.1741361618042
    9. 'k' → logprob: -11.2991361618042
    10. '_i' → logprob: -12.1741361618042

Token 245: ',(' (ID: 27243)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0775652676820755
    2. ',' → logprob: -2.9525651931762695
    3. 'in' → logprob: -3.8275651931762695
    4. ' ,' → logprob: -7.5775651931762695
    5. ',j' → logprob: -9.70256519317627
    6. ',in' → logprob: -10.07756519317627
    7. 'range' → logprob: -11.07756519317627
    8. ' ' → logprob: -11.57756519317627
    9. ',n' → logprob: -12.07756519317627
    10. ' range' → logprob: -13.20256519317627

Token 246: 't' (ID: 83)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.2087825983762741
    2. 't' → logprob: -1.9587825536727905
    3. 'None' → logprob: -4.58378267288208
    4. 'jm' → logprob: -4.70878267288208
    5. 'type' → logprob: -4.83378267288208
    6. 'tm' → logprob: -5.08378267288208
    7. 'mark' → logprob: -6.20878267288208
    8. 'token' → logprob: -6.45878267288208
    9. ' jump' → logprob: -6.70878267288208
    10. 'lambda' → logprob: -6.83378267288208

Token 247: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47391366958618164
    2. ',n' → logprob: -1.4739136695861816
    3. ',j' → logprob: -2.4739136695861816
    4. ',v' → logprob: -3.2239136695861816
    5. ',m' → logprob: -4.598913669586182
    6. ',x' → logprob: -6.348913669586182
    7. ',None' → logprob: -6.598913669586182
    8. ',c' → logprob: -6.723913669586182
    9. ',val' → logprob: -6.723913669586182
    10. ',pos' → logprob: -6.723913669586182

Token 248: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.843177233240567e-05
    2. ')=' → logprob: -11.375018119812012
    3. ' )' → logprob: -13.000018119812012
    4. ')is' → logprob: -13.875018119812012
    5. ')
' → logprob: -14.125018119812012
    6. 'in' → logprob: -14.250018119812012
    7. 't' → logprob: -15.000018119812012
    8. ' in' → logprob: -15.125018119812012
    9. ')t' → logprob: -15.125018119812012
    10. '))' → logprob: -15.375018119812012

Token 249: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10046222805976868
    2. 'in' → logprob: -2.3504621982574463
    3. ')' → logprob: -8.350461959838867
    4. 's' → logprob: -13.100461959838867
    5. '=' → logprob: -13.350461959838867
    6. ' ' → logprob: -13.600461959838867
    7. ' None' → logprob: -13.725461959838867
    8. 'None' → logprob: -13.850461959838867
    9. ',' → logprob: -13.975461959838867
    10. 'import' → logprob: -14.100461959838867

Token 250: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.02975083328783512
    2. ' enumerate' → logprob: -3.5297508239746094
    3. 'enum' → logprob: -15.90475082397461
    4. 'en' → logprob: -17.40475082397461
    5. '```' → logprob: -17.65475082397461
    6. 'filter' → logprob: -17.77975082397461
    7. '((' → logprob: -17.77975082397461
    8. 'zip' → logprob: -17.90475082397461
    9. 'jump' → logprob: -17.90475082397461
    10. '(en' → logprob: -18.15475082397461

Token 251: '(j' (ID: 4997)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.0069939615204930305
    2. ' jump' → logprob: -5.631993770599365
    3. '(j' → logprob: -6.256993770599365
    4. 'enumer' → logprob: -7.006993770599365
    5. '[j' → logprob: -7.756993770599365
    6. ' enumerate' → logprob: -10.381994247436523
    7. 'filter' → logprob: -10.506994247436523
    8. '[(' → logprob: -10.756994247436523
    9. '((' → logprob: -11.006994247436523
    10. '.jump' → logprob: -11.506994247436523

Token 252: 'ump' (ID: 2643)
  Prédit: 'ump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ump' → logprob: -1.0325924449716695e-05
    2. 'jump' → logprob: -11.75001049041748
    3. 'umps' → logprob: -13.37501049041748
    4. ' jump' → logprob: -14.75001049041748
    5. '_jump' → logprob: -15.00001049041748
    6. 'um' → logprob: -15.87501049041748
    7. 'mp' → logprob: -16.875009536743164
    8. 'up' → logprob: -18.375009536743164
    9. 'umped' → logprob: -18.500009536743164
    10. 'u' → logprob: -18.625009536743164

Token 253: '_marks' (ID: 196622)
  Prédit: '_marks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_marks' → logprob: -6.704273118884885e-07
    2. 'marks' → logprob: -15.500000953674316
    3. '_mark' → logprob: -16.25
    4. '_' → logprob: -16.625
    5. ')_' → logprob: -16.75
    6. 'Marks' → logprob: -16.875
    7. ' Marks' → logprob: -16.875
    8. ')' → logprob: -17.0
    9. ' marks' → logprob: -18.25
    10. '_masks' → logprob: -18.375

Token 254: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.19396787881851196
    2. '):' → logprob: -2.443967819213867
    3. ')' → logprob: -2.818967819213867
    4. ' if' → logprob: -4.318967819213867
    5. ' or' → logprob: -4.318967819213867
    6. '       ' → logprob: -6.443967819213867
    7. '   ' → logprob: -7.443967819213867
    8. 'if' → logprob: -7.943967819213867
    9. '):
' → logprob: -8.693967819213867
    10. ' ):
' → logprob: -8.693967819213867

Token 255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6218534708023071
    2. '       ' → logprob: -0.8718534708023071
    3. ' ' → logprob: -4.371853351593018
    4. ' if' → logprob: -4.371853351593018
    5. ':' → logprob: -5.121853351593018
    6. '   ' → logprob: -5.496853351593018
    7. '<|end|>' → logprob: -5.746853351593018
    8. ',' → logprob: -6.371853351593018
    9. ' None' → logprob: -6.496853351593018
    10. '```' → logprob: -7.871853351593018

Token 256: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07399889826774597
    2. '           ' → logprob: -2.8239989280700684
    3. 'if' (adapté à ' if') → logprob: -4.573998928070068
    4. '   ' → logprob: -7.198998928070068
    5. ' ' → logprob: -7.823998928070068
    6. '       ' → logprob: -8.32399845123291
    7. '<|end|>' → logprob: -8.82399845123291
    8. ' None' → logprob: -10.19899845123291
    9. '	if' → logprob: -11.19899845123291
    10. '               ' → logprob: -11.19899845123291

Token 257: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04117618128657341
    2. ' t' → logprob: -3.2911760807037354
    3. '(t' → logprob: -5.7911763191223145
    4. ' (' → logprob: -9.666175842285156
    5. '   ' → logprob: -12.291175842285156
    6. '	t' → logprob: -12.541175842285156
    7. ' not' → logprob: -13.791175842285156
    8. ' ' → logprob: -14.041175842285156
    9. 'not' → logprob: -14.791175842285156
    10. '           ' → logprob: -15.041175842285156

Token 258: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.531718373298645
    2. 'is' → logprob: -1.656718373298645
    3. ' not' → logprob: -1.656718373298645
    4. 'not' → logprob: -3.5317182540893555
    5. ':' → logprob: -8.156718254089355
    6. 'and' → logprob: -8.156718254089355
    7. 'in' → logprob: -8.281718254089355
    8. ',' → logprob: -8.281718254089355
    9. '!=' → logprob: -8.406718254089355
    10. '<|end|>' → logprob: -9.531718254089355

Token 259: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.10483010858297348
    2. 'not' → logprob: -2.354830026626587
    3. ' not' → logprob: -5.854830265045166
    4. ' None' → logprob: -6.354830265045166
    5. 'Not' → logprob: -12.229829788208008
    6. 'none' → logprob: -13.604829788208008
    7. '   ' → logprob: -14.354829788208008
    8. '(None' → logprob: -14.354829788208008
    9. '=None' → logprob: -14.979829788208008
    10. '_None' → logprob: -15.979829788208008

Token 260: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36795559525489807
    2. ':
' → logprob: -1.9929555654525757
    3. '               ' → logprob: -2.2429556846618652
    4. ' or' → logprob: -3.1179556846618652
    5. '           ' → logprob: -3.9929556846618652
    6. ':return' → logprob: -7.117955684661865
    7. ' continue' → logprob: -7.242955684661865
    8. 'continue' → logprob: -8.242955207824707
    9. ',' → logprob: -8.367955207824707
    10. '       ' → logprob: -8.492955207824707

Token 261: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024359144270420074
    2. ' continue' → logprob: -4.399359226226807
    3. ':' → logprob: -5.399359226226807
    4. '           ' → logprob: -5.524359226226807
    5. ':
' → logprob: -6.274359226226807
    6. 'continue' → logprob: -6.774359226226807
    7. ',' → logprob: -9.774358749389648
    8. '	continue' → logprob: -10.024358749389648
    9. '       ' → logprob: -10.149358749389648
    10. ' or' → logprob: -10.649358749389648

Token 262: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1111382246017456
    2. 'continue' (adapté à ' continue') → logprob: -1.1111382246017456
    3. ' continue' → logprob: -1.2361382246017456
    4. '           ' → logprob: -2.986138343811035
    5. '	continue' → logprob: -8.236138343811035
    6. '   ' → logprob: -8.611138343811035
    7. '       ' → logprob: -9.111138343811035
    8. '_continue' → logprob: -10.236138343811035
    9. ' continues' → logprob: -11.611138343811035
    10. ':' → logprob: -11.736138343811035

Token 263: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005267315078526735
    2. '       ' → logprob: -5.380267143249512
    3. ',' → logprob: -8.630267143249512
    4. ' if' → logprob: -8.755267143249512
    5. '
' → logprob: -9.380267143249512
    6. '	       ' → logprob: -10.130267143249512
    7. 'if' → logprob: -10.755267143249512
    8. '               ' → logprob: -10.880267143249512
    9. '            
' → logprob: -10.880267143249512
    10. '   ' → logprob: -11.005267143249512

Token 264: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04497066140174866
    2. '       ' → logprob: -3.169970750808716
    3. ' if' → logprob: -7.794970512390137
    4. '        
' → logprob: -8.169970512390137
    5. '
' → logprob: -8.419970512390137
    6. '<|end|>' → logprob: -8.419970512390137
    7. '   ' → logprob: -8.669970512390137
    8. '            
' → logprob: -8.669970512390137
    9. 'if' → logprob: -9.419970512390137
    10. ',' → logprob: -9.544970512390137

Token 265: ' if' (ID: 538)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.4934660494327545
    2. '           ' → logprob: -1.2434660196304321
    3. ' key' → logprob: -2.8684661388397217
    4. '       ' → logprob: -3.2434661388397217
    5. 'if' (adapté à ' if') → logprob: -5.868465900421143
    6. '   ' → logprob: -7.243465900421143
    7. ' if' → logprob: -7.368465900421143
    8. 'k' → logprob: -7.993465900421143
    9. '	key' → logprob: -8.4934663772583
    10. '
' → logprob: -8.7434663772583

Token 266: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2811819314956665
    2. '(t' → logprob: -1.4061819314956665
    3. ' not' → logprob: -11.281182289123535
    4. '(not' → logprob: -12.406182289123535
    5. ' t' → logprob: -12.656182289123535
    6. '(' → logprob: -12.781182289123535
    7. '(j' → logprob: -12.906182289123535
    8. ' ' → logprob: -13.406182289123535
    9. 'not' → logprob: -13.531182289123535
    10. 't' → logprob: -13.656182289123535

Token 267: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.002391229383647442
    2. ' t' → logprob: -6.127391338348389
    3. '(t' → logprob: -8.50239086151123
    4. ' (' → logprob: -14.25239086151123
    5. ')t' → logprob: -14.25239086151123
    6. ',t' → logprob: -14.50239086151123
    7. '`t' → logprob: -14.50239086151123
    8. '           ' → logprob: -15.37739086151123
    9. '	t' → logprob: -15.87739086151123
    10. '   ' → logprob: -16.752391815185547

Token 268: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4370373785495758
    2. ',n' → logprob: -1.3120373487472534
    3. ',t' → logprob: -2.937037467956543
    4. ' not' → logprob: -3.562037467956543
    5. ' ,' → logprob: -6.437037467956543
    6. ',i' → logprob: -7.687037467956543
    7. 'not' → logprob: -7.812037467956543
    8. ')' → logprob: -8.437037467956543
    9. ',(' → logprob: -9.187037467956543
    10. ',None' → logprob: -9.187037467956543

Token 269: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008641763124614954
    2. ' not' → logprob: -7.375864028930664
    3. 'not' → logprob: -8.500864028930664
    4. ']' → logprob: -11.375864028930664
    5. ')t' → logprob: -11.625864028930664
    6. ' )' → logprob: -12.125864028930664
    7. ')==' → logprob: -12.750864028930664
    8. '   ' → logprob: -14.000864028930664
    9. '])' → logprob: -14.625864028930664
    10. ')set' → logprob: -14.750864028930664

Token 270: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7018746733665466
    2. 'not' → logprob: -0.7018746733665466
    3. ')' → logprob: -4.826874732971191
    4. ']' → logprob: -7.326874732971191
    5. '	not' → logprob: -12.076874732971191
    6. 'in' → logprob: -12.451874732971191
    7. ' )' → logprob: -13.201874732971191
    8. ':not' → logprob: -13.451874732971191
    9. '=' → logprob: -13.701874732971191
    10. '.setdefault' → logprob: -14.576874732971191

Token 271: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5236481428146362
    2. ' in' → logprob: -0.8986481428146362
    3. ' jm' → logprob: -8.273648262023926
    4. 'jm' → logprob: -8.523648262023926
    5. ')' → logprob: -10.023648262023926
    6. '           ' → logprob: -11.773648262023926
    7. '<|end|>' → logprob: -12.648648262023926
    8. ']' → logprob: -12.648648262023926
    9. '<|end|>' → logprob: -13.398648262023926
    10. 'jmp' → logprob: -13.523648262023926

Token 272: ' jm' (ID: 178927)
  Prédit: 'jm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jm' → logprob: -0.0006271334132179618
    2. ' jm' → logprob: -7.375627040863037
    3. 'jmp' → logprob: -15.000627517700195
    4. 'jim' → logprob: -16.750627517700195
    5. 'jum' → logprob: -17.625627517700195
    6. '   ' → logprob: -17.750627517700195
    7. 'jump' → logprob: -18.000627517700195
    8. 'jn' → logprob: -18.250627517700195
    9. 'JM' → logprob: -18.375627517700195
    10. 'j' → logprob: -18.875627517700195

Token 273: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0024849306792020798
    2. 'pos' → logprob: -6.0024847984313965
    3. ':' → logprob: -13.002485275268555
    4. 'Pos' → logprob: -13.252485275268555
    5. ')' → logprob: -13.752485275268555
    6. ':
' → logprob: -14.377485275268555
    7. '_POS' → logprob: -14.752485275268555
    8. '_positions' → logprob: -14.752485275268555
    9. 'positions' → logprob: -15.127485275268555
    10. '   ' → logprob: -15.252485275268555

Token 274: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1504770964384079
    2. ':
' → logprob: -2.025477170944214
    3. '=' → logprob: -4.900476932525635
    4. '.setdefault' → logprob: -8.900477409362793
    5. '):
' → logprob: -9.650477409362793
    6. '):' → logprob: -10.775477409362793
    7. ':
' → logprob: -11.400477409362793
    8. ':j' → logprob: -11.525477409362793
    9. '[j' → logprob: -11.900477409362793
    10. ' =' → logprob: -12.025477409362793

Token 275: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.40960443019866943
    2. '               ' → logprob: -1.2846044301986694
    3. ':' → logprob: -3.284604549407959
    4. '           ' → logprob: -4.784604549407959
    5. '):
' → logprob: -4.784604549407959
    6. 'jm' → logprob: -6.159604549407959
    7. '<|end|>' → logprob: -7.409604549407959
    8. '[j' → logprob: -7.534604549407959
    9. '```' → logprob: -8.0346040725708
    10. ' jm' → logprob: -8.2846040725708

Token 276: ' jm' (ID: 178927)
  Prédit: 'jm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jm' (adapté à ' jm') → logprob: -0.061967913061380386
    2. ' jm' → logprob: -2.8119678497314453
    3. 'jmp' → logprob: -16.436967849731445
    4. 'j' → logprob: -16.686967849731445
    5. '[j' → logprob: -16.811967849731445
    6. '[]' → logprob: -16.936967849731445
    7. '           ' → logprob: -16.936967849731445
    8. '               ' → logprob: -17.936967849731445
    9. '   ' → logprob: -18.311967849731445
    10. '                   ' → logprob: -18.561967849731445

Token 277: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -9.674858301877975e-05
    2. 'pos' → logprob: -9.250096321105957
    3. '\' → logprob: -15.875096321105957
    4. '[' → logprob: -16.000097274780273
    5. '[pos' → logprob: -16.000097274780273
    6. '	pos' → logprob: -17.125097274780273
    7. '_positions' → logprob: -17.250097274780273
    8. 'Pos' → logprob: -17.500097274780273
    9. '_' → logprob: -17.875097274780273
    10. 't' → logprob: -18.000097274780273

Token 278: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -4.179569077678025e-05
    2. '[t' → logprob: -10.125041961669922
    3. '[j' → logprob: -13.500041961669922
    4. '(t' → logprob: -16.500041961669922
    5. '[' → logprob: -16.625041961669922
    6. '=(' → logprob: -18.125041961669922
    7. ' [(' → logprob: -18.500041961669922
    8. '((' → logprob: -19.500041961669922
    9. '[((' → logprob: -19.625041961669922
    10. '[
' → logprob: -20.000041961669922

Token 279: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -3.054500666621607e-06
    2. ' t' → logprob: -13.37500286102295
    3. '(t' → logprob: -13.87500286102295
    4. ')t' → logprob: -15.50000286102295
    5. '`t' → logprob: -15.62500286102295
    6. '	t' → logprob: -17.125003814697266
    7. '<|end|>' → logprob: -18.000003814697266
    8. ',t' → logprob: -19.125003814697266
    9. '_t' → logprob: -19.125003814697266
    10. ''t' → logprob: -19.500003814697266

Token 280: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.003718011314049363
    2. ',' → logprob: -5.62871789932251
    3. 'n' → logprob: -10.003718376159668
    4. '
' → logprob: -11.003718376159668
    5. ' ,' → logprob: -11.128718376159668
    6. '[n' → logprob: -11.128718376159668
    7. ')]' → logprob: -12.378718376159668
    8. ',
' → logprob: -12.378718376159668
    9. '(n' → logprob: -12.503718376159668
    10. '),' → logprob: -13.253718376159668

Token 281: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.355685293674469
    2. ')' → logprob: -1.2306852340698242
    3. ']' → logprob: -5.480685234069824
    4. ']=' → logprob: -6.355685234069824
    5. '])' → logprob: -6.730685234069824
    6. ')=' → logprob: -9.855685234069824
    7. ']]' → logprob: -10.730685234069824
    8. ']]=' → logprob: -11.105685234069824
    9. '=[]' → logprob: -11.355685234069824
    10. '=' → logprob: -12.730685234069824

Token 282: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34613582491874695
    2. '=[]' → logprob: -1.3461358547210693
    3. ' =' → logprob: -3.8461358547210693
    4. ']=' → logprob: -4.59613561630249
    5. ']' → logprob: -7.22113561630249
    6. '=[]
' → logprob: -9.346136093139648
    7. '=[' → logprob: -10.346136093139648
    8. ')=' → logprob: -11.221136093139648
    9. '=[]
' → logprob: -11.596136093139648
    10. ')' → logprob: -12.346136093139648

Token 283: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00014716439181938767
    2. '[' → logprob: -9.000146865844727
    3. '[]
' → logprob: -11.250146865844727
    4. '[]}' → logprob: -11.875146865844727
    5. ' []' → logprob: -13.750146865844727
    6. '[]>' → logprob: -14.125146865844727
    7. '[])' → logprob: -14.125146865844727
    8. '[i' → logprob: -14.625146865844727
    9. '[]

' → logprob: -15.250146865844727
    10. '[int' → logprob: -15.625146865844727

Token 284: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.894790981779806e-05
    2. '<|end|>' → logprob: -10.500048637390137
    3. '<|end|>' → logprob: -11.625048637390137
    4. 'jm' → logprob: -12.125048637390137
    5. '```' → logprob: -12.875048637390137
    6. '
' → logprob: -14.500048637390137
    7. '	       ' → logprob: -14.625048637390137
    8. '	   ' → logprob: -15.125048637390137
    9. ' jm' → logprob: -15.125048637390137
    10. '[j' → logprob: -15.250048637390137

Token 285: ' jm' (ID: 178927)
  Prédit: 'jm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jm' (adapté à ' jm') → logprob: -0.004078997299075127
    2. ' jm' → logprob: -5.5040788650512695
    3. '           ' → logprob: -14.62907886505127
    4. 'jmp' → logprob: -16.879079818725586
    5. 'j' → logprob: -18.004079818725586
    6. 'jn' → logprob: -19.504079818725586
    7. 'jk' → logprob: -20.629079818725586
    8. 'jp' → logprob: -20.879079818725586
    9. '               ' → logprob: -20.879079818725586
    10. 'jf' → logprob: -20.879079818725586

Token 286: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0005592276575043797
    2. '[(' → logprob: -7.750559329986572
    3. 'pos' → logprob: -9.000558853149414
    4. '[t' → logprob: -13.125558853149414
    5. '[' → logprob: -13.375558853149414
    6. '[pos' → logprob: -14.875558853149414
    7. 'Pos' → logprob: -15.000558853149414
    8. '```' → logprob: -16.000558853149414
    9. 't' → logprob: -16.125558853149414
    10. '   ' → logprob: -16.250558853149414

Token 287: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: 0.0
    2. '[' → logprob: -18.375
    3. '[t' → logprob: -18.75
    4. '(t' → logprob: -20.75
    5. ' [(' → logprob: -21.625
    6. '((' → logprob: -21.75
    7. '
' → logprob: -22.5
    8. '[
' → logprob: -22.625
    9. '(' → logprob: -22.75
    10. '   ' → logprob: -22.75

Token 288: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -4.47757811343763e-05
    2. '(t' → logprob: -10.125044822692871
    3. ' t' → logprob: -12.750044822692871
    4. ')t' → logprob: -13.625044822692871
    5. '[t' → logprob: -15.125044822692871
    6. '	t' → logprob: -16.250043869018555
    7. '_t' → logprob: -17.000043869018555
    8. ')' → logprob: -17.250043869018555
    9. '`t' → logprob: -17.500043869018555
    10. ',t' → logprob: -17.875043869018555

Token 289: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.007482041604816914
    2. ',' → logprob: -5.507482051849365
    3. ',i' → logprob: -6.132482051849365
    4. ',t' → logprob: -7.132482051849365
    5. 'n' → logprob: -8.632481575012207
    6. '[n' → logprob: -10.007481575012207
    7. 't' → logprob: -10.257481575012207
    8. ',(' → logprob: -10.632481575012207
    9. '(n' → logprob: -11.007481575012207
    10. '[' → logprob: -11.132481575012207

Token 290: ')].' (ID: 58800)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.002019878476858139
    2. ')].' → logprob: -6.627019882202148
    3. ']).' → logprob: -7.877019882202148
    4. ').' → logprob: -8.127019882202148
    5. ']].' → logprob: -11.752019882202148
    6. '.append' → logprob: -12.377019882202148
    7. ']' → logprob: -12.502019882202148
    8. ']').' → logprob: -13.502019882202148
    9. ' ].' → logprob: -14.627019882202148
    10. 'append' → logprob: -14.877019882202148

Token 291: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. '.append' → logprob: -16.75
    3. ' append' → logprob: -17.0
    4. 'appen' → logprob: -21.0
    5. '	append' → logprob: -21.125
    6. 'app' → logprob: -21.5
    7. '_append' → logprob: -21.5
    8. 'Append' → logprob: -22.5
    9. '```' → logprob: -23.75
    10. 'add' → logprob: -24.25

Token 292: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.038097720593214035
    2. '(i' → logprob: -3.288097620010376
    3. ' i' → logprob: -9.788097381591797
    4. ')i' → logprob: -16.163097381591797
    5. '	i' → logprob: -17.538097381591797
    6. '{i' → logprob: -17.788097381591797
    7. ',i' → logprob: -18.663097381591797
    8. '(' → logprob: -18.663097381591797
    9. '[i' → logprob: -18.663097381591797
    10. '   ' → logprob: -18.788097381591797

Token 293: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ')
' → logprob: -12.625005722045898
    3. ' )' → logprob: -13.500005722045898
    4. ')return' → logprob: -15.625005722045898
    5. '       ' → logprob: -16.3750057220459
    6. '<|end|>' → logprob: -16.6250057220459
    7. ')

' → logprob: -17.0000057220459
    8. ')#' → logprob: -17.2500057220459
    9. '))' → logprob: -17.6250057220459
    10. ')}' → logprob: -17.7500057220459

Token 294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3398370146751404
    2. '<|end|>' → logprob: -1.3398370742797852
    3. '   ' → logprob: -4.714837074279785
    4. '<|end|>' → logprob: -5.464837074279785
    5. ' for' → logprob: -6.089837074279785
    6. '        
' → logprob: -6.339837074279785
    7. ',' → logprob: -6.464837074279785
    8. '    ' → logprob: -6.839837074279785
    9. '        ' → logprob: -7.339837074279785
    10. ')' → logprob: -7.339837074279785

Token 295: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 296: ' store' (ID: 4897)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5901108384132385
    2. 'def' → logprob: -2.0901107788085938
    3. 'from' → logprob: -2.5901107788085938
    4. 'dp' → logprob: -2.5901107788085938
    5. 'for' → logprob: -2.8401107788085938
    6. 'import' → logprob: -2.9651107788085938
    7. '       ' → logprob: -3.9651107788085938
    8. '#' → logprob: -3.9651107788085938
    9. '   ' → logprob: -5.340110778808594
    10. 'pos' → logprob: -5.715110778808594

Token 297: ' for' (ID: 395)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.186194658279419
    2. ' next' → logprob: -1.811194658279419
    3. ' visited' → logprob: -2.186194658279419
    4. 'next' → logprob: -2.811194658279419
    5. 'dp' → logprob: -3.311194658279419
    6. 'reachable' → logprob: -4.31119441986084
    7. ' graph' → logprob: -4.56119441986084
    8. 'jump' → logprob: -4.56119441986084
    9. ' reachable' → logprob: -4.56119441986084
    10. ' dp' → logprob: -4.56119441986084

Token 298: ' jump' (ID: 13843)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.4096396267414093
    2. 'each' → logprob: -1.284639596939087
    3. ' next' → logprob: -3.784639596939087
    4. 'next' → logprob: -5.034639835357666
    5. 'i' → logprob: -5.409639835357666
    6. ' i' → logprob: -5.409639835357666
    7. ' (' → logprob: -6.159639835357666
    8. ' has' → logprob: -6.409639835357666
    9. ' fast' → logprob: -6.534639835357666
    10. '(i' → logprob: -6.659639835357666

Token 299: ' mark' (ID: 1983)
  Prédit: '_targets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_targets' → logprob: -0.2932398021221161
    2. 'dest' → logprob: -3.2932398319244385
    3. '_points' → logprob: -3.9182398319244385
    4. '_next' → logprob: -3.9182398319244385
    5. '_dest' → logprob: -4.168239593505859
    6. 'next' → logprob: -4.168239593505859
    7. 'targets' → logprob: -4.418239593505859
    8. '_ranges' → logprob: -4.668239593505859
    9. 'dist' → logprob: -4.918239593505859
    10. 'from' → logprob: -4.918239593505859

Token 300: ' type' (ID: 1490)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.1589866876602173
    2. '_next' → logprob: -2.0339865684509277
    3. 'types' → logprob: -2.2839865684509277
    4. 'type' → logprob: -2.5339865684509277
    5. '_types' → logprob: -3.2839865684509277
    6. '_type' → logprob: -3.7839865684509277
    7. 'count' → logprob: -3.7839865684509277
    8. 'indices' → logprob: -3.9089865684509277
    9. 'last' → logprob: -4.408986568450928
    10. '_count' → logprob: -4.533986568450928

Token 301: ' t' (ID: 260)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5042826533317566
    2. '_' → logprob: -2.8792827129364014
    3. '_counts' → logprob: -2.8792827129364014
    4. '_types' → logprob: -3.0042827129364014
    5. '_to' → logprob: -3.3792827129364014
    6. '_last' → logprob: -4.004282474517822
    7. '_map' → logprob: -4.379282474517822
    8. '_s' → logprob: -4.379282474517822
    9. ' =' → logprob: -4.504282474517822
    10. '_chars' → logprob: -4.629282474517822

Token 302: ' the' (ID: 290)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8423223495483398
    2. '_next' → logprob: -1.8423223495483398
    3. '       ' → logprob: -2.34232234954834
    4. 'and' → logprob: -2.84232234954834
    5. '_last' → logprob: -2.84232234954834
    6. 'next' → logprob: -2.96732234954834
    7. 'indices' → logprob: -3.46732234954834
    8. 'for' → logprob: -3.46732234954834
    9. ' and' → logprob: -3.59232234954834
    10. 'max' → logprob: -3.71732234954834

Token 303: ' index' (ID: 3472)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.6132745742797852
    2. ' smallest' → logprob: -1.8632745742797852
    3. ' minimum' → logprob: -2.363274574279785
    4. ' minimal' → logprob: -2.613274574279785
    5. 'max' → logprob: -2.863274574279785
    6. 'next' → logprob: -2.988274574279785
    7. 'min' → logprob: -3.113274574279785
    8. 'minimum' → logprob: -3.238274574279785
    9. ' list' → logprob: -3.613274574279785
    10. ' min' → logprob: -3.613274574279785

Token 304: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07929126173257828
    2. 'es' → logprob: -3.204291343688965
    3. ' lists' → logprob: -4.704291343688965
    4. ' of' → logprob: -4.954291343688965
    5. '_lists' → logprob: -5.079291343688965
    6. '<|end|>' → logprob: -5.829291343688965
    7. '_list' → logprob: -6.829291343688965
    8. '0' → logprob: -7.079291343688965
    9. ' ranges' → logprob: -7.329291343688965
    10. 'lists' → logprob: -7.329291343688965

Token 305: ' most' (ID: 1645)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.559609055519104
    2. '0' → logprob: -1.684609055519104
    3. 'the' → logprob: -1.809609055519104
    4. 't' → logprob: -1.809609055519104
    5. 'last' → logprob: -2.6846089363098145
    6. 'current' → logprob: -3.0596089363098145
    7. '(' → logprob: -3.9346089363098145
    8. ' next' → logprob: -4.1846089363098145
    9. '#' → logprob: -4.1846089363098145
    10. 'i' → logprob: -4.4346089363098145

Token 306: ' recently' (ID: 8422)
  Prédit: ' recent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recent' → logprob: -0.697475016117096
    2. 'recent' → logprob: -0.697475016117096
    3. '_recent' → logprob: -5.572474956512451
    4. ' recently' → logprob: -7.822474956512451
    5. '<|end|>' → logprob: -9.82247543334961
    6. 'right' → logprob: -11.32247543334961
    7. 'advanced' → logprob: -11.82247543334961
    8. 'last' → logprob: -11.82247543334961
    9. 'Recent' → logprob: -11.94747543334961
    10. ' ' → logprob: -12.82247543334961

Token 307: ' read' (ID: 1729)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6091803312301636
    2. 'processed' → logprob: -1.1091803312301636
    3. 'added' → logprob: -3.609180450439453
    4. ' processed' → logprob: -3.609180450439453
    5. 'seen' → logprob: -3.984180450439453
    6. 'stored' → logprob: -4.234180450439453
    7. ' visited' → logprob: -4.609180450439453
    8. 'used' → logprob: -4.984180450439453
    9. ' stored' → logprob: -4.984180450439453
    10. 'occur' → logprob: -5.859180450439453

Token 308: ' letter' (ID: 10263)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1867486238479614
    2. '<|end|>' → logprob: -1.6867486238479614
    3. 'position' → logprob: -2.561748504638672
    4. 's' → logprob: -2.561748504638672
    5. ' occurrence' → logprob: -2.686748504638672
    6. ' t' → logprob: -2.811748504638672
    7. ' position' → logprob: -3.811748504638672
    8. 'last' → logprob: -3.936748504638672
    9. 'occur' → logprob: -3.936748504638672
    10. ' last' → logprob: -4.061748504638672

Token 309: ' with' (ID: 483)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13202393054962158
    2. '_last' → logprob: -2.507023811340332
    3. 's' → logprob: -4.382023811340332
    4. ' _' → logprob: -4.757023811340332
    5. ' last' → logprob: -5.507023811340332
    6. 'last' → logprob: -5.632023811340332
    7. 't' → logprob: -6.007023811340332
    8. '_t' → logprob: -6.507023811340332
    9. '_
' → logprob: -6.757023811340332
    10. ' t' → logprob: -6.757023811340332

Token 310: ' (' (ID: 350)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.39275646209716797
    2. ' t' → logprob: -1.392756462097168
    3. 'in' → logprob: -3.392756462097168
    4. ' that' → logprob: -4.767756462097168
    5. 's' → logprob: -5.642756462097168
    6. 'jump' → logprob: -5.642756462097168
    7. 'that' → logprob: -6.267756462097168
    8. 'j' → logprob: -6.392756462097168
    9. 'the' → logprob: -6.392756462097168
    10. ' jump' → logprob: -6.392756462097168

Token 311: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06527005136013031
    2. ' t' → logprob: -2.815269947052002
    3. ')' → logprob: -7.565269947052002
    4. 'the' → logprob: -7.565269947052002
    5. 's' → logprob: -8.06527042388916
    6. ')t' → logprob: -8.19027042388916
    7. 'jump' → logprob: -8.56527042388916
    8. 'j' → logprob: -8.69027042388916
    9. ' the' → logprob: -8.81527042388916
    10. '```' → logprob: -9.06527042388916

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8231337666511536
    2. ')' → logprob: -1.3231337070465088
    3. ',n' → logprob: -1.3231337070465088
    4. ',None' → logprob: -5.198133945465088
    5. ',index' → logprob: -5.823133945465088
    6. '[' → logprob: -5.948133945465088
    7. ',)' → logprob: -6.198133945465088
    8. ',len' → logprob: -6.448133945465088
    9. ',i' → logprob: -6.573133945465088
    10. ')n' → logprob: -6.698133945465088

Token 313: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2109600454568863
    2. '0' → logprob: -2.0859601497650146
    3. 't' → logprob: -3.9609601497650146
    4. 'None' → logprob: -4.5859599113464355
    5. ')' → logprob: -4.7109599113464355
    6. 's' → logprob: -4.7109599113464355
    7. 'number' → logprob: -5.3359599113464355
    8. 'len' → logprob: -6.2109599113464355
    9. 'has' → logprob: -6.3359599113464355
    10. '1' → logprob: -6.7109599113464355

Token 314: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002869304269552231
    2. ')
' → logprob: -7.252869129180908
    3. '),' → logprob: -7.252869129180908
    4. ',' → logprob: -8.002869606018066
    5. ' )' → logprob: -8.127869606018066
    6. ')=' → logprob: -8.752869606018066
    7. ')==' → logprob: -9.252869606018066
    8. ')>' → logprob: -9.377869606018066
    9. ')+' → logprob: -9.627869606018066
    10. '[' → logprob: -9.752869606018066

Token 315: '       ' (ID: 309)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21350792050361633
    2. '_last' → logprob: -2.713507890701294
    3. 's' → logprob: -2.838507890701294
    4. '_seen' → logprob: -3.713507890701294
    5. ' _' → logprob: -4.588508129119873
    6. '_indices' → logprob: -5.463508129119873
    7. ' for' → logprob: -5.963508129119873
    8. ',' → logprob: -6.088508129119873
    9. ' =' → logprob: -6.463508129119873
    10. ' last' → logprob: -6.713508129119873

Token 316: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.436844140291214
    2. 'last' (adapté à ' last') → logprob: -1.1868441104888916
    3. ' recent' → logprob: -4.936844348907471
    4. 'recent' → logprob: -5.311844348907471
    5. ' pos' → logprob: -5.561844348907471
    6. '   ' → logprob: -5.936844348907471
    7. ' next' → logprob: -6.061844348907471
    8. ' cur' → logprob: -6.061844348907471
    9. ' prev' → logprob: -6.186844348907471
    10. 'pos' → logprob: -6.186844348907471

Token 317: '_read' (ID: 14291)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.7723332643508911
    2. '_index' → logprob: -1.3973332643508911
    3. '_letter' → logprob: -1.8973332643508911
    4. '_pos' → logprob: -3.0223331451416016
    5. '_indices' → logprob: -3.3973331451416016
    6. '_' → logprob: -3.8973331451416016
    7. '_seen' → logprob: -4.022333145141602
    8. '_char' → logprob: -5.272333145141602
    9. '_t' → logprob: -5.272333145141602
    10. '_indexes' → logprob: -6.272333145141602

Token 318: '_type' (ID: 3804)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06702564656734467
    2. ' =' → logprob: -3.067025661468506
    3. '_idx' → logprob: -4.817025661468506
    4. '={}' → logprob: -5.067025661468506
    5. '_index' → logprob: -6.817025661468506
    6. '_indices' → logprob: -7.817025661468506
    7. '={' → logprob: -7.817025661468506
    8. '_pos' → logprob: -8.442025184631348
    9. '=[' → logprob: -8.567025184631348
    10. '_' → logprob: -8.567025184631348

Token 319: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03734879195690155
    2. ' =' → logprob: -3.787348747253418
    3. '={}' → logprob: -4.412348747253418
    4. 's' → logprob: -7.537348747253418
    5. '=None' → logprob: -8.287348747253418
    6. '_idx' → logprob: -8.412348747253418
    7. '={' → logprob: -8.412348747253418
    8. '_' → logprob: -8.912348747253418
    9. '={}
' → logprob: -8.912348747253418
    10. '=dict' → logprob: -9.412348747253418

Token 320: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0012078535510227084
    2. 'dict' → logprob: -6.7512078285217285
    3. ' dict' → logprob: -10.501208305358887
    4. ' {}' → logprob: -12.001208305358887
    5. '{' → logprob: -12.751208305358887
    6. '={}' → logprob: -14.626208305358887
    7. 'default' → logprob: -15.126208305358887
    8. '{}
' → logprob: -15.626208305358887
    9. '{})' → logprob: -16.12620735168457
    10. '{},' → logprob: -16.87620735168457

Token 321: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01686938852071762
    2. '<|end|>' → logprob: -4.39186954498291
    3. '={}' → logprob: -5.76686954498291
    4. '()
' → logprob: -7.39186954498291
    5. ' =' → logprob: -8.51686954498291
    6. '<|end|>' → logprob: -9.89186954498291
    7. '{}' → logprob: -9.89186954498291
    8. ')' → logprob: -9.89186954498291
    9. '=' → logprob: -10.14186954498291
    10. '()\' → logprob: -10.51686954498291

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12309826910495758
    2. '<|end|>' → logprob: -2.373098373413086
    3. '   ' → logprob: -4.123098373413086
    4. '        
' → logprob: -6.498098373413086
    5. '
' → logprob: -6.748098373413086
    6. '	' → logprob: -6.998098373413086
    7. '<|end|>' → logprob: -6.998098373413086
    8. ' for' → logprob: -8.123098373413086
    9. '	   ' → logprob: -8.498098373413086
    10. '    
' → logprob: -8.748098373413086

Token 323: ' read' (ID: 1729)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22759273648262024
    2. '<|end|>' → logprob: -2.477592706680298
    3. '
' → logprob: -2.602592706680298
    4. '   ' → logprob: -4.227592945098877
    5. ' for' → logprob: -4.477592945098877
    6. '	for' → logprob: -5.352592945098877
    7. '        
' → logprob: -5.727592945098877
    8. 'for' → logprob: -6.352592945098877
    9. '	   ' → logprob: -6.602592945098877
    10. '		
' → logprob: -6.727592945098877

Token 324: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 325: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23606464266777039
    2. 'set' → logprob: -1.6110646724700928
    3. '0' → logprob: -5.861064434051514
    4. '[]' → logprob: -5.861064434051514
    5. ' set' → logprob: -6.611064434051514
    6. ' [' → logprob: -6.736064434051514
    7. 'False' → logprob: -6.861064434051514
    8. '{' → logprob: -7.361064434051514
    9. '{}' → logprob: -7.736064434051514
    10. 'True' → logprob: -9.861064910888672

Token 326: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0025697103701531887
    2. '0' → logprob: -6.002569675445557
    3. ' False' → logprob: -10.002570152282715
    4. '[' → logprob: -10.502570152282715
    5. 'True' → logprob: -11.877570152282715
    6. '-' → logprob: -12.377570152282715
    7. ']' → logprob: -12.627570152282715
    8. 'None' → logprob: -12.877570152282715
    9. '[]' → logprob: -13.377570152282715
    10. '(False' → logprob: -13.877570152282715

Token 327: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.005361821502447128
    2. ']' → logprob: -5.755362033843994
    3. ']*(' → logprob: -6.130362033843994
    4. ')*' → logprob: -13.630361557006836
    5. '(N' → logprob: -13.880361557006836
    6. ']+' → logprob: -14.005361557006836
    7. '*N' → logprob: -14.005361557006836
    8. ' ]' → logprob: -14.255361557006836
    9. '   ' → logprob: -14.505361557006836
    10. '*' → logprob: -15.505361557006836

Token 328: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0015246253460645676
    2. '(N' → logprob: -6.626524448394775
    3. '(' → logprob: -8.626524925231934
    4. '2' → logprob: -12.626524925231934
    5. ' (' → logprob: -12.626524925231934
    6. '100' → logprob: -13.126524925231934
    7. '((' → logprob: -13.376524925231934
    8. ' N' → logprob: -13.376524925231934
    9. '10' → logprob: -13.501524925231934
    10. '3' → logprob: -13.751524925231934

Token 329: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 330: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 331: ' order' (ID: 2569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4102691113948822
    2. '   ' → logprob: -1.5352691411972046
    3. '       ' → logprob: -2.785269021987915
    4. 'def' → logprob: -4.035269260406494
    5. ' for' → logprob: -4.160269260406494
    6. 'stack' → logprob: -4.910269260406494
    7. 'queue' → logprob: -5.535269260406494
    8. 'next' → logprob: -5.785269260406494
    9. 'current' → logprob: -5.910269260406494
    10. 'visited' → logprob: -6.285269260406494

Token 332: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12497562170028687
    2. '=' → logprob: -2.4999756813049316
    3. '=[]' → logprob: -3.3749756813049316
    4. '=[]
' → logprob: -7.999975681304932
    5. '   ' → logprob: -8.249975204467773
    6. '<|end|>' → logprob: -9.124975204467773
    7. '.append' → logprob: -9.249975204467773
    8. '[]' → logprob: -9.874975204467773
    9. '=[' → logprob: -9.874975204467773
    10. '[' → logprob: -9.874975204467773

Token 333: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0013530949363484979
    2. '0' → logprob: -6.7513532638549805
    3. '[' → logprob: -9.25135326385498
    4. '[]
' → logprob: -9.75135326385498
    5. ' []' → logprob: -10.87635326385498
    6. '[]}' → logprob: -12.25135326385498
    7. '[]>' → logprob: -12.87635326385498
    8. '[])' → logprob: -14.62635326385498
    9. '[]

' → logprob: -15.12635326385498
    10. 'deque' → logprob: -15.25135326385498

Token 334: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0930233746767044
    2. '   ' → logprob: -3.3430233001708984
    3. 'stack' → logprob: -3.4680233001708984
    4. 'for' → logprob: -4.468023300170898
    5. 'visited' → logprob: -5.468023300170898
    6. 'queue' → logprob: -5.843023300170898
    7. '       ' → logprob: -5.968023300170898
    8. 'import' → logprob: -8.468023300170898
    9. ' def' → logprob: -8.593023300170898
    10. 'from' → logprob: -9.093023300170898

Token 336: ' we' (ID: 581)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1964065283536911
    2. 'stack' → logprob: -2.196406602859497
    3. 'for' → logprob: -3.321406602859497
    4. 'pos' → logprob: -4.071406364440918
    5. '   ' → logprob: -5.446406364440918
    6. 'import' → logprob: -6.696406364440918
    7. 'dfs' → logprob: -6.946406364440918
    8. 'from' → logprob: -7.071406364440918
    9. 'queue' → logprob: -7.196406364440918
    10. 'idx' → logprob: -7.196406364440918

Token 337: ' start' (ID: 1604)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5238090753555298
    2. '   ' → logprob: -2.0238089561462402
    3. '       ' → logprob: -2.1488089561462402
    4. ' def' → logprob: -2.2738089561462402
    5. ' =' → logprob: -3.6488089561462402
    6. ' continue' → logprob: -4.64880895614624
    7. '=' → logprob: -5.02380895614624
    8. ' need' → logprob: -6.02380895614624
    9. 'import' → logprob: -6.27380895614624
    10. '    ' → logprob: -6.77380895614624

Token 338: ' reading' (ID: 6085)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9823633432388306
    2. '=' → logprob: -1.8573633432388306
    3. ' at' → logprob: -1.9823633432388306
    4. ' =' → logprob: -2.232363224029541
    5. 'from' → logprob: -2.357363224029541
    6. '_pos' → logprob: -3.357363224029541
    7. 'at' → logprob: -3.482363224029541
    8. 'position' → logprob: -4.357363224029541
    9. ' from' → logprob: -4.357363224029541
    10. '       ' → logprob: -4.857363224029541

Token 339: ' with' (ID: 483)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.7331721186637878
    2. 'pos' → logprob: -1.1081721782684326
    3. ' =' → logprob: -2.7331721782684326
    4. 'at' → logprob: -3.8581721782684326
    5. 'from' → logprob: -3.8581721782684326
    6. 'idx' → logprob: -4.3581719398498535
    7. 'i' → logprob: -4.4831719398498535
    8. '       ' → logprob: -4.6081719398498535
    9. '=' → logprob: -4.7331719398498535
    10. 'index' → logprob: -5.1081719398498535

Token 340: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9650488495826721
    2. 'i' → logprob: -1.0900487899780273
    3. 'pos' → logprob: -2.2150487899780273
    4. ' i' → logprob: -2.7150487899780273
    5. 'idx' → logprob: -3.0900487899780273
    6. 'cur' → logprob: -4.465048789978027
    7. 'read' → logprob: -4.590048789978027
    8. ' idx' → logprob: -4.840048789978027
    9. 'index' → logprob: -4.965048789978027
    10. ' pos' → logprob: -5.215048789978027

Token 341: ' first' (ID: 1577)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6338663101196289
    2. 'i' → logprob: -1.133866310119629
    3. 'current' → logprob: -3.133866310119629
    4. 'index' → logprob: -3.883866310119629
    5. ' current' → logprob: -4.133866310119629
    6. 'idx' → logprob: -4.258866310119629
    7. ' i' → logprob: -4.383866310119629
    8. 'pos' → logprob: -4.508866310119629
    9. 'cur' → logprob: -5.258866310119629
    10. 'first' → logprob: -5.758866310119629

Token 342: ' letter' (ID: 10263)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'token' → logprob: -1.674161434173584
    2. 'index' → logprob: -1.799161434173584
    3. 'read' → logprob: -2.049161434173584
    4. 'jump' → logprob: -2.299161434173584
    5. 'False' → logprob: -2.549161434173584
    6. 'mark' → logprob: -2.549161434173584
    7. 'un' → logprob: -3.049161434173584
    8. ' mark' → logprob: -3.549161434173584
    9. ' index' → logprob: -3.924161434173584
    10. ' token' → logprob: -3.924161434173584

Token 343: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07297901809215546
    2. ',' → logprob: -3.197978973388672
    3. '<|end|>' → logprob: -4.822978973388672
    4. ' at' → logprob: -5.572978973388672
    5. ' =' → logprob: -5.697978973388672
    6. '   ' → logprob: -6.072978973388672
    7. '<|end|>' → logprob: -6.447978973388672
    8. ' (' → logprob: -6.447978973388672
    9. ' i' → logprob: -6.697978973388672
    10. 'index' → logprob: -6.947978973388672

Token 344: ' it' (ID: 480)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.1769402027130127
    2. 'has' → logprob: -1.3019402027130127
    3. 'not' → logprob: -1.3019402027130127
    4. ' not' → logprob: -2.1769402027130127
    5. 'read' → logprob: -4.176939964294434
    6. ' N' → logprob: -5.051939964294434
    7. ' has' → logprob: -5.426939964294434
    8. 'jump' → logprob: -5.426939964294434
    9. '   ' → logprob: -6.926939964294434
    10. ' jump' → logprob: -7.426939964294434

Token 345: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3749276399612427
    2. ' has' → logprob: -1.6249276399612427
    3. 'has' → logprob: -2.874927520751953
    4. 's' → logprob: -3.874927520751953
    5. 'is' → logprob: -3.874927520751953
    6. ' <' → logprob: -5.124927520751953
    7. ' exists' → logprob: -5.874927520751953
    8. '<' → logprob: -6.124927520751953
    9. '[' → logprob: -6.874927520751953
    10. '.has' → logprob: -7.374927520751953

Token 346: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.8058080077171326
    2. ' not' → logprob: -1.0558080673217773
    3. 'has' → logprob: -1.9308080673217773
    4. 'None' → logprob: -3.4308080673217773
    5. 'True' → logprob: -4.805808067321777
    6. ' has' → logprob: -4.805808067321777
    7. 'read' → logprob: -5.430808067321777
    8. ' None' → logprob: -6.305808067321777
    9. '0' → logprob: -6.680808067321777
    10. '   ' → logprob: -6.930808067321777

Token 347: ' skipped' (ID: 72521)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.1459187269210815
    2. 'has' → logprob: -1.2709187269210815
    3. ''' → logprob: -2.270918846130371
    4. ' None' → logprob: -2.645918846130371
    5. 'v' → logprob: -2.770918846130371
    6. 'a' → logprob: -3.270918846130371
    7. ''a' → logprob: -3.520918846130371
    8. 'jump' → logprob: -4.020918846130371
    9. ' '' → logprob: -4.520918846130371
    10. ' has' → logprob: -4.770918846130371

Token 348: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4674221277236938
    2. ' if' → logprob: -1.7174221277236938
    3. '       ' → logprob: -1.8424221277236938
    4. ',' → logprob: -2.3424220085144043
    5. '<|end|>' → logprob: -2.9674220085144043
    6. '    
' → logprob: -3.0924220085144043
    7. ':' → logprob: -3.0924220085144043
    8. ' (' → logprob: -3.2174220085144043
    9. '
' → logprob: -3.3424220085144043
    10. ' 
' → logprob: -3.9674220085144043

Token 349: ' rule' (ID: 10652)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.0021439548581838608
    2. ' has' → logprob: -6.377143859863281
    3. '   ' → logprob: -9.127143859863281
    4. 'v' → logprob: -9.502143859863281
    5. 'jump' → logprob: -9.502143859863281
    6. 'not' → logprob: -10.252143859863281
    7. 'read' → logprob: -10.377143859863281
    8. 'have' → logprob: -11.127143859863281
    9. 'a' → logprob: -11.627143859863281
    10. 'the' → logprob: -11.752143859863281

Token 350: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4040430784225464
    2. ' if' → logprob: -1.5290430784225464
    3. '       ' → logprob: -2.029043197631836
    4. '[' → logprob: -2.154043197631836
    5. ' at' → logprob: -2.654043197631836
    6. '0' → logprob: -3.029043197631836
    7. ' (' → logprob: -3.529043197631836
    8. ' ' → logprob: -3.779043197631836
    9. ':' → logprob: -4.154043197631836
    10. ',' → logprob: -4.154043197631836

Token 351: '2' (ID: 17)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -1.3059532642364502
    2. 'v' → logprob: -1.5559532642364502
    3. '0' → logprob: -2.30595326423645
    4. 'if' → logprob: -2.43095326423645
    5. '1' → logprob: -2.68095326423645
    6. ' has' → logprob: -3.30595326423645
    7. '       ' → logprob: -3.55595326423645
    8. '   ' → logprob: -3.80595326423645
    9. 'True' → logprob: -3.93095326423645
    10. ' if' → logprob: -4.055953025817871

Token 352: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9211658239364624
    2. '<|end|>' → logprob: -1.5461658239364624
    3. '       ' → logprob: -1.9211658239364624
    4. '    
' → logprob: -2.671165943145752
    5. '
' → logprob: -3.171165943145752
    6. ',' → logprob: -3.421165943145752
    7. ' if' → logprob: -3.921165943145752
    8. '        
' → logprob: -4.171165943145752
    9. '  
' → logprob: -4.296165943145752
    10. '<|end|>' → logprob: -4.546165943145752

Token 353: 'jump' (ID: 79879)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.14280620217323303
    2. ' has' → logprob: -2.7678062915802
    3. ')' → logprob: -4.267806053161621
    4. 'if' → logprob: -4.267806053161621
    5. 'not' → logprob: -4.892806053161621
    6. ' not' → logprob: -5.142806053161621
    7. 'jump' → logprob: -5.392806053161621
    8. 'N' → logprob: -5.517806053161621
    9. ' if' → logprob: -5.767806053161621
    10. 'i' → logprob: -6.392806053161621

Token 354: ' mark' (ID: 1983)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6237780451774597
    2. '_marks' → logprob: -0.8737780451774597
    3. ')
' → logprob: -4.748777866363525
    4. '   ' → logprob: -5.248777866363525
    5. '_mark' → logprob: -5.248777866363525
    6. ' ' → logprob: -5.373777866363525
    7. 'marks' → logprob: -5.373777866363525
    8. '       ' → logprob: -5.623777866363525
    9. 'mark' → logprob: -6.498777866363525
    10. '_points' → logprob: -6.748777866363525

Token 355: ' with' (ID: 483)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4954903721809387
    2. ' or' → logprob: -2.245490312576294
    3. ' if' → logprob: -2.995490312576294
    4. '[' → logprob: -2.995490312576294
    5. '0' → logprob: -3.245490312576294
    6. ' and' → logprob: -3.245490312576294
    7. '<|end|>' → logprob: -3.745490312576294
    8. 's' → logprob: -4.870490550994873
    9. ' at' → logprob: -4.870490550994873
    10. '==' → logprob: -4.870490550994873

Token 356: ' number' (ID: 2086)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7702502608299255
    2. ' v' → logprob: -1.7702503204345703
    3. 'number' → logprob: -2.0202503204345703
    4. ''' → logprob: -2.8952503204345703
    5. ' number' → logprob: -2.8952503204345703
    6. ' '' → logprob: -3.5202503204345703
    7. 'type' → logprob: -4.27025032043457
    8. ' type' → logprob: -4.52025032043457
    9. 'has' → logprob: -4.77025032043457
    10. ''n' → logprob: -5.02025032043457

Token 357: '>=' (ID: 20974)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4558795988559723
    2. '1' → logprob: -1.33087956905365
    3. '>' → logprob: -3.7058796882629395
    4. '!=' → logprob: -3.8308796882629395
    5. ' ==' → logprob: -4.0808796882629395
    6. ' ' → logprob: -4.4558796882629395
    7. ')' → logprob: -4.4558796882629395
    8. '=' → logprob: -4.7058796882629395
    9. ' !=' → logprob: -6.0808796882629395
    10. ' >' → logprob: -7.7058796882629395

Token 358: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010627535171806812
    2. '1' → logprob: -5.010627746582031
    3. ' ' → logprob: -6.010627746582031
    4. '3' → logprob: -6.635627746582031
    5. '4' → logprob: -10.385627746582031
    6. '5' → logprob: -10.510627746582031
    7. '   ' → logprob: -11.260627746582031
    8. '10' → logprob: -11.510627746582031
    9. '7' → logprob: -11.760627746582031
    10. '>' → logprob: -11.948127746582031

Token 359: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2887134552001953
    2. ' and' → logprob: -1.5387134552001953
    3. ' if' → logprob: -4.288713455200195
    4. '       ' → logprob: -5.288713455200195
    5. ')
' → logprob: -5.413713455200195
    6. 'and' → logprob: -6.038713455200195
    7. ' or' → logprob: -6.038713455200195
    8. ' )' → logprob: -6.413713455200195
    9. '<|end|>' → logprob: -6.538713455200195
    10. ').' → logprob: -7.413713455200195

Token 360: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5805477499961853
    2. ' i' → logprob: -1.70554780960083
    3. '       ' → logprob: -2.45554780960083
    4. '
' → logprob: -2.95554780960083
    5. ' for' → logprob: -3.33054780960083
    6. 'i' → logprob: -3.58054780960083
    7. '    
' → logprob: -3.95554780960083
    8. ' if' → logprob: -4.45554780960083
    9. 'idx' → logprob: -5.58054780960083
    10. ',' → logprob: -5.70554780960083

Token 361: ' #' (ID: 1069)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.1134592294692993
    2. 'i' → logprob: -1.7384592294692993
    3. 'pos' → logprob: -1.7384592294692993
    4. ' if' → logprob: -2.6134591102600098
    5. '       ' → logprob: -2.6134591102600098
    6. 'if' → logprob: -2.7384591102600098
    7. '   ' → logprob: -2.9884591102600098
    8. ' pos' → logprob: -3.1134591102600098
    9. 'idx' → logprob: -5.48845911026001
    10. ' idx' → logprob: -5.61345911026001

Token 362: ' but' (ID: 889)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6774446368217468
    2. 'if' → logprob: -1.3024446964263916
    3. 'i' → logprob: -1.8024446964263916
    4. '   ' → logprob: -4.0524444580078125
    5. 'cur' → logprob: -4.0524444580078125
    6. 'idx' → logprob: -4.9274444580078125
    7. ' pos' → logprob: -5.9274444580078125
    8. ' if' → logprob: -5.9274444580078125
    9. '       ' → logprob: -6.4274444580078125
    10. ' i' → logprob: -6.5524444580078125

Token 363: ' the' (ID: 290)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.3332880735397339
    2. ' i' → logprob: -1.7082880735397339
    3. ' if' → logprob: -1.8332880735397339
    4. 'if' → logprob: -2.5832881927490234
    5. ' N' → logprob: -2.5832881927490234
    6. ' True' → logprob: -2.5832881927490234
    7. 'i' → logprob: -3.2082881927490234
    8. ' order' → logprob: -4.208288192749023
    9. ' jump' → logprob: -4.333288192749023
    10. 'N' → logprob: -4.333288192749023

Token 364: ' problem' (ID: 4792)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.7625592947006226
    2. ' next' → logprob: -1.8875592947006226
    3. ' first' → logprob: -2.012559413909912
    4. 'if' → logprob: -2.137559413909912
    5. ' rest' → logprob: -2.512559413909912
    6. 'first' → logprob: -3.012559413909912
    7. 'next' → logprob: -3.262559413909912
    8. ' if' → logprob: -3.262559413909912
    9. ' current' → logprob: -3.387559413909912
    10. 'i' → logprob: -4.262559413909912

Token 365: ''s' (ID: 885)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 366: ' rule' (ID: 10652)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.8502518534660339
    2. 'next' → logprob: -1.4752519130706787
    3. ' code' → logprob: -2.6002519130706787
    4. ' description' → logprob: -2.8502519130706787
    5. 'description' → logprob: -2.9752519130706787
    6. ' statement' → logprob: -3.1002519130706787
    7. 'statement' → logprob: -3.7252519130706787
    8. 'code' → logprob: -3.9752519130706787
    9. 'input' → logprob: -4.3502516746521
    10. '#' → logprob: -5.2252516746521

Token 367: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0387985706329346
    2. ':' → logprob: -1.2887985706329346
    3. ' is' → logprob: -2.1637985706329346
    4. ' ' → logprob: -2.2887985706329346
    5. ' continues' → logprob: -3.6637985706329346
    6. '3' → logprob: -3.7887985706329346
    7. '#' → logprob: -4.0387983322143555
    8. '   ' → logprob: -4.2887983322143555
    9. ' says' → logprob: -4.7887983322143555
    10. ' states' → logprob: -5.1637983322143555

Token 368: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.43809011578559875
    2. 's' → logprob: -2.3130900859832764
    3. '3' → logprob: -2.4380900859832764
    4. ' ' → logprob: -3.1880900859832764
    5. ' is' → logprob: -4.0630903244018555
    6. ' states' → logprob: -4.1880903244018555
    7. 'states' → logprob: -4.4380903244018555
    8. '#' → logprob: -4.5630903244018555
    9. 'is' → logprob: -4.6880903244018555
    10. ' says' → logprob: -4.8130903244018555

Token 369: ' says' (ID: 5003)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 370: ' first' (ID: 1577)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.08755692094564438
    2. ' we' → logprob: -3.212556838989258
    3. ' the' → logprob: -4.587556838989258
    4. ':' → logprob: -4.712556838989258
    5. ' if' → logprob: -4.962556838989258
    6. 'that' → logprob: -4.962556838989258
    7. ',' → logprob: -5.587556838989258
    8. 'we' → logprob: -6.712556838989258
    9. ' continue' → logprob: -6.962556838989258
    10. ' next' → logprob: -7.212556838989258

Token 371: ' letter' (ID: 10263)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.8493942022323608
    2. ')' → logprob: -2.0993943214416504
    3. '   ' → logprob: -2.2243943214416504
    4. '_' → logprob: -2.2243943214416504
    5. '<|end|>' → logprob: -2.7243943214416504
    6. ' if' → logprob: -2.9743943214416504
    7. '_read' → logprob: -3.0993943214416504
    8. '_token' → logprob: -3.2243943214416504
    9. '  ' → logprob: -3.4743943214416504
    10. ' line' → logprob: -3.7243943214416504

Token 372: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: ' read' (ID: 1729)
  Prédit: 'always'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'always' → logprob: -0.18770813941955566
    2. ' always' → logprob: -1.8127081394195557
    3. 'read' → logprob: -5.187707901000977
    4. ' read' → logprob: -6.812707901000977
    5. 'not' → logprob: -7.937707901000977
    6. 'never' → logprob: -8.187707901000977
    7. '   ' → logprob: -8.937707901000977
    8. ' ' → logprob: -9.187707901000977
    9. ' not' → logprob: -9.687707901000977
    10. ' never' → logprob: -10.062707901000977

Token 374: ' first' (ID: 1577)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08709648996591568
    2. '<|end|>' → logprob: -2.8370964527130127
    3. '  
' → logprob: -4.587096691131592
    4. '    
' → logprob: -4.837096691131592
    5. '   ' → logprob: -6.337096691131592
    6. '       ' → logprob: -6.587096691131592
    7. '<|end|>' → logprob: -6.962096691131592
    8. '\n' → logprob: -7.087096691131592
    9. '        
' → logprob: -7.337096691131592
    10. ' 
' → logprob: -7.837096691131592

Token 375: ' anyway' (ID: 22332)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07530112564563751
    2. '<|end|>' → logprob: -3.700301170349121
    3. '       ' → logprob: -3.825301170349121
    4. '  
' → logprob: -4.700301170349121
    5. '    
' → logprob: -4.950301170349121
    6. '   ' → logprob: -5.825301170349121
    7. '        
' → logprob: -6.200301170349121
    8. ' 
' → logprob: -6.575301170349121
    9. ' if' → logprob: -6.825301170349121
    10. '<|end|>' → logprob: -7.450301170349121

Token 376: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09360150247812271
    2. '       ' → logprob: -3.2186014652252197
    3. '<|end|>' → logprob: -3.5936014652252197
    4. '    
' → logprob: -5.093601703643799
    5. '  
' → logprob: -5.093601703643799
    6. '   ' → logprob: -5.468601703643799
    7. '        
' → logprob: -6.218601703643799
    8. ' 
' → logprob: -6.843601703643799
    9. ',' → logprob: -7.718601703643799
    10. '<|end|>' → logprob: -7.718601703643799

Token 377: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06822503358125687
    2. ' if' → logprob: -4.068224906921387
    3. '   ' → logprob: -5.068224906921387
    4. ' so' → logprob: -5.193224906921387
    5. '    
' → logprob: -5.193224906921387
    6. '        
' → logprob: -5.443224906921387
    7. '
' → logprob: -5.568224906921387
    8. 'if' → logprob: -5.568224906921387
    9. ' i' → logprob: -5.818224906921387
    10. '<|end|>' → logprob: -5.943224906921387

Token 378: ' rule' (ID: 10652)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 379: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08073041588068008
    2. '2' → logprob: -2.580730438232422
    3. '1' → logprob: -7.705730438232422
    4. '<|end|>' → logprob: -7.955730438232422
    5. '   ' → logprob: -8.080730438232422
    6. '  ' → logprob: -8.830730438232422
    7. '<|end|>' → logprob: -9.080730438232422
    8. ' #' → logprob: -9.580730438232422
    9. '    ' → logprob: -9.955730438232422
    10. '.' → logprob: -10.455730438232422

Token 380: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.605156421661377
    2. '2' → logprob: -0.855156421661377
    3. '1' → logprob: -3.605156421661377
    4. '3' → logprob: -7.605156421661377
    5. ' #' → logprob: -7.730156421661377
    6. '#' → logprob: -9.105155944824219
    7. '   ' → logprob: -9.230155944824219
    8. '_' → logprob: -9.355155944824219
    9. '  ' → logprob: -9.480155944824219
    10. '<|end|>' → logprob: -9.980155944824219

Token 381: ' says' (ID: 5003)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 382: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.45367491245269775
    2. ' that' → logprob: -2.078674793243408
    3. ' it' → logprob: -2.328674793243408
    4. ' we' → logprob: -3.078674793243408
    5. 'if' → logprob: -3.328674793243408
    6. ' the' → logprob: -4.578674793243408
    7. ' not' → logprob: -5.203674793243408
    8. ' only' → logprob: -5.203674793243408
    9. ' continue' → logprob: -5.453674793243408
    10. ' ' → logprob: -5.578674793243408

Token 383: ' jump' (ID: 13843)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.4769720733165741
    2. ' jump' → logprob: -0.9769721031188965
    3. ' read' → logprob: -6.9769721031188965
    4. 'read' → logprob: -7.6019721031188965
    5. ' N' → logprob: -8.101971626281738
    6. 'has' → logprob: -8.351971626281738
    7. ' ' → logprob: -8.476971626281738
    8. 'N' → logprob: -8.726971626281738
    9. ' has' → logprob: -9.601971626281738
    10. ' (' → logprob: -9.726971626281738

Token 384: ' mark' (ID: 1983)
  Prédit: '_marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_marks' → logprob: -0.002127779880538583
    2. '_mark' → logprob: -6.252127647399902
    3. '_' → logprob: -10.252127647399902
    4. 'mark' → logprob: -10.377127647399902
    5. 'marks' → logprob: -10.627127647399902
    6. 'type' → logprob: -11.377127647399902
    7. ' _' → logprob: -11.627127647399902
    8. '   ' → logprob: -11.752127647399902
    9. '```' → logprob: -12.002127647399902
    10. '_type' → logprob: -12.002127647399902

Token 385: ' number' (ID: 2086)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.914251983165741
    2. 'with' → logprob: -0.914251983165741
    3. '[' → logprob: -1.7892520427703857
    4. 'type' → logprob: -4.914251804351807
    5. ' type' → logprob: -6.039251804351807
    6. ' at' → logprob: -6.289251804351807
    7. ' is' → logprob: -6.414251804351807
    8. ' number' → logprob: -6.539251804351807
    9. ' ' → logprob: -6.664251804351807
    10. '_number' → logprob: -6.664251804351807

Token 386: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.006192203611135483
    2. ' >=' → logprob: -5.256192207336426
    3. '>' → logprob: -8.131192207336426
    4. '[' → logprob: -8.881192207336426
    5. '   ' → logprob: -9.131192207336426
    6. ']>=' → logprob: -9.381192207336426
    7. '==' → logprob: -9.506192207336426
    8. ')>=' → logprob: -9.631192207336426
    9. '<' → logprob: -9.881192207336426
    10. '<=' → logprob: -10.756192207336426

Token 387: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014704519708175212
    2. ' ' → logprob: -8.875146865844727
    3. '   ' → logprob: -12.500146865844727
    4. ''' → logprob: -13.750146865844727
    5. '```' → logprob: -14.125146865844727
    6. '1' → logprob: -14.750146865844727
    7. '       ' → logprob: -15.250146865844727
    8. '
' → logprob: -15.250146865844727
    9. '  ' → logprob: -15.750146865844727
    10. ')' → logprob: -15.750146865844727

Token 388: ' skip' (ID: 16677)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0707885026931763
    2. ',' → logprob: -1.3207885026931763
    3. ' and' → logprob: -1.8207885026931763
    4. '       ' → logprob: -2.4457883834838867
    5. ':
' → logprob: -3.0707883834838867
    6. '<|end|>' → logprob: -3.5707883834838867
    7. '   ' → logprob: -4.195788383483887
    8. 'and' → logprob: -4.570788383483887
    9. '[' → logprob: -4.820788383483887
    10. '           ' → logprob: -5.195788383483887

Token 389: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01746956631541252
    2. '<|end|>' → logprob: -4.51746940612793
    3. '  
' → logprob: -6.01746940612793
    4. '    
' → logprob: -7.64246940612793
    5. ' 
' → logprob: -7.76746940612793
    6. '       ' → logprob: -7.76746940612793
    7. '<|end|>' → logprob: -7.76746940612793
    8. '   ' → logprob: -8.01746940612793
    9. ' if' → logprob: -8.14246940612793
    10. '
' → logprob: -8.14246940612793

Token 390: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21991784870624542
    2. '<|end|>' → logprob: -2.4699177742004395
    3. '       ' → logprob: -2.5949177742004395
    4. '        
' → logprob: -4.5949177742004395
    5. '<|end|>' → logprob: -4.5949177742004395
    6. '    
' → logprob: -5.4699177742004395
    7. '  
' → logprob: -5.5949177742004395
    8. '\n' → logprob: -5.8449177742004395
    9. ' 
' → logprob: -6.3449177742004395
    10. '   ' → logprob: -6.5949177742004395

Token 391: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011397577822208405
    2. '       ' → logprob: -5.011397361755371
    3. '   ' → logprob: -6.636397361755371
    4. '  
' → logprob: -7.011397361755371
    5. '    
' → logprob: -7.386397361755371
    6. ' if' → logprob: -7.511397361755371
    7. '        
' → logprob: -7.636397361755371
    8. '<|end|>' → logprob: -7.886397361755371
    9. ' 
' → logprob: -8.886397361755371
    10. '
' → logprob: -9.511397361755371

Token 392: ' so' (ID: 813)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.201579213142395
    2. 'if' → logprob: -1.326579213142395
    3. ' i' → logprob: -1.451579213142395
    4. 'i' → logprob: -2.0765790939331055
    5. '       ' → logprob: -2.9515790939331055
    6. '
' → logprob: -4.3265790939331055
    7. 'idx' → logprob: -6.0765790939331055
    8. ' for' → logprob: -6.3265790939331055
    9. 'pos' → logprob: -6.8265790939331055
    10. '   ' → logprob: -6.9515790939331055

Token 393: ' we' (ID: 581)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05539514124393463
    2. '       ' → logprob: -3.3053951263427734
    3. 'if' → logprob: -4.555395126342773
    4. '   ' → logprob: -5.430395126342773
    5. ' i' → logprob: -6.805395126342773
    6. ' for' → logprob: -8.055395126342773
    7. ' t' → logprob: -9.305395126342773
    8. ' ' → logprob: -9.430395126342773
    9. '
' → logprob: -9.555395126342773
    10. ' #' → logprob: -9.555395126342773

Token 394: ' try' (ID: 2075)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39875996112823486
    2. ' continue' → logprob: -1.8987599611282349
    3. ' if' → logprob: -2.3987598419189453
    4. '   ' → logprob: -3.0237598419189453
    5. 'if' → logprob: -3.8987598419189453
    6. 'continue' → logprob: -4.773759841918945
    7. '    ' → logprob: -5.648759841918945
    8. ' need' → logprob: -6.148759841918945
    9. ' ' → logprob: -6.898759841918945
    10. '           ' → logprob: -7.773759841918945

Token 395: ' first' (ID: 1577)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5906962752342224
    2. ':
' → logprob: -0.8406962752342224
    3. '   ' → logprob: -4.840696334838867
    4. ' to' → logprob: -5.465696334838867
    5. '       ' → logprob: -6.965696334838867
    6. '{' → logprob: -7.090696334838867
    7. '{
' → logprob: -8.090696334838867
    8. 'to' → logprob: -8.715696334838867
    9. 'ing' → logprob: -9.965696334838867
    10. ' if' → logprob: -10.340696334838867

Token 396: ' letter' (ID: 10263)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5493161678314209
    2. '       ' → logprob: -1.174316167831421
    3. '   ' → logprob: -2.674316167831421
    4. '    
' → logprob: -3.924316167831421
    5. '        
' → logprob: -4.17431640625
    6. '  
' → logprob: -6.04931640625
    7. ' if' → logprob: -6.04931640625
    8. 'if' → logprob: -6.67431640625
    9. ' 
' → logprob: -7.17431640625
    10. '   
' → logprob: -7.67431640625

Token 397: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01383671723306179
    2. '   ' → logprob: -5.013836860656738
    3. '    
' → logprob: -6.138836860656738
    4. '  
' → logprob: -6.263836860656738
    5. '       ' → logprob: -7.138836860656738
    6. ' if' → logprob: -7.513836860656738
    7. ' 
' → logprob: -8.138836860656738
    8. '        
' → logprob: -8.263836860656738
    9. 'if' → logprob: -8.513836860656738
    10. '<|end|>' → logprob: -8.638836860656738

Token 398: ' but' (ID: 889)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.45084241032600403
    2. ' i' → logprob: -1.5758423805236816
    3. 'if' → logprob: -2.8258423805236816
    4. '0' → logprob: -3.3258423805236816
    5. '       ' → logprob: -4.075842380523682
    6. 'i' → logprob: -4.325842380523682
    7. ' ' → logprob: -4.575842380523682
    8. '   ' → logprob: -5.075842380523682
    9. ' 
' → logprob: -6.075842380523682
    10. ' and' → logprob: -6.200842380523682

Token 399: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4093971848487854
    2. 'if' → logprob: -1.1593971252441406
    3. '       ' → logprob: -4.159397125244141
    4. ' not' → logprob: -6.034397125244141
    5. ' continue' → logprob: -7.409397125244141
    6. 'read' → logprob: -7.534397125244141
    7. 'not' → logprob: -7.659397125244141
    8. 'continue' → logprob: -7.659397125244141
    9. ' read' → logprob: -7.909397125244141
    10. ':' → logprob: -8.03439712524414

Token 400: ' jump' (ID: 13843)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.07012860476970673
    2. ' jump' → logprob: -2.6951286792755127
    3. '(j' → logprob: -8.820128440856934
    4. '   ' → logprob: -11.445128440856934
    5. 'not' → logprob: -11.445128440856934
    6. ' ' → logprob: -11.820128440856934
    7. ' (' → logprob: -12.820128440856934
    8. ' not' → logprob: -13.445128440856934
    9. 'read' → logprob: -13.445128440856934
    10. '(N' → logprob: -13.570128440856934

Token 401: ' mark' (ID: 1983)
  Prédit: '_marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_marks' → logprob: -0.00026383911608718336
    2. '_mark' → logprob: -8.250264167785645
    3. 'marks' → logprob: -13.875264167785645
    4. '_' → logprob: -13.875264167785645
    5. 'Marks' → logprob: -15.625264167785645
    6. 'mark' → logprob: -16.000263214111328
    7. '_jump' → logprob: -16.500263214111328
    8. '```' → logprob: -16.750263214111328
    9. '_reads' → logprob: -17.375263214111328
    10. ' Marks' → logprob: -17.625263214111328

Token 402: ' number' (ID: 2086)
  Prédit: '_marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_marks' → logprob: -0.0049844589084386826
    2. ' is' → logprob: -5.379984378814697
    3. '_mark' → logprob: -8.754984855651855
    4. 'Marks' → logprob: -10.254984855651855
    5. ' and' → logprob: -10.379984855651855
    6. '[' → logprob: -10.379984855651855
    7. ' marks' → logprob: -10.504984855651855
    8. '_jump' → logprob: -11.129984855651855
    9. '[i' → logprob: -11.379984855651855
    10. '=None' → logprob: -11.754984855651855

Token 403: ' >=' (ID: 5064)
  Prédit: '_marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_marks' → logprob: -0.5148515701293945
    2. ' is' → logprob: -1.3898515701293945
    3. '>=' → logprob: -2.7648515701293945
    4. 'jump' → logprob: -3.3898515701293945
    5. 'is' → logprob: -3.5148515701293945
    6. '_jump' → logprob: -4.5148515701293945
    7. '_' → logprob: -5.8898515701293945
    8. '_mark' → logprob: -6.1398515701293945
    9. ' jump' → logprob: -6.8898515701293945
    10. 'get' → logprob: -7.0148515701293945

Token 404: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008124859305098653
    2. ' ' → logprob: -7.125812530517578
    3. '   ' → logprob: -12.625812530517578
    4. '```' → logprob: -13.000812530517578
    5. '  ' → logprob: -14.500812530517578
    6. '
' → logprob: -14.750812530517578
    7. '1' → logprob: -15.000812530517578
    8. '`' → logprob: -15.563312530517578
    9. '       ' → logprob: -15.938312530517578
    10. ''' → logprob: -16.250812530517578

Token 405: ' skip' (ID: 16677)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8245744109153748
    2. ' at' → logprob: -1.5745744705200195
    3. 'and' → logprob: -1.6995744705200195
    4. ':' → logprob: -3.0745744705200195
    5. '           ' → logprob: -3.1995744705200195
    6. ' is' → logprob: -3.6995744705200195
    7. ',' → logprob: -3.8245744705200195
    8. ':
' → logprob: -4.5745744705200195
    9. '       ' → logprob: -5.5745744705200195
    10. '   ' → logprob: -5.8245744705200195

Token 406: ' it' (ID: 480)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.025416262447834015
    2. '       ' → logprob: -3.900416374206543
    3. '   ' → logprob: -6.150416374206543
    4. '    
' → logprob: -7.150416374206543
    5. '        
' → logprob: -7.150416374206543
    6. '  
' → logprob: -7.900416374206543
    7. ' if' → logprob: -8.025416374206543
    8. 'if' → logprob: -9.025416374206543
    9. '
' → logprob: -9.400416374206543
    10. ' 
' → logprob: -10.150416374206543

Token 407: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03165300190448761
    2. '       ' → logprob: -3.6566529273986816
    3. '   ' → logprob: -6.406652927398682
    4. '        
' → logprob: -6.531652927398682
    5. '    
' → logprob: -6.906652927398682
    6. ' if' → logprob: -7.906652927398682
    7. '  
' → logprob: -8.15665340423584
    8. '
' → logprob: -8.40665340423584
    9. 'if' → logprob: -9.40665340423584
    10. ',' → logprob: -10.03165340423584

Token 408: ' move' (ID: 5275)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1285000592470169
    2. 'read' → logprob: -3.378499984741211
    3. 'pass' → logprob: -3.753499984741211
    4. 'go' → logprob: -4.128499984741211
    5. ' continue' → logprob: -4.253499984741211
    6. '   ' → logprob: -4.253499984741211
    7. 'return' → logprob: -5.878499984741211
    8. 'move' → logprob: -5.878499984741211
    9. ' go' → logprob: -6.253499984741211
    10. ' read' → logprob: -6.503499984741211

Token 409: ' on' (ID: 402)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3830377459526062
    2. 'to' → logprob: -1.258037805557251
    3. 'on' → logprob: -3.883037805557251
    4. ' on' → logprob: -4.633037567138672
    5. ' forward' → logprob: -6.633037567138672
    6. 'i' → logprob: -7.383037567138672
    7. '   ' → logprob: -7.633037567138672
    8. 'forward' → logprob: -8.258037567138672
    9. 'next' → logprob: -8.758037567138672
    10. ' ahead' → logprob: -9.133037567138672

Token 410: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28181201219558716
    2. '       ' → logprob: -1.5318119525909424
    3. '   ' → logprob: -4.1568121910095215
    4. '        
' → logprob: -5.0318121910095215
    5. '    
' → logprob: -5.6568121910095215
    6. '  
' → logprob: -6.6568121910095215
    7. '<|end|>' → logprob: -7.2818121910095215
    8. ',' → logprob: -7.6568121910095215
    9. ' to' → logprob: -8.781811714172363
    10. '
' → logprob: -9.031811714172363

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15408968925476074
    2. 'i' → logprob: -2.7790896892547607
    3. '   ' → logprob: -3.1540896892547607
    4. '
' → logprob: -3.5290896892547607
    5. ' i' → logprob: -5.65408992767334
    6. 'pos' → logprob: -6.02908992767334
    7. '    
' → logprob: -6.90408992767334
    8. '        
' → logprob: -6.90408992767334
    9. 'idx' → logprob: -8.40408992767334
    10. 'if' → logprob: -9.40408992767334

Token 412: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8284807205200195
    2. 'i' → logprob: -1.2034807205200195
    3. ' i' → logprob: -1.9534807205200195
    4. 'pos' → logprob: -2.3284807205200195
    5. '   ' → logprob: -4.4534807205200195
    6. ' pos' → logprob: -5.5784807205200195
    7. 'idx' → logprob: -5.7034807205200195
    8. 'if' → logprob: -6.0784807205200195
    9. ' idx' → logprob: -7.3284807205200195
    10. 'p' → logprob: -7.7034807205200195

Token 413: ' but' (ID: 889)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.19129033386707306
    2. 'i' → logprob: -1.9412903785705566
    3. 'idx' → logprob: -4.316290378570557
    4. '   ' → logprob: -4.816290378570557
    5. 'cur' → logprob: -4.941290378570557
    6. '       ' → logprob: -7.441290378570557
    7. 'p' → logprob: -7.691290378570557
    8. 'index' → logprob: -8.191289901733398
    9. ' pos' → logprob: -8.441289901733398
    10. 'ptr' → logprob: -9.191289901733398

Token 414: ' precise' (ID: 31687)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8391599655151367
    2. ' read' → logprob: -1.8391599655151367
    3. 'i' → logprob: -2.2141599655151367
    4. ' True' → logprob: -2.4641599655151367
    5. ' jump' → logprob: -2.7141599655151367
    6. ' if' → logprob: -3.3391599655151367
    7. ' t' → logprob: -3.8391599655151367
    8. ' not' → logprob: -4.089159965515137
    9. 'read' → logprob: -4.214159965515137
    10. 'if' → logprob: -4.589159965515137

Token 415: ' reading' (ID: 6085)
  Prédit: 'ly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.21529743075370789
    2. ' if' → logprob: -3.3402974605560303
    3. 'if' → logprob: -3.4652974605560303
    4. ':' → logprob: -3.9652974605560303
    5. '
' → logprob: -4.215297222137451
    6. '   ' → logprob: -4.465297222137451
    7. 'index' → logprob: -4.840297222137451
    8. '#' → logprob: -5.090297222137451
    9. 'def' → logprob: -5.090297222137451
    10. '    
' → logprob: -5.215297222137451

Token 416: ' from' (ID: 591)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.1614218950271606
    2. '_pos' → logprob: -1.7864218950271606
    3. 'index' → logprob: -2.286421775817871
    4. '_index' → logprob: -2.661421775817871
    5. 'position' → logprob: -2.786421775817871
    6. ' =' → logprob: -3.411421775817871
    7. '   ' → logprob: -3.536421775817871
    8. '_position' → logprob: -3.786421775817871
    9. '_idx' → logprob: -4.036421775817871
    10. ' index' → logprob: -4.161421775817871

Token 417: ' rules' (ID: 9607)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49805712699890137
    2. 'index' → logprob: -1.7480571269989014
    3. 'the' → logprob: -2.8730571269989014
    4. 'i' → logprob: -3.2480571269989014
    5. 'position' → logprob: -3.6230571269989014
    6. ' ' → logprob: -3.8730571269989014
    7. ' index' → logprob: -3.9980571269989014
    8. ' here' → logprob: -4.4980573654174805
    9. ' position' → logprob: -4.7480573654174805
    10. ' the' → logprob: -4.7480573654174805

Token 418: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2316125631332397
    2. ' =' → logprob: -1.4816125631332397
    3. '
' → logprob: -1.7316125631332397
    4. ' i' → logprob: -3.1066126823425293
    5. '       ' → logprob: -3.2316126823425293
    6. ':' → logprob: -3.6066126823425293
    7. '<|end|>' → logprob: -3.6066126823425293
    8. 'i' → logprob: -3.8566126823425293
    9. 'def' → logprob: -4.106612682342529
    10. 'idx' → logprob: -4.231612682342529

Token 419: ' first' (ID: 1577)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7399857044219971
    2. ' i' → logprob: -1.239985704421997
    3. 'pos' → logprob: -2.364985704421997
    4. '       ' → logprob: -3.114985704421997
    5. ' pos' → logprob: -3.114985704421997
    6. 'idx' → logprob: -4.614985466003418
    7. ' idx' → logprob: -4.739985466003418
    8. '   ' → logprob: -4.739985466003418
    9. 'if' → logprob: -4.989985466003418
    10. ' if' → logprob: -5.489985466003418

Token 420: ' letter' (ID: 10263)
  Prédit: '_letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_letter' → logprob: -1.0063759088516235
    2. '_idx' → logprob: -2.006375789642334
    3. '_index' → logprob: -2.131375789642334
    4. '_pos' → logprob: -2.506375789642334
    5. '_mark' → logprob: -2.756375789642334
    6. '_i' → logprob: -3.006375789642334
    7. '_read' → logprob: -3.006375789642334
    8. '_line' → logprob: -3.381375789642334
    9. '_token' → logprob: -3.506375789642334
    10. ' =' → logprob: -3.506375789642334

Token 421: ' should' (ID: 1757)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.22890979051589966
    2. ' =' → logprob: -3.103909730911255
    3. '=' → logprob: -3.728909730911255
    4. ' always' → logprob: -3.978909730911255
    5. ' if' → logprob: -4.103909969329834
    6. 'is' → logprob: -4.103909969329834
    7. 'if' → logprob: -4.353909969329834
    8. ' should' → logprob: -5.103909969329834
    9. 'def' → logprob: -5.228909969329834
    10. ':' → logprob: -5.228909969329834

Token 422: ' be' (ID: 413)
  Prédit: 'always'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'always' → logprob: -0.7769590020179749
    2. ' always' → logprob: -1.27695894241333
    3. 'be' → logprob: -1.77695894241333
    4. ' be' → logprob: -2.52695894241333
    5. 'not' → logprob: -4.77695894241333
    6. ' not' → logprob: -5.65195894241333
    7. 'def' → logprob: -9.526959419250488
    8. 'read' → logprob: -9.776959419250488
    9. 'never' → logprob: -10.526959419250488
    10. 'first' → logprob: -11.151959419250488

Token 423: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.04117812588810921
    2. ' read' → logprob: -3.5411782264709473
    3. 'always' → logprob: -4.541178226470947
    4. ' always' → logprob: -7.541178226470947
    5. 'True' → logprob: -9.791177749633789
    6. '1' → logprob: -11.166177749633789
    7. ' ' → logprob: -11.291177749633789
    8. ' True' → logprob: -11.291177749633789
    9. 'marked' → logprob: -11.541177749633789
    10. 'consider' → logprob: -11.916177749633789

Token 424: ' or' (ID: 503)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.692863941192627
    2. '<|end|>' → logprob: -2.067863941192627
    3. '[' → logprob: -2.317863941192627
    4. 'if' → logprob: -2.692863941192627
    5. '
' → logprob: -2.942863941192627
    6. ' at' → logprob: -3.317863941192627
    7. ' =' → logprob: -3.442863941192627
    8. '.' → logprob: -3.567863941192627
    9. ' ' → logprob: -3.567863941192627
    10. '   ' → logprob: -3.692863941192627

Token 425: ' skipped' (ID: 72521)
  Prédit: 'sk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sk' → logprob: -0.08051343262195587
    2. 'not' → logprob: -3.4555134773254395
    3. ' skipped' → logprob: -3.4555134773254395
    4. 'skip' → logprob: -5.0805134773254395
    5. 'continue' → logprob: -6.0805134773254395
    6. 'if' → logprob: -6.2055134773254395
    7. ' not' → logprob: -6.4555134773254395
    8. '#' → logprob: -7.3305134773254395
    9. 'ignored' → logprob: -8.330513000488281
    10. 'jump' → logprob: -8.705513000488281

Token 426: ' first' (ID: 1577)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13287858664989471
    2. '       ' → logprob: -3.132878541946411
    3. '   ' → logprob: -3.882878541946411
    4. '    
' → logprob: -4.00787878036499
    5. '        
' → logprob: -4.75787878036499
    6. ' if' → logprob: -4.88287878036499
    7. '0' → logprob: -5.13287878036499
    8. ',' → logprob: -5.50787878036499
    9. 'i' → logprob: -6.00787878036499
    10. '  
' → logprob: -6.75787878036499

Token 427: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8135667443275452
    2. '   ' → logprob: -0.9385667443275452
    3. '       ' → logprob: -2.5635666847229004
    4. 'i' → logprob: -3.8135666847229004
    5. 'pos' → logprob: -3.8135666847229004
    6. '    
' → logprob: -4.0635666847229
    7. ' i' → logprob: -4.9385666847229
    8. 'idx' → logprob: -5.1885666847229
    9. '        
' → logprob: -5.5635666847229
    10. '0' → logprob: -6.5635666847229

Token 428: ' i' (ID: 575)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1987605094909668
    2. 'i' → logprob: -1.9487605094909668
    3. 'idx' → logprob: -4.823760509490967
    4. ' pos' → logprob: -4.948760509490967
    5. '   ' → logprob: -5.073760509490967
    6. 'if' → logprob: -5.323760509490967
    7. ' i' → logprob: -5.323760509490967
    8. '       ' → logprob: -5.448760509490967
    9. 'index' → logprob: -7.448760509490967
    10. ' idx' → logprob: -7.823760509490967

Token 429: '.e' (ID: 2560)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.002487903693690896
    2. '=' → logprob: -7.127488136291504
    3. 't' → logprob: -7.127488136291504
    4. 'n' → logprob: -7.502488136291504
    5. 'm' → logprob: -8.627488136291504
    6. '#' → logprob: -10.752488136291504
    7. '   ' → logprob: -10.752488136291504
    8. 's' → logprob: -10.877488136291504
    9. 'nd' → logprob: -11.127488136291504
    10. 'continue' → logprob: -11.377488136291504

Token 430: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5388041734695435
    2. '           ' → logprob: -2.163804054260254
    3. 'if' → logprob: -2.413804054260254
    4. '   ' → logprob: -3.038804054260254
    5. 'qual' → logprob: -3.163804054260254
    6. 'f' → logprob: -3.288804054260254
    7. '    ' → logprob: -4.913804054260254
    8. ' if' → logprob: -5.038804054260254
    9. '```' → logprob: -5.038804054260254
    10. '=' → logprob: -5.288804054260254

Token 431: ' start' (ID: 1604)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18842916190624237
    2. ' i' → logprob: -2.688429117202759
    3. 'if' → logprob: -3.563429117202759
    4. 'pos' → logprob: -3.813429117202759
    5. '   ' → logprob: -4.438429355621338
    6. ' if' → logprob: -4.563429355621338
    7. '       ' → logprob: -4.688429355621338
    8. 'idx' → logprob: -5.188429355621338
    9. '0' → logprob: -5.688429355621338
    10. ' pos' → logprob: -5.813429355621338

Token 432: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5587990283966064
    2. ' =' → logprob: -2.1837990283966064
    3. 'pos' → logprob: -2.3087990283966064
    4. '_idx' → logprob: -2.3087990283966064
    5. '_pos' → logprob: -2.6837990283966064
    6. '_index' → logprob: -4.183798789978027
    7. 'idx' → logprob: -4.683798789978027
    8. '=i' → logprob: -5.308798789978027
    9. 'from' → logprob: -5.558798789978027
    10. ' at' → logprob: -5.683798789978027

Token 433: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0071049900725483894
    2. 'i' → logprob: -5.257104873657227
    3. 'index' → logprob: -7.132104873657227
    4. ' i' → logprob: -7.882104873657227
    5. ' ' → logprob: -8.382104873657227
    6. 'idx' → logprob: -8.382104873657227
    7. ' index' → logprob: -9.257104873657227
    8. 'pos' → logprob: -9.632104873657227
    9. ' idx' → logprob: -10.257104873657227
    10. 'position' → logprob: -11.007104873657227

Token 434: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003278368094470352
    2. 'i' → logprob: -8.625328063964844
    3. ' ' → logprob: -9.625328063964844
    4. 'index' → logprob: -9.750328063964844
    5. 'idx' → logprob: -11.375328063964844
    6. ' i' → logprob: -11.875328063964844
    7. ' index' → logprob: -12.875328063964844
    8. ' idx' → logprob: -14.375328063964844
    9. '   ' → logprob: -14.500328063964844
    10. 'position' → logprob: -14.750328063964844

Token 435: ' index' (ID: 3472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005977739114314318
    2. '   ' → logprob: -6.130977630615234
    3. '    
' → logprob: -6.880977630615234
    4. '       ' → logprob: -7.880977630615234
    5. '  
' → logprob: -8.005977630615234
    6. '
' → logprob: -8.255977630615234
    7. 'idx' → logprob: -8.505977630615234
    8. '        
' → logprob: -8.755977630615234
    9. ',' → logprob: -9.005977630615234
    10. ' 
' → logprob: -9.255977630615234

Token 436: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0201300382614136
    2. 'pos' → logprob: -1.1451300382614136
    3. 'i' → logprob: -1.8951300382614136
    4. ' pos' → logprob: -2.645130157470703
    5. ' i' → logprob: -2.895130157470703
    6. 'idx' → logprob: -4.020130157470703
    7. '       ' → logprob: -4.645130157470703
    8. ' idx' → logprob: -5.020130157470703
    9. '
' → logprob: -5.270130157470703
    10. '    
' → logprob: -6.770130157470703

Token 437: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2685645818710327
    2. 'pos' → logprob: -1.5185645818710327
    3. '
' → logprob: -1.7685645818710327
    4. ' i' → logprob: -2.0185647010803223
    5. '   ' → logprob: -2.5185647010803223
    6. ' pos' → logprob: -3.1435647010803223
    7. 'idx' → logprob: -3.3935647010803223
    8. '       ' → logprob: -3.8935647010803223
    9. ' idx' → logprob: -5.268564701080322
    10. '    
' → logprob: -5.643564701080322

Token 438: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0451298952102661
    2. 'i' (adapté à ' i') → logprob: -1.4201298952102661
    3. '
' → logprob: -2.1701297760009766
    4. '       ' → logprob: -2.4201297760009766
    5. ' i' → logprob: -2.4201297760009766
    6. 'pos' → logprob: -2.6701297760009766
    7. ' pos' → logprob: -3.7951297760009766
    8. '    
' → logprob: -5.045129776000977
    9. 'idx' → logprob: -5.045129776000977
    10. ' idx' → logprob: -6.045129776000977

Token 439: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132677972316742
    2. ' =' → logprob: -1.3132678270339966
    3. ',' → logprob: -12.813267707824707
    4. ' ' → logprob: -13.813267707824707
    5. '=i' → logprob: -14.938267707824707
    6. '=int' → logprob: -15.188267707824707
    7. ')' → logprob: -15.313267707824707
    8. ':' → logprob: -15.438267707824707
    9. ' =
' → logprob: -15.438267707824707
    10. '=
' → logprob: -15.563267707824707

Token 440: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014060820103622973
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -14.625140190124512
    4. '  ' → logprob: -16.875141143798828
    5. '=' → logprob: -17.937641143798828
    6. '[' → logprob: -18.000141143798828
    7. '1' → logprob: -18.000141143798828
    8. '    ' → logprob: -18.062641143798828
    9. '.' → logprob: -18.125141143798828
    10. '۰' → logprob: -18.125141143798828

Token 441: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010926496179308742
    2. ' ' → logprob: -9.125109672546387
    3. '   ' → logprob: -15.875109672546387
    4. '-' → logprob: -17.43760871887207
    5. '  ' → logprob: -17.56260871887207
    6. '1' → logprob: -18.18760871887207
    7. '۰' → logprob: -18.31260871887207
    8. '=' → logprob: -18.50010871887207
    9. '```' → logprob: -18.50010871887207
    10. '[' → logprob: -18.56260871887207

Token 442: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0014346358366310596
    2. '<|end|>' → logprob: -7.376434803009033
    3. 'while' → logprob: -8.251434326171875
    4. ' while' → logprob: -8.376434326171875
    5. ' 
' → logprob: -9.751434326171875
    6. '<|end|>' → logprob: -9.876434326171875
    7. '  
' → logprob: -10.126434326171875
    8. '
' → logprob: -10.626434326171875
    9. ')
' → logprob: -10.626434326171875
    10. '    
' → logprob: -10.876434326171875

Token 443: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03928735479712486
    2. 'while' → logprob: -4.164287567138672
    3. '<|end|>' → logprob: -4.414287567138672
    4. ' while' → logprob: -4.914287567138672
    5. '<|end|>' → logprob: -6.914287567138672
    6. ':' → logprob: -7.914287567138672
    7. '	while' → logprob: -8.289287567138672
    8. ')' → logprob: -8.414287567138672
    9. '\n' → logprob: -8.414287567138672
    10. ' 
' → logprob: -8.414287567138672

Token 444: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.20340633392333984
    2. ' while' → logprob: -1.7034063339233398
    3. '
' → logprob: -6.70340633392334
    4. '       ' → logprob: -8.32840633392334
    5. '   ' → logprob: -8.57840633392334
    6. '	while' → logprob: -8.95340633392334
    7. 'n' → logprob: -10.32840633392334
    8. ')' → logprob: -10.45340633392334
    9. '    ' → logprob: -10.57840633392334
    10. 'if' → logprob: -11.07840633392334

Token 445: ' Use' (ID: 7649)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01155066303908825
    2. ' while' → logprob: -4.761550426483154
    3. 'stack' → logprob: -6.011550426483154
    4. 'def' → logprob: -8.636550903320312
    5. '       ' → logprob: -9.136550903320312
    6. 'from' → logprob: -9.636550903320312
    7. '   ' → logprob: -9.761550903320312
    8. 'visited' → logprob: -9.761550903320312
    9. ' stack' → logprob: -12.261550903320312
    10. 'n' → logprob: -12.386550903320312

Token 446: ' function' (ID: 1114)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.38125091791152954
    2. ' while' → logprob: -1.8812508583068848
    3. ' threading' → logprob: -3.1312508583068848
    4. '[]' → logprob: -3.5062508583068848
    5. 'thread' → logprob: -4.381250858306885
    6. 'stack' → logprob: -4.881250858306885
    7. 'deque' → logprob: -4.881250858306885
    8. 'def' → logprob: -5.006250858306885
    9. '=' → logprob: -5.131250858306885
    10. ' =' → logprob: -5.381250858306885

Token 447: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004832380451261997
    2. '<|end|>' → logprob: -5.8798322677612305
    3. ' def' → logprob: -7.5048322677612305
    4. '
' → logprob: -8.25483226776123
    5. ':' → logprob: -8.25483226776123
    6. ':def' → logprob: -9.00483226776123
    7. 'lambda' → logprob: -9.50483226776123
    8. ')' → logprob: -9.50483226776123
    9. '(
' → logprob: -9.62983226776123
    10. '<|end|>' → logprob: -10.00483226776123

Token 448: ' get' (ID: 717)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2666495144367218
    2. 'read' → logprob: -1.6416494846343994
    3. 'None' → logprob: -4.0166497230529785
    4. ' read' → logprob: -5.3916497230529785
    5. '[]' → logprob: -5.5166497230529785
    6. ' def' → logprob: -5.8916497230529785
    7. 'lambda' → logprob: -6.2666497230529785
    8. 'process' → logprob: -6.3916497230529785
    9. ' None' → logprob: -6.6416497230529785
    10. 'dfs' → logprob: -6.6416497230529785

Token 449: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.3285205066204071
    2. ' next' → logprob: -1.3285205364227295
    3. ' the' → logprob: -5.45352029800415
    4. 'the' → logprob: -5.45352029800415
    5. 'i' → logprob: -6.20352029800415
    6. '_next' → logprob: -6.45352029800415
    7. ' i' → logprob: -6.82852029800415
    8. 'read' → logprob: -7.70352029800415
    9. 'def' → logprob: -7.82852029800415
    10. 'True' → logprob: -8.578520774841309

Token 450: ' letter' (ID: 10263)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_token' → logprob: -0.16663578152656555
    2. 'token' → logprob: -2.791635751724243
    3. '<|end|>' → logprob: -3.166635751724243
    4. ' token' → logprob: -4.916635990142822
    5. 'def' → logprob: -5.041635990142822
    6. ' ' → logprob: -5.416635990142822
    7. '<|end|>' → logprob: -5.416635990142822
    8. '_' → logprob: -5.541635990142822
    9. '_read' → logprob: -5.791635990142822
    10. 'read' → logprob: -6.166635990142822

Token 451: ' index' (ID: 3472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38179442286491394
    2. '
' → logprob: -1.5067944526672363
    3. '<|end|>' → logprob: -2.8817944526672363
    4. ' def' → logprob: -4.256794452667236
    5. ':' → logprob: -4.506794452667236
    6. '<|end|>' → logprob: -4.881794452667236
    7. ':def' → logprob: -6.506794452667236
    8. '()' → logprob: -6.881794452667236
    9. ')' → logprob: -7.131794452667236
    10. '()
' → logprob: -7.131794452667236

Token 452: ' without' (ID: 2935)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7683001756668091
    2. 'def' → logprob: -1.393300175666809
    3. '<|end|>' → logprob: -1.393300175666809
    4. '<|end|>' → logprob: -3.7683000564575195
    5. ' def' → logprob: -5.2683000564575195
    6. ':' → logprob: -5.5183000564575195
    7. ')' → logprob: -5.8933000564575195
    8. ':def' → logprob: -7.2683000564575195
    9. ':
' → logprob: -7.7683000564575195
    10. ',' → logprob: -8.01830005645752

Token 453: ' reading' (ID: 6085)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.5772553086280823
    2. ' skipping' → logprob: -2.2022552490234375
    3. ' going' → logprob: -2.5772552490234375
    4. 'sk' → logprob: -3.2022552490234375
    5. ' jumping' → logprob: -3.3272552490234375
    6. 'reading' → logprob: -3.9522552490234375
    7. 'going' → logprob: -3.9522552490234375
    8. 'breaking' → logprob: -4.0772552490234375
    9. ' None' → logprob: -4.2022552490234375
    10. 'ex' → logprob: -4.9522552490234375

Token 454: ' it' (ID: 480)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16255564987659454
    2. '
' → logprob: -3.037555694580078
    3. ':' → logprob: -3.287555694580078
    4. '<|end|>' → logprob: -3.287555694580078
    5. ' def' → logprob: -4.662555694580078
    6. '<|end|>' → logprob: -4.912555694580078
    7. ')' → logprob: -6.037555694580078
    8. ',' → logprob: -6.162555694580078
    9. ':
' → logprob: -7.037555694580078
    10. ':def' → logprob: -7.287555694580078

Token 455: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5835006237030029
    2. '
' → logprob: -0.8335006237030029
    3. ' def' → logprob: -5.583500862121582
    4. ':' → logprob: -6.958500862121582
    5. '<|end|>' → logprob: -7.583500862121582
    6. ':def' → logprob: -7.708500862121582
    7. '

' → logprob: -7.833500862121582
    8. ')
' → logprob: -7.833500862121582
    9. ')' → logprob: -8.208500862121582
    10. ':
' → logprob: -8.958500862121582

Token 456: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13504545390605927
    2. '
' → logprob: -3.1350455284118652
    3. ':' → logprob: -3.2600455284118652
    4. ' def' → logprob: -3.3850455284118652
    5. ')' → logprob: -6.010045528411865
    6. ':def' → logprob: -6.010045528411865
    7. '<|end|>' → logprob: -6.635045528411865
    8. ':
' → logprob: -6.760045528411865
    9. ',' → logprob: -7.635045528411865
    10. ' 
' → logprob: -8.010045051574707

Token 457: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22599001228809357
    2. 'def' (adapté à ' def') → logprob: -1.6009900569915771
    3. ' def' → logprob: -7.975989818572998
    4. '

' → logprob: -9.725990295410156
    5. '<|end|>' → logprob: -9.850990295410156
    6. ' 
' → logprob: -10.725990295410156
    7. '
' → logprob: -10.850990295410156
    8. ':def' → logprob: -11.225990295410156
    9. ')
' → logprob: -11.725990295410156
    10. '   ' → logprob: -11.725990295410156

Token 458: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6971980333328247
    2. 'get' → logprob: -0.8221980333328247
    3. ' get' → logprob: -3.322197914123535
    4. ' next' → logprob: -3.822197914123535
    5. 'find' → logprob: -5.947197914123535
    6. ' find' → logprob: -7.447197914123535
    7. 'can' → logprob: -7.572197914123535
    8. 'peek' → logprob: -8.322197914123535
    9. 'skip' → logprob: -8.572197914123535
    10. 'read' → logprob: -9.072197914123535

Token 459: '_linear' (ID: 102608)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7542144656181335
    2. '_token' → logprob: -0.8792144656181335
    3. '_index' → logprob: -3.0042145252227783
    4. '_idx' → logprob: -3.5042145252227783
    5. '_read' → logprob: -4.504214286804199
    6. '_letter' → logprob: -4.879214286804199
    7. '_pos' → logprob: -5.629214286804199
    8. '_step' → logprob: -5.629214286804199
    9. '_i' → logprob: -6.004214286804199
    10. '_char' → logprob: -6.129214286804199

Token 460: '(k' (ID: 12125)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.24877744913101196
    2. '_index' → logprob: -1.9987773895263672
    3. '_' → logprob: -2.873777389526367
    4. '_idx' → logprob: -4.623777389526367
    5. '(i' → logprob: -5.498777389526367
    6. '_i' → logprob: -5.998777389526367
    7. '_token' → logprob: -6.623777389526367
    8. '_read' → logprob: -6.748777389526367
    9. '(' → logprob: -6.873777389526367
    10. '()' → logprob: -6.998777389526367

Token 461: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.062081847339868546
    2. '):
' → logprob: -2.812081813812256
    3. ' ):' → logprob: -10.312082290649414
    4. '):
' → logprob: -10.437082290649414
    5. ')' → logprob: -10.687082290649414
    6. ':' → logprob: -11.187082290649414
    7. '):

' → logprob: -12.312082290649414
    8. '   ' → logprob: -13.187082290649414
    9. ' ' → logprob: -13.437082290649414
    10. '=' → logprob: -13.437082290649414

Token 462: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8129860162734985
    2. '   ' → logprob: -1.0629860162734985
    3. ' 
' → logprob: -3.187985897064209
    4. '           ' → logprob: -3.437985897064209
    5. ':' → logprob: -3.562985897064209
    6. ':
' → logprob: -3.562985897064209
    7. '
' → logprob: -3.562985897064209
    8. ' return' → logprob: -3.687985897064209
    9. '    
' → logprob: -5.062985897064209
    10. '    ' → logprob: -5.687985897064209

Token 463: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.658623218536377
    2. '   ' → logprob: -1.533623218536377
    3. 'return' → logprob: -1.533623218536377
    4. ' return' → logprob: -4.283623218536377
    5. 'k' → logprob: -4.783623218536377
    6. 'if' → logprob: -4.908623218536377
    7. 'while' → logprob: -5.033623218536377
    8. 'for' → logprob: -5.283623218536377
    9. '       ' → logprob: -5.658623218536377
    10. ' for' → logprob: -6.158623218536377

Token 464: ' k' (ID: 372)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7350029349327087
    2. 'k' → logprob: -0.8600029349327087
    3. 'while' → logprob: -2.6100029945373535
    4. 'for' → logprob: -4.7350029945373535
    5. '           ' → logprob: -4.8600029945373535
    6. '   ' → logprob: -6.2350029945373535
    7. 'res' → logprob: -6.6100029945373535
    8. ' return' → logprob: -6.7350029945373535
    9. 'i' → logprob: -7.3600029945373535
    10. 'non' → logprob: -7.8600029945373535

Token 465: ' is' (ID: 382)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21165435016155243
    2. '+=' → logprob: -1.7116543054580688
    3. '+k' → logprob: -4.711654186248779
    4. ' +' → logprob: -8.086654663085938
    5. '=' → logprob: -8.211654663085938
    6. ' +=' → logprob: -8.336654663085938
    7. '=k' → logprob: -8.711654663085938
    8. '+
' → logprob: -9.586654663085938
    9. ')+' → logprob: -9.961654663085938
    10. '   ' → logprob: -10.586654663085938

Token 466: ' the' (ID: 290)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005854012910276651
    2. ' k' → logprob: -5.50585412979126
    3. '(k' → logprob: -6.63085412979126
    4. ' (' → logprob: -7.88085412979126
    5. '           ' → logprob: -10.880853652954102
    6. '+' → logprob: -11.755853652954102
    7. 'len' → logprob: -12.255853652954102
    8. ' ' → logprob: -12.255853652954102
    9. '(' → logprob: -12.255853652954102
    10. 'None' → logprob: -12.380853652954102

Token 467: ' index' (ID: 3472)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.024630073457956314
    2. 'next' → logprob: -5.024630069732666
    3. ' next' → logprob: -5.149630069732666
    4. ' k' → logprob: -5.149630069732666
    5. 'current' → logprob: -5.774630069732666
    6. ' current' → logprob: -6.149630069732666
    7. 'linear' → logprob: -8.274630546569824
    8. 'index' → logprob: -9.149630546569824
    9. 'last' → logprob: -9.524630546569824
    10. 'return' → logprob: -9.524630546569824

Token 468: ' of' (ID: 328)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05686061456799507
    2. '           ' → logprob: -3.3068606853485107
    3. ' +' → logprob: -4.681860446929932
    4. '   ' → logprob: -5.931860446929932
    5. '+k' → logprob: -6.181860446929932
    6. '1' → logprob: -6.556860446929932
    7. 'return' → logprob: -6.556860446929932
    8. ' ' → logprob: -8.18186092376709
    9. ' return' → logprob: -8.30686092376709
    10. '
' → logprob: -8.55686092376709

Token 469: ' last' (ID: 2174)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.023584933951497078
    2. ' k' → logprob: -3.7735848426818848
    3. '(k' → logprob: -9.523585319519043
    4. ' (' → logprob: -9.898585319519043
    5. ' the' → logprob: -10.023585319519043
    6. ' next' → logprob: -10.398585319519043
    7. 'next' → logprob: -10.773585319519043
    8. 'the' → logprob: -11.023585319519043
    9. ' ' → logprob: -11.273585319519043
    10. '
' → logprob: -11.523585319519043

Token 470: ' read' (ID: 1729)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.2714207172393799
    2. ' read' → logprob: -1.8964207172393799
    3. '_read' → logprob: -2.02142071723938
    4. '_linear' → logprob: -2.02142071723938
    5. 'k' → logprob: -2.14642071723938
    6. 'linear' → logprob: -2.77142071723938
    7. 'read' → logprob: -3.39642071723938
    8. ' +' → logprob: -3.77142071723938
    9. '+' → logprob: -3.77142071723938
    10. ' linear' → logprob: -4.396420478820801

Token 471: ' letter' (ID: 10263)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14375145733356476
    2. ' +' → logprob: -2.143751382827759
    3. '
' → logprob: -5.393751621246338
    4. '+k' → logprob: -5.643751621246338
    5. ' ' → logprob: -6.143751621246338
    6. 'k' → logprob: -6.518751621246338
    7. '   ' → logprob: -6.768751621246338
    8. 'if' → logprob: -7.018751621246338
    9. ' if' → logprob: -7.143751621246338
    10. 'token' → logprob: -8.01875114440918

Token 472: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.185327410697937
    2. '           ' → logprob: -2.0603275299072266
    3. '+' → logprob: -4.185327529907227
    4. '   ' → logprob: -4.185327529907227
    5. '
' → logprob: -5.560327529907227
    6. 'return' → logprob: -6.185327529907227
    7. ' +' → logprob: -6.560327529907227
    8. '    
' → logprob: -7.310327529907227
    9. '\n' → logprob: -7.810327529907227
    10. '       ' → logprob: -8.060327529907227

Token 473: ' number' (ID: 2086)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5512831211090088
    2. ' k' → logprob: -1.3012831211090088
    3. '
' → logprob: -3.301283121109009
    4. 'linear' → logprob: -3.676283121109009
    5. '+' → logprob: -3.926283121109009
    6. ')' → logprob: -4.55128288269043
    7. ' linear' → logprob: -5.30128288269043
    8. ' +' → logprob: -5.30128288269043
    9. 'the' → logprob: -5.42628288269043
    10. '(k' → logprob: -5.42628288269043

Token 474: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06031143665313721
    2. ' +' → logprob: -2.9353113174438477
    3. '+k' → logprob: -5.560311317443848
    4. '           ' → logprob: -7.935311317443848
    5. '+
' → logprob: -8.685311317443848
    6. '   ' → logprob: -8.685311317443848
    7. ')+' → logprob: -8.810311317443848
    8. 'k' → logprob: -9.060311317443848
    9. '
' → logprob: -9.310311317443848
    10. 'def' → logprob: -9.560311317443848

Token 475: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11722587794065475
    2. 'k' → logprob: -2.6172258853912354
    3. ' +' → logprob: -4.242225646972656
    4. '=' → logprob: -5.617225646972656
    5. '+k' → logprob: -5.617225646972656
    6. '1' → logprob: -5.992225646972656
    7. ')' → logprob: -6.117225646972656
    8. ' k' → logprob: -6.367225646972656
    9. ' ' → logprob: -6.492225646972656
    10. ')+' → logprob: -6.617225646972656

Token 476: ' or' (ID: 503)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2634819746017456
    2. '
' → logprob: -2.138482093811035
    3. ' +' → logprob: -2.638482093811035
    4. '   ' → logprob: -3.763482093811035
    5. '           ' → logprob: -4.513482093811035
    6. ' if' → logprob: -6.513482093811035
    7. '+
' → logprob: -6.638482093811035
    8. 'if' → logprob: -7.013482093811035
    9. '
' → logprob: -7.013482093811035
    10. 'def' → logprob: -7.013482093811035

Token 477: ' previous' (ID: 5880)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06293539702892303
    2. ' k' → logprob: -3.8129353523254395
    3. 'None' → logprob: -4.0629353523254395
    4. '+' → logprob: -4.8129353523254395
    5. 'jump' → logprob: -5.4379353523254395
    6. 'def' → logprob: -5.9379353523254395
    7. '
' → logprob: -6.3129353523254395
    8. ' None' → logprob: -6.9379353523254395
    9. 'linear' → logprob: -7.6879353523254395
    10. ' jump' → logprob: -7.6879353523254395

Token 478: ' letter' (ID: 10263)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5786861777305603
    2. ' +' → logprob: -1.828686237335205
    3. 'k' → logprob: -2.578686237335205
    4. '
' → logprob: -2.703686237335205
    5. ' k' → logprob: -3.703686237335205
    6. 'def' → logprob: -4.078686237335205
    7. 'return' → logprob: -4.203686237335205
    8. '1' → logprob: -4.453686237335205
    9. ' return' → logprob: -4.578686237335205
    10. ' if' → logprob: -4.578686237335205

Token 479: ' in' (ID: 306)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7401359677314758
    2. '   ' → logprob: -1.365135908126831
    3. ' +' → logprob: -1.740135908126831
    4. '
' → logprob: -2.990135908126831
    5. '       ' → logprob: -3.865135908126831
    6. '           ' → logprob: -4.86513614654541
    7. ' if' → logprob: -6.24013614654541
    8. ':
' → logprob: -6.36513614654541
    9. 'return' → logprob: -6.61513614654541
    10. 'if' → logprob: -6.74013614654541

Token 480: ' normal' (ID: 6078)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.7467808723449707
    2. 'linear' → logprob: -1.1217808723449707
    3. 'the' → logprob: -2.1217808723449707
    4. 'order' → logprob: -3.7467808723449707
    5. 'range' → logprob: -4.621780872344971
    6. 'line' → logprob: -4.746780872344971
    7. 'jump' → logprob: -4.996780872344971
    8. 'i' → logprob: -5.246780872344971
    9. 'reading' → logprob: -5.246780872344971
    10. 'k' → logprob: -5.246780872344971

Token 481: ' reading' (ID: 6085)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9218045473098755
    2. '_linear' → logprob: -1.9218045473098755
    3. 'def' → logprob: -2.421804428100586
    4. ' linear' → logprob: -2.671804428100586
    5. ' +' → logprob: -2.671804428100586
    6. 'linear' → logprob: -2.921804428100586
    7. '_line' → logprob: -3.296804428100586
    8. 'line' → logprob: -4.046804428100586
    9. '_jump' → logprob: -4.171804428100586
    10. ' line' → logprob: -4.296804428100586

Token 482: ' order' (ID: 2569)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4093102812767029
    2. ' +' → logprob: -1.4093103408813477
    3. '   ' → logprob: -3.1593103408813477
    4. '           ' → logprob: -4.409310340881348
    5. '       ' → logprob: -4.784310340881348
    6. 'return' → logprob: -4.909310340881348
    7. '
' → logprob: -5.034310340881348
    8. '+
' → logprob: -5.784310340881348
    9. 'def' → logprob: -6.034310340881348
    10. ':
' → logprob: -6.409310340881348

Token 483: ' ?' (ID: 1423)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.435441255569458
    2. '   ' → logprob: -1.310441255569458
    3. '+' → logprob: -3.435441255569458
    4. '           ' → logprob: -4.185441017150879
    5. ' +' → logprob: -5.060441017150879
    6. 'return' → logprob: -5.435441017150879
    7. 'def' → logprob: -5.560441017150879
    8. '
' → logprob: -5.685441017150879
    9. '       ' → logprob: -5.810441017150879
    10. '    
' → logprob: -5.810441017150879

Token 484: ' see' (ID: 1921)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6084913015365601
    2. '   ' → logprob: -1.23349130153656
    3. '+' → logprob: -2.7334914207458496
    4. '           ' → logprob: -2.9834914207458496
    5. 'return' → logprob: -4.48349142074585
    6. ':
' → logprob: -4.85849142074585
    7. '       ' → logprob: -5.35849142074585
    8. ' +' → logprob: -5.35849142074585
    9. '):
' → logprob: -5.85849142074585
    10. '
' → logprob: -5.85849142074585

Token 485: ' rules' (ID: 9607)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2851297855377197
    2. ' k' → logprob: -1.4101297855377197
    3. ' return' → logprob: -6.285129547119141
    4. ')' → logprob: -7.410129547119141
    5. 'return' → logprob: -8.03512954711914
    6. ' next' → logprob: -8.66012954711914
    7. '
' → logprob: -9.28512954711914
    8. ' ' → logprob: -9.53512954711914
    9. '(k' → logprob: -9.53512954711914
    10. '+' → logprob: -9.78512954711914

Token 486: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03313426673412323
    2. '   ' → logprob: -3.7831342220306396
    3. '           ' → logprob: -5.408134460449219
    4. '    
' → logprob: -6.658134460449219
    5. 'return' → logprob: -6.658134460449219
    6. '       ' → logprob: -7.158134460449219
    7. '
' → logprob: -7.408134460449219
    8. '  
' → logprob: -8.533134460449219
    9. ' 
' → logprob: -8.783134460449219
    10. '=' → logprob: -9.033134460449219

Token 487: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41839125752449036
    2. '       ' → logprob: -2.293391227722168
    3. '
' → logprob: -3.043391227722168
    4. 'return' → logprob: -3.043391227722168
    5. '(k' → logprob: -3.543391227722168
    6. 'k' → logprob: -3.793391227722168
    7. ' 
' → logprob: -4.168391227722168
    8. '    
' → logprob: -4.418391227722168
    9. '           ' → logprob: -4.793391227722168
    10. '```' → logprob: -5.168391227722168

Token 488: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1518795490264893
    2. '           ' → logprob: -1.4018795490264893
    3. 'while' → logprob: -1.7768795490264893
    4. '
' → logprob: -1.9018795490264893
    5. ' while' → logprob: -2.7768795490264893
    6. ' return' → logprob: -3.9018795490264893
    7. 'k' → logprob: -4.77687931060791
    8. 'if' → logprob: -5.40187931060791
    9. '       ' → logprob: -5.52687931060791
    10. '   ' → logprob: -5.65187931060791

Token 489: ' rule' (ID: 10652)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5549121499061584
    2. 'while' → logprob: -1.8049120903015137
    3. 'k' → logprob: -2.0549120903015137
    4. '           ' → logprob: -2.6799120903015137
    5. '   ' → logprob: -3.6799120903015137
    6. 'for' → logprob: -4.429912090301514
    7. '       ' → logprob: -5.179912090301514
    8. 'if' → logprob: -5.304912090301514
    9. ' return' → logprob: -5.304912090301514
    10. ' while' → logprob: -5.554912090301514

Token 490: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.868831992149353
    2. '=' → logprob: -1.868831992149353
    3. '_linear' → logprob: -2.3688321113586426
    4. ' =' → logprob: -2.4938321113586426
    5. 'next' → logprob: -2.7438321113586426
    6. ' next' → logprob: -2.8688321113586426
    7. '   ' → logprob: -2.9938321113586426
    8. '_' → logprob: -2.9938321113586426
    9. 'def' → logprob: -3.1188321113586426
    10. ':' → logprob: -3.1188321113586426

Token 491: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4098573923110962
    2. ' ' → logprob: -1.6598573923110962
    3. '=' → logprob: -1.9098573923110962
    4. ' =' → logprob: -2.1598572731018066
    5. '   ' → logprob: -2.5348572731018066
    6. ' ==' → logprob: -2.6598572731018066
    7. '       ' → logprob: -3.5348572731018066
    8. ':' → logprob: -3.9098572731018066
    9. ' def' → logprob: -4.034857273101807
    10. '==' → logprob: -4.284857273101807

Token 492: ' says' (ID: 5003)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.65650475025177
    2. '   ' → logprob: -1.28150475025177
    3. '       ' → logprob: -3.1565046310424805
    4. ':
' → logprob: -3.5315046310424805
    5. 'def' → logprob: -4.0315046310424805
    6. ' =' → logprob: -4.0315046310424805
    7. '=' → logprob: -4.0315046310424805
    8. '):' → logprob: -4.5315046310424805
    9. '):
' → logprob: -4.6565046310424805
    10. ')' → logprob: -4.9065046310424805

Token 493: ':' (ID: 25)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.39871346950531006
    2. ' k' → logprob: -1.89871346950531
    3. 'return' → logprob: -2.1487135887145996
    4. 'k' → logprob: -2.8987135887145996
    5. '           ' → logprob: -6.3987135887146
    6. ' if' → logprob: -7.0237135887146
    7. '
' → logprob: -7.0237135887146
    8. ' for' → logprob: -7.2737135887146
    9. ' while' → logprob: -7.2737135887146
    10. '   ' → logprob: -7.5237135887146

Token 494: ' If' (ID: 1843)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7636180520057678
    2. '           ' → logprob: -1.388617992401123
    3. 'k' → logprob: -1.888617992401123
    4. ' return' → logprob: -3.138617992401123
    5. 'while' → logprob: -3.388617992401123
    6. ' k' → logprob: -3.888617992401123
    7. 'for' → logprob: -4.513617992401123
    8. '   ' → logprob: -5.013617992401123
    9. ' for' → logprob: -5.138617992401123
    10. ' while' → logprob: -5.138617992401123

Token 495: ' no' (ID: 860)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.42378106713294983
    2. 'jump' → logprob: -1.6737810373306274
    3. ' k' → logprob: -2.923781156539917
    4. ' jump' → logprob: -3.548781156539917
    5. 'has' → logprob: -3.673781156539917
    6. 'next' → logprob: -4.298780918121338
    7. 'read' → logprob: -4.548780918121338
    8. 'linear' → logprob: -5.298780918121338
    9. ' has' → logprob: -5.423780918121338
    10. ' read' → logprob: -5.548780918121338

Token 496: ' such' (ID: 2238)
  Prédit: '_linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_linear' → logprob: -0.8182210326194763
    2. ' linear' → logprob: -1.943221092224121
    3. 'linear' → logprob: -2.193221092224121
    4. 'k' → logprob: -2.193221092224121
    5. ' k' → logprob: -2.568221092224121
    6. ' next' → logprob: -4.068221092224121
    7. 'jump' → logprob: -4.693221092224121
    8. ' jump' → logprob: -4.943221092224121
    9. ' i' → logprob: -5.068221092224121
    10. '_jump' → logprob: -5.193221092224121

Token 497: ' letter' (ID: 10263)
  Prédit: '_linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_linear' → logprob: -0.38255345821380615
    2. 'k' → logprob: -2.6325535774230957
    3. 'linear' → logprob: -2.8825535774230957
    4. '_' → logprob: -3.6325535774230957
    5. ' linear' → logprob: -3.6325535774230957
    6. ' k' → logprob: -3.7575535774230957
    7. 'jump' → logprob: -4.632553577423096
    8. '_jump' → logprob: -4.632553577423096
    9. ' jump' → logprob: -5.132553577423096
    10. 'letter' → logprob: -5.257553577423096

Token 498: ' L' (ID: 451)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.8783325552940369
    2. ',' → logprob: -1.6283326148986816
    3. ' in' → logprob: -2.7533326148986816
    4. ' at' → logprob: -3.1283326148986816
    5. ' is' → logprob: -3.1283326148986816
    6. ' and' → logprob: -3.3783326148986816
    7. '   ' → logprob: -3.3783326148986816
    8. 'or' → logprob: -3.8783326148986816
    9. ':' → logprob: -4.003332614898682
    10. ' k' → logprob: -4.128332614898682

Token 499: ' (' (ID: 350)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.2486047744750977
    2. ':' → logprob: -1.4986047744750977
    3. ',' → logprob: -1.6236047744750977
    4. ' is' → logprob: -2.4986047744750977
    5. 'e' → logprob: -2.6236047744750977
    6. ')' → logprob: -3.8736047744750977
    7. '_' → logprob: -4.248604774475098
    8. 'ex' → logprob: -4.373604774475098
    9. ' in' → logprob: -4.748604774475098
    10. 'i' → logprob: -4.748604774475098

Token 500: 'jump' (ID: 79879)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6340687870979309
    2. ')' → logprob: -1.6340687274932861
    3. '),' → logprob: -1.7590687274932861
    4. ' is' → logprob: -4.009068965911865
    5. 'or' → logprob: -4.259068965911865
    6. '):
' → logprob: -4.259068965911865
    7. 'k' → logprob: -5.009068965911865
    8. ' k' → logprob: -5.384068965911865
    9. ' in' → logprob: -5.634068965911865
    10. ' and' → logprob: -5.884068965911865

Token 501: ' mark' (ID: 1983)
  Prédit: '_marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_marks' → logprob: -0.25981107354164124
    2. '_mark' → logprob: -2.6348111629486084
    3. ')' → logprob: -2.8848111629486084
    4. '_' → logprob: -3.1348111629486084
    5. '_linear' → logprob: -4.134810924530029
    6. '           ' → logprob: -5.509810924530029
    7. '
' → logprob: -5.634810924530029
    8. '   ' → logprob: -5.884810924530029
    9. '_index' → logprob: -6.134810924530029
    10. '=' → logprob: -6.259810924530029

Token 502: ' t' (ID: 260)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.7706919312477112
    2. 'number' → logprob: -2.0206918716430664
    3. 'with' → logprob: -2.1456918716430664
    4. '>=' → logprob: -2.7706918716430664
    5. 'type' → logprob: -3.0206918716430664
    6. ')' → logprob: -3.2706918716430664
    7. ' number' → logprob: -3.3956918716430664
    8. 'index' → logprob: -4.270691871643066
    9. '==' → logprob: -4.895691871643066
    10. ' type' → logprob: -4.895691871643066

Token 503: ',n' (ID: 18103)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49048420786857605
    2. '),' → logprob: -2.3654842376708984
    3. ',' → logprob: -2.9904842376708984
    4. 'ype' → logprob: -3.3654842376708984
    5. '==' → logprob: -3.8654842376708984
    6. '>=' → logprob: -4.115484237670898
    7. ' is' → logprob: -4.365484237670898
    8. '
' → logprob: -4.740484237670898
    9. '   ' → logprob: -4.740484237670898
    10. '1' → logprob: -4.865484237670898

Token 504: '+' (ID: 10)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.4014360010623932
    2. ')' → logprob: -2.1514360904693604
    3. ',' → logprob: -2.9014360904693604
    4. '),' → logprob: -3.4014360904693604
    5. '=' → logprob: -3.7764360904693604
    6. '==' → logprob: -3.9014360904693604
    7. ' with' → logprob: -4.026435852050781
    8. ' >=' → logprob: -4.026435852050781
    9. ' where' → logprob: -4.401435852050781
    10. ' and' → logprob: -5.651435852050781

Token 505: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25501736998558044
    2. '=' → logprob: -1.7550173997879028
    3. ')' → logprob: -3.7550172805786133
    4. '2' → logprob: -5.255017280578613
    5. '>=' → logprob: -5.380017280578613
    6. 'o' → logprob: -5.630017280578613
    7. '==' → logprob: -5.630017280578613
    8. '+' → logprob: -5.755017280578613
    9. '>' → logprob: -6.130017280578613
    10. 'one' → logprob: -6.130017280578613

Token 506: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05276263505220413
    2. ' in' → logprob: -4.302762508392334
    3. ' exists' → logprob: -4.552762508392334
    4. '),' → logprob: -4.677762508392334
    5. '==' → logprob: -5.052762508392334
    6. '))' → logprob: -5.677762508392334
    7. ' )' → logprob: -5.802762508392334
    8. ')==' → logprob: -7.302762508392334
    9. ')]' → logprob: -7.552762508392334
    10. ' not' → logprob: -7.677762508392334

Token 507: ' .' (ID: 887)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -1.2243796586990356
    2. '):
' → logprob: -1.4743796586990356
    3. ':
' → logprob: -1.9743796586990356
    4. ':' → logprob: -2.099379539489746
    5. '):' → logprob: -3.474379539489746
    6. '   ' → logprob: -3.474379539489746
    7. '():' → logprob: -3.599379539489746
    8. ' return' → logprob: -4.099379539489746
    9. ',' → logprob: -4.099379539489746
    10. ' and' → logprob: -4.099379539489746

Token 508: ' the' (ID: 290)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8234044313430786
    2. ':
' → logprob: -1.9484044313430786
    3. '           ' → logprob: -2.323404312133789
    4. ',' → logprob: -2.698404312133789
    5. '):
' → logprob: -2.823404312133789
    6. 'return' → logprob: -2.948404312133789
    7. ':' → logprob: -3.573404312133789
    8. ')' → logprob: -3.823404312133789
    9. ' or' → logprob: -3.948404312133789
    10. ':return' → logprob: -4.448404312133789

Token 509: ' (' (ID: 350)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.15408724546432495
    2. ' return' → logprob: -2.7790873050689697
    3. ' linear' → logprob: -3.6540873050689697
    4. 'next' → logprob: -3.7790873050689697
    5. 'def' → logprob: -5.154087066650391
    6. 'return' → logprob: -5.154087066650391
    7. ' def' → logprob: -5.404087066650391
    8. ' function' → logprob: -5.904087066650391
    9. ' current' → logprob: -6.029087066650391
    10. ' rest' → logprob: -6.154087066650391

Token 510: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.28633955121040344
    2. ')' → logprob: -2.286339521408081
    3. ' k' → logprob: -2.286339521408081
    4. ' linear' → logprob: -4.41133975982666
    5. ' next' → logprob: -4.91133975982666
    6. ' )' → logprob: -5.28633975982666
    7. 'linear' → logprob: -5.28633975982666
    8. 'i' → logprob: -5.41133975982666
    9. ' i' → logprob: -6.28633975982666
    10. 'next' → logprob: -6.66133975982666

Token 511: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15239183604717255
    2. ' +' → logprob: -2.0273919105529785
    3. ')' → logprob: -5.1523919105529785
    4. ')+' → logprob: -5.7773919105529785
    5. ' )' → logprob: -9.02739143371582
    6. ' ' → logprob: -9.52739143371582
    7. '
' → logprob: -10.15239143371582
    8. ']+' → logprob: -10.15239143371582
    9. '+)' → logprob: -10.15239143371582
    10. ' is' → logprob: -10.21489143371582

Token 512: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002765902318060398
    2. '+' → logprob: -9.000276565551758
    3. ')' → logprob: -9.375276565551758
    4. ' ' → logprob: -10.125276565551758
    5. '
' → logprob: -12.000276565551758
    6. '   ' → logprob: -12.125276565551758
    7. ' +' → logprob: -13.000276565551758
    8. '=' → logprob: -13.000276565551758
    9. 'def' → logprob: -13.125276565551758
    10. '```' → logprob: -13.750276565551758

Token 513: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00680524529889226
    2. ' )' → logprob: -6.756805419921875
    3. ')<' → logprob: -6.756805419921875
    4. ' if' → logprob: -6.881805419921875
    5. ']' → logprob: -7.131805419921875
    6. ' <' → logprob: -7.506805419921875
    7. ')+' → logprob: -8.131805419921875
    8. '<' → logprob: -8.256805419921875
    9. '<len' → logprob: -8.256805419921875
    10. ')>=' → logprob: -8.506805419921875

Token 514: 'th' (ID: 404)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7723488807678223
    2. 'if' → logprob: -1.6473488807678223
    3. '<|end|>' → logprob: -1.8973488807678223
    4. ')' → logprob: -2.0223488807678223
    5. ' ' → logprob: -3.7723488807678223
    6. 'token' → logprob: -4.772348880767822
    7. 'def' → logprob: -4.772348880767822
    8. '  ' → logprob: -5.897348880767822
    9. '<|end|>' → logprob: -6.147348880767822
    10. 'limit' → logprob: -6.147348880767822

Token 515: ' letter' (ID: 10263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6570979356765747
    2. '<|end|>' → logprob: -1.0320979356765747
    3. ']' → logprob: -3.032097816467285
    4. ' if' → logprob: -4.282097816467285
    5. '_' → logprob: -4.657097816467285
    6. 'token' → logprob: -4.907097816467285
    7. 'if' → logprob: -5.032097816467285
    8. ' ' → logprob: -5.407097816467285
    9. '<|end|>' → logprob: -5.657097816467285
    10. ' )' → logprob: -5.907097816467285

Token 516: ' is' (ID: 382)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.09239306300878525
    2. 'def' → logprob: -3.342393159866333
    3. ')' → logprob: -4.217392921447754
    4. 'return' → logprob: -4.967392921447754
    5. '(' → logprob: -5.092392921447754
    6. ':' → logprob: -5.342392921447754
    7. '(n' → logprob: -5.592392921447754
    8. '
' → logprob: -6.092392921447754
    9. '<|end|>' → logprob: -6.092392921447754
    10. '   ' → logprob: -6.217392921447754

Token 517: ' read' (ID: 1729)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8708915710449219
    2. ' k' → logprob: -1.3708915710449219
    3. ' None' → logprob: -1.4958915710449219
    4. 'None' → logprob: -2.745891571044922
    5. ' next' → logprob: -3.995891571044922
    6. ' read' → logprob: -5.245891571044922
    7. 'next' → logprob: -5.620891571044922
    8. ' return' → logprob: -6.120891571044922
    9. ' visited' → logprob: -6.495891571044922
    10. 'return' → logprob: -6.870891571044922

Token 518: ',
' (ID: 412)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.34171754121780396
    2. '(' → logprob: -2.716717481613159
    3. '<|end|>' → logprob: -2.841717481613159
    4. ':' → logprob: -3.091717481613159
    5. '
' → logprob: -3.716717481613159
    6. ')' → logprob: -3.841717481613159
    7. 'def' → logprob: -4.341717720031738
    8. 'return' → logprob: -4.341717720031738
    9. '(i' → logprob: -4.716717720031738
    10. '<|end|>' → logprob: -4.841717720031738

Token 519: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6258834600448608
    2. '<|end|>' → logprob: -2.2508835792541504
    3. ')' → logprob: -2.5008835792541504
    4. ' k' → logprob: -2.6258835792541504
    5. 'return' → logprob: -2.8758835792541504
    6. ' return' → logprob: -3.6258835792541504
    7. ')
' → logprob: -4.00088357925415
    8. '       ' → logprob: -4.50088357925415
    9. ' ' → logprob: -4.50088357925415
    10. '   ' → logprob: -4.50088357925415

Token 520: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.108461856842041
    2. ' else' → logprob: -1.733461856842041
    3. 'return' → logprob: -1.733461856842041
    4. 'else' → logprob: -2.733461856842041
    5. ')' → logprob: -3.233461856842041
    6. ' return' → logprob: -3.358461856842041
    7. '
' → logprob: -4.108461856842041
    8. '       ' → logprob: -4.233461856842041
    9. ' 
' → logprob: -4.233461856842041
    10. ')
' → logprob: -4.358461856842041

Token 521: ' where' (ID: 1919)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9020974636077881
    2. '
' → logprob: -1.777097463607788
    3. '           ' → logprob: -1.777097463607788
    4. ' return' → logprob: -2.152097463607788
    5. ')' → logprob: -3.402097463607788
    6. '<|end|>' → logprob: -3.402097463607788
    7. 'def' → logprob: -3.777097463607788
    8. '<|end|>' → logprob: -5.027097702026367
    9. '       ' → logprob: -5.152097702026367
    10. ')
' → logprob: -5.277097702026367

Token 522: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08880628645420074
    2. ' k' → logprob: -2.588806390762329
    3. '(k' → logprob: -5.33880615234375
    4. 'return' → logprob: -6.21380615234375
    5. ' return' → logprob: -6.71380615234375
    6. ' (' → logprob: -7.08880615234375
    7. '           ' → logprob: -8.08880615234375
    8. 'if' → logprob: -8.96380615234375
    9. '
' → logprob: -9.33880615234375
    10. ' if' → logprob: -9.46380615234375

Token 523: ' is' (ID: 382)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.055104780942201614
    2. ' +' → logprob: -2.9301047325134277
    3. '==' → logprob: -10.055105209350586
    4. ' <' → logprob: -10.305105209350586
    5. ' ==' → logprob: -10.430105209350586
    6. ')+' → logprob: -10.930105209350586
    7. '   ' → logprob: -11.180105209350586
    8. ')' → logprob: -11.805105209350586
    9. ' is' → logprob: -11.930105209350586
    10. '<' → logprob: -11.930105209350586

Token 524: ' the' (ID: 290)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3368503451347351
    2. ' k' → logprob: -1.5868504047393799
    3. 'i' → logprob: -4.586850166320801
    4. ' next' → logprob: -4.586850166320801
    5. ' last' → logprob: -4.586850166320801
    6. 'next' → logprob: -4.711850166320801
    7. '0' → logprob: -4.836850166320801
    8. 'last' → logprob: -5.211850166320801
    9. ' i' → logprob: -5.336850166320801
    10. 'read' → logprob: -5.586850166320801

Token 525: ' index' (ID: 3472)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.5098277926445007
    2. ' last' → logprob: -1.2598278522491455
    3. 'current' → logprob: -3.3848278522491455
    4. 'index' → logprob: -3.8848278522491455
    5. ' current' → logprob: -3.8848278522491455
    6. 'k' → logprob: -4.009827613830566
    7. ' index' → logprob: -5.634827613830566
    8. 'next' → logprob: -5.759827613830566
    9. 'linear' → logprob: -5.759827613830566
    10. ' k' → logprob: -6.134827613830566

Token 526: ' of' (ID: 328)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15271708369255066
    2. ' +' → logprob: -2.027717113494873
    3. '<|end|>' → logprob: -4.777717113494873
    4. ' of' → logprob: -7.277717113494873
    5. '<|end|>' → logprob: -7.402717113494873
    6. ')' → logprob: -9.902716636657715
    7. ' ' → logprob: -10.027716636657715
    8. 'of' → logprob: -10.527716636657715
    9. ' if' → logprob: -10.652716636657715
    10. '+k' → logprob: -11.027716636657715

Token 527: ' most' (ID: 1645)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.3864513635635376
    2. 'last' → logprob: -1.5114513635635376
    3. 'order' → logprob: -1.5114513635635376
    4. 'i' → logprob: -2.011451244354248
    5. 'read' → logprob: -3.011451244354248
    6. 'jump' → logprob: -3.261451244354248
    7. 'next' → logprob: -3.761451244354248
    8. 'linear' → logprob: -3.886451244354248
    9. 'L' → logprob: -4.636451244354248
    10. 'the' → logprob: -5.011451244354248

Token 528: ' recent' (ID: 7178)
  Prédit: ' recently'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recently' → logprob: -1.1967167854309082
    2. '+' → logprob: -1.9467167854309082
    3. '_recent' → logprob: -1.9467167854309082
    4. '_read' → logprob: -2.071716785430908
    5. 'recent' → logprob: -2.196716785430908
    6. '_linear' → logprob: -2.446716785430908
    7. ' recent' → logprob: -3.446716785430908
    8. ' +' → logprob: -3.696716785430908
    9. 'linear' → logprob: -4.321716785430908
    10. 'read' → logprob: -5.571716785430908

Token 529: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.24338756501674652
    2. ' read' → logprob: -1.7433875799179077
    3. '_read' → logprob: -3.243387460708618
    4. 'linear' → logprob: -7.368387699127197
    5. 'letter' → logprob: -7.368387699127197
    6. ' letter' → logprob: -9.243387222290039
    7. ' linear' → logprob: -9.493387222290039
    8. 'last' → logprob: -9.618387222290039
    9. ' ' → logprob: -9.743387222290039
    10. 'ly' → logprob: -9.868387222290039

Token 530: ' letter' (ID: 10263)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7724428176879883
    2. ')' → logprob: -1.2724428176879883
    3. ' +' → logprob: -1.8974428176879883
    4. '<|end|>' → logprob: -3.3974428176879883
    5. '_linear' → logprob: -3.8974428176879883
    6. 'def' → logprob: -4.772442817687988
    7. '_' → logprob: -4.897442817687988
    8. 'linear' → logprob: -5.022442817687988
    9. '(k' → logprob: -5.772442817687988
    10. ' ' → logprob: -5.772442817687988

Token 531: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2302403450012207
    2. '
' → logprob: -1.4802403450012207
    3. 'def' → logprob: -1.4802403450012207
    4. ')' → logprob: -2.6052403450012207
    5. '<|end|>' → logprob: -2.7302403450012207
    6. '(n' → logprob: -3.8552403450012207
    7. '(k' → logprob: -4.355240345001221
    8. '   ' → logprob: -4.355240345001221
    9. '<|end|>' → logprob: -4.355240345001221
    10. '           ' → logprob: -4.480240345001221

Token 532: ' jump' (ID: 13843)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.12030458450317383
    2. '1' → logprob: -2.995304584503174
    3. ' number' → logprob: -4.120304584503174
    4. 'jump' → logprob: -4.245304584503174
    5. ' ' → logprob: -4.995304584503174
    6. 'n' → logprob: -4.995304584503174
    7. 'type' → logprob: -5.620304584503174
    8. '(number' → logprob: -6.245304584503174
    9. 'last' → logprob: -6.245304584503174
    10. 't' → logprob: -6.245304584503174

Token 533: ' mark' (ID: 1983)
  Prédit: '_marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_marks' → logprob: -0.0037810702342540026
    2. '_mark' → logprob: -6.128780841827393
    3. '_linear' → logprob: -7.503780841827393
    4. '_' → logprob: -8.00378131866455
    5. 'marks' → logprob: -8.50378131866455
    6. ')' → logprob: -9.62878131866455
    7. 'mark' → logprob: -9.62878131866455
    8. 'type' → logprob: -9.87878131866455
    9. '_type' → logprob: -9.87878131866455
    10. ' _' → logprob: -10.87878131866455

Token 534: ' t' (ID: 260)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8992803692817688
    2. '(k' → logprob: -1.399280309677124
    3. '_' → logprob: -2.149280309677124
    4. '<|end|>' → logprob: -2.649280309677124
    5. ' ' → logprob: -3.524280309677124
    6. '(' → logprob: -3.649280309677124
    7. '+' → logprob: -3.899280309677124
    8. '(n' → logprob: -4.899280548095703
    9. ']' → logprob: -4.899280548095703
    10. '[' → logprob: -5.149280548095703

Token 535: ',' (ID: 11)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.914011538028717
    2. ')' → logprob: -1.0390114784240723
    3. '<|end|>' → logprob: -1.6640114784240723
    4. '(' → logprob: -3.6640114784240723
    5. ':' → logprob: -4.164011478424072
    6. 'def' → logprob: -5.664011478424072
    7. '<|end|>' → logprob: -5.789011478424072
    8. '(n' → logprob: -6.539011478424072
    9. '+' → logprob: -7.164011478424072
    10. '):' → logprob: -7.289011478424072

Token 536: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3538202941417694
    2. 'n' → logprob: -1.2288203239440918
    3. ' ' → logprob: -6.603820323944092
    4. '0' → logprob: -6.978820323944092
    5. ' n' → logprob: -7.478820323944092
    6. '+' → logprob: -7.603820323944092
    7. 'next' → logprob: -8.103819847106934
    8. 'k' → logprob: -8.353819847106934
    9. 'None' → logprob: -8.353819847106934
    10. 'number' → logprob: -8.853819847106934

Token 537: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43178269267082214
    2. ')' → logprob: -2.0567827224731445
    3. '<|end|>' → logprob: -2.3067827224731445
    4. ':' → logprob: -3.3067827224731445
    5. ')
' → logprob: -3.6817827224731445
    6. '   ' → logprob: -4.3067827224731445
    7. '<|end|>' → logprob: -4.6817827224731445
    8. 'def' → logprob: -5.1817827224731445
    9. '  
' → logprob: -5.1817827224731445
    10. '       ' → logprob: -5.5567827224731445

Token 538: '           ' (ID: 352)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.0013326406478882
    2. ')' → logprob: -1.3763326406478882
    3. '<|end|>' → logprob: -1.3763326406478882
    4. ':' → logprob: -3.1263327598571777
    5. '(' → logprob: -3.2513327598571777
    6. '):' → logprob: -4.501332759857178
    7. '<|end|>' → logprob: -4.751332759857178
    8. '(n' → logprob: -5.251332759857178
    9. '
' → logprob: -5.626332759857178
    10. 'def' → logprob: -6.001332759857178

Token 539: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8583369255065918
    2. '<|end|>' → logprob: -0.8583369255065918
    3. '   ' → logprob: -2.983336925506592
    4. '       ' → logprob: -3.233336925506592
    5. ')' → logprob: -4.108336925506592
    6. '	return' → logprob: -5.108336925506592
    7. ' ' → logprob: -5.108336925506592
    8. '  
' → logprob: -5.358336925506592
    9. '           ' → logprob: -5.483336925506592
    10. '<|end|>' → logprob: -5.483336925506592

Token 540: ' So' (ID: 2632)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.255894660949707
    2. '<|end|>' → logprob: -1.755894660949707
    3. '
' → logprob: -2.005894660949707
    4. ' ' → logprob: -2.130894660949707
    5. '   ' → logprob: -2.255894660949707
    6. ')' → logprob: -2.630894660949707
    7. ' 
' → logprob: -3.755894660949707
    8. '       ' → logprob: -4.005894660949707
    9. '\n' → logprob: -4.505894660949707
    10. '  
' → logprob: -4.505894660949707

Token 541: ' linear' (ID: 23876)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.1704822778701782
    2. 'while' → logprob: -1.4204822778701782
    3. '           ' → logprob: -2.0454821586608887
    4. 'def' → logprob: -2.1704821586608887
    5. 'return' → logprob: -2.9204821586608887
    6. ' return' → logprob: -3.1704821586608887
    7. ' def' → logprob: -4.045482158660889
    8. '       ' → logprob: -4.170482158660889
    9. 'k' → logprob: -4.420482158660889
    10. ' k' → logprob: -4.545482158660889

Token 542: ' reading' (ID: 6085)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4740712344646454
    2. '(k' → logprob: -1.4740712642669678
    3. '(i' → logprob: -2.7240712642669678
    4. '_linear' → logprob: -3.7240712642669678
    5. 'k' → logprob: -3.9740712642669678
    6. 'i' → logprob: -4.974071025848389
    7. '_line' → logprob: -5.224071025848389
    8. '(' → logprob: -5.224071025848389
    9. '()
' → logprob: -5.724071025848389
    10. 'def' → logprob: -5.974071025848389

Token 543: ' is' (ID: 382)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.40242913365364075
    2. '(' → logprob: -1.4024291038513184
    3. '(i' → logprob: -3.4024291038513184
    4. ':' → logprob: -3.6524291038513184
    5. '=' → logprob: -4.527429103851318
    6. ')' → logprob: -5.277429103851318
    7. ' =' → logprob: -5.652429103851318
    8. 'def' → logprob: -6.527429103851318
    9. '(n' → logprob: -6.777429103851318
    10. 'return' → logprob: -7.402429103851318

Token 544: ' from' (ID: 591)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0932694748044014
    2. ' k' → logprob: -3.0932695865631104
    3. 'i' → logprob: -3.4682695865631104
    4. ' i' → logprob: -5.468269348144531
    5. 'lambda' → logprob: -5.593269348144531
    6. ' lambda' → logprob: -5.718269348144531
    7. '   ' → logprob: -8.218269348144531
    8. '    ' → logprob: -8.593269348144531
    9. '(k' → logprob: -9.093269348144531
    10. ' (' → logprob: -9.218269348144531

Token 545: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.21431845426559448
    2. 'i' → logprob: -2.2143185138702393
    3. ' k' → logprob: -3.2143185138702393
    4. '0' → logprob: -3.3393185138702393
    5. ' i' → logprob: -5.08931827545166
    6. '(k' → logprob: -8.21431827545166
    7. '1' → logprob: -8.33931827545166
    8. ' ' → logprob: -8.58931827545166
    9. 'the' → logprob: -8.71431827545166
    10. ' (' → logprob: -8.83931827545166

Token 546: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.196599081158638
    2. '0' → logprob: -2.446599006652832
    3. 'i' → logprob: -2.571599006652832
    4. '(k' → logprob: -4.696599006652832
    5. '(i' → logprob: -6.196599006652832
    6. ' k' → logprob: -6.821599006652832
    7. 'linear' → logprob: -7.821599006652832
    8. '1' → logprob: -8.071599006652832
    9. 'right' → logprob: -8.071599006652832
    10. 'the' → logprob: -8.196599006652832

Token 547: ' upwards' (ID: 81327)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 548: ' skipping' (ID: 89472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 549: ' read' (ID: 1729)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.513555109500885
    2. 'i' → logprob: -1.8885550498962402
    3. 'indices' → logprob: -2.2635550498962402
    4. ' k' → logprob: -3.6385550498962402
    5. '1' → logprob: -3.8885550498962402
    6. 'read' → logprob: -4.01355504989624
    7. ' indices' → logprob: -4.88855504989624
    8. 'indexes' → logprob: -4.88855504989624
    9. 'linear' → logprob: -4.88855504989624
    10. ' i' → logprob: -5.26355504989624

Token 550: ',' (ID: 11)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.5513983964920044
    2. 's' → logprob: -1.6763983964920044
    3. '+' → logprob: -1.8013983964920044
    4. ')' → logprob: -2.926398277282715
    5. ']' → logprob: -2.926398277282715
    6. '           ' → logprob: -3.176398277282715
    7. '       ' → logprob: -3.176398277282715
    8. 'k' → logprob: -3.551398277282715
    9. ' ' → logprob: -3.551398277282715
    10. '   ' → logprob: -3.676398277282715

Token 551: ' so' (ID: 813)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0879652500152588
    2. 'k' → logprob: -1.4629652500152588
    3. 'i' → logprob: -1.4629652500152588
    4. ' ' → logprob: -2.962965250015259
    5. ')' → logprob: -3.962965250015259
    6. ' i' → logprob: -4.08796501159668
    7. ' and' → logprob: -4.21296501159668
    8. '<|end|>' → logprob: -4.21296501159668
    9. ' 
' → logprob: -4.46296501159668
    10. ' k' → logprob: -4.58796501159668

Token 552: ' next' (ID: 2613)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6430450081825256
    2. 'while' → logprob: -1.2680449485778809
    3. '           ' → logprob: -2.518044948577881
    4. 'k' → logprob: -2.768044948577881
    5. ' k' → logprob: -3.643044948577881
    6. '   ' → logprob: -4.768044948577881
    7. 'i' → logprob: -5.268044948577881
    8. 'def' → logprob: -6.143044948577881
    9. ' i' → logprob: -6.393044948577881
    10. '       ' → logprob: -6.643044948577881

Token 553: ' <=' (ID: 5017)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.7547036409378052
    2. 'def' → logprob: -1.7547036409378052
    3. '_linear' → logprob: -1.7547036409378052
    4. '_idx' → logprob: -2.0047035217285156
    5. '_k' → logprob: -2.1297035217285156
    6. '_index' → logprob: -2.3797035217285156
    7. '_i' → logprob: -3.0047035217285156
    8. 'i' → logprob: -4.004703521728516
    9. 'idx' → logprob: -4.129703521728516
    10. ' =' → logprob: -4.379703521728516

Token 554: ' N' (ID: 478)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2464459091424942
    2. 'i' → logprob: -2.246445894241333
    3. 'N' → logprob: -3.246445894241333
    4. ' k' → logprob: -3.246445894241333
    5. '+' → logprob: -4.621446132659912
    6. ' i' → logprob: -5.371446132659912
    7. ' N' → logprob: -5.496446132659912
    8. '1' → logprob: -5.621446132659912
    9. '   ' → logprob: -5.871446132659912
    10. ' ' → logprob: -6.121446132659912

Token 555: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0358612537384033
    2. ')' → logprob: -1.4108612537384033
    3. 'def' → logprob: -2.0358612537384033
    4. '=' → logprob: -2.7858612537384033
    5. 'i' → logprob: -2.9108612537384033
    6. '   ' → logprob: -3.7858612537384033
    7. '()' → logprob: -4.535861015319824
    8. ' +' → logprob: -4.535861015319824
    9. '_' → logprob: -4.660861015319824
    10. ' ' → logprob: -5.035861015319824

Token 556: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.482821431243792e-05
    2. ' ' → logprob: -9.75008487701416
    3. '-' → logprob: -10.75008487701416
    4. '   ' → logprob: -13.62508487701416
    5. ')' → logprob: -14.00008487701416
    6. '```' → logprob: -14.37508487701416
    7. '       ' → logprob: -14.50008487701416
    8. '
' → logprob: -15.43758487701416
    9. ')
' → logprob: -15.68758487701416
    10. 'i' → logprob: -15.81258487701416

Token 557: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.49695885181427
    2. '+' → logprob: -1.62195885181427
    3. '
' → logprob: -2.1219587326049805
    4. 'def' → logprob: -2.3719587326049805
    5. 'if' → logprob: -2.7469587326049805
    6. 'and' → logprob: -2.7469587326049805
    7. ')' → logprob: -3.1219587326049805
    8. '   ' → logprob: -3.4969587326049805
    9. '       ' → logprob: -3.6219587326049805
    10. '<|end|>' → logprob: -3.6219587326049805

Token 558: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6916421055793762
    2. 'while' → logprob: -1.6916420459747314
    3. '
' → logprob: -2.0666420459747314
    4. '   ' → logprob: -2.3166420459747314
    5. ' while' → logprob: -3.4416420459747314
    6. '       ' → logprob: -4.0666422843933105
    7. 'i' → logprob: -4.8166422843933105
    8. 'def' → logprob: -5.4416422843933105
    9. 'return' → logprob: -5.4416422843933105
    10. 'k' → logprob: -5.5666422843933105

Token 559: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8354704976081848
    2. '           ' → logprob: -1.08547043800354
    3. 'while' → logprob: -1.58547043800354
    4. ' while' → logprob: -4.960470676422119
    5. '   ' → logprob: -5.460470676422119
    6. '       ' → logprob: -5.835470676422119
    7. 'for' → logprob: -5.835470676422119
    8. ' k' → logprob: -6.460470676422119
    9. '
' → logprob: -6.585470676422119
    10. 'def' → logprob: -6.710470676422119

Token 560: ' =' (ID: 314)
  Prédit: 'ext'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ext' → logprob: -0.021790962666273117
    2. '=' → logprob: -4.646790981292725
    3. ' =' → logprob: -4.896790981292725
    4. '+' → logprob: -6.396790981292725
    5. 'xt' → logprob: -7.521790981292725
    6. 'e' → logprob: -7.521790981292725
    7. '+=' → logprob: -8.021790504455566
    8. '   ' → logprob: -8.271790504455566
    9. '=k' → logprob: -8.271790504455566
    10. 'x' → logprob: -8.396790504455566

Token 561: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00319482758641243
    2. 'N' → logprob: -6.253194808959961
    3. ' k' → logprob: -7.128194808959961
    4. 'len' → logprob: -8.378194808959961
    5. 'None' → logprob: -9.128194808959961
    6. 'i' → logprob: -9.753194808959961
    7. ' N' → logprob: -11.253194808959961
    8. '0' → logprob: -11.878194808959961
    9. '   ' → logprob: -12.378194808959961
    10. 'next' → logprob: -12.378194808959961

Token 562: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007612544111907482
    2. ' +' → logprob: -4.882612705230713
    3. '+i' → logprob: -13.257612228393555
    4. '+n' → logprob: -13.382612228393555
    5. '+
' → logprob: -13.882612228393555
    6. '+k' → logprob: -14.382612228393555
    7. '+=' → logprob: -14.757612228393555
    8. '1' → logprob: -15.007612228393555
    9. '()+' → logprob: -15.382612228393555
    10. ')+' → logprob: -15.757612228393555

Token 563: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '<|end|>' → logprob: -17.625001907348633
    4. '   ' → logprob: -18.375001907348633
    5. '```' → logprob: -18.875001907348633
    6. '
' → logprob: -19.625001907348633
    7. '+' → logprob: -20.250001907348633
    8. '  ' → logprob: -20.500001907348633
    9. '[' → logprob: -21.375001907348633
    10. '`' → logprob: -21.625001907348633

Token 564: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7239663600921631
    2. '           ' → logprob: -1.223966360092163
    3. '<|end|>' → logprob: -1.598966360092163
    4. ' if' → logprob: -4.848966598510742
    5. '<|end|>' → logprob: -5.473966598510742
    6. 'if' → logprob: -5.973966598510742
    7. 'while' → logprob: -6.223966598510742
    8. '       ' → logprob: -7.098966598510742
    9. 'return' → logprob: -8.098966598510742
    10. '
' → logprob: -8.098966598510742

Token 565: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32037293910980225
    2. '<|end|>' → logprob: -1.4453729391098022
    3. '
' → logprob: -3.945373058319092
    4. '<|end|>' → logprob: -4.570373058319092
    5. 'while' → logprob: -5.320373058319092
    6. ' while' → logprob: -5.945373058319092
    7. '       ' → logprob: -7.695373058319092
    8. '		' → logprob: -9.195372581481934
    9. 'return' → logprob: -9.445372581481934
    10. '	       ' → logprob: -9.570372581481934

Token 566: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.3237571716308594
    2. '           ' → logprob: -1.8237571716308594
    3. ' while' → logprob: -2.1987571716308594
    4. '       ' → logprob: -5.698757171630859
    5. '	while' → logprob: -7.573757171630859
    6. '   ' → logprob: -8.07375717163086
    7. '<|end|>' → logprob: -11.44875717163086
    8. '
' → logprob: -11.82375717163086
    9. '	   ' → logprob: -12.69875717163086
    10. '	       ' → logprob: -12.69875717163086

Token 567: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018150296062231064
    2. ' n' → logprob: -4.018150329589844
    3. '	n' → logprob: -15.518150329589844
    4. '   ' → logprob: -16.518150329589844
    5. 'N' → logprob: -16.518150329589844
    6. ' ' → logprob: -17.143150329589844
    7. '_n' → logprob: -17.393150329589844
    8. '(n' → logprob: -17.643150329589844
    9. '<n' → logprob: -18.268150329589844
    10. 'read' → logprob: -18.768150329589844

Token 568: ' <' (ID: 464)
  Prédit: '<N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<N' → logprob: -0.39435818791389465
    2. '<' → logprob: -2.1443581581115723
    3. '<n' → logprob: -2.1443581581115723
    4. ' <' → logprob: -2.3943581581115723
    5. '<len' → logprob: -8.01935863494873
    6. '<num' → logprob: -10.76935863494873
    7. 'n' → logprob: -12.26935863494873
    8. '<size' → logprob: -12.39435863494873
    9. 'in' → logprob: -13.01935863494873
    10. ' in' → logprob: -13.26935863494873

Token 569: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.747814349073451e-05
    2. 'len' → logprob: -11.125017166137695
    3. ' N' → logprob: -13.000017166137695
    4. '   ' → logprob: -15.000017166137695
    5. 'n' → logprob: -17.125017166137695
    6. '       ' → logprob: -17.500017166137695
    7. '           ' → logprob: -17.500017166137695
    8. '	N' → logprob: -17.625017166137695
    9. ' ' → logprob: -18.625017166137695
    10. '
' → logprob: -18.625017166137695

Token 570: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6931518912315369
    2. 'and' → logprob: -0.6931518912315369
    3. ' ' → logprob: -13.318151473999023
    4. '   ' → logprob: -13.568151473999023
    5. ':
' → logprob: -14.443151473999023
    6. '       ' → logprob: -14.818151473999023
    7. '           ' → logprob: -15.318151473999023
    8. '	and' → logprob: -15.318151473999023
    9. '  ' → logprob: -16.068151473999023
    10. ':' → logprob: -16.193151473999023

Token 571: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.3171444535255432
    2. '(read' → logprob: -1.3171443939208984
    3. '(not' → logprob: -6.817144393920898
    4. '(n' → logprob: -6.817144393920898
    5. '(has' → logprob: -7.442144393920898
    6. ' (' → logprob: -7.817144393920898
    7. 'has' → logprob: -8.817144393920898
    8. ' read' → logprob: -9.067144393920898
    9. 'not' → logprob: -9.317144393920898
    10. 'n' → logprob: -9.567144393920898

Token 572: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.704273118884885e-07
    2. 'n' → logprob: -14.500000953674316
    3. '[' → logprob: -16.125
    4. '[
' → logprob: -17.75
    5. '```' → logprob: -18.125
    6. ' [' → logprob: -18.875
    7. '<n' → logprob: -19.375
    8. '[N' → logprob: -19.625
    9. '(n' → logprob: -20.125
    10. '	n' → logprob: -20.25

Token 573: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.30980783700942993
    2. ']:
' → logprob: -1.5598077774047852
    3. ']==' → logprob: -2.934807777404785
    4. ']' → logprob: -5.934807777404785
    5. ' ]' → logprob: -9.309807777404785
    6. ':' → logprob: -9.434807777404785
    7. '==' → logprob: -9.559807777404785
    8. ']:
' → logprob: -9.934807777404785
    9. ']:

' → logprob: -10.184807777404785
    10. '[' → logprob: -10.684807777404785

Token 574: '               ' (ID: 506)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7436929941177368
    2. '               ' → logprob: -1.6186929941177368
    3. ':
' → logprob: -1.7436929941177368
    4. ':' → logprob: -2.8686928749084473
    5. ' and' → logprob: -3.7436928749084473
    6. '           ' → logprob: -3.7436928749084473
    7. 'and' → logprob: -3.7436928749084473
    8. ' or' → logprob: -3.9936928749084473
    9. '):
' → logprob: -6.743692874908447
    10. ' n' → logprob: -7.118692874908447

Token 575: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.014883124269545078
    2. ' n' → logprob: -4.389883041381836
    3. '               ' → logprob: -6.139883041381836
    4. '           ' → logprob: -9.014883041381836
    5. '                   ' → logprob: -10.264883041381836
    6. '
' → logprob: -11.014883041381836
    7. '	n' → logprob: -11.264883041381836
    8. '   ' → logprob: -11.639883041381836
    9. '```' → logprob: -11.639883041381836
    10. ',n' → logprob: -12.764883041381836

Token 576: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -4.036524842376821e-05
    2. ' +=' → logprob: -10.250040054321289
    3. '+' → logprob: -12.250040054321289
    4. ']+=' → logprob: -15.500040054321289
    5. '++' → logprob: -18.50004005432129
    6. '```' → logprob: -18.62504005432129
    7. '+="' → logprob: -19.25004005432129
    8. '+='' → logprob: -19.37504005432129
    9. '+=(' → logprob: -20.25004005432129
    10. '1' → logprob: -20.50004005432129

Token 577: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -19.375003814697266
    4. '```' → logprob: -19.500003814697266
    5. '۱' → logprob: -20.750003814697266
    6. '  ' → logprob: -21.125003814697266
    7. '１' → logprob: -21.500003814697266
    8. '<|end|>' → logprob: -22.125003814697266
    9. '+' → logprob: -22.187503814697266
    10. '१' → logprob: -22.687503814697266

Token 578: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.875001907348633
    4. '  ' → logprob: -21.000001907348633
    5. '```' → logprob: -21.375001907348633
    6. '１' → logprob: -21.625001907348633
    7. '
' → logprob: -22.062501907348633
    8. '۱' → logprob: -22.500001907348633
    9. '0' → logprob: -22.750001907348633
    10. '2' → logprob: -23.250001907348633

Token 579: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5432148575782776
    2. '
' → logprob: -1.7932147979736328
    3. '       ' → logprob: -2.168214797973633
    4. '<|end|>' → logprob: -2.668214797973633
    5. 'return' → logprob: -3.793214797973633
    6. '   ' → logprob: -3.918214797973633
    7. ' return' → logprob: -4.418214797973633
    8. '<|end|>' → logprob: -5.418214797973633
    9. ':return' → logprob: -6.293214797973633
    10. '	return' → logprob: -6.418214797973633

Token 580: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25739431381225586
    2. '       ' → logprob: -1.6323943138122559
    3. '<|end|>' → logprob: -4.632394313812256
    4. '
' → logprob: -5.132394313812256
    5. ' return' → logprob: -5.632394313812256
    6. 'return' → logprob: -5.882394313812256
    7. '   ' → logprob: -5.882394313812256
    8. ':return' → logprob: -7.007394313812256
    9. '<|end|>' → logprob: -7.007394313812256
    10. '	return' → logprob: -7.382394313812256

Token 581: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.31700780987739563
    2. '       ' → logprob: -1.6920077800750732
    3. ' return' → logprob: -3.1920077800750732
    4. '           ' → logprob: -3.4420077800750732
    5. '   ' → logprob: -4.567008018493652
    6. '	return' → logprob: -5.942008018493652
    7. 'if' (adapté à ' if') → logprob: -7.317008018493652
    8. ' if' → logprob: -7.942008018493652
    9. '```' → logprob: -9.192008018493652
    10. '{return' → logprob: -9.692008018493652

Token 582: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5759401917457581
    2. 'n' → logprob: -0.8259401917457581
    3. '	n' → logprob: -14.950940132141113
    4. 'N' → logprob: -15.325940132141113
    5. 'None' → logprob: -16.32594108581543
    6. ' ' → logprob: -17.07594108581543
    7. '   ' → logprob: -17.07594108581543
    8. ' ' → logprob: -17.57594108581543
    9. '
' → logprob: -18.07594108581543
    10. ' N' → logprob: -18.70094108581543

Token 583: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.8062893748283386
    2. ' <' → logprob: -1.4312894344329834
    3. '>=' → logprob: -1.5562894344329834
    4. ' ==' → logprob: -3.1812894344329834
    5. '<' → logprob: -3.5562894344329834
    6. '==' → logprob: -3.6812894344329834
    7. '<|end|>' → logprob: -5.306289196014404
    8. '<N' → logprob: -6.806289196014404
    9. '<=' → logprob: -7.806289196014404
    10. '<n' → logprob: -7.806289196014404

Token 584: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -7.493430894101039e-05
    2. ' N' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.12507438659668
    4. ' ' → logprob: -19.12507438659668
    5. '           ' → logprob: -19.37507438659668
    6. '	N' → logprob: -19.62507438659668
    7. '
' → logprob: -20.12507438659668
    8. '  ' → logprob: -20.25007438659668
    9. '_N' → logprob: -21.00007438659668
    10. '       ' → logprob: -21.50007438659668

Token 585: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05886758863925934
    2. ':' → logprob: -3.1838676929473877
    3. ':return' → logprob: -4.183867454528809
    4. ' or' → logprob: -8.183867454528809
    5. 'return' → logprob: -9.558867454528809
    6. '           ' → logprob: -9.683867454528809
    7. '               ' → logprob: -10.308867454528809
    8. '):
' → logprob: -10.808867454528809
    9. ':
' → logprob: -11.683867454528809
    10. '       ' → logprob: -11.683867454528809

Token 586: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7144138216972351
    2. 'return' → logprob: -0.7144138216972351
    3. '           ' → logprob: -4.839413642883301
    4. ':return' → logprob: -5.089413642883301
    5. ' return' → logprob: -5.214413642883301
    6. '	return' → logprob: -7.339413642883301
    7. '{return' → logprob: -7.964413642883301
    8. '
' → logprob: -8.5894136428833
    9. '   ' → logprob: -8.7144136428833
    10. '       ' → logprob: -10.0894136428833

Token 587: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00021605310030281544
    2. ' return' → logprob: -8.500216484069824
    3. '               ' → logprob: -11.375216484069824
    4. '	return' → logprob: -14.875216484069824
    5. ':return' → logprob: -14.875216484069824
    6. '{return' → logprob: -15.125216484069824
    7. '           ' → logprob: -16.750215530395508
    8. '   ' → logprob: -17.750215530395508
    9. '@return' → logprob: -17.750215530395508
    10. '```' → logprob: -18.000215530395508

Token 588: ' -' (ID: 533)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -6.384836888173595e-05
    2. '-' → logprob: -9.7500638961792
    3. 'N' → logprob: -12.5000638961792
    4. ' None' → logprob: -13.2500638961792
    5. 'n' → logprob: -18.875062942504883
    6. ' -' → logprob: -19.125062942504883
    7. '_None' → logprob: -19.375062942504883
    8. '(None' → logprob: -20.625062942504883
    9. '
' → logprob: -21.000062942504883
    10. '   ' → logprob: -21.125062942504883

Token 589: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -15.875
    3. ' ' → logprob: -16.375
    4. '-' → logprob: -18.625
    5. '```' → logprob: -21.0
    6. '１' → logprob: -21.375
    7. '۱' → logprob: -21.375
    8. '   ' → logprob: -21.75
    9. ' -' → logprob: -22.3125
    10. 'N' → logprob: -22.3125

Token 590: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0913882851600647
    2. '
' → logprob: -3.21638822555542
    3. '       ' → logprob: -3.84138822555542
    4. 'return' → logprob: -4.84138822555542
    5. ' return' → logprob: -4.96638822555542
    6. '<|end|>' → logprob: -5.34138822555542
    7. '		' → logprob: -6.34138822555542
    8. '	return' → logprob: -6.59138822555542
    9. '	' → logprob: -7.71638822555542
    10. '    
' → logprob: -7.96638822555542

Token 591: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7113713026046753
    2. '<|end|>' → logprob: -1.3363713026046753
    3. '       ' → logprob: -1.9613713026046753
    4. 'return' → logprob: -3.336371421813965
    5. '	return' → logprob: -4.211371421813965
    6. '<|end|>' → logprob: -4.336371421813965
    7. ' return' → logprob: -4.711371421813965
    8. '	' → logprob: -4.961371421813965
    9. '
' → logprob: -5.211371421813965
    10. '\n' → logprob: -5.336371421813965

Token 592: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5638421177864075
    2. '           ' → logprob: -1.0638420581817627
    3. '       ' → logprob: -2.5638420581817627
    4. ' return' → logprob: -5.063842296600342
    5. '	return' → logprob: -6.313842296600342
    6. '   ' → logprob: -7.938842296600342
    7. '		' → logprob: -9.063841819763184
    8. '	' → logprob: -9.563841819763184
    9. '
' → logprob: -9.938841819763184
    10. '	   ' → logprob: -10.063841819763184

Token 593: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.014684110297821e-06
    2. ' n' → logprob: -11.625008583068848
    3. '	n' → logprob: -18.250009536743164
    4. '   ' → logprob: -19.500009536743164
    5. '_n' → logprob: -20.625009536743164
    6. ' ' → logprob: -21.125009536743164
    7. ')n' → logprob: -21.375009536743164
    8. '```' → logprob: -21.625009536743164
    9. '
' → logprob: -22.250009536743164
    10. 'N' → logprob: -22.875009536743164

Token 594: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 595: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 596: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 597: ' find' (ID: 1646)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -1.0131587982177734
    2. ' can' → logprob: -1.6381587982177734
    3. ' read' → logprob: -1.7631587982177734
    4. 'dfs' → logprob: -2.3881587982177734
    5. ' process' → logprob: -2.7631587982177734
    6. 'read' → logprob: -3.0131587982177734
    7. 'can' → logprob: -4.138158798217773
    8. ' try' → logprob: -4.138158798217773
    9. ' bfs' → logprob: -4.888158798217773
    10. 'process' → logprob: -5.263158798217773

Token 598: '_un' (ID: 11119)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.01089937798678875
    2. '_jump' → logprob: -5.010899543762207
    3. 'next' → logprob: -7.385899543762207
    4. '_' → logprob: -7.510899543762207
    5. '_linear' → logprob: -7.635899543762207
    6. '_j' → logprob: -7.635899543762207
    7. '_first' → logprob: -8.635899543762207
    8. ')' → logprob: -8.760899543762207
    9. '_letter' → logprob: -8.760899543762207
    10. '(' → logprob: -9.135899543762207

Token 599: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.004988724831491709
    2. 'visited' → logprob: -5.379988670349121
    3. 'used' → logprob: -9.004988670349121
    4. 'processed' → logprob: -9.129988670349121
    5. 'jump' → logprob: -9.754988670349121
    6. 'checked' → logprob: -11.004988670349121
    7. 'seen' → logprob: -11.129988670349121
    8. 'def' → logprob: -11.629988670349121
    9. 'marked' → logprob: -11.879988670349121
    10. '_read' → logprob: -12.254988670349121

Token 600: '_pos' (ID: 14692)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.821291446685791
    2. '(' → logprob: -1.196291446685791
    3. '_index' → logprob: -1.821291446685791
    4. '_token' → logprob: -3.696291446685791
    5. '_linear' → logprob: -3.821291446685791
    6. '_next' → logprob: -4.196291446685791
    7. '(k' → logprob: -5.071291446685791
    8. '_jump' → logprob: -5.196291446685791
    9. '(n' → logprob: -5.696291446685791
    10. '(int' → logprob: -6.071291446685791

Token 601: '(lst' (ID: 95688)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.4935329556465149
    2. '(' → logprob: -1.2435328960418701
    3. '(n' → logprob: -3.74353289604187
    4. '(k' → logprob: -3.86853289604187
    5. '(type' → logprob: -3.99353289604187
    6. ' (' → logprob: -4.243533134460449
    7. '(j' → logprob: -4.993533134460449
    8. '(s' → logprob: -5.118533134460449
    9. '((' → logprob: -6.868533134460449
    10. '(token' → logprob: -6.993533134460449

Token 602: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00760887423530221
    2. '[' → logprob: -5.882608890533447
    3. ' ,' → logprob: -6.757608890533447
    4. '(' → logprob: -7.132608890533447
    5. ',[' → logprob: -8.007608413696289
    6. '):' → logprob: -8.132608413696289
    7. ')' → logprob: -8.257608413696289
    8. ',n' → logprob: -8.507608413696289
    9. ',index' → logprob: -8.507608413696289
    10. ' (' → logprob: -8.507608413696289

Token 603: '           ' (ID: 352)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31297510862350464
    2. '   ' → logprob: -2.3129751682281494
    3. '           ' → logprob: -2.4379751682281494
    4. ':' → logprob: -3.1879751682281494
    5. '       ' → logprob: -3.5629751682281494
    6. ' (' → logprob: -5.81297492980957
    7. '(n' → logprob: -6.06297492980957
    8. '{' → logprob: -6.93797492980957
    9. '[' → logprob: -7.06297492980957
    10. ' ' → logprob: -7.43797492980957

Token 604: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8480111956596375
    2. '   ' → logprob: -1.3480112552642822
    3. ' for' → logprob: -1.3480112552642822
    4. '           ' → logprob: -3.8480112552642822
    5. 'for' → logprob: -4.348011016845703
    6. '0' → logprob: -5.223011016845703
    7. ' return' → logprob: -5.723011016845703
    8. ' i' → logprob: -6.473011016845703
    9. ' ' → logprob: -6.848011016845703
    10. ' while' → logprob: -6.973011016845703

Token 605: ' lst' (ID: 33384)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.23718175292015076
    2. ' lo' → logprob: -2.7371816635131836
    3. 'left' → logprob: -2.8621816635131836
    4. 'lo' → logprob: -3.3621816635131836
    5. ' l' → logprob: -4.487181663513184
    6. 'import' → logprob: -4.612181663513184
    7. 'for' → logprob: -4.862181663513184
    8. '   ' → logprob: -5.112181663513184
    9. 'low' → logprob: -5.237181663513184
    10. ' left' → logprob: -5.487181663513184

Token 606: ' sorted' (ID: 20099)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9825121760368347
    2. '=[]' → logprob: -1.8575122356414795
    3. ' =' → logprob: -2.2325122356414795
    4. '=' → logprob: -2.6075122356414795
    5. ',' → logprob: -2.7325122356414795
    6. '<|end|>' → logprob: -3.2325122356414795
    7. ' def' → logprob: -3.3575122356414795
    8. ':' → logprob: -3.3575122356414795
    9. ')' → logprob: -3.7325122356414795
    10. '=[]
' → logprob: -4.3575119972229

Token 607: ' ascending' (ID: 75564)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.949100911617279
    2. ',' → logprob: -1.1991009712219238
    3. '<|end|>' → logprob: -1.9491009712219238
    4. ' =' → logprob: -3.199100971221924
    5. '       ' → logprob: -3.824100971221924
    6. ' def' → logprob: -4.074100971221924
    7. '<|end|>' → logprob: -4.199100971221924
    8. 'import' → logprob: -4.199100971221924
    9. '=' → logprob: -4.574100971221924
    10. '0' → logprob: -4.949100971221924

Token 608: ' letter' (ID: 10263)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0208858251571655
    2. ',' → logprob: -1.2708858251571655
    3. 'def' → logprob: -2.270885944366455
    4. '   ' → logprob: -2.520885944366455
    5. '<|end|>' → logprob: -2.645885944366455
    6. ':' → logprob: -3.645885944366455
    7. '           ' → logprob: -4.270885944366455
    8. ' =' → logprob: -4.395885944366455
    9. '<|end|>' → logprob: -4.645885944366455
    10. '_tokens' → logprob: -5.145885944366455

Token 609: ' indices' (ID: 30378)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5636941194534302
    2. '_indices' → logprob: -2.1886940002441406
    3. ' =' → logprob: -2.1886940002441406
    4. ',' → logprob: -2.3136940002441406
    5. ')' → logprob: -2.4386940002441406
    6. '=[]' → logprob: -2.9386940002441406
    7. '   ' → logprob: -3.3136940002441406
    8. 'def' → logprob: -3.3136940002441406
    9. '           ' → logprob: -3.6886940002441406
    10. '=' → logprob: -3.9386940002441406

Token 610: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6100795269012451
    2. '   ' → logprob: -1.3600795269012451
    3. ',' → logprob: -2.610079526901245
    4. ':' → logprob: -2.985079526901245
    5. '           ' → logprob: -4.235079765319824
    6. 'def' → logprob: -4.360079765319824
    7. '
' → logprob: -4.485079765319824
    8. ':
' → logprob: -4.485079765319824
    9. '<|end|>' → logprob: -5.610079765319824
    10. ')' → logprob: -5.985079765319824

Token 611: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2615848481655121
    2. '       ' → logprob: -2.136584758758545
    3. ',' → logprob: -3.011584758758545
    4. ' for' → logprob: -3.636584758758545
    5. 'def' → logprob: -4.511584758758545
    6. ' def' → logprob: -5.011584758758545
    7. '           ' → logprob: -5.386584758758545
    8. '
' → logprob: -6.636584758758545
    9. 'import' → logprob: -6.636584758758545
    10. ':' → logprob: -6.761584758758545

Token 612: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0597176551818848
    2. ' for' → logprob: -1.3097176551818848
    3. '           ' → logprob: -1.8097176551818848
    4. 'for' → logprob: -2.8097176551818848
    5. 'l' → logprob: -3.0597176551818848
    6. ' l' → logprob: -3.6847176551818848
    7. 'left' → logprob: -3.6847176551818848
    8. '       ' → logprob: -3.9347176551818848
    9. ' left' → logprob: -3.9347176551818848
    10. 'import' → logprob: -4.934717655181885

Token 613: ' find' (ID: 1646)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.683952808380127
    2. 'left' → logprob: -1.308952808380127
    3. 'lo' → logprob: -2.808952808380127
    4. 'for' → logprob: -2.808952808380127
    5. ' lo' → logprob: -3.433952808380127
    6. 'from' → logprob: -4.183952808380127
    7. ' left' → logprob: -4.433952808380127
    8. 'import' → logprob: -4.433952808380127
    9. 'low' → logprob: -4.433952808380127
    10. ' l' → logprob: -4.808952808380127

Token 614: ' unread' (ID: 119664)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.2818334102630615
    2. '0' → logprob: -1.5318334102630615
    3. 'next' → logprob: -2.1568334102630615
    4. ' the' → logprob: -2.2818334102630615
    5. 'left' → logprob: -2.9068334102630615
    6. 'import' → logprob: -3.1568334102630615
    7. 'the' → logprob: -3.4068334102630615
    8. ' ' → logprob: -3.9068334102630615
    9. ' left' → logprob: -3.9068334102630615
    10. ' first' → logprob: -4.156833648681641

Token 615: ' letter' (ID: 10263)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4234687089920044
    2. '_pos' → logprob: -1.4234687089920044
    3. 'position' → logprob: -3.673468589782715
    4. 'index' → logprob: -3.798468589782715
    5. ' index' → logprob: -4.423468589782715
    6. ' position' → logprob: -4.798468589782715
    7. '_index' → logprob: -4.923468589782715
    8. '_' → logprob: -5.173468589782715
    9. 'idx' → logprob: -5.298468589782715
    10. '_idx' → logprob: -5.798468589782715

Token 616: ' with' (ID: 483)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.759236216545105
    2. ' for' → logprob: -1.634236216545105
    3. ' with' → logprob: -3.0092363357543945
    4. '       ' → logprob: -3.0092363357543945
    5. ')' → logprob: -3.6342363357543945
    6. ',' → logprob: -3.6342363357543945
    7. ':' → logprob: -3.6342363357543945
    8. ' =' → logprob: -3.8842363357543945
    9. '=' → logprob: -4.0092363357543945
    10. '   ' → logprob: -4.3842363357543945

Token 617: ' minimal' (ID: 19957)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.9935823678970337
    2. 'read' → logprob: -1.4935823678970337
    3. 'index' → logprob: -1.8685823678970337
    4. 'next' → logprob: -2.868582248687744
    5. 'lambda' → logprob: -3.118582248687744
    6. '<|end|>' → logprob: -3.618582248687744
    7. 'binary' → logprob: -3.743582248687744
    8. 'def' → logprob: -4.118582248687744
    9. 'n' → logprob: -4.118582248687744
    10. 'bis' → logprob: -4.368582248687744

Token 618: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.8793774247169495
    2. ' index' → logprob: -1.1293773651123047
    3. 'pos' → logprob: -2.3793773651123047
    4. 'lst' → logprob: -3.0043773651123047
    5. 'idx' → logprob: -3.3793773651123047
    6. ' idx' → logprob: -3.3793773651123047
    7. ' lst' → logprob: -4.004377365112305
    8. ' pos' → logprob: -5.504377365112305
    9. ' value' → logprob: -5.629377365112305
    10. 'position' → logprob: -5.754377365112305

Token 619: ' in' (ID: 306)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.6555753946304321
    2. '   ' → logprob: -1.9055753946304321
    3. '       ' → logprob: -2.0305752754211426
    4. '(n' → logprob: -2.0305752754211426
    5. '(' → logprob: -2.4055752754211426
    6. ' in' → logprob: -2.6555752754211426
    7. '           ' → logprob: -2.7805752754211426
    8. ':' → logprob: -3.2805752754211426
    9. ' =' → logprob: -3.4055752754211426
    10. '=' → logprob: -3.9055752754211426

Token 620: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.0025735176168382168
    2. ' lst' → logprob: -6.377573490142822
    3. 'range' → logprob: -8.00257396697998
    4. '(lst' → logprob: -8.62757396697998
    5. '[' → logprob: -9.37757396697998
    6. '[l' → logprob: -9.50257396697998
    7. '
' → logprob: -10.00257396697998
    8. ')' → logprob: -10.25257396697998
    9. '0' → logprob: -10.37757396697998
    10. '```' → logprob: -11.00257396697998

Token 621: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4841936230659485
    2. '   ' → logprob: -1.6091935634613037
    3. ':' → logprob: -2.7341935634613037
    4. ':
' → logprob: -3.3591935634613037
    5. '(n' → logprob: -3.8591935634613037
    6. ' (' → logprob: -3.9841935634613037
    7. ',' → logprob: -4.609193801879883
    8. '           ' → logprob: -4.734193801879883
    9. '(' → logprob: -5.859193801879883
    10. '\t' → logprob: -5.984193801879883

Token 622: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34377285838127136
    2. '   ' → logprob: -2.0937728881835938
    3. ':' → logprob: -2.5937728881835938
    4. ' for' → logprob: -3.5937728881835938
    5. '           ' → logprob: -3.9687728881835938
    6. ',' → logprob: -4.468772888183594
    7. '<|end|>' → logprob: -4.593772888183594
    8. '<|end|>' → logprob: -5.218772888183594
    9. ':
' → logprob: -5.593772888183594
    10. ' in' → logprob: -6.218772888183594

Token 623: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14615494012832642
    2. '   ' → logprob: -3.3961548805236816
    3. ' l' → logprob: -3.5211548805236816
    4. ' left' → logprob: -3.8961548805236816
    5. ' low' → logprob: -4.271154880523682
    6. '       ' → logprob: -4.396154880523682
    7. 'for' → logprob: -4.646154880523682
    8. ' lo' → logprob: -4.896154880523682
    9. '           ' → logprob: -5.146154880523682
    10. 'l' → logprob: -6.396154880523682

Token 624: ' binary' (ID: 15600)
  Prédit: ' lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lo' → logprob: -1.122841715812683
    2. 'l' → logprob: -1.372841715812683
    3. ' l' → logprob: -1.997841715812683
    4. ' left' → logprob: -2.6228418350219727
    5. 'for' → logprob: -2.7478418350219727
    6. ' for' → logprob: -3.1228418350219727
    7. 'lo' → logprob: -3.2478418350219727
    8. 'left' → logprob: -3.3728418350219727
    9. '   ' → logprob: -4.372841835021973
    10. ' low' → logprob: -4.747841835021973

Token 625: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.25152212381362915
    2. '_search' → logprob: -2.0015220642089844
    3. ' search' → logprob: -2.5015220642089844
    4. '_' → logprob: -5.251522064208984
    5. ' _' → logprob: -10.251522064208984
    6. 'Search' → logprob: -12.126522064208984
    7. '	search' → logprob: -13.376522064208984
    8. '```' → logprob: -13.376522064208984
    9. 'n' → logprob: -13.501522064208984
    10. 'earch' → logprob: -13.501522064208984

Token 626: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2609916627407074
    2. '           ' → logprob: -1.8859916925430298
    3. '   ' → logprob: -3.5109915733337402
    4. ':' → logprob: -4.26099157333374
    5. ':
' → logprob: -5.01099157333374
    6. '
' → logprob: -5.51099157333374
    7. 'import' → logprob: -5.76099157333374
    8. '(low' → logprob: -6.01099157333374
    9. ' for' → logprob: -6.26099157333374
    10. ',' → logprob: -6.38599157333374

Token 627: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.38221797347068787
    2. 'left' → logprob: -2.3822178840637207
    3. 'def' → logprob: -2.3822178840637207
    4. 'loc' → logprob: -3.5072178840637207
    5. '0' → logprob: -3.6322178840637207
    6. 'len' → logprob: -3.8822178840637207
    7. 'low' → logprob: -4.257217884063721
    8. ' find' → logprob: -4.382217884063721
    9. 'lo' → logprob: -4.382217884063721
    10. 'import' → logprob: -5.007217884063721

Token 628: ' first' (ID: 1577)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07868904620409012
    2. 'left' → logprob: -3.2036890983581543
    3. 'lo' → logprob: -4.203689098358154
    4. 'low' → logprob: -4.578689098358154
    5. 'l' → logprob: -5.078689098358154
    6. ' lo' → logprob: -7.078689098358154
    7. 'import' → logprob: -7.328689098358154
    8. ' left' → logprob: -7.453689098358154
    9. ' ' → logprob: -7.578689098358154
    10. 'def' → logprob: -8.578688621520996

Token 629: ' unread' (ID: 119664)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.695691704750061
    2. 'import' → logprob: -1.820691704750061
    3. ' unread' → logprob: -2.0706915855407715
    4. 'for' → logprob: -2.1956915855407715
    5. 'def' → logprob: -2.3206915855407715
    6. ' for' → logprob: -2.3206915855407715
    7. 'pos' → logprob: -2.4456915855407715
    8. 'left' → logprob: -3.4456915855407715
    9. 'low' → logprob: -3.5706915855407715
    10. 'mid' → logprob: -4.4456915855407715

Token 630: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22040891647338867
    2. '_pos' → logprob: -2.3454089164733887
    3. ')' → logprob: -3.3454089164733887
    4. ' ' → logprob: -4.595408916473389
    5. 'pos' → logprob: -4.595408916473389
    6. ' _' → logprob: -5.095408916473389
    7. '_position' → logprob: -5.220408916473389
    8. '<|end|>' → logprob: -5.345408916473389
    9. ' position' → logprob: -5.595408916473389
    10. '(' → logprob: -6.095408916473389

Token 631: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0854673385620117
    2. '   ' → logprob: -1.2104673385620117
    3. ':' → logprob: -1.9604673385620117
    4. '           ' → logprob: -2.4604673385620117
    5. '(n' → logprob: -3.7104673385620117
    6. ':
' → logprob: -3.8354673385620117
    7. '(' → logprob: -4.210467338562012
    8. '(
' → logprob: -4.585467338562012
    9. ' (' → logprob: -4.710467338562012
    10. '[' → logprob: -5.085467338562012

Token 632: ' left' (ID: 3561)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9518362879753113
    2. ' l' → logprob: -1.576836347579956
    3. '           ' → logprob: -1.951836347579956
    4. '   ' → logprob: -2.326836347579956
    5. ' lo' → logprob: -2.451836347579956
    6. 'l' → logprob: -3.451836347579956
    7. ' low' → logprob: -3.951836347579956
    8. ' left' → logprob: -4.576836109161377
    9. '
' → logprob: -5.951836109161377
    10. 'lo' → logprob: -6.451836109161377

Token 633: ',right' (ID: 164487)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09793703258037567
    2. ' =' → logprob: -2.5979371070861816
    3. ',' → logprob: -3.9729371070861816
    4. ' ,' → logprob: -10.847936630249023
    5. ',right' → logprob: -11.347936630249023
    6. ',left' → logprob: -11.972936630249023
    7. '0' → logprob: -12.722936630249023
    8. ',b' → logprob: -13.097936630249023
    9. ' ' → logprob: -13.847936630249023
    10. ',n' → logprob: -13.972936630249023

Token 634: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759415626525879
    2. ' =' → logprob: -0.8259415626525879
    3. ',' → logprob: -13.70094108581543
    4. ' ' → logprob: -14.57594108581543
    5. '=len' → logprob: -15.57594108581543
    6. '0' → logprob: -15.82594108581543
    7. '=int' → logprob: -15.95094108581543
    8. '＝' → logprob: -17.95094108581543
    9. '   ' → logprob: -18.07594108581543
    10. ' =
' → logprob: -18.32594108581543

Token 635: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -18.125024795532227
    4. '=' → logprob: -18.750024795532227
    5. '۰' → logprob: -19.500024795532227
    6. '  ' → logprob: -19.875024795532227
    7. '00' → logprob: -20.125024795532227
    8. '000' → logprob: -20.875024795532227
    9. '０' → logprob: -21.375024795532227
    10. '     ' → logprob: -21.375024795532227

Token 636: ',len' (ID: 73338)
  Prédit: ',len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',len' → logprob: -0.16082090139389038
    2. ',' → logprob: -1.9108209609985352
    3. ' ,' → logprob: -7.660820960998535
    4. ',length' → logprob: -9.410820960998535
    5. ',right' → logprob: -11.410820960998535
    6. ',None' → logprob: -11.785820960998535
    7. '<len' → logprob: -12.410820960998535
    8. '=len' → logprob: -12.785820960998535
    9. ',
' → logprob: -12.785820960998535
    10. ',left' → logprob: -13.035820960998535

Token 637: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -2.696889623621246e-06
    2. 'lst' → logprob: -12.87500286102295
    3. '_lst' → logprob: -16.750001907348633
    4. '(' → logprob: -17.750001907348633
    5. '(lista' → logprob: -18.625001907348633
    6. '(ls' → logprob: -18.625001907348633
    7. ' lst' → logprob: -18.875001907348633
    8. 'Lst' → logprob: -19.250001907348633
    9. '(l' → logprob: -19.500001907348633
    10. '(
' → logprob: -19.750001907348633

Token 638: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07588151097297668
    2. '-' → logprob: -3.4508814811706543
    3. ')-' → logprob: -3.8258814811706543
    4. '<|end|>' → logprob: -4.575881481170654
    5. '(lst' → logprob: -5.200881481170654
    6. '<|end|>' → logprob: -6.950881481170654
    7. ' -' → logprob: -6.950881481170654
    8. '[' → logprob: -7.450881481170654
    9. '```' → logprob: -8.450881958007812
    10. '
' → logprob: -8.825881958007812

Token 639: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 640: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5473898649215698
    2. ' 
' → logprob: -1.5473898649215698
    3. ' ' → logprob: -2.0473899841308594
    4. ')' → logprob: -2.5473899841308594
    5. ' while' → logprob: -2.5473899841308594
    6. 'while' (adapté à ' while') → logprob: -2.7973899841308594
    7. '<|end|>' → logprob: -3.2973899841308594
    8. 'right' → logprob: -3.4223899841308594
    9. ' right' → logprob: -3.7973899841308594
    10. '   ' → logprob: -3.9223899841308594

Token 641: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.008615754544734955
    2. ' left' → logprob: -4.758615970611572
    3. '	left' → logprob: -14.258615493774414
    4. 'right' → logprob: -15.258615493774414
    5. '   ' → logprob: -15.758615493774414
    6. ' ' → logprob: -16.008615493774414
    7. '(left' → logprob: -16.883615493774414
    8. '[left' → logprob: -17.383615493774414
    9. ' lef' → logprob: -18.008615493774414
    10. '  ' → logprob: -18.383615493774414

Token 642: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.011842621490359306
    2. ' <' → logprob: -4.636842727661133
    3. '<len' → logprob: -6.511842727661133
    4. '<n' → logprob: -8.261842727661133
    5. '<size' → logprob: -9.386842727661133
    6. '<int' → logprob: -9.886842727661133
    7. '<ll' → logprob: -10.386842727661133
    8. '<context' → logprob: -10.511842727661133
    9. ' ' → logprob: -11.511842727661133
    10. '<|end|>' → logprob: -11.636842727661133

Token 643: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0003360582049936056
    2. ' right' → logprob: -8.000335693359375
    3. 'len' → logprob: -15.000335693359375
    4. '	right' → logprob: -16.000335693359375
    5. 'left' → logprob: -16.000335693359375
    6. ' ' → logprob: -17.250335693359375
    7. ',right' → logprob: -17.375335693359375
    8. '   ' → logprob: -17.625335693359375
    9. '(right' → logprob: -17.750335693359375
    10. '[right' → logprob: -17.875335693359375

Token 644: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5295084118843079
    2. ':
' → logprob: -0.9045084118843079
    3. '<|end|>' → logprob: -5.779508590698242
    4. '):
' → logprob: -6.654508590698242
    5. '<|end|>' → logprob: -7.404508590698242
    6. ')' → logprob: -8.404508590698242
    7. '   ' → logprob: -8.654508590698242
    8. '[mid' → logprob: -9.404508590698242
    9. '{' → logprob: -9.404508590698242
    10. ':right' → logprob: -9.404508590698242

Token 645: '               ' (ID: 506)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.4546773433685303
    2. ' mid' → logprob: -1.2046773433685303
    3. '   ' → logprob: -3.9546773433685303
    4. ' middle' → logprob: -4.454677581787109
    5. '[mid' → logprob: -5.079677581787109
    6. '               ' → logprob: -5.329677581787109
    7. 'middle' → logprob: -5.579677581787109
    8. '<|end|>' → logprob: -5.704677581787109
    9. ' ' → logprob: -6.079677581787109
    10. '_mid' → logprob: -6.204677581787109

Token 646: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.08037164807319641
    2. '(mid' → logprob: -2.830371618270874
    3. ' mid' → logprob: -4.455371856689453
    4. 'middle' → logprob: -5.580371856689453
    5. '(left' → logprob: -6.580371856689453
    6. 'left' → logprob: -7.330371856689453
    7. ' (' → logprob: -7.830371856689453
    8. ' middle' → logprob: -8.955371856689453
    9. 'right' → logprob: -9.205371856689453
    10. '(right' → logprob: -9.705371856689453

Token 647: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5312840342521667
    2. ' =' → logprob: -0.9062840342521667
    3. '<|end|>' → logprob: -5.156283855438232
    4. '=int' → logprob: -7.281283855438232
    5. '=center' → logprob: -7.281283855438232
    6. ')' → logprob: -7.906283855438232
    7. '[left' → logprob: -9.15628433227539
    8. '=index' → logprob: -9.78128433227539
    9. '=len' → logprob: -9.90628433227539
    10. '=
' → logprob: -10.15628433227539

Token 648: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -6.098748053773306e-05
    2. ' left' → logprob: -9.75006103515625
    3. '(left' → logprob: -13.25006103515625
    4. 'right' → logprob: -14.75006103515625
    5. 'mid' → logprob: -14.87506103515625
    6. '[left' → logprob: -15.87506103515625
    7. '	left' → logprob: -17.50006103515625
    8. '   ' → logprob: -18.50006103515625
    9. ':left' → logprob: -18.62506103515625
    10. ' ' → logprob: -18.87506103515625

Token 649: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023248272016644478
    2. ' +' → logprob: -3.7732481956481934
    3. ')' → logprob: -14.023248672485352
    4. '+k' → logprob: -14.898248672485352
    5. '+n' → logprob: -15.273248672485352
    6. ')+' → logprob: -15.273248672485352
    7. '+b' → logprob: -15.898248672485352
    8. '+w' → logprob: -15.898248672485352
    9. '+t' → logprob: -16.02324867248535
    10. '+m' → logprob: -16.14824867248535

Token 650: 'right' (ID: 2460)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.001314285909757018
    2. 'right' → logprob: -7.001314163208008
    3. '(left' → logprob: -8.001314163208008
    4. 'mid' → logprob: -9.751314163208008
    5. ' left' → logprob: -11.751314163208008
    6. '[left' → logprob: -13.626314163208008
    7. 'middle' → logprob: -15.501314163208008
    8. ',left' → logprob: -16.251314163208008
    9. '(right' → logprob: -17.126314163208008
    10. '+' → logprob: -17.251314163208008

Token 651: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3410860598087311
    2. ')//' → logprob: -1.7160860300064087
    3. ')>>' → logprob: -2.2160861492156982
    4. '+' → logprob: -8.841086387634277
    5. ' )' → logprob: -11.341086387634277
    6. '//' → logprob: -11.466086387634277
    7. ')<<' → logprob: -12.216086387634277
    8. '>>' → logprob: -12.216086387634277
    9. ')>' → logprob: -12.216086387634277
    10. ')
' → logprob: -12.216086387634277

Token 652: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '۲' → logprob: -18.3750057220459
    4. '   ' → logprob: -19.0000057220459
    5. '२' → logprob: -20.0000057220459
    6. '  ' → logprob: -20.6250057220459
    7. '1' → logprob: -20.6250057220459
    8. '٢' → logprob: -20.7500057220459
    9. '২' → logprob: -21.1250057220459
    10. '```' → logprob: -21.2500057220459

Token 653: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9560925364494324
    2. '           ' → logprob: -1.0810925960540771
    3. 'if' → logprob: -2.206092596054077
    4. ' if' → logprob: -2.456092596054077
    5. 'left' → logprob: -3.831092596054077
    6. '
' → logprob: -3.831092596054077
    7. ')
' → logprob: -4.706092357635498
    8. '               ' → logprob: -5.206092357635498
    9. '<|end|>' → logprob: -5.456092357635498
    10. '       ' → logprob: -5.956092357635498

Token 654: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7044286131858826
    2. '           ' → logprob: -1.3294286727905273
    3. 'if' → logprob: -1.7044286727905273
    4. ')' → logprob: -3.2044286727905273
    5. '       ' → logprob: -5.079428672790527
    6. '<|end|>' → logprob: -5.204428672790527
    7. 'left' → logprob: -6.704428672790527
    8. '               ' → logprob: -6.829428672790527
    9. '```' → logprob: -7.079428672790527
    10. '=' → logprob: -7.204428672790527

Token 655: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02858562208712101
    2. ' if' → logprob: -3.65358567237854
    3. '               ' → logprob: -6.653585433959961
    4. '           ' → logprob: -7.028585433959961
    5. 'read' → logprob: -10.403585433959961
    6. 'If' → logprob: -10.903585433959961
    7. '
' → logprob: -11.153585433959961
    8. ')' → logprob: -12.028585433959961
    9. '	if' → logprob: -12.153585433959961
    10. 'idx' → logprob: -12.278585433959961

Token 656: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.013112812303006649
    2. ' read' → logprob: -4.388113021850586
    3. 'not' → logprob: -7.888113021850586
    4. ' not' → logprob: -9.138113021850586
    5. '   ' → logprob: -10.138113021850586
    6. 'jump' → logprob: -10.513113021850586
    7. 'lst' → logprob: -11.388113021850586
    8. 'mid' → logprob: -11.888113021850586
    9. ' ' → logprob: -12.013113021850586
    10. '	read' → logprob: -12.513113021850586

Token 657: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.0007962852250784636
    2. 'lst' → logprob: -7.750796318054199
    3. '[' → logprob: -8.6257963180542
    4. '(lst' → logprob: -8.8757963180542
    5. '[j' → logprob: -10.2507963180542
    6. ' lst' → logprob: -12.3757963180542
    7. '```' → logprob: -13.1257963180542
    8. 'l' → logprob: -13.2507963180542
    9. '[
' → logprob: -13.6257963180542
    10. '[[' → logprob: -14.5007963180542

Token 658: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0007759197615087032
    2. 'lst' → logprob: -7.5007758140563965
    3. '[l' → logprob: -9.250776290893555
    4. '[' → logprob: -10.500776290893555
    5. 'id' → logprob: -10.500776290893555
    6. '_lst' → logprob: -10.625776290893555
    7. '[mid' → logprob: -11.000776290893555
    8. 'ist' → logprob: -11.250776290893555
    9. '(lst' → logprob: -12.375776290893555
    10. 't' → logprob: -12.750776290893555

Token 659: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -0.00024739265791140497
    2. 'mid' → logprob: -8.37524700164795
    3. '[' → logprob: -11.12524700164795
    4. '[
' → logprob: -14.25024700164795
    5. '[m' → logprob: -15.00024700164795
    6. '(mid' → logprob: -15.00024700164795
    7. ' mid' → logprob: -15.87524700164795
    8. '
' → logprob: -15.87524700164795
    9. ' [' → logprob: -16.125247955322266
    10. '   ' → logprob: -17.250247955322266

Token 660: ']]:
' (ID: 183340)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.8855881094932556
    2. ']:
' → logprob: -1.0105881690979004
    3. ']:' → logprob: -2.0105881690979004
    4. ']' → logprob: -2.5105881690979004
    5. ' ]' → logprob: -5.0105881690979
    6. ']>' → logprob: -8.010587692260742
    7. ']:

' → logprob: -8.135587692260742
    8. ']:
' → logprob: -8.135587692260742
    9. ']]:
' → logprob: -8.135587692260742
    10. ']<' → logprob: -9.010587692260742

Token 661: '                   ' (ID: 699)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.7122741341590881
    2. ' True' → logprob: -1.7122740745544434
    3. '               ' → logprob: -2.3372740745544434
    4. '=True' → logprob: -2.8372740745544434
    5. '==' → logprob: -3.2122740745544434
    6. 'False' → logprob: -3.3372740745544434
    7. '                   ' → logprob: -3.4622740745544434
    8. ':
' → logprob: -3.5872740745544434
    9. ':' → logprob: -4.462274074554443
    10. '=False' → logprob: -4.837274074554443

Token 662: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.06597527116537094
    2. ' left' → logprob: -2.8159751892089844
    3. 'mid' → logprob: -5.565975189208984
    4. ' mid' → logprob: -9.190975189208984
    5. '[left' → logprob: -10.440975189208984
    6. 'right' → logprob: -11.440975189208984
    7. ':left' → logprob: -11.440975189208984
    8. '	left' → logprob: -11.690975189208984
    9. '           ' → logprob: -12.690975189208984
    10. '               ' → logprob: -12.940975189208984

Token 663: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052478681318461895
    2. ' =' → logprob: -5.255248069763184
    3. '+=' → logprob: -12.755248069763184
    4. '=int' → logprob: -13.130248069763184
    5. '<|end|>' → logprob: -13.505248069763184
    6. '=
' → logprob: -13.755248069763184
    7. '=line' → logprob: -13.755248069763184
    8. '+' → logprob: -14.130248069763184
    9. '=max' → logprob: -14.255248069763184
    10. '=center' → logprob: -14.630248069763184

Token 664: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -2.176947600673884e-05
    2. ' mid' → logprob: -10.750021934509277
    3. '[mid' → logprob: -15.875021934509277
    4. '(mid' → logprob: -16.75002098083496
    5. '   ' → logprob: -18.75002098083496
    6. ' ' → logprob: -18.87502098083496
    7. 'middle' → logprob: -20.50002098083496
    8. 'm' → logprob: -20.87502098083496
    9. '
' → logprob: -21.00002098083496
    10. 'midt' → logprob: -21.12502098083496

Token 665: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00103352265432477
    2. ' +' → logprob: -6.876033306121826
    3. '1' → logprob: -15.001033782958984
    4. '+
' → logprob: -15.126033782958984
    5. '＋' → logprob: -17.251033782958984
    6. ')+' → logprob: -18.251033782958984
    7. '+l' → logprob: -18.501033782958984
    8. '0' → logprob: -19.001033782958984
    9. ' plus' → logprob: -19.126033782958984
    10. 'plus' → logprob: -19.126033782958984

Token 666: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -17.5
    4. '0' → logprob: -18.625
    5. '<|end|>' → logprob: -19.5
    6. 'left' → logprob: -19.625
    7. '   ' → logprob: -19.75
    8. 'right' → logprob: -20.125
    9. '=' → logprob: -20.25
    10. '
' → logprob: -20.375

Token 667: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014206637628376484
    2. 'else' → logprob: -4.764206409454346
    3. ' else' → logprob: -5.264206409454346
    4. '
' → logprob: -9.389206886291504
    5. '           ' → logprob: -9.389206886291504
    6. '<|end|>' → logprob: -9.514206886291504
    7. ')' → logprob: -9.639206886291504
    8. '       ' → logprob: -10.389206886291504
    9. '```' → logprob: -11.264206886291504
    10. '                   ' → logprob: -11.264206886291504

Token 668: '               ' (ID: 506)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6185515522956848
    2. '               ' → logprob: -1.36855149269104
    3. 'else' → logprob: -1.61855149269104
    4. '           ' → logprob: -5.243551731109619
    5. '```' → logprob: -6.368551731109619
    6. '       ' → logprob: -7.743551731109619
    7. ')' → logprob: -7.743551731109619
    8. '<|end|>' → logprob: -7.993551731109619
    9. '	else' → logprob: -8.493551254272461
    10. '			' → logprob: -10.368551254272461

Token 669: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.08583575487136841
    2. '               ' → logprob: -2.7108356952667236
    3. ' else' → logprob: -4.210835933685303
    4. '           ' → logprob: -7.085835933685303
    5. '	else' → logprob: -10.085835456848145
    6. '	           ' → logprob: -10.960835456848145
    7. '	       ' → logprob: -11.210835456848145
    8. '		       ' → logprob: -11.835835456848145
    9. '       ' → logprob: -12.210835456848145
    10. '```' → logprob: -12.335835456848145

Token 670: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17713353037834167
    2. 'right' → logprob: -2.802133560180664
    3. ':right' → logprob: -3.177133560180664
    4. '               ' → logprob: -3.677133560180664
    5. ':' → logprob: -3.802133560180664
    6. '                   ' → logprob: -5.052133560180664
    7. '           ' → logprob: -6.052133560180664
    8. '[right' → logprob: -6.677133560180664
    9. '	right' → logprob: -7.427133560180664
    10. ',right' → logprob: -7.552133560180664

Token 671: '                   ' (ID: 699)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0002740906202234328
    2. '                   ' → logprob: -9.250273704528809
    3. '	right' → logprob: -9.500273704528809
    4. ' right' → logprob: -9.625273704528809
    5. '               ' → logprob: -10.875273704528809
    6. '[right' → logprob: -11.750273704528809
    7. ':right' → logprob: -13.125273704528809
    8. '                       ' → logprob: -13.125273704528809
    9. ',right' → logprob: -13.500273704528809
    10. '           ' → logprob: -13.625273704528809

Token 672: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -4.961759259458631e-06
    2. ' right' → logprob: -12.250004768371582
    3. 'left' → logprob: -16.3750057220459
    4. '	right' → logprob: -17.8750057220459
    5. '[right' → logprob: -18.5000057220459
    6. ':right' → logprob: -20.1250057220459
    7. ',right' → logprob: -20.3750057220459
    8. '.right' → logprob: -20.6250057220459
    9. '
' → logprob: -21.3750057220459
    10. '(right' → logprob: -21.5000057220459

Token 673: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.9361264946837764e-07
    2. '=center' → logprob: -16.875
    3. '=line' → logprob: -17.25
    4. 'left' → logprob: -17.625
    5. '=int' → logprob: -18.25
    6. '=
' → logprob: -19.25
    7. ':left' → logprob: -19.625
    8. '=max' → logprob: -20.0
    9. '=end' → logprob: -20.125
    10. ' =' → logprob: -20.25

Token 674: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0067154900170862675
    2. 'left' → logprob: -5.006715297698975
    3. ' mid' → logprob: -16.131715774536133
    4. 'middle' → logprob: -17.756715774536133
    5. ' left' → logprob: -19.506715774536133
    6. 'right' → logprob: -20.881715774536133
    7. '0' → logprob: -21.006715774536133
    8. '   ' → logprob: -21.131715774536133
    9. '[mid' → logprob: -22.631715774536133
    10. '	left' → logprob: -22.756715774536133

Token 675: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 676: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00214383564889431
    2. '	       ' → logprob: -6.877143859863281
    3. '		' → logprob: -7.877143859863281
    4. '       ' → logprob: -8.127143859863281
    5. '<|end|>' → logprob: -8.627143859863281
    6. 'return' → logprob: -9.377143859863281
    7. '	return' → logprob: -9.877143859863281
    8. '	   ' → logprob: -10.377143859863281
    9. ' return' → logprob: -10.502143859863281
    10. ')' → logprob: -11.252143859863281

Token 677: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09270136803388596
    2. '           ' → logprob: -3.0927014350891113
    3. '   ' → logprob: -3.8427014350891113
    4. 'if' (adapté à ' if') → logprob: -4.967701435089111
    5. ' if' → logprob: -4.967701435089111
    6. 'return' → logprob: -5.717701435089111
    7. '<|end|>' → logprob: -6.592701435089111
    8. '	return' → logprob: -6.967701435089111
    9. '	if' → logprob: -7.092701435089111
    10. ' return' → logprob: -7.217701435089111

Token 678: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.003178782993927598
    2. ' left' → logprob: -5.753178596496582
    3. '   ' → logprob: -14.253178596496582
    4. '	left' → logprob: -15.753178596496582
    5. 'right' → logprob: -16.0031795501709
    6. ' ' → logprob: -16.2531795501709
    7. '(left' → logprob: -18.2531795501709
    8. '  ' → logprob: -18.6281795501709
    9. '[left' → logprob: -19.1281795501709
    10. '_left' → logprob: -19.3781795501709

Token 679: '==' (ID: 560)
  Prédit: '<len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<len' → logprob: -0.0022401853930205107
    2. 'len' → logprob: -6.502240180969238
    3. '<' → logprob: -7.752240180969238
    4. ' <' → logprob: -9.377240180969238
    5. '<|end|>' → logprob: -9.627240180969238
    6. '(len' → logprob: -10.252240180969238
    7. ' len' → logprob: -10.502240180969238
    8. ',len' → logprob: -10.877240180969238
    9. '==' → logprob: -11.002240180969238
    10. '<size' → logprob: -11.127240180969238

Token 680: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -7.465036105713807e-06
    2. ' len' → logprob: -12.125007629394531
    3. '	len' → logprob: -14.250007629394531
    4. '(len' → logprob: -14.750007629394531
    5. '=len' → logprob: -14.875007629394531
    6. '<len' → logprob: -15.375007629394531
    7. '[len' → logprob: -15.875007629394531
    8. '   ' → logprob: -16.37500762939453
    9. ',len' → logprob: -16.62500762939453
    10. '           ' → logprob: -16.87500762939453

Token 681: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -3.292907877039397e-06
    2. 'lst' → logprob: -12.75000286102295
    3. '_lst' → logprob: -15.25000286102295
    4. '(' → logprob: -16.250003814697266
    5. '(lista' → logprob: -17.000003814697266
    6. '(ls' → logprob: -17.750003814697266
    7. '(
' → logprob: -18.125003814697266
    8. '(l' → logprob: -18.500003814697266
    9. '(list' → logprob: -18.750003814697266
    10. 'Lst' → logprob: -19.250003814697266

Token 682: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9284457564353943
    2. ')' → logprob: -1.178445816040039
    3. '):' → logprob: -1.428445816040039
    4. ' or' → logprob: -2.928445816040039
    5. ')return' → logprob: -6.178445816040039
    6. '           ' → logprob: -7.553445816040039
    7. 'or' → logprob: -7.553445816040039
    8. ':
' → logprob: -8.303445816040039
    9. ':return' → logprob: -8.803445816040039
    10. '       ' → logprob: -9.178445816040039

Token 683: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10832718759775162
    2. '               ' → logprob: -2.8583271503448486
    3. ' return' → logprob: -3.9833271503448486
    4. 'return' → logprob: -4.858327388763428
    5. '-' → logprob: -4.983327388763428
    6. '   ' → logprob: -5.233327388763428
    7. ' -' → logprob: -5.983327388763428
    8. '	return' → logprob: -6.483327388763428
    9. '
' → logprob: -6.608327388763428
    10. '```' → logprob: -7.733327388763428

Token 684: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.41926395893096924
    2. '-' → logprob: -1.4192639589309692
    3. ' return' → logprob: -2.6692638397216797
    4. '           ' → logprob: -3.6692638397216797
    5. '-return' → logprob: -6.29426383972168
    6. '	return' → logprob: -6.54426383972168
    7. '   ' → logprob: -7.04426383972168
    8. '               ' → logprob: -7.16926383972168
    9. ' -' → logprob: -7.54426383972168
    10. '```' → logprob: -8.41926383972168

Token 685: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.306760805164231e-05
    2. ' -' → logprob: -11.25001335144043
    3. '\-' → logprob: -22.37501335144043
    4. '-value' → logprob: -22.87501335144043
    5. '-int' → logprob: -22.87501335144043
    6. '−' → logprob: -23.12501335144043
    7. '   ' → logprob: -23.25001335144043
    8. '-valid' → logprob: -23.62501335144043
    9. '-length' → logprob: -23.75001335144043
    10. ' ' → logprob: -23.87501335144043

Token 686: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '2' → logprob: -17.4375
    4. '```' → logprob: -17.5625
    5. '<|end|>' → logprob: -18.0625
    6. '۱' → logprob: -18.625
    7. '১' → logprob: -19.0625
    8. '-' → logprob: -19.1875
    9. '१' → logprob: -19.1875
    10. '   ' → logprob: -19.5625

Token 687: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1647443026304245
    2. '       ' → logprob: -2.4147443771362305
    3. '<|end|>' → logprob: -3.1647443771362305
    4. '
' → logprob: -4.2897443771362305
    5. 'return' → logprob: -5.9147443771362305
    6. '<|end|>' → logprob: -6.7897443771362305
    7. ' return' → logprob: -6.9147443771362305
    8. '		' → logprob: -7.9147443771362305
    9. '   ' → logprob: -8.03974437713623
    10. '	return' → logprob: -8.53974437713623

Token 688: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5413306951522827
    2. '           ' → logprob: -1.0413306951522827
    3. '<|end|>' → logprob: -3.2913308143615723
    4. 'return' → logprob: -4.166330814361572
    5. '
' → logprob: -6.041330814361572
    6. '   ' → logprob: -6.291330814361572
    7. '	' → logprob: -6.666330814361572
    8. '		' → logprob: -6.791330814361572
    9. '	return' → logprob: -6.916330814361572
    10. ' return' → logprob: -6.916330814361572

Token 689: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.016338158398866653
    2. ' return' → logprob: -4.766338348388672
    3. '       ' → logprob: -5.266338348388672
    4. '	return' → logprob: -6.141338348388672
    5. ')return' → logprob: -9.016338348388672
    6. ':return' → logprob: -9.766338348388672
    7. '   ' → logprob: -10.016338348388672
    8. '```' → logprob: -10.516338348388672
    9. '<|end|>' → logprob: -10.641338348388672
    10. '{return' → logprob: -10.891338348388672

Token 690: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.00015908108616713434
    2. ' lst' → logprob: -8.75015926361084
    3. '(lst' → logprob: -14.50015926361084
    4. '_lst' → logprob: -16.500158309936523
    5. '.lst' → logprob: -18.375158309936523
    6. '   ' → logprob: -19.500158309936523
    7. 'l' → logprob: -20.000158309936523
    8. ' ' → logprob: -20.750158309936523
    9. 'ltr' → logprob: -20.750158309936523
    10. 'Lst' → logprob: -20.875158309936523

Token 691: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -6.392202976712724e-06
    2. 'left' → logprob: -12.000006675720215
    3. '[' → logprob: -15.875006675720215
    4. '[right' → logprob: -19.5000057220459
    5. '(left' → logprob: -19.5000057220459
    6. '[
' → logprob: -19.8750057220459
    7. ' left' → logprob: -20.2500057220459
    8. '
' → logprob: -20.5000057220459
    9. ',left' → logprob: -20.8750057220459
    10. '	left' → logprob: -21.0000057220459

Token 692: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005785312969237566
    2. ']+' → logprob: -8.000578880310059
    3. '<|end|>' → logprob: -9.125578880310059
    4. ']
' → logprob: -10.000578880310059
    5. ' ]' → logprob: -10.125578880310059
    6. '+' → logprob: -11.500578880310059
    7. '   ' → logprob: -11.750578880310059
    8. ')' → logprob: -11.750578880310059
    9. '[' → logprob: -12.625578880310059
    10. ']>' → logprob: -12.875578880310059

Token 693: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 694: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12114662677049637
    2. '
' → logprob: -3.1211466789245605
    3. '   ' → logprob: -3.3711466789245605
    4. '        
' → logprob: -4.7461466789245605
    5. ' next' → logprob: -4.7461466789245605
    6. 'def' → logprob: -4.7461466789245605
    7. ' while' → logprob: -6.4961466789245605
    8. '    
' → logprob: -6.4961466789245605
    9. 'next' → logprob: -6.4961466789245605
    10. ' def' → logprob: -6.9961466789245605

Token 695: ' According' (ID: 16344)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8258278965950012
    2. 'def' → logprob: -2.2008278369903564
    3. 'current' → logprob: -2.3258278369903564
    4. 'read' → logprob: -2.3258278369903564
    5. 'cur' → logprob: -2.5758278369903564
    6. 'stack' → logprob: -2.9508278369903564
    7. 'visited' → logprob: -2.9508278369903564
    8. 'next' → logprob: -3.7008278369903564
    9. 'pos' → logprob: -4.0758280754089355
    10. '   ' → logprob: -4.5758280754089355

Token 696: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6640918254852295
    2. ' to' → logprob: -0.9140918254852295
    3. 'def' → logprob: -2.7890918254852295
    4. '       ' → logprob: -4.039092063903809
    5. '#' → logprob: -6.289092063903809
    6. '   ' → logprob: -6.539092063903809
    7. '_to' → logprob: -6.539092063903809
    8. 't' → logprob: -9.164092063903809
    9. '
' → logprob: -9.289092063903809
    10. 'import' → logprob: -10.039092063903809

Token 697: ' rules' (ID: 9607)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.13004514575004578
    2. 'rules' → logprob: -2.880045175552368
    3. 'rule' → logprob: -3.755045175552368
    4. ' the' → logprob: -3.880045175552368
    5. '#' → logprob: -4.630044937133789
    6. 'problem' → logprob: -4.880044937133789
    7. 'def' → logprob: -6.505044937133789
    8. ' rules' → logprob: -6.630044937133789
    9. ' problem' → logprob: -8.630044937133789
    10. ' #' → logprob: -8.880044937133789

Token 698: ' priority' (ID: 17621)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04871261119842529
    2. 'def' → logprob: -4.048712730407715
    3. '
' → logprob: -4.298712730407715
    4. 'next' → logprob: -5.673712730407715
    5. 'while' → logprob: -5.923712730407715
    6. ' next' → logprob: -6.048712730407715
    7. '   ' → logprob: -6.548712730407715
    8. 'current' → logprob: -7.048712730407715
    9. '#' → logprob: -7.048712730407715
    10. ' i' → logprob: -7.173712730407715

Token 699: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6037614345550537
    2. '   ' → logprob: -1.8537614345550537
    3. 'def' → logprob: -2.1037614345550537
    4. 'while' → logprob: -2.3537614345550537
    5. '
' → logprob: -3.1037614345550537
    6. ' while' → logprob: -4.853761672973633
    7. ':' → logprob: -5.103761672973633
    8. '#' → logprob: -5.353761672973633
    9. '        
' → logprob: -6.228761672973633
    10. 'for' → logprob: -6.228761672973633

Token 700: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6422526240348816
    2. 'while' → logprob: -1.6422526836395264
    3. '   ' → logprob: -2.7672526836395264
    4. ' while' → logprob: -2.8922526836395264
    5. ' if' → logprob: -3.5172526836395264
    6. '#' → logprob: -3.5172526836395264
    7. 'if' → logprob: -3.7672526836395264
    8. 'current' → logprob: -4.017252445220947
    9. 'next' → logprob: -4.267252445220947
    10. ' next' → logprob: -4.642252445220947

Token 701: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.21483536064624786
    2. '       ' → logprob: -2.8398354053497314
    3. ' while' → logprob: -3.7148354053497314
    4. 'current' → logprob: -3.8398354053497314
    5. '   ' → logprob: -3.9648354053497314
    6. 'if' → logprob: -4.089835166931152
    7. 'cur' → logprob: -4.464835166931152
    8. 'next' → logprob: -4.589835166931152
    9. '#' (adapté à ' #') → logprob: -4.839835166931152
    10. 'def' → logprob: -5.339835166931152

Token 702: ' ' (ID: 220)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09170635044574738
    2. 'if' → logprob: -2.8417062759399414
    3. 'for' → logprob: -4.966706275939941
    4. '#' → logprob: -4.966706275939941
    5. 'def' → logprob: -5.091706275939941
    6. '   ' → logprob: -5.966706275939941
    7. 'current' → logprob: -6.341706275939941
    8. 't' → logprob: -6.466706275939941
    9. '       ' → logprob: -6.716706275939941
    10. ' while' → logprob: -7.091706275939941

Token 703: '1' (ID: 16)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.54031902551651
    2. 'for' → logprob: -1.0403189659118652
    3. 'def' → logprob: -3.5403189659118652
    4. '#' → logprob: -4.165318965911865
    5. 't' → logprob: -4.915318965911865
    6. 'cur' → logprob: -5.665318965911865
    7. '   ' → logprob: -6.415318965911865
    8. 'pos' → logprob: -6.665318965911865
    9. 'current' → logprob: -6.665318965911865
    10. 'next' → logprob: -7.040318965911865

Token 704: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4848111867904663
    2. '   ' → logprob: -1.8598111867904663
    3. ' if' → logprob: -2.734811305999756
    4. 'while' → logprob: -2.984811305999756
    5. 'if' → logprob: -3.234811305999756
    6. ' while' → logprob: -4.359811305999756
    7. '#' → logprob: -4.484811305999756
    8. 'def' → logprob: -4.734811305999756
    9. ' #' → logprob: -4.859811305999756
    10. ' ' → logprob: -4.984811305999756

Token 705: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.957105815410614
    2. 'for' → logprob: -1.2071058750152588
    3. 'if' → logprob: -1.7071058750152588
    4. '#' → logprob: -2.207105875015259
    5. 't' → logprob: -4.95710563659668
    6. '   ' → logprob: -5.33210563659668
    7. 'def' → logprob: -5.58210563659668
    8. '       ' → logprob: -5.83210563659668
    9. 'found' → logprob: -6.33210563659668
    10. 'read' → logprob: -7.20710563659668

Token 706: ' the' (ID: 290)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' last' → logprob: -1.128156065940857
    2. 'last' → logprob: -1.503156065940857
    3. 'i' → logprob: -1.628156065940857
    4. ' i' → logprob: -2.2531561851501465
    5. 'has' → logprob: -3.6281561851501465
    6. ' has' → logprob: -3.7531561851501465
    7. ' any' → logprob: -3.8781561851501465
    8. ' order' → logprob: -3.8781561851501465
    9. 't' → logprob: -4.8781561851501465
    10. 'len' → logprob: -5.0031561851501465

Token 707: ' i' (ID: 575)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.6505770087242126
    2. ' last' → logprob: -1.1505770683288574
    3. 'i' → logprob: -3.1505770683288574
    4. ' current' → logprob: -3.7755770683288574
    5. 'current' → logprob: -4.025577068328857
    6. 'read' → logprob: -4.025577068328857
    7. ' next' → logprob: -4.025577068328857
    8. 'next' → logprob: -4.150577068328857
    9. 't' → logprob: -5.400577068328857
    10. ' i' → logprob: -5.525577068328857

Token 708: '-th' (ID: 14928)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.5729962587356567
    2. '==' → logprob: -1.8229962587356567
    3. 'n' → logprob: -2.322996139526367
    4. ' ==' → logprob: -2.697996139526367
    5. ' ' → logprob: -4.072996139526367
    6. ' <' → logprob: -4.197996139526367
    7. 's' → logprob: -4.572996139526367
    8. '!=' → logprob: -4.697996139526367
    9. ' !=' → logprob: -4.947996139526367
    10. '+' → logprob: -5.072996139526367

Token 709: ' letter' (ID: 10263)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.9599051475524902
    2. '_' → logprob: -1.7099051475524902
    3. ' ==' → logprob: -1.9599051475524902
    4. ' ' → logprob: -2.4599051475524902
    5. '==' → logprob: -3.5849051475524902
    6. ' _' → logprob: -3.9599051475524902
    7. ')' → logprob: -4.08490514755249
    8. ' >=' → logprob: -4.20990514755249
    9. '<' → logprob: -4.33490514755249
    10. 'nd' → logprob: -4.33490514755249

Token 710: ' read' (ID: 1729)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3228282630443573
    2. '<|end|>' → logprob: -2.1978282928466797
    3. '==' → logprob: -2.5728282928466797
    4. ' ' → logprob: -3.6978282928466797
    5. ' is' → logprob: -3.6978282928466797
    6. ' <' → logprob: -4.94782829284668
    7. ' !=' → logprob: -5.19782829284668
    8. '[' → logprob: -5.19782829284668
    9. '<|end|>' → logprob: -5.82282829284668
    10. '+' → logprob: -6.32282829284668

Token 711: ' has' (ID: 853)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5571793913841248
    2. '==' → logprob: -1.1821794509887695
    3. 's' → logprob: -2.8071794509887695
    4. ' <' → logprob: -3.8071794509887695
    5. '+' → logprob: -5.0571794509887695
    6. '<n' → logprob: -5.1821794509887695
    7. ' ' → logprob: -5.3071794509887695
    8. ' >=' → logprob: -5.4321794509887695
    9. ' is' → logprob: -5.5571794509887695
    10. '>=' → logprob: -6.3071794509887695

Token 712: ' jump' (ID: 13843)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3365710377693176
    2. 'jump' → logprob: -1.3365709781646729
    3. ' a' → logprob: -4.586571216583252
    4. ' jump' → logprob: -4.961571216583252
    5. '(a' → logprob: -6.586571216583252
    6. '(j' → logprob: -6.711571216583252
    7. 'has' → logprob: -7.711571216583252
    8. '(' → logprob: -8.086570739746094
    9. '(t' → logprob: -8.086570739746094
    10. 'last' → logprob: -8.336570739746094

Token 713: ' mark' (ID: 1983)
  Prédit: '_marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_marks' → logprob: -0.1523013561964035
    2. '_mark' → logprob: -2.02730131149292
    3. '_' → logprob: -5.52730131149292
    4. ' _' → logprob: -6.52730131149292
    5. ')' → logprob: -7.02730131149292
    6. '_type' → logprob: -7.15230131149292
    7. ''_' → logprob: -7.27730131149292
    8. '_marker' → logprob: -7.65230131149292
    9. ')_' → logprob: -8.027301788330078
    10. '```' → logprob: -9.027301788330078

Token 714: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5773627758026123
    2. ':' → logprob: -2.0773627758026123
    3. ',' → logprob: -2.4523627758026123
    4. '[(' → logprob: -2.4523627758026123
    5. '==' → logprob: -2.4523627758026123
    6. ' and' → logprob: -2.5773627758026123
    7. '[i' → logprob: -2.7023627758026123
    8. ' ==' → logprob: -2.7023627758026123
    9. '   ' → logprob: -3.8273627758026123
    10. ' ' → logprob: -4.452363014221191

Token 715: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5877829194068909
    2. '[' → logprob: -2.212782859802246
    3. ')' → logprob: -2.587782859802246
    4. ',' → logprob: -3.337782859802246
    5. '(t' → logprob: -3.462782859802246
    6. ' (' → logprob: -3.837782859802246
    7. ' t' → logprob: -3.962782859802246
    8. ' ' → logprob: -4.212782859802246
    9. ',t' → logprob: -4.337782859802246
    10. '(' → logprob: -4.462782859802246

Token 716: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36134281754493713
    2. ',n' → logprob: -1.2363427877426147
    3. ',i' → logprob: -5.736342906951904
    4. ')' → logprob: -5.986342906951904
    5. ',)' → logprob: -6.361342906951904
    6. '<|end|>' → logprob: -6.611342906951904
    7. ',next' → logprob: -7.861342906951904
    8. ',t' → logprob: -7.986342906951904
    9. '),' → logprob: -8.236342430114746
    10. ',num' → logprob: -8.361342430114746

Token 717: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22555799782276154
    2. ' and' → logprob: -2.100558042526245
    3. 'and' → logprob: -3.475558042526245
    4. '+' → logprob: -3.600558042526245
    5. '):' → logprob: -4.725557804107666
    6. '>' → logprob: -5.850557804107666
    7. '==' → logprob: -5.975557804107666
    8. '1' → logprob: -6.475557804107666
    9. '>=' → logprob: -6.725557804107666
    10. '):
' → logprob: -6.975557804107666

Token 718: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8140627145767212
    2. ' if' → logprob: -1.3140627145767212
    3. '   ' → logprob: -1.9390627145767212
    4. '           ' → logprob: -3.3140625953674316
    5. ' n' → logprob: -4.064062595367432
    6. ' and' → logprob: -4.189062595367432
    7. 'if' → logprob: -4.189062595367432
    8. ':' → logprob: -4.564062595367432
    9. '<|end|>' → logprob: -4.564062595367432
    10. 'n' → logprob: -5.564062595367432

Token 719: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.05916212499141693
    2. '==' → logprob: -3.559162139892578
    3. ' >=' → logprob: -3.934162139892578
    4. '>' → logprob: -5.184162139892578
    5. '+' → logprob: -6.434162139892578
    6. ' ==' → logprob: -7.309162139892578
    7. '<=' → logprob: -7.684162139892578
    8. '=' → logprob: -8.684162139892578
    9. ')>=' → logprob: -8.684162139892578
    10. '!=' → logprob: -9.059162139892578

Token 720: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00040290577453561127
    2. '1' → logprob: -8.000402450561523
    3. ' ' → logprob: -9.875402450561523
    4. '   ' → logprob: -11.875402450561523
    5. '```' → logprob: -12.625402450561523
    6. '3' → logprob: -13.500402450561523
    7. '
' → logprob: -13.625402450561523
    8. '=' → logprob: -13.625402450561523
    9. '  ' → logprob: -15.000402450561523
    10. '0' → logprob: -15.562902450561523

Token 721: ' skip' (ID: 16677)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0274290069937706
    2. ':
' → logprob: -4.527429103851318
    3. ' and' → logprob: -4.527429103851318
    4. ',' → logprob: -5.402429103851318
    5. '   ' → logprob: -7.777429103851318
    6. '       ' → logprob: -9.02742862701416
    7. 'and' → logprob: -10.02742862701416
    8. ')' → logprob: -10.02742862701416
    9. '<|end|>' → logprob: -10.15242862701416
    10. ' :' → logprob: -10.27742862701416

Token 722: ' it' (ID: 480)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5410773754119873
    2. '<|end|>' → logprob: -1.9160773754119873
    3. '   ' → logprob: -2.4160773754119873
    4. '       ' → logprob: -3.4160773754119873
    5. ' and' → logprob: -3.5410773754119873
    6. '<|end|>' → logprob: -3.7910773754119873
    7. ',' → logprob: -3.9160773754119873
    8. ':
' → logprob: -4.291077613830566
    9. ' ' → logprob: -4.416077613830566
    10. '
' → logprob: -4.791077613830566

Token 723: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8002714514732361
    2. ' if' → logprob: -1.8002715110778809
    3. '   ' → logprob: -2.300271511077881
    4. '
' → logprob: -2.425271511077881
    5. 'if' → logprob: -3.175271511077881
    6. '<|end|>' → logprob: -3.175271511077881
    7. '<|end|>' → logprob: -3.675271511077881
    8. ':' → logprob: -3.800271511077881
    9. ':
' → logprob: -4.175271511077881
    10. ' ' → logprob: -4.675271511077881

Token 724: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07551039755344391
    2. '   ' → logprob: -3.2005105018615723
    3. '<|end|>' → logprob: -4.325510501861572
    4. '
' → logprob: -5.450510501861572
    5. '       ' → logprob: -5.700510501861572
    6. ':
' → logprob: -5.825510501861572
    7. ')' → logprob: -6.450510501861572
    8. ' ' → logprob: -6.450510501861572
    9. '\n' → logprob: -6.825510501861572
    10. '<|end|>' → logprob: -7.450510501861572

Token 725: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6909621953964233
    2. '
' → logprob: -1.3159621953964233
    3. '<|end|>' → logprob: -2.940962314605713
    4. '       ' → logprob: -3.440962314605713
    5. '  
' → logprob: -3.440962314605713
    6. '    
' → logprob: -3.565962314605713
    7. ':' → logprob: -3.815962314605713
    8. ' 
' → logprob: -4.315962314605713
    9. ' if' → logprob: -4.440962314605713
    10. '\n' → logprob: -4.690962314605713

Token 726: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4562934339046478
    2. '       ' → logprob: -2.0812933444976807
    3. ':' → logprob: -3.2062933444976807
    4. ' if' → logprob: -3.4562933444976807
    5. '<|end|>' → logprob: -3.4562933444976807
    6. ' ' → logprob: -3.5812933444976807
    7. ' 
' → logprob: -3.8312933444976807
    8. '    
' → logprob: -4.45629358291626
    9. '
' → logprob: -4.45629358291626
    10. '#' → logprob: -4.58129358291626

Token 727: '2' (ID: 17)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.073873519897461
    2. 'if' → logprob: -1.323873519897461
    3. '   ' → logprob: -2.198873519897461
    4. '       ' → logprob: -2.573873519897461
    5. 'i' → logprob: -2.573873519897461
    6. ' #' → logprob: -3.698873519897461
    7. ' if' → logprob: -3.948873519897461
    8. 'elif' → logprob: -3.948873519897461
    9. 'n' → logprob: -4.323873519897461
    10. 't' → logprob: -4.573873519897461

Token 728: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13487255573272705
    2. '       ' → logprob: -2.7598724365234375
    3. '   ' → logprob: -2.8848724365234375
    4. ' if' → logprob: -6.0098724365234375
    5. '    ' → logprob: -6.5098724365234375
    6. ' )' → logprob: -6.5098724365234375
    7. ':' → logprob: -7.7598724365234375
    8. '           ' → logprob: -8.384872436523438
    9. ')
' → logprob: -8.884872436523438
    10. 'if' → logprob: -9.009872436523438

Token 729: ' when' (ID: 1261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8785866498947144
    2. '       ' → logprob: -1.5035866498947144
    3. ' if' → logprob: -2.378586769104004
    4. 'while' → logprob: -2.878586769104004
    5. '   ' → logprob: -3.003586769104004
    6. '#' → logprob: -3.003586769104004
    7. 'i' → logprob: -3.503586769104004
    8. 'for' → logprob: -4.253586769104004
    9. ' while' → logprob: -4.503586769104004
    10. ' #' → logprob: -4.628586769104004

Token 730: ' reading' (ID: 6085)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.333465576171875
    2. 'read' → logprob: -2.083465576171875
    3. ' i' → logprob: -2.458465576171875
    4. ' True' → logprob: -3.458465576171875
    5. ' read' → logprob: -3.708465576171875
    6. 'True' → logprob: -4.833465576171875
    7. 'has' → logprob: -6.458465576171875
    8. 'reading' → logprob: -6.583465576171875
    9. '   ' → logprob: -6.708465576171875
    10. ' reading' → logprob: -6.833465576171875

Token 731: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.053789496421814
    2. ' the' → logprob: -1.553789496421814
    3. 'the' → logprob: -1.928789496421814
    4. ' a' → logprob: -2.3037896156311035
    5. 'a' → logprob: -2.3037896156311035
    6. ' i' → logprob: -2.8037896156311035
    7. 'linear' → logprob: -5.4287896156311035
    8. 'next' → logprob: -5.6787896156311035
    9. ' linear' → logprob: -5.8037896156311035
    10. ' next' → logprob: -5.9287896156311035

Token 732: '-th' (ID: 14928)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6744815111160278
    2. ' ==' → logprob: -1.9244815111160278
    3. ' +' → logprob: -2.2994813919067383
    4. ',' → logprob: -3.0494813919067383
    5. '   ' → logprob: -3.5494813919067383
    6. '==' → logprob: -3.5494813919067383
    7. ' <' → logprob: -4.049481391906738
    8. ' ' → logprob: -4.424481391906738
    9. '<|end|>' → logprob: -4.549481391906738
    10. ':' → logprob: -4.799481391906738

Token 733: ' letter' (ID: 10263)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2973268032073975
    2. ' ' → logprob: -2.0473268032073975
    3. ' <' → logprob: -2.2973268032073975
    4. ')' → logprob: -2.4223268032073975
    5. ' ==' → logprob: -2.7973268032073975
    6. ' _' → logprob: -3.2973268032073975
    7. ' letter' → logprob: -3.4223268032073975
    8. '+' → logprob: -3.4223268032073975
    9. ' +' → logprob: -3.6723268032073975
    10. '  ' → logprob: -3.7973268032073975

Token 734: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14808757603168488
    2. ',' → logprob: -2.773087501525879
    3. ' and' → logprob: -3.523087501525879
    4. ':
' → logprob: -4.023087501525879
    5. ' ==' → logprob: -4.773087501525879
    6. '<|end|>' → logprob: -5.273087501525879
    7. '   ' → logprob: -5.773087501525879
    8. '==' → logprob: -5.773087501525879
    9. '[' → logprob: -6.273087501525879
    10. ' ' → logprob: -7.273087501525879

Token 735: ' (' (ID: 350)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.028600335121154785
    2. ' jump' → logprob: -4.528600215911865
    3. 'number' → logprob: -5.028600215911865
    4. '(t' → logprob: -5.653600215911865
    5. 'a' → logprob: -6.403600215911865
    6. 'has' → logprob: -6.778600215911865
    7. '(n' → logprob: -6.903600215911865
    8. 'read' → logprob: -7.153600215911865
    9. 'n' → logprob: -7.528600215911865
    10. 't' → logprob: -7.653600215911865

Token 736: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.002203666837885976
    2. 'jump' → logprob: -6.252203464508057
    3. '(t' → logprob: -9.752203941345215
    4. ')' → logprob: -10.377203941345215
    5. ',' → logprob: -10.627203941345215
    6. ' t' → logprob: -10.627203941345215
    7. ')t' → logprob: -11.252203941345215
    8. '`t' → logprob: -11.252203941345215
    9. '#' → logprob: -11.502203941345215
    10. '   ' → logprob: -11.752203941345215

Token 737: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.052001964300870895
    2. ',' → logprob: -3.052001953125
    3. ')' → logprob: -6.427001953125
    4. '>=' → logprob: -6.927001953125
    5. '),' → logprob: -8.927001953125
    6. ' ,' → logprob: -9.177001953125
    7. 'n' → logprob: -9.302001953125
    8. ',
' → logprob: -9.552001953125
    9. ' >=' → logprob: -9.677001953125
    10. '<n' → logprob: -10.302001953125

Token 738: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.775849461555481
    2. '>=' → logprob: -1.525849461555481
    3. '+' → logprob: -1.775849461555481
    4. ')' → logprob: -2.1508493423461914
    5. ')>=' → logprob: -4.525849342346191
    6. '):' → logprob: -5.150849342346191
    7. '):
' → logprob: -5.525849342346191
    8. '),
' → logprob: -5.650849342346191
    9. ',' → logprob: -5.900849342346191
    10. '==' → logprob: -6.150849342346191

Token 739: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.3707078695297241
    2. '       ' → logprob: -1.9957078695297241
    3. '   ' → logprob: -2.1207079887390137
    4. '
' → logprob: -2.2457079887390137
    5. ' n' → logprob: -2.3707079887390137
    6. 'n' → logprob: -2.8707079887390137
    7. ' continue' → logprob: -3.2457079887390137
    8. ':' → logprob: -3.4957079887390137
    9. 'if' → logprob: -3.6207079887390137
    10. ' ' → logprob: -3.8707079887390137

Token 740: ' exists' (ID: 13031)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003160730004310608
    2. ' n' → logprob: -6.0031609535217285
    3. 't' → logprob: -8.87816047668457
    4. '(n' → logprob: -9.00316047668457
    5. 'read' → logprob: -9.25316047668457
    6. 'jump' → logprob: -9.37816047668457
    7. '   ' → logprob: -10.00316047668457
    8. 'has' → logprob: -10.25316047668457
    9. 'i' → logprob: -10.62816047668457
    10. '(' → logprob: -10.87816047668457

Token 741: ' unread' (ID: 119664)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.31121841073036194
    2. ' (' → logprob: -2.186218500137329
    3. 't' → logprob: -2.686218500137329
    4. 'n' → logprob: -3.811218500137329
    5. '(n' → logprob: -4.68621826171875
    6. '(i' → logprob: -4.81121826171875
    7. 'next' → logprob: -5.43621826171875
    8. '(' → logprob: -5.56121826171875
    9. ' ' → logprob: -5.56121826171875
    10. ' t' → logprob: -5.93621826171875

Token 742: ' letter' (ID: 10263)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.408654808998108
    2. '_' → logprob: -1.783654808998108
    3. ')' → logprob: -2.1586546897888184
    4. '_pos' → logprob: -2.6586546897888184
    5. '[(' → logprob: -2.9086546897888184
    6. '(t' → logprob: -3.1586546897888184
    7. '(n' → logprob: -3.1586546897888184
    8. '_jump' → logprob: -3.2836546897888184
    9. '(' → logprob: -3.9086546897888184
    10. '(s' → logprob: -4.033654689788818

Token 743: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.28209608793258667
    2. ' (' → logprob: -3.1570961475372314
    3. 'with' → logprob: -3.4070961475372314
    4. '<|end|>' → logprob: -3.4070961475372314
    5. 's' → logprob: -3.9070961475372314
    6. '_' → logprob: -3.9070961475372314
    7. ')' → logprob: -4.282095909118652
    8. '(n' → logprob: -4.532095909118652
    9. '(t' → logprob: -4.657095909118652
    10. '(' → logprob: -4.782095909118652

Token 744: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.05749254301190376
    2. ' (' → logprob: -3.05749249458313
    3. 'jump' → logprob: -5.557492733001709
    4. 'number' → logprob: -6.432492733001709
    5. 't' → logprob: -6.932492733001709
    6. ' jump' → logprob: -7.307492733001709
    7. 'same' → logprob: -7.682492733001709
    8. ' t' → logprob: -8.55749225616455
    9. ' number' → logprob: -8.68249225616455
    10. 'type' → logprob: -8.80749225616455

Token 745: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00023214559769257903
    2. ' t' → logprob: -8.500231742858887
    3. ',' → logprob: -12.000231742858887
    4. ',t' → logprob: -12.125231742858887
    5. '(t' → logprob: -12.125231742858887
    6. '`t' → logprob: -12.750231742858887
    7. '	t' → logprob: -13.000231742858887
    8. ')t' → logprob: -13.000231742858887
    9. '   ' → logprob: -13.125231742858887
    10. ')' → logprob: -14.250231742858887

Token 746: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.0571647584438324
    2. ',' → logprob: -3.1821646690368652
    3. '+' → logprob: -4.432164669036865
    4. ',m' → logprob: -6.682164669036865
    5. ',
' → logprob: -8.682165145874023
    6. ' ,' → logprob: -8.932165145874023
    7. '   ' → logprob: -8.932165145874023
    8. ',+' → logprob: -9.932165145874023
    9. '+,' → logprob: -10.182165145874023
    10. 'n' → logprob: -10.182165145874023

Token 747: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00026169343618676066
    2. ' +' → logprob: -9.500261306762695
    3. '   ' → logprob: -9.875261306762695
    4. '-' → logprob: -9.875261306762695
    5. ')' → logprob: -10.125261306762695
    6. ')+' → logprob: -11.250261306762695
    7. '),' → logprob: -12.125261306762695
    8. '+)' → logprob: -12.625261306762695
    9. '```' → logprob: -12.750261306762695
    10. '       ' → logprob: -12.750261306762695

Token 748: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ')' → logprob: -13.625001907348633
    3. '```' → logprob: -15.000001907348633
    4. ' ' → logprob: -15.625001907348633
    5. '+' → logprob: -15.750001907348633
    6. '=' → logprob: -17.625001907348633
    7. '2' → logprob: -17.875001907348633
    8. '``' → logprob: -18.625001907348633
    9. '
' → logprob: -18.875001907348633
    10. '   ' → logprob: -19.375001907348633

Token 749: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4858364164829254
    2. '):' → logprob: -1.110836386680603
    3. ')' → logprob: -3.6108365058898926
    4. '),' → logprob: -3.6108365058898926
    5. '):
' → logprob: -7.985836505889893
    6. '):

' → logprob: -8.235836029052734
    7. ''):
' → logprob: -8.485836029052734
    8. '),
' → logprob: -9.110836029052734
    9. ''):' → logprob: -9.235836029052734
    10. ',' → logprob: -9.360836029052734

Token 750: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8478260636329651
    2. ':' → logprob: -1.2228260040283203
    3. ':
' → logprob: -1.9728260040283203
    4. ',' → logprob: -2.5978260040283203
    5. ' and' → logprob: -3.4728260040283203
    6. '<|end|>' → logprob: -5.09782600402832
    7. '   ' → logprob: -5.22282600402832
    8. '):
' → logprob: -5.34782600402832
    9. ')' → logprob: -5.47282600402832
    10. '<|end|>' → logprob: -6.47282600402832

Token 751: ' pos' (ID: 1253)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -1.3427772521972656
    2. 'minimal' → logprob: -1.7177772521972656
    3. 'lower' → logprob: -1.9677772521972656
    4. 'index' → logprob: -2.3427772521972656
    5. 'least' → logprob: -2.4677772521972656
    6. ' minimal' → logprob: -2.9677772521972656
    7. 'next' → logprob: -3.0927772521972656
    8. 'the' → logprob: -3.5927772521972656
    9. 'all' → logprob: -3.9677772521972656
    10. 'a' → logprob: -4.342777252197266

Token 752: ' <' (ID: 464)
  Prédit: 'ition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -1.2714473009109497
    2. '+' → logprob: -2.39644718170166
    3. '<=' → logprob: -2.39644718170166
    4. ' <' → logprob: -2.52144718170166
    5. ' <=' → logprob: -2.77144718170166
    6. 's' → logprob: -2.77144718170166
    7. '=' → logprob: -3.39644718170166
    8. 'i' → logprob: -3.52144718170166
    9. ' +' → logprob: -3.52144718170166
    10. ')' → logprob: -3.52144718170166

Token 753: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0318613275885582
    2. 'N' → logprob: -4.406861305236816
    3. 'read' → logprob: -5.156861305236816
    4. ' i' → logprob: -5.531861305236816
    5. 'jump' → logprob: -5.656861305236816
    6. '=' → logprob: -6.406861305236816
    7. 'order' → logprob: -7.156861305236816
    8. 'jm' → logprob: -7.656861305236816
    9. 'find' → logprob: -8.031861305236816
    10. ' N' → logprob: -8.156861305236816

Token 754: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34930673241615295
    2. '       ' → logprob: -1.5993067026138306
    3. ':
' → logprob: -2.97430682182312
    4. '<|end|>' → logprob: -4.474306583404541
    5. ',' → logprob: -4.724306583404541
    6. ')' → logprob: -5.849306583404541
    7. ' and' → logprob: -5.974306583404541
    8. '   ' → logprob: -5.974306583404541
    9. '           ' → logprob: -6.099306583404541
    10. '+' → logprob: -6.349306583404541

Token 755: ' read' (ID: 1729)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2009633481502533
    2. '           ' → logprob: -3.575963258743286
    3. ' if' → logprob: -3.825963258743286
    4. 'def' → logprob: -4.075963497161865
    5. ' def' → logprob: -4.200963497161865
    6. ' i' → logprob: -4.325963497161865
    7. '   ' → logprob: -4.450963497161865
    8. '        ' → logprob: -4.700963497161865
    9. ':' → logprob: -4.700963497161865
    10. ' continue' → logprob: -5.075963497161865

Token 756: ' it' (ID: 480)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3918451070785522
    2. '       ' → logprob: -1.7668451070785522
    3. '<|end|>' → logprob: -2.016845226287842
    4. ' ' → logprob: -2.141845226287842
    5. ' _' → logprob: -3.141845226287842
    6. '   ' → logprob: -3.391845226287842
    7. '<|end|>' → logprob: -3.641845226287842
    8. ')' → logprob: -3.641845226287842
    9. '(n' → logprob: -3.891845226287842
    10. '
' → logprob: -4.266845226287842

Token 757: ' next' (ID: 2613)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19498738646507263
    2. '
' → logprob: -2.3199872970581055
    3. '<|end|>' → logprob: -3.0699872970581055
    4. ':' → logprob: -4.3199872970581055
    5. '   ' → logprob: -5.1949872970581055
    6. '<|end|>' → logprob: -5.3199872970581055
    7. '        
' → logprob: -6.4449872970581055
    8. ':
' → logprob: -6.8199872970581055
    9. ')' → logprob: -7.1949872970581055
    10. '    
' → logprob: -7.3199872970581055

Token 758: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016506310552358627
    2. '<|end|>' → logprob: -4.766506195068359
    3. '
' → logprob: -5.641506195068359
    4. 'def' → logprob: -6.266506195068359
    5. '<|end|>' → logprob: -6.641506195068359
    6. 'while' → logprob: -8.51650619506836
    7. '   ' → logprob: -8.64150619506836
    8. '        
' → logprob: -8.89150619506836
    9. ',' → logprob: -9.14150619506836
    10. '#' → logprob: -9.14150619506836

Token 759: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08656367659568787
    2. '   ' → logprob: -3.4615635871887207
    3. '
' → logprob: -3.8365635871887207
    4. '<|end|>' → logprob: -4.586563587188721
    5. '#' → logprob: -5.461563587188721
    6. '        
' → logprob: -5.586563587188721
    7. '    
' → logprob: -5.711563587188721
    8. '	' → logprob: -6.461563587188721
    9. '\' → logprob: -6.461563587188721
    10. '\n' → logprob: -6.961563587188721

Token 760: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011889045126736164
    2. '<|end|>' → logprob: -5.2618889808654785
    3. '
' → logprob: -5.5118889808654785
    4. '#' (adapté à ' #') → logprob: -6.7618889808654785
    5. '   ' → logprob: -7.5118889808654785
    6. '<|end|>' → logprob: -8.136889457702637
    7. '        
' → logprob: -8.386889457702637
    8. ' ' → logprob: -9.261889457702637
    9. '           ' → logprob: -9.511889457702637
    10. ' #' → logprob: -10.261889457702637

Token 761: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04654289036989212
    2. 'def' → logprob: -3.2965428829193115
    3. '#' → logprob: -5.921543121337891
    4. '
' → logprob: -6.171543121337891
    5. 'while' → logprob: -6.671543121337891
    6. '   ' → logprob: -7.421543121337891
    7. ' def' → logprob: -8.04654312133789
    8. '           ' → logprob: -8.04654312133789
    9. 'next' → logprob: -8.04654312133789
    10. ' while' → logprob: -8.17154312133789

Token 762: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17091104388237
    2. '#' → logprob: -2.1709110736846924
    3. 'def' → logprob: -3.9209110736846924
    4. '
' → logprob: -5.045910835266113
    5. ' #' → logprob: -5.295910835266113
    6. '   ' → logprob: -5.545910835266113
    7. '           ' → logprob: -6.170910835266113
    8. 'while' → logprob: -6.420910835266113
    9. 't' → logprob: -7.295910835266113
    10. 'if' → logprob: -7.670910835266113

Token 763: ' read' (ID: 1729)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13820965588092804
    2. '#' → logprob: -2.888209581375122
    3. ' if' → logprob: -3.263209581375122
    4. '           ' → logprob: -3.763209581375122
    5. ' #' → logprob: -5.013209819793701
    6. '        ' → logprob: -6.638209819793701
    7. ' next' → logprob: -6.763209819793701
    8. 'if' → logprob: -6.888209819793701
    9. '   ' → logprob: -7.388209819793701
    10. 'next' → logprob: -8.513209342956543

Token 764: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9810899496078491
    2. ' i' → logprob: -1.3560899496078491
    3. ' next' → logprob: -1.7310899496078491
    4. 'next' → logprob: -2.1060900688171387
    5. 'linear' → logprob: -4.106090068817139
    6. ' linear' → logprob: -4.231090068817139
    7. ' the' → logprob: -4.856090068817139
    8. 'the' → logprob: -5.231090068817139
    9. 'n' → logprob: -5.231090068817139
    10. '_linear' → logprob: -5.981090068817139

Token 765: 'k' (ID: 74)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.33662936091423035
    2. 'i' → logprob: -2.2116293907165527
    3. 'next' → logprob: -2.4616293907165527
    4. ' next' → logprob: -3.4616293907165527
    5. ' t' → logprob: -3.7116293907165527
    6. ' i' → logprob: -4.086629390716553
    7. 'k' → logprob: -5.461629390716553
    8. 'the' → logprob: -5.586629390716553
    9. ' the' → logprob: -6.086629390716553
    10. '   ' → logprob: -6.461629390716553

Token 766: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001621503266505897
    2. ' +' → logprob: -6.501621723175049
    3. '+i' → logprob: -9.62662124633789
    4. '   ' → logprob: -10.50162124633789
    5. 'i' → logprob: -12.25162124633789
    6. ')+' → logprob: -12.37662124633789
    7. '[' → logprob: -12.87662124633789
    8. '[i' → logprob: -13.12662124633789
    9. ')' → logprob: -13.62662124633789
    10. '+t' → logprob: -13.75162124633789

Token 767: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.209963900502771e-05
    2. ' ' → logprob: -9.875092506408691
    3. ')' → logprob: -10.625092506408691
    4. '   ' → logprob: -11.625092506408691
    5. '```' → logprob: -12.750092506408691
    6. '+' → logprob: -13.625092506408691
    7. '0' → logprob: -14.500092506408691
    8. '       ' → logprob: -15.562592506408691
    9. '`' → logprob: -15.750092506408691
    10. '  ' → logprob: -15.750092506408691

Token 768: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011458032764494419
    2. ')-' → logprob: -4.511457920074463
    3. '[' → logprob: -9.136458396911621
    4. ')
' → logprob: -10.136458396911621
    5. '   ' → logprob: -10.261458396911621
    6. '-token' → logprob: -10.386458396911621
    7. ')[' → logprob: -10.511458396911621
    8. '),' → logprob: -10.761458396911621
    9. '`)' → logprob: -10.761458396911621
    10. '```' → logprob: -10.761458396911621

Token 769: 'th' (ID: 404)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19117750227451324
    2. 'linear' → logprob: -2.4411776065826416
    3. ' ' → logprob: -3.6911776065826416
    4. 'i' → logprob: -4.0661773681640625
    5. 'line' → logprob: -4.5661773681640625
    6. 'token' → logprob: -4.6911773681640625
    7. '<|end|>' → logprob: -4.6911773681640625
    8. '+' → logprob: -5.3161773681640625
    9. '```' → logprob: -6.4411773681640625
    10. '<|end|>' → logprob: -6.8161773681640625

Token 770: ' letter' (ID: 10263)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14821010828018188
    2. '<|end|>' → logprob: -2.398210048675537
    3. '<|end|>' → logprob: -4.023210048675537
    4. '
' → logprob: -4.398210048675537
    5. 'def' → logprob: -5.023210048675537
    6. '   ' → logprob: -5.523210048675537
    7. '        
' → logprob: -6.773210048675537
    8. ' while' → logprob: -7.148210048675537
    9. 'while' → logprob: -7.148210048675537
    10. ',' → logprob: -7.898210048675537

Token 771: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21212713420391083
    2. '<|end|>' → logprob: -2.337127208709717
    3. '
' → logprob: -2.962127208709717
    4. 'while' → logprob: -4.337127208709717
    5. '<|end|>' → logprob: -4.962127208709717
    6. ' while' → logprob: -5.212127208709717
    7. '   ' → logprob: -5.462127208709717
    8. 'def' → logprob: -5.587127208709717
    9. '        
' → logprob: -5.712127208709717
    10. '    
' → logprob: -6.712127208709717

Token 772: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02813543938100338
    2. 'i' → logprob: -4.278135299682617
    3. ' k' → logprob: -4.528135299682617
    4. '(k' → logprob: -7.528135299682617
    5. ' i' → logprob: -7.653135299682617
    6. 'linear' → logprob: -7.903135299682617
    7. 'not' → logprob: -8.028135299682617
    8. 'n' → logprob: -8.653135299682617
    9. 'next' → logprob: -9.028135299682617
    10. 'read' → logprob: -9.278135299682617

Token 773: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6858100295066833
    2. '+' → logprob: -1.8108100891113281
    3. '=' → logprob: -2.060810089111328
    4. '<|end|>' → logprob: -2.685810089111328
    5. ' =' → logprob: -3.685810089111328
    6. '==' → logprob: -4.060810089111328
    7. 'is' → logprob: -4.185810089111328
    8. ' ==' → logprob: -4.435810089111328
    9. ' <' → logprob: -4.560810089111328
    10. ' +' → logprob: -4.560810089111328

Token 774: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.005622181575745344
    2. ' last' → logprob: -5.755622386932373
    3. 'i' → logprob: -6.630622386932373
    4. 'the' → logprob: -7.005622386932373
    5. 'most' → logprob: -9.255621910095215
    6. '   ' → logprob: -10.255621910095215
    7. 'read' → logprob: -10.380621910095215
    8. ' i' → logprob: -11.005621910095215
    9. ' the' → logprob: -11.380621910095215
    10. ' ' → logprob: -12.255621910095215

Token 775: ' read' (ID: 1729)
  Prédit: '_read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_read' → logprob: -0.00224803457967937
    2. 'read' → logprob: -6.6272478103637695
    3. '```' → logprob: -8.12724781036377
    4. '_' → logprob: -9.25224781036377
    5. '_pos' → logprob: -9.75224781036377
    6. 'type' → logprob: -10.25224781036377
    7. '_type' → logprob: -10.37724781036377
    8. 'pos' → logprob: -10.50224781036377
    9. 'Read' → logprob: -10.62724781036377
    10. '_reads' → logprob: -10.75224781036377

Token 776: ' letter' (ID: 10263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47473153471946716
    2. '_token' → logprob: -2.2247314453125
    3. '   ' → logprob: -2.9747314453125
    4. ':' → logprob: -2.9747314453125
    5. 'def' → logprob: -3.8497314453125
    6. '_' → logprob: -3.9747314453125
    7. 'token' → logprob: -4.3497314453125
    8. '_index' → logprob: -4.4747314453125
    9. 'i' → logprob: -4.5997314453125
    10. ' i' → logprob: -4.5997314453125

Token 777: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.7072112560272217
    2. 'def' → logprob: -1.7072112560272217
    3. '   ' → logprob: -1.8322112560272217
    4. '       ' → logprob: -2.0822112560272217
    5. '
' → logprob: -2.3322112560272217
    6. '<|end|>' → logprob: -2.5822112560272217
    7. ')' → logprob: -3.3322112560272217
    8. '<|end|>' → logprob: -3.7072112560272217
    9. ' ' → logprob: -4.082211494445801
    10. ' =' → logprob: -4.207211494445801

Token 778: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.252296507358551
    2. ' (' → logprob: -1.7522964477539062
    3. 'jump' → logprob: -3.5022964477539062
    4. 't' → logprob: -4.002296447753906
    5. ' jump' → logprob: -7.377296447753906
    6. ' t' → logprob: -8.127296447753906
    7. ' ' → logprob: -9.252296447753906
    8. '(' → logprob: -10.377296447753906
    9. 'type' → logprob: -11.002296447753906
    10. '
' → logprob: -11.002296447753906

Token 779: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0005436192732304335
    2. '(t' → logprob: -8.250543594360352
    3. 'jump' → logprob: -8.625543594360352
    4. ')t' → logprob: -10.125543594360352
    5. ' t' → logprob: -10.750543594360352
    6. ',t' → logprob: -11.375543594360352
    7. '`t' → logprob: -11.500543594360352
    8. ')' → logprob: -11.500543594360352
    9. ',' → logprob: -12.875543594360352
    10. ' (' → logprob: -13.375543594360352

Token 780: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.579530656337738
    2. ',n' → logprob: -0.829530656337738
    3. 'n' → logprob: -6.079530715942383
    4. ',t' → logprob: -6.829530715942383
    5. 't' → logprob: -9.454530715942383
    6. 'ype' → logprob: -9.829530715942383
    7. ')' → logprob: -11.079530715942383
    8. ' ,' → logprob: -11.454530715942383
    9. ',i' → logprob: -11.579530715942383
    10. '_n' → logprob: -11.704530715942383

Token 781: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002345323096960783
    2. 'n' → logprob: -6.252345085144043
    3. 't' → logprob: -8.127345085144043
    4. ' ' → logprob: -9.377345085144043
    5. 'last' → logprob: -11.877345085144043
    6. ' n' → logprob: -12.627345085144043
    7. 'i' → logprob: -12.939845085144043
    8. '2' → logprob: -13.127345085144043
    9. ' t' → logprob: -13.127345085144043
    10. 'def' → logprob: -13.439845085144043

Token 782: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003926064353436232
    2. ')
' → logprob: -5.6289262771606445
    3. '       ' → logprob: -9.128926277160645
    4. '))' → logprob: -9.878926277160645
    5. ')`' → logprob: -10.128926277160645
    6. ')]' → logprob: -10.253926277160645
    7. ')
' → logprob: -11.128926277160645
    8. ']' → logprob: -11.628926277160645
    9. ')`
' → logprob: -11.753926277160645
    10. '   ' → logprob: -12.003926277160645

Token 783: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04094700887799263
    2. '
' → logprob: -3.7909469604492188
    3. '<|end|>' → logprob: -4.415946960449219
    4. 'def' → logprob: -6.040946960449219
    5. '<|end|>' → logprob: -6.915946960449219
    6. '   ' → logprob: -7.040946960449219
    7. '        
' → logprob: -7.415946960449219
    8. 'next' → logprob: -9.040946960449219
    9. '#' → logprob: -9.290946960449219
    10. '    
' → logprob: -9.290946960449219

Token 784: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08960364758968353
    2. 'def' → logprob: -3.2146036624908447
    3. '
' → logprob: -3.7146036624908447
    4. 'while' → logprob: -4.589603424072266
    5. '   ' → logprob: -5.214603424072266
    6. '<|end|>' → logprob: -6.464603424072266
    7. '        
' → logprob: -7.089603424072266
    8. ' while' → logprob: -7.214603424072266
    9. 'i' → logprob: -7.464603424072266
    10. 'import' → logprob: -7.964603424072266

Token 785: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00743731576949358
    2. '   ' → logprob: -5.757437229156494
    3. '
' → logprob: -6.882437229156494
    4. 'while' → logprob: -7.007437229156494
    5. 'def' → logprob: -7.132437229156494
    6. '        
' → logprob: -8.132437705993652
    7. ' while' → logprob: -8.382437705993652
    8. '<|end|>' → logprob: -8.382437705993652
    9. 'i' → logprob: -8.632437705993652
    10. '    
' → logprob: -9.382437705993652

Token 786: '3' (ID: 18)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9976311922073364
    2. 'visited' → logprob: -1.6226311922073364
    3. 'while' → logprob: -1.7476311922073364
    4. 'read' → logprob: -2.747631072998047
    5. '       ' → logprob: -2.872631072998047
    6. '   ' → logprob: -2.997631072998047
    7. 'cur' → logprob: -3.622631072998047
    8. 'next' → logprob: -3.997631072998047
    9. 'current' → logprob: -4.247631072998047
    10. 'pos' → logprob: -4.497631072998047

Token 787: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5883023738861084
    2. '   ' → logprob: -1.2133023738861084
    3. '<|end|>' → logprob: -3.4633023738861084
    4. ')' → logprob: -3.5883023738861084
    5. '<|end|>' → logprob: -4.0883026123046875
    6. ' =' → logprob: -4.0883026123046875
    7. 'def' → logprob: -4.2133026123046875
    8. ':' → logprob: -4.8383026123046875
    9. ' ' → logprob: -5.3383026123046875
    10. '
' → logprob: -5.5883026123046875

Token 788: ' letter' (ID: 10263)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6314884424209595
    2. '       ' → logprob: -2.25648832321167
    3. 'def' → logprob: -2.38148832321167
    4. 'k' → logprob: -2.75648832321167
    5. '#' → logprob: -2.88148832321167
    6. '   ' → logprob: -3.00648832321167
    7. 'pos' → logprob: -3.63148832321167
    8. 'visited' → logprob: -4.38148832321167
    9. '
' → logprob: -4.50648832321167
    10. 'i' → logprob: -4.88148832321167

Token 789: ' with' (ID: 483)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34847623109817505
    2. ' with' → logprob: -2.9734761714935303
    3. '_indices' → logprob: -3.0984761714935303
    4. 'indices' → logprob: -3.4734761714935303
    5. ' indices' → logprob: -3.5984761714935303
    6. 'with' → logprob: -3.8484761714935303
    7. ' =' → logprob: -3.9734761714935303
    8. 'read' → logprob: -4.098476409912109
    9. '_index' → logprob: -4.098476409912109
    10. ' read' → logprob: -4.098476409912109

Token 790: ' '' (ID: 461)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.4487679600715637
    2. ' jump' → logprob: -1.198767900466919
    3. 'has' → logprob: -4.323768138885498
    4. ' (' → logprob: -5.073768138885498
    5. 'a' → logprob: -5.323768138885498
    6. 'None' → logprob: -5.573768138885498
    7. 'number' → logprob: -5.573768138885498
    8. ' a' → logprob: -5.698768138885498
    9. 'last' → logprob: -6.073768138885498
    10. '(t' → logprob: -6.198768138885498

Token 791: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0773235484957695
    2. ''' → logprob: -3.8273234367370605
    3. '_v' → logprob: -3.8273234367370605
    4. ' v' → logprob: -4.9523234367370605
    5. 'has' → logprob: -5.5773234367370605
    6. '
' → logprob: -6.0773234367370605
    7. '')' → logprob: -6.2023234367370605
    8. 'a' → logprob: -6.7023234367370605
    9. 'i' → logprob: -6.9523234367370605
    10. '#' → logprob: -6.9523234367370605

Token 792: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12901213765144348
    2. '')' → logprob: -2.504012107849121
    3. ''''' → logprob: -4.379012107849121
    4. 'alue' → logprob: -4.629012107849121
    5. ''>' → logprob: -6.254012107849121
    6. ' in' → logprob: -6.254012107849121
    7. 'iew' → logprob: -6.504012107849121
    8. '[i' → logprob: -6.754012107849121
    9. '[' → logprob: -7.004012107849121
    10. ')' → logprob: -7.129012107849121

Token 793: ' must' (ID: 2804)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5071067214012146
    2. '   ' → logprob: -1.5071067810058594
    3. ' =' → logprob: -3.0071067810058594
    4. 'while' → logprob: -3.3821067810058594
    5. ' def' → logprob: -4.382106781005859
    6. 'v' → logprob: -4.507106781005859
    7. '
' → logprob: -4.757106781005859
    8. '#' → logprob: -4.757106781005859
    9. '       ' → logprob: -4.882106781005859
    10. ':' → logprob: -4.882106781005859

Token 794: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.009335620328783989
    2. ' read' → logprob: -5.634335517883301
    3. ' not' → logprob: -6.009335517883301
    4. ' continue' → logprob: -6.384335517883301
    5. ' always' → logprob: -8.2593355178833
    6. 'be' → logprob: -8.2593355178833
    7. '   ' → logprob: -8.7593355178833
    8. ' have' → logprob: -9.1343355178833
    9. '_read' → logprob: -9.1343355178833
    10. 'read' → logprob: -9.5093355178833

Token 795: ' skipped' (ID: 72521)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.4333530366420746
    2. ' read' → logprob: -1.058353066444397
    3. 'visited' → logprob: -6.183352947235107
    4. ' True' → logprob: -6.933352947235107
    5. 'True' → logprob: -7.308352947235107
    6. ' skipped' → logprob: -8.183353424072266
    7. 'consider' → logprob: -9.058353424072266
    8. 'sk' → logprob: -9.433353424072266
    9. ' considered' → logprob: -9.433353424072266
    10. ' visited' → logprob: -10.183353424072266

Token 796: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8206546902656555
    2. '       ' → logprob: -1.5706546306610107
    3. '
' → logprob: -1.9456546306610107
    4. 'while' → logprob: -2.5706546306610107
    5. '<|end|>' → logprob: -3.1956546306610107
    6. 'def' → logprob: -3.3206546306610107
    7. ' while' → logprob: -4.19565486907959
    8. ':' → logprob: -4.57065486907959
    9. '    
' → logprob: -5.19565486907959
    10. '<|end|>' → logprob: -5.57065486907959

Token 797: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6026102304458618
    2. '
' → logprob: -0.9776102304458618
    3. '<|end|>' → logprob: -3.1026101112365723
    4. '   ' → logprob: -4.477610111236572
    5. '<|end|>' → logprob: -4.852610111236572
    6. '        
' → logprob: -5.977610111236572
    7. 'def' → logprob: -5.977610111236572
    8. '    
' → logprob: -5.977610111236572
    9. '  
' → logprob: -6.977610111236572
    10. ' 
' → logprob: -6.977610111236572

Token 798: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06805197894573212
    2. '<|end|>' → logprob: -2.943052053451538
    3. '   ' → logprob: -5.068051815032959
    4. 'while' → logprob: -5.818051815032959
    5. '<|end|>' → logprob: -6.318051815032959
    6. ' while' → logprob: -7.568051815032959
    7. 'token' → logprob: -7.943051815032959
    8. 'def' → logprob: -8.068052291870117
    9. 'next' → logprob: -8.568052291870117
    10. '
' → logprob: -9.193052291870117

Token 799: ' ' (ID: 220)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7426616549491882
    2. '       ' → logprob: -1.242661714553833
    3. '   ' → logprob: -2.492661714553833
    4. ' while' → logprob: -2.742661714553833
    5. 'def' → logprob: -2.992661714553833
    6. 'i' → logprob: -3.992661714553833
    7. 'read' → logprob: -5.867661476135254
    8. '#' → logprob: -6.492661476135254
    9. 'n' → logprob: -6.492661476135254
    10. 'next' → logprob: -6.492661476135254

Token 800: '4' (ID: 19)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2630225718021393
    2. 'visited' → logprob: -2.1380226612091064
    3. 'def' → logprob: -2.8880226612091064
    4. 'pos' → logprob: -4.138022422790527
    5. 'current' → logprob: -4.513022422790527
    6. 'cur' → logprob: -4.763022422790527
    7. 'read' → logprob: -5.138022422790527
    8. 'stack' → logprob: -5.263022422790527
    9. '   ' → logprob: -5.263022422790527
    10. 'next' → logprob: -6.013022422790527

Token 801: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31668034195899963
    2. '   ' → logprob: -1.5666803121566772
    3. '
' → logprob: -3.191680431365967
    4. '    
' → logprob: -5.566680431365967
    5. 'def' → logprob: -5.816680431365967
    6. 'while' → logprob: -5.941680431365967
    7. '    ' → logprob: -6.316680431365967
    8. '        
' → logprob: -6.316680431365967
    9. ' while' → logprob: -6.816680431365967
    10. '#' → logprob: -6.816680431365967

Token 802: ' if' (ID: 538)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6809805035591125
    2. 'def' → logprob: -1.9309804439544678
    3. '#' → logprob: -2.1809804439544678
    4. 'while' → logprob: -2.4309804439544678
    5. 'read' → logprob: -2.8059804439544678
    6. 'pos' → logprob: -3.0559804439544678
    7. '   ' → logprob: -4.180980682373047
    8. 'i' → logprob: -4.930980682373047
    9. 'for' → logprob: -5.055980682373047
    10. 'from' → logprob: -6.430980682373047

Token 803: ' i' (ID: 575)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -1.092004418373108
    2. ' not' → logprob: -1.217004418373108
    3. 'not' → logprob: -1.717004418373108
    4. 'i' → logprob: -2.9670042991638184
    5. ' read' → logprob: -2.9670042991638184
    6. ' i' → logprob: -4.092004299163818
    7. 'order' → logprob: -4.217004299163818
    8. 'has' → logprob: -4.342004299163818
    9. 'last' → logprob: -4.467004299163818
    10. 'len' → logprob: -4.967004299163818

Token 804: '-th' (ID: 14928)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.4247681200504303
    2. ' ==' → logprob: -1.924768090248108
    3. ' <' → logprob: -2.1747682094573975
    4. '==' → logprob: -3.2997682094573975
    5. '>=' → logprob: -3.5497682094573975
    6. ' ' → logprob: -4.799767971038818
    7. '+' → logprob: -5.549767971038818
    8. '<' → logprob: -5.799767971038818
    9. '=' → logprob: -6.174767971038818
    10. 'nd' → logprob: -7.299767971038818

Token 805: ' read' (ID: 1729)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16540035605430603
    2. ' read' → logprob: -3.290400266647339
    3. ' _' → logprob: -3.415400266647339
    4. '_' → logprob: -3.790400266647339
    5. ' ==' → logprob: -4.040400505065918
    6. ' ' → logprob: -4.790400505065918
    7. ' >=' → logprob: -5.040400505065918
    8. '_read' → logprob: -5.040400505065918
    9. '<' → logprob: -5.290400505065918
    10. ' letter' → logprob: -5.665400505065918

Token 806: ' letter' (ID: 10263)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17303316295146942
    2. ' _' → logprob: -3.7980332374572754
    3. '_index' → logprob: -4.048033237457275
    4. ')' → logprob: -4.298033237457275
    5. 'index' → logprob: -4.298033237457275
    6. '_letter' → logprob: -4.548033237457275
    7. ' ' → logprob: -4.673033237457275
    8. ' index' → logprob: -4.798033237457275
    9. ' letter' → logprob: -4.923033237457275
    10. 'letter' → logprob: -5.298033237457275

Token 807: ''s' (ID: 885)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.19694334268569946
    2. ' <' → logprob: -2.8219432830810547
    3. '==' → logprob: -2.8219432830810547
    4. ' is' → logprob: -3.4469432830810547
    5. ' >=' → logprob: -5.071943283081055
    6. ' not' → logprob: -5.446943283081055
    7. '   ' → logprob: -5.696943283081055
    8. ' !=' → logprob: -5.696943283081055
    9. ' ' → logprob: -6.571943283081055
    10. ' has' → logprob: -6.821943283081055

Token 808: ' previous' (ID: 5880)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.14628727734088898
    2. ' jump' → logprob: -2.646287202835083
    3. 'has' → logprob: -3.146287202835083
    4. 'type' → logprob: -5.146287441253662
    5. '_jump' → logprob: -5.146287441253662
    6. 'def' → logprob: -6.771287441253662
    7. ' has' → logprob: -6.896287441253662
    8. '#' → logprob: -7.396287441253662
    9. 'skip' → logprob: -7.521287441253662
    10. '_has' → logprob: -7.521287441253662

Token 809: ' letter' (ID: 10263)
  Prédit: '_read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_read' → logprob: -1.3255635499954224
    2. '_' → logprob: -1.4505635499954224
    3. 'read' → logprob: -1.7005635499954224
    4. '_index' → logprob: -3.325563430786133
    5. 'index' → logprob: -3.575563430786133
    6. ' read' → logprob: -3.825563430786133
    7. 'def' → logprob: -4.075563430786133
    8. '_letter' → logprob: -4.075563430786133
    9. '=' → logprob: -4.325563430786133
    10. ' _' → logprob: -4.450563430786133

Token 810: ' (' (ID: 350)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6886813044548035
    2. ' ==' → logprob: -1.1886813640594482
    3. '==' → logprob: -2.4386813640594482
    4. '+' → logprob: -4.188681125640869
    5. ' in' → logprob: -4.563681125640869
    6. ' <' → logprob: -4.688681125640869
    7. ' +' → logprob: -4.938681125640869
    8. '   ' → logprob: -5.813681125640869
    9. ' !=' → logprob: -5.813681125640869
    10. ' i' → logprob: -5.813681125640869

Token 811: 'i' (ID: 72)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04357397183775902
    2. ' )' → logprob: -4.16857385635376
    3. '+' → logprob: -5.54357385635376
    4. ']' → logprob: -6.41857385635376
    5. '
' → logprob: -6.54357385635376
    6. ')
' → logprob: -6.54357385635376
    7. 'i' → logprob: -6.66857385635376
    8. ')_' → logprob: -6.66857385635376
    9. 'index' → logprob: -7.04357385635376
    10. ' +' → logprob: -7.16857385635376

Token 812: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3921491801738739
    2. ' +' → logprob: -1.5171492099761963
    3. ')' → logprob: -2.8921492099761963
    4. ' <' → logprob: -4.517148971557617
    5. 'nd' → logprob: -4.892148971557617
    6. ' >=' → logprob: -5.017148971557617
    7. ' ==' → logprob: -5.267148971557617
    8. '-' → logprob: -5.767148971557617
    9. '==' → logprob: -6.142148971557617
    10. ' -' → logprob: -6.392148971557617

Token 813: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019561098888516426
    2. ' ' → logprob: -6.501955986022949
    3. ')' → logprob: -7.876955986022949
    4. '-' → logprob: -11.12695598602295
    5. '```' → logprob: -11.37695598602295
    6. '
' → logprob: -11.62695598602295
    7. ' -' → logprob: -12.00195598602295
    8. ' )' → logprob: -12.25195598602295
    9. '   ' → logprob: -12.50195598602295
    10. '=' → logprob: -12.50195598602295

Token 814: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14073237776756287
    2. '+' → logprob: -3.5157322883605957
    3. ']' → logprob: -3.6407322883605957
    4. '-' → logprob: -4.015732288360596
    5. ']==' → logprob: -4.765732288360596
    6. ')+' → logprob: -5.140732288360596
    7. ')==' → logprob: -5.265732288360596
    8. ')>=' → logprob: -5.265732288360596
    9. ')<' → logprob: -5.640732288360596
    10. ']>=' → logprob: -5.640732288360596

Token 815: ' has' (ID: 853)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9467688798904419
    2. ' is' → logprob: -1.196768879890442
    3. ')' → logprob: -2.5717687606811523
    4. '==' → logprob: -3.4467687606811523
    5. ' ' → logprob: -3.5717687606811523
    6. '<|end|>' → logprob: -3.5717687606811523
    7. ' >=' → logprob: -3.5717687606811523
    8. ' !=' → logprob: -4.071768760681152
    9. ' <' → logprob: -4.321768760681152
    10. '   ' → logprob: -4.821768760681152

Token 816: ' '' (ID: 461)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.6520417928695679
    2. ' read' → logprob: -1.0270417928695679
    3. ' not' → logprob: -3.2770419120788574
    4. 'v' → logprob: -3.5270419120788574
    5. 'not' → logprob: -4.027041912078857
    6. ''' → logprob: -4.652041912078857
    7. ' v' → logprob: -5.277041912078857
    8. 'a' → logprob: -5.277041912078857
    9. ' a' → logprob: -5.777041912078857
    10. 'jump' → logprob: -6.027041912078857

Token 817: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7628200054168701
    2. '_' → logprob: -1.0128200054168701
    3. '_v' → logprob: -2.26282000541687
    4. ' ')' → logprob: -3.01282000541687
    5. ' v' → logprob: -5.262820243835449
    6. ''' → logprob: -6.387820243835449
    7. ' '' → logprob: -6.387820243835449
    8. ' _' → logprob: -6.512820243835449
    9. '')' → logprob: -6.762820243835449
    10. ' ' → logprob: -7.262820243835449

Token 818: '',' (ID: 787)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7253015637397766
    2. ''' → logprob: -1.8503015041351318
    3. ' and' → logprob: -2.225301504135132
    4. '')' → logprob: -2.975301504135132
    5. '):' → logprob: -2.975301504135132
    6. ']' → logprob: -3.600301504135132
    7. ':' → logprob: -3.850301504135132
    8. '==' → logprob: -4.100301742553711
    9. '):
' → logprob: -4.350301742553711
    10. ' )' → logprob: -4.850301742553711

Token 819: ' read' (ID: 1729)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.3597766160964966
    2. ' if' → logprob: -1.4847766160964966
    3. ' continue' → logprob: -1.8597766160964966
    4. '       ' → logprob: -2.359776496887207
    5. '   ' → logprob: -2.609776496887207
    6. ' then' → logprob: -2.859776496887207
    7. ' i' → logprob: -3.859776496887207
    8. '           ' → logprob: -3.984776496887207
    9. ' #' → logprob: -4.484776496887207
    10. ' return' → logprob: -4.609776496887207

Token 820: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.34563249349594116
    2. 'i' → logprob: -1.595632553100586
    3. ' +' → logprob: -3.970632553100586
    4. '+' → logprob: -4.095632553100586
    5. ' ' → logprob: -4.220632553100586
    6. ' next' → logprob: -4.220632553100586
    7. 'next' → logprob: -5.470632553100586
    8. '[i' → logprob: -5.720632553100586
    9. ' (' → logprob: -5.720632553100586
    10. '(i' → logprob: -6.220632553100586

Token 821: '-' (ID: 12)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 822: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0793231949210167
    2. '-' → logprob: -2.5793232917785645
    3. 'i' → logprob: -9.329322814941406
    4. ' -' → logprob: -9.329322814941406
    5. '```' → logprob: -9.329322814941406
    6. ' ' → logprob: -9.454322814941406
    7. '+' → logprob: -9.704322814941406
    8. '   ' → logprob: -12.079322814941406
    9. '(' → logprob: -13.454322814941406
    10. '`' → logprob: -13.454322814941406

Token 823: '-th' (ID: 14928)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8286007642745972
    2. '       ' → logprob: -1.4536007642745972
    3. '
' → logprob: -1.8286007642745972
    4. 'def' → logprob: -2.8286008834838867
    5. ':' → logprob: -3.0786008834838867
    6. ' =' → logprob: -3.7036008834838867
    7. '<|end|>' → logprob: -4.953600883483887
    8. '    
' → logprob: -5.078600883483887
    9. ':
' → logprob: -5.703600883483887
    10. ' def' → logprob: -5.703600883483887

Token 824: ' letter' (ID: 10263)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5756290555000305
    2. 'def' → logprob: -1.9506289958953857
    3. '       ' → logprob: -2.3256289958953857
    4. '
' → logprob: -2.3256289958953857
    5. ':' → logprob: -3.5756289958953857
    6. '<|end|>' → logprob: -3.5756289958953857
    7. '    
' → logprob: -4.575629234313965
    8. '<|end|>' → logprob: -5.200629234313965
    9. ' def' → logprob: -5.450629234313965
    10. ' =' → logprob: -5.700629234313965

Token 825: ' next' (ID: 2613)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6829296350479126
    2. '   ' → logprob: -1.1829296350479126
    3. '
' → logprob: -2.682929515838623
    4. ':
' → logprob: -3.307929515838623
    5. '<|end|>' → logprob: -3.557929515838623
    6. 'def' → logprob: -3.932929515838623
    7. '       ' → logprob: -4.682929515838623
    8. ' ' → logprob: -5.432929515838623
    9. '<|end|>' → logprob: -5.682929515838623
    10. ' =' → logprob: -5.807929515838623

Token 826: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08517550677061081
    2. '
' → logprob: -2.9601755142211914
    3. '   ' → logprob: -4.210175514221191
    4. 'def' → logprob: -5.085175514221191
    5. '<|end|>' → logprob: -5.835175514221191
    6. '        
' → logprob: -5.960175514221191
    7. '    
' → logprob: -6.960175514221191
    8. ' next' → logprob: -8.460175514221191
    9. 'next' → logprob: -8.585175514221191
    10. '<|end|>' → logprob: -8.585175514221191

Token 827: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8080537915229797
    2. ':' → logprob: -1.058053731918335
    3. '       ' → logprob: -2.183053731918335
    4. 'def' → logprob: -3.808053731918335
    5. '
' → logprob: -4.308053970336914
    6. '<|end|>' → logprob: -4.433053970336914
    7. ':
' → logprob: -4.933053970336914
    8. ')' → logprob: -5.183053970336914
    9. ' ' → logprob: -5.433053970336914
    10. '    
' → logprob: -5.683053970336914

Token 828: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05025944486260414
    2. '   ' → logprob: -3.8002593517303467
    3. '<|end|>' → logprob: -4.050259590148926
    4. 'while' → logprob: -6.050259590148926
    5. 'def' → logprob: -6.425259590148926
    6. 'i' → logprob: -7.050259590148926
    7. ' while' → logprob: -7.050259590148926
    8. '<|end|>' → logprob: -7.300259590148926
    9. '
' → logprob: -7.800259590148926
    10. '        
' → logprob: -8.050259590148926

Token 829: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1254991888999939
    2. 'while' → logprob: -3.0004992485046387
    3. 'def' → logprob: -3.2504992485046387
    4. '   ' → logprob: -4.000499248504639
    5. ' while' → logprob: -5.250499248504639
    6. '
' → logprob: -6.000499248504639
    7. 'next' → logprob: -7.125499248504639
    8. '#' → logprob: -7.750499248504639
    9. 'i' → logprob: -7.875499248504639
    10. '           ' → logprob: -8.00049877166748

Token 830: '5' (ID: 20)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.996633768081665
    2. 'def' → logprob: -1.371633768081665
    3. 'while' → logprob: -2.621633768081665
    4. 'i' → logprob: -2.746633768081665
    5. '       ' → logprob: -2.996633768081665
    6. ' while' → logprob: -3.246633768081665
    7. 'next' → logprob: -3.371633768081665
    8. ' next' → logprob: -3.746633768081665
    9. ' i' → logprob: -3.996633768081665
    10. 'v' → logprob: -4.746633529663086

Token 831: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5540084838867188
    2. ' =' → logprob: -2.3040084838867188
    3. '   ' → logprob: -2.3040084838867188
    4. 'def' → logprob: -2.5540084838867188
    5. 'while' → logprob: -3.6790084838867188
    6. ')' → logprob: -3.6790084838867188
    7. ':' → logprob: -3.8040084838867188
    8. '=' → logprob: -3.9290084838867188
    9. '#' → logprob: -4.554008483886719
    10. '    ' → logprob: -4.929008483886719

Token 832: ' read' (ID: 1729)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.3065531253814697
    2. 'def' → logprob: -1.5565531253814697
    3. 'visited' → logprob: -1.8065531253814697
    4. 'queue' → logprob: -2.0565531253814697
    5. '#' → logprob: -2.8065531253814697
    6. '   ' → logprob: -3.4315531253814697
    7. 'stack' → logprob: -3.5565531253814697
    8. 'pass' → logprob: -3.9315531253814697
    9. 'import' → logprob: -4.431552886962891
    10. 'read' → logprob: -4.431552886962891

Token 833: ' next' (ID: 2613)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_queue' → logprob: -1.6730680465698242
    2. ' =' → logprob: -1.9230680465698242
    3. '_pos' → logprob: -2.048068046569824
    4. '_stack' → logprob: -2.173068046569824
    5. '_index' → logprob: -2.298068046569824
    6. '_next' → logprob: -2.673068046569824
    7. '_idx' → logprob: -2.923068046569824
    8. 'i' → logprob: -3.798068046569824
    9. 'from' → logprob: -3.923068046569824
    10. 'next' → logprob: -4.048068046569824

Token 834: ' letter' (ID: 10263)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_token' → logprob: -1.0754436254501343
    2. '_' → logprob: -1.4504436254501343
    3. '(' → logprob: -2.200443744659424
    4. '()' → logprob: -2.450443744659424
    5. '<|end|>' → logprob: -2.825443744659424
    6. '_index' → logprob: -3.825443744659424
    7. ')' → logprob: -3.825443744659424
    8. 'token' → logprob: -3.825443744659424
    9. '<|end|>' → logprob: -4.325443744659424
    10. ' ' → logprob: -4.950443744659424

Token 835: ' in' (ID: 306)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3181043863296509
    2. '   ' → logprob: -2.0681042671203613
    3. '       ' → logprob: -2.3181042671203613
    4. 'if' → logprob: -3.9431042671203613
    5. ' while' → logprob: -4.193104267120361
    6. 'def' → logprob: -4.943104267120361
    7. 'next' → logprob: -6.693104267120361
    8. ' if' → logprob: -6.943104267120361
    9. 'read' → logprob: -7.193104267120361
    10. 'return' → logprob: -7.693104267120361

Token 836: ' linear' (ID: 23876)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.21527917683124542
    2. 'linear' → logprob: -1.840279221534729
    3. 'normal' → logprob: -3.9652791023254395
    4. 'reading' → logprob: -5.7152791023254395
    5. 'i' → logprob: -5.8402791023254395
    6. 'index' → logprob: -6.0902791023254395
    7. 'in' → logprob: -6.2152791023254395
    8. 'natural' → logprob: -6.7152791023254395
    9. ' order' → logprob: -7.3402791023254395
    10. 'line' → logprob: -7.3402791023254395

Token 837: ' order' (ID: 2569)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7907214760780334
    2. '   ' → logprob: -1.1657214164733887
    3. '       ' → logprob: -2.5407214164733887
    4. ' =' → logprob: -2.6657214164733887
    5. 'while' → logprob: -4.290721416473389
    6. 'queue' → logprob: -4.290721416473389
    7. '_queue' → logprob: -5.165721416473389
    8. 'visited' → logprob: -5.290721416473389
    9. 'next' → logprob: -5.415721416473389
    10. 'stack' → logprob: -5.415721416473389

Token 838: ' default' (ID: 2787)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27697622776031494
    2. 'while' → logprob: -2.0269761085510254
    3. '   ' → logprob: -2.7769761085510254
    4. 'def' → logprob: -4.151976108551025
    5. 'stack' → logprob: -4.401976108551025
    6. 'queue' → logprob: -4.776976108551025
    7. 'next' → logprob: -5.526976108551025
    8. 'if' → logprob: -6.276976108551025
    9. ' while' → logprob: -6.776976108551025
    10. 'visited' → logprob: -6.776976108551025

Token 839: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6089758276939392
    2. '       ' → logprob: -1.858975887298584
    3. 'def' → logprob: -1.983975887298584
    4. ' =' → logprob: -3.358975887298584
    5. 'while' → logprob: -3.358975887298584
    6. '
' → logprob: -3.483975887298584
    7. 'i' → logprob: -4.983975887298584
    8. ' while' → logprob: -4.983975887298584
    9. ':' → logprob: -5.108975887298584
    10. '    
' → logprob: -5.483975887298584

Token 840: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.361912727355957
    2. '       ' → logprob: -1.486912727355957
    3. 'def' → logprob: -1.486912727355957
    4. 'while' → logprob: -1.486912727355957
    5. '
' → logprob: -4.111912727355957
    6. 'next' → logprob: -4.236912727355957
    7. 'visited' → logprob: -4.486912727355957
    8. ' while' → logprob: -5.111912727355957
    9. 'if' → logprob: -5.361912727355957
    10. ' def' → logprob: -6.236912727355957

Token 841: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4002160131931305
    2. '       ' → logprob: -1.275215983390808
    3. 'while' → logprob: -5.025216102600098
    4. ' while' → logprob: -5.400216102600098
    5. '    
' → logprob: -5.650216102600098
    6. 'def' → logprob: -5.650216102600098
    7. '	queue' → logprob: -5.650216102600098
    8. '	next' → logprob: -5.775216102600098
    9. '<|end|>' → logprob: -5.775216102600098
    10. ' next' → logprob: -5.900216102600098

Token 842: ' Multiple' (ID: 39109)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7709237933158875
    2. '   ' → logprob: -1.0209238529205322
    3. 'while' → logprob: -2.6459238529205322
    4. ' while' → logprob: -2.7709238529205322
    5. 'def' → logprob: -4.645923614501953
    6. '
' → logprob: -5.145923614501953
    7. ' 
' → logprob: -5.395923614501953
    8. ' next' → logprob: -5.520923614501953
    9. 'next' → logprob: -5.645923614501953
    10. '```' → logprob: -5.770923614501953

Token 843: ' rules' (ID: 9607)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0529848337173462
    2. '_' → logprob: -2.4279847145080566
    3. '_token' → logprob: -2.5529847145080566
    4. '_tokens' → logprob: -2.5529847145080566
    5. '_queue' → logprob: -2.8029847145080566
    6. 'token' → logprob: -2.8029847145080566
    7. 'steps' → logprob: -3.3029847145080566
    8. '_steps' → logprob: -4.052984714508057
    9. '_tabs' → logprob: -4.302984714508057
    10. 'if' → logprob: -4.427984714508057

Token 844: ' applicable' (ID: 12781)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.051614761352539
    2. ' =' → logprob: -1.051614761352539
    3. '   ' → logprob: -2.176614761352539
    4. 'def' → logprob: -2.551614761352539
    5. '
' → logprob: -3.551614761352539
    6. ':
' → logprob: -4.051614761352539
    7. 'while' → logprob: -4.676614761352539
    8. ' ' → logprob: -5.176614761352539
    9. ' while' → logprob: -5.301614761352539
    10. '       ' → logprob: -5.301614761352539

Token 845: ':' (ID: 25)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.46172142028808594
    2. 'next' → logprob: -1.461721420288086
    3. '   ' → logprob: -2.711721420288086
    4. 'def' → logprob: -3.336721420288086
    5. 'visited' → logprob: -4.211721420288086
    6. '       ' → logprob: -4.586721420288086
    7. 'current' → logprob: -5.461721420288086
    8. 'if' → logprob: -6.586721420288086
    9. 'stack' → logprob: -6.711721420288086
    10. 'cur' → logprob: -7.211721420288086

Token 846: ' apply' (ID: 6096)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.594022274017334
    2. ' ' → logprob: -1.969022274017334
    3. '       ' → logprob: -2.969022274017334
    4. ' if' → logprob: -2.969022274017334
    5. ' #' → logprob: -3.094022274017334
    6. ' next' → logprob: -3.219022274017334
    7. '#' → logprob: -3.219022274017334
    8. 'queue' → logprob: -3.219022274017334
    9. ' queue' → logprob: -3.344022274017334
    10. ' while' → logprob: -3.344022274017334

Token 847: ' latter' (ID: 28236)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47470009326934814
    2. ' i' → logprob: -1.8497000932693481
    3. ' =' → logprob: -2.7246999740600586
    4. 'i' → logprob: -3.9746999740600586
    5. 'def' → logprob: -4.099699974060059
    6. ')' → logprob: -4.224699974060059
    7. '_' → logprob: -4.224699974060059
    8. '=' → logprob: -4.599699974060059
    9. '(' → logprob: -4.724699974060059
    10. '  ' → logprob: -4.724699974060059

Token 848: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1859558820724487
    2. ' =' → logprob: -1.3109558820724487
    3. '   ' → logprob: -2.8109560012817383
    4. '\n' → logprob: -2.8109560012817383
    5. '=' → logprob: -3.0609560012817383
    6. '
' → logprob: -3.0609560012817383
    7. ')' → logprob: -3.1859560012817383
    8. 'def' → logprob: -3.1859560012817383
    9. '\' → logprob: -4.060956001281738
    10. ':
' → logprob: -4.185956001281738

Token 849: ' the' (ID: 290)
  Prédit: 'priority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'priority' → logprob: -0.38436388969421387
    2. 'order' → logprob: -1.2593638896942139
    3. 'reverse' → logprob: -3.634363889694214
    4. 'preced' → logprob: -5.134364128112793
    5. 'the' → logprob: -6.759364128112793
    6. ' priority' → logprob: -7.384364128112793
    7. 'sequence' → logprob: -8.009364128112793
    8. 'code' → logprob: -8.384364128112793
    9. 'prior' → logprob: -8.759364128112793
    10. 'pre' → logprob: -9.259364128112793

Token 850: ' list' (ID: 1562)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.8052634000778198
    2. 'code' → logprob: -1.3052634000778198
    3. 'queue' → logprob: -2.1802635192871094
    4. 'same' → logprob: -2.9302635192871094
    5. 'next' → logprob: -3.9302635192871094
    6. 'preced' → logprob: -4.180263519287109
    7. 'if' → logprob: -4.430263519287109
    8. 'else' → logprob: -4.680263519287109
    9. 'priority' → logprob: -4.805263519287109
    10. 'list' → logprob: -4.930263519287109

Token 851: ' first' (ID: 1577)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2923434376716614
    2. '   ' → logprob: -2.7923433780670166
    3. ' =' → logprob: -3.1673433780670166
    4. ' ' → logprob: -3.1673433780670166
    5. 'def' → logprob: -3.7923433780670166
    6. ' 
' → logprob: -4.042343616485596
    7. '
' → logprob: -4.667343616485596
    8. ':
' → logprob: -4.667343616485596
    9. '       ' → logprob: -4.917343616485596
    10. ' :' → logprob: -5.042343616485596

Token 852: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.793414294719696
    2. '       ' → logprob: -1.1684143543243408
    3. ':' → logprob: -2.668414354324341
    4. '
' → logprob: -3.043414354324341
    5. 'def' → logprob: -3.418414354324341
    6. ' =' → logprob: -3.918414354324341
    7. '        
' → logprob: -4.543414115905762
    8. '    
' → logprob: -4.793414115905762
    9. ':
' → logprob: -4.918414115905762
    10. ' 
' → logprob: -4.918414115905762

Token 853: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8688932061195374
    2. 'while' → logprob: -1.2438931465148926
    3. 'def' → logprob: -2.3688931465148926
    4. '       ' → logprob: -3.2438931465148926
    5. 'i' → logprob: -3.2438931465148926
    6. 'next' → logprob: -3.4938931465148926
    7. '
' → logprob: -3.8688931465148926
    8. ' while' → logprob: -3.9938931465148926
    9. '\t' → logprob: -4.493893146514893
    10. '```' → logprob: -4.993893146514893

Token 854: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7487611174583435
    2. '   ' → logprob: -1.2487611770629883
    3. 'def' → logprob: -2.6237611770629883
    4. 'queue' → logprob: -3.1237611770629883
    5. ' queue' → logprob: -3.4987611770629883
    6. 'next' → logprob: -3.7487611770629883
    7. '
' → logprob: -4.248761177062988
    8. 'while' → logprob: -4.373761177062988
    9. 'stack' → logprob: -4.748761177062988
    10. ' next' → logprob: -4.873761177062988

Token 855: ' So' (ID: 2632)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2461625337600708
    2. '   ' → logprob: -2.2461624145507812
    3. 'next' → logprob: -2.8711624145507812
    4. 'def' → logprob: -3.6211624145507812
    5. '       ' → logprob: -4.496162414550781
    6. 'i' → logprob: -5.246162414550781
    7. ' while' → logprob: -5.371162414550781
    8. 'current' → logprob: -6.246162414550781
    9. 'n' → logprob: -6.746162414550781
    10. 'pos' → logprob: -7.246162414550781

Token 856: ' rule' (ID: 10652)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3805466890335083
    2. 'queue' → logprob: -1.5055466890335083
    3. 'from' → logprob: -2.0055465698242188
    4. 'def' → logprob: -2.2555465698242188
    5. 'next' → logprob: -2.3805465698242188
    6. 'stack' → logprob: -2.5055465698242188
    7. 'import' → logprob: -3.2555465698242188
    8. ' queue' → logprob: -4.255546569824219
    9. '       ' → logprob: -4.505546569824219
    10. 'q' → logprob: -4.630546569824219

Token 857: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33894646167755127
    2. '5' → logprob: -2.3389463424682617
    3. ' #' → logprob: -2.7139463424682617
    4. '6' → logprob: -2.9639463424682617
    5. '   ' → logprob: -3.9639463424682617
    6. '       ' → logprob: -3.9639463424682617
    7. '4' → logprob: -4.213946342468262
    8. ' =' → logprob: -5.588946342468262
    9. '#' → logprob: -5.588946342468262
    10. '  ' → logprob: -5.963946342468262

Token 858: '4' (ID: 19)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.25826168060302734
    2. ' ' → logprob: -2.1332616806030273
    3. '4' → logprob: -2.7582616806030273
    4. '6' → logprob: -3.3832616806030273
    5. '   ' → logprob: -5.633261680603027
    6. '#' → logprob: -6.133261680603027
    7. '       ' → logprob: -6.383261680603027
    8. ' #' → logprob: -6.758261680603027
    9. '  ' → logprob: -7.508261680603027
    10. '1' → logprob: -7.508261680603027

Token 859: ' first' (ID: 1577)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6071543097496033
    2. ' and' → logprob: -1.732154369354248
    3. '<|end|>' → logprob: -1.982154369354248
    4. 'and' → logprob: -3.607154369354248
    5. '   ' → logprob: -3.982154369354248
    6. ' is' → logprob: -4.107154369354248
    7. ',' → logprob: -4.232154369354248
    8. 'def' → logprob: -4.482154369354248
    9. '<|end|>' → logprob: -4.732154369354248
    10. ')' → logprob: -5.107154369354248

Token 860: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2380242496728897
    2. '   ' → logprob: -2.1130242347717285
    3. 'def' → logprob: -3.1130242347717285
    4. '       ' → logprob: -3.9880242347717285
    5. '    
' → logprob: -5.4880242347717285
    6. ':' → logprob: -5.4880242347717285
    7. 'while' → logprob: -5.6130242347717285
    8. ':
' → logprob: -5.8630242347717285
    9. ' =' → logprob: -5.9880242347717285
    10. ' while' → logprob: -6.6130242347717285

Token 861: ' then' (ID: 1815)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3032406568527222
    2. 'def' → logprob: -1.3032406568527222
    3. 'if' → logprob: -1.9282406568527222
    4. '   ' → logprob: -2.1782407760620117
    5. 'next' → logprob: -2.5532407760620117
    6. 'queue' → logprob: -3.0532407760620117
    7. 'while' → logprob: -3.6782407760620117
    8. 'pos' → logprob: -4.553240776062012
    9. ' if' → logprob: -4.678240776062012
    10. 'stack' → logprob: -5.553240776062012

Token 862: ' ' (ID: 220)
  Prédit: 'rule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rule' → logprob: -0.017950324341654778
    2. ' rule' → logprob: -4.642950534820557
    3. '5' → logprob: -5.017950534820557
    4. '#' → logprob: -7.017950534820557
    5. 'def' → logprob: -7.892950534820557
    6. ' ' → logprob: -9.267950057983398
    7. '       ' → logprob: -9.767950057983398
    8. '_rule' → logprob: -10.267950057983398
    9. '   ' → logprob: -10.892950057983398
    10. '(rule' → logprob: -11.017950057983398

Token 863: '3' (ID: 18)
  Prédit: 'rule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rule' → logprob: -0.012059241533279419
    2. 'def' → logprob: -5.262059211730957
    3. '#' → logprob: -5.887059211730957
    4. '5' → logprob: -6.262059211730957
    5. '4' → logprob: -6.637059211730957
    6. '3' → logprob: -7.887059211730957
    7. ' rule' → logprob: -9.137059211730957
    8. 'lambda' → logprob: -9.262059211730957
    9. '       ' → logprob: -9.512059211730957
    10. 'if' → logprob: -9.887059211730957

Token 864: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0652316808700562
    2. 'def' → logprob: -1.1902316808700562
    3. '       ' → logprob: -1.4402316808700562
    4. '
' → logprob: -2.3152318000793457
    5. 'next' → logprob: -5.690231800079346
    6. 'while' → logprob: -5.940231800079346
    7. 'if' → logprob: -6.315231800079346
    8. ' def' → logprob: -6.565231800079346
    9. '           ' → logprob: -7.315231800079346
    10. '```' → logprob: -7.440231800079346

Token 865: '2' (ID: 17)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09535307437181473
    2. '<|end|>' → logprob: -3.720353126525879
    3. '   ' → logprob: -4.220353126525879
    4. 'def' → logprob: -4.345353126525879
    5. ' if' → logprob: -4.845353126525879
    6. '#' → logprob: -5.595353126525879
    7. '<|end|>' → logprob: -5.720353126525879
    8. '        ' → logprob: -5.845353126525879
    9. '    ' → logprob: -5.970353126525879
    10. '	' → logprob: -5.970353126525879

Token 866: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17463836073875427
    2. '       ' → logprob: -3.174638271331787
    3. '   ' → logprob: -3.424638271331787
    4. 'def' → logprob: -3.799638271331787
    5. ':' → logprob: -3.924638271331787
    6. ' =' → logprob: -4.299638271331787
    7. '    
' → logprob: -4.674638271331787
    8. '        
' → logprob: -5.674638271331787
    9. ' 
' → logprob: -6.049638271331787
    10. ':
' → logprob: -6.549638271331787

Token 867: '1' (ID: 16)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5114996433258057
    2. '5' → logprob: -1.3864996433258057
    3. '4' → logprob: -3.5114996433258057
    4. '   ' → logprob: -3.7614996433258057
    5. '<|end|>' → logprob: -4.011499404907227
    6. '#' → logprob: -4.136499404907227
    7. 'if' → logprob: -4.511499404907227
    8. 'while' → logprob: -4.886499404907227
    9. 'def' → logprob: -5.011499404907227
    10. ' ' → logprob: -5.136499404907227

Token 868: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2701704502105713
    2. 'def' → logprob: -1.8951704502105713
    3. 'next' → logprob: -3.5201704502105713
    4. '   ' → logprob: -3.6451704502105713
    5. '
' → logprob: -4.270170211791992
    6. 'queue' → logprob: -4.770170211791992
    7. 'import' → logprob: -6.145170211791992
    8. 'while' → logprob: -6.645170211791992
    9. ' next' → logprob: -6.770170211791992
    10. 'from' → logprob: -6.895170211791992

Token 869: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5921359062194824
    2. '   ' → logprob: -1.4671359062194824
    3. '
' → logprob: -2.2171359062194824
    4. '    
' → logprob: -3.5921359062194824
    5. ' 
' → logprob: -3.7171359062194824
    6. '        
' → logprob: -4.342135906219482
    7. '	' → logprob: -4.717135906219482
    8. '<|end|>' → logprob: -4.842135906219482
    9. '\t' → logprob: -5.342135906219482
    10. ' next' → logprob: -6.217135906219482

Token 870: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08129217475652695
    2. '   ' → logprob: -3.456292152404785
    3. 'def' → logprob: -3.706292152404785
    4. 'next' → logprob: -4.956292152404785
    5. 'queue' → logprob: -5.331292152404785
    6. 'stack' → logprob: -5.956292152404785
    7. 'while' → logprob: -6.081292152404785
    8. ' next' → logprob: -7.456292152404785
    9. 'n' → logprob: -7.581292152404785
    10. 'q' → logprob: -7.706292152404785

Token 871: ' We'll' (ID: 46830)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.3559508323669434
    2. 'stack' → logprob: -1.7309508323669434
    3. 'visited' → logprob: -1.7309508323669434
    4. '   ' → logprob: -1.9809508323669434
    5. 'def' → logprob: -2.2309508323669434
    6. 'queue' → logprob: -3.2309508323669434
    7. 'while' → logprob: -3.2309508323669434
    8. '       ' → logprob: -3.3559508323669434
    9. 'current' → logprob: -4.605950832366943
    10. 'read' → logprob: -4.855950832366943

Token 872: ' proceed' (ID: 18988)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.06532766669988632
    2. 'import' → logprob: -3.5653276443481445
    3. 'def' → logprob: -4.0653276443481445
    4. 'visited' → logprob: -4.8153276443481445
    5. '   ' → logprob: -5.6903276443481445
    6. 'queue' → logprob: -6.0653276443481445
    7. ' from' → logprob: -6.4403276443481445
    8. 'read' → logprob: -7.3153276443481445
    9. '       ' → logprob: -7.4403276443481445
    10. 'stack' → logprob: -7.6903276443481445

Token 873: ' step' (ID: 5983)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9778528809547424
    2. '       ' → logprob: -1.1028528213500977
    3. '<|end|>' → logprob: -2.6028528213500977
    4. 'import' → logprob: -3.1028528213500977
    5. '<|end|>' → logprob: -3.3528528213500977
    6. '   ' → logprob: -3.7278528213500977
    7. 'while' → logprob: -3.7278528213500977
    8. 'from' → logprob: -3.8528528213500977
    9. '        
' → logprob: -4.852852821350098
    10. ' =' → logprob: -4.977852821350098

Token 874: 'wise' (ID: 7480)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2940205335617065
    2. 'wise' → logprob: -1.4190205335617065
    3. 'by' → logprob: -1.6690205335617065
    4. '=' → logprob: -2.044020652770996
    5. '   ' → logprob: -2.544020652770996
    6. ' by' → logprob: -3.044020652770996
    7. 'def' → logprob: -4.169020652770996
    8. '           ' → logprob: -4.919020652770996
    9. ' =' → logprob: -5.169020652770996
    10. '-by' → logprob: -5.794020652770996

Token 875: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 876: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08128096908330917
    2. '   ' → logprob: -3.0812809467315674
    3. 'def' → logprob: -4.0812811851501465
    4. 'next' → logprob: -5.7062811851501465
    5. ' next' → logprob: -6.0812811851501465
    6. 'queue' → logprob: -6.2062811851501465
    7. ' queue' → logprob: -6.9562811851501465
    8. '
' → logprob: -6.9562811851501465
    9. 'import' → logprob: -7.2062811851501465
    10. ' while' → logprob: -7.2062811851501465

Token 877: ' current' (ID: 2208)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.768166184425354
    2. '   ' → logprob: -1.393166184425354
    3. 'def' → logprob: -1.768166184425354
    4. '       ' → logprob: -2.8931660652160645
    5. 'while' → logprob: -4.2681660652160645
    6. 'visited' → logprob: -4.3931660652160645
    7. 'stack' → logprob: -4.7681660652160645
    8. 'from' → logprob: -4.7681660652160645
    9. 'current' (adapté à ' current') → logprob: -5.0181660652160645
    10. ' next' → logprob: -5.7681660652160645

Token 878: ' =' (ID: 314)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_token' → logprob: -1.243743658065796
    2. ' =' → logprob: -1.618743658065796
    3. '_pos' → logprob: -1.743743658065796
    4. '_index' → logprob: -1.993743658065796
    5. '_idx' → logprob: -2.868743658065796
    6. '_queue' → logprob: -2.993743658065796
    7. '_' → logprob: -3.118743658065796
    8. '_letter' → logprob: -3.868743658065796
    9. '_stack' → logprob: -4.368743896484375
    10. '=' → logprob: -5.618743896484375

Token 879: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03769037500023842
    2. '-' → logprob: -3.4126904010772705
    3. ' ' → logprob: -5.912690162658691
    4. 'i' → logprob: -7.537690162658691
    5. ' -' → logprob: -7.787690162658691
    6. 'None' → logprob: -8.037690162658691
    7. ' i' → logprob: -10.912690162658691
    8. ' None' → logprob: -10.912690162658691
    9. '[]' → logprob: -11.912690162658691
    10. '   ' → logprob: -12.412690162658691

Token 880: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24714508652687073
    2. '<|end|>' → logprob: -1.6221450567245483
    3. '<|end|>' → logprob: -4.622145175933838
    4. ' 
' → logprob: -6.122145175933838
    5. 'def' → logprob: -6.372145175933838
    6. 'while' → logprob: -6.622145175933838
    7. ',' → logprob: -7.247145175933838
    8. '       ' → logprob: -7.372145175933838
    9. '#' → logprob: -7.372145175933838
    10. '  
' → logprob: -7.372145175933838

Token 881: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 882: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6213725805282593
    2. '   ' → logprob: -1.4963725805282593
    3. 'def' → logprob: -2.621372699737549
    4. ' while' → logprob: -3.121372699737549
    5. 'current' → logprob: -3.371372699737549
    6. 'queue' → logprob: -3.621372699737549
    7. '       ' → logprob: -4.371372699737549
    8. 'stack' → logprob: -4.496372699737549
    9. '
' → logprob: -4.621372699737549
    10. 'next' → logprob: -5.496372699737549

Token 883: ' find' (ID: 1646)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7310354709625244
    2. 'def' → logprob: -2.2310354709625244
    3. 'if' → logprob: -2.3560354709625244
    4. '   ' → logprob: -2.4810354709625244
    5. 'current' → logprob: -2.6060354709625244
    6. ' while' → logprob: -2.8560354709625244
    7. 'next' → logprob: -3.6060354709625244
    8. '
' → logprob: -3.7310354709625244
    9. ' if' → logprob: -3.9810354709625244
    10. 'pos' → logprob: -5.106035232543945

Token 884: ' first' (ID: 1577)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6968938708305359
    2. 'current' → logprob: -1.5718939304351807
    3. '<|end|>' → logprob: -2.1968939304351807
    4. ' next' → logprob: -2.6968939304351807
    5. '_next' → logprob: -3.1968939304351807
    6. 'the' → logprob: -3.3218939304351807
    7. ' current' → logprob: -4.571893692016602
    8. ' the' → logprob: -5.196893692016602
    9. 'first' → logprob: -5.321893692016602
    10. 'token' → logprob: -5.571893692016602

Token 885: ' letter' (ID: 10263)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.679643154144287
    2. '
' → logprob: -1.804643154144287
    3. 'if' → logprob: -1.804643154144287
    4. 'while' → logprob: -2.054643154144287
    5. 'next' → logprob: -2.054643154144287
    6. 'current' → logprob: -2.929643154144287
    7. 'token' → logprob: -3.554643154144287
    8. 'idx' → logprob: -3.554643154144287
    9. ' =' → logprob: -4.429643154144287
    10. 'def' → logprob: -4.804643154144287

Token 886: ' that' (ID: 484)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6295719146728516
    2. '=' → logprob: -2.6295719146728516
    3. '
' → logprob: -2.6295719146728516
    4. 'while' → logprob: -2.6295719146728516
    5. 'idx' → logprob: -3.0045719146728516
    6. 'for' → logprob: -3.3795719146728516
    7. 'index' → logprob: -3.5045719146728516
    8. 'if' → logprob: -4.004571914672852
    9. ' for' → logprob: -4.129571914672852
    10. 'def' → logprob: -4.379571914672852

Token 887: ' can' (ID: 665)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.527065634727478
    2. ' not' → logprob: -1.777065634727478
    3. 'current' → logprob: -2.5270657539367676
    4. 'read' → logprob: -2.9020657539367676
    5. ' current' → logprob: -3.0270657539367676
    6. ' is' → logprob: -3.6520657539367676
    7. ' read' → logprob: -4.777065753936768
    8. 'is' → logprob: -5.027065753936768
    9. 's' → logprob: -6.027065753936768
    10. 'while' → logprob: -6.152065753936768

Token 888: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.6589018106460571
    2. 'be' → logprob: -0.9089018106460571
    3. 'not' → logprob: -3.4089016914367676
    4. 'read' → logprob: -3.7839016914367676
    5. '_read' → logprob: -4.783901691436768
    6. ' not' → logprob: -5.033901691436768
    7. '_be' → logprob: -5.033901691436768
    8. 'current' → logprob: -6.783901691436768
    9. ' read' → logprob: -7.533901691436768
    10. ' current' → logprob: -8.658902168273926

Token 889: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.04853615164756775
    2. 'current' → logprob: -3.2985360622406006
    3. ' read' → logprob: -4.67353630065918
    4. ' current' → logprob: -7.04853630065918
    5. 'i' → logprob: -9.42353630065918
    6. 'chosen' → logprob: -10.04853630065918
    7. 'used' → logprob: -10.79853630065918
    8. '0' → logprob: -11.04853630065918
    9. 'selected' → logprob: -11.42353630065918
    10. 'started' → logprob: -11.54853630065918

Token 890: ' (' (ID: 350)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5699210166931152
    2. ' =' → logprob: -1.5699210166931152
    3. '=' → logprob: -2.0699210166931152
    4. '
' → logprob: -2.5699210166931152
    5. 'for' → logprob: -4.694921016693115
    6. ' while' → logprob: -4.819921016693115
    7. '=
' → logprob: -6.694921016693115
    8. '=i' → logprob: -6.944921016693115
    9. 'i' → logprob: -7.444921016693115
    10. ' for' → logprob: -7.569921016693115

Token 891: 'start' (ID: 5236)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.106540560722351
    2. 'while' → logprob: -1.356540560722351
    3. 'i' → logprob: -1.481540560722351
    4. 'current' → logprob: -2.4815406799316406
    5. ')' → logprob: -2.8565406799316406
    6. ' while' → logprob: -3.9815406799316406
    7. ' current' → logprob: -4.606540679931641
    8. ' i' → logprob: -5.731540679931641
    9. 'if' → logprob: -6.106540679931641
    10. '
' → logprob: -6.356540679931641

Token 892: ' at' (ID: 540)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22754999995231628
    2. '=' → logprob: -2.7275500297546387
    3. 'with' → logprob: -3.4775500297546387
    4. 'from' → logprob: -3.6025500297546387
    5. ' =' → logprob: -4.352550029754639
    6. ' with' → logprob: -4.602550029754639
    7. 'token' → logprob: -4.602550029754639
    8. '<|end|>' → logprob: -4.727550029754639
    9. '
' → logprob: -4.852550029754639
    10. ')
' → logprob: -4.977550029754639

Token 893: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003318165196105838
    2. 'i' → logprob: -6.1283183097839355
    3. ' ' → logprob: -7.2533183097839355
    4. 'current' → logprob: -8.628317832946777
    5. ' i' → logprob: -9.253317832946777
    6. ')' → logprob: -9.378317832946777
    7. ' current' → logprob: -10.128317832946777
    8. '```' → logprob: -11.628317832946777
    9. '   ' → logprob: -12.878317832946777
    10. '`' → logprob: -13.003317832946777

Token 894: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011212840909138322
    2. 'i' → logprob: -7.126121520996094
    3. 'current' → logprob: -8.376121520996094
    4. ' ' → logprob: -10.251121520996094
    5. ')' → logprob: -10.751121520996094
    6. '```' → logprob: -11.751121520996094
    7. 'next' → logprob: -12.626121520996094
    8. '-' → logprob: -12.626121520996094
    9. ' current' → logprob: -12.751121520996094
    10. ' i' → logprob: -12.876121520996094

Token 895: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03411863371729851
    2. ')
' → logprob: -4.03411865234375
    3. '
' → logprob: -4.65911865234375
    4. ' if' → logprob: -5.90911865234375
    5. 'if' → logprob: -6.28411865234375
    6. '<|end|>' → logprob: -7.28411865234375
    7. ' )' → logprob: -7.65911865234375
    8. '   ' → logprob: -8.40911865234375
    9. '       ' → logprob: -9.15911865234375
    10. '<|end|>' → logprob: -9.90911865234375

Token 896: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6032069325447083
    2. '
' → logprob: -1.1032068729400635
    3. ' while' → logprob: -2.9782068729400635
    4. '<|end|>' → logprob: -3.6032068729400635
    5. 'if' → logprob: -4.103207111358643
    6. ' if' → logprob: -4.478207111358643
    7. '       ' → logprob: -5.728207111358643
    8. '    
' → logprob: -6.228207111358643
    9. ' 
' → logprob: -6.353207111358643
    10. '<|end|>' → logprob: -6.603207111358643

Token 897: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.017438406124711037
    2. ' while' → logprob: -4.3924384117126465
    3. '
' → logprob: -6.5174384117126465
    4. '       ' → logprob: -6.6424384117126465
    5. 'for' → logprob: -6.7674384117126465
    6. 'current' → logprob: -7.8924384117126465
    7. 'if' → logprob: -8.517437934875488
    8. '   ' → logprob: -9.517437934875488
    9. 'i' → logprob: -9.642437934875488
    10. ' 
' → logprob: -10.017437934875488

Token 898: ' because' (ID: 2236)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0032494855113327503
    2. 'for' → logprob: -6.628249645233154
    3. 'if' → logprob: -7.003249645233154
    4. '       ' → logprob: -7.753249645233154
    5. ' while' → logprob: -8.378249168395996
    6. 'current' → logprob: -8.503249168395996
    7. '
' → logprob: -9.878249168395996
    8. '   ' → logprob: -10.003249168395996
    9. 'i' → logprob: -11.128249168395996
    10. 'def' → logprob: -11.378249168395996

Token 899: ' first' (ID: 1577)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.6177425384521484
    2. 'current' → logprob: -1.1177425384521484
    3. 'read' → logprob: -3.1177425384521484
    4. 'while' → logprob: -3.6177425384521484
    5. ' read' → logprob: -3.7427425384521484
    6. ' not' → logprob: -4.492742538452148
    7. ' while' → logprob: -4.867742538452148
    8. ' i' → logprob: -5.867742538452148
    9. 'not' → logprob: -5.867742538452148
    10. ' True' → logprob: -5.867742538452148

Token 900: ' letter' (ID: 10263)
  Prédit: '_letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_letter' → logprob: -1.1331455707550049
    2. ' =' → logprob: -1.6331455707550049
    3. '_token' → logprob: -1.8831455707550049
    4. 'while' → logprob: -2.758145570755005
    5. '_read' → logprob: -3.008145570755005
    6. 'token' → logprob: -3.133145570755005
    7. '_valid' → logprob: -3.258145570755005
    8. 'letter' → logprob: -3.508145570755005
    9. '=' → logprob: -4.258145332336426
    10. '_candidate' → logprob: -5.008145332336426

Token 901: ' may' (ID: 1340)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 902: ' be' (ID: 413)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.38782182335853577
    2. 'be' → logprob: -1.5128217935562134
    3. ' be' → logprob: -2.512821912765503
    4. ' have' → logprob: -4.137821674346924
    5. 'not' → logprob: -6.137821674346924
    6. ' not' → logprob: -8.137822151184082
    7. 'continue' → logprob: -8.387822151184082
    8. 'start' → logprob: -8.512822151184082
    9. 'also' → logprob: -8.637822151184082
    10. '_have' → logprob: -8.637822151184082

Token 903: ' skipped' (ID: 72521)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.7864523530006409
    2. 'jump' → logprob: -1.786452293395996
    3. ' skipped' → logprob: -2.286452293395996
    4. 'sk' → logprob: -2.286452293395996
    5. ' None' → logprob: -2.536452293395996
    6. 'v' → logprob: -3.661452293395996
    7. 'skip' → logprob: -4.286452293395996
    8. 'a' → logprob: -4.661452293395996
    9. ' jump' → logprob: -5.036452293395996
    10. 'read' → logprob: -5.411452293395996

Token 904: ' (' (ID: 350)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.02938360720872879
    2. '       ' → logprob: -4.529383659362793
    3. ' while' → logprob: -4.654383659362793
    4. '
' → logprob: -4.904383659362793
    5. '   ' → logprob: -7.654383659362793
    6. '	while' → logprob: -8.529383659362793
    7. 'if' → logprob: -8.654383659362793
    8. 'for' → logprob: -9.029383659362793
    9. '        
' → logprob: -9.279383659362793
    10. '    
' → logprob: -10.279383659362793

Token 905: 'number' (ID: 8096)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.2678155899047852
    2. ')' → logprob: -1.7678155899047852
    3. ' if' → logprob: -1.8928155899047852
    4. 'if' → logprob: -2.017815589904785
    5. ' while' → logprob: -2.017815589904785
    6. '0' → logprob: -3.392815589904785
    7. 'i' → logprob: -3.642815589904785
    8. ' )' → logprob: -4.017815589904785
    9. ' i' → logprob: -4.267815589904785
    10. 'current' → logprob: -5.517815589904785

Token 906: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.054933857172727585
    2. ' >=' → logprob: -3.304933786392212
    3. '=' → logprob: -4.804934024810791
    4. ')' → logprob: -5.554934024810791
    5. '   ' → logprob: -6.804934024810791
    6. '==' → logprob: -6.929934024810791
    7. ')>=' → logprob: -7.304934024810791
    8. ']>=' → logprob: -7.804934024810791
    9. '>' → logprob: -8.054933547973633
    10. '[' → logprob: -8.054933547973633

Token 907: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.6656825866666622e-05
    2. ' ' → logprob: -10.62502670288086
    3. ')' → logprob: -13.62502670288086
    4. '```' → logprob: -15.50002670288086
    5. '=' → logprob: -15.75002670288086
    6. '
' → logprob: -16.00002670288086
    7. ''' → logprob: -16.00002670288086
    8. '1' → logprob: -16.06252670288086
    9. '   ' → logprob: -16.37502670288086
    10. '

' → logprob: -17.00002670288086

Token 908: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0537261962890625
    2. 'while' → logprob: -1.5537261962890625
    3. 'if' → logprob: -2.3037261962890625
    4. ' if' → logprob: -2.5537261962890625
    5. ')
' → logprob: -2.5537261962890625
    6. ' or' → logprob: -3.0537261962890625
    7. ' while' → logprob: -3.1787261962890625
    8. '       ' → logprob: -3.5537261962890625
    9. ' and' → logprob: -3.8037261962890625
    10. '
' → logprob: -4.0537261962890625

Token 909: ' v' (ID: 323)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.009933983907103539
    2. ' has' → logprob: -4.634933948516846
    3. '(has' → logprob: -8.884934425354004
    4. 'v' → logprob: -11.134934425354004
    5. 'read' → logprob: -11.509934425354004
    6. 'have' → logprob: -12.759934425354004
    7. 'jump' → logprob: -12.759934425354004
    8. '	has' → logprob: -13.634934425354004
    9. 'skip' → logprob: -13.759934425354004
    10. '(v' → logprob: -13.759934425354004

Token 910: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4568507969379425
    2. ' or' → logprob: -1.4568507671356201
    3. ')
' → logprob: -2.95685076713562
    4. '),' → logprob: -3.20685076713562
    5. ' and' → logprob: -4.331851005554199
    6. '):
' → logprob: -5.581851005554199
    7. 'or' → logprob: -5.831851005554199
    8. '')' → logprob: -6.081851005554199
    9. 'and' → logprob: -6.206851005554199
    10. '):' → logprob: -6.331851005554199

Token 911: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.013031989336013794
    2. '       ' → logprob: -4.638031959533691
    3. ' while' → logprob: -6.763031959533691
    4. '
' → logprob: -7.263031959533691
    5. 'if' → logprob: -7.263031959533691
    6. '   ' → logprob: -8.388031959533691
    7. 'for' → logprob: -8.513031959533691
    8. '        
' → logprob: -9.763031959533691
    9. 'def' → logprob: -10.013031959533691
    10. '```' → logprob: -10.013031959533691

Token 912: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03166535869240761
    2. ' while' → logprob: -4.281665325164795
    3. '       ' → logprob: -4.531665325164795
    4. '   ' → logprob: -5.656665325164795
    5. '
' → logprob: -6.031665325164795
    6. 'for' → logprob: -8.406665802001953
    7. 'def' → logprob: -8.781665802001953
    8. '	while' → logprob: -9.031665802001953
    9. '    
' → logprob: -9.406665802001953
    10. 'next' → logprob: -10.406665802001953

Token 913: ' so' (ID: 813)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0022059278562664986
    2. '       ' → logprob: -7.002205848693848
    3. '
' → logprob: -7.377205848693848
    4. '   ' → logprob: -8.002205848693848
    5. ' while' → logprob: -8.752205848693848
    6. 'for' → logprob: -9.127205848693848
    7. 'def' → logprob: -10.502205848693848
    8. '```' → logprob: -11.377205848693848
    9. 'if' → logprob: -11.502205848693848
    10. '    
' → logprob: -12.377205848693848

Token 914: ' implement' (ID: 6365)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00436662882566452
    2. 'def' → logprob: -5.879366397857666
    3. '   ' → logprob: -7.379366397857666
    4. '       ' → logprob: -8.254366874694824
    5. ' while' → logprob: -8.254366874694824
    6. 'from' → logprob: -8.879366874694824
    7. '
' → logprob: -9.254366874694824
    8. 'for' → logprob: -9.504366874694824
    9. 'queue' → logprob: -10.129366874694824
    10. 'current' → logprob: -10.254366874694824

Token 915: ' loop' (ID: 11453)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2761072516441345
    2. 'def' → logprob: -2.1511073112487793
    3. '
' → logprob: -2.6511073112487793
    4. ' while' → logprob: -3.2761073112487793
    5. '   ' → logprob: -5.776107311248779
    6. '```' → logprob: -5.901107311248779
    7. ' def' → logprob: -6.151107311248779
    8. 'for' → logprob: -6.276107311248779
    9. 'next' → logprob: -6.526107311248779
    10. 'queue' → logprob: -6.651107311248779

Token 916: ' until' (ID: 4609)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.31749197840690613
    2. '       ' → logprob: -1.9424920082092285
    3. ' while' → logprob: -2.1924920082092285
    4. '   ' → logprob: -4.6924920082092285
    5. '<|end|>' → logprob: -5.6924920082092285
    6. '	while' → logprob: -5.9424920082092285
    7. '
' → logprob: -7.8174920082092285
    8. '<|end|>' → logprob: -8.31749153137207
    9. 'def' → logprob: -8.94249153137207
    10. '        
' → logprob: -9.31749153137207

Token 917: ' find' (ID: 1646)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.018318621441721916
    2. ' current' → logprob: -4.6433186531066895
    3. 'False' → logprob: -5.1433186531066895
    4. 'True' → logprob: -6.0183186531066895
    5. ' True' → logprob: -9.518318176269531
    6. 'i' → logprob: -9.893318176269531
    7. ' False' → logprob: -9.893318176269531
    8. '   ' → logprob: -9.893318176269531
    9. 'found' → logprob: -11.518318176269531
    10. '(current' → logprob: -12.768318176269531

Token 918: ' first' (ID: 1577)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.8164347410202026
    2. 'current' → logprob: -1.6914347410202026
    3. ' i' → logprob: -2.691434860229492
    4. 'while' → logprob: -2.691434860229492
    5. ' while' → logprob: -2.941434860229492
    6. ' True' → logprob: -3.066434860229492
    7. 'i' → logprob: -3.316434860229492
    8. 'True' → logprob: -3.441434860229492
    9. '   ' → logprob: -3.816434860229492
    10. ' next' → logprob: -4.316434860229492

Token 919: ' readable' (ID: 63870)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8599888682365417
    2. ' while' → logprob: -1.6099889278411865
    3. '
' → logprob: -2.1099889278411865
    4. 'i' → logprob: -2.8599889278411865
    5. ' i' → logprob: -3.4849889278411865
    6. '_index' → logprob: -3.7349889278411865
    7. 'current' → logprob: -3.9849889278411865
    8. '_letter' → logprob: -4.359988689422607
    9. '_idx' → logprob: -4.609988689422607
    10. 'index' → logprob: -4.609988689422607

Token 920: ' letter' (ID: 10263)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7988147139549255
    2. ' while' → logprob: -1.0488147735595703
    3. '
' → logprob: -1.6738147735595703
    4. ' 
' → logprob: -5.54881477355957
    5. '   ' → logprob: -6.29881477355957
    6. ':
' → logprob: -6.42381477355957
    7. ' for' → logprob: -7.17381477355957
    8. '  
' → logprob: -7.17381477355957
    9. '    
' → logprob: -7.67381477355957
    10. '   
' → logprob: -8.17381477355957

Token 921: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07787376642227173
    2. ' while' → logprob: -3.327873706817627
    3. '       ' → logprob: -3.702873706817627
    4. '
' → logprob: -4.577873706817627
    5. '   ' → logprob: -5.577873706817627
    6. '	while' → logprob: -8.702874183654785
    7. '```' → logprob: -9.702874183654785
    8. '    
' → logprob: -10.702874183654785
    9. 'While' → logprob: -10.952874183654785
    10. '        
' → logprob: -11.202874183654785

Token 922: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7536799907684326
    2. 'while' → logprob: -0.8786799907684326
    3. '       ' → logprob: -2.7536799907684326
    4. ' while' → logprob: -3.1286799907684326
    5. '   ' → logprob: -6.128680229187012
    6. '	while' → logprob: -6.503680229187012
    7. '        
' → logprob: -6.878680229187012
    8. '    
' → logprob: -7.253680229187012
    9. '<|end|>' → logprob: -8.128680229187012
    10. '  
' → logprob: -8.253680229187012

Token 923: ' pos' (ID: 1253)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09978340566158295
    2. '       ' → logprob: -2.599783420562744
    3. ' while' → logprob: -4.224783420562744
    4. '   ' → logprob: -5.224783420562744
    5. '
' → logprob: -8.349782943725586
    6. '	while' → logprob: -8.599782943725586
    7. '```' → logprob: -9.349782943725586
    8. '    
' → logprob: -10.224782943725586
    9. '        
' → logprob: -10.224782943725586
    10. 'While' → logprob: -10.349782943725586

Token 924: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687434792518616
    2. ' =' → logprob: -1.1368743181228638
    3. '=i' → logprob: -13.886874198913574
    4. ' ' → logprob: -14.261874198913574
    5. '=None' → logprob: -14.636874198913574
    6. ',' → logprob: -14.886874198913574
    7. '=int' → logprob: -15.011874198913574
    8. '=current' → logprob: -16.01187515258789
    9. '   ' → logprob: -16.63687515258789
    10. '＝' → logprob: -16.76187515258789

Token 925: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019094774033874273
    2. ' ' → logprob: -6.751909255981445
    3. '-' → logprob: -7.251909255981445
    4. ' -' → logprob: -10.876909255981445
    5. 'i' → logprob: -11.626909255981445
    6. '   ' → logprob: -13.751909255981445
    7. ' i' → logprob: -15.001909255981445
    8. 'None' → logprob: -15.564409255981445
    9. '  ' → logprob: -15.689409255981445
    10. '```' → logprob: -16.564409255981445

Token 926: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006069459952414036
    2. '-' → logprob: -5.131069660186768
    3. 'i' → logprob: -9.63106918334961
    4. ' ' → logprob: -9.75606918334961
    5. ' -' → logprob: -11.50606918334961
    6. 'None' → logprob: -12.38106918334961
    7. '-i' → logprob: -14.25606918334961
    8. 'next' → logprob: -14.50606918334961
    9. '   ' → logprob: -14.69356918334961
    10. '```' → logprob: -15.44356918334961

Token 927: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023311980068683624
    2. 'while' → logprob: -4.523312091827393
    3. ' while' → logprob: -5.398312091827393
    4. '       ' → logprob: -5.648312091827393
    5. '<|end|>' → logprob: -6.273312091827393
    6. '        
' → logprob: -7.648312091827393
    7. ' 
' → logprob: -8.023311614990234
    8. '	while' → logprob: -8.148311614990234
    9. '
' → logprob: -8.398311614990234
    10. '  
' → logprob: -8.523311614990234

Token 928: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7557514905929565
    2. '
' → logprob: -1.3807514905929565
    3. '       ' → logprob: -1.7557514905929565
    4. ' while' → logprob: -2.755751609802246
    5. '```' → logprob: -3.755751609802246
    6. '	while' → logprob: -4.630751609802246
    7. '<|end|>' → logprob: -5.505751609802246
    8. '   ' → logprob: -5.755751609802246
    9. '        
' → logprob: -7.630751609802246
    10. '``' → logprob: -8.130751609802246

Token 929: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.03235794976353645
    2. '       ' → logprob: -4.282358169555664
    3. ' while' → logprob: -4.282358169555664
    4. '	while' → logprob: -5.907358169555664
    5. '
' → logprob: -6.907358169555664
    6. '   ' → logprob: -7.657358169555664
    7. '```' → logprob: -11.407358169555664
    8. '        
' → logprob: -12.282358169555664
    9. 'While' → logprob: -12.282358169555664
    10. '    
' → logprob: -13.032358169555664

Token 930: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.06261879205703735
    2. ' pos' → logprob: -2.8126187324523926
    3. 'True' → logprob: -7.687618732452393
    4. ' True' → logprob: -8.56261920928955
    5. '(pos' → logprob: -14.93761920928955
    6. '	pos' → logprob: -15.06261920928955
    7. ' ' → logprob: -15.68761920928955
    8. 'N' → logprob: -15.68761920928955
    9. 'Pos' → logprob: -16.562618255615234
    10. '   ' → logprob: -16.812618255615234

Token 931: '<N' (ID: 60262)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3726162016391754
    2. '<N' → logprob: -1.622616171836853
    3. ' <' → logprob: -2.2476162910461426
    4. '<len' → logprob: -4.872616291046143
    5. '<n' → logprob: -9.372615814208984
    6. ' ' → logprob: -9.497615814208984
    7. '<size' → logprob: -9.872615814208984
    8. '[' → logprob: -10.122615814208984
    9. '<=' → logprob: -10.622615814208984
    10. '<|end|>' → logprob: -10.747615814208984

Token 932: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08230222761631012
    2. 'and' → logprob: -2.7073023319244385
    3. ':
' → logprob: -4.457302093505859
    4. ':' → logprob: -7.457302093505859
    5. '   ' → logprob: -9.83230209350586
    6. '       ' → logprob: -10.33230209350586
    7. '           ' → logprob: -11.08230209350586
    8. '=' → logprob: -12.33230209350586
    9. '	and' → logprob: -12.45730209350586
    10. '):
' → logprob: -13.20730209350586

Token 933: ' (' (ID: 350)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.17993463575839996
    2. '(has' → logprob: -1.9299346208572388
    3. '(True' → logprob: -4.304934501647949
    4. '(pos' → logprob: -5.429934501647949
    5. '(not' → logprob: -7.804934501647949
    6. '(skip' → logprob: -8.42993450164795
    7. 'read' → logprob: -8.42993450164795
    8. '(False' → logprob: -8.80493450164795
    9. '(v' → logprob: -8.92993450164795
    10. '(' → logprob: -9.05493450164795

Token 934: 'read' (ID: 1293)
  Prédit: '(has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(has' → logprob: -0.45430487394332886
    2. 'has' → logprob: -1.9543049335479736
    3. '(read' → logprob: -1.9543049335479736
    4. '(j' → logprob: -3.3293049335479736
    5. 'read' → logprob: -3.4543049335479736
    6. 'jump' → logprob: -4.9543046951293945
    7. '(v' → logprob: -5.8293046951293945
    8. '((' → logprob: -6.3293046951293945
    9. ' (' → logprob: -6.7043046951293945
    10. '(True' → logprob: -7.9543046951293945

Token 935: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.625
    3. '```' → logprob: -17.375
    4. 'pos' → logprob: -17.5
    5. ' [' → logprob: -17.875
    6. ')[' → logprob: -18.125
    7. '
' → logprob: -18.125
    8. '[position' → logprob: -18.5
    9. '(pos' → logprob: -18.875
    10. '[
' → logprob: -19.0

Token 936: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.672236824873835e-05
    2. 'or' → logprob: -9.625076293945312
    3. ' or' → logprob: -12.500076293945312
    4. ' ]' → logprob: -12.875076293945312
    5. ']==' → logprob: -13.125076293945312
    6. ']
' → logprob: -13.250076293945312
    7. '']' → logprob: -15.500076293945312
    8. '
' → logprob: -16.000076293945312
    9. '```' → logprob: -16.000076293945312
    10. '[' → logprob: -17.125076293945312

Token 937: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.07192093878984451
    2. 'or' → logprob: -2.696920871734619
    3. '==' → logprob: -6.321920871734619
    4. '           ' → logprob: -10.196921348571777
    5. '    ' → logprob: -10.696921348571777
    6. '   ' → logprob: -10.821921348571777
    7. '	or' → logprob: -10.821921348571777
    8. 'True' → logprob: -10.946921348571777
    9. '       ' → logprob: -11.071921348571777
    10. '        ' → logprob: -11.696921348571777

Token 938: ' has' (ID: 853)
  Prédit: '(has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(has' → logprob: -0.18931198120117188
    2. '(j' → logprob: -2.064311981201172
    3. '((' → logprob: -3.439311981201172
    4. 'has' → logprob: -5.064311981201172
    5. '(True' → logprob: -6.064311981201172
    6. ' (' → logprob: -6.189311981201172
    7. 'jump' → logprob: -7.314311981201172
    8. '(v' → logprob: -7.689311981201172
    9. '(pos' → logprob: -7.689311981201172
    10. '(' → logprob: -8.189311981201172

Token 939: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -4.596781946020201e-05
    2. 'v' → logprob: -10.250045776367188
    3. '```' → logprob: -12.750045776367188
    4. '_' → logprob: -13.250045776367188
    5. 'pos' → logprob: -13.500045776367188
    6. '_pos' → logprob: -13.750045776367188
    7. ' _' → logprob: -13.750045776367188
    8. '##_' → logprob: -14.375045776367188
    9. '
' → logprob: -15.250045776367188
    10. '[pos' → logprob: -15.375045776367188

Token 940: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.625
    3. ' [' → logprob: -15.625
    4. '```' → logprob: -17.375
    5. ')[' → logprob: -17.5
    6. '[
' → logprob: -18.625
    7. 'pos' → logprob: -18.75
    8. '[prop' → logprob: -19.0
    9. '\[' → logprob: -19.125
    10. ')' → logprob: -19.375

Token 941: ']' (ID: 60)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.11010134965181351
    2. ']):
' → logprob: -3.3601014614105225
    3. ']' → logprob: -3.7351014614105225
    4. 'or' → logprob: -4.235101222991943
    5. ']):' → logprob: -4.360101222991943
    6. '):
' → logprob: -4.610101222991943
    7. ')' → logprob: -6.360101222991943
    8. '):' → logprob: -6.610101222991943
    9. '[pos' → logprob: -7.360101222991943
    10. ' ]' → logprob: -7.485101222991943

Token 942: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.014974720776081085
    2. 'or' → logprob: -4.514974594116211
    3. '):' → logprob: -6.139974594116211
    4. '):
' → logprob: -6.389974594116211
    5. ' ' → logprob: -11.139974594116211
    6. ' ):' → logprob: -11.264974594116211
    7. '==' → logprob: -11.639974594116211
    8. '):

' → logprob: -11.639974594116211
    9. ' ):
' → logprob: -11.889974594116211
    10. '   ' → logprob: -11.889974594116211

Token 943: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.003308777464553714
    2. 'jump' → logprob: -5.7533087730407715
    3. ' (' → logprob: -9.87830924987793
    4. '((' → logprob: -10.87830924987793
    5. '(' → logprob: -11.12830924987793
    6. 'j' → logprob: -11.62830924987793
    7. '(J' → logprob: -12.00330924987793
    8. '(not' → logprob: -12.12830924987793
    9. '(False' → logprob: -12.50330924987793
    10. '   ' → logprob: -12.50330924987793

Token 944: 'jump' (ID: 79879)
  Prédit: 'jump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.006210085935890675
    2. '(j' → logprob: -5.131209850311279
    3. ' jump' → logprob: -8.256210327148438
    4. 'j' → logprob: -11.256210327148438
    5. 'jum' → logprob: -12.506210327148438
    6. '[j' → logprob: -13.881210327148438
    7. '   ' → logprob: -14.131210327148438
    8. 'jmp' → logprob: -14.131210327148438
    9. '.jump' → logprob: -14.131210327148438
    10. '_jump' → logprob: -15.131210327148438

Token 945: '_marks' (ID: 196622)
  Prédit: '_marks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_marks' → logprob: -0.0002319071936653927
    2. '_' → logprob: -8.750231742858887
    3. 'marks' → logprob: -10.500231742858887
    4. '_mark' → logprob: -10.625231742858887
    5. 'Marks' → logprob: -12.125231742858887
    6. '```' → logprob: -12.875231742858887
    7. '_tokens' → logprob: -13.000231742858887
    8. ')' → logprob: -13.500231742858887
    9. ' marks' → logprob: -13.625231742858887
    10. ')_' → logprob: -13.750231742858887

Token 946: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.0003585840167943388
    2. 'pos' → logprob: -8.125358581542969
    3. ')' → logprob: -11.500358581542969
    4. '!=' → logprob: -11.500358581542969
    5. '(pos' → logprob: -11.750358581542969
    6. 'and' → logprob: -11.750358581542969
    7. '```' → logprob: -11.875358581542969
    8. ' is' → logprob: -12.125358581542969
    9. ' pos' → logprob: -12.750358581542969
    10. ')[' → logprob: -13.125358581542969

Token 947: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6375516653060913
    2. ' is' → logprob: -1.3875516653060913
    3. ']' → logprob: -1.8875516653060913
    4. '[' → logprob: -3.387551784515381
    5. 'and' → logprob: -4.387551784515381
    6. 'is' → logprob: -4.887551784515381
    7. ')[' → logprob: -5.012551784515381
    8. '][' → logprob: -5.262551784515381
    9. ' and' → logprob: -6.762551784515381
    10. ']!=' → logprob: -6.762551784515381

Token 948: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.06399957835674286
    2. 'is' → logprob: -3.063999652862549
    3. 'and' → logprob: -4.438999652862549
    4. ' and' → logprob: -5.938999652862549
    5. ')' → logprob: -7.313999652862549
    6. '[' → logprob: -8.81399917602539
    7. ' ' → logprob: -10.81399917602539
    8. '!=' → logprob: -12.56399917602539
    9. '),' → logprob: -12.81399917602539
    10. ')[' → logprob: -13.06399917602539

Token 949: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.02636799030005932
    2. ' not' → logprob: -3.6513679027557373
    3. 'None' → logprob: -9.651368141174316
    4. 'Not' → logprob: -14.026368141174316
    5. ' None' → logprob: -14.151368141174316
    6. '   ' → logprob: -14.276368141174316
    7. ' ' → logprob: -15.151368141174316
    8. '	not' → logprob: -15.651368141174316
    9. '(not' → logprob: -16.6513671875
    10. '       ' → logprob: -16.6513671875

Token 950: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -7.505351095460355e-05
    2. ' None' → logprob: -9.500075340270996
    3. '(None' → logprob: -16.00007438659668
    4. '=None' → logprob: -18.50007438659668
    5. '_None' → logprob: -19.50007438659668
    6. 'none' → logprob: -19.62507438659668
    7. '   ' → logprob: -21.00007438659668
    8. 'not' → logprob: -21.50007438659668
    9. ',None' → logprob: -22.00007438659668
    10. '       ' → logprob: -22.37507438659668

Token 951: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.3868979513645172
    2. ' and' → logprob: -1.1368979215621948
    3. ')' → logprob: -11.636898040771484
    4. '   ' → logprob: -11.886898040771484
    5. ' ' → logprob: -12.386898040771484
    6. '       ' → logprob: -12.636898040771484
    7. '           ' → logprob: -13.511898040771484
    8. '[' → logprob: -14.761898040771484
    9. '    ' → logprob: -14.886898040771484
    10. '	and' → logprob: -15.136898040771484

Token 952: ' jump' (ID: 13843)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.00016063073417171836
    2. ' jump' → logprob: -8.750160217285156
    3. '   ' → logprob: -13.375160217285156
    4. '(j' → logprob: -15.000160217285156
    5. ' ' → logprob: -16.125160217285156
    6. '.jump' → logprob: -16.250160217285156
    7. '  ' → logprob: -17.250160217285156
    8. '       ' → logprob: -18.125160217285156
    9. 'jum' → logprob: -18.625160217285156
    10. 'jmp' → logprob: -18.750160217285156

Token 953: '_marks' (ID: 196622)
  Prédit: '_marks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_marks' → logprob: -0.00015872348740231246
    2. 'marks' → logprob: -10.125158309936523
    3. '_mark' → logprob: -10.250158309936523
    4. '[' → logprob: -10.750158309936523
    5. 'Marks' → logprob: -10.875158309936523
    6. '[_' → logprob: -11.125158309936523
    7. '[(' → logprob: -11.750158309936523
    8. '_tokens' → logprob: -12.625158309936523
    9. '_' → logprob: -13.125158309936523
    10. 's' → logprob: -13.375158309936523

Token 954: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -2.696889623621246e-06
    2. '(pos' → logprob: -14.12500286102295
    3. 'pos' → logprob: -14.75000286102295
    4. '```' → logprob: -15.12500286102295
    5. '[' → logprob: -15.37500286102295
    6. '[position' → logprob: -15.87500286102295
    7. ')[' → logprob: -16.125001907348633
    8. '[(' → logprob: -16.125001907348633
    9. '
' → logprob: -16.250001907348633
    10. ')' → logprob: -16.250001907348633

Token 955: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7181132435798645
    2. '][' → logprob: -0.7181132435798645
    3. 'and' → logprob: -4.343113422393799
    4. ']' → logprob: -5.343113422393799
    5. ')[' → logprob: -6.093113422393799
    6. ' and' → logprob: -6.843113422393799
    7. '>[' → logprob: -7.593113422393799
    8. ' is' → logprob: -7.843113422393799
    9. ']!=' → logprob: -8.09311294555664
    10. '   ' → logprob: -8.21811294555664

Token 956: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. '   ' → logprob: -12.375011444091797
    3. ' ' → logprob: -13.250011444091797
    4. '[' → logprob: -13.875011444091797
    5. '>=' → logprob: -13.875011444091797
    6. '```' → logprob: -14.125011444091797
    7. '0' → logprob: -14.500011444091797
    8. '>' → logprob: -14.750011444091797
    9. '-' → logprob: -14.875011444091797
    10. ',' → logprob: -15.000011444091797

Token 957: ']>=' (ID: 185954)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.02711590752005577
    2. ')>=' → logprob: -4.027115821838379
    3. ' >=' → logprob: -5.402115821838379
    4. ']>=' → logprob: -6.027115821838379
    5. ')' → logprob: -6.277115821838379
    6. '>' → logprob: -9.152115821838379
    7. '   ' → logprob: -11.652115821838379
    8. '≥' → logprob: -13.027115821838379
    9. '">' → logprob: -13.152115821838379
    10. ')>' → logprob: -13.277115821838379

Token 958: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.869017852295656e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.500006675720215
    4. '       ' → logprob: -17.00000762939453
    5. '```' → logprob: -17.00000762939453
    6. '  ' → logprob: -17.37500762939453
    7. '           ' → logprob: -19.12500762939453
    8. ')' → logprob: -19.50000762939453
    9. '1' → logprob: -19.81250762939453
    10. '    ' → logprob: -20.12500762939453

Token 959: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.5116504430770874
    2. '):
' → logprob: -1.0116504430770874
    3. ')):' → logprob: -3.761650562286377
    4. '):' → logprob: -4.511650562286377
    5. ')' → logprob: -6.636650562286377
    6. '))' → logprob: -7.261650562286377
    7. '   ' → logprob: -8.136650085449219
    8. '       ' → logprob: -9.261650085449219
    9. ' ):
' → logprob: -9.511650085449219
    10. ')):
' → logprob: -9.761650085449219

Token 960: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4808557629585266
    2. '       ' → logprob: -1.6058557033538818
    3. '   ' → logprob: -2.480855703353882
    4. ':' → logprob: -2.980855703353882
    5. ':
' → logprob: -3.730855703353882
    6. '+' → logprob: -5.230855941772461
    7. 'pos' → logprob: -5.230855941772461
    8. '):
' → logprob: -6.230855941772461
    9. '++' → logprob: -6.480855941772461
    10. '
' → logprob: -6.730855941772461

Token 961: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.13172481954097748
    2. '           ' → logprob: -2.3817248344421387
    3. '   ' → logprob: -3.5067248344421387
    4. ' pos' → logprob: -7.256724834442139
    5. '       ' → logprob: -8.75672435760498
    6. '	pos' → logprob: -9.75672435760498
    7. ' ' → logprob: -9.88172435760498
    8. '```' → logprob: -11.00672435760498
    9. '  ' → logprob: -11.38172435760498
    10. ',pos' → logprob: -11.63172435760498

Token 962: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001170460251159966
    2. ' +=' → logprob: -6.751170635223389
    3. ']+=' → logprob: -15.75117015838623
    4. '+' → logprob: -16.626171112060547
    5. '   ' → logprob: -18.376171112060547
    6. '=' → logprob: -18.876171112060547
    7. '+='' → logprob: -19.876171112060547
    8. '+="' → logprob: -20.001171112060547
    9. '+=(' → logprob: -20.126171112060547
    10. '```' → logprob: -20.251171112060547

Token 963: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -20.25
    4. '   ' → logprob: -21.5
    5. '0' → logprob: -22.125
    6. '۱' → logprob: -22.1875
    7. '１' → logprob: -23.0
    8. '१' → logprob: -23.125
    9. '১' → logprob: -23.375
    10. '<|end|>' → logprob: -23.5625

Token 964: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6493538618087769
    2. 'while' → logprob: -1.7743538618087769
    3. 'current' → logprob: -1.7743538618087769
    4. 'if' → logprob: -2.1493539810180664
    5. 'pos' → logprob: -2.2743539810180664
    6. '<|end|>' → logprob: -2.7743539810180664
    7. '
' → logprob: -2.8993539810180664
    8. 'print' → logprob: -3.3993539810180664
    9. '   ' → logprob: -3.6493539810180664
    10. '       ' → logprob: -3.7743539810180664

Token 965: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4027654528617859
    2. 'current' → logprob: -2.1527655124664307
    3. 'print' → logprob: -2.9027655124664307
    4. 'read' → logprob: -3.0277655124664307
    5. 'while' → logprob: -3.4027655124664307
    6. '   ' → logprob: -3.9027655124664307
    7. '
' → logprob: -3.9027655124664307
    8. '       ' → logprob: -4.152765274047852
    9. ' if' → logprob: -4.652765274047852
    10. 'i' → logprob: -5.527765274047852

Token 966: ' if' (ID: 538)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6631907820701599
    2. 'if' (adapté à ' if') → logprob: -0.9131907820701599
    3. 'while' → logprob: -2.5381908416748047
    4. '   ' → logprob: -6.163190841674805
    5. '       ' → logprob: -6.413190841674805
    6. 'read' → logprob: -8.288190841674805
    7. 'def' → logprob: -8.538190841674805
    8. ' if' → logprob: -9.538190841674805
    9. 'next' → logprob: -9.663190841674805
    10. 'import' → logprob: -9.788190841674805

Token 967: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.004085878375917673
    2. ' pos' → logprob: -5.504086017608643
    3. '   ' → logprob: -11.879085540771484
    4. '    ' → logprob: -16.004085540771484
    5. '       ' → logprob: -16.379085540771484
    6. '	pos' → logprob: -16.629085540771484
    7. ' ' → logprob: -17.129085540771484
    8. '  ' → logprob: -17.379085540771484
    9. 'N' → logprob: -17.379085540771484
    10. '0' → logprob: -17.629085540771484

Token 968: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38531532883644104
    2. ' ==' → logprob: -1.5103152990341187
    3. '<N' → logprob: -3.385315418243408
    4. '<' → logprob: -3.510315418243408
    5. '>=' → logprob: -4.010315418243408
    6. ' <' → logprob: -4.760315418243408
    7. ':' → logprob: -5.760315418243408
    8. ' >=' → logprob: -6.260315418243408
    9. '=' → logprob: -7.010315418243408
    10. ')' → logprob: -7.260315418243408

Token 969: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.7697225252486533e-06
    2. '0' → logprob: -12.750003814697266
    3. ' N' → logprob: -14.250003814697266
    4. '   ' → logprob: -15.875003814697266
    5. 'len' → logprob: -16.750003814697266
    6. 'None' → logprob: -17.500003814697266
    7. ' ' → logprob: -17.500003814697266
    8. '	N' → logprob: -17.500003814697266
    9. '       ' → logprob: -18.250003814697266
    10. '
' → logprob: -18.250003814697266

Token 970: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34019261598587036
    2. ':
' → logprob: -1.3401925563812256
    3. ':return' → logprob: -3.7151925563812256
    4. '           ' → logprob: -6.340192794799805
    5. 'return' → logprob: -8.465192794799805
    6. '       ' → logprob: -8.590192794799805
    7. '   ' → logprob: -10.715192794799805
    8. ':
' → logprob: -11.590192794799805
    9. ' return' → logprob: -11.715192794799805
    10. '.' → logprob: -12.840192794799805

Token 971: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11592606455087662
    2. 'return' → logprob: -2.3659260272979736
    3. '   ' → logprob: -4.240926265716553
    4. ' return' → logprob: -7.240926265716553
    5. '           ' → logprob: -7.740926265716553
    6. '	return' → logprob: -10.490925788879395
    7. ':return' → logprob: -11.865925788879395
    8. ' ' → logprob: -12.490925788879395
    9. '{return' → logprob: -12.615925788879395
    10. '```' → logprob: -13.115925788879395

Token 972: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0009555285796523094
    2. ' return' → logprob: -7.875955581665039
    3. 'print' → logprob: -8.000955581665039
    4. 'break' → logprob: -9.375955581665039
    5. '   ' → logprob: -9.750955581665039
    6. '       ' → logprob: -9.875955581665039
    7. 'continue' → logprob: -10.250955581665039
    8. '           ' → logprob: -12.250955581665039
    9. 'pass' → logprob: -12.375955581665039
    10. 'sys' → logprob: -14.500955581665039

Token 973: ' no' (ID: 860)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3229497969150543
    2. 'return' → logprob: -1.322949767112732
    3. '       ' → logprob: -5.1979498863220215
    4. '#' → logprob: -5.8229498863220215
    5. '           ' → logprob: -7.9479498863220215
    6. 'break' → logprob: -8.447949409484863
    7. 'order' → logprob: -8.572949409484863
    8. 'continue' → logprob: -8.947949409484863
    9. '   ' → logprob: -9.072949409484863
    10. ' return' → logprob: -9.822949409484863

Token 974: ' letter' (ID: 10263)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5955941677093506
    2. 'print' → logprob: -1.4705941677093506
    3. ' return' → logprob: -1.8455941677093506
    4. 'def' → logprob: -4.84559440612793
    5. ' print' → logprob: -4.84559440612793
    6. 'more' → logprob: -4.97059440612793
    7. ' more' → logprob: -4.97059440612793
    8. 'break' → logprob: -5.47059440612793
    9. '#' → logprob: -5.59559440612793
    10. 'read' → logprob: -5.72059440612793

Token 975: ' can' (ID: 665)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01613900251686573
    2. '       ' → logprob: -4.266139030456543
    3. ':' → logprob: -7.516139030456543
    4. 'return' → logprob: -8.016139030456543
    5. ':
' → logprob: -8.516139030456543
    6. ' return' → logprob: -9.016139030456543
    7. 'continue' → logprob: -9.016139030456543
    8. '.' → logprob: -9.516139030456543
    9. ',' → logprob: -9.516139030456543
    10. '=' → logprob: -9.891139030456543

Token 976: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.023287402465939522
    2. ' be' → logprob: -3.773287296295166
    3. '_be' → logprob: -10.523287773132324
    4. '	be' → logprob: -12.148287773132324
    5. 'continue' → logprob: -12.398287773132324
    6. 'read' → logprob: -13.023287773132324
    7. '=' → logprob: -13.898287773132324
    8. 'return' → logprob: -14.523287773132324
    9. '-be' → logprob: -15.023287773132324
    10. '   ' → logprob: -15.148287773132324

Token 977: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -2.6895233531831764e-05
    2. ' read' → logprob: -10.62502670288086
    3. 'found' → logprob: -14.37502670288086
    4. '-read' → logprob: -14.50002670288086
    5. '_read' → logprob: -15.00002670288086
    6. '	read' → logprob: -15.75002670288086
    7. 'selected' → logprob: -15.75002670288086
    8. '```' → logprob: -15.87502670288086
    9. 'Read' → logprob: -16.12502670288086
    10. 'processed' → logprob: -16.25002670288086

Token 978: '?' (ID: 30)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004557815380394459
    2. '       ' → logprob: -5.5045576095581055
    3. 'continue' → logprob: -8.379557609558105
    4. ' continue' → logprob: -9.629557609558105
    5. 'return' → logprob: -10.004557609558105
    6. '		' → logprob: -10.129557609558105
    7. '               ' → logprob: -11.379557609558105
    8. '	       ' → logprob: -11.379557609558105
    9. '   ' → logprob: -11.504557609558105
    10. '	' → logprob: -11.629557609558105

Token 979: ' problem' (ID: 4792)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056354373693466187
    2. 'return' → logprob: -3.181354284286499
    3. 'continue' → logprob: -4.556354522705078
    4. '       ' → logprob: -6.056354522705078
    5. ' continue' → logprob: -8.931354522705078
    6. ' return' → logprob: -9.056354522705078
    7. 'print' → logprob: -9.306354522705078
    8. '   ' → logprob: -10.056354522705078
    9. '               ' → logprob: -11.431354522705078
    10. '		' → logprob: -11.806354522705078

Token 980: ' states' (ID: 9407)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08080232888460159
    2. '       ' → logprob: -2.5808024406433105
    3. '<|end|>' → logprob: -6.7058024406433105
    4. '   ' → logprob: -8.705801963806152
    5. 'return' → logprob: -9.080801963806152
    6. ',' → logprob: -9.330801963806152
    7. '<|end|>' → logprob: -10.080801963806152
    8. '#' → logprob: -10.455801963806152
    9. '.' → logprob: -10.580801963806152
    10. ' return' → logprob: -10.705801963806152

Token 981: ' input' (ID: 3422)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3043158948421478
    2. 'return' → logprob: -1.9293159246444702
    3. '       ' → logprob: -2.8043158054351807
    4. ' return' → logprob: -3.1793158054351807
    5. 'continue' → logprob: -4.67931604385376
    6. ' continue' → logprob: -5.42931604385376
    7. '   ' → logprob: -7.42931604385376
    8. 'print' → logprob: -8.179315567016602
    9. 'pass' → logprob: -9.054315567016602
    10. ' pass' → logprob: -9.179315567016602

Token 982: ' well' (ID: 1775)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8814737200737
    2. '           ' → logprob: -1.5064737796783447
    3. '       ' → logprob: -1.7564737796783447
    4. ' continues' → logprob: -4.006473541259766
    5. '[' → logprob: -4.131473541259766
    6. '<|end|>' → logprob: -4.131473541259766
    7. '.' → logprob: -4.256473541259766
    8. '#' → logprob: -4.256473541259766
    9. '=' → logprob: -4.381473541259766
    10. ':' → logprob: -4.506473541259766

Token 983: ' formed' (ID: 20680)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11441957205533981
    2. '
' → logprob: -3.239419460296631
    3. '        
' → logprob: -3.614419460296631
    4. '    
' → logprob: -4.614419460296631
    5. '<|end|>' → logprob: -4.614419460296631
    6. ':' → logprob: -4.989419460296631
    7. '   ' → logprob: -5.364419460296631
    8. '           ' → logprob: -5.989419460296631
    9. '<|end|>' → logprob: -7.239419460296631
    10. ')' → logprob: -7.364419460296631

Token 984: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026756763458251953
    2. '<|end|>' → logprob: -4.276756763458252
    3. '        
' → logprob: -5.276756763458252
    4. '
' → logprob: -6.151756763458252
    5. '   ' → logprob: -7.026756763458252
    6. '<|end|>' → logprob: -7.151756763458252
    7. '    
' → logprob: -7.276756763458252
    8. '#' → logprob: -7.276756763458252
    9. ',' → logprob: -7.526756763458252
    10. '           ' → logprob: -7.901756763458252

Token 985: ' all' (ID: 722)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5388662815093994
    2. 'pos' → logprob: -1.1638662815093994
    3. 'break' → logprob: -3.7888662815093994
    4. 'we' → logprob: -4.03886604309082
    5. 'there' → logprob: -4.28886604309082
    6. 'no' → logprob: -4.41386604309082
    7. '#' → logprob: -5.41386604309082
    8. 'print' → logprob: -5.66386604309082
    9. 'this' → logprob: -5.91386604309082
    10. 'the' → logprob: -6.16386604309082

Token 986: ' letters' (ID: 18151)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 987: ' read' (ID: 1729)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04263234883546829
    2. '           ' → logprob: -4.292632579803467
    3. '   ' → logprob: -5.042632579803467
    4. ':' → logprob: -5.167632579803467
    5. '=' → logprob: -5.417632579803467
    6. '<|end|>' → logprob: -5.917632579803467
    7. '.' → logprob: -6.292632579803467
    8. ',' → logprob: -6.917632579803467
    9. ' =' → logprob: -7.042632579803467
    10. ':
' → logprob: -7.167632579803467

Token 988: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05037631466984749
    2. '
' → logprob: -3.3003764152526855
    3. '   ' → logprob: -5.0503764152526855
    4. ':' → logprob: -6.9253764152526855
    5. '        
' → logprob: -6.9253764152526855
    6. '           ' → logprob: -7.0503764152526855
    7. '    
' → logprob: -7.1753764152526855
    8. ':
' → logprob: -7.4253764152526855
    9. '<|end|>' → logprob: -8.175375938415527
    10. ',' → logprob: -8.425375938415527

Token 989: ' so' (ID: 813)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7148004174232483
    2. 'return' → logprob: -0.9648004174232483
    3. '       ' → logprob: -2.3398003578186035
    4. 'continue' → logprob: -3.8398003578186035
    5. ' return' → logprob: -4.8398003578186035
    6. 'print' → logprob: -6.4648003578186035
    7. ' continue' → logprob: -6.8398003578186035
    8. '   ' → logprob: -7.0898003578186035
    9. 'import' → logprob: -9.214800834655762
    10. '	return' → logprob: -9.714800834655762

Token 990: ' this' (ID: 495)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.029179397970438004
    2. 'continue' → logprob: -3.779179334640503
    3. '       ' → logprob: -5.779179573059082
    4. '           ' → logprob: -6.779179573059082
    5. 'pass' → logprob: -7.404179573059082
    6. 'pos' → logprob: -7.779179573059082
    7. '   ' → logprob: -8.154179573059082
    8. ' return' → logprob: -8.654179573059082
    9. 'break' → logprob: -9.404179573059082
    10. 'print' → logprob: -9.529179573059082

Token 991: ' doesn't' (ID: 8740)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.49271637201309204
    2. 'return' → logprob: -1.4927163124084473
    3. '           ' → logprob: -2.2427163124084473
    4. '       ' → logprob: -3.7427163124084473
    5. '```' → logprob: -4.742716312408447
    6. ' continues' → logprob: -5.242716312408447
    7. '   ' → logprob: -5.367716312408447
    8. '<|end|>' → logprob: -5.742716312408447
    9. 'contin' → logprob: -5.992716312408447
    10. ':return' → logprob: -6.242716312408447

Token 992: ' happen' (ID: 5659)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.20567664504051208
    2. 'return' → logprob: -1.9556766748428345
    3. 'occur' → logprob: -4.205676555633545
    4. 'raise' → logprob: -4.330676555633545
    5. 'break' → logprob: -4.830676555633545
    6. '```' → logprob: -5.955676555633545
    7. ' happen' → logprob: -6.080676555633545
    8. 'pass' → logprob: -7.455676555633545
    9. 'exit' → logprob: -7.830676555633545
    10. ' return' → logprob: -7.955676555633545

Token 993: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4315517544746399
    2. '       ' → logprob: -1.0565516948699951
    3. '<|end|>' → logprob: -7.181551933288574
    4. 'return' → logprob: -7.431551933288574
    5. '   ' → logprob: -7.556551933288574
    6. '
' → logprob: -8.181551933288574
    7. ',' → logprob: -8.931551933288574
    8. ' return' → logprob: -9.181551933288574
    9. '        
' → logprob: -9.181551933288574
    10. 'import' → logprob: -10.056551933288574

Token 994: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056095968931913376
    2. '   ' → logprob: -3.306096076965332
    3. 'while' → logprob: -5.181096076965332
    4. 'current' → logprob: -5.931096076965332
    5. 'def' → logprob: -6.306096076965332
    6. '<|end|>' → logprob: -6.931096076965332
    7. 'next' → logprob: -7.181096076965332
    8. ' while' → logprob: -7.181096076965332
    9. '        
' → logprob: -7.306096076965332
    10. 'read' → logprob: -7.681096076965332

Token 995: ' continue' (ID: 4901)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.028929973021149635
    2. 'pos' → logprob: -4.278930187225342
    3. 'pass' → logprob: -4.903930187225342
    4. ' return' → logprob: -5.528930187225342
    5. '       ' → logprob: -6.278930187225342
    6. '   ' → logprob: -7.153930187225342
    7. ' pos' → logprob: -8.653929710388184
    8. '           ' → logprob: -8.778929710388184
    9. ' pass' → logprob: -9.278929710388184
    10. 'current' → logprob: -9.528929710388184

Token 996: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8358926773071289
    2. 'current' → logprob: -1.585892677307129
    3. '       ' → logprob: -1.710892677307129
    4. 'read' → logprob: -2.210892677307129
    5. '   ' → logprob: -3.210892677307129
    6. 'def' → logprob: -4.710892677307129
    7. ' while' → logprob: -5.335892677307129
    8. '```' → logprob: -5.835892677307129
    9. 'i' → logprob: -5.960892677307129
    10. 'pos' → logprob: -6.335892677307129

Token 997: '       ' (ID: 309)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0877840593457222
    2. 'while' → logprob: -2.7127840518951416
    3. '       ' → logprob: -4.712784290313721
    4. '   ' → logprob: -5.712784290313721
    5. 'read' → logprob: -6.337784290313721
    6. 'pos' → logprob: -6.587784290313721
    7. 'def' → logprob: -7.212784290313721
    8. 'i' → logprob: -7.587784290313721
    9. 'next' → logprob: -7.837784290313721
    10. ' current' → logprob: -8.837783813476562

Token 998: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.4964284896850586
    2. 'while' → logprob: -1.1214284896850586
    3. 'def' → logprob: -3.4964284896850586
    4. '       ' → logprob: -3.6214284896850586
    5. 'read' → logprob: -4.996428489685059
    6. '   ' → logprob: -6.871428489685059
    7. 'import' → logprob: -8.496428489685059
    8. 'from' → logprob: -9.246428489685059
    9. 'stack' → logprob: -9.246428489685059
    10. '```' → logprob: -9.621428489685059

Token 999: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04860395938158035
    2. ' =' → logprob: -3.0486040115356445
    3. '=current' → logprob: -11.423604011535645
    4. ' ' → logprob: -13.048604011535645
    5. ',' → logprob: -14.048604011535645
    6. ')' → logprob: -14.548604011535645
    7. '=index' → logprob: -14.923604011535645
    8. '=None' → logprob: -15.298604011535645
    9. '_pos' → logprob: -15.423604011535645
    10. 'pos' → logprob: -15.548604011535645

Token 1000: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.547789674485102e-05
    2. ' pos' → logprob: -10.250035285949707
    3. '   ' → logprob: -21.750036239624023
    4. '	pos' → logprob: -22.500036239624023
    5. '[pos' → logprob: -23.375036239624023
    6. '_pos' → logprob: -24.125036239624023
    7. '(pos' → logprob: -24.875036239624023
    8. 'Pos' → logprob: -24.875036239624023
    9. 'p' → logprob: -25.500036239624023
    10. '.pos' → logprob: -26.250036239624023

Token 1001: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8044922947883606
    2. '
' → logprob: -1.6794922351837158
    3. '<|end|>' → logprob: -2.179492235183716
    4. ' while' → logprob: -2.679492235183716
    5. '   ' → logprob: -2.929492235183716
    6. '       ' → logprob: -3.679492235183716
    7. '    
' → logprob: -3.679492235183716
    8. ':' → logprob: -4.179492473602295
    9. '	while' → logprob: -4.679492473602295
    10. '```' → logprob: -4.679492473602295

Token 1002: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.13667522370815277
    2. 'read' → logprob: -3.2616751194000244
    3. '   ' → logprob: -3.5116751194000244
    4. ' while' → logprob: -3.6366751194000244
    5. '	while' → logprob: -3.8866751194000244
    6. '       ' → logprob: -5.0116753578186035
    7. '	read' → logprob: -6.3866753578186035
    8. '```' → logprob: -6.3866753578186035
    9. 'print' → logprob: -7.6366753578186035
    10. '
' → logprob: -7.6366753578186035

Token 1003: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.018321549519896507
    2. 'read' → logprob: -4.768321514129639
    3. '   ' → logprob: -5.268321514129639
    4. ' while' → logprob: -5.643321514129639
    5. 'def' → logprob: -7.393321514129639
    6. '       ' → logprob: -8.893321990966797
    7. '	while' → logprob: -9.518321990966797
    8. 'print' → logprob: -10.393321990966797
    9. '```' → logprob: -11.018321990966797
    10. 'stack' → logprob: -11.268321990966797

Token 1004: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2570135295391083
    2. 'True' → logprob: -1.5070135593414307
    3. 'not' → logprob: -5.507013320922852
    4. ' True' → logprob: -7.757013320922852
    5. ' current' → logprob: -7.882013320922852
    6. 'N' → logprob: -9.257013320922852
    7. ' not' → logprob: -9.382013320922852
    8. 'len' → logprob: -11.132013320922852
    9. 'read' → logprob: -12.507013320922852
    10. 'False' → logprob: -13.007013320922852

Token 1005: '!=-' (ID: 146584)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6043517589569092
    2. ' is' → logprob: -1.9793517589569092
    3. '!=' → logprob: -2.354351758956909
    4. '+' → logprob: -2.854351758956909
    5. ' not' → logprob: -2.979351758956909
    6. ':' → logprob: -3.479351758956909
    7. 'not' → logprob: -3.729351758956909
    8. ' <' → logprob: -4.979351997375488
    9. ' ==' → logprob: -5.104351997375488
    10. ' +' → logprob: -5.354351997375488

Token 1006: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '2' → logprob: -18.5
    4. '```' → logprob: -18.5
    5. '0' → logprob: -21.875
    6. '``' → logprob: -22.25
    7. '
' → logprob: -22.5
    8. '3' → logprob: -22.75
    9. '`' → logprob: -22.875
    10. '=' → logprob: -23.125

Token 1007: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22553543746471405
    2. ':
' → logprob: -1.6005353927612305
    3. ' and' → logprob: -9.72553539276123
    4. '   ' → logprob: -11.10053539276123
    5. '       ' → logprob: -11.35053539276123
    6. '):
' → logprob: -11.72553539276123
    7. ',' → logprob: -12.10053539276123
    8. 'and' → logprob: -12.35053539276123
    9. ':

' → logprob: -12.47553539276123
    10. '           ' → logprob: -12.47553539276123

Token 1008: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46100643277168274
    2. 'read' → logprob: -1.2110064029693604
    3. '   ' → logprob: -2.7110064029693604
    4. '	read' → logprob: -6.3360066413879395
    5. 'order' → logprob: -6.9610066413879395
    6. '```' → logprob: -7.0860066413879395
    7. '	   ' → logprob: -7.7110066413879395
    8. ' read' → logprob: -8.086006164550781
    9. '#' → logprob: -8.711006164550781
    10. '           ' → logprob: -8.836006164550781

Token 1009: ' order' (ID: 2569)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0014133312506601214
    2. 'if' → logprob: -6.751413345336914
    3. '       ' → logprob: -8.626413345336914
    4. '           ' → logprob: -10.251413345336914
    5. 'order' (adapté à ' order') → logprob: -10.876413345336914
    6. '#' → logprob: -12.251413345336914
    7. '   ' → logprob: -12.751413345336914
    8. ' read' → logprob: -13.876413345336914
    9. 'print' → logprob: -14.501413345336914
    10. 'write' → logprob: -15.876413345336914

Token 1010: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00043233807082287967
    2. '.' → logprob: -7.75043249130249
    3. '.app' → logprob: -13.500432014465332
    4. '.ap' → logprob: -16.62543296813965
    5. 'append' → logprob: -16.87543296813965
    6. '.Append' → logprob: -17.87543296813965
    7. '[' → logprob: -18.00043296813965
    8. '_append' → logprob: -18.50043296813965
    9. '.pop' → logprob: -18.50043296813965
    10. '.extend' → logprob: -18.62543296813965

Token 1011: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.0005699523026123643
    2. '(' → logprob: -7.500569820404053
    3. 'current' → logprob: -11.000570297241211
    4. '(
' → logprob: -15.375570297241211
    5. '(cur' → logprob: -17.87557029724121
    6. ' current' → logprob: -18.25057029724121
    7. '(curr' → logprob: -18.37557029724121
    8. '((' → logprob: -18.62557029724121
    9. '()' → logprob: -19.00057029724121
    10. '[current' → logprob: -19.25057029724121

Token 1012: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3871316909790039
    2. ')
' → logprob: -1.137131690979004
    3. '           ' → logprob: -8.637131690979004
    4. ')
' → logprob: -10.012131690979004
    5. '+' → logprob: -11.512131690979004
    6. '
' → logprob: -12.387131690979004
    7. ');' → logprob: -12.887131690979004
    8. '               ' → logprob: -12.887131690979004
    9. ' )' → logprob: -13.012131690979004
    10. ' )
' → logprob: -13.137131690979004

Token 1013: '           ' (ID: 352)
  Prédit: '	read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	read' → logprob: -0.5334921479225159
    2. '           ' → logprob: -1.533492088317871
    3. 'read' → logprob: -2.783492088317871
    4. '
' → logprob: -3.158492088317871
    5. ' read' → logprob: -3.283492088317871
    6. '\t' → logprob: -4.033492088317871
    7. '   ' → logprob: -4.283492088317871
    8. '       ' → logprob: -4.658492088317871
    9. '```' → logprob: -5.283492088317871
    10. '		' → logprob: -6.533492088317871

Token 1014: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' (adapté à ' read') → logprob: 0.0
    2. ' read' → logprob: -18.0
    3. '   ' → logprob: -18.75
    4. 'if' → logprob: -18.875
    5. '	read' → logprob: -20.5
    6. '```' → logprob: -20.625
    7. '           ' → logprob: -20.875
    8. '
' → logprob: -21.5
    9. '       ' → logprob: -21.75
    10. 'reads' → logprob: -22.875

Token 1015: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.5928495486150496e-05
    2. '[' → logprob: -11.125016212463379
    3. '[cur' → logprob: -14.750016212463379
    4. '```' → logprob: -14.750016212463379
    5. '[curr' → logprob: -15.375016212463379
    6. '\[' → logprob: -16.250015258789062
    7. 'current' → logprob: -17.625015258789062
    8. '[
' → logprob: -17.750015258789062
    9. '=current' → logprob: -18.000015258789062
    10. ' [' → logprob: -18.500015258789062

Token 1016: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3182823061943054
    2. ']=' → logprob: -1.3182823657989502
    3. '=' → logprob: -5.318282127380371
    4. ' =' → logprob: -9.943282127380371
    5. ' ]' → logprob: -10.443282127380371
    6. '=True' → logprob: -10.568282127380371
    7. ')' → logprob: -13.068282127380371
    8. ')=' → logprob: -13.443282127380371
    9. ']
' → logprob: -16.193283081054688
    10. '=true' → logprob: -16.443283081054688

Token 1017: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -5.512236498361744e-07
    2. ' True' → logprob: -14.500000953674316
    3. '   ' → logprob: -22.5
    4. '(True' → logprob: -22.625
    5. 'true' → logprob: -23.75
    6. '=True' → logprob: -23.75
    7. '1' → logprob: -25.625
    8. '  ' → logprob: -26.5
    9. '           ' → logprob: -26.5
    10. '
' → logprob: -26.625

Token 1018: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1019: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21841174364089966
    2. '```' → logprob: -2.343411684036255
    3. 'if' → logprob: -3.218411684036255
    4. '       ' → logprob: -4.343411922454834
    5. '   ' → logprob: -4.468411922454834
    6. '
' → logprob: -4.718411922454834
    7. '            
' → logprob: -4.968411922454834
    8. '    
' → logprob: -5.718411922454834
    9. '#' → logprob: -5.718411922454834
    10. ' if' → logprob: -6.093411922454834

Token 1020: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5988045930862427
    2. 'prev' → logprob: -0.8488045930862427
    3. '#' (adapté à ' #') → logprob: -3.973804473876953
    4. '           ' → logprob: -6.473804473876953
    5. 'next' → logprob: -6.973804473876953
    6. 'previous' → logprob: -8.223804473876953
    7. '```' → logprob: -8.348804473876953
    8. 'last' → logprob: -8.723804473876953
    9. 'current' → logprob: -9.098804473876953
    10. '       ' → logprob: -9.348804473876953

Token 1021: ' update' (ID: 4027)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.6840373277664185
    2. '           ' → logprob: -1.1840373277664185
    3. 'if' → logprob: -1.9340373277664185
    4. '#' → logprob: -3.684037208557129
    5. 'next' → logprob: -4.309037208557129
    6. 'pos' → logprob: -7.059037208557129
    7. 'jump' → logprob: -7.059037208557129
    8. 'current' → logprob: -7.309037208557129
    9. 'previous' → logprob: -7.309037208557129
    10. '```' → logprob: -7.434037208557129

Token 1022: ' last' (ID: 2174)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009261203929781914
    2. 'last' → logprob: -4.884261131286621
    3. 't' → logprob: -7.384261131286621
    4. 'for' → logprob: -8.384261131286621
    5. 'i' → logprob: -8.509261131286621
    6. '```' → logprob: -8.759261131286621
    7. 'prev' → logprob: -9.009261131286621
    8. 'pos' → logprob: -9.259261131286621
    9. '#' → logprob: -9.509261131286621
    10. 'current' → logprob: -9.634261131286621

Token 1023: '_read' (ID: 14291)
  Prédit: '_read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_read' → logprob: -0.0003706126008182764
    2. '_type' → logprob: -9.500370979309082
    3. '_write' → logprob: -9.750370979309082
    4. '_pos' → logprob: -9.750370979309082
    5. 'read' → logprob: -10.000370979309082
    6. 'pos' → logprob: -10.750370979309082
    7. '_' → logprob: -10.875370979309082
    8. '```' → logprob: -11.000370979309082
    9. '_index' → logprob: -11.875370979309082
    10. 'type' → logprob: -12.125370979309082

Token 1024: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.0005975929088890553
    2. 'type' → logprob: -7.7505974769592285
    3. 'current' → logprob: -9.625597953796387
    4. '_pos' → logprob: -11.000597953796387
    5. '_index' → logprob: -11.000597953796387
    6. 'pos' → logprob: -11.125597953796387
    7. '_letter' → logprob: -11.875597953796387
    8. '[current' → logprob: -12.125597953796387
    9. '_current' → logprob: -12.375597953796387
    10. '_' → logprob: -12.500597953796387

Token 1025: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6568441390991211
    2. 'if' → logprob: -1.531844139099121
    3. ' =' → logprob: -2.531844139099121
    4. ' if' → logprob: -2.656844139099121
    5. 't' → logprob: -3.781844139099121
    6. '=' → logprob: -3.906844139099121
    7. '
' → logprob: -4.281844139099121
    8. 'for' → logprob: -4.531844139099121
    9. '```' → logprob: -4.531844139099121
    10. '_type' → logprob: -4.656844139099121

Token 1026: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1304564476013184
    2. '=' → logprob: -1.7554564476013184
    3. 'if' → logprob: -1.7554564476013184
    4. ' if' → logprob: -3.2554564476013184
    5. '.setdefault' → logprob: -3.2554564476013184
    6. '```' → logprob: -3.2554564476013184
    7. '_token' → logprob: -3.7554564476013184
    8. 't' → logprob: -4.005456447601318
    9. 'token' → logprob: -4.130456447601318
    10. '_type' → logprob: -4.255456447601318

Token 1027: ' jm' (ID: 178927)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16553300619125366
    2. '           ' → logprob: -2.2905330657958984
    3. 't' → logprob: -3.0405330657958984
    4. ' if' → logprob: -6.540533065795898
    5. 'mark' → logprob: -7.040533065795898
    6. 'tm' → logprob: -8.040533065795898
    7. 'j' → logprob: -8.790533065795898
    8. 'jump' → logprob: -9.165533065795898
    9. 'jt' → logprob: -9.415533065795898
    10. 'tk' → logprob: -9.665533065795898

Token 1028: ' =' (ID: 314)
  Prédit: '_mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mark' → logprob: -0.3455604314804077
    2. ' =' → logprob: -2.3455605506896973
    3. '=' → logprob: -2.4705605506896973
    4. 'pos' → logprob: -3.4705605506896973
    5. '_pos' → logprob: -3.5955605506896973
    6. '_type' → logprob: -4.470560550689697
    7. '=current' → logprob: -4.470560550689697
    8. 'mark' → logprob: -4.845560550689697
    9. '=(' → logprob: -4.845560550689697
    10. '_marks' → logprob: -5.095560550689697

Token 1029: ' jump' (ID: 13843)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.0004342453321442008
    2. ' jump' → logprob: -7.750434398651123
    3. 'None' → logprob: -12.750433921813965
    4. '(j' → logprob: -15.125433921813965
    5. ' None' → logprob: -16.00043487548828
    6. '   ' → logprob: -16.25043487548828
    7. '.jump' → logprob: -16.37543487548828
    8. 'jum' → logprob: -17.50043487548828
    9. 'Jump' → logprob: -17.75043487548828
    10. '  ' → logprob: -18.12543487548828

Token 1030: '_marks' (ID: 196622)
  Prédit: '_marks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_marks' → logprob: -1.4021237802808173e-05
    2. '_mark' → logprob: -11.625014305114746
    3. 'marks' → logprob: -13.750014305114746
    4. 'type' → logprob: -14.125014305114746
    5. '_pos' → logprob: -14.375014305114746
    6. '=' → logprob: -14.500014305114746
    7. '_type' → logprob: -14.500014305114746
    8. '=_' → logprob: -14.625014305114746
    9. '_positions' → logprob: -15.375014305114746
    10. '_' → logprob: -15.375014305114746

Token 1031: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.004685495514422655
    2. 'current' → logprob: -5.379685401916504
    3. '=current' → logprob: -10.504685401916504
    4. '_current' → logprob: -10.629685401916504
    5. '```' → logprob: -12.629685401916504
    6. '(current' → logprob: -13.004685401916504
    7. ' current' → logprob: -13.004685401916504
    8. ' =' → logprob: -13.504685401916504
    9. '$current' → logprob: -13.879685401916504
    10. '
' → logprob: -14.504685401916504

Token 1032: ']
' (ID: 1592)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.06416618078947067
    2. 'current' → logprob: -2.8141660690307617
    3. '
' → logprob: -7.189166069030762
    4. '   ' → logprob: -8.189166069030762
    5. 'if' → logprob: -8.314166069030762
    6. ')' → logprob: -8.314166069030762
    7. ')
' → logprob: -9.189166069030762
    8. ' current' → logprob: -9.189166069030762
    9. '```' → logprob: -9.189166069030762
    10. '(current' → logprob: -9.314166069030762

Token 1033: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021737538278102875
    2. 'if' → logprob: -4.396737575531006
    3. ' if' → logprob: -5.021737575531006
    4. '<|end|>' → logprob: -7.396737575531006
    5. '	       ' → logprob: -7.646737575531006
    6. '	if' → logprob: -7.771737575531006
    7. '       ' → logprob: -8.021737098693848
    8. '   ' → logprob: -8.521737098693848
    9. '		' → logprob: -8.771737098693848
    10. '	   ' → logprob: -9.146737098693848

Token 1034: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0053895688615739346
    2. ' if' → logprob: -5.75538969039917
    3. '           ' → logprob: -6.13038969039917
    4. '	if' → logprob: -11.255389213562012
    5. '       ' → logprob: -11.505389213562012
    6. '   ' → logprob: -12.130389213562012
    7. '```' → logprob: -12.630389213562012
    8. 't' → logprob: -13.880389213562012
    9. 'If' → logprob: -15.380389213562012
    10. 'token' → logprob: -15.380389213562012

Token 1035: ' jm' (ID: 178927)
  Prédit: 'jm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jm' → logprob: -1.8624639324116288e-06
    2. ' jm' → logprob: -13.250001907348633
    3. '   ' → logprob: -18.000001907348633
    4. ' ' → logprob: -20.875001907348633
    5. 'j' → logprob: -20.875001907348633
    6. 'jmp' → logprob: -21.750001907348633
    7. 'jl' → logprob: -22.000001907348633
    8. 'jn' → logprob: -22.875001907348633
    9. '           ' → logprob: -23.125001907348633
    10. 'jim' → logprob: -23.250001907348633

Token 1036: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0907069742679596
    2. ' is' → logprob: -2.4657070636749268
    3. 'and' → logprob: -6.715706825256348
    4. '[' → logprob: -7.590706825256348
    5. ' and' → logprob: -10.715706825256348
    6. '!=' → logprob: -11.340706825256348
    7. 'not' → logprob: -12.465706825256348
    8. ':' → logprob: -12.465706825256348
    9. '	is' → logprob: -13.590706825256348
    10. '=' → logprob: -13.840706825256348

Token 1037: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.038059163838624954
    2. ' not' → logprob: -3.2880592346191406
    3. 'None' → logprob: -11.53805923461914
    4. '           ' → logprob: -13.28805923461914
    5. '   ' → logprob: -13.53805923461914
    6. 'Not' → logprob: -13.66305923461914
    7. '```' → logprob: -14.28805923461914
    8. '                   ' → logprob: -14.78805923461914
    9. '               ' → logprob: -14.91305923461914
    10. '       ' → logprob: -15.28805923461914

Token 1038: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.036134760826826096
    2. 'not' → logprob: -3.411134719848633
    3. ' None' → logprob: -6.161134719848633
    4. ' not' → logprob: -8.036134719848633
    5. '(None' → logprob: -10.286134719848633
    6. 'none' → logprob: -11.536134719848633
    7. 'Not' → logprob: -13.161134719848633
    8. '   ' → logprob: -13.161134719848633
    9. '```' → logprob: -13.661134719848633
    10. '_None' → logprob: -13.911134719848633

Token 1039: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2235284149646759
    2. 'and' → logprob: -2.3485283851623535
    3. ':
' → logprob: -2.7235283851623535
    4. ':' → logprob: -3.7235283851623535
    5. '               ' → logprob: -4.8485283851623535
    6. '[' → logprob: -5.8485283851623535
    7. '           ' → logprob: -5.8485283851623535
    8. '```' → logprob: -7.9735283851623535
    9. '):
' → logprob: -8.223528861999512
    10. ',' → logprob: -8.848528861999512

Token 1040: ' jm' (ID: 178927)
  Prédit: 'jm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jm' → logprob: -4.60414821645827e-06
    2. ' jm' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.250004768371582
    4. 'jmp' → logprob: -17.125003814697266
    5. 'jump' → logprob: -17.625003814697266
    6. ' ' → logprob: -17.750003814697266
    7. '  ' → logprob: -18.500003814697266
    8. '       ' → logprob: -18.875003814697266
    9. '           ' → logprob: -19.375003814697266
    10. '    ' → logprob: -19.375003814697266

Token 1041: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000945876759942621
    2. '[j' → logprob: -7.500946044921875
    3. '```' → logprob: -8.625946044921875
    4. '][' → logprob: -10.000946044921875
    5. ')[' → logprob: -10.625946044921875
    6. '
' → logprob: -10.750946044921875
    7. 'and' → logprob: -10.875946044921875
    8. ' and' → logprob: -11.625946044921875
    9. ':' → logprob: -11.875946044921875
    10. '``' → logprob: -12.000946044921875

Token 1042: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043853666284121573
    2. '[' → logprob: -7.750438690185547
    3. '```' → logprob: -12.625438690185547
    4. '   ' → logprob: -13.750438690185547
    5. '
' → logprob: -14.500438690185547
    6. '(' → logprob: -14.500438690185547
    7. '0' → logprob: -14.750438690185547
    8. ' ' → logprob: -14.750438690185547
    9. '-' → logprob: -15.000438690185547
    10. '][' → logprob: -15.625438690185547

Token 1043: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06295274198055267
    2. ']==' → logprob: -2.812952756881714
    3. ' ==' → logprob: -7.062952518463135
    4. '']==' → logprob: -10.187952995300293
    5. ')==' → logprob: -10.437952995300293
    6. '```' → logprob: -10.562952995300293
    7. ']' → logprob: -11.312952995300293
    8. '==
' → logprob: -11.562952995300293
    9. '[' → logprob: -12.062952995300293
    10. '()==' → logprob: -12.187952995300293

Token 1044: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '0' → logprob: -18.0
    4. '```' → logprob: -18.875
    5. '۱' → logprob: -19.1875
    6. '   ' → logprob: -19.5625
    7. '１' → logprob: -20.0
    8. '  ' → logprob: -20.0625
    9. '=' → logprob: -20.1875
    10. '१' → logprob: -20.375

Token 1045: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.015341279096901417
    2. ':' → logprob: -4.390341281890869
    3. '               ' → logprob: -6.890341281890869
    4. '):
' → logprob: -7.015341281890869
    5. ' and' → logprob: -7.515341281890869
    6. '           ' → logprob: -8.390340805053711
    7. 'and' → logprob: -9.140340805053711
    8. ' :
' → logprob: -11.640340805053711
    9. ':

' → logprob: -12.140340805053711
    10. ')' → logprob: -12.765340805053711

Token 1046: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004315036640036851
    2. '<|end|>' → logprob: -9.375431060791016
    3. '```' → logprob: -9.625431060791016
    4. '	           ' → logprob: -9.875431060791016
    5. ':
' → logprob: -10.125431060791016
    6. '           ' → logprob: -10.125431060791016
    7. '   ' → logprob: -10.625431060791016
    8. '):
' → logprob: -10.625431060791016
    9. ',' → logprob: -11.250431060791016
    10. '              ' → logprob: -11.750431060791016

Token 1047: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.008661959320306778
    2. ' last' → logprob: -4.75866174697876
    3. '           ' → logprob: -10.258662223815918
    4. '   ' → logprob: -12.133662223815918
    5. 't' → logprob: -12.883662223815918
    6. '	last' → logprob: -13.133662223815918
    7. '               ' → logprob: -13.258662223815918
    8. 'current' → logprob: -15.508662223815918
    9. ' ' → logprob: -15.883662223815918
    10. '[last' → logprob: -16.3836612701416

Token 1048: '_read' (ID: 14291)
  Prédit: '_read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_read' → logprob: -4.320199877838604e-07
    2. '_write' → logprob: -15.75
    3. '_reads' → logprob: -16.625
    4. 'read' → logprob: -16.75
    5. '_READ' → logprob: -18.25
    6. '```' → logprob: -19.625
    7. 'Read' → logprob: -19.75
    8. '_print' → logprob: -19.75
    9. '
' → logprob: -20.375
    10. '_Read' → logprob: -20.375

Token 1049: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -4.127333340875339e-06
    2. '```' → logprob: -12.750003814697266
    3. 'type' → logprob: -14.250003814697266
    4. '
' → logprob: -15.875003814697266
    5. '`' → logprob: -16.625003814697266
    6. 'Type' → logprob: -16.750003814697266
    7. '_pos' → logprob: -16.750003814697266
    8. '=_' → logprob: -17.625003814697266
    9. ')_' → logprob: -17.875003814697266
    10. 'pos' → logprob: -18.000003814697266

Token 1050: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.1093578804284334e-05
    2. 'jm' → logprob: -10.625051498413086
    3. '[' → logprob: -10.875051498413086
    4. '[(' → logprob: -12.500051498413086
    5. '```' → logprob: -14.000051498413086
    6. '[js' → logprob: -14.500051498413086
    7. '=' → logprob: -14.500051498413086
    8. ' [' → logprob: -15.250051498413086
    9. '[m' → logprob: -15.250051498413086
    10. '(j' → logprob: -15.625051498413086

Token 1051: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7353657484054565
    2. '[j' → logprob: -0.7353657484054565
    3. 'jm' → logprob: -3.235365867614746
    4. '[m' → logprob: -7.110365867614746
    5. '[' → logprob: -8.360365867614746
    6. ' jm' → logprob: -8.360365867614746
    7. '(j' → logprob: -8.485365867614746
    8. 'j' → logprob: -9.610365867614746
    9. '```' → logprob: -9.985365867614746
    10. ',j' → logprob: -10.110365867614746

Token 1052: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009956525173038244
    2. ']' → logprob: -7.375995635986328
    3. '[j' → logprob: -8.375995635986328
    4. '=(' → logprob: -10.750995635986328
    5. '[t' → logprob: -10.875995635986328
    6. ' =' → logprob: -11.125995635986328
    7. ']=' → logprob: -11.375995635986328
    8. '=' → logprob: -11.375995635986328
    9. 't' → logprob: -11.625995635986328
    10. '=j' → logprob: -12.000995635986328

Token 1053: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.024938145652413368
    2. 'current' → logprob: -4.024938106536865
    3. '[' → logprob: -5.149938106536865
    4. ' current' → logprob: -8.149938583374023
    5. ']' → logprob: -8.649938583374023
    6. '1' → logprob: -8.649938583374023
    7. ' ' → logprob: -9.899938583374023
    8. '```' → logprob: -10.024938583374023
    9. '[current' → logprob: -10.024938583374023
    10. '(current' → logprob: -10.149938583374023

Token 1054: ']]=' (ID: 192551)
  Prédit: ']='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.3143841624259949
    2. ']' → logprob: -1.3143842220306396
    3. ']]=' → logprob: -7.0643839836120605
    4. ']=(' → logprob: -9.189384460449219
    5. ']]' → logprob: -9.314384460449219
    6. ']=-' → logprob: -10.939384460449219
    7. ']+=' → logprob: -11.189384460449219
    8. ']={' → logprob: -11.814384460449219
    9. ')]' → logprob: -11.814384460449219
    10. '']=' → logprob: -12.064384460449219

Token 1055: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -7.941850526549388e-06
    2. ' current' → logprob: -11.750007629394531
    3. '	current' → logprob: -21.62500762939453
    4. '[current' → logprob: -22.37500762939453
    5. '(current' → logprob: -22.75000762939453
    6. '$current' → logprob: -23.37500762939453
    7. '   ' → logprob: -23.50000762939453
    8. '
' → logprob: -24.00000762939453
    9. '.current' → logprob: -24.25000762939453
    10. '=current' → logprob: -24.50000762939453

Token 1056: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21306295692920685
    2. '```' → logprob: -1.8380630016326904
    3. 'next' → logprob: -4.838062763214111
    4. '
' → logprob: -5.213062763214111
    5. 'current' → logprob: -5.463062763214111
    6. '   ' → logprob: -5.588062763214111
    7. '       ' → logprob: -5.713062763214111
    8. 'if' → logprob: -6.713062763214111
    9. '#' → logprob: -6.713062763214111
    10. '            
' → logprob: -6.963062763214111

Token 1057: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02002088539302349
    2. '```' → logprob: -4.270020961761475
    3. '       ' → logprob: -6.520020961761475
    4. '
' → logprob: -6.645020961761475
    5. '            
' → logprob: -7.145020961761475
    6. '   ' → logprob: -7.145020961761475
    7. 'next' → logprob: -7.520020961761475
    8. 'current' → logprob: -8.645020484924316
    9. '``' → logprob: -8.770020484924316
    10. 'token' → logprob: -9.270020484924316

Token 1058: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3515256643295288
    2. 'next' → logprob: -2.3515257835388184
    3. 'if' → logprob: -2.6015257835388184
    4. '```' → logprob: -2.9765257835388184
    5. 'while' → logprob: -4.101525783538818
    6. '
' → logprob: -4.101525783538818
    7. '#' (adapté à ' #') → logprob: -4.351525783538818
    8. 'current' → logprob: -4.351525783538818
    9. '   ' → logprob: -5.476525783538818
    10. '            
' → logprob: -6.101525783538818

Token 1059: ' find' (ID: 1646)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27570584416389465
    2. '#' → logprob: -2.1507058143615723
    3. 'next' → logprob: -3.0257058143615723
    4. 'while' → logprob: -3.2757058143615723
    5. 'if' → logprob: -3.9007058143615723
    6. 'prev' → logprob: -4.400705814361572
    7. '   ' → logprob: -5.900705814361572
    8. '       ' → logprob: -6.650705814361572
    9. 'current' → logprob: -8.15070629119873
    10. '```' → logprob: -8.40070629119873

Token 1060: ' the' (ID: 290)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.001533547299914062
    2. ' next' → logprob: -7.126533508300781
    3. '#' → logprob: -7.626533508300781
    4. 'current' → logprob: -8.626533508300781
    5. '   ' → logprob: -10.876533508300781
    6. '_next' → logprob: -11.001533508300781
    7. 'prev' → logprob: -12.001533508300781
    8. '	next' → logprob: -12.251533508300781
    9. '```' → logprob: -12.501533508300781
    10. 'if' → logprob: -12.876533508300781

Token 1061: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.04389769583940506
    2. ' next' → logprob: -3.2938976287841797
    3. '#' → logprob: -5.54389762878418
    4. 'prev' → logprob: -7.04389762878418
    5. '   ' → logprob: -8.66889762878418
    6. ' #' → logprob: -8.79389762878418
    7. 'current' → logprob: -9.04389762878418
    8. '_next' → logprob: -9.16889762878418
    9. 'def' → logprob: -9.29389762878418
    10. '```' → logprob: -9.66889762878418

Token 1062: ' letter' (ID: 10263)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.9130843281745911
    2. '_token' → logprob: -0.9130843281745911
    3. 'current' → logprob: -2.5380842685699463
    4. 'step' → logprob: -2.9130842685699463
    5. '_current' → logprob: -4.538084506988525
    6. 'pos' → logprob: -4.538084506988525
    7. 'next' → logprob: -4.913084506988525
    8. '_next' → logprob: -5.038084506988525
    9. '_pos' → logprob: -5.288084506988525
    10. '_candidate' → logprob: -5.538084506988525

Token 1063: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22055673599243164
    2. '
' → logprob: -1.7205567359924316
    3. '            
' → logprob: -5.095556735992432
    4. 'if' → logprob: -5.220556735992432
    5. '#' → logprob: -6.595556735992432
    6. '    
' → logprob: -6.845556735992432
    7. 'prev' → logprob: -6.970556735992432
    8. 'next' → logprob: -6.970556735992432
    9. '   ' → logprob: -7.720556735992432
    10. '<|end|>' → logprob: -7.720556735992432

Token 1064: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -1.9743012671824545e-05
    2. ' read' → logprob: -10.875020027160645
    3. '_read' → logprob: -15.375020027160645
    4. '-read' → logprob: -15.625020027160645
    5. 'current' → logprob: -15.875020027160645
    6. 'Read' → logprob: -16.250019073486328
    7. '
' → logprob: -16.625019073486328
    8. '```' → logprob: -17.125019073486328
    9. '   ' → logprob: -17.250019073486328
    10. '	read' → logprob: -17.250019073486328

Token 1065: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18342173099517822
    2. 'if' → logprob: -2.9334216117858887
    3. 'next' → logprob: -2.9334216117858887
    4. '           ' → logprob: -3.0584216117858887
    5. '            
' → logprob: -5.683421611785889
    6. 'prev' → logprob: -5.933421611785889
    7. '#' → logprob: -6.558421611785889
    8. '```' → logprob: -6.558421611785889
    9. 'current' → logprob: -6.933421611785889
    10. ' if' → logprob: -7.183421611785889

Token 1066: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6690857410430908
    2. 'next' → logprob: -1.7940857410430908
    3. 'if' → logprob: -2.169085741043091
    4. '```' → logprob: -2.669085741043091
    5. 'current' → logprob: -3.044085741043091
    6. '
' → logprob: -3.669085741043091
    7. '#' → logprob: -4.294085502624512
    8. '   ' → logprob: -4.919085502624512
    9. 'n' → logprob: -5.169085502624512
    10. '            
' → logprob: -5.544085502624512

Token 1067: ' nxt' (ID: 160200)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.723715603351593
    2. 'if' → logprob: -0.848715603351593
    3. '#' → logprob: -3.8487155437469482
    4. '           ' → logprob: -4.098715782165527
    5. 'current' → logprob: -4.098715782165527
    6. 'prev' → logprob: -4.473715782165527
    7. 'while' → logprob: -4.598715782165527
    8. '   ' → logprob: -5.473715782165527
    9. 'n' → logprob: -5.848715782165527
    10. '```' → logprob: -6.723715782165527

Token 1068: '=-' (ID: 21714)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28320541977882385
    2. ' =' → logprob: -1.4082053899765015
    3. '_' → logprob: -6.408205509185791
    4. '_=' → logprob: -8.658205032348633
    5. '=current' → logprob: -10.408205032348633
    6. '=None' → logprob: -10.408205032348633
    7. ',' → logprob: -10.533205032348633
    8. '=_' → logprob: -11.158205032348633
    9. ' ' → logprob: -11.283205032348633
    10. ':' → logprob: -11.283205032348633

Token 1069: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -15.000000953674316
    3. '```' → logprob: -15.000000953674316
    4. '   ' → logprob: -15.500000953674316
    5. '           ' → logprob: -16.875001907348633
    6. '2' → logprob: -17.375001907348633
    7. '۱' → logprob: -17.750001907348633
    8. '
' → logprob: -18.000001907348633
    9. '=' → logprob: -18.000001907348633
    10. '-' → logprob: -18.312501907348633

Token 1070: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4119892120361328
    2. '<|end|>' → logprob: -1.6619892120361328
    3. '           ' → logprob: -2.161989212036133
    4. 'if' → logprob: -4.536989212036133
    5. ' if' → logprob: -4.911989212036133
    6. '<|end|>' → logprob: -5.411989212036133
    7. '            
' → logprob: -5.911989212036133
    8. '		' → logprob: -6.661989212036133
    9. '#' → logprob: -6.661989212036133
    10. '            ' → logprob: -6.786989212036133

Token 1071: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2508609890937805
    2. ' if' → logprob: -2.2508609294891357
    3. '           ' → logprob: -3.1258609294891357
    4. '
' → logprob: -3.1258609294891357
    5. '```' → logprob: -4.875861167907715
    6. '#' → logprob: -5.000861167907715
    7. 'current' → logprob: -5.375861167907715
    8. ' 
' → logprob: -6.875861167907715
    9. '<|end|>' → logprob: -6.875861167907715
    10. '		' → logprob: -7.000861167907715

Token 1072: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02330079860985279
    2. 'for' → logprob: -4.773300647735596
    3. '#' (adapté à ' #') → logprob: -4.898300647735596
    4. ' if' → logprob: -5.398300647735596
    5. '           ' → logprob: -6.523300647735596
    6. 'i' → logprob: -8.023301124572754
    7. 'prev' → logprob: -8.398301124572754
    8. 'current' → logprob: -9.148301124572754
    9. ' for' → logprob: -9.398301124572754
    10. '
' → logprob: -9.773301124572754

Token 1073: ' Rule' (ID: 32118)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16818863153457642
    2. '#' → logprob: -1.9181885719299316
    3. '           ' → logprob: -5.543188571929932
    4. 'for' → logprob: -5.668188571929932
    5. 'prev' → logprob: -7.668188571929932
    6. 'i' → logprob: -10.79318904876709
    7. 'idx' → logprob: -10.91818904876709
    8. 'while' → logprob: -11.41818904876709
    9. 'pos' → logprob: -11.41818904876709
    10. ' if' → logprob: -11.91818904876709

Token 1074: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6734301447868347
    2. '4' → logprob: -1.2984302043914795
    3. ' =' → logprob: -1.7984302043914795
    4. '=' → logprob: -3.5484302043914795
    5. ' #' → logprob: -4.7984299659729
    6. ' if' → logprob: -5.6734299659729
    7. '   ' → logprob: -6.2984299659729
    8. '#' → logprob: -6.5484299659729
    9. '	' → logprob: -6.5484299659729
    10. ':' → logprob: -6.6734299659729

Token 1075: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00012296605564188212
    2. '=' → logprob: -9.500123023986816
    3. ' ' → logprob: -10.125123023986816
    4. '#' → logprob: -12.250123023986816
    5. ' =' → logprob: -14.000123023986816
    6. '   ' → logprob: -14.125123023986816
    7. 'def' → logprob: -14.625123023986816
    8. '```' → logprob: -15.000123023986816
    9. '5' → logprob: -16.0001220703125
    10. '
' → logprob: -16.0001220703125

Token 1076: ':' (ID: 25)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2748876214027405
    2. '           ' → logprob: -1.6498875617980957
    3. ' if' → logprob: -3.2748875617980957
    4. 'prev' → logprob: -5.774887561798096
    5. ' =' → logprob: -6.024887561798096
    6. 'i' → logprob: -6.399887561798096
    7. '#' → logprob: -7.399887561798096
    8. '=' → logprob: -7.774887561798096
    9. '```' → logprob: -7.899887561798096
    10. 'idx' → logprob: -8.024888038635254

Token 1077: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.024881741032004356
    2. 'prev' → logprob: -3.7748818397521973
    3. 'i' → logprob: -7.774881839752197
    4. 'pi' → logprob: -8.149881362915039
    5. '           ' → logprob: -8.274881362915039
    6. 'p' → logprob: -8.274881362915039
    7. 'for' → logprob: -8.649881362915039
    8. ' if' → logprob: -9.899881362915039
    9. 'idx' → logprob: -10.274881362915039
    10. 'pr' → logprob: -10.524881362915039

Token 1078: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.001181777217425406
    2. ' current' → logprob: -7.251181602478027
    3. '(current' → logprob: -8.001181602478027
    4. 'has' → logprob: -9.751181602478027
    5. '0' → logprob: -9.876181602478027
    6. 'read' → logprob: -11.001181602478027
    7. '   ' → logprob: -12.501181602478027
    8. ' ' → logprob: -13.126181602478027
    9. '(' → logprob: -13.376181602478027
    10. '	current' → logprob: -13.751181602478027

Token 1079: '>' (ID: 29)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10164293646812439
    2. '>' → logprob: -2.3516428470611572
    3. ' -' → logprob: -7.226643085479736
    4. ' >' → logprob: -8.476642608642578
    5. 'current' → logprob: -8.601642608642578
    6. '>-' → logprob: -9.226642608642578
    7. '>=' → logprob: -9.601642608642578
    8. '-current' → logprob: -10.101642608642578
    9. '+' → logprob: -10.226642608642578
    10. '```' → logprob: -10.726642608642578

Token 1080: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007348208222538233
    2. '=' → logprob: -5.13234806060791
    3. ' ' → logprob: -7.00734806060791
    4. '>' → logprob: -8.13234806060791
    5. '1' → logprob: -9.13234806060791
    6. '```' → logprob: -10.88234806060791
    7. 'current' → logprob: -11.00734806060791
    8. '
' → logprob: -11.25734806060791
    9. '-' → logprob: -11.75734806060791
    10. '``' → logprob: -11.88234806060791

Token 1081: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38884612917900085
    2. 'and' → logprob: -1.1388461589813232
    3. '           ' → logprob: -6.638845920562744
    4. '-' → logprob: -8.638846397399902
    5. '               ' → logprob: -9.013846397399902
    6. ':
' → logprob: -9.138846397399902
    7. 'if' → logprob: -9.888846397399902
    8. ':' → logprob: -9.888846397399902
    9. '   ' → logprob: -10.388846397399902
    10. '	and' → logprob: -10.763846397399902

Token 1082: ' previous' (ID: 5880)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.03717110678553581
    2. 'read' → logprob: -3.4121711254119873
    3. ' has' → logprob: -5.787170886993408
    4. ' read' → logprob: -8.662171363830566
    5. '   ' → logprob: -9.662171363830566
    6. 'not' → logprob: -9.662171363830566
    7. 'jump' → logprob: -9.912171363830566
    8. 'have' → logprob: -10.662171363830566
    9. '(has' → logprob: -11.037171363830566
    10. 'current' → logprob: -11.287171363830566

Token 1083: ' letter' (ID: 10263)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.700977087020874
    2. '[current' → logprob: -1.950977087020874
    3. '_token' → logprob: -2.450977087020874
    4. '_letter' → logprob: -2.950977087020874
    5. '_current' → logprob: -3.075977087020874
    6. '[' → logprob: -3.325977087020874
    7. '```' → logprob: -3.700977087020874
    8. '_index' → logprob: -4.325977325439453
    9. ' ==' → logprob: -4.325977325439453
    10. 'current' → logprob: -4.450977325439453

Token 1084: ' has' (ID: 853)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.15424491465091705
    2. 'current' → logprob: -2.154244899749756
    3. '```' → logprob: -4.529244899749756
    4. 'has' → logprob: -5.154244899749756
    5. '==' → logprob: -5.529244899749756
    6. ' current' → logprob: -6.904244899749756
    7. '-' → logprob: -6.904244899749756
    8. ' ==' → logprob: -7.029244899749756
    9. '(current' → logprob: -7.029244899749756
    10. ' has' → logprob: -7.654244899749756

Token 1085: ' '' (ID: 461)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.9243660569190979
    2. 'v' → logprob: -1.0493659973144531
    3. '_v' → logprob: -1.4243659973144531
    4. ''' → logprob: -5.049365997314453
    5. '_has' → logprob: -6.799365997314453
    6. '```' → logprob: -7.174365997314453
    7. ' has' → logprob: -7.299365997314453
    8. 'current' → logprob: -7.299365997314453
    9. '1' → logprob: -7.549365997314453
    10. ''_' → logprob: -7.924365997314453

Token 1086: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.016587095335125923
    2. '_v' → logprob: -4.141587257385254
    3. 'has' → logprob: -7.641587257385254
    4. ' v' → logprob: -10.641587257385254
    5. '```' → logprob: -10.891587257385254
    6. '_has' → logprob: -11.391587257385254
    7. '_' → logprob: -12.391587257385254
    8. ' has' → logprob: -12.641587257385254
    9. ''' → logprob: -12.641587257385254
    10. '   ' → logprob: -13.891587257385254

Token 1087: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.43882423639297485
    2. '[current' → logprob: -1.31382417678833
    3. 'and' → logprob: -3.06382417678833
    4. ''' → logprob: -4.31382417678833
    5. '[' → logprob: -4.81382417678833
    6. ']' → logprob: -4.81382417678833
    7. '[pos' → logprob: -5.31382417678833
    8. ':' → logprob: -6.93882417678833
    9. 'current' → logprob: -7.56382417678833
    10. '```' → logprob: -7.81382417678833

Token 1088: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16537843644618988
    2. 'and' → logprob: -2.2903783321380615
    3. '           ' → logprob: -3.1653783321380615
    4. '==' → logprob: -5.415378570556641
    5. ' ==' → logprob: -6.790378570556641
    6. ':
' → logprob: -6.915378570556641
    7. ',' → logprob: -7.290378570556641
    8. ':' → logprob: -7.415378570556641
    9. '[current' → logprob: -7.915378570556641
    10. '```' → logprob: -8.04037857055664

Token 1089: ' not' (ID: 625)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.12065333127975464
    2. 'not' → logprob: -2.4956533908843994
    3. 'read' → logprob: -3.4956533908843994
    4. ' has' → logprob: -8.37065315246582
    5. '(not' → logprob: -8.37065315246582
    6. ' not' → logprob: -8.87065315246582
    7. '(has' → logprob: -9.49565315246582
    8. 'v' → logprob: -9.87065315246582
    9. 'current' → logprob: -10.12065315246582
    10. '(read' → logprob: -10.12065315246582

Token 1090: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -2.999452772201039e-05
    2. ' read' → logprob: -10.500029563903809
    3. 'has' → logprob: -13.875029563903809
    4. 'visited' → logprob: -14.375029563903809
    5. 'used' → logprob: -15.000029563903809
    6. '	read' → logprob: -15.250029563903809
    7. '   ' → logprob: -16.125030517578125
    8. '(read' → logprob: -17.000030517578125
    9. '
' → logprob: -17.250030517578125
    10. '```' → logprob: -17.625030517578125

Token 1091: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7047925591468811
    2. 'and' → logprob: -0.7047925591468811
    3. '           ' → logprob: -4.579792499542236
    4. ':
' → logprob: -7.329792499542236
    5. '               ' → logprob: -7.829792499542236
    6. '```' → logprob: -9.579792976379395
    7. '   ' → logprob: -9.954792976379395
    8. 'if' → logprob: -10.329792976379395
    9. ':' → logprob: -10.579792976379395
    10. '==' → logprob: -11.329792976379395

Token 1092: ' read' (ID: 1729)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5064184665679932
    2. ' if' → logprob: -1.0064184665679932
    3. '           ' → logprob: -4.006418228149414
    4. '               ' → logprob: -5.006418228149414
    5. 'n' → logprob: -5.256418228149414
    6. ' n' → logprob: -7.631418228149414
    7. ' nxt' → logprob: -7.881418228149414
    8. '   ' → logprob: -8.131418228149414
    9. '```' → logprob: -8.381418228149414
    10. 'v' → logprob: -9.881418228149414

Token 1093: ' it' (ID: 480)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.003221325809136033
    2. ' current' → logprob: -5.75322151184082
    3. '(current' → logprob: -10.87822151184082
    4. '   ' → logprob: -11.25322151184082
    5. '[current' → logprob: -11.87822151184082
    6. '	current' → logprob: -13.00322151184082
    7. ' ' → logprob: -13.37822151184082
    8. '```' → logprob: -15.12822151184082
    9. 'urrent' → logprob: -15.87822151184082
    10. '_current' → logprob: -16.00322151184082

Token 1094: ' next' (ID: 2613)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8004946708679199
    2. '           ' → logprob: -2.17549467086792
    3. ' and' → logprob: -2.42549467086792
    4. ':
' → logprob: -2.92549467086792
    5. '=' → logprob: -3.05049467086792
    6. ' if' → logprob: -3.17549467086792
    7. '[current' → logprob: -3.17549467086792
    8. '
' → logprob: -3.55049467086792
    9. '```' → logprob: -3.55049467086792
    10. ' =' → logprob: -3.67549467086792

Token 1095: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01964409463107586
    2. 'if' → logprob: -4.019644260406494
    3. ' if' → logprob: -6.644644260406494
    4. '   ' → logprob: -8.894643783569336
    5. '		' → logprob: -10.894643783569336
    6. '       ' → logprob: -11.019643783569336
    7. '	if' → logprob: -11.644643783569336
    8. '	       ' → logprob: -12.269643783569336
    9. '	   ' → logprob: -12.519643783569336
    10. '```' → logprob: -14.519643783569336

Token 1096: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11969707906246185
    2. 'if' → logprob: -2.994697093963623
    3. ' if' → logprob: -3.369697093963623
    4. '	if' → logprob: -4.619697093963623
    5. '   ' → logprob: -4.869697093963623
    6. '		' → logprob: -5.494697093963623
    7. '```' → logprob: -5.619697093963623
    8. '
' → logprob: -6.494697093963623
    9. '       ' → logprob: -7.244697093963623
    10. '``' → logprob: -8.369696617126465

Token 1097: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8296683430671692
    2. ' if' → logprob: -0.8296683430671692
    3. '           ' → logprob: -2.0796682834625244
    4. '   ' → logprob: -6.8296685218811035
    5. '       ' → logprob: -7.2046685218811035
    6. '	if' → logprob: -7.8296685218811035
    7. '```' → logprob: -8.079668045043945
    8. '		' → logprob: -10.454668045043945
    9. '
' → logprob: -10.704668045043945
    10. '``' → logprob: -10.954668045043945

Token 1098: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0019438649760559201
    2. ' current' → logprob: -6.251944065093994
    3. '(current' → logprob: -12.126943588256836
    4. '   ' → logprob: -12.251943588256836
    5. 'has' → logprob: -12.501943588256836
    6. '	current' → logprob: -14.751943588256836
    7. ' ' → logprob: -15.376943588256836
    8. '0' → logprob: -15.376943588256836
    9. 'read' → logprob: -15.626943588256836
    10. 'cur' → logprob: -16.376943588256836

Token 1099: '>' (ID: 29)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09116621315479279
    2. '>' → logprob: -2.5911662578582764
    3. ' -' → logprob: -4.591166019439697
    4. ' >' → logprob: -6.216166019439697
    5. '>-' → logprob: -10.216166496276855
    6. '   ' → logprob: -11.966166496276855
    7. '>=' → logprob: -12.091166496276855
    8. '```' → logprob: -12.341166496276855
    9. ')>' → logprob: -13.466166496276855
    10. ' ' → logprob: -13.591166496276855

Token 1100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003003081073984504
    2. ' ' → logprob: -8.750300407409668
    3. '=' → logprob: -8.875300407409668
    4. '-' → logprob: -14.125300407409668
    5. '```' → logprob: -14.625300407409668
    6. '1' → logprob: -15.375300407409668
    7. '   ' → logprob: -16.25029945373535
    8. '           ' → logprob: -16.75029945373535
    9. '>' → logprob: -17.00029945373535
    10. ')' → logprob: -17.12529945373535

Token 1101: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5762830972671509
    2. ' and' → logprob: -0.8262830972671509
    3. '	and' → logprob: -8.32628345489502
    4. '           ' → logprob: -9.45128345489502
    5. '   ' → logprob: -12.07628345489502
    6. '               ' → logprob: -12.45128345489502
    7. '       ' → logprob: -12.95128345489502
    8. '          ' → logprob: -13.32628345489502
    9. '            ' → logprob: -13.57628345489502
    10. '		' → logprob: -13.57628345489502

Token 1102: ' has' (ID: 853)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.010239753872156143
    2. 'not' → logprob: -4.635239601135254
    3. ' has' → logprob: -8.010239601135254
    4. ' not' → logprob: -10.135239601135254
    5. '(has' → logprob: -10.260239601135254
    6. '           ' → logprob: -10.510239601135254
    7. '(not' → logprob: -10.885239601135254
    8. '   ' → logprob: -11.135239601135254
    9. '               ' → logprob: -13.135239601135254
    10. 'have' → logprob: -13.260239601135254

Token 1103: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -5.931863051955588e-05
    2. 'v' → logprob: -9.750059127807617
    3. '_' → logprob: -14.625059127807617
    4. '```' → logprob: -15.125059127807617
    5. 'current' → logprob: -16.375059127807617
    6. ' _' → logprob: -16.875059127807617
    7. '   ' → logprob: -17.000059127807617
    8. '	v' → logprob: -17.125059127807617
    9. '_current' → logprob: -17.750059127807617
    10. ' ' → logprob: -18.375059127807617

Token 1104: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.3425219549390022e-05
    2. '[' → logprob: -11.37501335144043
    3. 'current' → logprob: -14.75001335144043
    4. ' [' → logprob: -14.75001335144043
    5. '[cur' → logprob: -15.00001335144043
    6. '```' → logprob: -15.25001335144043
    7. '[curr' → logprob: -15.37501335144043
    8. '[
' → logprob: -15.87501335144043
    9. '(current' → logprob: -16.25001335144043
    10. ' current' → logprob: -18.00001335144043

Token 1105: '-' (ID: 12)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.014385618269443512
    2. '-' → logprob: -4.26438570022583
    3. '[' → logprob: -9.014385223388672
    4. 'current' → logprob: -9.764385223388672
    5. ' -' → logprob: -10.764385223388672
    6. '   ' → logprob: -11.764385223388672
    7. ']' → logprob: -12.139385223388672
    8. '(current' → logprob: -12.889385223388672
    9. '][' → logprob: -13.889385223388672
    10. '1' → logprob: -14.014385223388672

Token 1106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -12.375007629394531
    3. 'current' → logprob: -13.125007629394531
    4. 'True' → logprob: -14.500007629394531
    5. '```' → logprob: -14.750007629394531
    6. '0' → logprob: -15.125007629394531
    7. '   ' → logprob: -15.875007629394531
    8. ']' → logprob: -17.31250762939453
    9. '-' → logprob: -17.37500762939453
    10. '  ' → logprob: -17.62500762939453

Token 1107: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018128640949726105
    2. ']==' → logprob: -4.393128871917725
    3. 'and' → logprob: -5.768128871917725
    4. ' and' → logprob: -6.143128871917725
    5. '[current' → logprob: -9.018128395080566
    6. ']:
' → logprob: -9.143128395080566
    7. ' ]' → logprob: -10.768128395080566
    8. ']>' → logprob: -10.893128395080566
    9. ']!=' → logprob: -11.143128395080566
    10. ']:' → logprob: -11.393128395080566

Token 1108: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.2017061710357666
    2. ' and' → logprob: -1.7017061710357666
    3. '==' → logprob: -8.451705932617188
    4. '           ' → logprob: -10.326705932617188
    5. '	and' → logprob: -10.701705932617188
    6. '   ' → logprob: -11.701705932617188
    7. '       ' → logprob: -12.076705932617188
    8. '          ' → logprob: -13.701705932617188
    9. '        ' → logprob: -13.951705932617188
    10. '    ' → logprob: -14.076705932617188

Token 1109: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.00018744789122138172
    2. ' not' → logprob: -8.875187873840332
    3. '(not' → logprob: -10.000187873840332
    4. 'read' → logprob: -14.000187873840332
    5. '
' → logprob: -14.625187873840332
    6. '   ' → logprob: -14.625187873840332
    7. '!' → logprob: -15.125187873840332
    8. 'n' → logprob: -16.500186920166016
    9. '	not' → logprob: -16.750186920166016
    10. '           ' → logprob: -18.250186920166016

Token 1110: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -2.15310683415737e-05
    2. ' read' → logprob: -10.750021934509277
    3. '
' → logprob: -17.37502098083496
    4. '   ' → logprob: -17.75002098083496
    5. ' ' → logprob: -18.62502098083496
    6. '	read' → logprob: -18.87502098083496
    7. '(read' → logprob: -19.12502098083496
    8. '  ' → logprob: -19.50002098083496
    9. 'write' → logprob: -21.00002098083496
    10. '
' → logprob: -21.12502098083496

Token 1111: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.1875571544806007e-05
    2. '[' → logprob: -12.000011444091797
    3. '(current' → logprob: -12.500011444091797
    4. 'current' → logprob: -13.500011444091797
    5. '[
' → logprob: -15.875011444091797
    6. '[cur' → logprob: -16.000011444091797
    7. '[curr' → logprob: -16.125011444091797
    8. '[(' → logprob: -16.250011444091797
    9. ' [' → logprob: -16.375011444091797
    10. '```' → logprob: -17.250011444091797

Token 1112: '-' (ID: 12)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.005482283886522055
    2. '-' → logprob: -5.255482196807861
    3. '[' → logprob: -8.38048267364502
    4. '(current' → logprob: -12.00548267364502
    5. 'current' → logprob: -12.13048267364502
    6. ']' → logprob: -13.13048267364502
    7. '[-' → logprob: -13.63048267364502
    8. ' -' → logprob: -13.75548267364502
    9. '[
' → logprob: -13.75548267364502
    10. '   ' → logprob: -14.25548267364502

Token 1113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.875003814697266
    3. '```' → logprob: -15.125003814697266
    4. '   ' → logprob: -15.312503814697266
    5. '-' → logprob: -17.125003814697266
    6. '2' → logprob: -17.312503814697266
    7. '{' → logprob: -17.562503814697266
    8. '0' → logprob: -17.687503814697266
    9. '``' → logprob: -18.000003814697266
    10. 'prev' → logprob: -18.187503814697266

Token 1114: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.002025116002187133
    2. ']:' → logprob: -6.752025127410889
    3. ']' → logprob: -7.252025127410889
    4. '):
' → logprob: -10.12702465057373
    5. '           ' → logprob: -10.25202465057373
    6. ']:
' → logprob: -10.87702465057373
    7. ':
' → logprob: -11.12702465057373
    8. '']:
' → logprob: -11.62702465057373
    9. ']:

' → logprob: -11.62702465057373
    10. '               ' → logprob: -12.37702465057373

Token 1115: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024776849895715714
    2. 'n' → logprob: -3.7747769355773926
    3. '	n' → logprob: -7.774776935577393
    4. ':
' → logprob: -7.899776935577393
    5. ' nxt' → logprob: -8.649776458740234
    6. '	           ' → logprob: -9.274776458740234
    7. '(n' → logprob: -9.524776458740234
    8. '```' → logprob: -9.649776458740234
    9. ',n' → logprob: -9.774776458740234
    10. ':n' → logprob: -10.274776458740234

Token 1116: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.016215017065405846
    2. '               ' → logprob: -4.141214847564697
    3. '                   ' → logprob: -9.516215324401855
    4. '           ' → logprob: -10.016215324401855
    5. ' nxt' → logprob: -10.141215324401855
    6. '   ' → logprob: -11.266215324401855
    7. '	n' → logprob: -13.516215324401855
    8. '                       ' → logprob: -13.516215324401855
    9. '              ' → logprob: -13.766215324401855
    10. '```' → logprob: -13.891215324401855

Token 1117: '=current' (ID: 157475)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08266106992959976
    2. '=current' → logprob: -2.5826611518859863
    3. ' =' → logprob: -5.582661151885986
    4. '=
' → logprob: -13.582660675048828
    5. '=

' → logprob: -15.582660675048828
    6. '=n' → logprob: -17.082660675048828
    7. '＝' → logprob: -17.457660675048828
    8. '   ' → logprob: -17.707660675048828
    9. '=`' → logprob: -17.957660675048828
    10. ' current' → logprob: -17.957660675048828

Token 1118: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.566264295950532e-05
    2. ' -' → logprob: -9.375085830688477
    3. '-
' → logprob: -15.250085830688477
    4. '1' → logprob: -15.250085830688477
    5. '```' → logprob: -16.250085830688477
    6. '[' → logprob: -16.500085830688477
    7. '−' → logprob: -16.875085830688477
    8. '()-' → logprob: -17.500085830688477
    9. '–' → logprob: -17.875085830688477
    10. ' ' → logprob: -18.125085830688477

Token 1119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -14.750000953674316
    3. '   ' → logprob: -18.0
    4. ' ' → logprob: -18.1875
    5. '۱' → logprob: -18.5
    6. '-' → logprob: -18.875
    7. '<|end|>' → logprob: -19.1875
    8. '           ' → logprob: -19.375
    9. '१' → logprob: -19.375
    10. '       ' → logprob: -19.4375

Token 1120: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17367437481880188
    2. 'else' → logprob: -2.1736743450164795
    3. 'elif' → logprob: -3.5486743450164795
    4. ' else' → logprob: -4.173674583435059
    5. ' elif' → logprob: -7.423674583435059
    6. '<|end|>' → logprob: -7.423674583435059
    7. '.' → logprob: -9.798674583435059
    8. '       ' → logprob: -10.048674583435059
    9. '<|end|>' → logprob: -10.173674583435059
    10. '               ' → logprob: -10.298674583435059

Token 1121: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3037256896495819
    2. '           ' → logprob: -2.0537257194519043
    3. 'elif' → logprob: -2.1787257194519043
    4. ' else' → logprob: -3.9287257194519043
    5. ' elif' → logprob: -7.428725719451904
    6. '<|end|>' → logprob: -9.053725242614746
    7. '```' → logprob: -10.803725242614746
    8. '       ' → logprob: -10.803725242614746
    9. '   ' → logprob: -10.928725242614746
    10. '               ' → logprob: -11.428725242614746

Token 1122: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07993010431528091
    2. '           ' → logprob: -3.079930067062378
    3. 'elif' → logprob: -3.579930067062378
    4. ' else' → logprob: -5.829930305480957
    5. ' elif' → logprob: -10.204930305480957
    6. 'el' → logprob: -13.454930305480957
    7. '       ' → logprob: -13.954930305480957
    8. '	else' → logprob: -15.204930305480957
    9. '```' → logprob: -15.704930305480957
    10. '		' → logprob: -15.954930305480957

Token 1123: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.01981007494032383
    2. 'elif' → logprob: -4.269810199737549
    3. ' else' → logprob: -5.394810199737549
    4. '           ' → logprob: -7.019810199737549
    5. 'if' → logprob: -9.01980972290039
    6. ' elif' → logprob: -9.51980972290039
    7. '
' → logprob: -14.64480972290039
    8. 'el' → logprob: -14.76980972290039
    9. '	else' → logprob: -14.76980972290039
    10. '       ' → logprob: -14.76980972290039

Token 1124: ' Rule' (ID: 32118)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5431151390075684
    2. ' if' → logprob: -0.9181151390075684
    3. ':
' → logprob: -4.668115139007568
    4. '           ' → logprob: -5.043115139007568
    5. ':' → logprob: -5.918115139007568
    6. '            ' → logprob: -8.168115615844727
    7. '               ' → logprob: -8.168115615844727
    8. '   ' → logprob: -8.668115615844727
    9. 'elif' → logprob: -8.793115615844727
    10. '       ' → logprob: -9.168115615844727

Token 1125: '3' (ID: 18)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.16275382041931152
    2. 'elif' → logprob: -2.2877538204193115
    3. ' if' → logprob: -3.4127538204193115
    4. '4' → logprob: -4.662754058837891
    5. 'if' → logprob: -5.912754058837891
    6. ' ' → logprob: -6.537754058837891
    7. '           ' → logprob: -7.162754058837891
    8. ' else' → logprob: -7.787754058837891
    9. '   ' → logprob: -7.912754058837891
    10. '       ' → logprob: -8.53775405883789

Token 1126: ' &' (ID: 827)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.4781171977519989
    2. ' elif' → logprob: -0.9781172275543213
    3. 'if' → logprob: -6.103116989135742
    4. ':' → logprob: -7.728116989135742
    5. 'else' → logprob: -7.728116989135742
    6. ' if' → logprob: -7.728116989135742
    7. '           ' → logprob: -8.103116989135742
    8. ' else' → logprob: -9.353116989135742
    9. '=' → logprob: -10.478116989135742
    10. 'el' → logprob: -10.853116989135742

Token 1127: '2' (ID: 17)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7865355610847473
    2. 'if' → logprob: -0.9115355610847473
    3. ' continue' → logprob: -2.7865355014801025
    4. 'elif' → logprob: -3.0365355014801025
    5. ' elif' → logprob: -4.911535739898682
    6. '#' → logprob: -5.161535739898682
    7. ' current' → logprob: -5.411535739898682
    8. ' (' → logprob: -5.786535739898682
    9. 'continue' → logprob: -5.911535739898682
    10. 'else' → logprob: -6.536535739898682

Token 1128: ' &' (ID: 827)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5128576755523682
    2. 'elif' → logprob: -1.5128576755523682
    3. 'else' → logprob: -2.262857675552368
    4. ' elif' → logprob: -2.887857675552368
    5. ' else' → logprob: -3.887857675552368
    6. ':' → logprob: -8.887857437133789
    7. '       ' → logprob: -9.137857437133789
    8. ' =' → logprob: -9.887857437133789
    9. 'el' → logprob: -10.137857437133789
    10. ',' → logprob: -10.262857437133789

Token 1129: '1' (ID: 16)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8580448627471924
    2. '1' → logprob: -1.6080448627471924
    3. 'nbsp' → logprob: -1.9830448627471924
    4. '#' → logprob: -2.7330448627471924
    5. 'elif' → logprob: -2.7330448627471924
    6. ' else' → logprob: -3.7330448627471924
    7. '4' → logprob: -4.108044624328613
    8. ' continue' → logprob: -4.483044624328613
    9. ' ' → logprob: -4.733044624328613
    10. '&' → logprob: -5.108044624328613

Token 1130: ' combined' (ID: 15890)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34640952944755554
    2. 'else' → logprob: -1.471409559249878
    3. ' else' → logprob: -3.346409559249878
    4. 'elif' → logprob: -3.721409559249878
    5. ' elif' → logprob: -5.596409320831299
    6. ':' → logprob: -11.846409797668457
    7. '       ' → logprob: -12.221409797668457
    8. '          ' → logprob: -12.221409797668457
    9. '	elif' → logprob: -12.346409797668457
    10. ':
' → logprob: -12.846409797668457

Token 1131: ':
' (ID: 734)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4474360942840576
    2. '           ' → logprob: -1.3224360942840576
    3. ' else' → logprob: -2.6974360942840576
    4. 'elif' → logprob: -3.6974360942840576
    5. ' elif' → logprob: -6.197436332702637
    6. '       ' → logprob: -11.447436332702637
    7. '   ' → logprob: -12.197436332702637
    8. '	else' → logprob: -12.572436332702637
    9. '
' → logprob: -12.697436332702637
    10. '		' → logprob: -12.697436332702637

Token 1132: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7216221690177917
    2. 'else' → logprob: -0.7216221690177917
    3. ' else' → logprob: -3.9716222286224365
    4. 'elif' → logprob: -4.721621990203857
    5. ' elif' → logprob: -8.221622467041016
    6. '```' → logprob: -11.096622467041016
    7. '       ' → logprob: -11.221622467041016
    8. 'if' → logprob: -11.971622467041016
    9. '	       ' → logprob: -12.096622467041016
    10. '            ' → logprob: -12.846622467041016

Token 1133: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.03868015110492706
    2. '           ' → logprob: -4.038680076599121
    3. ' else' → logprob: -4.538680076599121
    4. 'elif' → logprob: -4.663680076599121
    5. ' elif' → logprob: -9.038680076599121
    6. 'if' → logprob: -9.538680076599121
    7. '       ' → logprob: -13.163680076599121
    8. '            ' → logprob: -13.413680076599121
    9. '```' → logprob: -13.538680076599121
    10. ' if' → logprob: -13.663680076599121

Token 1134: ' if' (ID: 538)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1992010474205017
    2. '           ' → logprob: -2.0742011070251465
    3. 'elif' → logprob: -3.1992011070251465
    4. 'if' → logprob: -4.8242011070251465
    5. ' else' → logprob: -5.1992011070251465
    6. ' elif' → logprob: -7.9492011070251465
    7. ' if' → logprob: -8.699200630187988
    8. '       ' → logprob: -10.574200630187988
    9. '   ' → logprob: -11.449200630187988
    10. '```' → logprob: -11.574200630187988

Token 1135: ' current' (ID: 2208)
  Prédit: 'jm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jm' → logprob: -0.2917300760746002
    2. ' jm' → logprob: -2.2917301654815674
    3. 'current' → logprob: -2.5417301654815674
    4. ' current' → logprob: -3.4167301654815674
    5. 'jump' → logprob: -3.6667301654815674
    6. 'n' → logprob: -5.041729927062988
    7. ' jump' → logprob: -5.541729927062988
    8. 'jmp' → logprob: -6.291729927062988
    9. '   ' → logprob: -6.791729927062988
    10. 'next' → logprob: -8.291729927062988

Token 1136: ' letter' (ID: 10263)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -1.2408311367034912
    2. '+' → logprob: -1.9908311367034912
    3. '_jump' → logprob: -2.490831136703491
    4. '>=' → logprob: -2.740831136703491
    5. ' !=' → logprob: -2.865831136703491
    6. '_marks' → logprob: -2.990831136703491
    7. 'in' → logprob: -3.365831136703491
    8. 'jump' → logprob: -3.365831136703491
    9. '_mark' → logprob: -3.615831136703491
    10. ' in' → logprob: -3.740831136703491

Token 1137: ' has' (ID: 853)
  Prédit: '_jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_jump' → logprob: -1.0480817556381226
    2. 'jump' → logprob: -2.048081874847412
    3. 'has' → logprob: -2.423081874847412
    4. ' in' → logprob: -2.423081874847412
    5. '_has' → logprob: -2.548081874847412
    6. 'in' → logprob: -2.923081874847412
    7. '
' → logprob: -3.173081874847412
    8. ' has' → logprob: -3.798081874847412
    9. '_j' → logprob: -3.798081874847412
    10. ')' → logprob: -4.173081874847412

Token 1138: ' jump' (ID: 13843)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.25903332233428955
    2. ' jump' → logprob: -1.7590333223342896
    3. 'jm' → logprob: -3.134033203125
    4. ' jm' → logprob: -5.509033203125
    5. '_jump' → logprob: -5.759033203125
    6. 'None' → logprob: -6.259033203125
    7. ' None' → logprob: -6.884033203125
    8. 'jmp' → logprob: -7.634033203125
    9. ' (' → logprob: -8.259033203125
    10. 'not' → logprob: -8.634033203125

Token 1139: ' mark' (ID: 1983)
  Prédit: '_marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_marks' → logprob: -0.0061059435829520226
    2. '_mark' → logprob: -5.131105899810791
    3. 'marks' → logprob: -9.50610637664795
    4. 'mark' → logprob: -10.38110637664795
    5. '           ' → logprob: -10.50610637664795
    6. '```' → logprob: -12.00610637664795
    7. '_' → logprob: -12.38110637664795
    8. '[' → logprob: -12.50610637664795
    9. ' marks' → logprob: -12.75610637664795
    10. ' Marks' → logprob: -12.88110637664795

Token 1140: ' (' (ID: 350)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.14672259986400604
    2. 'is' → logprob: -2.0217225551605225
    3. 'and' → logprob: -6.021722793579102
    4. ' and' → logprob: -6.521722793579102
    5. '!=' → logprob: -10.271722793579102
    6. '           ' → logprob: -11.021722793579102
    7. '[' → logprob: -11.021722793579102
    8. '```' → logprob: -11.521722793579102
    9. '!=(' → logprob: -11.521722793579102
    10. ' !=' → logprob: -11.771722793579102

Token 1141: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2846229374408722
    2. 'current' → logprob: -1.5346229076385498
    3. '(current' → logprob: -4.534623146057129
    4. 'jm' → logprob: -5.409623146057129
    5. '0' → logprob: -5.909623146057129
    6. ' current' → logprob: -6.159623146057129
    7. ')' → logprob: -6.534623146057129
    8. 'None' → logprob: -6.534623146057129
    9. '(t' → logprob: -6.659623146057129
    10. '[' → logprob: -7.034623146057129

Token 1142: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0846662521362305
    2. ',current' → logprob: -1.3346662521362305
    3. ' is' → logprob: -1.9596662521362305
    4. '[' → logprob: -2.7096662521362305
    5. ')' → logprob: -2.8346662521362305
    6. ',n' → logprob: -3.3346662521362305
    7. ',j' → logprob: -3.4596662521362305
    8. 'is' → logprob: -3.7096662521362305
    9. 'current' → logprob: -4.9596662521362305
    10. '
' → logprob: -5.2096662521362305

Token 1143: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03880332037806511
    2. '):
' → logprob: -3.5388033390045166
    3. '):' → logprob: -5.6638031005859375
    4. ' and' → logprob: -6.5388031005859375
    5. ',' → logprob: -6.7888031005859375
    6. '),' → logprob: -7.4138031005859375
    7. ' is' → logprob: -7.5388031005859375
    8. '           ' → logprob: -7.9138031005859375
    9. ')!=' → logprob: -8.538803100585938
    10. '[' → logprob: -9.038803100585938

Token 1144: ' n' (ID: 297)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.17555171251296997
    2. 'if' → logprob: -3.050551652908325
    3. '           ' → logprob: -3.175551652908325
    4. ' t' → logprob: -3.300551652908325
    5. ' if' → logprob: -4.175551891326904
    6. 'n' → logprob: -4.300551891326904
    7. ' n' → logprob: -6.550551891326904
    8. '(t' → logprob: -6.675551891326904
    9. '               ' → logprob: -7.300551891326904
    10. ' (' → logprob: -8.175551414489746

Token 1145: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.007025445811450481
    2. ' >=' → logprob: -5.632025241851807
    3. '[' → logprob: -6.507025241851807
    4. '>' → logprob: -7.132025241851807
    5. '=' → logprob: -8.257025718688965
    6. ' is' → logprob: -8.382025718688965
    7. ')>=' → logprob: -8.632025718688965
    8. ']>=' → logprob: -8.882025718688965
    9. '≥' → logprob: -9.632025718688965
    10. '=None' → logprob: -9.882025718688965

Token 1146: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000650125031825155
    2. ' ' → logprob: -7.375649929046631
    3. '>=' → logprob: -11.625650405883789
    4. '   ' → logprob: -12.000650405883789
    5. '=' → logprob: -12.750650405883789
    6. '```' → logprob: -13.000650405883789
    7. '           ' → logprob: -14.000650405883789
    8. '>' → logprob: -14.500650405883789
    9. '  ' → logprob: -14.750650405883789
    10. ' >=' → logprob: -15.000650405883789

Token 1147: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5426604747772217
    2. ':
' → logprob: -1.5426604747772217
    3. '           ' → logprob: -2.2926604747772217
    4. ':' → logprob: -2.5426604747772217
    5. 'and' → logprob: -4.167660713195801
    6. '               ' → logprob: -5.417660713195801
    7. '=' → logprob: -6.667660713195801
    8. ' =' → logprob: -7.042660713195801
    9. '[' → logprob: -7.542660713195801
    10. ',' → logprob: -7.667660713195801

Token 1148: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.27095499634742737
    2. '           ' → logprob: -1.770954966545105
    3. ':' → logprob: -3.3959550857543945
    4. ':
' → logprob: -3.8959550857543945
    5. 'and' → logprob: -4.7709550857543945
    6. '[' → logprob: -6.5209550857543945
    7. ' =' → logprob: -6.8959550857543945
    8. ',' → logprob: -8.020955085754395
    9. ' ==' → logprob: -8.020955085754395
    10. '               ' → logprob: -8.145955085754395

Token 1149: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05165254324674606
    2. ' if' → logprob: -3.676652431488037
    3. ' elif' → logprob: -5.176652431488037
    4. ' and' → logprob: -5.676652431488037
    5. 'elif' → logprob: -6.301652431488037
    6. '[' → logprob: -6.301652431488037
    7. 'if' (adapté à ' if') → logprob: -6.426652431488037
    8. ' else' → logprob: -6.676652431488037
    9. '		' → logprob: -6.926652431488037
    10. ' =' → logprob: -6.926652431488037

Token 1150: ' nxt' (ID: 160200)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.18560895323753357
    2. 'jm' → logprob: -2.0606088638305664
    3. ' jump' → logprob: -3.8106088638305664
    4. 'current' → logprob: -4.310608863830566
    5. ' jm' → logprob: -5.435608863830566
    6. '   ' → logprob: -6.935608863830566
    7. ' current' → logprob: -7.435608863830566
    8. 'jmp' → logprob: -8.435608863830566
    9. ' ' → logprob: -8.685608863830566
    10. '    ' → logprob: -10.310608863830566

Token 1151: '==-' (ID: 116197)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.053895872086286545
    2. ' ==' → logprob: -3.428895950317383
    3. '!=' → logprob: -4.553895950317383
    4. ' is' → logprob: -5.053895950317383
    5. 'is' → logprob: -7.053895950317383
    6. '=current' → logprob: -7.428895950317383
    7. '=' → logprob: -7.553895950317383
    8. ' !=' → logprob: -7.678895950317383
    9. 'current' → logprob: -8.803895950317383
    10. '==-' → logprob: -8.928895950317383

Token 1152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.875001907348633
    3. '2' → logprob: -15.375001907348633
    4. '```' → logprob: -17.062501907348633
    5. ',' → logprob: -17.125001907348633
    6. '0' → logprob: -17.250001907348633
    7. '   ' → logprob: -17.937501907348633
    8. '           ' → logprob: -19.000001907348633
    9. '=' → logprob: -19.437501907348633
    10. '
' → logprob: -19.437501907348633

Token 1153: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0441034771502018
    2. ':
' → logprob: -3.9191033840179443
    3. ':' → logprob: -4.169103622436523
    4. 'and' → logprob: -5.169103622436523
    5. '           ' → logprob: -6.419103622436523
    6. '               ' → logprob: -9.044103622436523
    7. '       ' → logprob: -9.044103622436523
    8. '   ' → logprob: -9.169103622436523
    9. '	and' → logprob: -9.794103622436523
    10. '<|end|>' → logprob: -10.794103622436523

Token 1154: ' jm' (ID: 178927)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.13004085421562195
    2. 'jm' → logprob: -2.3800408840179443
    3. ' jump' → logprob: -4.005040645599365
    4. 'current' → logprob: -5.255040645599365
    5. ' jm' → logprob: -5.505040645599365
    6. '   ' → logprob: -7.255040645599365
    7. ' current' → logprob: -7.880040645599365
    8. ' ' → logprob: -7.880040645599365
    9. 'jmp' → logprob: -8.630041122436523
    10. '(j' → logprob: -10.005041122436523

Token 1155: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.42960578203201294
    2. ' is' → logprob: -1.0546057224273682
    3. '[' → logprob: -7.304605960845947
    4. ')' → logprob: -8.929605484008789
    5. '!=' → logprob: -10.304605484008789
    6. ')is' → logprob: -11.179605484008789
    7. '):
' → logprob: -11.679605484008789
    8. '	is' → logprob: -12.054605484008789
    9. '!=(' → logprob: -12.054605484008789
    10. ':' → logprob: -12.679605484008789

Token 1156: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.16023144125938416
    2. ' not' → logprob: -1.9102314710617065
    3. '   ' → logprob: -13.285231590270996
    4. 'Not' → logprob: -13.285231590270996
    5. '	not' → logprob: -13.660231590270996
    6. ')' → logprob: -14.410231590270996
    7. '               ' → logprob: -15.410231590270996
    8. 'None' → logprob: -15.410231590270996
    9. '[' → logprob: -15.535231590270996
    10. ' ' → logprob: -15.660231590270996

Token 1157: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.39667898416519165
    2. 'not' → logprob: -1.1466789245605469
    3. ' None' → logprob: -5.271678924560547
    4. ' not' → logprob: -5.396678924560547
    5. '(None' → logprob: -9.896678924560547
    6. 'Not' → logprob: -11.271678924560547
    7. '   ' → logprob: -11.646678924560547
    8. '```' → logprob: -12.021678924560547
    9. 'none' → logprob: -12.396678924560547
    10. '_None' → logprob: -12.896678924560547

Token 1158: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02773619443178177
    2. 'and' → logprob: -3.902736186981201
    3. '               ' → logprob: -5.902736186981201
    4. ':' → logprob: -6.027736186981201
    5. ':
' → logprob: -7.277736186981201
    6. '           ' → logprob: -7.652736186981201
    7. '[' → logprob: -7.902736186981201
    8. '	and' → logprob: -8.90273666381836
    9. '<|end|>' → logprob: -9.40273666381836
    10. ',' → logprob: -9.52773666381836

Token 1159: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07343282550573349
    2. '[' → logprob: -4.198432922363281
    3. '           ' → logprob: -4.323432922363281
    4. '<|end|>' → logprob: -4.448432922363281
    5. '	       ' → logprob: -5.073432922363281
    6. ' and' → logprob: -5.448432922363281
    7. '	           ' → logprob: -5.448432922363281
    8. ' if' → logprob: -5.823432922363281
    9. '(n' → logprob: -5.948432922363281
    10. '       ' → logprob: -6.573432922363281

Token 1160: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.05400306358933449
    2. ' t' → logprob: -3.5540030002593994
    3. '               ' → logprob: -4.1790032386779785
    4. '                   ' → logprob: -6.0540032386779785
    5. '           ' → logprob: -6.3040032386779785
    6. 'token' → logprob: -6.8040032386779785
    7. '(t' → logprob: -6.9290032386779785
    8. '	t' → logprob: -6.9290032386779785
    9. '   ' → logprob: -7.4290032386779785
    10. 'if' → logprob: -8.30400276184082

Token 1161: ',n' (ID: 18103)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22835151851177216
    2. ' =' → logprob: -2.228351593017578
    3. '=t' → logprob: -3.228351593017578
    4. '=j' → logprob: -3.478351593017578
    5. '=n' → logprob: -4.103351593017578
    6. ',' → logprob: -5.728351593017578
    7. ',j' → logprob: -6.228351593017578
    8. ',n' → logprob: -6.603351593017578
    9. ',t' → logprob: -6.603351593017578
    10. '=current' → logprob: -6.853351593017578

Token 1162: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20725642144680023
    2. '=t' → logprob: -2.832256317138672
    3. '=n' → logprob: -2.957256317138672
    4. '=current' → logprob: -3.082256317138672
    5. ' =' → logprob: -3.582256317138672
    6. '=j' → logprob: -6.332256317138672
    7. ',t' → logprob: -8.707256317138672
    8. ',n' → logprob: -8.957256317138672
    9. ',current' → logprob: -9.207256317138672
    10. 't' → logprob: -9.332256317138672

Token 1163: 'jm' (ID: 69493)
  Prédit: 'jm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jm' → logprob: -0.03804768621921539
    2. ' jm' → logprob: -3.2880477905273438
    3. '   ' → logprob: -13.163047790527344
    4. 'jmp' → logprob: -13.788047790527344
    5. 'jump' → logprob: -14.288047790527344
    6. 'j' → logprob: -14.413047790527344
    7. '(j' → logprob: -14.788047790527344
    8. '    ' → logprob: -15.163047790527344
    9. ' ' → logprob: -15.163047790527344
    10. 'jn' → logprob: -15.288047790527344

Token 1164: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4665365517139435
    2. '[current' → logprob: -1.716536521911621
    3. '[j' → logprob: -2.216536521911621
    4. '[' → logprob: -3.716536521911621
    5. 'current' → logprob: -3.841536521911621
    6. 't' → logprob: -4.591536521911621
    7. '_current' → logprob: -5.341536521911621
    8. ' current' → logprob: -5.841536521911621
    9. '<|end|>' → logprob: -5.966536521911621
    10. 'jm' → logprob: -6.091536521911621

Token 1165: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16444337368011475
    2. '               ' → logprob: -2.7894434928894043
    3. ' if' → logprob: -3.5394434928894043
    4. '
' → logprob: -4.289443492889404
    5. '<|end|>' → logprob: -4.664443492889404
    6. '            
' → logprob: -5.164443492889404
    7. '	       ' → logprob: -5.539443492889404
    8. '   ' → logprob: -5.539443492889404
    9. '	           ' → logprob: -5.914443492889404
    10. '       ' → logprob: -6.039443492889404

Token 1166: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01722424104809761
    2. '               ' → logprob: -4.642224311828613
    3. 'key' → logprob: -6.017224311828613
    4. 'next' → logprob: -6.142224311828613
    5. '#' → logprob: -7.267224311828613
    6. 'pos' → logprob: -7.517224311828613
    7. 'n' → logprob: -7.642224311828613
    8. '           ' → logprob: -8.017224311828613
    9. ' if' → logprob: -8.017224311828613
    10. 'candidate' → logprob: -9.142224311828613

Token 1167: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003461905289441347
    2. ' n' → logprob: -8.500346183776855
    3. '   ' → logprob: -9.250346183776855
    4. '	n' → logprob: -11.500346183776855
    5. 'current' → logprob: -11.750346183776855
    6. 'next' → logprob: -12.250346183776855
    7. '       ' → logprob: -12.250346183776855
    8. '           ' → logprob: -12.750346183776855
    9. '     ' → logprob: -13.125346183776855
    10. '    ' → logprob: -13.125346183776855

Token 1168: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.004857172723859549
    2. '==' → logprob: -6.254857063293457
    3. ' >=' → logprob: -6.879857063293457
    4. '>' → logprob: -7.129857063293457
    5. '2' → logprob: -7.504857063293457
    6. '<' → logprob: -8.004857063293457
    7. '<=' → logprob: -9.629857063293457
    8. '1' → logprob: -9.629857063293457
    9. '!=' → logprob: -10.754857063293457
    10. '=' → logprob: -11.379857063293457

Token 1169: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -13.000004768371582
    3. '   ' → logprob: -13.875004768371582
    4. '```' → logprob: -13.875004768371582
    5. '1' → logprob: -15.875004768371582
    6. '       ' → logprob: -16.625003814697266
    7. '           ' → logprob: -16.750003814697266
    8. '3' → logprob: -16.875003814697266
    9. '               ' → logprob: -17.437503814697266
    10. '  ' → logprob: -17.625003814697266

Token 1170: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4371398985385895
    2. ' and' → logprob: -1.312139868736267
    3. ':' → logprob: -2.9371399879455566
    4. '                   ' → logprob: -3.9371399879455566
    5. 'and' → logprob: -5.062139987945557
    6. '               ' → logprob: -5.187139987945557
    7. '           ' → logprob: -8.937139511108398
    8. ' or' → logprob: -9.687139511108398
    9. '==' → logprob: -10.312139511108398
    10. 'n' → logprob: -10.437139511108398

Token 1171: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0058804405853152275
    2. '               ' → logprob: -6.005880355834961
    3. 'n' → logprob: -6.380880355834961
    4. ':
' → logprob: -7.755880355834961
    5. '                       ' → logprob: -8.130880355834961
    6. '   ' → logprob: -8.255880355834961
    7. '           ' → logprob: -8.755880355834961
    8. ' nxt' → logprob: -8.880880355834961
    9. '
' → logprob: -9.255880355834961
    10. '```' → logprob: -9.505880355834961

Token 1172: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07802318036556244
    2. '                   ' → logprob: -2.8280231952667236
    3. 'pass' → logprob: -4.9530229568481445
    4. 'current' → logprob: -5.2030229568481445
    5. '               ' → logprob: -6.8280229568481445
    6. '#' (adapté à ' #') → logprob: -7.3280229568481445
    7. 'next' → logprob: -7.7030229568481445
    8. 'for' → logprob: -8.328022956848145
    9. '   ' → logprob: -8.453022956848145
    10. 'if' → logprob: -8.703022956848145

Token 1173: ' letter' (ID: 10263)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0707320049405098
    2. '#' → logprob: -3.5707321166992188
    3. 'pass' → logprob: -4.195732116699219
    4. '                   ' → logprob: -4.445732116699219
    5. '               ' → logprob: -5.320732116699219
    6. 'if' → logprob: -5.695732116699219
    7. 'current' → logprob: -6.570732116699219
    8. 'next' → logprob: -6.695732116699219
    9. 'for' → logprob: -6.945732116699219
    10. 'pos' → logprob: -8.195732116699219

Token 1174: ' with' (ID: 483)
  Prédit: '=n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=n' → logprob: -1.151051640510559
    2. '=' → logprob: -1.651051640510559
    3. ' =' → logprob: -1.776051640510559
    4. 'n' → logprob: -1.901051640510559
    5. 's' → logprob: -3.0260515213012695
    6. '=-' → logprob: -3.2760515213012695
    7. 't' → logprob: -4.0260515213012695
    8. 'skip' → logprob: -4.4010515213012695
    9. 'next' → logprob: -4.6510515213012695
    10. '               ' → logprob: -4.6510515213012695

Token 1175: ' jump' (ID: 13843)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35264500975608826
    2. ' n' → logprob: -2.227644920349121
    3. '1' → logprob: -2.977644920349121
    4. 'number' → logprob: -2.977644920349121
    5. 'jump' → logprob: -3.102644920349121
    6. ' jump' → logprob: -4.102644920349121
    7. ' number' → logprob: -5.352644920349121
    8. 'None' → logprob: -5.727644920349121
    9. 'skip' → logprob: -5.852644920349121
    10. '#' → logprob: -5.852644920349121

Token 1176: ' mark' (ID: 1983)
  Prédit: '_marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_marks' → logprob: -0.03668397292494774
    2. ' mark' → logprob: -4.161684036254883
    3. '_mark' → logprob: -4.536684036254883
    4. 'mark' → logprob: -5.286684036254883
    5. 'marks' → logprob: -6.411684036254883
    6. ' _' → logprob: -7.286684036254883
    7. ' marks' → logprob: -7.661684036254883
    8. ' n' → logprob: -8.036684036254883
    9. '_' → logprob: -8.286684036254883
    10. ')' → logprob: -8.661684036254883

Token 1177: ' number' (ID: 2086)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.7093026638031006
    2. 'sk' → logprob: -1.9593026638031006
    3. ' with' → logprob: -2.3343026638031006
    4. 'skip' → logprob: -2.3343026638031006
    5. 'with' → logprob: -2.9593026638031006
    6. ' (' → logprob: -3.2093026638031006
    7. 'number' → logprob: -3.2093026638031006
    8. 'n' → logprob: -3.3343026638031006
    9. ' is' → logprob: -3.4593026638031006
    10. ' =' → logprob: -3.4593026638031006

Token 1178: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.07057315856218338
    2. ' >=' → logprob: -3.195573091506958
    3. '=' → logprob: -4.070573329925537
    4. ')' → logprob: -6.070573329925537
    5. '==' → logprob: -6.320573329925537
    6. 'skip' → logprob: -6.445573329925537
    7. ' skipped' → logprob: -6.945573329925537
    8. ')>=' → logprob: -7.695573329925537
    9. ']>=' → logprob: -7.945573329925537
    10. '_skip' → logprob: -8.320572853088379

Token 1179: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006375004886649549
    2. ' ' → logprob: -7.500637531280518
    3. '3' → logprob: -9.62563705444336
    4. '   ' → logprob: -12.00063705444336
    5. '```' → logprob: -12.00063705444336
    6. '=' → logprob: -13.25063705444336
    7. '1' → logprob: -13.87563705444336
    8. '
' → logprob: -14.00063705444336
    9. '  ' → logprob: -14.75063705444336
    10. '`' → logprob: -14.87563705444336

Token 1180: ' must' (ID: 2804)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.2836716175079346
    2. ':
' → logprob: -1.6586716175079346
    3. 'continue' → logprob: -2.1586716175079346
    4. '=' → logprob: -2.4086716175079346
    5. '=n' → logprob: -2.5336716175079346
    6. ' continue' → logprob: -2.9086716175079346
    7. '               ' → logprob: -3.2836716175079346
    8. ':' → logprob: -3.4086716175079346
    9. ' =' → logprob: -3.6586716175079346
    10. 'n' → logprob: -3.9086716175079346

Token 1181: ' be' (ID: 413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7016906142234802
    2. 'skip' → logprob: -1.951690673828125
    3. '=-' → logprob: -2.076690673828125
    4. '+=' → logprob: -2.201690673828125
    5. 'continue' → logprob: -2.701690673828125
    6. 'n' → logprob: -3.701690673828125
    7. '=n' → logprob: -5.076690673828125
    8. '-=' → logprob: -5.201690673828125
    9. ' continue' → logprob: -6.076690673828125
    10. 'not' → logprob: -6.201690673828125

Token 1182: ' skipped' (ID: 72521)
  Prédit: 'sk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sk' → logprob: -0.12102539092302322
    2. 'skip' → logprob: -2.496025323867798
    3. ' skipped' → logprob: -3.871025323867798
    4. '-' → logprob: -5.996025562286377
    5. 'current' → logprob: -6.371025562286377
    6. '1' → logprob: -6.496025562286377
    7. 'Skipped' → logprob: -6.871025562286377
    8. '-sk' → logprob: -6.871025562286377
    9. '```' → logprob: -7.121025562286377
    10. '0' → logprob: -7.746025562286377

Token 1183: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0787205621600151
    2. ':
' → logprob: -3.5787205696105957
    3. '
' → logprob: -4.078720569610596
    4. '               ' → logprob: -4.703720569610596
    5. ' and' → logprob: -5.578720569610596
    6. ' or' → logprob: -6.078720569610596
    7. ',' → logprob: -6.078720569610596
    8. ':' → logprob: -6.078720569610596
    9. '                       ' → logprob: -6.328720569610596
    10. 'n' → logprob: -6.953720569610596

Token 1184: 'already' (ID: 89136)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.1507377624511719
    2. ')' → logprob: -1.7757377624511719
    3. ' pass' → logprob: -2.150737762451172
    4. ' nxt' → logprob: -2.275737762451172
    5. 'n' → logprob: -2.400737762451172
    6. ')
' → logprob: -3.150737762451172
    7. '):
' → logprob: -4.150737762451172
    8. ' continue' → logprob: -4.400737762451172
    9. '```' → logprob: -4.400737762451172
    10. ' next' → logprob: -4.525737762451172

Token 1185: ' skipped' (ID: 72521)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.2099737972021103
    2. '           ' → logprob: -3.7099738121032715
    3. ' read' → logprob: -3.8349738121032715
    4. 'marked' → logprob: -4.0849738121032715
    5. 'handled' → logprob: -4.2099738121032715
    6. 'checked' → logprob: -4.4599738121032715
    7. '               ' → logprob: -4.7099738121032715
    8. '   ' → logprob: -4.7099738121032715
    9. 'sk' → logprob: -4.7099738121032715
    10. ')' → logprob: -5.0849738121032715

Token 1186: ' before' (ID: 2254)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.240899458527565
    2. ')
' → logprob: -1.7408994436264038
    3. '                   ' → logprob: -3.4908995628356934
    4. '               ' → logprob: -5.865899562835693
    5. '           ' → logprob: -6.115899562835693
    6. '```' → logprob: -6.865899562835693
    7. 'continue' → logprob: -8.115899085998535
    8. ',' → logprob: -8.365899085998535
    9. ' at' → logprob: -8.365899085998535
    10. ' in' → logprob: -8.490899085998535

Token 1187: ' reading' (ID: 6085)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3769212067127228
    2. ')' → logprob: -1.6269211769104004
    3. '),' → logprob: -3.7519211769104004
    4. ',' → logprob: -3.8769211769104004
    5. '                   ' → logprob: -4.0019211769104
    6. '               ' → logprob: -4.1269211769104
    7. 'continue' → logprob: -4.6269211769104
    8. 'in' → logprob: -4.8769211769104
    9. '):
' → logprob: -5.0019211769104
    10. '```' → logprob: -5.7519211769104

Token 1188: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4909844994544983
    2. ')
' → logprob: -0.9909844994544983
    3. '                   ' → logprob: -4.9909844398498535
    4. '),' → logprob: -5.4909844398498535
    5. ',' → logprob: -5.7409844398498535
    6. '               ' → logprob: -7.1159844398498535
    7. ').' → logprob: -7.8659844398498535
    8. '```' → logprob: -7.8659844398498535
    9. '
' → logprob: -7.9909844398498535
    10. '):
' → logprob: -8.365984916687012

Token 1189: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11577104777097702
    2. '               ' → logprob: -3.6157710552215576
    3. ':' → logprob: -3.8657710552215576
    4. '<|end|>' → logprob: -4.2407708168029785
    5. '
' → logprob: -4.4907708168029785
    6. ')' → logprob: -4.9907708168029785
    7. ':
' → logprob: -5.2407708168029785
    8. '                       ' → logprob: -5.6157708168029785
    9. '<|end|>' → logprob: -5.6157708168029785
    10. ',' → logprob: -6.3657708168029785

Token 1190: ' #' (ID: 1069)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.06486089527606964
    2. ' pass' → logprob: -2.9398608207702637
    3. 'n' → logprob: -5.064860820770264
    4. '                   ' → logprob: -5.689860820770264
    5. 'continue' → logprob: -9.189861297607422
    6. '               ' → logprob: -9.689861297607422
    7. '#' (adapté à ' #') → logprob: -10.439861297607422
    8. 'current' → logprob: -12.189861297607422
    9. '```' → logprob: -12.189861297607422
    10. '                       ' → logprob: -12.439861297607422

Token 1191: ' no' (ID: 860)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.043767161667346954
    2. 'n' → logprob: -3.168767213821411
    3. ' pass' → logprob: -7.668766975402832
    4. '#' → logprob: -8.793766975402832
    5. '                   ' → logprob: -10.043766975402832
    6. 'continue' → logprob: -10.168766975402832
    7. 'current' → logprob: -10.668766975402832
    8. '               ' → logprob: -10.918766975402832
    9. 'next' → logprob: -11.918766975402832
    10. '           ' → logprob: -12.168766975402832

Token 1192: ' action' (ID: 3736)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.15559928119182587
    2. 'n' → logprob: -2.405599355697632
    3. 'elif' → logprob: -4.405599117279053
    4. 'change' → logprob: -5.155599117279053
    5. 'else' → logprob: -5.405599117279053
    6. 'op' → logprob: -5.530599117279053
    7. ' action' → logprob: -5.780599117279053
    8. 'action' → logprob: -5.780599117279053
    9. 'continue' → logprob: -5.780599117279053
    10. '#' → logprob: -5.905599117279053

Token 1193: ' needed' (ID: 6118)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.081657886505127
    2. '               ' → logprob: -1.331657886505127
    3. 'continue' → logprob: -2.331657886505127
    4. '\n' → logprob: -2.331657886505127
    5. ' continue' → logprob: -3.081657886505127
    6. '                   ' → logprob: -3.206657886505127
    7. '           ' → logprob: -3.581657886505127
    8. '#' → logprob: -3.831657886505127
    9. 'else' → logprob: -4.456657886505127
    10. '<|end|>' → logprob: -4.456657886505127

Token 1194: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.788914144039154
    2. '               ' → logprob: -1.9139142036437988
    3. '\n' → logprob: -1.9139142036437988
    4. '                   ' → logprob: -2.288914203643799
    5. '<|end|>' → logprob: -2.788914203643799
    6. 'continue' → logprob: -4.163914203643799
    7. ')' → logprob: -4.288914203643799
    8. '           ' → logprob: -4.913914203643799
    9. '```' → logprob: -4.913914203643799
    10. '<|end|>' → logprob: -4.913914203643799

Token 1195: ' but' (ID: 889)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.158939391374588
    2. ' pass' → logprob: -2.0339393615722656
    3. 'n' → logprob: -4.283939361572266
    4. '                   ' → logprob: -6.533939361572266
    5. '#' → logprob: -8.033939361572266
    6. '               ' → logprob: -8.658939361572266
    7. 'continue' → logprob: -8.908939361572266
    8. 'current' → logprob: -10.283939361572266
    9. '```' → logprob: -10.283939361572266
    10. '...' → logprob: -10.533939361572266

Token 1196: ' if' (ID: 538)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.12399441748857498
    2. ' pass' → logprob: -2.8739943504333496
    3. 'continue' → logprob: -3.2489943504333496
    4. 'n' → logprob: -4.74899435043335
    5. '#' → logprob: -4.87399435043335
    6. ' continue' → logprob: -5.49899435043335
    7. 'current' → logprob: -8.873994827270508
    8. '```' → logprob: -8.873994827270508
    9. '           ' → logprob: -8.998994827270508
    10. 'else' → logprob: -9.123994827270508

Token 1197: ' read' (ID: 1729)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.005292296409607
    2. 'n' → logprob: -1.130292296409607
    3. ' current' → logprob: -2.3802924156188965
    4. ' False' → logprob: -2.5052924156188965
    5. ' nxt' → logprob: -2.7552924156188965
    6. 'current' → logprob: -3.2552924156188965
    7. 'True' → logprob: -4.1302924156188965
    8. ' True' → logprob: -5.0052924156188965
    9. ' n' → logprob: -5.6302924156188965
    10. 'jm' → logprob: -6.8802924156188965

Token 1198: ',' (ID: 11)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.2754240334033966
    2. 'current' → logprob: -2.025424003601074
    3. ':' → logprob: -3.400424003601074
    4. ' current' → logprob: -4.275424003601074
    5. '(current' → logprob: -4.400424003601074
    6. '[' → logprob: -4.650424003601074
    7. '[n' → logprob: -5.025424003601074
    8. '==' → logprob: -5.400424003601074
    9. ':
' → logprob: -5.525424003601074
    10. 'else' → logprob: -5.650424003601074

Token 1199: ' nothing' (ID: 6939)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.2685796618461609
    2. ' continue' → logprob: -2.0185797214508057
    3. 'pass' → logprob: -3.3935797214508057
    4. 'n' → logprob: -3.5185797214508057
    5. ' nxt' → logprob: -4.268579483032227
    6. 'continue' → logprob: -5.018579483032227
    7. '               ' → logprob: -5.018579483032227
    8. '   ' → logprob: -5.768579483032227
    9. '           ' → logprob: -6.143579483032227
    10. ' current' → logprob: -6.268579483032227

Token 1200: ' special' (ID: 3582)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9159375429153442
    2. '               ' → logprob: -1.2909375429153442
    3. 'continue' → logprob: -2.6659374237060547
    4. 'else' → logprob: -3.1659374237060547
    5. '
' → logprob: -3.2909374237060547
    6. '                   ' → logprob: -3.4159374237060547
    7. 'n' → logprob: -3.7909374237060547
    8. ' continues' → logprob: -3.7909374237060547
    9. '```' → logprob: -3.7909374237060547
    10. ' continue' → logprob: -3.7909374237060547

Token 1201: ' said' (ID: 2059)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32906219363212585
    2. '\n' → logprob: -2.4540622234344482
    3. '                   ' → logprob: -2.4540622234344482
    4. '           ' → logprob: -4.079061985015869
    5. '<|end|>' → logprob: -4.204061985015869
    6. '```' → logprob: -4.454061985015869
    7. ':' → logprob: -4.829061985015869
    8. ':
' → logprob: -4.954061985015869
    9. '
' → logprob: -5.079061985015869
    10. '#' → logprob: -5.454061985015869

Token 1202: ';' (ID: 26)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9633342623710632
    2. '               ' → logprob: -1.088334321975708
    3. '<|end|>' → logprob: -2.338334321975708
    4. '           ' → logprob: -2.713334321975708
    5. '<|end|>' → logprob: -3.713334321975708
    6. '
' → logprob: -3.838334321975708
    7. '\n' → logprob: -3.963334321975708
    8. '```' → logprob: -4.213334083557129
    9. 'n' → logprob: -4.713334083557129
    10. '#' → logprob: -5.463334083557129

Token 1203: ' already' (ID: 4279)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.1738598346710205
    2. 'pass' → logprob: -2.1738598346710205
    3. 'n' → logprob: -3.5488598346710205
    4. '                   ' → logprob: -4.923859596252441
    5. '#' → logprob: -5.298859596252441
    6. '
' → logprob: -6.548859596252441
    7. '               ' → logprob: -6.798859596252441
    8. ' n' → logprob: -8.048859596252441
    9. ' #' → logprob: -8.048859596252441
    10. '```' → logprob: -8.048859596252441

Token 1204: ' skipped' (ID: 72521)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.42079639434814453
    2. ' continue' → logprob: -1.7957963943481445
    3. '           ' → logprob: -2.5457963943481445
    4. 'read' → logprob: -3.5457963943481445
    5. '```' → logprob: -3.5457963943481445
    6. '                   ' → logprob: -4.4207963943481445
    7. '               ' → logprob: -4.7957963943481445
    8. ' read' → logprob: -5.4207963943481445
    9. 'continued' → logprob: -5.9207963943481445
    10. ' skipped' → logprob: -6.2957963943481445

Token 1205: ' before' (ID: 2254)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1455247402191162
    2. '                   ' → logprob: -1.1455247402191162
    3. '
' → logprob: -2.020524740219116
    4. '           ' → logprob: -2.770524740219116
    5. 'continue' → logprob: -2.770524740219116
    6. '<|end|>' → logprob: -3.145524740219116
    7. '```' → logprob: -4.395524978637695
    8. '<|end|>' → logprob: -4.645524978637695
    9. '\n' → logprob: -4.770524978637695
    10. ',' → logprob: -5.020524978637695

Token 1206: ' reading' (ID: 6085)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5676788091659546
    2. ' continue' → logprob: -1.8176788091659546
    3. '                   ' → logprob: -1.9426788091659546
    4. '```' → logprob: -2.817678928375244
    5. '           ' → logprob: -3.567678928375244
    6. '               ' → logprob: -3.692678928375244
    7. 'current' → logprob: -5.567678928375244
    8. '<|end|>' → logprob: -6.067678928375244
    9. '.' → logprob: -6.817678928375244
    10. ',' → logprob: -6.942678928375244

Token 1207: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.36476367712020874
    2. '                   ' → logprob: -1.7397637367248535
    3. '
' → logprob: -3.1147637367248535
    4. '           ' → logprob: -3.2397637367248535
    5. '<|end|>' → logprob: -3.8647637367248535
    6. '\n' → logprob: -5.2397637367248535
    7. 'continue' → logprob: -5.2397637367248535
    8. '<|end|>' → logprob: -6.1147637367248535
    9. '.' → logprob: -6.2397637367248535
    10. '```' → logprob: -6.6147637367248535

Token 1208: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13749946653842926
    2. '               ' → logprob: -2.7624995708465576
    3. '\n' → logprob: -4.1374993324279785
    4. ':
' → logprob: -4.7624993324279785
    5. '<|end|>' → logprob: -5.0124993324279785
    6. ':' → logprob: -5.1374993324279785
    7. '(n' → logprob: -5.2624993324279785
    8. '   ' → logprob: -5.3874993324279785
    9. ')' → logprob: -6.1374993324279785
    10. '           ' → logprob: -6.2624993324279785

Token 1209: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.38422566652297974
    2. ' pass' → logprob: -1.509225606918335
    3. 'n' → logprob: -2.509225606918335
    4. '                   ' → logprob: -4.134225845336914
    5. '               ' → logprob: -8.259225845336914
    6. '   ' → logprob: -9.134225845336914
    7. 'continue' → logprob: -10.009225845336914
    8. '                       ' → logprob: -10.384225845336914
    9. '```' → logprob: -10.509225845336914
    10. 'current' → logprob: -10.759225845336914

Token 1210: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20719468593597412
    2. 'else' → logprob: -2.0821948051452637
    3. '
' → logprob: -3.0821948051452637
    4. ' else' → logprob: -4.832194805145264
    5. 'elif' → logprob: -4.957194805145264
    6. '```' → logprob: -7.457194805145264
    7. '           ' → logprob: -7.707194805145264
    8. 'n' → logprob: -8.207194328308105
    9. ' elif' → logprob: -9.207194328308105
    10. 'if' → logprob: -9.707194328308105

Token 1211: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5052629113197327
    2. '               ' → logprob: -2.255262851715088
    3. 'else' → logprob: -2.255262851715088
    4. ' else' → logprob: -2.630262851715088
    5. '
' → logprob: -3.255262851715088
    6. 'elif' → logprob: -3.255262851715088
    7. '```' → logprob: -3.505262851715088
    8. ' elif' → logprob: -5.755262851715088
    9. '<|end|>' → logprob: -6.505262851715088
    10. '       ' → logprob: -7.630262851715088

Token 1212: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5089620351791382
    2. 'else' (adapté à ' else') → logprob: -1.0089620351791382
    3. 'elif' → logprob: -4.008962154388428
    4. ' else' → logprob: -4.633962154388428
    5. 'if' → logprob: -5.258962154388428
    6. 'n' → logprob: -7.383962154388428
    7. '           ' → logprob: -8.25896167755127
    8. ' elif' → logprob: -8.88396167755127
    9. ' if' → logprob: -9.63396167755127
    10. '
' → logprob: -9.88396167755127

Token 1213: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0315642356872559
    2. ' if' → logprob: -1.2815642356872559
    3. '                   ' → logprob: -1.6565642356872559
    4. 'if' → logprob: -2.281564235687256
    5. '               ' → logprob: -3.281564235687256
    6. ':' → logprob: -3.406564235687256
    7. '           ' → logprob: -7.531564235687256
    8. '                ' → logprob: -7.906564235687256
    9. '   ' → logprob: -8.156564712524414
    10. '                       ' → logprob: -8.781564712524414

Token 1214: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6936190724372864
    2. '               ' → logprob: -0.8186190724372864
    3. ' if' → logprob: -3.6936190128326416
    4. '                ' → logprob: -5.068619251251221
    5. 'n' → logprob: -5.193619251251221
    6. 'if' → logprob: -5.193619251251221
    7. '   ' → logprob: -5.193619251251221
    8. ' nxt' → logprob: -5.818619251251221
    9. '           ' → logprob: -5.943619251251221
    10. '```' → logprob: -6.568619251251221

Token 1215: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7805238366127014
    2. 'key' → logprob: -1.1555237770080566
    3. 'next' → logprob: -2.5305237770080566
    4. 'pos' → logprob: -2.9055237770080566
    5. '#' (adapté à ' #') → logprob: -3.2805237770080566
    6. '               ' → logprob: -3.5305237770080566
    7. 't' → logprob: -4.905523777008057
    8. '                   ' → logprob: -5.905523777008057
    9. 'n' → logprob: -6.530523777008057
    10. '           ' → logprob: -6.655523777008057

Token 1216: ' n' (ID: 297)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19537946581840515
    2. '#' → logprob: -2.6953794956207275
    3. 'pos' → logprob: -3.1953794956207275
    4. 'next' → logprob: -4.320379257202148
    5. 'key' → logprob: -4.445379257202148
    6. 'un' → logprob: -4.445379257202148
    7. 'lst' → logprob: -4.695379257202148
    8. 'c' → logprob: -5.445379257202148
    9. '       ' → logprob: -5.570379257202148
    10. 'candidate' → logprob: -5.945379257202148

Token 1217: '=' (ID: 28)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.044282540678977966
    2. '+' → logprob: -3.2942824363708496
    3. ' +=' → logprob: -5.91928243637085
    4. '=' → logprob: -6.66928243637085
    5. '==' → logprob: -7.91928243637085
    6. '>=' → logprob: -7.91928243637085
    7. '_plus' → logprob: -8.169282913208008
    8. '_next' → logprob: -8.544282913208008
    9. '```' → logprob: -8.919282913208008
    10. '=n' → logprob: -8.919282913208008

Token 1218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0029276609420776367
    2. '2' → logprob: -6.502927780151367
    3. '+' → logprob: -7.752927780151367
    4. '=' → logprob: -8.002927780151367
    5. 'n' → logprob: -8.127927780151367
    6. ' ' → logprob: -9.252927780151367
    7. '                   ' → logprob: -9.377927780151367
    8. 'current' → logprob: -9.877927780151367
    9. 'next' → logprob: -10.127927780151367
    10. '```' → logprob: -11.252927780151367

Token 1219: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23009765148162842
    2. '
' → logprob: -2.230097770690918
    3. '               ' → logprob: -3.105097770690918
    4. '                    
' → logprob: -4.855097770690918
    5. ' if' → logprob: -4.855097770690918
    6. 'if' → logprob: -5.355097770690918
    7. ')' → logprob: -5.480097770690918
    8. ',' → logprob: -5.480097770690918
    9. '#' → logprob: -5.980097770690918
    10. ':
' → logprob: -6.105097770690918

Token 1220: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11718948930501938
    2. '               ' → logprob: -3.242189407348633
    3. ' and' → logprob: -3.742189407348633
    4. ',' → logprob: -4.992189407348633
    5. '
' → logprob: -4.992189407348633
    6. '                       ' → logprob: -5.117189407348633
    7. '<|end|>' → logprob: -5.117189407348633
    8. ':
' → logprob: -5.367189407348633
    9. '           ' → logprob: -5.617189407348633
    10. '                    
' → logprob: -6.367189407348633

Token 1221: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5587467551231384
    2. 'key' → logprob: -1.0587468147277832
    3. 't' → logprob: -3.058746814727783
    4. 'next' → logprob: -3.933746814727783
    5. 'tn' → logprob: -5.058746814727783
    6. '               ' → logprob: -6.058746814727783
    7. '                   ' → logprob: -6.933746814727783
    8. ' if' → logprob: -7.058746814727783
    9. '#' (adapté à ' #') → logprob: -7.183746814727783
    10. ' key' → logprob: -7.433746814727783

Token 1222: ' Rule' (ID: 32118)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07880981266498566
    2. 'key' → logprob: -3.0788097381591797
    3. 'next' → logprob: -4.20380973815918
    4. 't' → logprob: -5.32880973815918
    5. 'pos' → logprob: -6.20380973815918
    6. '                   ' → logprob: -6.45380973815918
    7. '#' → logprob: -6.70380973815918
    8. 'candidate' → logprob: -6.95380973815918
    9. 'target' → logprob: -7.32880973815918
    10. 'tn' → logprob: -7.32880973815918

Token 1223: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3427342176437378
    2. '4' → logprob: -1.5927342176437378
    3. '                   ' → logprob: -1.9677342176437378
    4. '5' → logprob: -2.4677343368530273
    5. '               ' → logprob: -2.5927343368530273
    6. '           ' → logprob: -2.8427343368530273
    7. ' ' → logprob: -2.8427343368530273
    8. ' =' → logprob: -3.5927343368530273
    9. '6' → logprob: -4.217734336853027
    10. '_' → logprob: -4.342734336853027

Token 1224: ':' (ID: 25)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.24061357975006104
    2. '               ' → logprob: -2.4906134605407715
    3. '
' → logprob: -2.6156134605407715
    4. 't' → logprob: -4.9906134605407715
    5. '                    
' → logprob: -4.9906134605407715
    6. 'n' → logprob: -5.1156134605407715
    7. ',' → logprob: -5.2406134605407715
    8. 'next' → logprob: -5.2406134605407715
    9. ' =' → logprob: -5.3656134605407715
    10. ' if' → logprob: -5.4906134605407715

Token 1225: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04556353762745857
    2. ' if' → logprob: -4.045563697814941
    3. 'next' → logprob: -4.795563697814941
    4. 't' → logprob: -4.920563697814941
    5. '                   ' → logprob: -5.170563697814941
    6. 'key' → logprob: -6.420563697814941
    7. '               ' → logprob: -6.420563697814941
    8. 'found' → logprob: -7.670563697814941
    9. '#' → logprob: -7.920563697814941
    10. 'for' → logprob: -8.170563697814941

Token 1226: ' exists' (ID: 13031)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.802124559879303
    2. '(t' → logprob: -1.0521245002746582
    3. 'n' → logprob: -2.552124500274658
    4. '(current' → logprob: -3.302124500274658
    5. 't' → logprob: -3.677124500274658
    6. ' (' → logprob: -3.927124500274658
    7. '(j' → logprob: -4.052124500274658
    8. 'current' → logprob: -5.177124500274658
    9. '(next' → logprob: -5.677124500274658
    10. 'jm' → logprob: -5.927124500274658

Token 1227: ' unread' (ID: 119664)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9915003180503845
    2. 'next' → logprob: -2.2415003776550293
    3. '(n' → logprob: -2.6165003776550293
    4. ' (' → logprob: -2.6165003776550293
    5. '(t' → logprob: -2.8665003776550293
    6. ' nxt' → logprob: -2.9915003776550293
    7. ' next' → logprob: -3.1165003776550293
    8. 'find' → logprob: -3.2415003776550293
    9. 'un' → logprob: -3.3665003776550293
    10. 't' → logprob: -3.6165003776550293

Token 1228: ' letter' (ID: 10263)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.4449606239795685
    2. '_letter' → logprob: -2.069960594177246
    3. 'pos' → logprob: -2.569960594177246
    4. 'letter' → logprob: -3.569960594177246
    5. '_letters' → logprob: -3.694960594177246
    6. 'lst' → logprob: -4.444960594177246
    7. ')' → logprob: -4.569960594177246
    8. '_lst' → logprob: -4.569960594177246
    9. '_key' → logprob: -5.069960594177246
    10. '_positions' → logprob: -5.194960594177246

Token 1229: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.06635719537734985
    2. '_with' → logprob: -3.066357135772705
    3. ' with' → logprob: -5.441357135772705
    4. '_pos' → logprob: -5.441357135772705
    5. ',' → logprob: -5.941357135772705
    6. '
' → logprob: -6.566357135772705
    7. '=' → logprob: -6.816357135772705
    8. ' =' → logprob: -7.316357135772705
    9. 'in' → logprob: -7.691357135772705
    10. '=(' → logprob: -8.066357612609863

Token 1230: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.012626893818378448
    2. ' (' → logprob: -4.387627124786377
    3. 't' → logprob: -9.262626647949219
    4. '
' → logprob: -12.762626647949219
    5. '   ' → logprob: -12.887626647949219
    6. '(j' → logprob: -13.012626647949219
    7. 'j' → logprob: -13.262626647949219
    8. ' t' → logprob: -13.262626647949219
    9. '```' → logprob: -13.637626647949219
    10. 'jm' → logprob: -13.762626647949219

Token 1231: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00044318195432424545
    2. '(t' → logprob: -7.750442981719971
    3. ' t' → logprob: -11.375443458557129
    4. ')t' → logprob: -14.750443458557129
    5. '`t' → logprob: -15.000443458557129
    6. '	t' → logprob: -15.750443458557129
    7. '[t' → logprob: -16.375442504882812
    8. ' (' → logprob: -16.625442504882812
    9. ',t' → logprob: -16.750442504882812
    10. ',' → logprob: -17.125442504882812

Token 1232: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.02058509737253189
    2. ',' → logprob: -3.895585060119629
    3. ',(' → logprob: -11.270585060119629
    4. ' ,' → logprob: -11.645585060119629
    5. 'n' → logprob: -11.770585060119629
    6. ',j' → logprob: -12.395585060119629
    7. ',
' → logprob: -12.645585060119629
    8. ',t' → logprob: -12.895585060119629
    9. ',next' → logprob: -14.770585060119629
    10. '',' → logprob: -14.770585060119629

Token 1233: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00015717383939772844
    2. ' +' → logprob: -9.125157356262207
    3. '+
' → logprob: -11.000157356262207
    4. ',' → logprob: -11.000157356262207
    5. '+,' → logprob: -11.875157356262207
    6. '=' → logprob: -13.500157356262207
    7. '+n' → logprob: -13.500157356262207
    8. ',n' → logprob: -13.750157356262207
    9. '```' → logprob: -14.000157356262207
    10. ',
' → logprob: -14.500157356262207

Token 1234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0077810101211071014
    2. ')' → logprob: -5.757781028747559
    3. '2' → logprob: -6.382781028747559
    4. ',' → logprob: -6.507781028747559
    5. '=' → logprob: -7.007781028747559
    6. '+' → logprob: -8.382781028747559
    7. '
' → logprob: -9.257781028747559
    8. '```' → logprob: -9.757781028747559
    9. '(' → logprob: -10.507781028747559
    10. ')+' → logprob: -10.632781028747559

Token 1235: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004655472934246063
    2. ')==' → logprob: -6.379655361175537
    3. '):' → logprob: -7.004655361175537
    4. ')=' → logprob: -7.254655361175537
    5. '):
' → logprob: -8.004655838012695
    6. '),' → logprob: -8.254655838012695
    7. ')n' → logprob: -9.379655838012695
    8. '```' → logprob: -9.754655838012695
    9. '+' → logprob: -9.879655838012695
    10. ')>' → logprob: -9.879655838012695

Token 1236: ' at' (ID: 540)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.4156625270843506
    2. '_pos' → logprob: -1.7906625270843506
    3. ' =' → logprob: -2.0406625270843506
    4. ' in' → logprob: -2.5406625270843506
    5. '_positions' → logprob: -2.7906625270843506
    6. '=' → logprob: -2.9156625270843506
    7. '_lst' → logprob: -2.9156625270843506
    8. '_in' → logprob: -3.2906625270843506
    9. '_idx' → logprob: -3.9156625270843506
    10. 'pos' → logprob: -3.9156625270843506

Token 1237: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5987781286239624
    2. 'a' → logprob: -1.7237781286239624
    3. 'positions' → logprob: -2.723778247833252
    4. 'position' → logprob: -2.848778247833252
    5. 'current' → logprob: -3.098778247833252
    6. 'index' → logprob: -3.723778247833252
    7. ' a' → logprob: -4.223778247833252
    8. 'some' → logprob: -4.348778247833252
    9. 'n' → logprob: -4.473778247833252
    10. ')' → logprob: -5.098778247833252

Token 1238: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9042745232582092
    2. '=' → logprob: -1.4042744636535645
    3. ' <' → logprob: -1.6542744636535645
    4. ' =' → logprob: -2.2792744636535645
    5. '<len' → logprob: -3.7792744636535645
    6. '<|end|>' → logprob: -4.6542744636535645
    7. '<n' → logprob: -5.0292744636535645
    8. '=<' → logprob: -5.6542744636535645
    9. ')' → logprob: -5.9042744636535645
    10. '<int' → logprob: -6.4042744636535645

Token 1239: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.04570658504962921
    2. 'order' → logprob: -3.4207065105438232
    3. 'i' → logprob: -4.795706748962402
    4. ' current' → logprob: -5.670706748962402
    5. 'last' → logprob: -9.545706748962402
    6. ' order' → logprob: -9.545706748962402
    7. 'read' → logprob: -9.670706748962402
    8. ' i' → logprob: -10.420706748962402
    9. '
' → logprob: -10.795706748962402
    10. '=current' → logprob: -12.795706748962402

Token 1240: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3685075342655182
    2. ':' → logprob: -1.9935075044631958
    3. '                   ' → logprob: -2.1185076236724854
    4. ' and' → logprob: -3.7435076236724854
    5. ',' → logprob: -4.493507385253906
    6. '                       ' → logprob: -5.243507385253906
    7. '=' → logprob: -5.868507385253906
    8. ' =' → logprob: -5.993507385253906
    9. 'and' → logprob: -6.493507385253906
    10. '               ' → logprob: -6.993507385253906

Token 1241: ' read' (ID: 1729)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8532373905181885
    2. 'if' → logprob: -1.8532373905181885
    3. 'c' → logprob: -1.9782373905181885
    4. '                   ' → logprob: -3.1032373905181885
    5. 'for' → logprob: -3.2282373905181885
    6. ' if' → logprob: -3.3532373905181885
    7. 'un' → logprob: -3.4782373905181885
    8. 'next' → logprob: -3.9782373905181885
    9. 'lst' → logprob: -4.228237152099609
    10. 'candidate' → logprob: -4.353237152099609

Token 1242: ' it' (ID: 480)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.08797107636928558
    2. '=find' → logprob: -3.4629709720611572
    3. 'next' → logprob: -3.5879709720611572
    4. '(find' → logprob: -4.837971210479736
    5. ' find' → logprob: -5.712971210479736
    6. 'un' → logprob: -5.962971210479736
    7. 'n' → logprob: -6.337971210479736
    8. 'left' → logprob: -6.587971210479736
    9. 'pos' → logprob: -6.712971210479736
    10. '```' → logprob: -6.962971210479736

Token 1243: ' next' (ID: 2613)
  Prédit: '=find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=find' → logprob: -0.14745289087295532
    2. '=' → logprob: -2.5224528312683105
    3. ' =' → logprob: -3.5224528312683105
    4. 'find' → logprob: -4.5224528312683105
    5. 'next' → logprob: -5.2724528312683105
    6. 'n' → logprob: -6.5224528312683105
    7. '_pos' → logprob: -6.8974528312683105
    8. 'left' → logprob: -6.8974528312683105
    9. '_left' → logprob: -7.1474528312683105
    10. '(find' → logprob: -7.1474528312683105

Token 1244: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013874927535653114
    2. '               ' → logprob: -5.1388750076293945
    3. '
' → logprob: -5.2638750076293945
    4. 'n' → logprob: -6.5138750076293945
    5. '           ' → logprob: -8.263875007629395
    6. ',' → logprob: -8.388875007629395
    7. '                    
' → logprob: -9.013875007629395
    8. 'if' → logprob: -9.638875007629395
    9. 'next' → logprob: -10.013875007629395
    10. '                       ' → logprob: -10.138875007629395

Token 1245: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.26505225896835327
    2. '               ' → logprob: -3.265052318572998
    3. '<|end|>' → logprob: -3.390052318572998
    4. '(' → logprob: -3.515052318572998
    5. ' (' → logprob: -4.015052318572998
    6. '(n' → logprob: -4.015052318572998
    7. '           ' → logprob: -4.015052318572998
    8. '<|end|>' → logprob: -4.390052318572998
    9. 'token' → logprob: -4.890052318572998
    10. '(token' → logprob: -5.140052318572998

Token 1246: ' lst' (ID: 33384)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9315288066864014
    2. '                   ' → logprob: -1.1815288066864014
    3. 'if' → logprob: -2.0565288066864014
    4. 'next' → logprob: -2.4315288066864014
    5. 'un' → logprob: -4.3065290451049805
    6. 'idx' → logprob: -4.4315290451049805
    7. '               ' → logprob: -4.5565290451049805
    8. ' nxt' → logprob: -4.5565290451049805
    9. 'for' → logprob: -4.8065290451049805
    10. 't' → logprob: -5.3065290451049805

Token 1247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0154185201972723
    2. ' =' → logprob: -4.515418529510498
    3. '=j' → logprob: -5.640418529510498
    4. '=(' → logprob: -7.390418529510498
    5. '=n' → logprob: -8.76541805267334
    6. '=((' → logprob: -12.14041805267334
    7. '=get' → logprob: -12.26541805267334
    8. '=l' → logprob: -12.39041805267334
    9. '=_' → logprob: -12.64041805267334
    10. '=f' → logprob: -13.01541805267334

Token 1248: ' jm' (ID: 178927)
  Prédit: 'jm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jm' → logprob: -5.264322317088954e-05
    2. ' jm' → logprob: -9.875052452087402
    3. 'jmp' → logprob: -14.625052452087402
    4. '   ' → logprob: -15.125052452087402
    5. ' ' → logprob: -16.62505340576172
    6. '
' → logprob: -16.62505340576172
    7. '  ' → logprob: -17.00005340576172
    8. 'jn' → logprob: -17.37505340576172
    9. 'jl' → logprob: -17.50005340576172
    10. 'jim' → logprob: -17.50005340576172

Token 1249: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.001029831008054316
    2. 'pos' → logprob: -7.376029968261719
    3. '[(' → logprob: -8.876029968261719
    4. 'get' → logprob: -8.876029968261719
    5. '.get' → logprob: -9.251029968261719
    6. '_positions' → logprob: -11.501029968261719
    7. '[' → logprob: -12.751029968261719
    8. '_get' → logprob: -13.001029968261719
    9. '[t' → logprob: -13.501029968261719
    10. '[pos' → logprob: -13.626029968261719

Token 1250: '.get' (ID: 775)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.3137073516845703
    2. '.get' → logprob: -1.3137073516845703
    3. '(t' → logprob: -7.93870735168457
    4. '((' → logprob: -9.56370735168457
    5. '.setdefault' → logprob: -11.93870735168457
    6. 'get' → logprob: -12.18870735168457
    7. '(' → logprob: -12.56370735168457
    8. '=(' → logprob: -14.56370735168457
    9. '.pop' → logprob: -14.56370735168457
    10. ' (' → logprob: -14.81370735168457

Token 1251: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00011188744247192517
    2. '(t' → logprob: -9.87511157989502
    3. '[(' → logprob: -10.00011157989502
    4. '(' → logprob: -11.12511157989502
    5. '(token' → logprob: -16.375112533569336
    6. ' ((' → logprob: -16.500112533569336
    7. '(
' → logprob: -17.250112533569336
    8. ' ' → logprob: -17.250112533569336
    9. ' (' → logprob: -17.625112533569336
    10. '   ' → logprob: -18.500112533569336

Token 1252: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.38701391220092773
    2. '(t' → logprob: -1.1370139122009277
    3. ' (' → logprob: -9.512014389038086
    4. ' t' → logprob: -9.762014389038086
    5. ')t' → logprob: -12.387014389038086
    6. '[t' → logprob: -13.137014389038086
    7. '	t' → logprob: -13.762014389038086
    8. ')' → logprob: -13.887014389038086
    9. '
' → logprob: -14.512014389038086
    10. '(' → logprob: -14.637014389038086

Token 1253: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.08937975764274597
    2. ',' → logprob: -2.4643797874450684
    3. ',t' → logprob: -8.21437931060791
    4. ',(' → logprob: -9.46437931060791
    5. ',
' → logprob: -10.71437931060791
    6. ',next' → logprob: -10.96437931060791
    7. ' ,' → logprob: -11.83937931060791
    8. 'n' → logprob: -11.96437931060791
    9. '(n' → logprob: -12.08937931060791
    10. ',s' → logprob: -12.33937931060791

Token 1254: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00036667886888608336
    2. ' +' → logprob: -8.5003662109375
    3. '1' → logprob: -9.3753662109375
    4. '[' → logprob: -11.3753662109375
    5. '+t' → logprob: -11.3753662109375
    6. ')' → logprob: -11.6253662109375
    7. '+[' → logprob: -11.7503662109375
    8. '))' → logprob: -11.8753662109375
    9. '),' → logprob: -12.1253662109375
    10. '(' → logprob: -12.2503662109375

Token 1255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9862216504407115e-05
    2. '2' → logprob: -11.500020027160645
    3. '+' → logprob: -11.875020027160645
    4. ' ' → logprob: -13.125020027160645
    5. ')' → logprob: -15.875020027160645
    6. '```' → logprob: -16.000019073486328
    7. '
' → logprob: -16.125019073486328
    8. '   ' → logprob: -16.375019073486328
    9. ')+' → logprob: -16.875019073486328
    10. '0' → logprob: -16.875019073486328

Token 1256: '),' (ID: 936)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.34875208139419556
    2. '),' → logprob: -1.2237520217895508
    3. '])' → logprob: -9.34875202178955
    4. '))' → logprob: -9.47375202178955
    5. ',' → logprob: -9.97375202178955
    6. '[]' → logprob: -10.97375202178955
    7. ')' → logprob: -11.09875202178955
    8. '))
' → logprob: -11.22375202178955
    9. '])
' → logprob: -11.59875202178955
    10. '},' → logprob: -12.09875202178955

Token 1257: '[])
' (ID: 56668)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.3135308623313904
    2. ')' → logprob: -1.6885309219360352
    3. '[]' → logprob: -2.563530921936035
    4. '[' → logprob: -5.563530921936035
    5. ' [])' → logprob: -6.938530921936035
    6. '[]
' → logprob: -7.313530921936035
    7. '0' → logprob: -7.563530921936035
    8. '[])
' → logprob: -7.563530921936035
    9. 'None' → logprob: -7.688530921936035
    10. '<|end|>' → logprob: -9.188530921936035

Token 1258: '                   ' (ID: 699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2951679229736328
    2. ' if' → logprob: -1.2951679229736328
    3. '           ' → logprob: -1.7951679229736328
    4. '<|end|>' → logprob: -2.295167922973633
    5. '                   ' → logprob: -2.545167922973633
    6. '[next' → logprob: -4.170167922973633
    7. 'n' → logprob: -4.420167922973633
    8. '<|end|>' → logprob: -4.795167922973633
    9. '       ' → logprob: -5.170167922973633
    10. ')' → logprob: -5.170167922973633

Token 1259: ' ch' (ID: 549)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.8485000729560852
    2. 'n' → logprob: -0.9735000729560852
    3. 'candidate' → logprob: -2.9735000133514404
    4. 'idx' → logprob: -3.0985000133514404
    5. 'pos' → logprob: -3.0985000133514404
    6. 'if' → logprob: -4.2235002517700195
    7. '           ' → logprob: -4.5985002517700195
    8. 'for' → logprob: -4.5985002517700195
    9. 'x' → logprob: -4.9735002517700195
    10. 'p' → logprob: -5.7235002517700195

Token 1260: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5723947286605835
    2. 'o' → logprob: -1.9473947286605835
    3. '=' → logprob: -2.072394847869873
    4. 'osen' → logprob: -2.822394847869873
    5. ' =' → logprob: -2.947394847869873
    6. 'for' → logprob: -3.447394847869873
    7. 'idx' → logprob: -5.447394847869873
    8. 'pos' → logprob: -5.822394847869873
    9. 'i' → logprob: -6.197394847869873
    10. '_pos' → logprob: -6.572394847869873

Token 1261: ' -' (ID: 533)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0002998312993440777
    2. ' find' → logprob: -8.125299453735352
    3. '(find' → logprob: -14.000299453735352
    4. '=find' → logprob: -14.000299453735352
    5. '	find' → logprob: -14.250299453735352
    6. '-' → logprob: -14.375299453735352
    7. '-find' → logprob: -15.000299453735352
    8. '.find' → logprob: -16.00029945373535
    9. '
' → logprob: -16.00029945373535
    10. ')find' → logprob: -16.12529945373535

Token 1262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.550411151489243e-05
    2. 'find' → logprob: -10.125055313110352
    3. '```' → logprob: -12.125055313110352
    4. 'lst' → logprob: -12.625055313110352
    5. '2' → logprob: -13.875055313110352
    6. '`' → logprob: -14.000055313110352
    7. ' ' → logprob: -14.000055313110352
    8. '           ' → logprob: -14.625055313110352
    9. '0' → logprob: -14.750055313110352
    10. 'next' → logprob: -14.875055313110352

Token 1263: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.109359860420227
    2. ' if' → logprob: -1.859359860420227
    3. '                   ' → logprob: -1.984359860420227
    4. 'if' → logprob: -2.3593597412109375
    5. '<|end|>' → logprob: -2.7343597412109375
    6. 'for' → logprob: -2.9843597412109375
    7. '           ' → logprob: -2.9843597412109375
    8. ' for' → logprob: -3.1093597412109375
    9. 'while' → logprob: -4.8593597412109375
    10. '<|end|>' → logprob: -4.8593597412109375

Token 1264: '                   ' (ID: 699)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.18962563574314117
    2. 'for' → logprob: -2.8146257400512695
    3. 'if' → logprob: -3.4396257400512695
    4. '0' → logprob: -3.5646257400512695
    5. '=find' → logprob: -4.5646257400512695
    6. '
' → logprob: -4.6896257400512695
    7. ' if' → logprob: -4.6896257400512695
    8. ' find' → logprob: -4.9396257400512695
    9. ' for' → logprob: -5.5646257400512695
    10. '                   ' → logprob: -5.9396257400512695

Token 1265: ' if' (ID: 538)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.17923234403133392
    2. 'for' → logprob: -2.554232358932495
    3. 'if' (adapté à ' if') → logprob: -2.679232358932495
    4. '                   ' → logprob: -4.554232120513916
    5. ' for' → logprob: -6.429232120513916
    6. 'while' → logprob: -6.929232120513916
    7. 'left' → logprob: -7.054232120513916
    8. ' ch' → logprob: -7.179232120513916
    9. '           ' → logprob: -7.304232120513916
    10. '=' → logprob: -7.554232120513916

Token 1266: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.12761466205120087
    2. 'len' → logprob: -2.127614736557007
    3. '(lst' → logprob: -8.377614974975586
    4. ' lst' → logprob: -9.002614974975586
    5. '(len' → logprob: -9.252614974975586
    6. 'n' → logprob: -9.877614974975586
    7. 'current' → logprob: -10.752614974975586
    8. 'l' → logprob: -10.877614974975586
    9. 'True' → logprob: -11.127614974975586
    10. 'lm' → logprob: -11.377614974975586

Token 1267: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0317460298538208
    2. 'and' → logprob: -1.6567460298538208
    3. ' and' → logprob: -2.0317459106445312
    4. '[' → logprob: -2.5317459106445312
    5. '=' → logprob: -2.9067459106445312
    6. '!=' → logprob: -3.2817459106445312
    7. '[left' → logprob: -3.6567459106445312
    8. '==' → logprob: -3.6567459106445312
    9. ':
' → logprob: -3.9067459106445312
    10. ')' → logprob: -4.031745910644531

Token 1268: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03697007894515991
    2. 'ch' → logprob: -4.036970138549805
    3. '	                   ' → logprob: -5.911970138549805
    4. '                   ' → logprob: -6.036970138549805
    5. '					' → logprob: -6.036970138549805
    6. ' ch' → logprob: -6.286970138549805
    7. '	ch' → logprob: -6.411970138549805
    8. ' for' → logprob: -6.411970138549805
    9. '[ch' → logprob: -6.911970138549805
    10. '                        
' → logprob: -7.286970138549805

Token 1269: ' #' (ID: 1069)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.09256792813539505
    2. ' ch' → logprob: -2.4675679206848145
    3. ' for' → logprob: -6.7175679206848145
    4. 'for' → logprob: -7.0925679206848145
    5. '                       ' → logprob: -7.3425679206848145
    6. 'find' → logprob: -8.217568397521973
    7. '                           ' → logprob: -8.342568397521973
    8. ' find' → logprob: -9.592568397521973
    9. '                   ' → logprob: -9.842568397521973
    10. '	ch' → logprob: -9.842568397521973

Token 1270: ' find' (ID: 1646)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.021661484614014626
    2. 'for' → logprob: -4.146661281585693
    3. 'left' → logprob: -6.146661281585693
    4. ' ch' → logprob: -6.646661281585693
    5. 'idx' → logprob: -7.521661281585693
    6. ' for' → logprob: -7.646661281585693
    7. 'pos' → logprob: -7.646661281585693
    8. 'i' → logprob: -8.521661758422852
    9. ' left' → logprob: -9.146661758422852
    10. '                   ' → logprob: -9.271661758422852

Token 1271: ' unread' (ID: 119664)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.3359769880771637
    2. 'ch' → logprob: -1.8359769582748413
    3. 'find' → logprob: -2.710977077484131
    4. '_un' → logprob: -3.960977077484131
    5. ' unread' → logprob: -4.710977077484131
    6. 'next' → logprob: -4.960977077484131
    7. 'pos' → logprob: -5.210977077484131
    8. 'first' → logprob: -5.210977077484131
    9. 'Unread' → logprob: -5.960977077484131
    10. 'left' → logprob: -6.085977077484131

Token 1272: ' position' (ID: 4010)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7052717804908752
    2. '_pos' → logprob: -0.7052717804908752
    3. 'ch' → logprob: -5.0802717208862305
    4. 'lst' → logprob: -6.4552717208862305
    5. 'position' → logprob: -6.5802717208862305
    6. '_ch' → logprob: -7.2052717208862305
    7. 'token' → logprob: -7.7052717208862305
    8. '_position' → logprob: -8.45527172088623
    9. '_token' → logprob: -8.58027172088623
    10. '(ch' → logprob: -8.58027172088623

Token 1273: ' <' (ID: 464)
  Prédit: '=find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=find' → logprob: -0.2539299726486206
    2. '=' → logprob: -2.12893009185791
    3. ' =' → logprob: -2.25393009185791
    4. ' in' → logprob: -9.37893009185791
    5. '=
' → logprob: -10.12893009185791
    6. 'find' → logprob: -10.50393009185791
    7. 'in' → logprob: -10.75393009185791
    8. '(find' → logprob: -10.87893009185791
    9. '=in' → logprob: -11.12893009185791
    10. ' find' → logprob: -11.25393009185791

Token 1274: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.004653337877243757
    2. ' current' → logprob: -5.379653453826904
    3. '(current' → logprob: -11.379652976989746
    4. '[current' → logprob: -11.504652976989746
    5. '
' → logprob: -12.754652976989746
    6. '                   ' → logprob: -13.379652976989746
    7. '$current' → logprob: -13.629652976989746
    8. '=current' → logprob: -13.754652976989746
    9. '	current' → logprob: -14.004652976989746
    10. '_current' → logprob: -14.254652976989746

Token 1275: ' in' (ID: 306)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0844193696975708
    2. '                       ' → logprob: -1.8344193696975708
    3. '                           ' → logprob: -2.2094192504882812
    4. 'while' → logprob: -2.4594192504882812
    5. 'left' → logprob: -3.3344192504882812
    6. '
' → logprob: -3.3344192504882812
    7. 'if' → logprob: -3.3344192504882812
    8. ' if' → logprob: -3.8344192504882812
    9. '<|end|>' → logprob: -3.8344192504882812
    10. ':
' → logprob: -4.084419250488281

Token 1276: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.20594067871570587
    2. '[' → logprob: -3.2059407234191895
    3. 'left' → logprob: -3.4559407234191895
    4. 'import' → logprob: -3.7059407234191895
    5. 'def' → logprob: -3.7059407234191895
    6. '
' → logprob: -3.9559407234191895
    7. '0' → logprob: -4.8309407234191895
    8. '[left' → logprob: -5.3309407234191895
    9. '[j' → logprob: -5.4559407234191895
    10. 'the' → logprob: -5.5809407234191895

Token 1277: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6796561479568481
    2. '                   ' → logprob: -1.8046561479568481
    3. 'left' → logprob: -2.1796560287475586
    4. ' left' → logprob: -2.3046560287475586
    5. ':' → logprob: -3.5546560287475586
    6. ',' → logprob: -3.8046560287475586
    7. ':
' → logprob: -4.304656028747559
    8. '                           ' → logprob: -5.554656028747559
    9. '	left' → logprob: -5.679656028747559
    10. '                       ' → logprob: -5.679656028747559

Token 1278: '                       ' (ID: 968)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5351172089576721
    2. '                       ' → logprob: -1.6601171493530273
    3. '                           ' → logprob: -2.4101171493530273
    4. ':
' → logprob: -2.5351171493530273
    5. '                        
' → logprob: -4.660117149353027
    6. '                   ' → logprob: -4.660117149353027
    7. ':' → logprob: -5.160117149353027
    8. '					' → logprob: -5.285117149353027
    9. '						' → logprob: -5.910117149353027
    10. '<|end|>' → logprob: -5.910117149353027

Token 1279: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.018928589299321175
    2. 'import' → logprob: -4.518928527832031
    3. 'l' → logprob: -5.518928527832031
    4. ' left' → logprob: -6.768928527832031
    5. '                   ' → logprob: -7.393928527832031
    6. '           ' → logprob: -7.393928527832031
    7. '#' (adapté à ' #') → logprob: -7.643928527832031
    8. 'idx' → logprob: -7.643928527832031
    9. '                       ' → logprob: -9.518928527832031
    10. 'for' → logprob: -9.518928527832031

Token 1280: ' lst' (ID: 33384)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.028959045186638832
    2. 'import' → logprob: -4.153959274291992
    3. 'l' → logprob: -4.778959274291992
    4. '#' → logprob: -6.028959274291992
    5. ' left' → logprob: -7.903959274291992
    6. '           ' → logprob: -7.903959274291992
    7. 'idx' → logprob: -7.903959274291992
    8. 'lo' → logprob: -8.153959274291992
    9. 'for' → logprob: -8.778959274291992
    10. '```' → logprob: -9.278959274291992

Token 1281: ' is' (ID: 382)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.9888122081756592
    2. '=' → logprob: -1.6138122081756592
    3. '[left' → logprob: -2.488812208175659
    4. 'def' → logprob: -3.738812208175659
    5. 'index' → logprob: -3.863812208175659
    6. '=[' → logprob: -3.988812208175659
    7. ')' → logprob: -3.988812208175659
    8. 'import' → logprob: -4.113812446594238
    9. '_left' → logprob: -4.238812446594238
    10. 'bis' → logprob: -4.613812446594238

Token 1282: ' sorted' (ID: 20099)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46602457761764526
    2. '[' → logprob: -1.21602463722229
    3. 'left' → logprob: -4.216024398803711
    4. '[left' → logprob: -4.466024398803711
    5. 'find' → logprob: -4.716024398803711
    6. 'len' → logprob: -4.966024398803711
    7. '[]
' → logprob: -5.466024398803711
    8. 'lst' → logprob: -5.591024398803711
    9. '[]' → logprob: -5.841024398803711
    10. '[j' → logprob: -5.966024398803711

Token 1283: ' ascending' (ID: 75564)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5174062252044678
    2. '=' → logprob: -2.0174062252044678
    3. ' =' → logprob: -2.8924062252044678
    4. ',' → logprob: -3.2674062252044678
    5. 'pos' → logprob: -3.5174062252044678
    6. 'import' → logprob: -3.7674062252044678
    7. '_left' → logprob: -3.7674062252044678
    8. '
' → logprob: -3.8924062252044678
    9. '[left' → logprob: -4.267406463623047
    10. '_pos' → logprob: -4.392406463623047

Token 1284: '
' (ID: 198)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.7915969491004944
    2. '
' → logprob: -1.2915968894958496
    3. ',' → logprob: -2.1665968894958496
    4. ' left' → logprob: -2.7915968894958496
    5. ',left' → logprob: -3.6665968894958496
    6. '                   ' → logprob: -4.04159688949585
    7. 'right' → logprob: -5.04159688949585
    8. '                       ' → logprob: -5.16659688949585
    9. 'idx' → logprob: -5.66659688949585
    10. '           ' → logprob: -5.79159688949585

Token 1285: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6601546406745911
    2. '
' → logprob: -1.6601545810699463
    3. 'left' → logprob: -1.9101545810699463
    4. '                       ' → logprob: -3.6601545810699463
    5. ' left' → logprob: -4.035154819488525
    6. ':
' → logprob: -4.035154819488525
    7. '           ' → logprob: -4.535154819488525
    8. '                           ' → logprob: -4.535154819488525
    9. 'idx' → logprob: -4.660154819488525
    10. '{
' → logprob: -5.410154819488525

Token 1286: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.036409635096788406
    2. 'l' → logprob: -4.036409854888916
    3. 'idx' → logprob: -5.411409854888916
    4. ' left' → logprob: -5.661409854888916
    5. 'import' → logprob: -5.911409854888916
    6. '		' → logprob: -5.911409854888916
    7. '           ' → logprob: -6.286409854888916
    8. '#' (adapté à ' #') → logprob: -7.286409854888916
    9. 'i' → logprob: -7.536409854888916
    10. '```' → logprob: -8.161409378051758

Token 1287: ' find' (ID: 1646)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.060182370245456696
    2. 'l' → logprob: -4.060182571411133
    3. 'import' → logprob: -4.060182571411133
    4. 'for' → logprob: -4.810182571411133
    5. 'idx' → logprob: -4.810182571411133
    6. '#' → logprob: -5.810182571411133
    7. ' left' → logprob: -6.310182571411133
    8. '           ' → logprob: -7.185182571411133
    9. 'lo' → logprob: -8.060182571411133
    10. 'i' → logprob: -8.060182571411133

Token 1288: ' max' (ID: 2999)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.43396449089050293
    2. ' left' → logprob: -1.433964490890503
    3. 'import' → logprob: -2.558964490890503
    4. 'right' → logprob: -5.058964729309082
    5. 'def' → logprob: -5.058964729309082
    6. 'pos' → logprob: -5.558964729309082
    7. ' right' → logprob: -6.058964729309082
    8. 'idx' → logprob: -6.058964729309082
    9. '=' → logprob: -6.433964729309082
    10. '           ' → logprob: -6.558964729309082

Token 1289: ' index' (ID: 3472)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.9460029006004333
    2. 'idx' → logprob: -1.6960029602050781
    3. 'pos' → logprob: -1.8210029602050781
    4. ' left' → logprob: -2.946002960205078
    5. ' idx' → logprob: -3.071002960205078
    6. 'while' → logprob: -3.571002960205078
    7. 'mid' → logprob: -3.571002960205078
    8. 'index' → logprob: -3.821002960205078
    9. ' pos' → logprob: -4.321002960205078
    10. ' index' → logprob: -5.071002960205078

Token 1290: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.81944739818573
    2. 'left' → logprob: -1.94444739818573
    3. ')' → logprob: -2.1944475173950195
    4. ' =' → logprob: -2.5694475173950195
    5. ' in' → logprob: -3.0694475173950195
    6. '<|end|>' → logprob: -3.5694475173950195
    7. 'in' → logprob: -3.8194475173950195
    8. '_' → logprob: -4.0694475173950195
    9. '_left' → logprob: -4.3194475173950195
    10. ' of' → logprob: -5.1944475173950195

Token 1291: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.006024780683219433
    2. 'left' → logprob: -5.8810248374938965
    3. 'the' → logprob: -6.7560248374938965
    4. ' lst' → logprob: -7.6310248374938965
    5. '[' → logprob: -7.7560248374938965
    6. '
' → logprob: -8.256024360656738
    7. '[left' → logprob: -8.631024360656738
    8. '[l' → logprob: -9.381024360656738
    9. 'list' → logprob: -9.381024360656738
    10. '(lst' → logprob: -9.756024360656738

Token 1292: ' less' (ID: 3760)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3115406036376953
    2. ' =' → logprob: -1.5615406036376953
    3. 'left' → logprob: -1.6865406036376953
    4. ')' → logprob: -2.5615406036376953
    5. '[left' → logprob: -3.1865406036376953
    6. ',' → logprob: -3.5615406036376953
    7. ' left' → logprob: -3.9365406036376953
    8. '_left' → logprob: -4.061540603637695
    9. '           ' → logprob: -4.436540603637695
    10. '_' → logprob: -4.561540603637695

Token 1293: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.3767978847026825
    2. 'than' → logprob: -1.3767979145050049
    3. '_than' → logprob: -3.376797914505005
    4. '           ' → logprob: -5.376797676086426
    5. '=' → logprob: -5.751797676086426
    6. '<th' → logprob: -5.876797676086426
    7. '               ' → logprob: -6.001797676086426
    8. '                   ' → logprob: -6.251797676086426
    9. '                       ' → logprob: -6.501797676086426
    10. '<' → logprob: -6.876797676086426

Token 1294: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.05249911546707153
    2. ' current' → logprob: -3.3024990558624268
    3. '0' → logprob: -4.427499294281006
    4. 'left' → logprob: -6.927499294281006
    5. 'right' → logprob: -8.052498817443848
    6. '
' → logprob: -8.302498817443848
    7. 'binary' → logprob: -8.677498817443848
    8. 'pos' → logprob: -9.177498817443848
    9. 'bis' → logprob: -9.302498817443848
    10. 'len' → logprob: -9.552498817443848

Token 1295: ' and' (ID: 326)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0137660503387451
    2. '
' → logprob: -1.5137660503387451
    3. ':' → logprob: -3.263766050338745
    4. '                       ' → logprob: -3.388766050338745
    5. ':
' → logprob: -3.388766050338745
    6. '               ' → logprob: -3.388766050338745
    7. '           ' → logprob: -3.513766050338745
    8. ')' → logprob: -3.513766050338745
    9. '<|end|>' → logprob: -3.638766050338745
    10. ',' → logprob: -3.763766050338745

Token 1296: ' unread' (ID: 119664)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -1.3124321699142456
    2. 'bis' → logprob: -1.5624321699142456
    3. 'left' → logprob: -2.187432289123535
    4. 'find' → logprob: -2.937432289123535
    5. 'binary' → logprob: -3.062432289123535
    6. 'def' → logprob: -3.187432289123535
    7. '
' → logprob: -3.437432289123535
    8. '#' → logprob: -3.562432289123535
    9. ' read' → logprob: -3.687432289123535
    10. ' bis' → logprob: -3.812432289123535

Token 1297: '
' (ID: 198)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -1.0210365056991577
    2. '                   ' → logprob: -1.1460365056991577
    3. 'left' → logprob: -1.5210365056991577
    4. '
' → logprob: -4.521036624908447
    5. ',' → logprob: -4.646036624908447
    6. '```' → logprob: -4.771036624908447
    7. '                       ' → logprob: -5.021036624908447
    8. ':' → logprob: -5.271036624908447
    9. '				' → logprob: -5.396036624908447
    10. '#' → logprob: -5.521036624908447

Token 1298: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9167075753211975
    2. '
' → logprob: -2.1667075157165527
    3. '<|end|>' → logprob: -2.1667075157165527
    4. '                       ' → logprob: -2.2917075157165527
    5. '                           ' → logprob: -3.1667075157165527
    6. '               ' → logprob: -3.4167075157165527
    7. ')' → logprob: -3.4167075157165527
    8. ':' → logprob: -4.291707515716553
    9. '                        
' → logprob: -4.291707515716553
    10. '[' → logprob: -4.541707515716553

Token 1299: ' #' (ID: 1069)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.5637750625610352
    2. '                   ' → logprob: -1.3137750625610352
    3. '
' → logprob: -2.813775062561035
    4. ' 
' → logprob: -3.563775062561035
    5. 'left' → logprob: -4.063775062561035
    6. '                    
' → logprob: -4.813775062561035
    7. ' lef' → logprob: -5.188775062561035
    8. '                    ' → logprob: -5.313775062561035
    9. '           ' → logprob: -5.688775062561035
    10. '				' → logprob: -6.188775062561035

Token 1300: ' binary' (ID: 15600)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.4310157001018524
    2. 'left' → logprob: -1.4310157299041748
    3. 'idx' → logprob: -3.306015729904175
    4. '                   ' → logprob: -3.681015729904175
    5. ' idx' → logprob: -4.056015491485596
    6. '
' → logprob: -5.056015491485596
    7. '#' → logprob: -5.431015491485596
    8. 'l' → logprob: -5.556015491485596
    9. ' l' → logprob: -5.556015491485596
    10. 'pos' → logprob: -5.806015491485596

Token 1301: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.5497609972953796
    2. ' search' → logprob: -1.1747610569000244
    3. '_search' → logprob: -2.1747610569000244
    4. '_' → logprob: -8.674760818481445
    5. ')' → logprob: -9.549760818481445
    6. '
' → logprob: -10.424760818481445
    7. ' _' → logprob: -10.674760818481445
    8. 'left' → logprob: -10.799760818481445
    9. '```' → logprob: -11.049760818481445
    10. '	search' → logprob: -11.674760818481445

Token 1302: ' with' (ID: 483)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.2064741849899292
    2. '=' → logprob: -1.7064741849899292
    3. ':' → logprob: -1.9564741849899292
    4. ':
' → logprob: -2.3314743041992188
    5. ' left' → logprob: -2.9564743041992188
    6. ' for' → logprob: -3.0814743041992188
    7. '           ' → logprob: -3.2064743041992188
    8. ' =' → logprob: -3.5814743041992188
    9. ',' → logprob: -3.8314743041992188
    10. '
' → logprob: -4.581474304199219

Token 1303: ' upper' (ID: 13057)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.3046858608722687
    2. '0' → logprob: -1.5546858310699463
    3. 'def' → logprob: -3.8046858310699463
    4. 'import' → logprob: -4.554686069488525
    5. 'right' → logprob: -4.929686069488525
    6. ' left' → logprob: -5.304686069488525
    7. 'lambda' → logprob: -6.304686069488525
    8. '```' → logprob: -6.679686069488525
    9. '1' → logprob: -7.554686069488525
    10. ')' → logprob: -8.429685592651367

Token 1304: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.00014692598779220134
    2. 'bound' → logprob: -9.125146865844727
    3. ' bound' → logprob: -10.625146865844727
    4. '_' → logprob: -11.625146865844727
    5. '_left' → logprob: -13.250146865844727
    6. '_limit' → logprob: -14.125146865844727
    7. '_bounds' → logprob: -14.500146865844727
    8. '-bound' → logprob: -14.750146865844727
    9. '_right' → logprob: -15.125146865844727
    10. ')' → logprob: -15.125146865844727

Token 1305: ' for' (ID: 395)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.8496858477592468
    2. '=' → logprob: -1.9746859073638916
    3. ')' → logprob: -2.5996859073638916
    4. '           ' → logprob: -2.8496859073638916
    5. 'def' → logprob: -3.3496859073638916
    6. ',' → logprob: -3.4746859073638916
    7. ' =' → logprob: -3.4746859073638916
    8. '(left' → logprob: -3.4746859073638916
    9. 'right' → logprob: -3.8496859073638916
    10. 'while' → logprob: -3.9746859073638916

Token 1306: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.558613121509552
    2. '0' → logprob: -1.6836130619049072
    3. 'left' → logprob: -2.1836130619049072
    4. ' current' → logprob: -2.8086130619049072
    5. 'right' → logprob: -4.433613300323486
    6. 'lambda' → logprob: -4.808613300323486
    7. ')' → logprob: -4.808613300323486
    8. 'n' → logprob: -5.183613300323486
    9. '(current' → logprob: -5.683613300323486
    10. 'mid' → logprob: -5.808613300323486

Token 1307: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.184862494468689
    2. ':
' → logprob: -1.934862494468689
    3. ')
' → logprob: -2.0598626136779785
    4. '           ' → logprob: -2.3098626136779785
    5. '                   ' → logprob: -2.4348626136779785
    6. '):
' → logprob: -3.4348626136779785
    7. '
' → logprob: -3.5598626136779785
    8. ':' → logprob: -3.6848626136779785
    9. '               ' → logprob: -3.8098626136779785
    10. '(left' → logprob: -4.0598626136779785

Token 1308: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.21489614248275757
    2. '           ' → logprob: -2.8398962020874023
    3. '               ' → logprob: -3.2148962020874023
    4. ':
' → logprob: -3.4648962020874023
    5. ':' → logprob: -4.589896202087402
    6. ')' → logprob: -4.589896202087402
    7. '                       ' → logprob: -4.839896202087402
    8. 'left' → logprob: -5.089896202087402
    9. '```' → logprob: -5.589896202087402
    10. '[left' → logprob: -5.714896202087402

Token 1309: ' #' (ID: 1069)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.03974537551403046
    2. 'left' → logprob: -3.539745330810547
    3. '                   ' → logprob: -5.039745330810547
    4. '
' → logprob: -6.789745330810547
    5. ' right' → logprob: -7.414745330810547
    6. '	left' → logprob: -8.414745330810547
    7. '                       ' → logprob: -8.539745330810547
    8. 'import' → logprob: -8.789745330810547
    9. 'right' → logprob: -8.914745330810547
    10. ' l' → logprob: -9.039745330810547

Token 1310: ' then' (ID: 1815)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.3976169526576996
    2. 'left' → logprob: -1.147616982460022
    3. 'import' → logprob: -5.522616863250732
    4. 'l' → logprob: -6.522616863250732
    5. '                   ' → logprob: -7.147616863250732
    6. 'right' → logprob: -7.147616863250732
    7. ' l' → logprob: -7.147616863250732
    8. ' import' → logprob: -7.522616863250732
    9. ' right' → logprob: -7.897616863250732
    10. ' lo' → logprob: -8.14761734008789

Token 1311: ' scan' (ID: 14659)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.09813880175352097
    2. ' left' → logprob: -2.8481388092041016
    3. 'l' → logprob: -4.223138809204102
    4. 'import' → logprob: -4.473138809204102
    5. 'right' → logprob: -5.973138809204102
    6. 'lo' → logprob: -6.473138809204102
    7. '#' → logprob: -6.973138809204102
    8. '
' → logprob: -7.223138809204102
    9. 'pos' → logprob: -7.348138809204102
    10. '           ' → logprob: -7.348138809204102

Token 1312: ' backward' (ID: 58986)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.2550143003463745
    2. 'right' → logprob: -2.130014419555664
    3. 'while' → logprob: -3.130014419555664
    4. ' left' → logprob: -3.505014419555664
    5. 'mid' → logprob: -4.755014419555664
    6. ' right' → logprob: -4.880014419555664
    7. 'for' → logprob: -5.255014419555664
    8. ' while' → logprob: -6.130014419555664
    9. 'from' → logprob: -6.255014419555664
    10. ' for' → logprob: -6.880014419555664

Token 1313: ' since' (ID: 3630)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0240724086761475
    2. 'left' → logprob: -1.1490724086761475
    3. 'right' → logprob: -2.6490724086761475
    4. 'while' → logprob: -2.8990724086761475
    5. ' for' → logprob: -3.5240724086761475
    6. ' left' → logprob: -3.7740724086761475
    7. 'for' → logprob: -3.7740724086761475
    8. 'mid' → logprob: -4.149072647094727
    9. '                       ' → logprob: -4.274072647094727
    10. '           ' → logprob: -4.399072647094727

Token 1314: ' must' (ID: 2804)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5616113543510437
    2. 'left' → logprob: -1.4366114139556885
    3. ' True' → logprob: -2.1866114139556885
    4. ' left' → logprob: -3.5616114139556885
    5. 'lst' → logprob: -4.311611175537109
    6. 'read' → logprob: -4.311611175537109
    7. '
' → logprob: -5.311611175537109
    8. ' read' → logprob: -5.686611175537109
    9. 'ch' → logprob: -5.936611175537109
    10. ' lst' → logprob: -6.186611175537109

Token 1315: ' be' (ID: 413)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.377193570137024
    2. 'while' → logprob: -1.877193570137024
    3. '>=' → logprob: -1.877193570137024
    4. '<=' → logprob: -2.6271934509277344
    5. '>' → logprob: -2.8771934509277344
    6. '=' → logprob: -3.5021934509277344
    7. 'right' → logprob: -3.5021934509277344
    8. ' left' → logprob: -3.5021934509277344
    9. '
' → logprob: -3.6271934509277344
    10. 'ch' → logprob: -3.7521934509277344

Token 1316: ' pos' (ID: 1253)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.4857427477836609
    2. 'found' → logprob: -2.6107428073883057
    3. 'read' → logprob: -3.4857428073883057
    4. '0' → logprob: -3.4857428073883057
    5. 'while' → logprob: -3.4857428073883057
    6. 'right' → logprob: -3.4857428073883057
    7. 'import' → logprob: -3.6107428073883057
    8. 'True' → logprob: -3.9857428073883057
    9. 'bis' → logprob: -4.235742568969727
    10. '1' → logprob: -4.735742568969727

Token 1317: ' <' (ID: 464)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.7345739603042603
    2. '<|end|>' → logprob: -1.9845739603042603
    3. ')' → logprob: -2.1095738410949707
    4. '[' → logprob: -2.3595738410949707
    5. ' for' → logprob: -3.2345738410949707
    6. '[
' → logprob: -3.2345738410949707
    7. 'for' → logprob: -3.7345738410949707
    8. '                   ' → logprob: -3.8595738410949707
    9. '[left' → logprob: -3.9845738410949707
    10. 's' → logprob: -4.109573841094971

Token 1318: ' current' (ID: 2208)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6103554368019104
    2. 'current' → logprob: -1.3603553771972656
    3. 'left' → logprob: -2.2353553771972656
    4. '0' → logprob: -2.6103553771972656
    5. 'lst' → logprob: -5.110355377197266
    6. ' current' → logprob: -5.360355377197266
    7. ' len' → logprob: -5.860355377197266
    8. 'right' → logprob: -6.235355377197266
    9. ' left' → logprob: -6.985355377197266
    10. ' ' → logprob: -7.485355377197266

Token 1319: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1320: ' unread' (ID: 119664)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.3829480707645416
    2. 'ch' → logprob: -1.8829480409622192
    3. 'left' → logprob: -3.132948160171509
    4. 'lst' → logprob: -3.632948160171509
    5. 'not' → logprob: -3.757948160171509
    6. ' ch' → logprob: -4.13294792175293
    7. '0' → logprob: -4.13294792175293
    8. ' read' → logprob: -4.50794792175293
    9. 'mid' → logprob: -5.00794792175293
    10. 'find' → logprob: -5.00794792175293

Token 1321: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2843361794948578
    2. '                       ' → logprob: -3.1593360900878906
    3. '
' → logprob: -3.4093360900878906
    4. '                           ' → logprob: -3.4093360900878906
    5. ')' → logprob: -3.7843360900878906
    6. '               ' → logprob: -4.159336090087891
    7. '           ' → logprob: -4.534336090087891
    8. '<|end|>' → logprob: -4.534336090087891
    9. ' left' → logprob: -4.659336090087891
    10. 'left' → logprob: -5.534336090087891

Token 1322: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.44798964262008667
    2. '           ' → logprob: -2.6979897022247314
    3. ')' → logprob: -2.9479897022247314
    4. '                       ' → logprob: -3.1979897022247314
    5. '               ' → logprob: -3.8229897022247314
    6. '
' → logprob: -3.9479897022247314
    7. '<|end|>' → logprob: -4.072989463806152
    8. 'left' → logprob: -4.197989463806152
    9. '```' → logprob: -4.197989463806152
    10. '                           ' → logprob: -4.572989463806152

Token 1323: ' import' (ID: 1588)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6793440580368042
    2. 'l' → logprob: -1.8043440580368042
    3. 'idx' → logprob: -2.3043441772460938
    4. 'right' → logprob: -2.5543441772460938
    5. '                   ' → logprob: -2.8043441772460938
    6. ' left' → logprob: -3.1793441772460938
    7. 'pos' → logprob: -4.304344177246094
    8. ' l' → logprob: -5.054344177246094
    9. ' right' → logprob: -5.179344177246094
    10. 'r' → logprob: -5.554344177246094

Token 1324: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -1.6240566083070007e-06
    2. ' bis' → logprob: -13.500001907348633
    3. 'heap' → logprob: -16.125001907348633
    4. 'sys' → logprob: -17.250001907348633
    5. 'collections' → logprob: -17.750001907348633
    6. '
' → logprob: -18.000001907348633
    7. 'b' → logprob: -18.750001907348633
    8. '```' → logprob: -19.250001907348633
    9. '`' → logprob: -20.125001907348633
    10. 'Bis' → logprob: -21.375001907348633

Token 1325: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.000650125031825155
    2. 'ects' → logprob: -7.875649929046631
    3. 't' → logprob: -9.375650405883789
    4. 'ectl' → logprob: -9.875650405883789
    5. 'ection' → logprob: -10.000650405883789
    6. 'ected' → logprob: -10.000650405883789
    7. 'ector' → logprob: -11.500650405883789
    8. 'ectin' → logprob: -11.875650405883789
    9. 'ective' → logprob: -11.875650405883789
    10. 'ecta' → logprob: -12.875650405883789

Token 1326: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05209600180387497
    2. '<|end|>' → logprob: -3.677095890045166
    3. '(n' → logprob: -5.177095890045166
    4. ')' → logprob: -6.302095890045166
    5. '<|end|>' → logprob: -6.427095890045166
    6. ')
' → logprob: -6.677095890045166
    7. '
' → logprob: -6.802095890045166
    8. '[' → logprob: -7.052095890045166
    9. ',' → logprob: -7.052095890045166
    10. '.b' → logprob: -7.302095890045166

Token 1327: '                       ' (ID: 968)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.6703473329544067
    2. ')' → logprob: -1.9203473329544067
    3. '
' → logprob: -2.295347213745117
    4. '[' → logprob: -2.795347213745117
    5. '=' → logprob: -3.170347213745117
    6. '(' → logprob: -3.170347213745117
    7. 'b' → logprob: -3.295347213745117
    8. 'bis' → logprob: -3.295347213745117
    9. '<|end|>' → logprob: -3.545347213745117
    10. ')
' → logprob: -3.670347213745117

Token 1328: ' idx' (ID: 14016)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.0340021848678589
    2. ' pos' → logprob: -1.2840021848678589
    3. 'idx' (adapté à ' idx') → logprob: -1.4090021848678589
    4. ' idx' → logprob: -2.6590023040771484
    5. 'index' → logprob: -4.159002304077148
    6. ' left' → logprob: -5.034002304077148
    7. ' index' → logprob: -5.409002304077148
    8. ' bis' → logprob: -5.784002304077148
    9. 'bis' → logprob: -5.784002304077148
    10. '	pos' → logprob: -6.159002304077148

Token 1329: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5232916474342346
    2. '=' → logprob: -0.8982916474342346
    3. '=b' → logprob: -9.02329158782959
    4. '=n' → logprob: -10.89829158782959
    5. ')' → logprob: -11.89829158782959
    6. '=
' → logprob: -12.77329158782959
    7. ' =
' → logprob: -13.02329158782959
    8. '=batch' → logprob: -13.39829158782959
    9. '=index' → logprob: -13.77329158782959
    10. '=int' → logprob: -13.77329158782959

Token 1330: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.0001234428636962548
    2. ' bis' → logprob: -9.000123023986816
    3. 'import' → logprob: -18.000123977661133
    4. 'b' → logprob: -18.125123977661133
    5. 'len' → logprob: -18.250123977661133
    6. '0' → logprob: -19.500123977661133
    7. '	b' → logprob: -19.750123977661133
    8. 'bs' → logprob: -20.375123977661133
    9. 'Bis' → logprob: -20.375123977661133
    10. '   ' → logprob: -21.250123977661133

Token 1331: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.009350265376269817
    2. 'sect' → logprob: -5.009350299835205
    3. 'ct' → logprob: -6.009350299835205
    4. 's' → logprob: -9.634349822998047
    5. 'с' → logprob: -11.009349822998047
    6. 'ects' → logprob: -11.259349822998047
    7. 'n' → logprob: -11.509349822998047
    8. 'ected' → logprob: -11.634349822998047
    9. 'ce' → logprob: -11.634349822998047
    10. '```' → logprob: -11.884349822998047

Token 1332: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.196794331073761
    2. '_right' → logprob: -2.196794271469116
    3. '_left' → logprob: -2.696794271469116
    4. '.right' → logprob: -10.321794509887695
    5. 'right' → logprob: -12.196794509887695
    6. 'Right' → logprob: -12.321794509887695
    7. '.left' → logprob: -12.446794509887695
    8. '-right' → logprob: -12.446794509887695
    9. '._' → logprob: -13.071794509887695
    10. '.ins' → logprob: -13.196794509887695

Token 1333: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0008848957950249314
    2. 'left' → logprob: -8.500885009765625
    3. '_left' → logprob: -8.875885009765625
    4. 'ect' → logprob: -9.125885009765625
    5. 'ins' → logprob: -9.375885009765625
    6. 's' → logprob: -10.000885009765625
    7. 'ist' → logprob: -10.250885009765625
    8. 'search' → logprob: -10.500885009765625
    9. 'ight' → logprob: -10.750885009765625
    10. 'right' → logprob: -10.750885009765625

Token 1334: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -9.889424836728722e-05
    2. 'ct' → logprob: -9.500099182128906
    3. 't' → logprob: -11.375099182128906
    4. '```' → logprob: -12.625099182128906
    5. 'n' → logprob: -13.000099182128906
    6. 'e' → logprob: -13.375099182128906
    7. 'eft' → logprob: -13.375099182128906
    8. 'left' → logprob: -14.500099182128906
    9. 'ects' → logprob: -14.500099182128906
    10. '
' → logprob: -14.875099182128906

Token 1335: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.15306924283504486
    2. '(lst' → logprob: -2.153069257736206
    3. '_right' → logprob: -3.778069257736206
    4. 'left' → logprob: -6.528069019317627
    5. '(n' → logprob: -6.778069019317627
    6. '(j' → logprob: -8.778069496154785
    7. 'right' → logprob: -9.903069496154785
    8. 'Left' → logprob: -10.028069496154785
    9. '-left' → logprob: -10.653069496154785
    10. '(l' → logprob: -11.028069496154785

Token 1336: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.0004031441640108824
    2. '(n' → logprob: -7.875402927398682
    3. 'lst' → logprob: -11.75040340423584
    4. '(' → logprob: -11.75040340423584
    5. '(j' → logprob: -12.75040340423584
    6. '(
' → logprob: -13.50040340423584
    7. 'n' → logprob: -14.00040340423584
    8. '(lista' → logprob: -14.00040340423584
    9. '```' → logprob: -14.75040340423584
    10. '(l' → logprob: -14.87540340423584

Token 1337: ',current' (ID: 178711)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.1711423248052597
    2. ',' → logprob: -2.421142339706421
    3. ',n' → logprob: -3.171142339706421
    4. '(n' → logprob: -4.046142101287842
    5. '(' → logprob: -5.546142101287842
    6. ',l' → logprob: -5.796142101287842
    7. ')' → logprob: -7.421142101287842
    8. '(
' → logprob: -8.046142578125
    9. ',(' → logprob: -8.671142578125
    10. ' (' → logprob: -8.921142578125

Token 1338: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15591177344322205
    2. ')-' → logprob: -2.030911684036255
    3. '-' → logprob: -4.655911922454834
    4. ')
' → logprob: -5.780911922454834
    5. ' -' → logprob: -8.155911445617676
    6. ' )' → logprob: -8.405911445617676
    7. '           ' → logprob: -11.530911445617676
    8. '-)' → logprob: -11.655911445617676
    9. '```' → logprob: -12.655911445617676
    10. ')+' → logprob: -12.905911445617676

Token 1339: '                       ' (ID: 968)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17877845466136932
    2. '```' → logprob: -3.4287784099578857
    3. ' if' → logprob: -3.5537784099578857
    4. 'idx' → logprob: -3.6787784099578857
    5. 'if' → logprob: -3.8037784099578857
    6. ' -' → logprob: -3.9287784099578857
    7. '                   ' → logprob: -4.553778648376465
    8. ')' → logprob: -5.928778648376465
    9. '-token' → logprob: -5.928778648376465
    10. '                           ' → logprob: -6.178778648376465

Token 1340: ' #' (ID: 1069)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.511463463306427
    2. '                   ' → logprob: -1.6364634037017822
    3. 'while' → logprob: -2.6364634037017822
    4. 'if' → logprob: -2.8864634037017822
    5. '                       ' → logprob: -3.3864634037017822
    6. 'for' → logprob: -3.7614634037017822
    7. ' idx' → logprob: -4.886463642120361
    8. 'i' → logprob: -6.011463642120361
    9. '                           ' → logprob: -6.011463642120361
    10. ' for' → logprob: -6.386463642120361

Token 1341: ' scan' (ID: 14659)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2810605466365814
    2. 'idx' → logprob: -1.6560605764389038
    3. 'ch' → logprob: -4.281060695648193
    4. 'k' → logprob: -4.656060695648193
    5. 'found' → logprob: -4.656060695648193
    6. 'i' → logprob: -4.906060695648193
    7. 'for' → logprob: -5.656060695648193
    8. 'if' → logprob: -5.906060695648193
    9. 'j' → logprob: -6.156060695648193
    10. 'l' → logprob: -7.156060695648193

Token 1342: ' left' (ID: 3561)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7492839694023132
    2. 'idx' → logprob: -0.7492839694023132
    3. 'for' → logprob: -3.124284029006958
    4. 'down' → logprob: -5.374283790588379
    5. 'left' → logprob: -6.749283790588379
    6. 'i' → logprob: -7.374283790588379
    7. ' while' → logprob: -7.749283790588379
    8. ' for' → logprob: -7.749283790588379
    9. '(idx' → logprob: -7.749283790588379
    10. 'back' → logprob: -7.874283790588379

Token 1343: ' from' (ID: 591)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6485304832458496
    2. 'while' → logprob: -1.2735304832458496
    3. '-' → logprob: -3.0235304832458496
    4. 'for' → logprob: -3.2735304832458496
    5. ' while' → logprob: -3.5235304832458496
    6. ' for' → logprob: -3.5235304832458496
    7. ' idx' → logprob: -4.02353048324585
    8. '                           ' → logprob: -5.27353048324585
    9. '<|end|>' → logprob: -5.27353048324585
    10. '                   ' → logprob: -5.64853048324585

Token 1344: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -5.526570384972729e-05
    2. ' idx' → logprob: -10.125055313110352
    3. '	idx' → logprob: -11.625055313110352
    4. '(idx' → logprob: -12.375055313110352
    5. '[idx' → logprob: -13.625055313110352
    6. '0' → logprob: -15.250055313110352
    7. '           ' → logprob: -15.625055313110352
    8. 'index' → logprob: -15.875055313110352
    9. '                   ' → logprob: -16.25005531311035
    10. 'max' → logprob: -17.00005531311035

Token 1345: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5255246162414551
    2. 'idx' → logprob: -1.275524616241455
    3. '[idx' → logprob: -3.150524616241455
    4. ' idx' → logprob: -3.525524616241455
    5. ' -' → logprob: -4.150524616241455
    6. '<|end|>' → logprob: -4.400524616241455
    7. '(idx' → logprob: -5.400524616241455
    8. '	idx' → logprob: -5.525524616241455
    9. '                           ' → logprob: -5.650524616241455
    10. ' for' → logprob: -6.150524616241455

Token 1346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -11.500021934509277
    3. '```' → logprob: -11.625021934509277
    4. '2' → logprob: -14.250021934509277
    5. '...' → logprob: -15.125021934509277
    6. '   ' → logprob: -15.250021934509277
    7. 'idx' → logprob: -15.375021934509277
    8. '-' → logprob: -15.437521934509277
    9. '0' → logprob: -15.750021934509277
    10. '``' → logprob: -15.812521934509277

Token 1347: ' down' (ID: 1917)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2235137224197388
    2. '<|end|>' → logprob: -2.098513603210449
    3. ' for' → logprob: -2.223513603210449
    4. '                   ' → logprob: -2.223513603210449
    5. 'idx' → logprob: -2.348513603210449
    6. 'for' → logprob: -3.223513603210449
    7. '                       ' → logprob: -3.848513603210449
    8. ' -' → logprob: -4.223513603210449
    9. 'while' → logprob: -4.348513603210449
    10. ' idx' → logprob: -4.348513603210449

Token 1348: ' to' (ID: 316)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.9153063893318176
    2. '(idx' → logprob: -2.415306329727173
    3. '=' → logprob: -2.790306329727173
    4. ' idx' → logprob: -2.790306329727173
    5. '```' → logprob: -2.790306329727173
    6. '-' → logprob: -3.415306329727173
    7. ')' → logprob: -3.415306329727173
    8. '	idx' → logprob: -3.540306329727173
    9. '<|end|>' → logprob: -3.665306329727173
    10. '[idx' → logprob: -3.790306329727173

Token 1349: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -12.25001049041748
    3. 'max' → logprob: -12.62501049041748
    4. '```' → logprob: -14.37501049041748
    5. '                       ' → logprob: -15.12501049041748
    6. '           ' → logprob: -15.25001049041748
    7. '                   ' → logprob: -15.37501049041748
    8. '                           ' → logprob: -15.62501049041748
    9. '               ' → logprob: -16.125009536743164
    10. '
' → logprob: -16.250009536743164

Token 1350: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.60414821645827e-06
    2. 'max' → logprob: -13.000004768371582
    3. ' ' → logprob: -13.250004768371582
    4. '```' → logprob: -16.250003814697266
    5. 'idx' → logprob: -16.250003814697266
    6. '
' → logprob: -17.000003814697266
    7. '   ' → logprob: -17.000003814697266
    8. 'bis' → logprob: -17.375003814697266
    9. '1' → logprob: -17.562503814697266
    10. '=' → logprob: -17.625003814697266

Token 1351: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7717653512954712
    2. '                       ' → logprob: -1.5217653512954712
    3. 'for' → logprob: -1.8967653512954712
    4. '                   ' → logprob: -2.6467652320861816
    5. '```' → logprob: -4.021765232086182
    6. 'idx' → logprob: -4.146765232086182
    7. '                           ' → logprob: -4.271765232086182
    8. '	for' → logprob: -4.896765232086182
    9. '<|end|>' → logprob: -5.146765232086182
    10. ' idx' → logprob: -5.146765232086182

Token 1352: '                       ' (ID: 968)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.45657670497894287
    2. ' for' → logprob: -2.2065768241882324
    3. '                       ' → logprob: -2.3315768241882324
    4. '                   ' → logprob: -2.8315768241882324
    5. '<|end|>' → logprob: -3.4565768241882324
    6. '                           ' → logprob: -3.8315768241882324
    7. 'for' → logprob: -4.581576824188232
    8. ' if' → logprob: -5.081576824188232
    9. '               ' → logprob: -5.581576824188232
    10. '                               ' → logprob: -5.706576824188232

Token 1353: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.812523365020752
    2. '-' → logprob: -1.937523365020752
    3. 'k' → logprob: -2.062523365020752
    4. 'while' → logprob: -2.562523365020752
    5. 'm' → logprob: -3.062523365020752
    6. '                       ' → logprob: -3.437523365020752
    7. ' for' → logprob: -3.562523365020752
    8. 'mid' → logprob: -3.812523365020752
    9. '                           ' → logprob: -3.937523365020752
    10. '```' → logprob: -4.187523365020752

Token 1354: ' p' (ID: 275)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3399799168109894
    2. 'j' → logprob: -1.964979887008667
    3. 'x' → logprob: -2.339979887008667
    4. 'i' → logprob: -3.464979887008667
    5. 'rev' → logprob: -4.714980125427246
    6. 'pos' → logprob: -5.339980125427246
    7. 'p' → logprob: -5.714980125427246
    8. 'l' → logprob: -6.964980125427246
    9. 'm' → logprob: -7.089980125427246
    10. 'r' → logprob: -7.964980125427246

Token 1355: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11949855089187622
    2. 'in' → logprob: -2.2444984912872314
    3. 'idx' → logprob: -5.1194987297058105
    4. ' idx' → logprob: -7.6194987297058105
    5. '_idx' → logprob: -9.994498252868652
    6. '=' → logprob: -9.994498252868652
    7. '	idx' → logprob: -10.994498252868652
    8. 'i' → logprob: -11.369498252868652
    9. '[idx' → logprob: -11.744498252868652
    10. '_in' → logprob: -11.869498252868652

Token 1356: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01913490891456604
    2. 're' → logprob: -4.019134998321533
    3. ' range' → logprob: -7.269134998321533
    4. 'idx' → logprob: -8.894134521484375
    5. '   ' → logprob: -10.394134521484375
    6. 'reverse' → logprob: -10.394134521484375
    7. ' reversed' → logprob: -10.769134521484375
    8. 'rev' → logprob: -10.894134521484375
    9. '(range' → logprob: -11.269134521484375
    10. '
' → logprob: -11.394134521484375

Token 1357: '(idx' (ID: 42793)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.023775868117809296
    2. '(idx' → logprob: -3.773775815963745
    3. ' idx' → logprob: -7.773776054382324
    4. '	idx' → logprob: -9.648776054382324
    5. '[idx' → logprob: -10.148776054382324
    6. '           ' → logprob: -13.273776054382324
    7. '                   ' → logprob: -13.398776054382324
    8. '               ' → logprob: -13.398776054382324
    9. '_idx' → logprob: -14.898776054382324
    10. '```' → logprob: -16.023775100708008

Token 1358: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00020735491125378758
    2. ' -' → logprob: -8.50020694732666
    3. '1' → logprob: -14.25020694732666
    4. '           ' → logprob: -14.50020694732666
    5. '```' → logprob: -14.87520694732666
    6. '()-' → logprob: -15.12520694732666
    7. '=' → logprob: -15.25020694732666
    8. '                   ' → logprob: -15.50020694732666
    9. ')-' → logprob: -15.87520694732666
    10. '(idx' → logprob: -15.87520694732666

Token 1359: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.028536492725834e-05
    2. '2' → logprob: -9.875070571899414
    3. '0' → logprob: -11.750070571899414
    4. ' ' → logprob: -12.500070571899414
    5. '-' → logprob: -13.062570571899414
    6. '   ' → logprob: -13.750070571899414
    7. '```' → logprob: -14.312570571899414
    8. '
' → logprob: -15.062570571899414
    9. '10' → logprob: -15.125070571899414
    10. '11' → logprob: -15.375070571899414

Token 1360: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.2837502956390381
    2. ',' → logprob: -1.408750295639038
    3. ',p' → logprob: -6.033750534057617
    4. ',
' → logprob: -9.783750534057617
    5. ' ,' → logprob: -10.158750534057617
    6. ',len' → logprob: -10.158750534057617
    7. ' ,-' → logprob: -10.908750534057617
    8. ',None' → logprob: -11.658750534057617
    9. ',k' → logprob: -12.033750534057617
    10. ',n' → logprob: -12.033750534057617

Token 1361: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '-' → logprob: -18.125
    3. '```' → logprob: -18.125
    4. '2' → logprob: -18.375
    5. '
' → logprob: -18.875
    6. ' ' → logprob: -19.75
    7. '...' → logprob: -20.125
    8. ' -' → logprob: -20.5
    9. '۱' → logprob: -20.75
    10. '``' → logprob: -20.875

Token 1362: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.0005575587856583297
    2. ',' → logprob: -7.5005574226379395
    3. ',true' → logprob: -13.875557899475098
    4. ',-
' → logprob: -13.875557899475098
    5. ',
' → logprob: -14.125557899475098
    6. ' ,-' → logprob: -14.625557899475098
    7. ',--' → logprob: -15.000557899475098
    8. ',:' → logprob: -15.500557899475098
    9. ',None' → logprob: -15.750557899475098
    10. ',-

' → logprob: -15.750557899475098

Token 1363: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.875
    3. ' ' → logprob: -16.375
    4. ',' → logprob: -17.25
    5. ')' → logprob: -17.25
    6. '
' → logprob: -17.75
    7. '):
' → logprob: -18.125
    8. '``' → logprob: -19.125
    9. '...' → logprob: -19.3125
    10. '۱' → logprob: -19.5625

Token 1364: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2033035159111023
    2. '):' → logprob: -1.828303575515747
    3. ',' → logprob: -3.828303575515747
    4. ':' → logprob: -7.328303337097168
    5. ',-' → logprob: -8.078303337097168
    6. ':
' → logprob: -8.578303337097168
    7. ')' → logprob: -9.578303337097168
    8. '               ' → logprob: -10.453303337097168
    9. '):
' → logprob: -10.453303337097168
    10. '                   ' → logprob: -10.578303337097168

Token 1365: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.03223687410354614
    2. '                               ' → logprob: -3.6572368144989014
    3. '```' → logprob: -6.4072370529174805
    4. '                       ' → logprob: -6.6572370529174805
    5. '   ' → logprob: -7.1572370529174805
    6. '           ' → logprob: -7.4072370529174805
    7. ' if' → logprob: -7.5322370529174805
    8. '               ' → logprob: -8.78223705291748
    9. '                   ' → logprob: -8.78223705291748
    10. '                                   ' → logprob: -9.15723705291748

Token 1366: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.23250439763069153
    2. '                               ' → logprob: -2.232504367828369
    3. ' if' → logprob: -2.607504367828369
    4. '                           ' → logprob: -3.732504367828369
    5. ' ' → logprob: -7.107504367828369
    6. '   ' → logprob: -7.357504367828369
    7. '	if' → logprob: -8.357504844665527
    8. '                                   ' → logprob: -8.982504844665527
    9. '                             ' → logprob: -9.107504844665527
    10. '                            ' → logprob: -9.357504844665527

Token 1367: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.008651918731629848
    2. ' not' → logprob: -4.7586517333984375
    3. '!' → logprob: -11.508651733398438
    4. 'read' → logprob: -11.508651733398438
    5. '(not' → logprob: -11.633651733398438
    6. '           ' → logprob: -11.883651733398438
    7. '
' → logprob: -14.633651733398438
    8. '                   ' → logprob: -14.633651733398438
    9. '               ' → logprob: -15.258651733398438
    10. '                       ' → logprob: -15.758651733398438

Token 1368: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0005538671393878758
    2. ' read' → logprob: -7.500554084777832
    3. '(read' → logprob: -14.250554084777832
    4. '[' → logprob: -16.125553131103516
    5. '
' → logprob: -16.125553131103516
    6. '.read' → logprob: -17.375553131103516
    7. '	read' → logprob: -17.875553131103516
    8. 'write' → logprob: -18.750553131103516
    9. '_read' → logprob: -19.000553131103516
    10. '```' → logprob: -19.375553131103516

Token 1369: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -6.749814019713085e-06
    2. '[j' → logprob: -12.750006675720215
    3. 'lst' → logprob: -13.750006675720215
    4. '[' → logprob: -13.875006675720215
    5. '```' → logprob: -14.250006675720215
    6. '[
' → logprob: -14.500006675720215
    7. '(lst' → logprob: -15.250006675720215
    8. '	l' → logprob: -16.50000762939453
    9. '           ' → logprob: -16.62500762939453
    10. '       ' → logprob: -17.00000762939453

Token 1370: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0001875671005109325
    2. 'lst' → logprob: -8.750187873840332
    3. '[' → logprob: -10.875187873840332
    4. 'mst' → logprob: -12.750187873840332
    5. '(lst' → logprob: -13.125187873840332
    6. '[l' → logprob: -13.125187873840332
    7. ']' → logprob: -13.500187873840332
    8. ' lst' → logprob: -14.625187873840332
    9. 'stm' → logprob: -15.500187873840332
    10. '[j' → logprob: -15.750187873840332

Token 1371: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -3.368984107510187e-05
    2. '[
' → logprob: -11.375033378601074
    3. 'p' → logprob: -11.500033378601074
    4. '[' → logprob: -12.125033378601074
    5. '][' → logprob: -12.625033378601074
    6. '[mid' → logprob: -14.125033378601074
    7. '
' → logprob: -14.500033378601074
    8. ']' → logprob: -14.875033378601074
    9. '[[' → logprob: -15.500033378601074
    10. '```' → logprob: -15.625033378601074

Token 1372: ']]:
' (ID: 183340)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.4323623478412628
    2. ']:' → logprob: -1.0573623180389404
    3. ']' → logprob: -5.9323625564575195
    4. ']]:
' → logprob: -7.9323625564575195
    5. ']:

' → logprob: -8.05736255645752
    6. ']:
' → logprob: -9.55736255645752
    7. ']):
' → logprob: -9.93236255645752
    8. ' ]' → logprob: -9.93236255645752
    9. ']]' → logprob: -10.55736255645752
    10. ']):' → logprob: -10.68236255645752

Token 1373: '                               ' (ID: 2419)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7059944868087769
    2. '                               ' → logprob: -0.8309944868087769
    3. ':' → logprob: -2.8309946060180664
    4. ' and' → logprob: -5.580994606018066
    5. '```' → logprob: -5.830994606018066
    6. '):
' → logprob: -6.080994606018066
    7. ':return' → logprob: -7.080994606018066
    8. ':n' → logprob: -8.080994606018066
    9. '                           ' → logprob: -8.330994606018066
    10. 'n' → logprob: -8.830994606018066

Token 1374: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -0.14892369508743286
    2. 'n' → logprob: -2.023923635482788
    3. '                               ' → logprob: -6.148923873901367
    4. '                                   ' → logprob: -6.398923873901367
    5. ' ch' → logprob: -7.523923873901367
    6. '```' → logprob: -7.523923873901367
    7. 'return' → logprob: -7.648923873901367
    8. '   ' → logprob: -8.773923873901367
    9. 'next' → logprob: -8.773923873901367
    10. '``' → logprob: -9.773923873901367

Token 1375: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000533136713784188
    2. '=l' → logprob: -7.750533103942871
    3. '=
' → logprob: -9.875533103942871
    4. ' =' → logprob: -10.125533103942871
    5. '=n' → logprob: -12.000533103942871
    6. '=

' → logprob: -13.000533103942871
    7. '=list' → logprob: -14.625533103942871
    8. '=p' → logprob: -15.000533103942871
    9. '=j' → logprob: -15.375533103942871
    10. '=}' → logprob: -15.500533103942871

Token 1376: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.00015908108616713434
    2. ' lst' → logprob: -8.75015926361084
    3. '(lst' → logprob: -14.87515926361084
    4. 'l' → logprob: -16.375158309936523
    5. '                           ' → logprob: -17.500158309936523
    6. '                               ' → logprob: -18.125158309936523
    7. '.lst' → logprob: -18.250158309936523
    8. 'list' → logprob: -18.250158309936523
    9. '           ' → logprob: -18.625158309936523
    10. '_lst' → logprob: -18.750158309936523

Token 1377: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -3.523948907968588e-05
    2. 'p' → logprob: -10.375035285949707
    3. '```' → logprob: -13.375035285949707
    4. '[
' → logprob: -13.875035285949707
    5. '][' → logprob: -14.750035285949707
    6. '[' → logprob: -14.875035285949707
    7. ']' → logprob: -15.750035285949707
    8. '(p' → logprob: -16.00003433227539
    9. '<p' → logprob: -16.62503433227539
    10. '	p' → logprob: -16.75003433227539

Token 1378: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6910147070884705
    2. ']
' → logprob: -0.8160147070884705
    3. '                               ' → logprob: -3.1910147666931152
    4. ')' → logprob: -5.441014766693115
    5. '                           ' → logprob: -5.441014766693115
    6. '<|end|>' → logprob: -5.691014766693115
    7. ')
' → logprob: -6.816014766693115
    8. '])' → logprob: -8.566014289855957
    9. '                                   ' → logprob: -8.566014289855957
    10. '];' → logprob: -8.691014289855957

Token 1379: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.04591004550457001
    2. '<|end|>' → logprob: -3.795910120010376
    3. '```' → logprob: -4.045909881591797
    4. '                                   ' → logprob: -6.420909881591797
    5. '                           ' → logprob: -7.295909881591797
    6. '                                
' → logprob: -7.420909881591797
    7. '                                       ' → logprob: -8.295909881591797
    8. '               ' → logprob: -8.545909881591797
    9. '                                ' → logprob: -8.795909881591797
    10. '                       ' → logprob: -8.920909881591797

Token 1380: ' break' (ID: 2338)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.31559431552886963
    2. 'break' (adapté à ' break') → logprob: -1.3155943155288696
    3. ' break' → logprob: -6.44059419631958
    4. '                                   ' → logprob: -8.065594673156738
    5. '	break' → logprob: -8.565594673156738
    6. '							' → logprob: -9.690594673156738
    7. '
' → logprob: -10.190594673156738
    8. '                                       ' → logprob: -10.815594673156738
    9. '```' → logprob: -10.815594673156738
    10. '               ' → logprob: -10.940594673156738

Token 1381: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.4287373125553131
    2. '<|end|>' → logprob: -2.0537374019622803
    3. '                               ' → logprob: -2.3037374019622803
    4. '                       ' → logprob: -3.1787374019622803
    5. ' if' → logprob: -3.9287374019622803
    6. '               ' → logprob: -3.9287374019622803
    7. '           ' → logprob: -4.053737163543701
    8. '                   ' → logprob: -4.428737163543701
    9. '```' → logprob: -5.678737163543701
    10. '       ' → logprob: -6.678737163543701

Token 1382: '                   ' (ID: 699)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.18961450457572937
    2. '                               ' → logprob: -2.8146145343780518
    3. '                       ' → logprob: -3.5646145343780518
    4. '                   ' → logprob: -3.6896145343780518
    5. '               ' → logprob: -3.9396145343780518
    6. '           ' → logprob: -4.189614295959473
    7. '<|end|>' → logprob: -4.314614295959473
    8. '```' → logprob: -5.564614295959473
    9. ' if' → logprob: -6.064614295959473
    10. '       ' → logprob: -6.689614295959473

Token 1383: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7004605531692505
    2. '                   ' → logprob: -0.7004605531692505
    3. '                           ' → logprob: -5.575460433959961
    4. ' if' → logprob: -5.950460433959961
    5. '               ' → logprob: -8.075460433959961
    6. '                       ' → logprob: -8.325460433959961
    7. '           ' → logprob: -8.825460433959961
    8. '```' → logprob: -10.325460433959961
    9. '                               ' → logprob: -10.450460433959961
    10. '				' → logprob: -10.450460433959961

Token 1384: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.003186147892847657
    2. ' ch' → logprob: -5.753186225891113
    3. '   ' → logprob: -12.503186225891113
    4. 'n' → logprob: -12.628186225891113
    5. '	ch' → logprob: -14.253186225891113
    6. '  ' → logprob: -15.253186225891113
    7. '(ch' → logprob: -15.378186225891113
    8. ' ' → logprob: -16.128185272216797
    9. ' nxt' → logprob: -16.378185272216797
    10. '           ' → logprob: -16.753185272216797

Token 1385: '!=-' (ID: 146584)
  Prédit: '!=-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=-' → logprob: -0.24491366744041443
    2. ' !=' → logprob: -1.8699136972427368
    3. '!=' → logprob: -2.9949135780334473
    4. '==-' → logprob: -4.619913578033447
    5. '==' → logprob: -5.994913578033447
    6. ' ==' → logprob: -8.119914054870605
    7. '=' → logprob: -8.369914054870605
    8. ')!=' → logprob: -10.619914054870605
    9. '```' → logprob: -10.619914054870605
    10. '!==' → logprob: -10.744914054870605

Token 1386: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '=' → logprob: -14.500001907348633
    3. '```' → logprob: -14.625001907348633
    4. '-' → logprob: -15.125001907348633
    5. '2' → logprob: -16.500001907348633
    6. ' ' → logprob: -16.750001907348633
    7. '                   ' → logprob: -17.000001907348633
    8. '#' → logprob: -18.062501907348633
    9. '           ' → logprob: -18.187501907348633
    10. '   ' → logprob: -18.250001907348633

Token 1387: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06702320277690887
    2. ':' → logprob: -2.817023277282715
    3. '                       ' → logprob: -5.817023277282715
    4. ':n' → logprob: -7.692023277282715
    5. '                           ' → logprob: -7.692023277282715
    6. '):
' → logprob: -8.067023277282715
    7. '                               ' → logprob: -8.192023277282715
    8. '<|end|>' → logprob: -9.192023277282715
    9. '                   ' → logprob: -9.317023277282715
    10. 'n' → logprob: -9.817023277282715

Token 1388: '                       ' (ID: 968)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0740821436047554
    2. '                       ' → logprob: -2.949082136154175
    3. 'n' → logprob: -4.699082374572754
    4. '                   ' → logprob: -5.824082374572754
    5. ':' → logprob: -6.199082374572754
    6. '                               ' → logprob: -6.699082374572754
    7. '                           ' → logprob: -6.824082374572754
    8. '               ' → logprob: -7.074082374572754
    9. '	n' → logprob: -7.574082374572754
    10. ':n' → logprob: -7.824082374572754

Token 1389: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03433440253138542
    2. ' nxt' → logprob: -3.409334421157837
    3. '                           ' → logprob: -8.284334182739258
    4. '                               ' → logprob: -8.284334182739258
    5. '                       ' → logprob: -9.409334182739258
    6. 'next' → logprob: -10.284334182739258
    7. ' nex' → logprob: -11.534334182739258
    8. '   ' → logprob: -11.534334182739258
    9. ' next' → logprob: -11.784334182739258
    10. ' n' → logprob: -11.909334182739258

Token 1390: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031784253660589457
    2. ' =' → logprob: -5.753178596496582
    3. '=
' → logprob: -14.378178596496582
    4. '=c' → logprob: -17.128177642822266
    5. '=

' → logprob: -17.753177642822266
    6. '   ' → logprob: -17.878177642822266
    7. '[ch' → logprob: -18.003177642822266
    8. ',ch' → logprob: -18.128177642822266
    9. '	ch' → logprob: -18.753177642822266
    10. ')' → logprob: -18.878177642822266

Token 1391: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -1.306760805164231e-05
    2. ' ch' → logprob: -11.25001335144043
    3. '	ch' → logprob: -19.12501335144043
    4. 'Ch' → logprob: -21.12501335144043
    5. '(ch' → logprob: -21.25001335144043
    6. '[ch' → logprob: -21.50001335144043
    7. '_ch' → logprob: -22.00001335144043
    8. '                   ' → logprob: -22.12501335144043
    9. ''ch' → logprob: -22.25001335144043
    10. '-ch' → logprob: -22.62501335144043

Token 1392: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5731425285339355
    2. '<|end|>' → logprob: -1.0731425285339355
    3. '               ' → logprob: -3.3231425285339355
    4. 'else' → logprob: -4.3231425285339355
    5. '<|end|>' → logprob: -4.3231425285339355
    6. '                   ' → logprob: -4.9481425285339355
    7. 'elif' → logprob: -5.0731425285339355
    8. '		' → logprob: -5.6981425285339355
    9. '       ' → logprob: -5.8231425285339355
    10. ' else' → logprob: -6.0731425285339355

Token 1393: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02123350277543068
    2. '
' → logprob: -5.146233558654785
    3. 'else' → logprob: -5.271233558654785
    4. ' else' → logprob: -5.896233558654785
    5. '<|end|>' → logprob: -6.021233558654785
    6. '               ' → logprob: -6.521233558654785
    7. 'elif' → logprob: -6.646233558654785
    8. '            
' → logprob: -7.896233558654785
    9. '		' → logprob: -7.896233558654785
    10. '<|end|>' → logprob: -8.146233558654785

Token 1394: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.481592059135437
    2. 'else' (adapté à ' else') → logprob: -1.481592059135437
    3. 'elif' → logprob: -2.4815921783447266
    4. ' else' → logprob: -3.4815921783447266
    5. '               ' → logprob: -3.6065921783447266
    6. '                   ' → logprob: -5.231592178344727
    7. ' elif' → logprob: -5.481592178344727
    8. 'if' → logprob: -7.231592178344727
    9. '       ' → logprob: -7.356592178344727
    10. '		' → logprob: -7.731592178344727

Token 1395: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03096628375351429
    2. '                       ' → logprob: -4.155966281890869
    3. ':' → logprob: -4.405966281890869
    4. '                   ' → logprob: -6.905966281890869
    5. 'n' → logprob: -7.030966281890869
    6. ' if' → logprob: -8.780966758728027
    7. '                           ' → logprob: -9.405966758728027
    8. '):
' → logprob: -9.655966758728027
    9. ' :
' → logprob: -9.780966758728027
    10. '       ' → logprob: -10.155966758728027

Token 1396: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.11913417279720306
    2. 'n' → logprob: -2.3691341876983643
    3. ' nxt' → logprob: -4.619133949279785
    4. '                           ' → logprob: -5.744133949279785
    5. '   ' → logprob: -6.119133949279785
    6. ' n' → logprob: -7.119133949279785
    7. '                   ' → logprob: -7.619133949279785
    8. '```' → logprob: -7.869133949279785
    9. '                               ' → logprob: -8.119133949279785
    10. ' next' → logprob: -8.119133949279785

Token 1397: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4256761372089386
    2. ' nxt' → logprob: -1.3006761074066162
    3. 'next' → logprob: -3.925676107406616
    4. ' n' → logprob: -3.925676107406616
    5. ' next' → logprob: -4.050676345825195
    6. '                       ' → logprob: -4.300676345825195
    7. ' last' → logprob: -6.800676345825195
    8. '                           ' → logprob: -7.050676345825195
    9. 'last' → logprob: -7.050676345825195
    10. ' nex' → logprob: -8.425676345825195

Token 1398: ' else' (ID: 1203)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03736153244972229
    2. 'last' → logprob: -4.6623616218566895
    3. 'next' → logprob: -4.9123616218566895
    4. ' nxt' → logprob: -5.1623616218566895
    5. '                       ' → logprob: -5.4123616218566895
    6. '#' → logprob: -5.4123616218566895
    7. '
' → logprob: -6.4123616218566895
    8. ' last' → logprob: -7.1623616218566895
    9. ' next' → logprob: -7.5373616218566895
    10. ' n' → logprob: -7.5373616218566895

Token 1399: ' read' (ID: 1729)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7083543539047241
    2. ' nxt' → logprob: -0.7083543539047241
    3. '
' → logprob: -5.083354473114014
    4. ' n' → logprob: -5.708354473114014
    5. '                       ' → logprob: -6.083354473114014
    6. ' next' → logprob: -6.708354473114014
    7. 'next' → logprob: -6.833354473114014
    8. ' nex' → logprob: -7.708354473114014
    9. '                           ' → logprob: -8.708353996276855
    10. '                        
' → logprob: -9.083353996276855

Token 1400: ' (' (ID: 350)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.2838466465473175
    2. 'next' → logprob: -1.4088466167449951
    3. ' linear' → logprob: -7.033846855163574
    4. '(next' → logprob: -7.158846855163574
    5. 'linear' → logprob: -7.783846855163574
    6. ' last' → logprob: -8.283846855163574
    7. 'last' → logprob: -8.783846855163574
    8. ' (' → logprob: -9.158846855163574
    9. '(' → logprob: -10.283846855163574
    10. 'n' → logprob: -10.908846855163574

Token 1401: 'k' (ID: 74)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.4288730323314667
    2. ' last' → logprob: -1.053873062133789
    3. '(last' → logprob: -9.428873062133789
    4. '                           ' → logprob: -10.553873062133789
    5. '	last' → logprob: -10.928873062133789
    6. '                               ' → logprob: -11.803873062133789
    7. '                       ' → logprob: -12.178873062133789
    8. 'next' → logprob: -12.428873062133789
    9. '[last' → logprob: -12.428873062133789
    10. '   ' → logprob: -12.428873062133789

Token 1402: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007418390363454819
    2. '[last' → logprob: -5.632418155670166
    3. ' +' → logprob: -5.882418155670166
    4. 'ey' → logprob: -8.007418632507324
    5. 'last' → logprob: -8.132418632507324
    6. '[next' → logprob: -9.382418632507324
    7. ')+' → logprob: -9.882418632507324
    8. '```' → logprob: -10.132418632507324
    9. '[current' → logprob: -10.257418632507324
    10. '_last' → logprob: -10.257418632507324

Token 1403: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014287306112237275
    2. '+' → logprob: -9.125143051147461
    3. ' ' → logprob: -11.000143051147461
    4. 'last' → logprob: -12.125143051147461
    5. '`' → logprob: -13.000143051147461
    6. ' +' → logprob: -13.250143051147461
    7. '   ' → logprob: -13.250143051147461
    8. '
' → logprob: -13.375143051147461
    9. '```' → logprob: -13.375143051147461
    10. ')' → logprob: -14.250143051147461

Token 1404: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14677797257900238
    2. ')+' → logprob: -2.021777868270874
    3. '+' → logprob: -6.271778106689453
    4. ']+' → logprob: -7.021778106689453
    5. ']' → logprob: -7.771778106689453
    6. '```' → logprob: -9.021778106689453
    7. ')
' → logprob: -9.396778106689453
    8. ' )' → logprob: -9.396778106689453
    9. '])' → logprob: -9.771778106689453
    10. '[next' → logprob: -9.896778106689453

Token 1405: 'th' (ID: 404)
  Prédit: '_read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_read' → logprob: -0.24076436460018158
    2. 'last' → logprob: -1.6157643795013428
    3. '1' → logprob: -5.365764141082764
    4. 'next' → logprob: -5.990764141082764
    5. 'read' → logprob: -6.115764141082764
    6. 'Read' → logprob: -6.865764141082764
    7. ')' → logprob: -7.365764141082764
    8. '_last' → logprob: -7.365764141082764
    9. 'token' → logprob: -7.615764141082764
    10. 'letter' → logprob: -7.740764141082764

Token 1406: ' letter' (ID: 10263)
  Prédit: '_read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_read' → logprob: -1.3788444995880127
    2. ')' → logprob: -1.8788444995880127
    3. '_letter' → logprob: -2.2538444995880127
    4. 'n' → logprob: -2.3788444995880127
    5. '_linear' → logprob: -2.3788444995880127
    6. '+' → logprob: -2.7538444995880127
    7. 'letter' → logprob: -3.0038444995880127
    8. '_n' → logprob: -3.2538444995880127
    9. 'next' → logprob: -3.7538444995880127
    10. ']' → logprob: -4.003844261169434

Token 1407: ' where' (ID: 1919)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.287393182516098
    2. '=' → logprob: -1.6623932123184204
    3. '=n' → logprob: -3.537393093109131
    4. '                       ' → logprob: -4.162393093109131
    5. '(n' → logprob: -5.787393093109131
    6. 'n' → logprob: -5.912393093109131
    7. '(next' → logprob: -6.162393093109131
    8. 'next' → logprob: -6.537393093109131
    9. '[next' → logprob: -7.287393093109131
    10. 'from' → logprob: -7.537393093109131

Token 1408: ' k' (ID: 372)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.08750417083501816
    2. ' last' → logprob: -2.9625041484832764
    3. 'k' → logprob: -3.8375041484832764
    4. '(last' → logprob: -4.9625043869018555
    5. '(k' → logprob: -6.8375043869018555
    6. ' k' → logprob: -6.8375043869018555
    7. 'next' → logprob: -7.3375043869018555
    8. 'current' → logprob: -8.462504386901855
    9. ' (' → logprob: -8.712504386901855
    10. ' next' → logprob: -8.962504386901855

Token 1409: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.055031679570674896
    2. ' =' → logprob: -2.9300317764282227
    3. '=k' → logprob: -9.930031776428223
    4. '=current' → logprob: -10.680031776428223
    5. '=len' → logprob: -11.055031776428223
    6. '=line' → logprob: -11.180031776428223
    7. '=n' → logprob: -11.430031776428223
    8. '=int' → logprob: -11.805031776428223
    9. '=max' → logprob: -11.930031776428223
    10. '=list' → logprob: -12.555031776428223

Token 1410: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.002476135268807411
    2. ' last' → logprob: -6.002476215362549
    3. '(last' → logprob: -15.12747573852539
    4. '	last' → logprob: -17.12747573852539
    5. 'current' → logprob: -17.50247573852539
    6. '   ' → logprob: -17.75247573852539
    7. 'next' → logprob: -18.62747573852539
    8. '0' → logprob: -18.62747573852539
    9. '[last' → logprob: -18.62747573852539
    10. '
' → logprob: -18.87747573852539

Token 1411: ' read' (ID: 1729)
  Prédit: '_read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_read' → logprob: -0.00013619766104966402
    2. 'read' → logprob: -9.250136375427246
    3. '_' → logprob: -10.625136375427246
    4. '_reads' → logprob: -12.000136375427246
    5. '_READ' → logprob: -13.000136375427246
    6. '_write' → logprob: -13.250136375427246
    7. 'Read' → logprob: -13.750136375427246
    8. '```' → logprob: -14.375136375427246
    9. '_written' → logprob: -15.250136375427246
    10. '_seen' → logprob: -15.375136375427246

Token 1412: ' letter' (ID: 10263)
  Prédit: '_type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.004769141785800457
    2. '_' → logprob: -5.754769325256348
    3. '_token' → logprob: -7.629769325256348
    4. '_current' → logprob: -8.254769325256348
    5. '_index' → logprob: -8.504769325256348
    6. 'type' → logprob: -8.629769325256348
    7. 'current' → logprob: -10.004769325256348
    8. '_letter' → logprob: -10.004769325256348
    9. '```' → logprob: -10.129769325256348
    10. '_position' → logprob: -10.379769325256348

Token 1413: ' with' (ID: 483)
  Prédit: '_with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.8252106308937073
    2. 'with' → logprob: -1.2002105712890625
    3. '_type' → logprob: -1.5752105712890625
    4. '[current' → logprob: -4.4502105712890625
    5. '_index' → logprob: -5.3252105712890625
    6. '[' → logprob: -5.3252105712890625
    7. '```' → logprob: -5.4502105712890625
    8. 'type' → logprob: -5.8252105712890625
    9. '[t' → logprob: -5.8252105712890625
    10. ' with' → logprob: -6.2002105712890625

Token 1414: ' (' (ID: 350)
  Prédit: 'jm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jm' → logprob: -0.05396025627851486
    2. 't' → logprob: -3.3039603233337402
    3. ' jm' → logprob: -4.55396032333374
    4. '(t' → logprob: -5.42896032333374
    5. '(j' → logprob: -7.92896032333374
    6. ' t' → logprob: -8.678959846496582
    7. 'jmp' → logprob: -9.553959846496582
    8. ' (' → logprob: -9.678959846496582
    9. 'jump' → logprob: -10.053959846496582
    10. 'j' → logprob: -10.428959846496582

Token 1415: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.01328422874212265
    2. 'jm' → logprob: -4.388284206390381
    3. ' t' → logprob: -8.638284683227539
    4. '(t' → logprob: -8.888284683227539
    5. '`t' → logprob: -9.388284683227539
    6. ')' → logprob: -9.763284683227539
    7. ')t' → logprob: -10.263284683227539
    8. ' jm' → logprob: -10.263284683227539
    9. '   ' → logprob: -10.638284683227539
    10. 'jmp' → logprob: -10.763284683227539

Token 1416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4625284671783447
    2. '1' → logprob: -1.5875284671783447
    3. '[' → logprob: -1.8375284671783447
    4. ',n' → logprob: -7.087528228759766
    5. '```' → logprob: -7.212528228759766
    6. ',
' → logprob: -7.337528228759766
    7. '(' → logprob: -7.337528228759766
    8. ',t' → logprob: -7.712528228759766
    9. '
' → logprob: -7.712528228759766
    10. '_' → logprob: -7.962528228759766

Token 1417: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.751746746478602e-05
    2. '0' → logprob: -10.25004768371582
    3. 't' → logprob: -12.12504768371582
    4. ' ' → logprob: -12.62504768371582
    5. '"' → logprob: -13.37504768371582
    6. ''' → logprob: -14.37504768371582
    7. '
' → logprob: -14.87504768371582
    8. '(t' → logprob: -15.62504768371582
    9. '(' → logprob: -15.75004768371582
    10. ''t' → logprob: -16.12504768371582

Token 1418: ')
' (ID: 446)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.3494599759578705
    2. ')' → logprob: -1.7244600057601929
    3. ']+' → logprob: -2.3494598865509033
    4. ']' → logprob: -4.724460124969482
    5. ')
' → logprob: -4.849460124969482
    6. ')]' → logprob: -6.474460124969482
    7. '])' → logprob: -7.474460124969482
    8. '+' → logprob: -7.974460124969482
    9. '```' → logprob: -8.474459648132324
    10. ']
' → logprob: -8.599459648132324

Token 1419: '                       ' (ID: 968)
  Prédit: '[last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.6968915462493896
    2. ' =' → logprob: -2.0718915462493896
    3. '```' → logprob: -2.5718915462493896
    4. '                       ' → logprob: -2.8218915462493896
    5. '(last' → logprob: -2.8218915462493896
    6. ' if' → logprob: -3.1968915462493896
    7. '[current' → logprob: -3.4468915462493896
    8. '=' → logprob: -3.8218915462493896
    9. '[next' → logprob: -3.9468915462493896
    10. ' last' → logprob: -4.821891784667969

Token 1420: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.9522718787193298
    2. 'last' → logprob: -1.0772719383239746
    3. ' last' → logprob: -2.3272719383239746
    4. ' k' → logprob: -2.4522719383239746
    5. '                       ' → logprob: -3.4522719383239746
    6. ' if' → logprob: -3.8272719383239746
    7. 'if' → logprob: -4.077271938323975
    8. 'next' → logprob: -5.077271938323975
    9. 'n' → logprob: -5.202271938323975
    10. '```' → logprob: -6.202271938323975

Token 1421: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3501345217227936
    2. ' =' → logprob: -1.2251344919204712
    3. '=k' → logprob: -6.850134372711182
    4. '=current' → logprob: -7.850134372711182
    5. '=n' → logprob: -8.72513484954834
    6. 'k' → logprob: -10.85013484954834
    7. '[last' → logprob: -11.47513484954834
    8. '=t' → logprob: -11.72513484954834
    9. ',last' → logprob: -12.35013484954834
    10. '=line' → logprob: -12.35013484954834

Token 1422: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.00018339496455155313
    2. ' last' → logprob: -8.62518310546875
    3. '-' → logprob: -12.75018310546875
    4. '0' → logprob: -14.50018310546875
    5. '(last' → logprob: -15.37518310546875
    6. '-last' → logprob: -16.87518310546875
    7. '
' → logprob: -17.25018310546875
    8. '   ' → logprob: -17.25018310546875
    9. '	last' → logprob: -17.25018310546875
    10. 'current' → logprob: -17.62518310546875

Token 1423: '_read' (ID: 14291)
  Prédit: '_read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_read' → logprob: -0.00034714414505288005
    2. 'read' → logprob: -8.375347137451172
    3. '_reads' → logprob: -9.250347137451172
    4. '_' → logprob: -11.875347137451172
    5. 'Read' → logprob: -13.000347137451172
    6. '[t' → logprob: -13.500347137451172
    7. '_current' → logprob: -13.500347137451172
    8. '_READ' → logprob: -13.750347137451172
    9. '[_' → logprob: -14.375347137451172
    10. ' _' → logprob: -14.500347137451172

Token 1424: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -7.226628895296017e-06
    2. 'type' → logprob: -12.125007629394531
    3. '_pos' → logprob: -15.375007629394531
    4. 'pos' → logprob: -15.750007629394531
    5. '```' → logprob: -15.750007629394531
    6. '   ' → logprob: -16.00000762939453
    7. '                   ' → logprob: -16.12500762939453
    8. '_' → logprob: -16.12500762939453
    9. '       ' → logprob: -16.12500762939453
    10. '           ' → logprob: -16.25000762939453

Token 1425: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.16859398782253265
    2. '[t' → logprob: -1.9185940027236938
    3. 'get' → logprob: -4.793593883514404
    4. '.setdefault' → logprob: -10.043594360351562
    5. 't' → logprob: -12.793594360351562
    6. '`t' → logprob: -13.668594360351562
    7. '_get' → logprob: -13.668594360351562
    8. '```' → logprob: -13.918594360351562
    9. '[j' → logprob: -14.293594360351562
    10. '(t' → logprob: -14.293594360351562

Token 1426: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -2.5822400857578032e-05
    2. 't' → logprob: -10.625025749206543
    3. '[t' → logprob: -13.625025749206543
    4. '`t' → logprob: -17.00002670288086
    5. '```' → logprob: -17.37502670288086
    6. '	t' → logprob: -17.37502670288086
    7. '(
' → logprob: -17.75002670288086
    8. '(j' → logprob: -17.75002670288086
    9. '((' → logprob: -18.12502670288086
    10. '(' → logprob: -18.37502670288086

Token 1427: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017807122319936752
    2. ',-' → logprob: -4.2678070068359375
    3. ',None' → logprob: -5.8928070068359375
    4. ')+' → logprob: -7.6428070068359375
    5. ')' → logprob: -9.142807006835938
    6. ',t' → logprob: -9.392807006835938
    7. ']+' → logprob: -9.767807006835938
    8. ' ,' → logprob: -10.767807006835938
    9. ',null' → logprob: -10.892807006835938
    10. ',k' → logprob: -11.017807006835938

Token 1428: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.125001907348633
    3. '2' → logprob: -15.375001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '```' → logprob: -16.625001907348633
    6. '-' → logprob: -17.000001907348633
    7. '۱' → logprob: -17.812501907348633
    8. '  ' → logprob: -18.312501907348633
    9. ' -' → logprob: -18.375001907348633
    10. '１' → logprob: -18.375001907348633

Token 1429: ')
' (ID: 446)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.14917144179344177
    2. '+' → logprob: -2.5241713523864746
    3. ')' → logprob: -2.8991713523864746
    4. ']+' → logprob: -6.274171352386475
    5. ')
' → logprob: -7.274171352386475
    6. ' +' → logprob: -7.274171352386475
    7. '                       ' → logprob: -9.899171829223633
    8. '```' → logprob: -11.399171829223633
    9. '       ' → logprob: -11.774171829223633
    10. '                   ' → logprob: -12.024171829223633

Token 1430: '                       ' (ID: 968)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2835037112236023
    2. ' +' → logprob: -1.408503770828247
    3. '+k' → logprob: -6.283503532409668
    4. '                       ' → logprob: -8.533503532409668
    5. '```' → logprob: -8.783503532409668
    6. '+n' → logprob: -9.783503532409668
    7. '+
' → logprob: -10.783503532409668
    8. '()+' → logprob: -11.283503532409668
    9. '                           ' → logprob: -12.158503532409668
    10. ' if' → logprob: -12.783503532409668

Token 1431: ' candidate' (ID: 17098)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9465197920799255
    2. '                       ' → logprob: -1.6965198516845703
    3. ' if' → logprob: -2.0715198516845703
    4. 'if' → logprob: -2.3215198516845703
    5. 'next' → logprob: -2.3215198516845703
    6. ' nxt' → logprob: -2.5715198516845703
    7. ' next' → logprob: -4.07151985168457
    8. '```' → logprob: -4.94651985168457
    9. ' n' → logprob: -6.57151985168457
    10. '                   ' → logprob: -7.94651985168457

Token 1432: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05576004832983017
    2. '=' → logprob: -3.430760145187378
    3. '=k' → logprob: -4.180759906768799
    4. '=n' → logprob: -5.055759906768799
    5. '=current' → logprob: -9.555760383605957
    6. '=i' → logprob: -9.930760383605957
    7. '=c' → logprob: -10.055760383605957
    8. '=index' → logprob: -11.930760383605957
    9. '+' → logprob: -12.055760383605957
    10. '+=' → logprob: -12.680760383605957

Token 1433: ' next' (ID: 2613)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.044436026364564896
    2. ' k' → logprob: -3.169435977935791
    3. 'next' → logprob: -6.919435977935791
    4. ' next' → logprob: -7.794435977935791
    5. '(k' → logprob: -11.04443645477295
    6. ' (' → logprob: -12.16943645477295
    7. '```' → logprob: -13.41943645477295
    8. '0' → logprob: -13.66943645477295
    9. '{k' → logprob: -13.79443645477295
    10. '`' → logprob: -13.79443645477295

Token 1434: '_linear' (ID: 102608)
  Prédit: '_linear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_linear' → logprob: -0.00016671013145241886
    2. 'linear' → logprob: -9.125166893005371
    3. '_line' → logprob: -11.000166893005371
    4. '_LINEAR' → logprob: -11.625166893005371
    5. 'Linear' → logprob: -11.625166893005371
    6. '(k' → logprob: -12.000166893005371
    7. '_token' → logprob: -12.625166893005371
    8. '```' → logprob: -12.625166893005371
    9. '(candidate' → logprob: -13.500166893005371
    10. '_' → logprob: -13.500166893005371

Token 1435: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -3.011373155459296e-05
    2. '(' → logprob: -10.625030517578125
    3. 'k' → logprob: -12.375030517578125
    4. '(
' → logprob: -13.875030517578125
    5. ' (' → logprob: -14.625030517578125
    6. '((' → logprob: -16.000030517578125
    7. '```' → logprob: -17.375030517578125
    8. '(key' → logprob: -18.000030517578125
    9. '(c' → logprob: -18.875030517578125
    10. '[k' → logprob: -19.000030517578125

Token 1436: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08713877201080322
    2. '+' → logprob: -2.5871386528015137
    3. ')+' → logprob: -5.212138652801514
    4. ' +' → logprob: -6.087138652801514
    5. ')
' → logprob: -8.462139129638672
    6. ' )' → logprob: -8.587139129638672
    7. '                       ' → logprob: -11.212139129638672
    8. '+)' → logprob: -11.212139129638672
    9. '           ' → logprob: -11.462139129638672
    10. '                           ' → logprob: -11.962139129638672

Token 1437: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7939589023590088
    2. '
' → logprob: -1.5439589023590088
    3. '           ' → logprob: -2.668958902359009
    4. '```' → logprob: -2.793958902359009
    5. ' if' → logprob: -2.918958902359009
    6. '(n' → logprob: -3.293958902359009
    7. '<|end|>' → logprob: -3.293958902359009
    8. '                        
' → logprob: -4.29395866394043
    9. 'if' → logprob: -4.54395866394043
    10. ')' → logprob: -4.54395866394043

Token 1438: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6562745571136475
    2. 'if' (adapté à ' if') → logprob: -1.0312745571136475
    3. '                       ' → logprob: -2.5312745571136475
    4. '
' → logprob: -4.031274795532227
    5. 'n' → logprob: -4.156274795532227
    6. '(n' → logprob: -5.781274795532227
    7. '                        
' → logprob: -6.156274795532227
    8. '           ' → logprob: -6.656274795532227
    9. '                           ' → logprob: -7.281274795532227
    10. '```' → logprob: -7.406274795532227

Token 1439: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.000273136975010857
    2. ' candidate' → logprob: -8.500272750854492
    3. 'n' → logprob: -9.625272750854492
    4. '(candidate' → logprob: -13.375272750854492
    5. 'not' → logprob: -13.625272750854492
    6. '   ' → logprob: -15.125272750854492
    7. 'c' → logprob: -15.250272750854492
    8. '_candidate' → logprob: -15.875272750854492
    9. 'cand' → logprob: -15.875272750854492
    10. ' ' → logprob: -17.625272750854492

Token 1440: '!=-' (ID: 146584)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.21263985335826874
    2. '!=' → logprob: -1.8376398086547852
    3. '!=-' → logprob: -3.962639808654785
    4. ' is' → logprob: -4.837639808654785
    5. '<|end|>' → logprob: -6.337639808654785
    6. ')' → logprob: -6.587639808654785
    7. ' not' → logprob: -7.587639808654785
    8. ')!=' → logprob: -7.587639808654785
    9. ' ==' → logprob: -7.962639808654785
    10. '==' → logprob: -8.212639808654785

Token 1441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -15.000000953674316
    4. '=' → logprob: -15.125000953674316
    5. '-' → logprob: -16.875001907348633
    6. '+' → logprob: -17.062501907348633
    7. 'candidate' → logprob: -17.562501907348633
    8. '`' → logprob: -18.000001907348633
    9. '2' → logprob: -18.437501907348633
    10. '>' → logprob: -18.437501907348633

Token 1442: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.013001039624214172
    2. '                           ' → logprob: -5.138000965118408
    3. ':' → logprob: -5.763000965118408
    4. ':n' → logprob: -5.763000965118408
    5. '                       ' → logprob: -8.138001441955566
    6. ' and' → logprob: -9.013001441955566
    7. '):
' → logprob: -9.513001441955566
    8. 'n' → logprob: -9.638001441955566
    9. '                               ' → logprob: -9.763001441955566
    10. '<n' → logprob: -10.138001441955566

Token 1443: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.41415008902549744
    2. '(not' → logprob: -1.7891501188278198
    3. 'candidate' → logprob: -1.9141501188278198
    4. '(candidate' → logprob: -4.039150238037109
    5. '(j' → logprob: -5.914150238037109
    6. '(has' → logprob: -6.539150238037109
    7. 'has' → logprob: -7.289150238037109
    8. ' not' → logprob: -7.539150238037109
    9. '((' → logprob: -7.539150238037109
    10. '(read' → logprob: -8.41415023803711

Token 1444: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0002501343551557511
    2. 'has' → logprob: -8.375249862670898
    3. ' read' → logprob: -11.000249862670898
    4. '(read' → logprob: -13.125249862670898
    5. '	read' → logprob: -15.375249862670898
    6. 'visited' → logprob: -15.750249862670898
    7. '   ' → logprob: -16.2502498626709
    8. 'have' → logprob: -16.8752498626709
    9. '(has' → logprob: -16.8752498626709
    10. 'jump' → logprob: -16.8752498626709

Token 1445: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0002574057725723833
    2. '[' → logprob: -8.37525749206543
    3. '(candidate' → logprob: -11.25025749206543
    4. ' [' → logprob: -12.50025749206543
    5. 'candidate' → logprob: -12.50025749206543
    6. '```' → logprob: -12.50025749206543
    7. '[
' → logprob: -13.50025749206543
    8. ' candidate' → logprob: -15.00025749206543
    9. '[current' → logprob: -15.50025749206543
    10. '[next' → logprob: -16.37525749206543

Token 1446: 'andidate' (ID: 25264)
  Prédit: 'andidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidate' → logprob: -0.001864499063231051
    2. '[c' → logprob: -6.376864433288574
    3. 'and' → logprob: -9.751864433288574
    4. '[' → logprob: -9.751864433288574
    5. 'candidate' → logprob: -10.251864433288574
    6. 'andidat' → logprob: -12.376864433288574
    7. '(candidate' → logprob: -12.876864433288574
    8. 'andidates' → logprob: -13.376864433288574
    9. '```' → logprob: -14.126864433288574
    10. '[t' → logprob: -14.876864433288574

Token 1447: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.8028215765953064
    2. ':' → logprob: -1.5528216361999512
    3. ':
' → logprob: -1.6778216361999512
    4. ']:' → logprob: -1.9278216361999512
    5. ' and' → logprob: -5.552821636199951
    6. '):
' → logprob: -6.427821636199951
    7. ']' → logprob: -6.677821636199951
    8. '           ' → logprob: -7.802821636199951
    9. 'and' → logprob: -7.927821636199951
    10. '):' → logprob: -8.802821159362793

Token 1448: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.09272635728120804
    2. ':
' → logprob: -2.842726469039917
    3. 'n' → logprob: -3.717726469039917
    4. '                       ' → logprob: -5.842726230621338
    5. '                               ' → logprob: -6.217726230621338
    6. ':' → logprob: -8.592726707458496
    7. ':n' → logprob: -8.842726707458496
    8. '   ' → logprob: -9.092726707458496
    9. '	n' → logprob: -9.217726707458496
    10. '                   ' → logprob: -9.342726707458496

Token 1449: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004498573543969542
    2. '                               ' → logprob: -7.7504496574401855
    3. ' nxt' → logprob: -11.875450134277344
    4. '                           ' → logprob: -12.125450134277344
    5. ' n' → logprob: -13.500450134277344
    6. '	n' → logprob: -13.625450134277344
    7. '   ' → logprob: -14.000450134277344
    8. 'next' → logprob: -14.125450134277344
    9. '                                   ' → logprob: -14.125450134277344
    10. '```' → logprob: -14.375450134277344

Token 1450: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008969667367637157
    2. '=n' → logprob: -4.758969783782959
    3. ' =' → logprob: -8.0089693069458
    4. '=c' → logprob: -10.8839693069458
    5. '=
' → logprob: -13.5089693069458
    6. '=current' → logprob: -14.1339693069458
    7. '=k' → logprob: -14.5089693069458
    8. '                           ' → logprob: -15.0089693069458
    9. '                               ' → logprob: -15.1339693069458
    10. '=

' → logprob: -15.5089693069458

Token 1451: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.00020354038861114532
    2. ' candidate' → logprob: -8.500203132629395
    3. 'c' → logprob: -18.75020408630371
    4. '(candidate' → logprob: -21.62520408630371
    5. 'cand' → logprob: -21.87520408630371
    6. '_candidate' → logprob: -22.00020408630371
    7. ' candidat' → logprob: -23.00020408630371
    8. '           ' → logprob: -23.12520408630371
    9. 'Candidate' → logprob: -23.87520408630371
    10. ' candidato' → logprob: -24.37520408630371

Token 1452: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7886748909950256
    2. '<|end|>' → logprob: -1.1636748313903809
    3. '
' → logprob: -1.7886748313903809
    4. '               ' → logprob: -4.663674831390381
    5. ')' → logprob: -4.913674831390381
    6. '<|end|>' → logprob: -5.038674831390381
    7. '```' → logprob: -5.163674831390381
    8. ' else' → logprob: -5.288674831390381
    9. '            
' → logprob: -5.413674831390381
    10. 'else' → logprob: -5.413674831390381

Token 1453: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42898863554000854
    2. '<|end|>' → logprob: -1.8039886951446533
    3. '```' → logprob: -2.4289886951446533
    4. '               ' → logprob: -3.9289886951446533
    5. 'else' → logprob: -4.428988456726074
    6. ')' → logprob: -4.803988456726074
    7. ' else' → logprob: -4.928988456726074
    8. '                           ' → logprob: -4.928988456726074
    9. '       ' → logprob: -5.178988456726074
    10. '
' → logprob: -5.303988456726074

Token 1454: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2967391014099121
    2. '           ' → logprob: -2.171739101409912
    3. '\n' → logprob: -2.546739101409912
    4. '<|end|>' → logprob: -4.046739101409912
    5. '            
' → logprob: -4.171739101409912
    6. ' 
' → logprob: -4.796739101409912
    7. '```' → logprob: -6.046739101409912
    8. 'else' → logprob: -6.171739101409912
    9. '  
' → logprob: -6.296739101409912
    10. '    
' → logprob: -6.296739101409912

Token 1455: ' if' (ID: 538)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.03331552818417549
    2. 'if' → logprob: -3.533315420150757
    3. 'print' → logprob: -6.033315658569336
    4. 'else' → logprob: -7.408315658569336
    5. '           ' → logprob: -7.658315658569336
    6. ' current' → logprob: -9.908315658569336
    7. 'elif' → logprob: -11.158315658569336
    8. '   ' → logprob: -11.658315658569336
    9. ' if' → logprob: -12.158315658569336
    10. '       ' → logprob: -12.783315658569336

Token 1456: ' no' (ID: 860)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25195854902267456
    2. ' nxt' → logprob: -1.5019586086273193
    3. '	n' → logprob: -11.876958847045898
    4. 'next' → logprob: -12.126958847045898
    5. ' current' → logprob: -12.751958847045898
    6. ' ' → logprob: -12.751958847045898
    7. '   ' → logprob: -13.251958847045898
    8. 'current' → logprob: -13.251958847045898
    9. 't' → logprob: -13.876958847045898
    10. 'n't' → logprob: -14.001958847045898

Token 1457: ' jump' (ID: 13843)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0018341571558266878
    2. 'n' → logprob: -6.626834392547607
    3. 'xt' → logprob: -8.50183391571045
    4. 'w' → logprob: -9.50183391571045
    5. '==' → logprob: -9.62683391571045
    6. 'x' → logprob: -9.87683391571045
    7. ' ==' → logprob: -10.25183391571045
    8. '=' → logprob: -10.37683391571045
    9. ' t' → logprob: -11.12683391571045
    10. 'nt' → logprob: -12.12683391571045

Token 1458: ' mark' (ID: 1983)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4041244983673096
    2. 'if' → logprob: -1.4041244983673096
    3. '           ' → logprob: -1.7791244983673096
    4. '_line' → logprob: -2.6541244983673096
    5. '_mark' → logprob: -2.9041244983673096
    6. ' _' → logprob: -3.0291244983673096
    7. '
' → logprob: -3.4041244983673096
    8. '_next' → logprob: -3.5291244983673096
    9. '_n' → logprob: -4.1541242599487305
    10. '_marks' → logprob: -4.2791242599487305

Token 1459: ' or' (ID: 503)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6656320691108704
    2. ' ==' → logprob: -1.4156320095062256
    3. '==-' → logprob: -1.4156320095062256
    4. '=' → logprob: -7.790632247924805
    5. ' =' → logprob: -10.415632247924805
    6. '=-' → logprob: -11.040632247924805
    7. '!=-' → logprob: -11.415632247924805
    8. ')==' → logprob: -11.665632247924805
    9. ']==' → logprob: -12.290632247924805
    10. '===' → logprob: -12.415632247924805

Token 1460: ' no' (ID: 860)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11306549608707428
    2. ' nxt' → logprob: -2.238065481185913
    3. ' current' → logprob: -9.613065719604492
    4. 'current' → logprob: -9.863065719604492
    5. 'next' → logprob: -10.488065719604492
    6. '(n' → logprob: -10.488065719604492
    7. '   ' → logprob: -11.113065719604492
    8. 'not' → logprob: -11.738065719604492
    9. 'read' → logprob: -11.863065719604492
    10. ' not' → logprob: -12.488065719604492

Token 1461: ' next' (ID: 2613)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.172605276107788
    2. ' next' → logprob: -1.172605276107788
    3. 'next' → logprob: -1.797605276107788
    4. ' else' → logprob: -2.547605276107788
    5. ' nxt' → logprob: -2.922605276107788
    6. 't' → logprob: -4.422605514526367
    7. ' current' → logprob: -4.672605514526367
    8. ' elif' → logprob: -4.672605514526367
    9. 'else' → logprob: -4.922605514526367
    10. '=' → logprob: -5.172605514526367

Token 1462: ' found' (ID: 2491)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11081324517726898
    2. '==' → logprob: -3.2358131408691406
    3. ' =' → logprob: -3.3608131408691406
    4. ':' → logprob: -3.6108131408691406
    5. ' ==' → logprob: -7.235813140869141
    6. '!=' → logprob: -7.610813140869141
    7. '+=' → logprob: -7.735813140869141
    8. '==-' → logprob: -8.23581314086914
    9. ')' → logprob: -8.36081314086914
    10. '_' → logprob: -8.86081314086914

Token 1463: ' by' (ID: 656)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5059950351715088
    2. ':
' → logprob: -1.0059950351715088
    3. '               ' → logprob: -4.13099479675293
    4. '           ' → logprob: -4.88099479675293
    5. 'and' → logprob: -5.50599479675293
    6. ':' → logprob: -5.88099479675293
    7. '=' → logprob: -8.25599479675293
    8. '   ' → logprob: -9.50599479675293
    9. ' :
' → logprob: -9.50599479675293
    10. '==' → logprob: -9.88099479675293

Token 1464: ' jump' (ID: 13843)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11731226742267609
    2. ' nxt' → logprob: -2.36731219291687
    3. 'next' → logprob: -5.367312431335449
    4. ' current' → logprob: -5.742312431335449
    5. 'current' → logprob: -5.992312431335449
    6. ' next' → logprob: -6.492312431335449
    7. 'rule' → logprob: -6.742312431335449
    8. ' rule' → logprob: -6.992312431335449
    9. ' n' → logprob: -7.117312431335449
    10. 'if' → logprob: -7.742312431335449

Token 1465: ' mark' (ID: 1983)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.14676034450531
    2. '=' → logprob: -1.39676034450531
    3. 't' → logprob: -1.64676034450531
    4. '==' → logprob: -2.0217604637145996
    5. '               ' → logprob: -3.7717604637145996
    6. '==-' → logprob: -3.8967604637145996
    7. 'xt' → logprob: -4.3967604637146
    8. '_token' → logprob: -4.5217604637146
    9. 'if' → logprob: -4.8967604637146
    10. '=-' → logprob: -5.1467604637146

Token 1466: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7126067876815796
    2. ' and' → logprob: -0.8376067876815796
    3. ':' → logprob: -3.712606906890869
    4. '           ' → logprob: -3.962606906890869
    5. 'and' → logprob: -4.212606906890869
    6. '               ' → logprob: -4.337606906890869
    7. '=' → logprob: -5.837606906890869
    8. '==' → logprob: -7.337606906890869
    9. ' =' → logprob: -7.712606906890869
    10. 'else' → logprob: -7.962606906890869

Token 1467: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017984284088015556
    2. '               ' → logprob: -4.142984390258789
    3. 'n' → logprob: -6.767984390258789
    4. 'if' → logprob: -8.142984390258789
    5. '   ' → logprob: -8.517984390258789
    6. '                   ' → logprob: -9.642984390258789
    7. '       ' → logprob: -9.892984390258789
    8. 'else' → logprob: -9.892984390258789
    9. ' if' → logprob: -10.017984390258789
    10. ' n' → logprob: -10.517984390258789

Token 1468: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.059679288417100906
    2. '
' → logprob: -3.6846792697906494
    3. ' if' → logprob: -3.6846792697906494
    4. 'if' (adapté à ' if') → logprob: -6.0596795082092285
    5. '            
' → logprob: -6.1846795082092285
    6. '```' → logprob: -7.3096795082092285
    7. ':
' → logprob: -7.4346795082092285
    8. '               ' → logprob: -8.30967903137207
    9. ' 
' → logprob: -8.43467903137207
    10. 'else' → logprob: -8.80967903137207

Token 1469: ' nxt' (ID: 160200)
  Prédit: ' nxt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nxt' → logprob: -0.07889485359191895
    2. 'n' → logprob: -2.578894853591919
    3. ' nex' → logprob: -13.70389461517334
    4. '	n' → logprob: -13.82889461517334
    5. '   ' → logprob: -14.07889461517334
    6. ' ' → logprob: -14.20389461517334
    7. '
' → logprob: -14.82889461517334
    8. 'nt' → logprob: -15.70389461517334
    9. 't' → logprob: -15.82889461517334
    10. '  ' → logprob: -15.82889461517334

Token 1470: '==-' (ID: 116197)
  Prédit: '==-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==-' → logprob: -0.153188094496727
    2. '==' → logprob: -2.1531879901885986
    3. ' ==' → logprob: -3.6531879901885986
    4. '==
' → logprob: -12.65318775177002
    5. '=' → logprob: -12.90318775177002
    6. '===' → logprob: -13.27818775177002
    7. ']==' → logprob: -14.27818775177002
    8. '```' → logprob: -14.40318775177002
    9. '==(' → logprob: -15.15318775177002
    10. '=="' → logprob: -15.27818775177002

Token 1471: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '-' → logprob: -15.750000953674316
    3. '```' → logprob: -16.5
    4. '=' → logprob: -16.875
    5. '   ' → logprob: -16.875
    6. '           ' → logprob: -17.0
    7. ' ' → logprob: -17.25
    8. '=-' → logprob: -18.5625
    9. '       ' → logprob: -18.8125
    10. '2' → logprob: -18.875

Token 1472: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28452202677726746
    2. '=' → logprob: -1.4095220565795898
    3. '=n' → logprob: -6.15952205657959
    4. '=current' → logprob: -6.90952205657959
    5. ':' → logprob: -9.90952205657959
    6. '               ' → logprob: -10.03452205657959
    7. ':
' → logprob: -10.28452205657959
    8. '           ' → logprob: -10.40952205657959
    9. '+=' → logprob: -10.78452205657959
    10. '=int' → logprob: -11.65952205657959

Token 1473: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5931335091590881
    2. '               ' → logprob: -0.8431335091590881
    3. 'n' → logprob: -4.593133449554443
    4. '   ' → logprob: -5.843133449554443
    5. '	       ' → logprob: -6.093133449554443
    6. '```' → logprob: -8.093133926391602
    7. ' nxt' → logprob: -8.218133926391602
    8. '	n' → logprob: -8.343133926391602
    9. ' n' → logprob: -8.593133926391602
    10. '	           ' → logprob: -8.843133926391602

Token 1474: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.050373367965221405
    2. '               ' → logprob: -3.3003733158111572
    3. '           ' → logprob: -4.925373554229736
    4. 'while' → logprob: -6.175373554229736
    5. 'current' → logprob: -6.550373554229736
    6. 'next' → logprob: -7.425373554229736
    7. 'for' → logprob: -8.175373077392578
    8. ' nxt' → logprob: -8.425373077392578
    9. '```' → logprob: -9.300373077392578
    10. ' n' → logprob: -9.800373077392578

Token 1475: ' Rule' (ID: 32118)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12224287539720535
    2. '               ' → logprob: -2.3722429275512695
    3. '           ' → logprob: -4.4972429275512695
    4. ' nxt' → logprob: -5.4972429275512695
    5. 'current' → logprob: -5.9972429275512695
    6. 'next' → logprob: -6.7472429275512695
    7. 'for' → logprob: -7.3722429275512695
    8. ' n' → logprob: -7.7472429275512695
    9. '   ' → logprob: -7.8722429275512695
    10. 'candidate' → logprob: -8.62224292755127

Token 1476: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10907966643571854
    2. '=' → logprob: -2.984079599380493
    3. ' ' → logprob: -4.109079837799072
    4. '5' → logprob: -4.609079837799072
    5. '           ' → logprob: -4.609079837799072
    6. '4' → logprob: -5.609079837799072
    7. '_linear' → logprob: -5.859079837799072
    8. '   ' → logprob: -6.359079837799072
    9. 'n' → logprob: -6.734079837799072
    10. '       ' → logprob: -7.109079837799072

Token 1477: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8672542572021484
    2. '           ' → logprob: -0.9922542572021484
    3. '=' → logprob: -2.2422542572021484
    4. '               ' → logprob: -2.6172542572021484
    5. ':' → logprob: -4.492254257202148
    6. 'candidate' → logprob: -5.367254257202148
    7. ' if' → logprob: -6.367254257202148
    8. 'n' → logprob: -6.367254257202148
    9. '=n' → logprob: -6.742254257202148
    10. '            ' → logprob: -6.867254257202148

Token 1478: ' ' (ID: 220)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.4755997955799103
    2. ' not' → logprob: -2.100599765777588
    3. ' True' → logprob: -2.600599765777588
    4. ' next' → logprob: -2.600599765777588
    5. 'current' → logprob: -3.225599765777588
    6. 'True' → logprob: -4.225599765777588
    7. ' linear' → logprob: -4.350599765777588
    8. 'next' → logprob: -4.600599765777588
    9. ' has' → logprob: -5.225599765777588
    10. ' nxt' → logprob: -5.350599765777588

Token 1479: '3' (ID: 18)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.9075140357017517
    2. ' current' → logprob: -1.7825140953063965
    3. 'next' → logprob: -2.1575140953063965
    4. 'True' → logprob: -2.9075140953063965
    5. ' True' → logprob: -3.4075140953063965
    6. 'n' → logprob: -3.4075140953063965
    7. ' next' → logprob: -3.4075140953063965
    8. '#' → logprob: -3.6575140953063965
    9. ' not' → logprob: -4.0325140953063965
    10. ' nxt' → logprob: -4.1575140953063965

Token 1480: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9589851498603821
    2. ' =' → logprob: -1.2089850902557373
    3. ':' → logprob: -1.4589850902557373
    4. '=' → logprob: -3.4589850902557373
    5. ':
' → logprob: -3.9589850902557373
    6. '           ' → logprob: -4.708985328674316
    7. ',' → logprob: -5.333985328674316
    8. '=n' → logprob: -5.583985328674316
    9. '                   ' → logprob: -6.083985328674316
    10. ' and' → logprob: -6.333985328674316

Token 1481: ' ' (ID: 220)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.642084538936615
    2. ' current' → logprob: -2.1420845985412598
    3. 'has' → logprob: -2.3920845985412598
    4. ' has' → logprob: -2.7670845985412598
    5. 'not' → logprob: -2.7670845985412598
    6. 'current' → logprob: -3.5170845985412598
    7. ' (' → logprob: -4.01708459854126
    8. ' linear' → logprob: -4.51708459854126
    9. 'n' → logprob: -5.01708459854126
    10. '(current' → logprob: -5.01708459854126

Token 1482: '4' (ID: 19)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6474571824073792
    2. '4' → logprob: -0.8974571824073792
    3. 'has' → logprob: -3.2724571228027344
    4. 'pos' → logprob: -5.022457122802734
    5. 'n' → logprob: -5.147457122802734
    6. 'read' → logprob: -5.522457122802734
    7. 'not' → logprob: -6.147457122802734
    8. '#' → logprob: -6.272457122802734
    9. 'True' → logprob: -6.522457122802734
    10. ' ' → logprob: -6.522457122802734

Token 1483: ' not' (ID: 625)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.278659462928772
    2. ':' → logprob: -1.403659462928772
    3. '=' → logprob: -1.653659462928772
    4. ' =' → logprob: -2.4036593437194824
    5. '               ' → logprob: -2.4036593437194824
    6. '           ' → logprob: -3.6536593437194824
    7. '=n' → logprob: -3.7786593437194824
    8. '+=' → logprob: -4.903659343719482
    9. 'n' → logprob: -5.403659343719482
    10. '                   ' → logprob: -5.528659343719482

Token 1484: ' triggered' (ID: 43270)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021832020953297615
    2. ' =' → logprob: -4.27183198928833
    3. '+=' → logprob: -5.39683198928833
    4. '=current' → logprob: -6.52183198928833
    5. '=n' → logprob: -7.39683198928833
    6. 'current' → logprob: -8.521832466125488
    7. ' current' → logprob: -8.646832466125488
    8. 'candidate' → logprob: -9.521832466125488
    9. 'found' → logprob: -9.771832466125488
    10. 'next' → logprob: -9.896832466125488

Token 1485: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05372054874897003
    2. ':
' → logprob: -3.428720474243164
    3. ':' → logprob: -5.553720474243164
    4. '           ' → logprob: -5.553720474243164
    5. '
' → logprob: -5.678720474243164
    6. ' =' → logprob: -5.803720474243164
    7. '=' → logprob: -6.803720474243164
    8. '                
' → logprob: -6.803720474243164
    9. ' and' → logprob: -7.178720474243164
    10. ',' → logprob: -7.178720474243164

Token 1486: ' so' (ID: 813)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.803443193435669
    2. ' nxt' → logprob: -1.178443193435669
    3. '               ' → logprob: -1.553443193435669
    4. ' n' → logprob: -4.42844295501709
    5. ' current' → logprob: -5.17844295501709
    6. '#' → logprob: -5.30344295501709
    7. 'current' → logprob: -5.92844295501709
    8. '           ' → logprob: -6.42844295501709
    9. 'next' → logprob: -6.80344295501709
    10. 'while' → logprob: -7.17844295501709

Token 1487: ' read' (ID: 1729)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5477102994918823
    2. '#' → logprob: -1.6727102994918823
    3. '               ' → logprob: -1.7977102994918823
    4. 'while' → logprob: -3.547710418701172
    5. 'pos' → logprob: -4.547710418701172
    6. ' nxt' → logprob: -4.547710418701172
    7. ' n' → logprob: -6.047710418701172
    8. '           ' → logprob: -6.047710418701172
    9. 'current' → logprob: -6.047710418701172
    10. ' #' → logprob: -6.047710418701172

Token 1488: ' next' (ID: 2613)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.2675534188747406
    2. 'current' → logprob: -2.1425533294677734
    3. ' next' → logprob: -2.6425533294677734
    4. 'next' → logprob: -3.6425533294677734
    5. ' =' → logprob: -4.267553329467773
    6. '_linear' → logprob: -6.892553329467773
    7. 'n' → logprob: -7.142553329467773
    8. '=' → logprob: -7.267553329467773
    9. '=current' → logprob: -7.517553329467773
    10. ' n' → logprob: -7.517553329467773

Token 1489: ' letter' (ID: 10263)
  Prédit: '_linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_linear' → logprob: -0.04728904366493225
    2. ' =' → logprob: -3.7972891330718994
    3. '=' → logprob: -4.42228889465332
    4. 'linear' → logprob: -5.54728889465332
    5. '_line' → logprob: -6.04728889465332
    6. '=current' → logprob: -6.67228889465332
    7. 'current' → logprob: -7.04728889465332
    8. '+=' → logprob: -7.54728889465332
    9. '```' → logprob: -7.54728889465332
    10. '_' → logprob: -7.67228889465332

Token 1490: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2748783826828003
    2. '=' → logprob: -1.5248783826828003
    3. '               ' → logprob: -4.89987850189209
    4. '           ' → logprob: -5.02487850189209
    5. '=current' → logprob: -5.02487850189209
    6. '=n' → logprob: -7.14987850189209
    7. '=line' → logprob: -7.89987850189209
    8. '   ' → logprob: -8.52487850189209
    9. '=int' → logprob: -9.14987850189209
    10. 'current' → logprob: -9.64987850189209

Token 1491: ' linear' (ID: 23876)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.0028262771666049957
    2. 'order' → logprob: -6.00282621383667
    3. ' linear' → logprob: -8.127826690673828
    4. 'line' → logprob: -10.502826690673828
    5. 'read' → logprob: -11.377826690673828
    6. 'current' → logprob: -12.127826690673828
    7. ' order' → logprob: -13.127826690673828
    8. 'n' → logprob: -13.377826690673828
    9. 'sequence' → logprob: -13.502826690673828
    10. '_linear' → logprob: -13.627826690673828

Token 1492: ' order' (ID: 2569)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.14702488481998444
    2. 'order' → logprob: -2.5220248699188232
    3. ' order' → logprob: -3.2720248699188232
    4. '_' → logprob: -4.772025108337402
    5. '+' → logprob: -5.647025108337402
    6. '```' → logprob: -6.272025108337402
    7. ' _' → logprob: -7.397025108337402
    8. '_
' → logprob: -7.647025108337402
    9. '`' → logprob: -7.772025108337402
    10. '   ' → logprob: -8.272025108337402

Token 1493: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011855464428663254
    2. 'n' → logprob: -4.761855602264404
    3. ' =' → logprob: -6.511855602264404
    4. '=' → logprob: -7.886855602264404
    5. ' n' → logprob: -8.136855125427246
    6. ' nxt' → logprob: -8.136855125427246
    7. '           ' → logprob: -8.886855125427246
    8. '=n' → logprob: -9.386855125427246
    9. 'next' → logprob: -9.511855125427246
    10. ',' → logprob: -9.636855125427246

Token 1494: '               ' (ID: 506)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16099780797958374
    2. '=' → logprob: -2.2859978675842285
    3. '               ' → logprob: -3.4109978675842285
    4. '           ' → logprob: -5.0359978675842285
    5. ' current' → logprob: -6.4109978675842285
    6. '=current' → logprob: -6.4109978675842285
    7. '```' → logprob: -7.1609978675842285
    8. 'current' → logprob: -7.2859978675842285
    9. '   ' → logprob: -7.6609978675842285
    10. '=n' → logprob: -7.7859978675842285

Token 1495: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09090859442949295
    2. ' nxt' → logprob: -3.3409085273742676
    3. 'current' → logprob: -3.7159085273742676
    4. '               ' → logprob: -4.215908527374268
    5. 'next' → logprob: -5.215908527374268
    6. ' current' → logprob: -5.465908527374268
    7. ' n' → logprob: -6.965908527374268
    8. '           ' → logprob: -6.965908527374268
    9. ' next' → logprob: -7.840908527374268
    10. '```' → logprob: -9.215909004211426

Token 1496: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20156311988830566
    2. ' =' → logprob: -1.7015631198883057
    3. '=current' → logprob: -9.326562881469727
    4. '=n' → logprob: -9.951562881469727
    5. '+=' → logprob: -12.951562881469727
    6. '=sys' → logprob: -13.451562881469727
    7. '=int' → logprob: -13.826562881469727
    8. ',' → logprob: -13.951562881469727
    9. '=max' → logprob: -14.451562881469727
    10. '_=' → logprob: -14.576562881469727

Token 1497: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0014359470224007964
    2. ' next' → logprob: -6.87643575668335
    3. 'current' → logprob: -7.87643575668335
    4. 'i' → logprob: -11.626436233520508
    5. 'pos' → logprob: -11.626436233520508
    6. ' current' → logprob: -13.376436233520508
    7. '   ' → logprob: -13.751436233520508
    8. '0' → logprob: -14.001436233520508
    9. '	next' → logprob: -14.126436233520508
    10. 'None' → logprob: -14.876436233520508

Token 1498: '_linear' (ID: 102608)
  Prédit: '_linear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_linear' → logprob: -1.4736459888808895e-05
    2. '_LINEAR' → logprob: -12.000014305114746
    3. '_' → logprob: -12.750014305114746
    4. '```' → logprob: -13.000014305114746
    5. '(n' → logprob: -13.750014305114746
    6. '(' → logprob: -13.875014305114746
    7. 'linear' → logprob: -14.750014305114746
    8. '_line' → logprob: -14.750014305114746
    9. 'Linear' → logprob: -15.750014305114746
    10. '_lin' → logprob: -16.625015258789062

Token 1499: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.0019323242595419288
    2. 'current' → logprob: -6.251932144165039
    3. '(' → logprob: -12.876932144165039
    4. ' current' → logprob: -14.126932144165039
    5. '(n' → logprob: -15.626932144165039
    6. '[current' → logprob: -15.876932144165039
    7. ' (' → logprob: -17.00193214416504
    8. '(i' → logprob: -17.50193214416504
    9. '(
' → logprob: -17.75193214416504
    10. '$current' → logprob: -17.87693214416504

Token 1500: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20450720191001892
    2. '+' → logprob: -1.7045072317123413
    3. ' +' → logprob: -6.329507350921631
    4. ')+' → logprob: -6.704507350921631
    5. '+)' → logprob: -10.329506874084473
    6. ')
' → logprob: -10.704506874084473
    7. ' )' → logprob: -11.329506874084473
    8. '           ' → logprob: -12.954506874084473
    9. '   ' → logprob: -13.204506874084473
    10. '[' → logprob: -13.329506874084473

Token 1501: '           ' (ID: 352)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.8456554412841797
    2. '
' → logprob: -1.3456554412841797
    3. '           ' → logprob: -1.5956554412841797
    4. '<|end|>' → logprob: -3.0956554412841797
    5. ' current' → logprob: -3.8456554412841797
    6. '[current' → logprob: -3.9706554412841797
    7. '```' → logprob: -4.84565544128418
    8. '   ' → logprob: -6.09565544128418
    9. '<|end|>' → logprob: -6.59565544128418
    10. 'if' → logprob: -6.59565544128418

Token 1502: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.003384103300049901
    2. 'if' → logprob: -6.503384113311768
    3. ' current' → logprob: -6.753384113311768
    4. '       ' → logprob: -8.50338363647461
    5. '           ' → logprob: -8.62838363647461
    6. '   ' → logprob: -9.25338363647461
    7. '```' → logprob: -9.25338363647461
    8. '	current' → logprob: -9.37838363647461
    9. '
' → logprob: -10.75338363647461
    10. '_current' → logprob: -11.50338363647461

Token 1503: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0017616904806345701
    2. ' =' → logprob: -6.3767619132995605
    3. '=n' → logprob: -10.001761436462402
    4. '+=' → logprob: -11.251761436462402
    5. ' +=' → logprob: -14.001761436462402
    6. '=
' → logprob: -15.876761436462402
    7. '=current' → logprob: -16.50176239013672
    8. '=}' → logprob: -16.62676239013672
    9. ',' → logprob: -16.87676239013672
    10. '.=' → logprob: -17.12676239013672

Token 1504: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004307884373702109
    2. ' nxt' → logprob: -7.750430583953857
    3. '	n' → logprob: -17.500431060791016
    4. 'next' → logprob: -17.625431060791016
    5. ' n' → logprob: -18.375431060791016
    6. '(n' → logprob: -18.750431060791016
    7. '   ' → logprob: -19.250431060791016
    8. 'nt' → logprob: -19.750431060791016
    9. '+n' → logprob: -20.000431060791016
    10. 'nx' → logprob: -20.000431060791016

Token 1505: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1506: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1507: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1508: ' o' (ID: 293)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -1.3599613904953003
    2. 'i' → logprob: -1.4849613904953003
    3. 'pos' → logprob: -1.8599613904953003
    4. 'idx' → logprob: -2.10996150970459
    5. ' pos' → logprob: -2.23496150970459
    6. 'x' → logprob: -3.35996150970459
    7. ' i' → logprob: -3.35996150970459
    8. ' index' → logprob: -3.60996150970459
    9. 'index' → logprob: -3.73496150970459
    10. ' x' → logprob: -4.73496150970459

Token 1509: ' in' (ID: 306)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.37225341796875
    2. ' in' → logprob: -1.49725341796875
    3. 'rd' → logprob: -3.49725341796875
    4. 'n' → logprob: -3.87225341796875
    5. 'f' → logprob: -3.87225341796875
    6. 'in' → logprob: -4.87225341796875
    7. 'i' → logprob: -6.12225341796875
    8. 'p' → logprob: -6.99725341796875
    9. 'ne' → logprob: -6.99725341796875
    10. '_' → logprob: -6.99725341796875

Token 1510: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.00015872348740231246
    2. ' order' → logprob: -8.750158309936523
    3. 'range' → logprob: -15.250158309936523
    4. '(order' → logprob: -17.375158309936523
    5. '   ' → logprob: -20.750158309936523
    6. '	order' → logprob: -21.375158309936523
    7. '```' → logprob: -21.750158309936523
    8. ' ' → logprob: -22.375158309936523
    9. '$order' → logprob: -22.375158309936523
    10. ' range' → logprob: -22.500158309936523

Token 1511: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07968949526548386
    2. 'print' → logprob: -2.8296895027160645
    3. '       ' → logprob: -4.8296895027160645
    4. ':' → logprob: -5.4546895027160645
    5. '           ' → logprob: -6.3296895027160645
    6. '```' → logprob: -6.9546895027160645
    7. ' print' → logprob: -7.8296895027160645
    8. ':
' → logprob: -7.8296895027160645
    9. '   ' → logprob: -8.079689025878906
    10. '=' → logprob: -8.079689025878906

Token 1512: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4642680287361145
    2. 'print' → logprob: -1.7142679691314697
    3. '```' → logprob: -2.2142679691314697
    4. '       ' → logprob: -2.9642679691314697
    5. ' print' → logprob: -3.9642679691314697
    6. '   ' → logprob: -5.214268207550049
    7. '	       ' → logprob: -5.339268207550049
    8. '	print' → logprob: -7.839268207550049
    9. '               ' → logprob: -7.964268207550049
    10. '``' → logprob: -8.96426773071289

Token 1513: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.8670179997570813e-05
    2. '```' → logprob: -11.500019073486328
    3. ' print' → logprob: -11.750019073486328
    4. 'sys' → logprob: -15.125019073486328
    5. '   ' → logprob: -15.375019073486328
    6. '           ' → logprob: -16.000019073486328
    7. '``' → logprob: -16.875019073486328
    8. '	print' → logprob: -17.500019073486328
    9. '       ' → logprob: -18.000019073486328
    10. '#print' → logprob: -18.625019073486328

Token 1514: '(o' (ID: 18928)
  Prédit: '(o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(o' → logprob: -0.13015493750572205
    2. 'o' → logprob: -2.130154848098755
    3. '(chr' → logprob: -6.630155086517334
    4. 'chr' → logprob: -7.255155086517334
    5. '(order' → logprob: -7.505155086517334
    6. 'order' → logprob: -7.755155086517334
    7. '(' → logprob: -9.880154609680176
    8. '('' → logprob: -9.880154609680176
    9. '(ord' → logprob: -10.005154609680176
    10. ''o' → logprob: -10.755154609680176

Token 1515: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019049886614084244
    2. ',' → logprob: -4.519050121307373
    3. ',end' → logprob: -5.144050121307373
    4. ' )' → logprob: -6.769050121307373
    5. '+' → logprob: -7.269050121307373
    6. ' ,' → logprob: -8.769049644470215
    7. ')
' → logprob: -10.769049644470215
    8. ',)' → logprob: -10.769049644470215
    9. '```' → logprob: -11.144049644470215
    10. ' +' → logprob: -11.144049644470215

Token 1516: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -16.87500762939453
    4. '   ' → logprob: -18.50000762939453
    5. '0' → logprob: -18.62500762939453
    6. '`' → logprob: -18.87500762939453
    7. '``' → logprob: -20.25000762939453
    8. '=' → logprob: -20.25000762939453
    9. ')' → logprob: -20.50000762939453
    10. '...' → logprob: -20.62500762939453

Token 1517: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0683535037969705e-05
    2. ',' → logprob: -12.50001049041748
    3. ' )' → logprob: -12.75001049041748
    4. ',end' → logprob: -13.50001049041748
    5. ')}' → logprob: -14.50001049041748
    6. ')
' → logprob: -14.87501049041748
    7. '   ' → logprob: -15.00001049041748
    8. '```' → logprob: -15.12501049041748
    9. '),' → logprob: -15.25001049041748
    10. ')`' → logprob: -15.75001049041748

Token 1518: 'thread' (ID: 9817)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1519: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -2.5776860184123507e-06
    2. 'ading' → logprob: -14.75000286102295
    3. '.' → logprob: -15.12500286102295
    4. '```' → logprob: -15.12500286102295
    5. 'ding' → logprob: -15.25000286102295
    6. '.start' → logprob: -15.62500286102295
    7. 'start' → logprob: -15.75000286102295
    8. '()' → logprob: -16.000001907348633
    9. 'ING' → logprob: -16.500001907348633
    10. 'ed' → logprob: -16.500001907348633

Token 1520: '.Thread' (ID: 15531)
  Prédit: '.Thread'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Thread' → logprob: -0.005670544691383839
    2. '.' → logprob: -5.380670547485352
    3. '.start' → logprob: -6.880670547485352
    4. '.Threading' → logprob: -12.380670547485352
    5. '.stack' → logprob: -12.755670547485352
    6. '.exit' → logprob: -12.880670547485352
    7. '.thread' → logprob: -13.130670547485352
    8. '().' → logprob: -13.505670547485352
    9. '.Start' → logprob: -13.505670547485352
    10. '.Lock' → logprob: -13.755670547485352

Token 1521: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.0001246348983841017
    2. '(' → logprob: -9.75012493133545
    3. 'target' → logprob: -10.25012493133545
    4. '().' → logprob: -10.62512493133545
    5. '(start' → logprob: -13.37512493133545
    6. '(
' → logprob: -13.50012493133545
    7. '```' → logprob: -14.00012493133545
    8. '()' → logprob: -14.12512493133545
    9. '.start' → logprob: -14.62512493133545
    10. '.target' → logprob: -14.87512493133545

Token 1522: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.501270592212677
    2. 'main' → logprob: -1.2512705326080322
    3. '(main' → logprob: -2.2512705326080322
    4. '(target' → logprob: -6.376270771026611
    5. ' main' → logprob: -7.376270771026611
    6. 'target' → logprob: -8.001270294189453
    7. '(' → logprob: -10.126270294189453
    8. '=start' → logprob: -10.126270294189453
    9. '	main' → logprob: -10.626270294189453
    10. '_main' → logprob: -11.251270294189453

Token 1523: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. ' main' → logprob: -16.75
    3. '(main' → logprob: -21.75
    4. 'target' → logprob: -22.75
    5. '	main' → logprob: -23.125
    6. '.main' → logprob: -24.75
    7. 'Main' → logprob: -25.0
    8. '_main' → logprob: -25.875
    9. 'start' → logprob: -28.0
    10. '```' → logprob: -28.0

Token 1524: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.001331190811470151
    2. ')' → logprob: -6.751331329345703
    3. '()).' → logprob: -9.001331329345703
    4. '()' → logprob: -11.001331329345703
    5. ',' → logprob: -11.501331329345703
    6. '().' → logprob: -12.626331329345703
    7. '.start' → logprob: -13.126331329345703
    8. ',start' → logprob: -13.376331329345703
    9. '```' → logprob: -14.001331329345703
    10. '(' → logprob: -14.251331329345703

Token 1525: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.1472419600977446e-06
    2. 'run' → logprob: -14.375000953674316
    3. '```' → logprob: -14.500000953674316
    4. ' start' → logprob: -18.125001907348633
    5. '(start' → logprob: -18.625001907348633
    6. 'star' → logprob: -19.000001907348633
    7. ':start' → logprob: -19.500001907348633
    8. '.start' → logprob: -19.750001907348633
    9. '	start' → logprob: -20.000001907348633
    10. '=start' → logprob: -20.500001907348633

Token 1526: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1524
Tokens correctement prédits (1ère position, stricte): 397
Tokens correctement prédits (1ère position, avec adaptation): 431
Tokens correctement prédits (top 10): 913
Précision stricte (1ère position): 26.05%
Précision adaptée (1ère position): 28.28%
Précision (top 10): 59.91%
================================================================================
