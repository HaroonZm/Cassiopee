================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def solve(n, b):
    b.sort()
    a = [0]*(n+1)
    a0 = int(math.isqrt(b[0]*b[1]//b[n]))
    a[0] = a0
    odds = []
    idx = n*(n+1)//2 -1
    for i in range(n):
        odds.append(b[idx - (n -1 - i)] // a0)
    odds.sort()
    a = [a0]+odds
    return a0, odds

def main():
    input = sys.stdin.read().strip().split()
    pos = 0
    while True:
        if pos >= len(input):
            break
        n = int(input[pos])
        pos +=1
        if n==0:
            break
        length = n*(n+1)//2
        b = list(map(int,input[pos:pos+length]))
        pos+=length
        a0, odds = solve(n,b)
        print(a0)
        print(*odds)

if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5779107809066772
    2. '.' → logprob: -0.9529107809066772
    3. 'import' → logprob: -3.952910900115967
    4. '\' → logprob: -4.827910900115967
    5. 'newline' → logprob: -5.077910900115967
    6. '
' → logprob: -5.202910900115967
    7. '<|end|>' → logprob: -5.327910900115967
    8. '```' → logprob: -5.577910900115967
    9. '' → logprob: -6.827910900115967
    10. '<|end|>' → logprob: -6.952910900115967

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -1.259079363080673e-05
    2. 'os' → logprob: -11.375012397766113
    3. ' math' → logprob: -15.000012397766113
    4. '"os' → logprob: -15.250012397766113
    5. ' re' → logprob: -15.875012397766113
    6. ' json' → logprob: -16.00001335144043
    7. '_os' → logprob: -17.00001335144043
    8. '	os' → logprob: -17.00001335144043
    9. ' ' → logprob: -17.25001335144043
    10. ' argparse' → logprob: -17.25001335144043

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10232575237751007
    2. '\' → logprob: -3.602325677871704
    3. '\n' → logprob: -3.977325677871704
    4. 'import' → logprob: -4.352325916290283
    5. '<|end|>' → logprob: -4.602325916290283
    6. '```' → logprob: -4.727325916290283
    7. '
' → logprob: -4.852325916290283
    8. '

' → logprob: -5.477325916290283
    9. '<|end|>' → logprob: -6.602325916290283
    10. '' → logprob: -6.602325916290283

Token 6: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2151533365249634
    2. '.' → logprob: -1.5901533365249634
    3. '\' → logprob: -1.5901533365249634
    4. 'import' → logprob: -2.215153217315674
    5. '```' → logprob: -2.215153217315674
    6. 'def' → logprob: -3.590153217315674
    7. '
' → logprob: -3.715153217315674
    8. ',' → logprob: -5.215153217315674
    9. '`' → logprob: -5.340153217315674
    10. '#' → logprob: -6.340153217315674

Token 7: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.022039499133825302
    2. ' calculate' → logprob: -4.022039413452148
    3. ' space' → logprob: -6.647039413452148
    4. '_' → logprob: -6.897039413452148
    5. ' factorial' → logprob: -7.897039413452148
    6. ' compute' → logprob: -8.022039413452148
    7. ' my' → logprob: -9.522039413452148
    8. ' math' → logprob: -9.522039413452148
    9. ' ' → logprob: -9.647039413452148
    10. ' add' → logprob: -9.647039413452148

Token 8: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0035052767489105463
    2. '():' → logprob: -6.753505229949951
    3. '```' → logprob: -7.378505229949951
    4. ':' → logprob: -7.503505229949951
    5. '_' → logprob: -7.753505229949951
    6. '):' → logprob: -9.12850570678711
    7. '(:' → logprob: -9.12850570678711
    8. ' (' → logprob: -9.25350570678711
    9. '(
' → logprob: -9.62850570678711
    10. '<|end|>' → logprob: -9.87850570678711

Token 9: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019099485129117966
    2. ',' → logprob: -4.394099712371826
    3. ')' → logprob: -5.269099712371826
    4. ':' → logprob: -6.644099712371826
    5. 's' → logprob: -10.644099235534668
    6. '):
' → logprob: -10.769099235534668
    7. ' ):' → logprob: -10.769099235534668
    8. '=' → logprob: -11.769099235534668
    9. '**' → logprob: -12.144099235534668
    10. '_' → logprob: -12.394099235534668

Token 10: ' b' (ID: 287)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.7256044149398804
    2. ' k' → logprob: -0.9756044149398804
    3. 'k' → logprob: -2.85060453414917
    4. 'm' → logprob: -3.47560453414917
    5. ' x' → logprob: -3.72560453414917
    6. ' d' → logprob: -4.85060453414917
    7. ' a' → logprob: -5.72560453414917
    8. ' r' → logprob: -5.85060453414917
    9. ' arr' → logprob: -6.10060453414917
    10. 'x' → logprob: -6.22560453414917

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01884050853550434
    2. ')' → logprob: -4.268840312957764
    3. ',' → logprob: -5.393840312957764
    4. ' ):' → logprob: -10.393840789794922
    5. ':' → logprob: -10.643840789794922
    6. '):
' → logprob: -11.268840789794922
    7. '_' → logprob: -11.518840789794922
    8. '=' → logprob: -11.518840789794922
    9. ''):' → logprob: -11.893840789794922
    10. 's' → logprob: -12.518840789794922

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5464938282966614
    2. ':' → logprob: -0.9214938282966614
    3. '    ' → logprob: -4.921494007110596
    4. '    
' → logprob: -5.546494007110596
    5. ':
' → logprob: -6.171494007110596
    6. '\' → logprob: -6.171494007110596
    7. ' :' → logprob: -6.671494007110596
    8. ' ' → logprob: -6.796494007110596
    9. '):' → logprob: -7.046494007110596
    10. '```' → logprob: -7.046494007110596

Token 13: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9724674224853516
    2. 'result' → logprob: -1.0974674224853516
    3. ' result' → logprob: -2.5974674224853516
    4. '    ' → logprob: -3.4724674224853516
    5. ' if' → logprob: -3.7224674224853516
    6. 'r' → logprob: -3.9724674224853516
    7. ' ' → logprob: -4.097467422485352
    8. 'return' → logprob: -4.097467422485352
    9. ' 
' → logprob: -4.222467422485352
    10. ' return' → logprob: -4.472467422485352

Token 14: '.sort' (ID: 19551)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4022352695465088
    2. ' **' → logprob: -1.6522352695465088
    3. '**' → logprob: -1.9022352695465088
    4. '[' → logprob: -2.527235269546509
    5. ' ' → logprob: -2.652235269546509
    6. ' =' → logprob: -2.777235269546509
    7. '=' → logprob: -2.902235269546509
    8. '.' → logprob: -3.152235269546509
    9. '-' → logprob: -3.777235269546509
    10. ',' → logprob: -3.777235269546509

Token 15: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06997734308242798
    2. '(' → logprob: -2.694977283477783
    3. '()
' → logprob: -11.069977760314941
    4. '[' → logprob: -12.069977760314941
    5. '()`' → logprob: -12.194977760314941
    6. '```' → logprob: -12.819977760314941
    7. '(
' → logprob: -13.069977760314941
    8. ')' → logprob: -13.319977760314941
    9. '()

' → logprob: -13.444977760314941
    10. '[]' → logprob: -13.944977760314941

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34139975905418396
    2. '
' → logprob: -2.341399669647217
    3. ' for' → logprob: -3.216399669647217
    4. '    
' → logprob: -3.466399669647217
    5. '[' → logprob: -3.841399669647217
    6. '\n' → logprob: -3.966399669647217
    7. '\' → logprob: -4.091399669647217
    8. 'for' → logprob: -4.216399669647217
    9. '```' → logprob: -4.341399669647217
    10. ',' → logprob: -5.466399669647217

Token 17: ' a' (ID: 261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5276468992233276
    2. 'for' → logprob: -1.4026468992233276
    3. '   ' → logprob: -2.777647018432617
    4. 'result' → logprob: -3.652647018432617
    5. ' result' → logprob: -3.902647018432617
    6. 'res' → logprob: -4.527647018432617
    7. 'max' → logprob: -5.277647018432617
    8. ' total' → logprob: -5.277647018432617
    9. 'total' → logprob: -5.402647018432617
    10. ' res' → logprob: -5.402647018432617

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19054336845874786
    2. '=' → logprob: -2.1905434131622314
    3. '[' → logprob: -3.1905434131622314
    4. '.' → logprob: -4.815543174743652
    5. ' ' → logprob: -5.565543174743652
    6. ',' → logprob: -6.190543174743652
    7. '.append' → logprob: -6.190543174743652
    8. 'pp' → logprob: -6.940543174743652
    9. '=[]' → logprob: -7.440543174743652
    10. '[:]' → logprob: -7.690543174743652

Token 19: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7459174990653992
    2. '[' → logprob: -0.8709174990653992
    3. ' [' → logprob: -2.620917558670044
    4. 'b' → logprob: -3.995917558670044
    5. ' []' → logprob: -4.620917320251465
    6. '[b' → logprob: -5.495917320251465
    7. ' b' → logprob: -6.495917320251465
    8. '[n' → logprob: -8.245917320251465
    9. '[-' → logprob: -9.745917320251465
    10. '[len' → logprob: -9.995917320251465

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05310023948550224
    2. 'b' → logprob: -3.053100347518921
    3. '1' → logprob: -6.303100109100342
    4. ' b' → logprob: -6.928100109100342
    5. ' ' → logprob: -7.178100109100342
    6. '-' → logprob: -8.3031005859375
    7. ']' → logprob: -8.4281005859375
    8. 'float' → logprob: -8.6781005859375
    9. 'math' → logprob: -9.4281005859375
    10. 'n' → logprob: -10.0531005859375

Token 21: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005587568040937185
    2. ']*' → logprob: -5.380587577819824
    3. ' ]' → logprob: -7.505587577819824
    4. ' for' → logprob: -8.505587577819824
    5. ']*(' → logprob: -9.130587577819824
    6. ',' → logprob: -9.380587577819824
    7. 'for' → logprob: -11.630587577819824
    8. ')' → logprob: -12.630587577819824
    9. ']+' → logprob: -13.005587577819824
    10. ')]' → logprob: -13.380587577819824

Token 22: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014532612636685371
    2. 'len' → logprob: -4.264532566070557
    3. ' n' → logprob: -8.014533042907715
    4. ' len' → logprob: -10.639533042907715
    5. '2' → logprob: -12.514533042907715
    6. ' ' → logprob: -13.389533042907715
    7. '(n' → logprob: -13.514533042907715
    8. '(len' → logprob: -13.639533042907715
    9. '10' → logprob: -13.764533042907715
    10. '   ' → logprob: -13.889533042907715

Token 23: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009190576151013374
    2. '+' → logprob: -4.759190559387207
    3. ' )' → logprob: -7.884190559387207
    4. ')
' → logprob: -9.509190559387207
    5. '-' → logprob: -9.759190559387207
    6. '*' → logprob: -10.134190559387207
    7. ' +' → logprob: -11.759190559387207
    8. '))' → logprob: -12.634190559387207
    9. '+)' → logprob: -13.384190559387207
    10. '>' → logprob: -13.509190559387207

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001071750302799046
    2. '2' → logprob: -6.876071929931641
    3. ' ' → logprob: -10.25107192993164
    4. '3' → logprob: -13.62607192993164
    5. '5' → logprob: -14.25107192993164
    6. '10' → logprob: -14.37607192993164
    7. '   ' → logprob: -15.25107192993164
    8. '4' → logprob: -15.50107192993164
    9. '  ' → logprob: -15.50107192993164
    10. '0' → logprob: -15.62607192993164

Token 25: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022892709239386022
    2. ')
' → logprob: -8.500228881835938
    3. ' )' → logprob: -11.000228881835938
    4. ')

' → logprob: -12.375228881835938
    5. '<|end|>' → logprob: -13.375228881835938
    6. '`)' → logprob: -14.500228881835938
    7. '),' → logprob: -15.375228881835938
    8. '')' → logprob: -15.375228881835938
    9. ' ' → logprob: -15.625228881835938
    10. '   ' → logprob: -15.750228881835938

Token 26: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3680601418018341
    2. 'for' → logprob: -1.3680601119995117
    3. '   ' → logprob: -2.9930601119995117
    4. 'a' → logprob: -6.743060111999512
    5. ' ' → logprob: -7.368060111999512
    6. ' a' → logprob: -8.118060111999512
    7. ' 
' → logprob: -8.368060111999512
    8. '    
' → logprob: -8.743060111999512
    9. '   
' → logprob: -9.368060111999512
    10. '  ' → logprob: -9.493060111999512

Token 27: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6397236585617065
    2. ' for' → logprob: -0.7647236585617065
    3. 'i' → logprob: -6.014723777770996
    4. 'a' (adapté à ' a') → logprob: -6.889723777770996
    5. ' i' → logprob: -7.139723777770996
    6. 'max' → logprob: -7.639723777770996
    7. ' a' → logprob: -8.139723777770996
    8. ' max' → logprob: -8.514723777770996
    9. '   ' → logprob: -8.764723777770996
    10. ' ans' → logprob: -8.764723777770996

Token 28: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009645807440392673
    2. '[n' → logprob: -7.625964641571045
    3. '[-' → logprob: -9.500964164733887
    4. '=' → logprob: -9.500964164733887
    5. '[:]' → logprob: -10.000964164733887
    6. ' ' → logprob: -10.250964164733887
    7. ' =' → logprob: -10.375964164733887
    8. ' [' → logprob: -10.500964164733887
    9. '<|end|>' → logprob: -10.750964164733887
    10. '+' → logprob: -10.750964164733887

Token 29: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4760975241661072
    2. '=' → logprob: -1.351097583770752
    3. ' =' → logprob: -2.351097583770752
    4. 'x' → logprob: -3.976097583770752
    5. ']' → logprob: -5.976097583770752
    6. 'f' → logprob: -7.601097583770752
    7. '0' → logprob: -7.851097583770752
    8. 'a' → logprob: -7.976097583770752
    9. '[a' → logprob: -8.101097106933594
    10. '   ' → logprob: -8.476097106933594

Token 30: ' int' (ID: 677)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6154280304908752
    2. ' ' → logprob: -1.8654279708862305
    3. 'b' → logprob: -1.9904279708862305
    4. '1' → logprob: -2.3654279708862305
    5. ' b' → logprob: -2.7404279708862305
    6. ' math' → logprob: -5.9904279708862305
    7. '-' → logprob: -6.2404279708862305
    8. 'math' → logprob: -6.4904279708862305
    9. ' -' → logprob: -6.9904279708862305
    10. 'a' → logprob: -7.6154279708862305

Token 31: '(math' (ID: 86464)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.6917737722396851
    2. '(' → logprob: -0.9417737722396851
    3. '(math' → logprob: -2.6917738914489746
    4. '(a' → logprob: -3.4417738914489746
    5. '((' → logprob: -5.441773891448975
    6. '(n' → logprob: -6.566773891448975
    7. '(input' → logprob: -6.691773891448975
    8. '()' → logprob: -7.316773891448975
    9. '('' → logprob: -7.691773891448975
    10. '(sys' → logprob: -8.066773414611816

Token 32: '.is' (ID: 3109)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.41054144501686096
    2. '.log' → logprob: -1.4105414152145386
    3. '.ceil' → logprob: -2.910541534423828
    4. '.floor' → logprob: -3.910541534423828
    5. '.' → logprob: -4.410541534423828
    6. '.pow' → logprob: -5.660541534423828
    7. 'sqrt' → logprob: -7.160541534423828
    8. '.f' → logprob: -7.785541534423828
    9. '.is' → logprob: -8.535541534423828
    10. '```' → logprob: -8.910541534423828

Token 33: 'qrt' (ID: 17629)
  Prédit: 'qrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qrt' → logprob: -0.0001037815964082256
    2. 'q' → logprob: -9.375103950500488
    3. 'close' → logprob: -11.125103950500488
    4. 'qr' → logprob: -13.250103950500488
    5. 'finite' → logprob: -15.000103950500488
    6. 'prime' → logprob: -15.125103950500488
    7. 'pow' → logprob: -15.250103950500488
    8. 'sqrt' → logprob: -15.375103950500488
    9. 'qu' → logprob: -15.500103950500488
    10. 'quare' → logprob: -15.875103950500488

Token 34: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00164590694475919
    2. 'b' → logprob: -6.876646041870117
    3. '(n' → logprob: -8.251646041870117
    4. '(' → logprob: -8.501646041870117
    5. '(a' → logprob: -9.376646041870117
    6. ')b' → logprob: -10.126646041870117
    7. ' (' → logprob: -12.126646041870117
    8. '(
' → logprob: -12.251646041870117
    9. ')' → logprob: -12.251646041870117
    10. ' b' → logprob: -12.376646041870117

Token 35: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.035146474838256836
    2. '[n' → logprob: -4.035146713256836
    3. '[-' → logprob: -4.160146713256836
    4. '0' → logprob: -7.035146713256836
    5. '[i' → logprob: -8.785146713256836
    6. '[a' → logprob: -9.285146713256836
    7. '[len' → logprob: -10.410146713256836
    8. ' [' → logprob: -10.910146713256836
    9. ' ' → logprob: -11.785146713256836
    10. '[m' → logprob: -11.910146713256836

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00496630510315299
    2. '-' → logprob: -5.3799662590026855
    3. ' ' → logprob: -8.879966735839844
    4. 'n' → logprob: -9.129966735839844
    5. '1' → logprob: -10.004966735839844
    6. '[' → logprob: -10.754966735839844
    7. ' -' → logprob: -11.504966735839844
    8. '[-' → logprob: -12.629966735839844
    9. '-n' → logprob: -12.879966735839844
    10. 'i' → logprob: -13.067466735839844

Token 37: ']*' (ID: 18579)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.04727756604552269
    2. ']' → logprob: -3.7972774505615234
    3. '])' → logprob: -3.7972774505615234
    4. '])))' → logprob: -7.422277450561523
    5. '])+' → logprob: -8.172277450561523
    6. '[' → logprob: -8.922277450561523
    7. ']+' → logprob: -9.297277450561523
    8. '])-' → logprob: -10.172277450561523
    9. '))' → logprob: -10.672277450561523
    10. ')))' → logprob: -10.797277450561523

Token 38: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.007897856645286083
    2. ' b' → logprob: -4.882897853851318
    3. '2' → logprob: -9.007898330688477
    4. 'a' → logprob: -9.757898330688477
    5. ' ' → logprob: -11.007898330688477
    6. '   ' → logprob: -11.007898330688477
    7. '(' → logprob: -11.257898330688477
    8. '1' → logprob: -11.382898330688477
    9. '(b' → logprob: -11.382898330688477
    10. 'n' → logprob: -12.070398330688477

Token 39: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010147005319595337
    2. '1' → logprob: -4.6351470947265625
    3. '[-' → logprob: -8.385147094726562
    4. '-' → logprob: -9.760147094726562
    5. '0' → logprob: -10.135147094726562
    6. ' [' → logprob: -11.010147094726562
    7. '```' → logprob: -11.385147094726562
    8. ' ' → logprob: -12.010147094726562
    9. '+' → logprob: -12.260147094726562
    10. '
' → logprob: -12.385147094726562

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038354501128196716
    2. '0' → logprob: -3.2883543968200684
    3. '-' → logprob: -8.663354873657227
    4. '2' → logprob: -9.163354873657227
    5. ' ' → logprob: -11.163354873657227
    6. '```' → logprob: -12.163354873657227
    7. ']' → logprob: -12.975854873657227
    8. '+' → logprob: -13.288354873657227
    9. '   ' → logprob: -13.288354873657227
    10. '])' → logprob: -13.850854873657227

Token 41: ']' (ID: 60)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.2568909227848053
    2. ']' → logprob: -2.3818910121917725
    3. '))' → logprob: -2.6318910121917725
    4. ')' → logprob: -3.2568910121917725
    5. '])' → logprob: -4.506890773773193
    6. ')))' → logprob: -4.756890773773193
    7. '//' → logprob: -7.131890773773193
    8. ')])' → logprob: -7.506890773773193
    9. ')//' → logprob: -7.756890773773193
    10. '']))' → logprob: -7.756890773773193

Token 42: '//' (ID: 393)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2625725567340851
    2. '//' → logprob: -1.8875725269317627
    3. ')' → logprob: -3.0125725269317627
    4. ')//' → logprob: -3.8875725269317627
    5. ' //' → logprob: -5.387572765350342
    6. '/' → logprob: -5.887572765350342
    7. ' ))' → logprob: -7.387572765350342
    8. ')))' → logprob: -7.512572765350342
    9. '/b' → logprob: -8.137572288513184
    10. ' )' → logprob: -8.512572288513184

Token 43: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.030546849593520164
    2. ' b' → logprob: -3.5305469036102295
    3. '2' → logprob: -7.40554666519165
    4. ' ' → logprob: -9.405547142028809
    5. 'a' → logprob: -10.030547142028809
    6. '   ' → logprob: -11.780547142028809
    7. ' math' → logprob: -11.905547142028809
    8. '3' → logprob: -12.155547142028809
    9. '  ' → logprob: -12.405547142028809
    10. ')' → logprob: -12.405547142028809

Token 44: '[n' (ID: 15433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.049347445368766785
    2. '0' → logprob: -3.049347400665283
    3. '2' → logprob: -7.299347400665283
    4. ' ' → logprob: -10.049347877502441
    5. '1' → logprob: -11.299347877502441
    6. ' [' → logprob: -12.299347877502441
    7. '   ' → logprob: -12.424347877502441
    8. '[-' → logprob: -12.674347877502441
    9. '(' → logprob: -12.736847877502441
    10. '-' → logprob: -13.236847877502441

Token 45: ']))
' (ID: 24801)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7106064558029175
    2. '-' → logprob: -1.8356064558029175
    3. ']' → logprob: -2.210606575012207
    4. '])' → logprob: -2.210606575012207
    5. ')])' → logprob: -2.960606575012207
    6. ']))' → logprob: -3.210606575012207
    7. '1' → logprob: -4.335606575012207
    8. ' ' → logprob: -4.960606575012207
    9. '])]' → logprob: -5.585606575012207
    10. ')' → logprob: -5.585606575012207

Token 46: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1354115009307861
    2. '[' → logprob: -1.1354115009307861
    3. '0' → logprob: -1.2604115009307861
    4. ']' → logprob: -3.635411500930786
    5. '])' → logprob: -4.135411262512207
    6. '[n' → logprob: -4.135411262512207
    7. ' )' → logprob: -5.385411262512207
    8. ' ' → logprob: -5.385411262512207
    9. '+' → logprob: -6.510411262512207
    10. 'n' → logprob: -7.010411262512207

Token 47: ' a' (ID: 261)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7760492563247681
    2. '[' → logprob: -1.026049256324768
    3. '0' → logprob: -2.0260491371154785
    4. ' ' → logprob: -4.2760491371154785
    5. ' )' → logprob: -4.7760491371154785
    6. ']' → logprob: -4.9010491371154785
    7. '(' → logprob: -4.9010491371154785
    8. 'a' (adapté à ' a') → logprob: -5.6510491371154785
    9. '+' → logprob: -6.1510491371154785
    10. '[a' → logprob: -6.9010491371154785

Token 48: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16032932698726654
    2. '0' → logprob: -1.9103293418884277
    3. 'a' → logprob: -10.16032886505127
    4. ' [' → logprob: -10.66032886505127
    5. 's' → logprob: -11.41032886505127
    6. '=' → logprob: -11.78532886505127
    7. ' ' → logprob: -11.91032886505127
    8. '<|end|>' → logprob: -12.53532886505127
    9. '[a' → logprob: -12.91032886505127
    10. ' =' → logprob: -13.03532886505127

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004216170927975327
    2. '1' → logprob: -8.250421524047852
    3. ' ' → logprob: -8.750421524047852
    4. '-' → logprob: -14.687921524047852
    5. 'n' → logprob: -15.375421524047852
    6. '```' → logprob: -15.375421524047852
    7. ']' → logprob: -15.687921524047852
    8. '[' → logprob: -16.00042152404785
    9. '   ' → logprob: -16.00042152404785
    10. '2' → logprob: -16.12542152404785

Token 50: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.054055355489254
    2. ')]' → logprob: -3.6790554523468018
    3. '])' → logprob: -3.6790554523468018
    4. ']=' → logprob: -6.804055213928223
    5. ')' → logprob: -7.554055213928223
    6. ' ]' → logprob: -8.554055213928223
    7. '])]' → logprob: -8.804055213928223
    8. '[' → logprob: -10.054055213928223
    9. ' ])' → logprob: -10.554055213928223
    10. '-' → logprob: -11.054055213928223

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022635996341705
    2. '=' → logprob: -1.9102263450622559
    3. ' +=' → logprob: -14.535226821899414
    4. ' =)' → logprob: -15.035226821899414
    5. ' |=' → logprob: -15.660226821899414
    6. ' =
' → logprob: -15.785226821899414
    7. ' ==' → logprob: -15.785226821899414
    8. '＝' → logprob: -15.910226821899414
    9. '=}' → logprob: -16.285226821899414
    10. '=int' → logprob: -16.285226821899414

Token 52: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.026300758123397827
    2. ' a' → logprob: -3.6513006687164307
    3. ' ' → logprob: -15.401300430297852
    4. '	a' → logprob: -16.02630043029785
    5. '_a' → logprob: -16.90130043029785
    6. 'int' → logprob: -17.02630043029785
    7. '0' → logprob: -17.02630043029785
    8. '#a' → logprob: -17.27630043029785
    9. 'b' → logprob: -17.65130043029785
    10. '(a' → logprob: -17.96380043029785

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.65101717156358e-05
    2. '[' → logprob: -9.250096321105957
    3. ' ' → logprob: -15.750096321105957
    4. '_' → logprob: -16.625097274780273
    5. '۰' → logprob: -16.625097274780273
    6. 'a' → logprob: -17.500097274780273
    7. '０' → logprob: -18.875097274780273
    8. '<|end|>' → logprob: -18.875097274780273
    9. '```' → logprob: -18.875097274780273
    10. '[a' → logprob: -19.125097274780273

Token 54: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.23370347917079926
    2. ' ' → logprob: -2.858703374862671
    3. '<|end|>' → logprob: -2.983703374862671
    4. ')' → logprob: -3.858703374862671
    5. '[' → logprob: -4.10870361328125
    6. '+' → logprob: -4.10870361328125
    7. ' *' → logprob: -4.73370361328125
    8. '0' → logprob: -5.10870361328125
    9. '
' → logprob: -5.23370361328125
    10. ' 
' → logprob: -5.23370361328125

Token 55: '   ' (ID: 271)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6996874213218689
    2. ' ' → logprob: -1.8246874809265137
    3. '<|end|>' → logprob: -2.0746874809265137
    4. ' *' → logprob: -2.6996874809265137
    5. '+' → logprob: -3.9496874809265137
    6. '**' → logprob: -4.074687480926514
    7. '*a' → logprob: -4.324687480926514
    8. 'a' → logprob: -4.324687480926514
    9. '#' → logprob: -4.449687480926514
    10. '```' → logprob: -4.449687480926514

Token 56: ' odds' (ID: 28374)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4820893406867981
    2. '[' → logprob: -2.2320892810821533
    3. '+' → logprob: -2.7320892810821533
    4. ')' → logprob: -2.7320892810821533
    5. '0' → logprob: -2.9820892810821533
    6. '#' → logprob: -4.232089519500732
    7. ' ' → logprob: -4.357089519500732
    8. 'a' → logprob: -4.732089519500732
    9. '=' → logprob: -4.857089519500732
    10. ']' → logprob: -4.982089519500732

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20163094997406006
    2. '=' → logprob: -2.0766310691833496
    3. '[' → logprob: -3.0766310691833496
    4. 'a' → logprob: -6.07663106918335
    5. '   ' → logprob: -6.70163106918335
    6. '  ' → logprob: -6.82663106918335
    7. ')' → logprob: -6.82663106918335
    8. '[]' → logprob: -7.07663106918335
    9. 's' → logprob: -7.20163106918335
    10. ' ' → logprob: -7.20163106918335

Token 58: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8380674719810486
    2. '[' → logprob: -1.5880675315856934
    3. ' []' → logprob: -1.8380675315856934
    4. ' [' → logprob: -1.9630675315856934
    5. '[a' → logprob: -4.213067531585693
    6. '[b' → logprob: -4.338067531585693
    7. 'set' → logprob: -4.838067531585693
    8. ' set' → logprob: -5.338067531585693
    9. ' ' → logprob: -5.338067531585693
    10. '{' → logprob: -5.713067531585693

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6970866322517395
    2. '<|end|>' → logprob: -1.1970865726470947
    3. ' 
' → logprob: -2.8220865726470947
    4. ' for' → logprob: -3.8220865726470947
    5. '    
' → logprob: -4.197086811065674
    6. '\n' → logprob: -4.322086811065674
    7. ' ' → logprob: -4.322086811065674
    8. '  
' → logprob: -4.447086811065674
    9. '
' → logprob: -4.572086811065674
    10. '\' → logprob: -4.572086811065674

Token 60: ' idx' (ID: 14016)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7914145588874817
    2. '(' → logprob: -1.541414499282837
    3. ')' → logprob: -2.416414499282837
    4. 'for' → logprob: -2.541414499282837
    5. '=' → logprob: -3.291414499282837
    6. ' ' → logprob: -4.041414737701416
    7. '+' → logprob: -4.041414737701416
    8. ' for' → logprob: -4.291414737701416
    9. '0' → logprob: -4.416414737701416
    10. '.' → logprob: -4.541414737701416

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06226130202412605
    2. '=' → logprob: -2.8122613430023193
    3. 's' → logprob: -9.062261581420898
    4. '_' → logprob: -9.562261581420898
    5. ' ' → logprob: -9.562261581420898
    6. ',' → logprob: -11.062261581420898
    7. '  ' → logprob: -12.437261581420898
    8. ')' → logprob: -12.937261581420898
    9. ' ,' → logprob: -12.937261581420898
    10. 'es' → logprob: -13.187261581420898

Token 62: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03308882191777229
    2. ' ' → logprob: -3.5330889225006104
    3. '1' → logprob: -5.783088684082031
    4. '2' → logprob: -8.658088684082031
    5. '[' → logprob: -10.783088684082031
    6. '<|end|>' → logprob: -11.283088684082031
    7. '[]' → logprob: -11.408088684082031
    8. ' -' → logprob: -11.783088684082031
    9. '3' → logprob: -12.033088684082031
    10. ' [' → logprob: -12.408088684082031

Token 63: '*(' (ID: 14793)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3425405025482178
    2. 'idx' → logprob: -1.3425405025482178
    3. '(idx' → logprob: -4.217540740966797
    4. '(n' → logprob: -5.092540740966797
    5. '2' → logprob: -5.967540740966797
    6. '1' → logprob: -6.467540740966797
    7. ' idx' → logprob: -6.592540740966797
    8. '(' → logprob: -7.342540740966797
    9. ' n' → logprob: -7.967540740966797
    10. '0' → logprob: -7.967540740966797

Token 65: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.497526079416275
    2. '-' → logprob: -0.9975260496139526
    3. ')' → logprob: -5.122526168823242
    4. ' +' → logprob: -5.122526168823242
    5. ' -' → logprob: -5.122526168823242
    6. '1' → logprob: -5.997526168823242
    7. ' ' → logprob: -6.872526168823242
    8. ')-' → logprob: -7.497526168823242
    9. '   ' → logprob: -8.622526168823242
    10. ')+' → logprob: -8.685026168823242

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015113511122763157
    2. '-' → logprob: -4.265113353729248
    3. ' ' → logprob: -7.515113353729248
    4. ' -' → logprob: -8.140113830566406
    5. '   ' → logprob: -10.140113830566406
    6. '0' → logprob: -10.390113830566406
    7. '2' → logprob: -11.640113830566406
    8. '  ' → logprob: -11.765113830566406
    9. '```' → logprob: -11.765113830566406
    10. ')' → logprob: -12.015113830566406

Token 67: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.0076640015468001366
    2. ')' → logprob: -4.882664203643799
    3. ' )' → logprob: -10.75766372680664
    4. ')>>' → logprob: -10.88266372680664
    5. ')/' → logprob: -11.25766372680664
    6. '//' → logprob: -13.00766372680664
    7. ')#' → logprob: -14.38266372680664
    8. ')`' → logprob: -15.00766372680664
    9. ')-' → logprob: -15.38266372680664
    10. ')
' → logprob: -15.75766372680664

Token 68: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.32392441527918e-05
    2. ' ' → logprob: -9.875053405761719
    3. '1' → logprob: -13.500053405761719
    4. '   ' → logprob: -16.37505340576172
    5. '  ' → logprob: -16.62505340576172
    6. '```' → logprob: -17.50005340576172
    7. '0' → logprob: -18.56255340576172
    8. '۲' → logprob: -18.62505340576172
    9. '<|end|>' → logprob: -18.75005340576172
    10. '    ' → logprob: -19.31255340576172

Token 69: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001441303757019341
    2. ' ' → logprob: -7.126441478729248
    3. 'n' → logprob: -8.12644100189209
    4. ' n' → logprob: -9.00144100189209
    5. 'len' → logprob: -9.25144100189209
    6. '<|end|>' → logprob: -10.37644100189209
    7. '(n' → logprob: -10.50144100189209
    8. '(' → logprob: -10.75144100189209
    9. ' (' → logprob: -10.87644100189209
    10. ' len' → logprob: -11.75144100189209

Token 71: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0630926564335823
    2. 'i' → logprob: -3.1880927085876465
    3. ' j' → logprob: -4.0630927085876465
    4. ' ' → logprob: -6.5630927085876465
    5. 'j' → logprob: -7.0630927085876465
    6. ' k' → logprob: -9.188092231750488
    7. ' x' → logprob: -9.688092231750488
    8. ' b' → logprob: -10.063092231750488
    9. 'k' → logprob: -10.688092231750488
    10. '	i' → logprob: -10.875592231750488

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007095046807080507
    2. 'in' → logprob: -5.132094860076904
    3. ' ' → logprob: -6.882094860076904
    4. '<|end|>' → logprob: -9.882095336914062
    5. '  ' → logprob: -10.007095336914062
    6. '	in' → logprob: -11.507095336914062
    7. ' i' → logprob: -11.632095336914062
    8. ',' → logprob: -11.632095336914062
    9. '+' → logprob: -12.382095336914062
    10. ' ,' → logprob: -13.569595336914062

Token 76: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0025261954870074987
    2. 'range' → logprob: -6.00252628326416
    3. ' ' → logprob: -10.75252628326416
    4. ' reversed' → logprob: -11.37752628326416
    5. ' xrange' → logprob: -12.37752628326416
    6. '<|end|>' → logprob: -12.37752628326416
    7. '(range' → logprob: -13.00252628326416
    8. '	range' → logprob: -13.12752628326416
    9. '  ' → logprob: -13.50252628326416
    10. ')' → logprob: -13.75252628326416

Token 77: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12502391636371613
    2. '(' → logprob: -2.50002384185791
    3. ' (' → logprob: -3.37502384185791
    4. ' n' → logprob: -7.50002384185791
    5. '(len' → logprob: -8.50002384185791
    6. ' ' → logprob: -8.50002384185791
    7. '<|end|>' → logprob: -8.62502384185791
    8. '(i' → logprob: -10.50002384185791
    9. '(idx' → logprob: -11.37502384185791
    10. ')' → logprob: -11.50002384185791

Token 78: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4022007882595062
    2. '):' → logprob: -1.2772008180618286
    3. '-' → logprob: -3.402200698852539
    4. '):
' → logprob: -5.027200698852539
    5. ' +' → logprob: -5.277200698852539
    6. ')' → logprob: -5.652200698852539
    7. ' -' → logprob: -6.527200698852539
    8. ',' → logprob: -7.402200698852539
    9. ' ' → logprob: -7.777200698852539
    10. ' ):' → logprob: -7.777200698852539

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8192511796951294
    2. '<|end|>' → logprob: -1.4442511796951294
    3. '    ' → logprob: -2.06925106048584
    4. ' ' → logprob: -2.81925106048584
    5. '+' → logprob: -2.94425106048584
    6. ':' → logprob: -3.44425106048584
    7. '   ' → logprob: -3.81925106048584
    8. '<|end|>' → logprob: -4.94425106048584
    9. ',' → logprob: -5.69425106048584
    10. '	' → logprob: -5.81925106048584

Token 80: ' odds' (ID: 28374)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27054259181022644
    2. '    ' → logprob: -2.270542621612549
    3. '       ' → logprob: -3.020542621612549
    4. ' a' → logprob: -3.895542621612549
    5. '<|end|>' → logprob: -3.895542621612549
    6. ' if' → logprob: -4.645542621612549
    7. '   ' → logprob: -4.770542621612549
    8. '0' → logprob: -5.145542621612549
    9. 'a' → logprob: -5.270542621612549
    10. '        ' → logprob: -5.395542621612549

Token 81: '.append' (ID: 3709)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0153977870941162
    2. '.append' → logprob: -1.3903977870941162
    3. '+' → logprob: -1.7653977870941162
    4. '[i' → logprob: -2.765397787094116
    5. ']' → logprob: -2.890397787094116
    6. '<|end|>' → logprob: -3.515397787094116
    7. ' +=' → logprob: -3.765397787094116
    8. '][' → logprob: -4.515398025512695
    9. ' +' → logprob: -4.765398025512695
    10. '].' → logprob: -5.640398025512695

Token 82: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.12716726958751678
    2. '(' → logprob: -2.127167224884033
    3. '(a' → logprob: -9.002167701721191
    4. '(math' → logprob: -9.877167701721191
    5. '((' → logprob: -11.127167701721191
    6. 'b' → logprob: -11.377167701721191
    7. '(int' → logprob: -11.627167701721191
    8. '(s' → logprob: -11.752167701721191
    9. '(B' → logprob: -12.752167701721191
    10. '(i' → logprob: -12.752167701721191

Token 83: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.13054241240024567
    2. '[i' → logprob: -2.255542516708374
    3. '[' → logprob: -4.505542278289795
    4. '[n' → logprob: -5.380542278289795
    5. '[a' → logprob: -7.005542278289795
    6. '[(' → logprob: -8.880542755126953
    7. '[index' → logprob: -9.130542755126953
    8. 'idx' → logprob: -9.505542755126953
    9. '[len' → logprob: -9.505542755126953
    10. ' [' → logprob: -9.505542755126953

Token 84: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4856335520744324
    2. '])' → logprob: -0.9856335520744324
    3. ' -' → logprob: -5.860633373260498
    4. ' ])' → logprob: -6.110633373260498
    5. '-i' → logprob: -6.735633373260498
    6. ' ]' → logprob: -6.735633373260498
    7. '//' → logprob: -6.735633373260498
    8. '][' → logprob: -7.735633373260498
    9. '-' → logprob: -7.735633373260498
    10. ')' → logprob: -7.985633373260498

Token 85: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2729869782924652
    2. ' i' → logprob: -1.7729870080947876
    3. ' (' → logprob: -3.522986888885498
    4. '(i' → logprob: -4.147986888885498
    5. '(n' → logprob: -4.397986888885498
    6. 'n' → logprob: -5.522986888885498
    7. ' n' → logprob: -5.772986888885498
    8. '(' → logprob: -6.022986888885498
    9. ' ' → logprob: -7.272986888885498
    10. '1' → logprob: -7.522986888885498

Token 86: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4262479543685913
    2. 'i' → logprob: -1.5512479543685913
    3. '(n' → logprob: -2.301248073577881
    4. ' n' → logprob: -4.176248073577881
    5. ' (' → logprob: -4.676248073577881
    6. ' i' → logprob: -5.176248073577881
    7. '(i' → logprob: -5.551248073577881
    8. ' ' → logprob: -8.676247596740723
    9. '(' → logprob: -9.051247596740723
    10. '1' → logprob: -9.426247596740723

Token 87: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5772189497947693
    2. '-' → logprob: -0.9522189497947693
    3. '-i' → logprob: -2.952219009399414
    4. ' ' → logprob: -8.952219009399414
    5. ')' → logprob: -9.702219009399414
    6. '   ' → logprob: -9.702219009399414
    7. '+' → logprob: -10.389719009399414
    8. '1' → logprob: -10.639719009399414
    9. '  ' → logprob: -10.952219009399414
    10. '+i' → logprob: -11.139719009399414

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.37990137934684753
    2. 'i' → logprob: -1.25490140914917
    3. ' i' → logprob: -3.75490140914917
    4. ' ' → logprob: -5.12990140914917
    5. '(i' → logprob: -7.75490140914917
    6. '-i' → logprob: -8.004900932312012
    7. '-' → logprob: -8.379900932312012
    8. ' (' → logprob: -8.379900932312012
    9. '(' → logprob: -9.129900932312012
    10. '2' → logprob: -9.254900932312012

Token 89: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1396835893392563
    2. '-' → logprob: -2.889683485031128
    3. '-i' → logprob: -2.889683485031128
    4. ')' → logprob: -4.389683723449707
    5. ')+' → logprob: -5.889683723449707
    6. ' +' → logprob: -6.514683723449707
    7. ' ' → logprob: -7.014683723449707
    8. '+i' → logprob: -7.764683723449707
    9. '+' → logprob: -7.889683723449707
    10. ')])' → logprob: -8.389683723449707

Token 90: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22554734349250793
    2. ' i' → logprob: -1.6005473136901855
    3. ' ' → logprob: -9.350547790527344
    4. ')' → logprob: -11.100547790527344
    5. '1' → logprob: -11.850547790527344
    6. '	i' → logprob: -12.100547790527344
    7. ')i' → logprob: -12.225547790527344
    8. '   ' → logprob: -12.600547790527344
    9. '0' → logprob: -13.100547790527344
    10. '  ' → logprob: -13.100547790527344

Token 91: ')]' (ID: 15710)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.12505483627319336
    2. '])' → logprob: -2.2500548362731934
    3. ')' → logprob: -5.500054836273193
    4. ']))' → logprob: -6.375054836273193
    5. ')]' → logprob: -6.375054836273193
    6. ']' → logprob: -6.500054836273193
    7. ' ])' → logprob: -6.750054836273193
    8. '])]' → logprob: -7.000054836273193
    9. ']])' → logprob: -7.875054836273193
    10. ' )' → logprob: -8.250055313110352

Token 92: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001060198643244803
    2. '))' → logprob: -7.1260600090026855
    3. ' )' → logprob: -8.876060485839844
    4. ')
' → logprob: -10.001060485839844
    5. '])' → logprob: -10.376060485839844
    6. ')))' → logprob: -11.001060485839844
    7. ')])' → logprob: -12.001060485839844
    8. '   ' → logprob: -12.751060485839844
    9. '`)' → logprob: -13.001060485839844
    10. ' ' → logprob: -13.501060485839844

Token 93: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00219273311085999
    2. ' a' → logprob: -6.127192497253418
    3. ' ' → logprob: -12.627192497253418
    4. '   ' → logprob: -13.002192497253418
    5. ')a' → logprob: -14.877192497253418
    6. '  ' → logprob: -15.002192497253418
    7. 'ai' → logprob: -15.252192497253418
    8. '	a' → logprob: -15.502192497253418
    9. ')' → logprob: -15.752192497253418
    10. 'b' → logprob: -15.877192497253418

Token 94: '0' (ID: 15)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02351274900138378
    2. '[' → logprob: -4.398512840270996
    3. '0' → logprob: -4.523512840270996
    4. 'i' → logprob: -9.773512840270996
    5. '<|end|>' → logprob: -10.898512840270996
    6. '[
' → logprob: -12.648512840270996
    7. '[idx' → logprob: -12.898512840270996
    8. ' ' → logprob: -13.023512840270996
    9. '[n' → logprob: -13.398512840270996
    10. ' i' → logprob: -13.523512840270996

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010294733801856637
    2. ' )' → logprob: -7.1260294914245605
    3. '))' → logprob: -9.376029014587402
    4. ')
' → logprob: -9.501029014587402
    5. ')`' → logprob: -11.126029014587402
    6. ' ' → logprob: -12.001029014587402
    7. ')i' → logprob: -12.126029014587402
    8. '   ' → logprob: -12.251029014587402
    9. ')a' → logprob: -12.376029014587402
    10. '`)' → logprob: -12.376029014587402

Token 96: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9804080724716187
    2. ' ' → logprob: -0.9804080724716187
    3. '<|end|>' → logprob: -2.105408191680908
    4. '   ' → logprob: -2.730408191680908
    5. '[' → logprob: -3.855408191680908
    6. '0' → logprob: -4.855408191680908
    7. '    ' → logprob: -5.105408191680908
    8. '
' → logprob: -5.105408191680908
    9. ' 
' → logprob: -5.480408191680908
    10. '```' → logprob: -6.480408191680908

Token 97: ' odds' (ID: 28374)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34953317046165466
    2. ')' → logprob: -1.599533200263977
    3. '\n' → logprob: -3.0995330810546875
    4. ' )' → logprob: -4.3495330810546875
    5. '<|end|>' → logprob: -4.7245330810546875
    6. ' 
' → logprob: -4.8495330810546875
    7. '\' → logprob: -5.7245330810546875
    8. '[' → logprob: -5.8495330810546875
    9. 'n' → logprob: -6.2245330810546875
    10. '
' → logprob: -6.4745330810546875

Token 98: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001394161517964676
    2. '(' → logprob: -9.250139236450195
    3. '())' → logprob: -11.000139236450195
    4. '()
' → logprob: -11.625139236450195
    5. '()>' → logprob: -12.000139236450195
    6. '()`' → logprob: -13.375139236450195
    7. '()]' → logprob: -13.500139236450195
    8. '()">' → logprob: -13.625139236450195
    9. '()</' → logprob: -13.875139236450195
    10. '()\' → logprob: -14.000139236450195

Token 100: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7572482228279114
    2. ')' → logprob: -1.8822481632232666
    3. '   ' → logprob: -2.0072481632232666
    4. '<|end|>' → logprob: -2.5072481632232666
    5. 'a' (adapté à ' a') → logprob: -2.6322481632232666
    6. ' 
' → logprob: -3.0072481632232666
    7. '    ' → logprob: -4.632248401641846
    8. ' )' → logprob: -4.757248401641846
    9. ' a' → logprob: -5.132248401641846
    10. '  ' → logprob: -5.882248401641846

Token 102: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0089031420648098
    2. ' =' → logprob: -5.6339030265808105
    3. '[:' → logprob: -6.2589030265808105
    4. '=' → logprob: -6.6339030265808105
    5. '0' → logprob: -7.3839030265808105
    6. '[:]' → logprob: -7.5089030265808105
    7. '<|end|>' → logprob: -8.508903503417969
    8. '[:-' → logprob: -8.508903503417969
    9. '[
' → logprob: -9.008903503417969
    10. '1' → logprob: -9.758903503417969

Token 103: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0162853002548218
    2. 'od' → logprob: -1.2662853002548218
    3. ' odds' → logprob: -1.8912853002548218
    4. ' [' → logprob: -2.1412854194641113
    5. 'a' → logprob: -3.1412854194641113
    6. ' a' → logprob: -3.3912854194641113
    7. '[a' → logprob: -5.141285419464111
    8. ' od' → logprob: -6.141285419464111
    9. '[]' → logprob: -7.453785419464111
    10. 'odd' → logprob: -8.078784942626953

Token 104: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.143026202917099
    2. '0' → logprob: -2.393026113510132
    3. 'od' → logprob: -3.268026113510132
    4. ' a' → logprob: -6.143026351928711
    5. ' odds' → logprob: -7.518026351928711
    6. '1' → logprob: -7.768026351928711
    7. 'odd' → logprob: -8.768026351928711
    8. ' ' → logprob: -8.893026351928711
    9. '   ' → logprob: -9.518026351928711
    10. 'b' → logprob: -9.518026351928711

Token 105: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07007581740617752
    2. '[' → logprob: -2.695075750350952
    3. 'od' → logprob: -9.820075988769531
    4. ']' → logprob: -10.945075988769531
    5. 'a' → logprob: -11.070075988769531
    6. ' ' → logprob: -11.320075988769531
    7. '[i' → logprob: -11.445075988769531
    8. '[-' → logprob: -12.320075988769531
    9. '   ' → logprob: -12.695075988769531
    10. '```' → logprob: -12.820075988769531

Token 106: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01499281357973814
    2. ']+' → logprob: -4.389992713928223
    3. ' ]' → logprob: -6.639992713928223
    4. ',' → logprob: -6.889992713928223
    5. '<|end|>' → logprob: -10.139992713928223
    6. ' *' → logprob: -10.389992713928223
    7. '+]' → logprob: -11.514992713928223
    8. '+' → logprob: -11.639992713928223
    9. ']
' → logprob: -11.889992713928223
    10. ' +' → logprob: -12.014992713928223

Token 107: 'od' (ID: 368)
  Prédit: 'od'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.002020951360464096
    2. ' odds' → logprob: -6.252020835876465
    3. '[' → logprob: -9.377020835876465
    4. 'odd' → logprob: -12.252020835876465
    5. 'ods' → logprob: -13.377020835876465
    6. 'Odds' → logprob: -14.127020835876465
    7. ' [' → logprob: -15.752020835876465
    8. '_od' → logprob: -16.00202178955078
    9. ' od' → logprob: -16.62702178955078
    10. '['' → logprob: -16.75202178955078

Token 108: 'ds' (ID: 8559)
  Prédit: 'ds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -3.650518920039758e-06
    2. 'd' → logprob: -12.750003814697266
    3. 's' → logprob: -14.875003814697266
    4. '(ds' → logprob: -15.375003814697266
    5. '[' → logprob: -16.125003814697266
    6. ' ds' → logprob: -16.875003814697266
    7. '_ds' → logprob: -18.000003814697266
    8. '	ds' → logprob: -18.625003814697266
    9. '```' → logprob: -18.875003814697266
    10. '(' → logprob: -19.250003814697266

Token 109: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6102470755577087
    2. '<|end|>' → logprob: -0.9852470755577087
    3. '   ' → logprob: -2.7352471351623535
    4. '[' → logprob: -4.7352471351623535
    5. '\n' → logprob: -5.8602471351623535
    6. '    
' → logprob: -6.6102471351623535
    7. '<|end|>' → logprob: -6.6102471351623535
    8. ')' → logprob: -7.1102471351623535
    9. '[
' → logprob: -7.4852471351623535
    10. '[n' → logprob: -7.4852471351623535

Token 111: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03146958351135254
    2. '<|end|>' → logprob: -3.6564695835113525
    3. ')' → logprob: -5.781469345092773
    4. ' return' → logprob: -7.906469345092773
    5. ' ' → logprob: -8.156469345092773
    6. '
' → logprob: -8.406469345092773
    7. '\n' → logprob: -8.406469345092773
    8. '[' → logprob: -8.906469345092773
    9. 'return' (adapté à ' return') → logprob: -9.156469345092773
    10. '  ' → logprob: -9.156469345092773

Token 112: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006718571297824383
    2. ' a' → logprob: -5.006718635559082
    3. '[a' → logprob: -12.756718635559082
    4. '[' → logprob: -15.506718635559082
    5. ''a' → logprob: -17.006717681884766
    6. ' [' → logprob: -17.381717681884766
    7. '	a' → logprob: -17.756717681884766
    8. ' ' → logprob: -18.006717681884766
    9. '(a' → logprob: -18.381717681884766
    10. 'list' → logprob: -18.631717681884766

Token 113: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09867607057094574
    2. '[' → logprob: -3.4736759662628174
    3. '<|end|>' → logprob: -3.4736759662628174
    4. '
' → logprob: -3.9736759662628174
    5. '(' → logprob: -5.2236762046813965
    6. ':' → logprob: -6.2236762046813965
    7. '#' → logprob: -6.4736762046813965
    8. ',' → logprob: -6.9736762046813965
    9. 'n' → logprob: -7.5986762046813965
    10. ']' → logprob: -7.7236762046813965

Token 114: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18029315769672394
    2. '<|end|>' → logprob: -2.180293083190918
    3. '[n' → logprob: -3.555293083190918
    4. ')' → logprob: -4.305293083190918
    5. '```' → logprob: -5.680293083190918
    6. ',' → logprob: -6.555293083190918
    7. '[a' → logprob: -7.180293083190918
    8. '[]' → logprob: -7.555293083190918
    9. 'a' → logprob: -7.555293083190918
    10. '.' → logprob: -7.680293083190918

Token 115: ' odds' (ID: 28374)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0045579345896840096
    2. ' a' → logprob: -6.004558086395264
    3. 'od' → logprob: -8.004557609558105
    4. '*' → logprob: -8.379557609558105
    5. '*a' → logprob: -8.379557609558105
    6. '<|end|>' → logprob: -8.379557609558105
    7. ')' → logprob: -8.504557609558105
    8. '[]' → logprob: -8.754557609558105
    9. '[' → logprob: -9.004557609558105
    10. 'len' → logprob: -9.129557609558105

Token 116: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5602695345878601
    2. ')' → logprob: -0.9352695345878601
    3. ' ' → logprob: -4.810269355773926
    4. ':' → logprob: -5.060269355773926
    5. '<|end|>' → logprob: -5.435269355773926
    6. ']' → logprob: -5.560269355773926
    7. '[n' → logprob: -5.810269355773926
    8. '   ' → logprob: -6.435269355773926
    9. '```' → logprob: -6.560269355773926
    10. '(' → logprob: -6.560269355773926

Token 118: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.043785762041807175
    2. ' solve' → logprob: -3.168785810470581
    3. 'main' → logprob: -8.41878604888916
    4. ' test' → logprob: -9.04378604888916
    5. ' calculate' → logprob: -9.41878604888916
    6. ' factorial' → logprob: -9.41878604888916
    7. ' sum' → logprob: -9.54378604888916
    8. '_main' → logprob: -10.41878604888916
    9. ' find' → logprob: -10.54378604888916
    10. ' solution' → logprob: -10.66878604888916

Token 119: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0038025728426873684
    2. '(' → logprob: -5.62880277633667
    3. '()' → logprob: -9.503802299499512
    4. '():
' → logprob: -9.753802299499512
    5. ':' → logprob: -10.378802299499512
    6. '(:' → logprob: -11.128802299499512
    7. '_' → logprob: -11.753802299499512
    8. ' ():' → logprob: -12.503802299499512
    9. '(":' → logprob: -12.753802299499512
    10. '():
' → logprob: -13.378802299499512

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02802799642086029
    2. ' n' → logprob: -4.9030280113220215
    3. 'n' → logprob: -5.1530280113220215
    4. '```' → logprob: -5.4030280113220215
    5. '(n' → logprob: -5.7780280113220215
    6. 'import' → logprob: -6.4030280113220215
    7. '<|end|>' → logprob: -6.9030280113220215
    8. ' import' → logprob: -6.9030280113220215
    9. ' input' → logprob: -7.0280280113220215
    10. '    
' → logprob: -7.1530280113220215

Token 121: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16905848681926727
    2. 'n' → logprob: -2.1690585613250732
    3. ' import' → logprob: -3.4190585613250732
    4. 'import' → logprob: -5.169058322906494
    5. '   ' → logprob: -6.294058322906494
    6. ' input' → logprob: -7.044058322906494
    7. 'input' (adapté à ' input') → logprob: -10.169058799743652
    8. '```' → logprob: -10.294058799743652
    9. 't' → logprob: -11.544058799743652
    10. ' t' → logprob: -11.794058799743652

Token 122: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10062133520841599
    2. '_data' → logprob: -2.850621223449707
    3. '_line' → logprob: -3.350621223449707
    4. '_' → logprob: -7.475621223449707
    5. '_lines' → logprob: -7.475621223449707
    6. '_text' → logprob: -8.100621223449707
    7. '().' → logprob: -8.100621223449707
    8. 'data' → logprob: -8.225621223449707
    9. ' =' → logprob: -8.225621223449707
    10. '_str' → logprob: -8.600621223449707

Token 123: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.10070154070854187
    2. 'sys' → logprob: -2.3507015705108643
    3. ' input' → logprob: -8.100701332092285
    4. 'input' → logprob: -8.600701332092285
    5. ' lambda' → logprob: -12.100701332092285
    6. 'lambda' → logprob: -13.600701332092285
    7. '	sys' → logprob: -14.975701332092285
    8. '=sys' → logprob: -15.225701332092285
    9. '(sys' → logprob: -17.2257022857666
    10. 'stdin' → logprob: -17.7257022857666

Token 124: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1945646107196808
    2. '.stdin' → logprob: -2.4445645809173584
    3. '.readline' → logprob: -2.4445645809173584
    4. '.stdout' → logprob: -6.5695648193359375
    5. ' .' → logprob: -7.1945648193359375
    6. '.read' → logprob: -8.194564819335938
    7. '.setdefault' → logprob: -8.569564819335938
    8. '.argv' → logprob: -9.069564819335938
    9. '().' → logprob: -9.444564819335938
    10. 'stdin' → logprob: -9.569564819335938

Token 125: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0026695921551436186
    2. '.' → logprob: -6.877669811248779
    3. '.read' → logprob: -7.127669811248779
    4. 'read' → logprob: -7.377669811248779
    5. '.readlines' → logprob: -9.252669334411621
    6. '.stdin' → logprob: -10.127669334411621
    7. '<|end|>' → logprob: -10.252669334411621
    8. '_read' → logprob: -11.502669334411621
    9. '```' → logprob: -12.127669334411621
    10. '_reader' → logprob: -12.752669334411621

Token 126: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4290005564689636
    2. '().' → logprob: -1.0540006160736084
    3. '()
' → logprob: -9.179000854492188
    4. '()\' → logprob: -9.304000854492188
    5. '()

' → logprob: -10.679000854492188
    6. '(' → logprob: -10.929000854492188
    7. '()`' → logprob: -11.679000854492188
    8. '()]' → logprob: -11.929000854492188
    9. '<|end|>' → logprob: -11.929000854492188
    10. 'line' → logprob: -12.179000854492188

Token 127: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.3148343563079834
    2. 'strip' → logprob: -1.3148343563079834
    3. 'decode' → logprob: -6.6898345947265625
    4. 'rstrip' → logprob: -8.189834594726562
    5. 'read' → logprob: -10.064834594726562
    6. 'replace' → logprob: -12.689834594726562
    7. ' split' → logprob: -13.439834594726562
    8. '```' → logprob: -13.564834594726562
    9. '(split' → logprob: -14.189834594726562
    10. '()' → logprob: -14.314834594726562

Token 128: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.127020925283432
    2. '().' → logprob: -2.127020835876465
    3. '(' → logprob: -9.877020835876465
    4. '()`' → logprob: -11.502020835876465
    5. '()\' → logprob: -11.752020835876465
    6. '()
' → logprob: -12.127020835876465
    7. '()(' → logprob: -12.627020835876465
    8. '())' → logprob: -12.877020835876465
    9. '('' → logprob: -12.877020835876465
    10. '()+' → logprob: -13.752020835876465

Token 129: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. ' split' → logprob: -14.625000953674316
    3. '(split' → logprob: -15.875000953674316
    4. 'replace' → logprob: -16.25
    5. 'decode' → logprob: -19.5
    6. 'plit' → logprob: -19.625
    7. '```' → logprob: -20.375
    8. 'strip' → logprob: -20.5
    9. 'spl' → logprob: -20.75
    10. 'rstrip' → logprob: -21.0

Token 130: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006949561182409525
    2. '(' → logprob: -5.256949424743652
    3. '('' → logprob: -6.631949424743652
    4. '()
' → logprob: -8.006949424743652
    5. '(
' → logprob: -11.256949424743652
    6. '('\' → logprob: -11.506949424743652
    7. '("("' → logprob: -11.756949424743652
    8. '()]' → logprob: -12.381949424743652
    9. '()

' → logprob: -12.506949424743652
    10. '()`' → logprob: -12.631949424743652

Token 131: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35707592964172363
    2. ' n' → logprob: -1.2320759296417236
    3. '   ' → logprob: -4.8570756912231445
    4. '	n' → logprob: -8.232075691223145
    5. '(n' → logprob: -8.482075691223145
    6. 'def' → logprob: -9.482075691223145
    7. '```' → logprob: -9.857075691223145
    8. 'data' → logprob: -10.357075691223145
    9. '    
' → logprob: -10.482075691223145
    10. '_n' → logprob: -10.607075691223145

Token 132: ' pos' (ID: 1253)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001973480684682727
    2. ' n' → logprob: -6.251973628997803
    3. 't' → logprob: -10.126973152160645
    4. '```' → logprob: -12.751973152160645
    5. '   ' → logprob: -14.376973152160645
    6. ' t' → logprob: -14.501973152160645
    7. '	n' → logprob: -15.501973152160645
    8. 'T' → logprob: -16.37697410583496
    9. 'N' → logprob: -16.37697410583496
    10. '
' → logprob: -16.62697410583496

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1667049080133438
    2. ' =' → logprob: -2.4167048931121826
    3. 's' → logprob: -4.041705131530762
    4. 'sible' → logprob: -4.041705131530762
    5. '   ' → logprob: -4.416705131530762
    6. '0' → logprob: -5.416705131530762
    7. 'ition' → logprob: -5.541705131530762
    8. 't' → logprob: -5.666705131530762
    9. 'def' → logprob: -5.916705131530762
    10. 'ix' → logprob: -7.666705131530762

Token 134: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14347761869430542
    2. '1' → logprob: -2.01847767829895
    3. ' ' → logprob: -7.143477439880371
    4. '2' → logprob: -11.393477439880371
    5. '   ' → logprob: -14.643477439880371
    6. '3' → logprob: -15.143477439880371
    7. '```' → logprob: -16.143478393554688
    8. '(' → logprob: -17.268478393554688
    9. '    ' → logprob: -17.268478393554688
    10. '  ' → logprob: -17.768478393554688

Token 135: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16024738550186157
    2. '0' → logprob: -1.9102473258972168
    3. '2' → logprob: -11.035247802734375
    4. ' ' → logprob: -12.035247802734375
    5. 'int' → logprob: -14.910247802734375
    6. '3' → logprob: -14.910247802734375
    7. '```' → logprob: -15.160247802734375
    8. '[' → logprob: -15.910247802734375
    9. '4' → logprob: -17.785247802734375
    10. '(' → logprob: -18.035247802734375

Token 136: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007552439346909523
    2. '   ' → logprob: -5.382552623748779
    3. ' n' → logprob: -6.007552623748779
    4. 'def' → logprob: -8.757552146911621
    5. '
' → logprob: -9.382552146911621
    6. 'num' → logprob: -9.757552146911621
    7. '```' → logprob: -10.132552146911621
    8. '	n' → logprob: -10.507552146911621
    9. ',' → logprob: -11.007552146911621
    10. 'for' → logprob: -11.132552146911621

Token 137: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.030926058068871498
    2. '   ' → logprob: -3.780925989151001
    3. ' n' → logprob: -5.03092622756958
    4. 'def' → logprob: -7.03092622756958
    5. '	n' → logprob: -9.530925750732422
    6. '
' → logprob: -9.905925750732422
    7. 't' → logprob: -10.030925750732422
    8. '```' → logprob: -10.905925750732422
    9. 'num' → logprob: -11.155925750732422
    10. '<|end|>' → logprob: -12.030925750732422

Token 138: ' while' (ID: 2049)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3054652214050293
    2. 'n' → logprob: -1.4304652214050293
    3. ' t' → logprob: -4.180465221405029
    4. 'T' → logprob: -5.055465221405029
    5. ' n' → logprob: -6.180465221405029
    6. ' T' → logprob: -8.680465698242188
    7. 'num' → logprob: -10.180465698242188
    8. 'q' → logprob: -10.805465698242188
    9. 'k' → logprob: -11.055465698242188
    10. '   ' → logprob: -11.055465698242188

Token 139: ' True' (ID: 6432)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.5759768486022949
    2. 'pos' → logprob: -0.8259768486022949
    3. ' True' → logprob: -11.200977325439453
    4. '(pos' → logprob: -11.950977325439453
    5. 'int' → logprob: -12.075977325439453
    6. ' int' → logprob: -12.575977325439453
    7. 'True' → logprob: -13.075977325439453
    8. '	pos' → logprob: -13.325977325439453
    9. ' len' → logprob: -13.575977325439453
    10. '   ' → logprob: -13.950977325439453

Token 140: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006887646391987801
    2. ':
' → logprob: -5.006887435913086
    3. ',' → logprob: -9.756887435913086
    4. '   ' → logprob: -10.006887435913086
    5. '       ' → logprob: -10.006887435913086
    6. '<|end|>' → logprob: -12.006887435913086
    7. '):' → logprob: -12.381887435913086
    8. ':

' → logprob: -12.631887435913086
    9. '():' → logprob: -13.131887435913086
    10. ' and' → logprob: -13.506887435913086

Token 141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09936568886041641
    2. ' if' → logprob: -2.724365711212158
    3. '   ' → logprob: -3.724365711212158
    4. 'if' → logprob: -5.849365711212158
    5. ' try' → logprob: -6.599365711212158
    6. 'try' → logprob: -8.099365234375
    7. '    ' → logprob: -9.099365234375
    8. '<|end|>' → logprob: -9.224365234375
    9. '```' → logprob: -10.974365234375
    10. ' ' → logprob: -11.349365234375

Token 142: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6581291556358337
    2. ' if' → logprob: -1.1581292152404785
    3. 'n' → logprob: -2.1581292152404785
    4. ' n' → logprob: -3.6581292152404785
    5. ' try' → logprob: -4.4081292152404785
    6. 'try' → logprob: -4.5331292152404785
    7. '   ' → logprob: -5.7831292152404785
    8. '       ' → logprob: -8.78312873840332
    9. 'num' → logprob: -8.78312873840332
    10. 'line' → logprob: -9.90812873840332

Token 143: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.011048054322600365
    2. 'pos' → logprob: -4.511047840118408
    3. ' not' → logprob: -16.38604736328125
    4. ' ' → logprob: -16.51104736328125
    5. '	pos' → logprob: -16.63604736328125
    6. '(pos' → logprob: -17.26104736328125
    7. '[pos' → logprob: -19.51104736328125
    8. ' ' → logprob: -19.51104736328125
    9. ' len' → logprob: -19.76104736328125
    10. 'not' → logprob: -20.51104736328125

Token 144: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.38706889748573303
    2. ' >=' → logprob: -1.1370688676834106
    3. '==' → logprob: -8.887068748474121
    4. '<' → logprob: -11.137068748474121
    5. ' ==' → logprob: -11.262068748474121
    6. '+' → logprob: -11.512068748474121
    7. ' <' → logprob: -12.012068748474121
    8. ']>=' → logprob: -12.012068748474121
    9. ')>=' → logprob: -13.012068748474121
    10. ' ' → logprob: -13.262068748474121

Token 145: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0001584850688232109
    2. ' len' → logprob: -8.750158309936523
    3. '(len' → logprob: -18.750158309936523
    4. '	len' → logprob: -21.000158309936523
    5. ' ' → logprob: -21.375158309936523
    6. '=len' → logprob: -21.750158309936523
    7. '   ' → logprob: -21.875158309936523
    8. '<len' → logprob: -22.000158309936523
    9. 'length' → logprob: -22.625158309936523
    10. ',len' → logprob: -22.750158309936523

Token 146: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.014171031303703785
    2. 'input' → logprob: -4.264171123504639
    3. ' input' → logprob: -11.88917064666748
    4. '=input' → logprob: -15.51417064666748
    5. '[input' → logprob: -16.014171600341797
    6. '<input' → logprob: -16.139171600341797
    7. ',input' → logprob: -16.389171600341797
    8. '(' → logprob: -17.514171600341797
    9. '_input' → logprob: -17.764171600341797
    10. ' (' → logprob: -17.889171600341797

Token 147: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3374336361885071
    2. ')' → logprob: -1.9624335765838623
    3. '):
' → logprob: -1.9624335765838623
    4. ' or' → logprob: -5.337433815002441
    5. ' ):' → logprob: -8.587433815002441
    6. ':' → logprob: -9.087433815002441
    7. '   ' → logprob: -9.212433815002441
    8. 'or' → logprob: -10.087433815002441
    9. ' ):
' → logprob: -10.337433815002441
    10. ' )' → logprob: -10.587433815002441

Token 148: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003924231859855354
    2. '       ' → logprob: -8.625391960144043
    3. ' break' → logprob: -9.125391960144043
    4. 'break' → logprob: -9.500391960144043
    5. '   ' → logprob: -11.375391960144043
    6. ':
' → logprob: -12.125391960144043
    7. ':' → logprob: -12.375391960144043
    8. '
' → logprob: -13.500391960144043
    9. '```' → logprob: -13.625391960144043
    10. '		' → logprob: -13.625391960144043

Token 149: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4672512412071228
    2. 'break' (adapté à ' break') → logprob: -1.2172513008117676
    3. ' break' → logprob: -3.2172513008117676
    4. '       ' → logprob: -3.7172513008117676
    5. 'return' → logprob: -4.467251300811768
    6. '
' → logprob: -7.592251300811768
    7. ' return' → logprob: -7.592251300811768
    8. '               ' → logprob: -8.59225082397461
    9. '   ' → logprob: -9.34225082397461
    10. '	break' → logprob: -9.46725082397461

Token 150: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08993501216173172
    2. '<|end|>' → logprob: -2.964935064315796
    3. '        
' → logprob: -4.089934825897217
    4. '
' → logprob: -4.839934825897217
    5. '  
' → logprob: -5.839934825897217
    6. '   ' → logprob: -5.964934825897217
    7. '    
' → logprob: -6.714934825897217
    8. '<|end|>' → logprob: -7.214934825897217
    9. '\n' → logprob: -7.339934825897217
    10. '```' → logprob: -7.964934825897217

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049733966588974
    2. '   ' → logprob: -4.299734115600586
    3. '        
' → logprob: -4.299734115600586
    4. '
' → logprob: -4.549734115600586
    5. '    
' → logprob: -5.674734115600586
    6. '  
' → logprob: -5.924734115600586
    7. '<|end|>' → logprob: -6.049734115600586
    8. '\n' → logprob: -6.549734115600586
    9. ' 
' → logprob: -9.174734115600586
    10. '```' → logprob: -9.424734115600586

Token 152: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.5858467817306519
    2. ' n' → logprob: -0.8358467817306519
    3. '   ' → logprob: -4.710846900939941
    4. '       ' → logprob: -8.335846900939941
    5. ' t' → logprob: -8.710846900939941
    6. 'k' → logprob: -9.085846900939941
    7. ' k' → logprob: -9.085846900939941
    8. 't' → logprob: -9.335846900939941
    9. 'm' → logprob: -10.585846900939941
    10. ' ' → logprob: -10.710846900939941

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34859147667884827
    2. '=' → logprob: -1.2235914468765259
    3. '=int' → logprob: -9.348591804504395
    4. '   ' → logprob: -10.098591804504395
    5. ',' → logprob: -12.098591804504395
    6. ')' → logprob: -12.223591804504395
    7. ' ' → logprob: -13.223591804504395
    8. ' =
' → logprob: -13.848591804504395
    9. '    ' → logprob: -14.348591804504395
    10. ']' → logprob: -14.473591804504395

Token 154: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16022463142871857
    2. ' int' → logprob: -1.9102246761322021
    3. '[int' → logprob: -15.410224914550781
    4. '=int' → logprob: -15.785224914550781
    5. '(int' → logprob: -16.28522491455078
    6. '<int' → logprob: -17.53522491455078
    7. '	int' → logprob: -17.53522491455078
    8. ' ' → logprob: -18.03522491455078
    9. ']int' → logprob: -18.78522491455078
    10. '   ' → logprob: -18.91022491455078

Token 155: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0024859998375177383
    2. '(' → logprob: -6.002486228942871
    3. 'input' → logprob: -11.502486228942871
    4. '(
' → logprob: -16.252485275268555
    5. ' (' → logprob: -16.377485275268555
    6. '(

' → logprob: -18.127485275268555
    7. ' input' → logprob: -18.377485275268555
    8. '<input' → logprob: -18.752485275268555
    9. '[input' → logprob: -18.752485275268555
    10. '=input' → logprob: -19.127485275268555

Token 156: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: 0.0
    2. '[' → logprob: -17.25
    3. ' [' → logprob: -18.5
    4. 'pos' → logprob: -18.875
    5. '   ' → logprob: -19.5
    6. '(pos' → logprob: -20.625
    7. ')' → logprob: -20.875
    8. ',pos' → logprob: -21.375
    9. '[
' → logprob: -21.625
    10. '[position' → logprob: -22.125

Token 157: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.012864413671195507
    2. '])
' → logprob: -4.387864589691162
    3. ']);' → logprob: -8.137864112854004
    4. ')' → logprob: -10.012864112854004
    5. ']' → logprob: -12.387864112854004
    6. ')
' → logprob: -12.512864112854004
    7. '])+' → logprob: -12.762864112854004
    8. ' ])' → logprob: -13.262864112854004
    9. '])

' → logprob: -13.512864112854004
    10. '+' → logprob: -13.762864112854004

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6780264973640442
    2. '<|end|>' → logprob: -0.8030264973640442
    3. '
' → logprob: -3.9280264377593994
    4. '<|end|>' → logprob: -5.1780266761779785
    5. '\n' → logprob: -5.4280266761779785
    6. ')' → logprob: -5.4280266761779785
    7. '   ' → logprob: -6.0530266761779785
    8. 'pos' → logprob: -6.4280266761779785
    9. ' 
' → logprob: -6.6780266761779785
    10. '```' → logprob: -6.8030266761779785

Token 159: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.04860507696866989
    2. ' pos' → logprob: -3.048604965209961
    3. '	pos' → logprob: -11.673604965209961
    4. '
' → logprob: -12.423604965209961
    5. '_pos' → logprob: -13.298604965209961
    6. ' 
' → logprob: -14.048604965209961
    7. '\n' → logprob: -14.173604965209961
    8. '[pos' → logprob: -14.548604965209961
    9. '```' → logprob: -14.673604965209961
    10. '       ' → logprob: -15.173604965209961

Token 160: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014312991872429848
    2. ' +=' → logprob: -4.264313220977783
    3. '+' → logprob: -8.889312744140625
    4. '=' → logprob: -12.014312744140625
    5. ']+=' → logprob: -12.389312744140625
    6. '+='' → logprob: -14.514312744140625
    7. '+="' → logprob: -14.764312744140625
    8. '```' → logprob: -15.139312744140625
    9. '++' → logprob: -16.264312744140625
    10. ')' → logprob: -16.514312744140625

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '１' → logprob: -23.000059127807617
    4. '```' → logprob: -23.625059127807617
    5. '2' → logprob: -24.750059127807617
    6. '۱' → logprob: -25.375059127807617
    7. ' ' → logprob: -25.375059127807617
    8. '+' → logprob: -25.500059127807617
    9. '   ' → logprob: -25.750059127807617
    10. '0' → logprob: -25.750059127807617

Token 162: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027035268023610115
    2. '<|end|>' → logprob: -3.6520352363586426
    3. 'b' → logprob: -8.2770357131958
    4. '        
' → logprob: -9.0270357131958
    5. '<|end|>' → logprob: -9.6520357131958
    6. ' if' → logprob: -10.1520357131958
    7. '
' → logprob: -10.2770357131958
    8. ' b' → logprob: -10.4020357131958
    9. 'newline' → logprob: -10.4020357131958
    10. ',' → logprob: -10.6520357131958

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033137653954327106
    2. 'b' → logprob: -6.3783135414123535
    3. ' if' → logprob: -7.6283135414123535
    4. ' b' → logprob: -7.6283135414123535
    5. 'if' → logprob: -8.128314018249512
    6. '   ' → logprob: -9.128314018249512
    7. 'n' → logprob: -9.753314018249512
    8. '<|end|>' → logprob: -10.003314018249512
    9. '        
' → logprob: -10.628314018249512
    10. ',' → logprob: -10.628314018249512

Token 164: ' if' (ID: 538)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023669345304369926
    2. 'if' (adapté à ' if') → logprob: -3.7736692428588867
    3. 'arr' → logprob: -8.773669242858887
    4. ' b' → logprob: -9.398669242858887
    5. ' if' → logprob: -10.023669242858887
    6. 'bs' → logprob: -10.523669242858887
    7. '   ' → logprob: -10.898669242858887
    8. 'nums' → logprob: -11.023669242858887
    9. 'a' → logprob: -11.148669242858887
    10. 'vals' → logprob: -11.148669242858887

Token 165: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.006716079078614712
    2. 'n' → logprob: -5.006716251373291
    3. ' not' → logprob: -14.381715774536133
    4. '	n' → logprob: -16.631715774536133
    5. ' ' → logprob: -16.756715774536133
    6. ' ' → logprob: -18.006715774536133
    7. 'not' → logprob: -18.131715774536133
    8. 'n't' → logprob: -18.881715774536133
    9. '(n' → logprob: -18.881715774536133
    10. ' н' → logprob: -19.256715774536133

Token 166: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38720452785491943
    2. '==' → logprob: -1.1372045278549194
    3. '=' → logprob: -9.38720417022705
    4. '0' → logprob: -9.63720417022705
    5. ' ' → logprob: -9.76220417022705
    6. '<=' → logprob: -9.76220417022705
    7. ' <=' → logprob: -9.76220417022705
    8. ')==' → logprob: -12.38720417022705
    9. ' =' → logprob: -13.63720417022705
    10. '==
' → logprob: -13.76220417022705

Token 167: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '-' → logprob: -16.250015258789062
    4. ' -' → logprob: -19.500015258789062
    5. '   ' → logprob: -20.375015258789062
    6. '```' → logprob: -21.000015258789062
    7. '
' → logprob: -21.375015258789062
    8. '  ' → logprob: -21.750015258789062
    9. '=' → logprob: -22.125015258789062
    10. '۰' → logprob: -22.375015258789062

Token 168: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0381377674639225
    2. ':
' → logprob: -3.288137674331665
    3. ':return' → logprob: -9.538137435913086
    4. '   ' → logprob: -11.413137435913086
    5. '       ' → logprob: -11.663137435913086
    6. ' :' → logprob: -13.163137435913086
    7. '           ' → logprob: -14.038137435913086
    8. ':
' → logprob: -14.163137435913086
    9. ' :
' → logprob: -14.788137435913086
    10. '	break' → logprob: -15.788137435913086

Token 169: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.7610454708337784e-05
    2. '       ' → logprob: -11.125027656555176
    3. ' break' → logprob: -12.500027656555176
    4. 'break' → logprob: -12.625027656555176
    5. '   ' → logprob: -12.750027656555176
    6. '	       ' → logprob: -14.125027656555176
    7. '		' → logprob: -14.250027656555176
    8. '               ' → logprob: -14.750027656555176
    9. '          ' → logprob: -14.875027656555176
    10. '```' → logprob: -15.750027656555176

Token 170: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.25351208448410034
    2. ' break' → logprob: -2.003512144088745
    3. 'return' → logprob: -2.503512144088745
    4. '           ' → logprob: -5.503511905670166
    5. ' return' → logprob: -5.753511905670166
    6. '	break' → logprob: -11.253512382507324
    7. '       ' → logprob: -11.628512382507324
    8. '               ' → logprob: -12.503512382507324
    9. '   ' → logprob: -13.878512382507324
    10. '
' → logprob: -14.503512382507324

Token 171: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006577996537089348
    2. '<|end|>' → logprob: -5.506577968597412
    3. '
' → logprob: -6.506577968597412
    4. '        
' → logprob: -8.00657844543457
    5. 'n' → logprob: -8.63157844543457
    6. '```' → logprob: -8.88157844543457
    7. '   ' → logprob: -9.38157844543457
    8. 'b' → logprob: -9.75657844543457
    9. '<|end|>' → logprob: -10.00657844543457
    10. ',' → logprob: -10.13157844543457

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010924735106527805
    2. '<|end|>' → logprob: -7.251092433929443
    3. 'b' → logprob: -8.751092910766602
    4. '        
' → logprob: -10.126092910766602
    5. '```' → logprob: -10.126092910766602
    6. 'n' → logprob: -10.251092910766602
    7. '   ' → logprob: -10.251092910766602
    8. '
' → logprob: -10.876092910766602
    9. ',' → logprob: -11.126092910766602
    10. '<|end|>' → logprob: -12.126092910766602

Token 173: ' length' (ID: 5517)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.040174566209316254
    2. '       ' → logprob: -3.5401744842529297
    3. ' b' → logprob: -4.79017448425293
    4. '   ' → logprob: -6.66517448425293
    5. 'n' → logprob: -7.91517448425293
    6. 'values' → logprob: -10.04017448425293
    7. 'nums' → logprob: -10.16517448425293
    8. 'B' → logprob: -10.16517448425293
    9. 'data' → logprob: -10.29017448425293
    10. 'arr' → logprob: -10.54017448425293

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11345987766981125
    2. '=' → logprob: -2.238459825515747
    3. 's' → logprob: -7.488460063934326
    4. ' ' → logprob: -10.113459587097168
    5. '   ' → logprob: -10.988459587097168
    6. '_' → logprob: -11.613459587097168
    7. '=int' → logprob: -12.863459587097168
    8. '=len' → logprob: -13.363459587097168
    9. ')' → logprob: -13.488459587097168
    10. '  ' → logprob: -13.613459587097168

Token 175: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005344397854059935
    2. '(n' → logprob: -5.255344390869141
    3. ' n' → logprob: -9.13034439086914
    4. ' (' → logprob: -13.63034439086914
    5. '(' → logprob: -14.13034439086914
    6. '((' → logprob: -15.75534439086914
    7. '	n' → logprob: -16.63034439086914
    8. '_n' → logprob: -16.75534439086914
    9. '[n' → logprob: -17.75534439086914
    10. '   ' → logprob: -17.75534439086914

Token 176: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.00033200893085449934
    2. ' *' → logprob: -8.25033187866211
    3. '*' → logprob: -9.62533187866211
    4. ' *(' → logprob: -12.75033187866211
    5. '*n' → logprob: -13.62533187866211
    6. '(n' → logprob: -15.25033187866211
    7. '*((' → logprob: -15.50033187866211
    8. '```' → logprob: -17.37533187866211
    9. '  ' → logprob: -17.50033187866211
    10. '+' → logprob: -17.50033187866211

Token 177: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03866444528102875
    2. '(n' → logprob: -3.2886643409729004
    3. ' (' → logprob: -8.163664817810059
    4. ' n' → logprob: -8.288664817810059
    5. '   ' → logprob: -10.288664817810059
    6. ' ' → logprob: -11.288664817810059
    7. ')n' → logprob: -11.413664817810059
    8. '           ' → logprob: -11.913664817810059
    9. '       ' → logprob: -12.038664817810059
    10. '
' → logprob: -12.788664817810059

Token 178: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0038632587529718876
    2. '1' → logprob: -6.128863334655762
    3. '-' → logprob: -7.128863334655762
    4. ' +' → logprob: -7.128863334655762
    5. '   ' → logprob: -10.628863334655762
    6. '       ' → logprob: -11.128863334655762
    7. '```' → logprob: -11.378863334655762
    8. ' ' → logprob: -11.878863334655762
    9. ' -' → logprob: -12.503863334655762
    10. '           ' → logprob: -12.753863334655762

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -12.37501049041748
    3. '   ' → logprob: -13.12501049041748
    4. '```' → logprob: -14.12501049041748
    5. '2' → logprob: -14.37501049041748
    6. '       ' → logprob: -14.50001049041748
    7. '           ' → logprob: -14.50001049041748
    8. '
' → logprob: -14.93751049041748
    9. '0' → logprob: -15.56251049041748
    10. '                   ' → logprob: -16.125009536743164

Token 180: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.016219941899180412
    2. '//' → logprob: -4.2662200927734375
    3. '()' → logprob: -6.5162200927734375
    4. ')' → logprob: -7.7662200927734375
    5. '   ' → logprob: -9.641220092773438
    6. '())' → logprob: -10.516220092773438
    7. ' //' → logprob: -10.641220092773438
    8. '       ' → logprob: -11.516220092773438
    9. ' )' → logprob: -12.141220092773438
    10. '```' → logprob: -12.266220092773438

Token 181: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.470901229884475e-05
    2. '1' → logprob: -9.62508487701416
    3. ' ' → logprob: -11.12508487701416
    4. '   ' → logprob: -12.87508487701416
    5. '  ' → logprob: -15.12508487701416
    6. '       ' → logprob: -15.37508487701416
    7. '
' → logprob: -15.50008487701416
    8. '    ' → logprob: -15.62508487701416
    9. '```' → logprob: -15.87508487701416
    10. '           ' → logprob: -16.500083923339844

Token 182: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007112210150808096
    2. '<|end|>' → logprob: -5.1321120262146
    3. 'b' → logprob: -6.8821120262146
    4. '   ' → logprob: -9.632112503051758
    5. '<|end|>' → logprob: -10.507112503051758
    6. ' b' → logprob: -11.507112503051758
    7. ')' → logprob: -12.007112503051758
    8. 'next' → logprob: -12.132112503051758
    9. '```' → logprob: -12.757112503051758
    10. 'tokens' → logprob: -12.882112503051758

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038152725901454687
    2. 'b' → logprob: -5.628815174102783
    3. '   ' → logprob: -9.003815650939941
    4. '<|end|>' → logprob: -9.753815650939941
    5. ' b' → logprob: -11.003815650939941
    6. '```' → logprob: -12.753815650939941
    7. '        
' → logprob: -12.753815650939941
    8. '
' → logprob: -13.378815650939941
    9. '<|end|>' → logprob: -13.628815650939941
    10. '	' → logprob: -14.003815650939941

Token 184: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.014914247207343578
    2. ' b' → logprob: -4.264914035797119
    3. '       ' → logprob: -7.764914035797119
    4. '   ' → logprob: -8.389914512634277
    5. 'arr' → logprob: -9.764914512634277
    6. 'values' → logprob: -11.764914512634277
    7. 'vals' → logprob: -11.764914512634277
    8. 'B' → logprob: -12.389914512634277
    9. 'bs' → logprob: -12.639914512634277
    10. '	b' → logprob: -12.639914512634277

Token 185: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011112428270280361
    2. ' =' → logprob: -4.511112213134766
    3. '_values' → logprob: -11.386112213134766
    4. '_idx' → logprob: -11.511112213134766
    5. '_vals' → logprob: -11.511112213134766
    6. '_tokens' → logprob: -11.636112213134766
    7. '=[]' → logprob: -12.136112213134766
    8. '_=' → logprob: -12.261112213134766
    9. '.extend' → logprob: -13.386112213134766
    10. '+=' → logprob: -13.386112213134766

Token 186: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0035346136428415775
    2. ' list' → logprob: -5.75353479385376
    3. '[list' → logprob: -8.003534317016602
    4. '[' → logprob: -10.753534317016602
    5. ' [' → logprob: -14.253534317016602
    6. '[int' → logprob: -14.628534317016602
    7. '[input' → logprob: -17.0035343170166
    8. '(list' → logprob: -17.1285343170166
    9. '=list' → logprob: -17.6285343170166
    10. '[List' → logprob: -18.0035343170166

Token 187: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0006660910439677536
    2. '(input' → logprob: -7.50066614151001
    3. '(' → logprob: -9.625665664672852
    4. '(int' → logprob: -10.000665664672852
    5. 'map' → logprob: -13.500665664672852
    6. '(tuple' → logprob: -16.75066566467285
    7. '(
' → logprob: -17.37566566467285
    8. ' (' → logprob: -17.87566566467285
    9. 'input' → logprob: -17.87566566467285
    10. '[int' → logprob: -18.00066566467285

Token 188: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008687022142112255
    2. 'int' → logprob: -4.7586870193481445
    3. '(' → logprob: -10.508687019348145
    4. '(lambda' → logprob: -10.508687019348145
    5. ',int' → logprob: -11.758687019348145
    6. '[int' → logprob: -12.883687019348145
    7. ')' → logprob: -13.133687019348145
    8. ' int' → logprob: -13.383687019348145
    9. '=int' → logprob: -14.133687019348145
    10. '```' → logprob: -14.258687019348145

Token 189: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.14116062223911285
    2. ',input' → logprob: -2.266160726547241
    3. ',' → logprob: -3.641160726547241
    4. ' (' → logprob: -6.641160488128662
    5. 'input' → logprob: -8.64116096496582
    6. ' ,' → logprob: -9.26616096496582
    7. '(' → logprob: -9.39116096496582
    8. ' input' → logprob: -10.39116096496582
    9. '=input' → logprob: -11.64116096496582
    10. '[input' → logprob: -12.14116096496582

Token 190: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -9.088346359931165e-07
    2. '[
' → logprob: -14.500000953674316
    3. '[' → logprob: -15.625000953674316
    4. ' [' → logprob: -15.875000953674316
    5. '   ' → logprob: -16.0
    6. '[position' → logprob: -18.125
    7. ')[' → logprob: -18.5
    8. '(pos' → logprob: -18.625
    9. '```' → logprob: -18.75
    10. 'pos' → logprob: -19.0

Token 191: ':' (ID: 25)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.5631399750709534
    2. ':' → logprob: -1.0631399154663086
    3. 'pos' → logprob: -2.5631399154663086
    4. '+' → logprob: -5.313139915466309
    5. '(pos' → logprob: -6.438139915466309
    6. ',pos' → logprob: -7.188139915466309
    7. ' pos' → logprob: -8.313139915466309
    8. '	pos' → logprob: -9.063139915466309
    9. '[' → logprob: -9.188139915466309
    10. ' :' → logprob: -9.313139915466309

Token 192: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.7697225252486533e-06
    2. ' pos' → logprob: -12.500003814697266
    3. '(pos' → logprob: -17.875003814697266
    4. '	pos' → logprob: -19.250003814697266
    5. '   ' → logprob: -19.625003814697266
    6. '[pos' → logprob: -19.875003814697266
    7. 'position' → logprob: -21.250003814697266
    8. ',pos' → logprob: -21.625003814697266
    9. '           ' → logprob: -22.500003814697266
    10. '.pos' → logprob: -22.625003814697266

Token 193: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1142614558339119
    2. 'pos' → logprob: -2.2392613887786865
    3. 'length' → logprob: -7.364261627197266
    4. ' +' → logprob: -7.489261627197266
    5. '[pos' → logprob: -9.489261627197266
    6. ':' → logprob: -10.114261627197266
    7. '(pos' → logprob: -10.239261627197266
    8. ' pos' → logprob: -10.489261627197266
    9. ',pos' → logprob: -10.864261627197266
    10. ':length' → logprob: -11.114261627197266

Token 194: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -8.180258191714529e-06
    2. ' length' → logprob: -11.750008583068848
    3. '(length' → logprob: -15.375008583068848
    4. '[length' → logprob: -19.00000762939453
    5. ',length' → logprob: -20.00000762939453
    6. '	length' → logprob: -21.50000762939453
    7. 'leng' → logprob: -22.00000762939453
    8. ' ' → logprob: -22.25000762939453
    9. 'ength' → logprob: -22.87500762939453
    10. 'len' → logprob: -23.50000762939453

Token 195: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.01586308889091015
    2. ']))
' → logprob: -4.640862941741943
    3. '))' → logprob: -5.140862941741943
    4. '))
' → logprob: -9.140863418579102
    5. ']' → logprob: -9.515863418579102
    6. ')))' → logprob: -10.890863418579102
    7. '])' → logprob: -11.390863418579102
    8. '']))' → logprob: -11.890863418579102
    9. '   ' → logprob: -12.390863418579102
    10. ']))

' → logprob: -12.390863418579102

Token 196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2191150039434433
    2. 'pos' → logprob: -1.8441150188446045
    3. '<|end|>' → logprob: -4.219114780426025
    4. '[pos' → logprob: -4.844114780426025
    5. ')' → logprob: -4.969114780426025
    6. ' pos' → logprob: -5.844114780426025
    7. '   ' → logprob: -6.344114780426025
    8. '	pos' → logprob: -6.844114780426025
    9. ',pos' → logprob: -6.844114780426025
    10. '
' → logprob: -7.344114780426025

Token 197: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.04870125651359558
    2. ' pos' → logprob: -3.048701286315918
    3. '
' → logprob: -9.923701286315918
    4. '	pos' → logprob: -10.048701286315918
    5. '<|end|>' → logprob: -11.673701286315918
    6. '[pos' → logprob: -12.673701286315918
    7. '_pos' → logprob: -12.673701286315918
    8. '   ' → logprob: -13.048701286315918
    9. ',pos' → logprob: -13.673701286315918
    10. '       ' → logprob: -13.798701286315918

Token 198: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001086043776012957
    2. '+' → logprob: -7.001086235046387
    3. ' +=' → logprob: -8.751086235046387
    4. ']+=' → logprob: -11.626086235046387
    5. '+='' → logprob: -13.001086235046387
    6. '=' → logprob: -13.251086235046387
    7. '+="' → logprob: -13.626086235046387
    8. '+=(' → logprob: -14.376086235046387
    9. '```' → logprob: -14.626086235046387
    10. '<|end|>' → logprob: -14.876086235046387

Token 199: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.676292231422849e-05
    2. ' length' → logprob: -11.000017166137695
    3. '(length' → logprob: -17.000017166137695
    4. 'len' → logprob: -18.500017166137695
    5. 'n' → logprob: -20.125017166137695
    6. '	length' → logprob: -20.375017166137695
    7. 'leng' → logprob: -20.500017166137695
    8. ' ' → logprob: -20.625017166137695
    9. '[length' → logprob: -20.750017166137695
    10. '+' → logprob: -21.125017166137695

Token 200: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005019086878746748
    2. '<|end|>' → logprob: -6.505019187927246
    3. '
' → logprob: -6.755019187927246
    4. '        
' → logprob: -7.005019187927246
    5. '   ' → logprob: -7.005019187927246
    6. 'a' → logprob: -8.505019187927246
    7. ',' → logprob: -8.630019187927246
    8. '```' → logprob: -10.255019187927246
    9. '<|end|>' → logprob: -10.630019187927246
    10. 'def' → logprob: -10.755019187927246

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3830433487892151
    2. '   ' → logprob: -1.2580432891845703
    3. 'a' → logprob: -3.8830432891845703
    4. '```' → logprob: -5.13304328918457
    5. '<|end|>' → logprob: -5.38304328918457
    6. '        
' → logprob: -7.13304328918457
    7. '
' → logprob: -7.50804328918457
    8. 'def' → logprob: -7.88304328918457
    9. ' a' → logprob: -9.00804328918457
    10. 'result' → logprob: -9.25804328918457

Token 202: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.038609620183706284
    2. ' a' → logprob: -3.788609504699707
    3. 'result' → logprob: -5.163609504699707
    4. 'res' → logprob: -5.413609504699707
    5. ' res' → logprob: -5.788609504699707
    6. 'ans' → logprob: -7.038609504699707
    7. ' result' → logprob: -7.288609504699707
    8. ' ans' → logprob: -8.413609504699707
    9. '   ' → logprob: -8.788609504699707
    10. 'r' → logprob: -11.038609504699707

Token 203: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9500630497932434
    2. ' =' → logprob: -0.9500630497932434
    3. '=' → logprob: -1.9500629901885986
    4. '0' → logprob: -2.5750629901885986
    5. '<|end|>' → logprob: -5.450063228607178
    6. '[' → logprob: -6.325063228607178
    7. ',a' → logprob: -7.575063228607178
    8. '<|end|>' → logprob: -8.20006275177002
    9. ')' → logprob: -8.57506275177002
    10. 'a' → logprob: -8.70006275177002

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.816480815410614
    2. '=' → logprob: -0.816480815410614
    3. ' =' → logprob: -2.191480875015259
    4. ',a' → logprob: -6.44148063659668
    5. '.append' → logprob: -6.69148063659668
    6. '[' → logprob: -7.06648063659668
    7. 'a' → logprob: -8.44148063659668
    8. ')' → logprob: -9.94148063659668
    9. ' ,' → logprob: -10.19148063659668
    10. '=a' → logprob: -10.19148063659668

Token 205: ' odds' (ID: 28374)
  Prédit: 'od'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.08508989214897156
    2. 'a' → logprob: -2.960089921951294
    3. ' odds' → logprob: -3.585089921951294
    4. ' a' → logprob: -6.835089683532715
    5. 'b' → logprob: -8.210089683532715
    6. 'ods' → logprob: -8.835089683532715
    7. 'rest' → logprob: -8.960089683532715
    8. 'odd' → logprob: -9.085089683532715
    9. 'ans' → logprob: -9.460089683532715
    10. 'arr' → logprob: -9.960089683532715

Token 206: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06994076818227768
    2. ' =' → logprob: -2.6949408054351807
    3. ',' → logprob: -13.319940567016602
    4. ')' → logprob: -13.444940567016602
    5. '<|end|>' → logprob: -14.069940567016602
    6. ')=' → logprob: -15.194940567016602
    7. '[' → logprob: -16.0699405670166
    8. '=

' → logprob: -16.1949405670166
    9. ']' → logprob: -16.9449405670166
    10. '(' → logprob: -17.1949405670166

Token 207: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.07889044284820557
    2. ' solve' → logprob: -2.578890323638916
    3. '   ' → logprob: -14.828890800476074
    4. ' ' → logprob: -15.578890800476074
    5. '.solve' → logprob: -16.578889846801758
    6. ' ' → logprob: -17.453889846801758
    7. '
' → logprob: -18.078889846801758
    8. 'sol' → logprob: -18.328889846801758
    9. '  ' → logprob: -18.578889846801758
    10. '
' → logprob: -18.703889846801758

Token 208: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.4060561776859686e-05
    2. ' (' → logprob: -10.625043869018555
    3. '(' → logprob: -10.875043869018555
    4. '(len' → logprob: -15.125043869018555
    5. '<|end|>' → logprob: -15.875043869018555
    6. '```' → logprob: -16.000043869018555
    7. '(
' → logprob: -16.375043869018555
    8. '(N' → logprob: -17.250043869018555
    9. ' ' → logprob: -17.750043869018555
    10. '(a' → logprob: -17.750043869018555

Token 209: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06257914751768112
    2. ',b' → logprob: -2.8125791549682617
    3. ',a' → logprob: -8.062579154968262
    4. ')' → logprob: -8.937579154968262
    5. ' ,' → logprob: -9.062579154968262
    6. ',
' → logprob: -11.187579154968262
    7. '(b' → logprob: -11.812579154968262
    8. ',n' → logprob: -12.312579154968262
    9. ',[' → logprob: -12.312579154968262
    10. 'b' → logprob: -12.562579154968262

Token 210: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003715662460308522
    2. '       ' → logprob: -8.625371932983398
    3. ')
' → logprob: -8.875371932983398
    4. '<|end|>' → logprob: -10.000371932983398
    5. '())' → logprob: -13.625371932983398
    6. '   ' → logprob: -13.750371932983398
    7. '()' → logprob: -14.125371932983398
    8. ' )' → logprob: -14.625371932983398
    9. ')#' → logprob: -14.750371932983398
    10. '<|end|>' → logprob: -15.000371932983398

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0049315509386360645
    2. '   ' → logprob: -6.129931449890137
    3. '<|end|>' → logprob: -6.254931449890137
    4. '```' → logprob: -7.504931449890137
    5. 'print' → logprob: -8.754931449890137
    6. ')' → logprob: -9.879931449890137
    7. '[' → logprob: -10.754931449890137
    8. '
' → logprob: -11.379931449890137
    9. 'a' → logprob: -12.254931449890137
    10. '        
' → logprob: -12.504931449890137

Token 212: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.08793024718761444
    2. '       ' → logprob: -3.087930202484131
    3. ' print' → logprob: -3.462930202484131
    4. ' for' → logprob: -5.712930202484131
    5. 'for' → logprob: -5.712930202484131
    6. 'a' → logprob: -7.962930202484131
    7. ' a' → logprob: -9.587930679321289
    8. '   ' → logprob: -9.712930679321289
    9. 'result' → logprob: -10.212930679321289
    10. '
' → logprob: -10.212930679321289

Token 213: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.01575043983757496
    2. '(*' → logprob: -4.265750408172607
    3. '(' → logprob: -7.015750408172607
    4. '('' → logprob: -7.390750408172607
    5. '("' → logprob: -10.765750885009766
    6. '(f' → logprob: -10.890750885009766
    7. 'a' → logprob: -11.015750885009766
    8. '(*(' → logprob: -12.265750885009766
    9. '((' → logprob: -12.515750885009766
    10. '([' → logprob: -13.015750885009766

Token 214: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018077615823131055
    2. '[' → logprob: -8.625181198120117
    3. '_' → logprob: -14.750181198120117
    4. ' ' → logprob: -15.625181198120117
    5. 'a' → logprob: -15.875181198120117
    6. '```' → logprob: -16.000181198120117
    7. '
' → logprob: -16.750181198120117
    8. '1' → logprob: -17.312681198120117
    9. ' [' → logprob: -17.500181198120117
    10. ')' → logprob: -17.562681198120117

Token 215: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09577681869268417
    2. ')' → logprob: -2.8457767963409424
    3. ',end' → logprob: -3.4707767963409424
    4. ',)' → logprob: -6.7207770347595215
    5. ' ,' → logprob: -7.5957770347595215
    6. '+' → logprob: -8.845776557922363
    7. ',a' → logprob: -8.970776557922363
    8. ' )' → logprob: -10.095776557922363
    9. '),' → logprob: -10.845776557922363
    10. '   ' → logprob: -10.845776557922363

Token 216: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17036588490009308
    2. ' for' → logprob: -2.045365810394287
    3. '<|end|>' → logprob: -4.670365810394287
    4. 'print' (adapté à ' print') → logprob: -4.920365810394287
    5. '   ' → logprob: -5.045365810394287
    6. '       ' → logprob: -5.545365810394287
    7. '[' → logprob: -9.545366287231445
    8. '```' → logprob: -10.045366287231445
    9. '<|end|>' → logprob: -10.420366287231445
    10. ' print' → logprob: -11.045366287231445

Token 218: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.6317144632339478
    2. '(' → logprob: -1.3817144632339478
    3. '('' → logprob: -1.6317144632339478
    4. '("' → logprob: -3.881714344024658
    5. '(len' → logprob: -7.506714344024658
    6. '()' → logprob: -8.006714820861816
    7. '(*(' → logprob: -10.006714820861816
    8. '(a' → logprob: -12.006714820861816
    9. '((' → logprob: -12.131714820861816
    10. ' (' → logprob: -12.506714820861816

Token 219: 'od' (ID: 368)
  Prédit: 'od'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.0003065030323341489
    2. ' odds' → logprob: -8.125306129455566
    3. '[' → logprob: -12.250306129455566
    4. 'odd' → logprob: -12.750306129455566
    5. 'a' → logprob: -13.500306129455566
    6. '(' → logprob: -14.125306129455566
    7. 'ods' → logprob: -14.625306129455566
    8. 'Odds' → logprob: -15.750306129455566
    9. '   ' → logprob: -17.125307083129883
    10. ' ' → logprob: -17.875307083129883

Token 220: 'ds' (ID: 8559)
  Prédit: 'ds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -2.2961512513575144e-05
    2. 'd' → logprob: -11.625022888183594
    3. 's' → logprob: -11.625022888183594
    4. '[' → logprob: -13.125022888183594
    5. 'dds' → logprob: -14.125022888183594
    6. '```' → logprob: -14.250022888183594
    7. '(ds' → logprob: -14.625022888183594
    8. '(' → logprob: -15.125022888183594
    9. 'a' → logprob: -15.250022888183594
    10. '{' → logprob: -15.750022888183594

Token 221: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7848862373502925e-05
    2. ')
' → logprob: -11.125027656555176
    3. '<|end|>' → logprob: -11.750027656555176
    4. ' )' → logprob: -13.375027656555176
    5. '   ' → logprob: -13.625027656555176
    6. ')}' → logprob: -14.875027656555176
    7. '))' → logprob: -14.875027656555176
    8. ',' → logprob: -15.125027656555176
    9. '())' → logprob: -15.250027656555176
    10. '')' → logprob: -15.375027656555176

Token 222: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8689178824424744
    2. 'if' → logprob: -1.1189179420471191
    3. '<|end|>' → logprob: -2.493917942047119
    4. '[' → logprob: -2.618917942047119
    5. '_' → logprob: -3.243917942047119
    6. '#' → logprob: -3.993917942047119
    7. '```' → logprob: -4.493917942047119
    8. ')' → logprob: -4.868917942047119
    9. ' if' → logprob: -5.368917942047119
    10. '(' → logprob: -5.868917942047119

Token 223: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4741145074367523
    2. ' __' → logprob: -0.9741145372390747
    3. 'name' → logprob: -10.849114418029785
    4. '_' → logprob: -12.099114418029785
    5. '_name' → logprob: -12.849114418029785
    6. ' ' → logprob: -12.849114418029785
    7. '___' → logprob: -13.099114418029785
    8. ' ' → logprob: -13.974114418029785
    9. '`' → logprob: -14.349114418029785
    10. '____' → logprob: -14.599114418029785

Token 224: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0010893779108300805
    2. ' __' → logprob: -7.751089572906494
    3. '==' → logprob: -8.751089096069336
    4. ' ==' → logprob: -8.876089096069336
    5. '.__' → logprob: -8.876089096069336
    6. '__.__' → logprob: -9.251089096069336
    7. 'name' → logprob: -10.001089096069336
    8. '__.' → logprob: -10.626089096069336
    9. '[' → logprob: -11.501089096069336
    10. '_' → logprob: -12.001089096069336

Token 225: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00039051592466421425
    2. '__.__' → logprob: -7.875390529632568
    3. '__.' → logprob: -12.25039005279541
    4. '__["' → logprob: -13.12539005279541
    5. '==' → logprob: -13.50039005279541
    6. '__('' → logprob: -14.62539005279541
    7. '__
' → logprob: -14.75039005279541
    8. '____' → logprob: -14.87539005279541
    9. '___' → logprob: -15.00039005279541
    10. '__
' → logprob: -15.62539005279541

Token 226: '=="' (ID: 24027)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.21538163721561432
    2. '==' → logprob: -1.7153816223144531
    3. ' ==' → logprob: -4.590381622314453
    4. '=="' → logprob: -5.965381622314453
    5. '__.__' → logprob: -7.465381622314453
    6. '=='' → logprob: -7.715381622314453
    7. '.__' → logprob: -10.215381622314453
    8. '__.' → logprob: -10.965381622314453
    9. '==
' → logprob: -10.965381622314453
    10. '.' → logprob: -11.715381622314453

Token 227: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.126521035796031e-05
    2. '"' → logprob: -10.000091552734375
    3. ''' → logprob: -10.000091552734375
    4. 'main' → logprob: -15.375091552734375
    5. ' __' → logprob: -16.500091552734375
    6. '___' → logprob: -16.875091552734375
    7. ' "__' → logprob: -18.000091552734375
    8. 'python' → logprob: -18.875091552734375
    9. '_main' → logprob: -19.250091552734375
    10. '____' → logprob: -19.625091552734375

Token 228: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -9.65101717156358e-05
    2. 'name' → logprob: -9.250096321105957
    3. 'built' → logprob: -16.000097274780273
    4. '_main' → logprob: -16.625097274780273
    5. 'm' → logprob: -17.375097274780273
    6. '__' → logprob: -17.500097274780273
    7. ' main' → logprob: -18.250097274780273
    8. 'builtin' → logprob: -18.750097274780273
    9. 'file' → logprob: -19.000097274780273
    10. 'init' → logprob: -19.625097274780273

Token 229: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.49714240431785583
    2. '__' → logprob: -0.9971424341201782
    3. ':' → logprob: -4.122142314910889
    4. '__:' → logprob: -5.747142314910889
    5. '.' → logprob: -6.747142314910889
    6. '__':
' → logprob: -6.747142314910889
    7. ':
' → logprob: -7.372142314910889
    8. '_' → logprob: -8.747142791748047
    9. '__["' → logprob: -9.497142791748047
    10. '.__' → logprob: -9.997142791748047

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3571375012397766
    2. 'main' → logprob: -1.4821374416351318
    3. ' main' → logprob: -2.982137441635132
    4. 'solve' → logprob: -4.357137680053711
    5. ' solve' → logprob: -4.982137680053711
    6. '	main' → logprob: -5.982137680053711
    7. '_main' → logprob: -8.857137680053711
    8. '__' → logprob: -10.232137680053711
    9. '```' → logprob: -10.232137680053711
    10. ' ' → logprob: -10.857137680053711

Token 231: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.3902033970225602e-05
    2. ' main' → logprob: -11.250014305114746
    3. '   ' → logprob: -14.250014305114746
    4. '	main' → logprob: -15.875014305114746
    5. 'import' → logprob: -17.00001335144043
    6. 'solve' → logprob: -22.00001335144043
    7. '(main' → logprob: -22.50001335144043
    8. '.main' → logprob: -23.00001335144043
    9. '```' → logprob: -23.00001335144043
    10. ' ' → logprob: -23.00001335144043

Token 232: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 230
Tokens correctement prédits (1ère position, stricte): 93
Tokens correctement prédits (1ère position, avec adaptation): 102
Tokens correctement prédits (top 10): 190
Précision stricte (1ère position): 40.43%
Précision adaptée (1ère position): 44.35%
Précision (top 10): 82.61%
================================================================================
