================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:06:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    for _ in range(n):
        pm, pe, pj = map(int, input().split())
        if pm == 100 or pe == 100 or pj == 100:
            print("A")
            continue
        avg_me = (pm + pe) / 2
        avg_all = (pm + pe + pj) / 3
        if avg_me >= 90:
            print("A")
        elif avg_all >= 80:
            print("A")
        elif avg_all >= 70:
            print("B")
        elif avg_all >= 50 and (pm >= 80 or pe >= 80):
            print("B")
        else:
            print("C")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26106780767440796
    2. '    ' → logprob: -1.7610678672790527
    3. ' ' → logprob: -3.7610678672790527
    4. '```' → logprob: -3.8860678672790527
    5. '    
' → logprob: -5.636067867279053
    6. '       ' → logprob: -6.386067867279053
    7. '  ' → logprob: -6.386067867279053
    8. ' pass' → logprob: -6.761067867279053
    9. 'pass' → logprob: -6.886067867279053
    10. ' 
' → logprob: -7.386067867279053

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9394372701644897
    2. 'u' → logprob: -1.0644372701644897
    3. '=' → logprob: -2.4394373893737793
    4. 'o' → logprob: -2.9394373893737793
    5. '   ' → logprob: -3.3144373893737793
    6. 'e' → logprob: -3.9394373893737793
    7. '_' → logprob: -4.439437389373779
    8. '+' → logprob: -4.689437389373779
    9. ' =' → logprob: -4.939437389373779
    10. '>' → logprob: -5.314437389373779

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3691587746143341
    2. ' input' → logprob: -1.2441587448120117
    3. 'input' → logprob: -4.494158744812012
    4. 'int' → logprob: -5.244158744812012
    5. ' n' → logprob: -5.619158744812012
    6. ' ' → logprob: -8.494158744812012
    7. 'n' → logprob: -9.744158744812012
    8. ' randint' → logprob: -10.619158744812012
    9. ' a' → logprob: -10.744158744812012
    10. ' eval' → logprob: -11.119158744812012

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012015394167974591
    2. '(input' → logprob: -6.751201629638672
    3. '(n' → logprob: -10.876201629638672
    4. '()' → logprob: -12.501201629638672
    5. '(
' → logprob: -13.251201629638672
    6. '('' → logprob: -13.501201629638672
    7. '(code' → logprob: -14.001201629638672
    8. '(user' → logprob: -14.251201629638672
    9. ' (' → logprob: -14.501201629638672
    10. '(token' → logprob: -15.001201629638672

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12421323359012604
    2. ')' → logprob: -2.499213218688965
    3. '()' → logprob: -3.624213218688965
    4. '())' → logprob: -5.124213218688965
    5. '))' → logprob: -6.999213218688965
    6. '(
' → logprob: -8.249213218688965
    7. '()))' → logprob: -8.749213218688965
    8. '('' → logprob: -8.749213218688965
    9. ' ' → logprob: -9.249213218688965
    10. '```' → logprob: -9.749213218688965

Token 9: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 10: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6319265365600586
    2. ' if' → logprob: -1.2569265365600586
    3. ' ' → logprob: -3.0069265365600586
    4. ')' → logprob: -3.1319265365600586
    5. '    ' → logprob: -3.1319265365600586
    6. 'if' (adapté à ' if') → logprob: -4.381926536560059
    7. '  ' → logprob: -4.881926536560059
    8. '<|end|>' → logprob: -4.881926536560059
    9. '```' → logprob: -5.256926536560059
    10. ' )' → logprob: -6.131926536560059

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.020662404596805573
    2. ' ' → logprob: -4.020662307739258
    3. ' not' → logprob: -6.520662307739258
    4. 'n' → logprob: -6.895662307739258
    5. ' ' → logprob: -11.270662307739258
    6. 'not' → logprob: -12.145662307739258
    7. '  ' → logprob: -12.395662307739258
    8. '	n' → logprob: -14.770662307739258
    9. '(n' → logprob: -15.145662307739258
    10. '<|end|>' → logprob: -15.395662307739258

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6851745247840881
    2. ' >' → logprob: -1.0601744651794434
    3. ' <=' → logprob: -2.5601744651794434
    4. ' <' → logprob: -3.5601744651794434
    5. ' ' → logprob: -4.310174465179443
    6. '==' → logprob: -4.310174465179443
    7. '>' → logprob: -4.435174465179443
    8. ' >=' → logprob: -6.435174465179443
    9. '  ' → logprob: -7.560174465179443
    10. ')' → logprob: -7.560174465179443

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07889793813228607
    2. '0' → logprob: -2.5788979530334473
    3. '1' → logprob: -13.453897476196289
    4. ' -' → logprob: -13.703897476196289
    5. ' ' → logprob: -14.141397476196289
    6. '32' → logprob: -14.516397476196289
    7. ' EOF' → logprob: -14.641397476196289
    8. '  ' → logprob: -15.078897476196289
    9. '=' → logprob: -15.141397476196289
    10. '10' → logprob: -15.328897476196289

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011993973748758435
    2. ' ' → logprob: -6.751199245452881
    3. '-' → logprob: -10.751199722290039
    4. '1' → logprob: -13.001199722290039
    5. '42' → logprob: -13.126199722290039
    6. ' -' → logprob: -13.501199722290039
    7. '   ' → logprob: -14.751199722290039
    8. '7' → logprob: -15.001199722290039
    9. '4' → logprob: -15.376199722290039
    10. '```' → logprob: -15.626199722290039

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010902655776590109
    2. ':
' → logprob: -9.87510871887207
    3. ' :' → logprob: -10.50010871887207
    4. '   ' → logprob: -11.25010871887207
    5. '):' → logprob: -12.12510871887207
    6. '       ' → logprob: -12.62510871887207
    7. ':\' → logprob: -13.25010871887207
    8. ':return' → logprob: -13.25010871887207
    9. '    ' → logprob: -13.62510871887207
    10. '():' → logprob: -14.00010871887207

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006626377580687404
    2. ' break' → logprob: -8.125662803649902
    3. '   ' → logprob: -8.750662803649902
    4. '\n' → logprob: -9.500662803649902
    5. ':' → logprob: -10.250662803649902
    6. '    ' → logprob: -10.875662803649902
    7. '\' → logprob: -11.125662803649902
    8. '	break' → logprob: -11.125662803649902
    9. '      ' → logprob: -11.750662803649902
    10. '        ' → logprob: -12.125662803649902

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.006346326321363449
    2. '       ' → logprob: -5.631346225738525
    3. 'break' (adapté à ' break') → logprob: -6.506346225738525
    4. '\n' → logprob: -7.631346225738525
    5. '   ' → logprob: -7.756346225738525
    6. '    ' → logprob: -9.006346702575684
    7. '	break' → logprob: -9.131346702575684
    8. '_break' → logprob: -10.881346702575684
    9. '```' → logprob: -11.131346702575684
    10. ' \' → logprob: -11.381346702575684

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4790402054786682
    2. '\n' → logprob: -1.6040401458740234
    3. ':' → logprob: -2.2290401458740234
    4. '    
' → logprob: -4.229040145874023
    5. '\' → logprob: -4.479040145874023
    6. '<|end|>' → logprob: -4.604040145874023
    7. '#' → logprob: -5.229040145874023
    8. ' ' → logprob: -5.479040145874023
    9. '\r' → logprob: -5.479040145874023
    10. ' 
' → logprob: -5.479040145874023

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7498542666435242
    2. '\n' → logprob: -1.624854326248169
    3. '<|end|>' → logprob: -1.624854326248169
    4. '    
' → logprob: -3.249854326248169
    5. '\' → logprob: -3.874854326248169
    6. '```' → logprob: -3.999854326248169
    7. '
' → logprob: -4.12485408782959
    8. '#' → logprob: -4.24985408782959
    9. ':' → logprob: -5.12485408782959
    10. ')' → logprob: -5.87485408782959

Token 20: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3405855596065521
    2. ' ' → logprob: -2.590585470199585
    3. '<|end|>' → logprob: -2.590585470199585
    4. '\n' → logprob: -3.590585470199585
    5. ')' → logprob: -3.840585470199585
    6. 'n' → logprob: -4.215585708618164
    7. '    ' → logprob: -4.340585708618164
    8. '\' → logprob: -4.590585708618164
    9. 'print' → logprob: -4.715585708618164
    10. ':' → logprob: -5.090585708618164

Token 21: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3558667004108429
    2. ' ' → logprob: -1.2308666706085205
    3. ' n' → logprob: -5.3558669090271
    4. ' range' → logprob: -6.1058669090271
    5. 'i' → logprob: -8.980866432189941
    6. '  ' → logprob: -9.230866432189941
    7. ' space' → logprob: -9.980866432189941
    8. 'range' → logprob: -10.105866432189941
    9. 'n' → logprob: -10.230866432189941
    10. ' a' → logprob: -10.480866432189941

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005657267291098833
    2. ' ' → logprob: -5.880657196044922
    3. 'in' → logprob: -5.880657196044922
    4. ' i' → logprob: -10.505657196044922
    5. '  ' → logprob: -11.755657196044922
    6. 'n' → logprob: -12.505657196044922
    7. 'space' → logprob: -12.755657196044922
    8. 'range' → logprob: -12.755657196044922
    9. ' n' → logprob: -13.130657196044922
    10. '_' → logprob: -13.630657196044922

Token 23: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759498476982117
    2. ' range' → logprob: -0.8259498476982117
    3. '	range' → logprob: -12.575949668884277
    4. ' ' → logprob: -12.700949668884277
    5. 'rang' → logprob: -13.450949668884277
    6. '(range' → logprob: -14.825949668884277
    7. 'r' → logprob: -14.825949668884277
    8. 'n' → logprob: -14.825949668884277
    9. 'ran' → logprob: -15.450949668884277
    10. '_range' → logprob: -15.825949668884277

Token 24: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.15591411292552948
    2. ' (' → logprob: -2.530914068222046
    3. '(' → logprob: -2.780914068222046
    4. ' n' → logprob: -5.905914306640625
    5. 'n' → logprob: -10.155914306640625
    6. ' ' → logprob: -10.405914306640625
    7. '()' → logprob: -13.030914306640625
    8. '(space' → logprob: -14.030914306640625
    9. '<|end|>' → logprob: -14.155914306640625
    10. '(s' → logprob: -14.655914306640625

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006369070615619421
    2. ')' → logprob: -5.131369113922119
    3. ':' → logprob: -8.381368637084961
    4. '+' → logprob: -9.256368637084961
    5. ' ):' → logprob: -10.006368637084961
    6. '   ' → logprob: -10.381368637084961
    7. '):
' → logprob: -11.256368637084961
    8. '*' → logprob: -12.256368637084961
    9. ',' → logprob: -12.506368637084961
    10. '-' → logprob: -12.756368637084961

Token 26: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7935202121734619
    2. '    ' → logprob: -1.418520212173462
    3. '       ' → logprob: -1.918520212173462
    4. '   ' → logprob: -2.418520212173462
    5. '<|end|>' → logprob: -3.168520212173462
    6. ' 
' → logprob: -4.168519973754883
    7. '    
' → logprob: -5.793519973754883
    8. '\n' → logprob: -6.293519973754883
    9. 'print' → logprob: -6.418519973754883
    10. '        ' → logprob: -7.043519973754883

Token 27: ' pm' (ID: 10074)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6780846118927002
    2. 'print' → logprob: -1.8030846118927002
    3. '    ' → logprob: -2.0530846118927
    4. '   ' → logprob: -2.6780846118927
    5. ' input' → logprob: -3.6780846118927
    6. ' s' → logprob: -3.9280846118927
    7. ' ' → logprob: -4.053084373474121
    8. 's' → logprob: -4.303084373474121
    9. ' pass' → logprob: -4.428084373474121
    10. ' x' → logprob: -4.928084373474121

Token 28: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4928476810455322
    2. '.' → logprob: -1.7428476810455322
    3. 's' → logprob: -1.7428476810455322
    4. ' =' → logprob: -1.8678476810455322
    5. '=' → logprob: -2.7428476810455322
    6. 'p' → logprob: -2.9928476810455322
    7. ' ' → logprob: -3.4928476810455322
    8. 'ap' → logprob: -3.9928476810455322
    9. '   ' → logprob: -4.367847442626953
    10. 'm' → logprob: -4.617847442626953

Token 29: ' pe' (ID: 1045)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.7669663429260254
    2. 'm' → logprob: -2.1419663429260254
    3. ' ' → logprob: -2.2669663429260254
    4. ''' → logprob: -2.8919663429260254
    5. 'input' → logprob: -3.1419663429260254
    6. 'cm' → logprob: -3.3919663429260254
    7. 'qm' → logprob: -3.3919663429260254
    8. 'em' → logprob: -3.5169663429260254
    9. 'end' → logprob: -3.7669663429260254
    10. 'pl' → logprob: -4.016966342926025

Token 30: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5659263134002686
    2. '=' → logprob: -1.0659263134002686
    3. ',' → logprob: -2.4409263134002686
    4. ' ,' → logprob: -7.690926551818848
    5. ')' → logprob: -8.940926551818848
    6. '=input' → logprob: -10.690926551818848
    7. 'm' → logprob: -10.815926551818848
    8. 's' → logprob: -11.315926551818848
    9. ',input' → logprob: -12.065926551818848
    10. ' ' → logprob: -12.440926551818848

Token 31: ' pj' (ID: 110041)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -1.7219935655593872
    2. 'p' → logprob: -2.3469934463500977
    3. 'pp' → logprob: -2.3469934463500977
    4. ' p' → logprob: -3.0969934463500977
    5. 'pc' → logprob: -3.4719934463500977
    6. 'pi' → logprob: -3.5969934463500977
    7. 'm' → logprob: -3.7219934463500977
    8. 'pd' → logprob: -3.7844934463500977
    9. ' pc' → logprob: -3.7844934463500977
    10. 'pe' → logprob: -3.8469934463500977

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01719623990356922
    2. '=' → logprob: -4.517196178436279
    3. ',' → logprob: -5.142196178436279
    4. ' ,' → logprob: -8.767196655273438
    5. ' ' → logprob: -9.642196655273438
    6. ')' → logprob: -10.642196655273438
    7. '    ' → logprob: -10.767196655273438
    8. '        ' → logprob: -12.392196655273438
    9. '   ' → logprob: -12.767196655273438
    10. '       ' → logprob: -13.267196655273438

Token 33: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.06510944664478302
    2. 'map' → logprob: -3.1901094913482666
    3. ' input' → logprob: -3.9401094913482666
    4. 'input' → logprob: -6.1901092529296875
    5. ' list' → logprob: -8.565109252929688
    6. '   ' → logprob: -9.940109252929688
    7. ' [' → logprob: -10.065109252929688
    8. ' ' → logprob: -10.440109252929688
    9. 'list' → logprob: -10.815109252929688
    10. '[' → logprob: -11.190109252929688

Token 34: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0077958907932043076
    2. '(' → logprob: -5.257795810699463
    3. '(str' → logprob: -6.257795810699463
    4. '(input' → logprob: -7.882795810699463
    5. 'int' → logprob: -8.757796287536621
    6. '(lambda' → logprob: -9.632796287536621
    7. '<int' → logprob: -11.632796287536621
    8. '```' → logprob: -11.882796287536621
    9. '(list' → logprob: -12.132796287536621
    10. '(float' → logprob: -12.632796287536621

Token 35: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.6218766570091248
    2. '(input' → logprob: -0.9968766570091248
    3. ',' → logprob: -2.3718767166137695
    4. '(' → logprob: -7.4968767166137695
    5. 'input' → logprob: -9.24687671661377
    6. ' ,' → logprob: -10.24687671661377
    7. ')' → logprob: -10.99687671661377
    8. ' input' → logprob: -11.87187671661377
    9. ' (' → logprob: -12.12187671661377
    10. '=input' → logprob: -12.87187671661377

Token 36: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3484625816345215
    2. 'input' → logprob: -1.2234625816345215
    3. ')' → logprob: -11.72346305847168
    4. ' ' → logprob: -12.72346305847168
    5. ' )' → logprob: -13.59846305847168
    6. '=input' → logprob: -13.72346305847168
    7. '	input' → logprob: -13.84846305847168
    8. '(input' → logprob: -13.84846305847168
    9. ',input' → logprob: -14.09846305847168
    10. 'list' → logprob: -14.59846305847168

Token 37: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0010398367885500193
    2. '()' → logprob: -6.876039981842041
    3. '())' → logprob: -12.251039505004883
    4. ')' → logprob: -14.126039505004883
    5. '()
' → logprob: -14.126039505004883
    6. ' ().' → logprob: -14.626039505004883
    7. '(' → logprob: -15.251039505004883
    8. '()

' → logprob: -17.626039505004883
    9. '()<' → logprob: -17.876039505004883
    10. '()
' → logprob: -18.001039505004883

Token 38: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.194110756041482e-05
    2. 'strip' → logprob: -9.875061988830566
    3. 'rstrip' → logprob: -11.625061988830566
    4. ' split' → logprob: -13.750061988830566
    5. '(split' → logprob: -15.250061988830566
    6. 'spl' → logprob: -15.875061988830566
    7. ')' → logprob: -17.62506103515625
    8. 'sp' → logprob: -18.50006103515625
    9. '.split' → logprob: -18.50006103515625
    10. 'rs' → logprob: -18.75006103515625

Token 39: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.015471112914383411
    2. ')' → logprob: -4.6404709815979
    3. '()' → logprob: -5.5154709815979
    4. '()))' → logprob: -6.6404709815979
    5. '))' → logprob: -8.265471458435059
    6. '())
' → logprob: -9.515471458435059
    7. '(' → logprob: -11.390471458435059
    8. '('' → logprob: -11.765471458435059
    9. ' ())' → logprob: -12.390471458435059
    10. '()))
' → logprob: -13.265471458435059

Token 40: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8139489889144897
    2. ' ' → logprob: -1.5639489889144897
    3. '<|end|>' → logprob: -1.5639489889144897
    4. 'if' (adapté à ' if') → logprob: -2.6889491081237793
    5. '       ' → logprob: -3.4389491081237793
    6. '        ' → logprob: -3.6889491081237793
    7. ' 
' → logprob: -5.813949108123779
    8. '    ' → logprob: -6.938949108123779
    9. '<|end|>' → logprob: -6.938949108123779
    10. ' #' → logprob: -6.938949108123779

Token 42: ' pm' (ID: 10074)
  Prédit: ' pm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pm' → logprob: -0.0320722721517086
    2. '(pm' → logprob: -4.032072067260742
    3. ' pj' → logprob: -5.157072067260742
    4. ' (' → logprob: -5.157072067260742
    5. 'pm' → logprob: -6.532072067260742
    6. ' pe' → logprob: -7.782072067260742
    7. '(' → logprob: -8.157072067260742
    8. '(p' → logprob: -10.282072067260742
    9. '(pe' → logprob: -10.532072067260742
    10. ' p' → logprob: -10.782072067260742

Token 43: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07861720025539398
    2. '>' → logprob: -3.3286170959472656
    3. ' ==' → logprob: -4.203617095947266
    4. ' <' → logprob: -4.453617095947266
    5. ' >=' → logprob: -5.203617095947266
    6. ' +' → logprob: -6.078617095947266
    7. '==' → logprob: -6.203617095947266
    8. '+' → logprob: -6.828617095947266
    9. '<' → logprob: -7.203617095947266
    10. ' ' → logprob: -7.703617095947266

Token 44: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0495980978012085
    2. ' pe' → logprob: -1.2995980978012085
    3. '1' → logprob: -2.049598217010498
    4. ' pj' → logprob: -2.049598217010498
    5. '0' → logprob: -2.549598217010498
    6. 'pe' → logprob: -3.924598217010498
    7. 'pj' → logprob: -5.049598217010498
    8. '2' → logprob: -5.799598217010498
    9. '100' → logprob: -5.924598217010498
    10. '3' → logprob: -6.424598217010498

Token 45: '100' (ID: 1353)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5951557159423828
    2. '0' → logprob: -1.5951557159423828
    3. 'pe' → logprob: -1.8451557159423828
    4. 'pj' → logprob: -2.720155715942383
    5. '-' → logprob: -5.220155715942383
    6. '2' → logprob: -5.345155715942383
    7. '100' → logprob: -6.345155715942383
    8. '3' → logprob: -6.595155715942383
    9. '10' → logprob: -6.595155715942383
    10. 'pm' → logprob: -7.782655715942383

Token 46: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.33060911297798157
    2. ':' → logprob: -2.205609083175659
    3. ' or' → logprob: -2.330609083175659
    4. 'and' → logprob: -2.705609083175659
    5. ' ' → logprob: -5.705609321594238
    6. ' :' → logprob: -6.580609321594238
    7. '0' → logprob: -6.830609321594238
    8. 'or' → logprob: -7.705609321594238
    9. '<|end|>' → logprob: -8.455609321594238
    10. '%' → logprob: -8.830609321594238

Token 47: ' pe' (ID: 1045)
  Prédit: ' pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pe' → logprob: -0.08021377772092819
    2. 'pe' → logprob: -2.955213785171509
    3. ' pj' → logprob: -3.830213785171509
    4. 'pj' → logprob: -6.45521354675293
    5. ' pm' → logprob: -6.58021354675293
    6. ' ' → logprob: -9.20521354675293
    7. '(pe' → logprob: -9.45521354675293
    8. 'pm' → logprob: -9.70521354675293
    9. ' (' → logprob: -10.83021354675293
    10. ' ' → logprob: -11.01771354675293

Token 48: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5762388110160828
    2. ' ==' → logprob: -0.8262388110160828
    3. '100' → logprob: -9.326238632202148
    4. '=' → logprob: -9.951238632202148
    5. '>' → logprob: -10.451238632202148
    6. ' ' → logprob: -10.576238632202148
    7. ' or' → logprob: -10.701238632202148
    8. '+' → logprob: -11.076238632202148
    9. '<|end|>' → logprob: -11.076238632202148
    10. '>=' → logprob: -11.701238632202148

Token 49: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.25271278619766235
    2. ' ' → logprob: -1.5027127265930176
    3. '0' → logprob: -7.377712726593018
    4. '   ' → logprob: -10.127713203430176
    5. '  ' → logprob: -10.440213203430176
    6. '10' → logprob: -11.377713203430176
    7. '1' → logprob: -11.440213203430176
    8. ' pj' → logprob: -11.752713203430176
    9. '50' → logprob: -12.065213203430176
    10. '	' → logprob: -12.252713203430176

Token 50: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.011259074322879314
    2. ' ' → logprob: -4.636259078979492
    3. '0' → logprob: -6.636259078979492
    4. '1' → logprob: -9.886259078979492
    5. '50' → logprob: -10.261259078979492
    6. '  ' → logprob: -11.011259078979492
    7. '10' → logprob: -11.136259078979492
    8. '   ' → logprob: -11.636259078979492
    9. '99' → logprob: -11.886259078979492
    10. '-' → logprob: -12.011259078979492

Token 51: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.05871338024735451
    2. ' and' → logprob: -3.308713436126709
    3. ':' → logprob: -3.933713436126709
    4. 'and' → logprob: -7.808713436126709
    5. 'or' → logprob: -8.55871295928955
    6. '<|end|>' → logprob: -9.05871295928955
    7. '       ' → logprob: -9.93371295928955
    8. ' ' → logprob: -10.55871295928955
    9. ')' → logprob: -10.80871295928955
    10. ',' → logprob: -10.93371295928955

Token 52: ' pj' (ID: 110041)
  Prédit: ' pj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pj' → logprob: -0.4287654161453247
    2. 'pj' → logprob: -1.0537654161453247
    3. ' ' → logprob: -9.928765296936035
    4. '   ' → logprob: -12.303765296936035
    5. '100' → logprob: -13.178765296936035
    6. '    ' → logprob: -13.553765296936035
    7. '  ' → logprob: -14.053765296936035
    8. ' pm' → logprob: -14.053765296936035
    9. '```' → logprob: -14.178765296936035
    10. ' pq' → logprob: -14.678765296936035

Token 53: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2812286615371704
    2. '==' → logprob: -1.4062286615371704
    3. ' ' → logprob: -10.656229019165039
    4. '100' → logprob: -10.781229019165039
    5. '=' → logprob: -11.406229019165039
    6. '<|end|>' → logprob: -11.656229019165039
    7. '	' → logprob: -12.906229019165039
    8. ' ' → logprob: -13.406229019165039
    9. '```' → logprob: -13.656229019165039
    10. '>' → logprob: -13.906229019165039

Token 54: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.47415396571159363
    2. ' ' → logprob: -0.974153995513916
    3. '   ' → logprob: -10.911653518676758
    4. '0' → logprob: -11.036653518676758
    5. '  ' → logprob: -11.036653518676758
    6. '1' → logprob: -11.599153518676758
    7. '10' → logprob: -12.286653518676758
    8. '	' → logprob: -12.974153518676758
    9. '    ' → logprob: -13.536653518676758
    10. ' ' → logprob: -13.661653518676758

Token 55: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0012376103550195694
    2. ' ' → logprob: -6.876237392425537
    3. '1' → logprob: -9.501237869262695
    4. '0' → logprob: -9.626237869262695
    5. '10' → logprob: -9.876237869262695
    6. '  ' → logprob: -12.751237869262695
    7. '50' → logprob: -13.313737869262695
    8. '99' → logprob: -14.063737869262695
    9. '90' → logprob: -14.376237869262695
    10. '   ' → logprob: -14.438737869262695

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005691178957931697
    2. '       ' → logprob: -8.375569343566895
    3. ':
' → logprob: -8.625569343566895
    4. '           ' → logprob: -9.625569343566895
    5. ' or' → logprob: -10.375569343566895
    6. '):' → logprob: -10.750569343566895
    7. ' :' → logprob: -11.125569343566895
    8. ' and' → logprob: -11.375569343566895
    9. '   ' → logprob: -12.375569343566895
    10. ' continue' → logprob: -12.625569343566895

Token 57: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03516719490289688
    2. '       ' → logprob: -3.9101672172546387
    3. ' continue' → logprob: -4.410167217254639
    4. ':' → logprob: -7.035167217254639
    5. 'continue' → logprob: -7.785167217254639
    6. ' print' → logprob: -8.03516674041748
    7. '            
' → logprob: -9.03516674041748
    8. '\n' → logprob: -9.41016674041748
    9. 'print' → logprob: -9.66016674041748
    10. ' :' → logprob: -9.91016674041748

Token 58: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.45802193880081177
    2. '           ' → logprob: -1.958021879196167
    3. 'print' (adapté à ' print') → logprob: -2.083021879196167
    4. ' continue' → logprob: -2.458021879196167
    5. 'continue' → logprob: -4.708022117614746
    6. '               ' → logprob: -5.583022117614746
    7. '       ' → logprob: -6.333022117614746
    8. '   ' → logprob: -7.208022117614746
    9. '            ' → logprob: -8.083022117614746
    10. ' ' → logprob: -8.958022117614746

Token 59: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.12459155917167664
    2. '(' → logprob: -2.624591588973999
    3. '('' → logprob: -3.124591588973999
    4. '"' → logprob: -7.74959135055542
    5. '(A' → logprob: -9.749591827392578
    6. ''' → logprob: -9.999591827392578
    7. '(True' → logprob: -9.999591827392578
    8. '(F' → logprob: -10.999591827392578
    9. '(":' → logprob: -11.249591827392578
    10. '(W' → logprob: -11.374591827392578

Token 60: 'A' (ID: 32)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.3213443756103516
    2. 'Pass' → logprob: -1.4463443756103516
    3. 'PASS' → logprob: -1.9463443756103516
    4. 'AP' → logprob: -3.0713443756103516
    5. 'A' → logprob: -3.3213443756103516
    6. 'f' → logprob: -3.5713443756103516
    7. 'OK' → logprob: -3.6963443756103516
    8. 'ap' → logprob: -3.8213443756103516
    9. 's' → logprob: -4.071344375610352
    10. 'F' → logprob: -4.196344375610352

Token 61: '")
' (ID: 1896)
  Prédit: 'prov'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prov' → logprob: -0.21543149650096893
    2. 'pp' → logprob: -2.2154314517974854
    3. 'pass' → logprob: -3.5904314517974854
    4. 'pro' → logprob: -3.8404314517974854
    5. 'passed' → logprob: -4.4654316902160645
    6. 'p' → logprob: -5.8404316902160645
    7. 'prob' → logprob: -6.2154316902160645
    8. 'proved' → logprob: -6.2154316902160645
    9. '\' → logprob: -6.7154316902160645
    10. 'l' → logprob: -6.8404316902160645

Token 62: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009682548232376575
    2. '   ' → logprob: -4.884682655334473
    3. 'elif' → logprob: -7.259682655334473
    4. '           ' → logprob: -7.634682655334473
    5. 'else' → logprob: -7.884682655334473
    6. ' else' → logprob: -8.884682655334473
    7. '<|end|>' → logprob: -9.259682655334473
    8. ' ' → logprob: -9.384682655334473
    9. ' elif' → logprob: -9.509682655334473
    10. '      ' → logprob: -10.384682655334473

Token 63: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6555144190788269
    2. 'else' → logprob: -1.5305144786834717
    3. 'continue' (adapté à ' continue') → logprob: -2.2805144786834717
    4. ' else' → logprob: -3.0305144786834717
    5. ' continue' → logprob: -3.1555144786834717
    6. '   ' → logprob: -3.1555144786834717
    7. '           ' → logprob: -3.9055144786834717
    8. 'elif' → logprob: -6.030514240264893
    9. '	continue' → logprob: -6.155514240264893
    10. ' ' → logprob: -6.655514240264893

Token 64: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018176245503127575
    2. '        
' → logprob: -7.12681770324707
    3. '<|end|>' → logprob: -7.37681770324707
    4. 'else' → logprob: -8.87681770324707
    5. 'elif' → logprob: -10.00181770324707
    6. '
' → logprob: -10.25181770324707
    7. '           ' → logprob: -10.37681770324707
    8. '   ' → logprob: -10.62681770324707
    9. '        ' → logprob: -11.37681770324707
    10. '            
' → logprob: -11.37681770324707

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001812629052437842
    2. '<|end|>' → logprob: -6.50181245803833
    3. '        
' → logprob: -9.251812934875488
    4. '   ' → logprob: -10.126812934875488
    5. '	' → logprob: -10.126812934875488
    6. 'elif' → logprob: -10.751812934875488
    7. '<|end|>' → logprob: -10.751812934875488
    8. 's' → logprob: -11.501812934875488
    9. '           ' → logprob: -11.626812934875488
    10. '\t' → logprob: -11.876812934875488

Token 66: ' avg' (ID: 31686)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6474282145500183
    2. '   ' → logprob: -1.022428274154663
    3. ' if' → logprob: -2.647428274154663
    4. 'elif' → logprob: -4.147428035736084
    5. '       ' → logprob: -4.272428035736084
    6. '    ' → logprob: -5.397428035736084
    7. 'score' → logprob: -5.772428035736084
    8. 'sum' → logprob: -6.272428035736084
    9. '  ' → logprob: -6.647428035736084
    10. ' elif' → logprob: -6.772428035736084

Token 67: '_me' (ID: 36975)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1603337973356247
    2. '=' → logprob: -1.9103337526321411
    3. '_' → logprob: -9.785333633422852
    4. '_score' → logprob: -10.410333633422852
    5. '   ' → logprob: -12.035333633422852
    6. ' ' → logprob: -12.660333633422852
    7. '  ' → logprob: -12.910333633422852
    8. '100' → logprob: -13.535333633422852
    9. ',' → logprob: -13.910333633422852
    10. '>' → logprob: -14.035333633422852

Token 68: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5466804504394531
    2. 'an' → logprob: -0.9216804504394531
    3. ' =' → logprob: -3.921680450439453
    4. 'a' → logprob: -5.921680450439453
    5. 'd' → logprob: -8.046680450439453
    6. '=(' → logprob: -8.921680450439453
    7. '   ' → logprob: -9.796680450439453
    8. '  ' → logprob: -9.921680450439453
    9. '	' → logprob: -10.421680450439453
    10. 'ans' → logprob: -10.671680450439453

Token 69: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.17981424927711487
    2. '(pm' → logprob: -1.8048142194747925
    3. ' ' → logprob: -10.429814338684082
    4. '(' → logprob: -11.804814338684082
    5. '(pe' → logprob: -11.929814338684082
    6. '   ' → logprob: -12.304814338684082
    7. '(p' → logprob: -12.554814338684082
    8. '(int' → logprob: -12.804814338684082
    9. '(py' → logprob: -13.304814338684082
    10. '(m' → logprob: -13.429814338684082

Token 70: 'pm' (ID: 6991)
  Prédit: 'pm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pm' → logprob: -0.0019776455592364073
    2. ' pm' → logprob: -6.251977443695068
    3. '(pm' → logprob: -10.001977920532227
    4. 'pe' → logprob: -13.251977920532227
    5. '	pm' → logprob: -14.126977920532227
    6. '   ' → logprob: -14.251977920532227
    7. '_pm' → logprob: -15.126977920532227
    8. ' ' → logprob: -16.376977920532227
    9. 'cm' → logprob: -16.751977920532227
    10. ' pe' → logprob: -17.251977920532227

Token 71: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07889914512634277
    2. '+' → logprob: -2.5788991451263428
    3. ' ' → logprob: -11.828899383544922
    4. '   ' → logprob: -14.953899383544922
    5. '  ' → logprob: -14.953899383544922
    6. ' +
' → logprob: -15.203899383544922
    7. '+p' → logprob: -15.203899383544922
    8. '```' → logprob: -16.141399383544922
    9. ' plus' → logprob: -16.203899383544922
    10. '+
' → logprob: -16.578899383544922

Token 72: ' pe' (ID: 1045)
  Prédit: ' pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pe' → logprob: -0.474097341299057
    2. 'pe' → logprob: -0.9740973711013794
    3. '(pe' → logprob: -11.84909725189209
    4. 'pj' → logprob: -12.59909725189209
    5. ' pj' → logprob: -12.84909725189209
    6. '_pe' → logprob: -13.22409725189209
    7. ' ' → logprob: -13.97409725189209
    8. ' ' → logprob: -14.09909725189209
    9. 'e' → logprob: -14.72409725189209
    10. 'p' → logprob: -14.97409725189209

Token 73: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02191518060863018
    2. ' +' → logprob: -4.271914958953857
    3. ')/' → logprob: -5.521914958953857
    4. '+' → logprob: -5.896914958953857
    5. ' )' → logprob: -7.021914958953857
    6. ')//' → logprob: -9.771915435791016
    7. '+p' → logprob: -12.646915435791016
    8. '   ' → logprob: -12.771915435791016
    9. '+j' → logprob: -12.896915435791016
    10. '```' → logprob: -13.021915435791016

Token 74: ' /' (ID: 820)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5771751403808594
    2. ' +' → logprob: -0.9521751403808594
    3. ')' → logprob: -3.8271751403808594
    4. ' /' → logprob: -4.952175140380859
    5. ')/' → logprob: -5.202175140380859
    6. ' //' → logprob: -5.327175140380859
    7. '/' → logprob: -5.702175140380859
    8. ' ' → logprob: -6.077175140380859
    9. '//' → logprob: -6.702175140380859
    10. '>' → logprob: -6.827175140380859

Token 75: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03805606812238693
    2. ' ' → logprob: -3.2880561351776123
    3. '3' → logprob: -12.975556373596191
    4. '<|end|>' → logprob: -12.975556373596191
    5. '   ' → logprob: -13.100556373596191
    6. '  ' → logprob: -13.163056373596191
    7. '```' → logprob: -13.913056373596191
    8. '200' → logprob: -14.225556373596191
    9. ' ' → logprob: -14.663056373596191
    10. '    ' → logprob: -14.850556373596191

Token 76: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006756340153515339
    2. ' ' → logprob: -5.00675630569458
    3. '3' → logprob: -11.006756782531738
    4. '200' → logprob: -11.756756782531738
    5. '   ' → logprob: -12.694256782531738
    6. '  ' → logprob: -13.006756782531738
    7. '20' → logprob: -13.694256782531738
    8. '```' → logprob: -14.006756782531738
    9. '210' → logprob: -14.444256782531738
    10. '23' → logprob: -14.569256782531738

Token 77: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4259263277053833
    2. '
' → logprob: -1.5509263277053833
    3. '<|end|>' → logprob: -2.0509262084960938
    4. '<|end|>' → logprob: -5.925926208496094
    5. '        
' → logprob: -6.050926208496094
    6. '```' → logprob: -8.800926208496094
    7. '  
' → logprob: -8.800926208496094
    8. '   ' → logprob: -9.050926208496094
    9. '
' → logprob: -9.175926208496094
    10. ' if' → logprob: -9.300926208496094

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9053540229797363
    2. '<|end|>' → logprob: -1.1553540229797363
    3. '
' → logprob: -1.6553540229797363
    4. '   ' → logprob: -3.4053540229797363
    5. ' if' → logprob: -4.030354022979736
    6. ' ' → logprob: -4.655354022979736
    7. '        
' → logprob: -4.905354022979736
    8. '    
' → logprob: -5.280354022979736
    9. '<|end|>' → logprob: -5.405354022979736
    10. 'if' → logprob: -5.655354022979736

Token 79: ' avg' (ID: 31686)
  Prédit: 'avg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avg' (adapté à ' avg') → logprob: -0.37943342328071594
    2. 'if' → logprob: -1.2544333934783936
    3. ' if' → logprob: -3.8794333934783936
    4. ' avg' → logprob: -5.629433631896973
    5. 'score' → logprob: -6.254433631896973
    6. '   ' → logprob: -6.504433631896973
    7. 'pj' → logprob: -7.629433631896973
    8. '       ' → logprob: -8.379433631896973
    9. 'total' → logprob: -8.754433631896973
    10. 'max' → logprob: -9.254433631896973

Token 80: '_all' (ID: 13305)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.2797107994556427
    2. '_' → logprob: -2.0297107696533203
    3. '_j' → logprob: -2.6547107696533203
    4. '_me' → logprob: -3.9047107696533203
    5. '_m' → logprob: -5.02971076965332
    6. '_pe' → logprob: -5.65471076965332
    7. '_pm' → logprob: -6.02971076965332
    8. '_mp' → logprob: -6.90471076965332
    9. '_all' → logprob: -7.02971076965332
    10. '_py' → logprob: -7.27971076965332

Token 81: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132724165916443
    2. ' =' → logprob: -1.313272476196289
    3. '<|end|>' → logprob: -12.313272476196289
    4. ' ' → logprob: -12.688272476196289
    5. '```' → logprob: -14.313272476196289
    6. '_' → logprob: -14.563272476196289
    7. ' ' → logprob: -15.063272476196289
    8. '<|end|>' → logprob: -15.313272476196289
    9. ',' → logprob: -15.438272476196289
    10. '   ' → logprob: -15.563272476196289

Token 82: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16037452220916748
    2. '(pm' → logprob: -1.9103745222091675
    3. '(p' → logprob: -9.410374641418457
    4. ' ' → logprob: -10.910374641418457
    5. '(' → logprob: -11.785374641418457
    6. ' pm' → logprob: -12.785374641418457
    7. '   ' → logprob: -12.785374641418457
    8. '(pg' → logprob: -12.910374641418457
    9. '(px' → logprob: -12.910374641418457
    10. '(pr' → logprob: -13.160374641418457

Token 83: 'pm' (ID: 6991)
  Prédit: '(pm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pm' → logprob: -0.5799053907394409
    2. 'pm' → logprob: -0.8299053907394409
    3. ' pm' → logprob: -5.5799055099487305
    4. '	pm' → logprob: -9.07990550994873
    5. 'pj' → logprob: -10.82990550994873
    6. '_pm' → logprob: -11.45490550994873
    7. '(p' → logprob: -11.70490550994873
    8. 'p' → logprob: -11.95490550994873
    9. 'Pm' → logprob: -12.20490550994873
    10. 'pmn' → logprob: -12.20490550994873

Token 84: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.023252464830875397
    2. '+' → logprob: -3.773252487182617
    3. '<|end|>' → logprob: -12.023252487182617
    4. ' ' → logprob: -14.398252487182617
    5. '<|end|>' → logprob: -15.523252487182617
    6. '+p' → logprob: -16.898252487182617
    7. ' ' → logprob: -17.148252487182617
    8. ' plus' → logprob: -17.398252487182617
    9. '＋' → logprob: -17.523252487182617
    10. ' +
' → logprob: -17.523252487182617

Token 85: ' pe' (ID: 1045)
  Prédit: ' pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pe' → logprob: -0.3183031380176544
    2. 'pe' → logprob: -1.318303108215332
    3. ' pj' → logprob: -5.693303108215332
    4. 'pj' → logprob: -7.068303108215332
    5. ' pm' → logprob: -7.818303108215332
    6. 'pm' → logprob: -8.193303108215332
    7. ' ' → logprob: -10.443303108215332
    8. '   ' → logprob: -11.380803108215332
    9. '(pe' → logprob: -11.818303108215332
    10. '```' → logprob: -11.880803108215332

Token 86: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3132637143135071
    2. '+' → logprob: -1.3132636547088623
    3. ' ' → logprob: -14.063263893127441
    4. '```' → logprob: -15.438263893127441
    5. ' +
' → logprob: -15.688263893127441
    6. '+
' → logprob: -15.688263893127441
    7. '+p' → logprob: -15.938263893127441
    8. '<|end|>' → logprob: -16.313262939453125
    9. '＋' → logprob: -16.688262939453125
    10. '+j' → logprob: -16.688262939453125

Token 87: ' pj' (ID: 110041)
  Prédit: ' pj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pj' → logprob: -0.011084014549851418
    2. 'pj' → logprob: -4.511084079742432
    3. ' ' → logprob: -10.886083602905273
    4. '    ' → logprob: -12.261083602905273
    5. ' PJ' → logprob: -13.636083602905273
    6. ')' → logprob: -13.761083602905273
    7. '```' → logprob: -14.136083602905273
    8. '   ' → logprob: -14.261083602905273
    9. ' `' → logprob: -14.261083602905273
    10. ' mj' → logprob: -14.386083602905273

Token 88: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033389562740921974
    2. ' )' → logprob: -5.753338813781738
    3. ')/' → logprob: -8.753338813781738
    4. '）' → logprob: -13.128338813781738
    5. '```' → logprob: -14.378338813781738
    6. '`)' → logprob: -16.253339767456055
    7. '3' → logprob: -16.253339767456055
    8. ')
' → logprob: -16.503339767456055
    9. '>' → logprob: -16.628339767456055
    10. ' ' → logprob: -16.628339767456055

Token 89: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.1271696835756302
    2. '/' → logprob: -2.127169609069824
    3. ')' → logprob: -9.127169609069824
    4. ')/' → logprob: -9.502169609069824
    5. ' ' → logprob: -11.002169609069824
    6. ' /
' → logprob: -11.252169609069824
    7. '<|end|>' → logprob: -12.127169609069824
    8. ' )' → logprob: -12.252169609069824
    9. '```' → logprob: -12.252169609069824
    10. '3' → logprob: -12.627169609069824

Token 90: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00408516637980938
    2. ' ' → logprob: -5.504085063934326
    3. '<|end|>' → logprob: -12.754085540771484
    4. '   ' → logprob: -13.754085540771484
    5. '```' → logprob: -14.254085540771484
    6. '  ' → logprob: -14.254085540771484
    7. '>' → logprob: -15.129085540771484
    8. ' ' → logprob: -15.254085540771484
    9. '...' → logprob: -15.879085540771484
    10. '۳' → logprob: -15.941585540771484

Token 91: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00026729601086117327
    2. ' ' → logprob: -8.250267028808594
    3. '   ' → logprob: -13.500267028808594
    4. '<|end|>' → logprob: -13.500267028808594
    5. '```' → logprob: -14.250267028808594
    6. '  ' → logprob: -14.250267028808594
    7. '>' → logprob: -15.375267028808594
    8. '۳' → logprob: -15.750267028808594
    9. '...' → logprob: -15.750267028808594
    10. ' ' → logprob: -15.875267028808594

Token 92: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0256766080856323
    2. '       ' → logprob: -1.0256766080856323
    3. '<|end|>' → logprob: -1.2756766080856323
    4. '<|end|>' → logprob: -6.150676727294922
    5. '   ' → logprob: -8.025676727294922
    6. '\n' → logprob: -8.025676727294922
    7. '        
' → logprob: -8.150676727294922
    8. '```' → logprob: -9.150676727294922
    9. '
' → logprob: -9.275676727294922
    10. '  
' → logprob: -10.025676727294922

Token 93: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7009543776512146
    2. '       ' → logprob: -0.7009543776512146
    3. '<|end|>' → logprob: -5.325954437255859
    4. '        
' → logprob: -6.450954437255859
    5. '
' → logprob: -7.450954437255859
    6. '   ' → logprob: -8.70095443725586
    7. '```' → logprob: -8.82595443725586
    8. ' if' → logprob: -9.32595443725586
    9. '<|end|>' → logprob: -9.57595443725586
    10. ' 
' → logprob: -9.70095443725586

Token 94: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04505088925361633
    2. '       ' → logprob: -3.545050859451294
    3. ' if' → logprob: -4.295051097869873
    4. '   ' → logprob: -6.545051097869873
    5. '```' → logprob: -9.795050621032715
    6. ' ' → logprob: -10.920050621032715
    7. 'print' → logprob: -11.295050621032715
    8. '        ' → logprob: -12.170050621032715
    9. '  ' → logprob: -12.170050621032715
    10. '	if' → logprob: -12.545050621032715

Token 95: ' avg' (ID: 31686)
  Prédit: ' avg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avg' → logprob: -0.03485559672117233
    2. 'avg' → logprob: -3.784855604171753
    3. ' pm' → logprob: -4.534855365753174
    4. '(avg' → logprob: -8.159855842590332
    5. ' abs' → logprob: -8.534855842590332
    6. ' ' → logprob: -9.534855842590332
    7. 'pm' → logprob: -9.534855842590332
    8. ' pj' → logprob: -9.909855842590332
    9. ' (' → logprob: -10.159855842590332
    10. ' av' → logprob: -10.534855842590332

Token 96: '_me' (ID: 36975)
  Prédit: '_me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_me' → logprob: -0.47434380650520325
    2. '_all' → logprob: -0.9743437767028809
    3. 'all' → logprob: -8.724344253540039
    4. '_' → logprob: -11.099344253540039
    5. '>' → logprob: -11.224344253540039
    6. 'me' → logprob: -11.349344253540039
    7. 'All' → logprob: -11.849344253540039
    8. '>=' → logprob: -11.974344253540039
    9. '_ge' → logprob: -12.599344253540039
    10. '	me' → logprob: -12.724344253540039

Token 97: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.30393368005752563
    2. '>=' → logprob: -1.5539336204528809
    3. ' >' → logprob: -3.803933620452881
    4. ' <' → logprob: -4.178933620452881
    5. '>' → logprob: -4.803933620452881
    6. '<' → logprob: -5.803933620452881
    7. '<|end|>' → logprob: -6.803933620452881
    8. ' ' → logprob: -8.178934097290039
    9. '==' → logprob: -9.178934097290039
    10. ' ==' → logprob: -9.803934097290039

Token 98: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.4664710462093353
    2. ' ' → logprob: -1.8414710760116577
    3. '90' → logprob: -1.8414710760116577
    4. '70' → logprob: -3.341470956802368
    5. '80' → logprob: -4.716471195220947
    6. '85' → logprob: -5.966471195220947
    7. '75' → logprob: -5.966471195220947
    8. '95' → logprob: -6.341471195220947
    9. '65' → logprob: -6.966471195220947
    10. '50' → logprob: -7.341471195220947

Token 99: '90' (ID: 2744)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.24424540996551514
    2. '90' → logprob: -1.8692454099655151
    3. '70' → logprob: -3.2442455291748047
    4. '80' → logprob: -4.369245529174805
    5. '75' → logprob: -6.244245529174805
    6. '85' → logprob: -6.369245529174805
    7. '65' → logprob: -6.369245529174805
    8. ' ' → logprob: -6.619245529174805
    9. '95' → logprob: -6.619245529174805
    10. '50' → logprob: -6.994245529174805

Token 100: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.49562352895736694
    2. ':' → logprob: -0.9956235289573669
    3. ' or' → logprob: -4.370623588562012
    4. 'and' → logprob: -5.370623588562012
    5. '       ' → logprob: -5.995623588562012
    6. ':
' → logprob: -6.870623588562012
    7. '   ' → logprob: -7.870623588562012
    8. '           ' → logprob: -10.370623588562012
    9. ' :' → logprob: -11.245623588562012
    10. '<|end|>' → logprob: -11.245623588562012

Token 101: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21131086349487305
    2. '           ' → logprob: -1.961310863494873
    3. '<|end|>' → logprob: -3.711310863494873
    4. ':' → logprob: -3.961310863494873
    5. '   ' → logprob: -6.211310863494873
    6. ' and' → logprob: -7.211310863494873
    7. ':
' → logprob: -7.211310863494873
    8. '               ' → logprob: -7.461310863494873
    9. '<|end|>' → logprob: -7.461310863494873
    10. ' ' → logprob: -7.461310863494873

Token 102: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1534161567687988
    2. ' print' → logprob: -1.1534161567687988
    3. 'print' (adapté à ' print') → logprob: -1.7784161567687988
    4. '           ' → logprob: -2.028416156768799
    5. ' ' → logprob: -3.528416156768799
    6. ' if' → logprob: -3.903416156768799
    7. '<|end|>' → logprob: -4.778416156768799
    8. '   ' → logprob: -5.528416156768799
    9. '               ' → logprob: -5.778416156768799
    10. 'if' → logprob: -7.403416156768799

Token 103: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.015078757889568806
    2. '(' → logprob: -4.265078544616699
    3. '"' → logprob: -8.0150785446167
    4. '('' → logprob: -8.7650785446167
    5. '(A' → logprob: -9.1400785446167
    6. 'A' → logprob: -9.2650785446167
    7. '"A' → logprob: -9.2650785446167
    8. ' A' → logprob: -9.6400785446167
    9. '"B' → logprob: -10.7650785446167
    10. '(B' → logprob: -11.3900785446167

Token 104: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.02473451942205429
    2. 'B' → logprob: -4.2747344970703125
    3. 'S' → logprob: -4.7747344970703125
    4. 'O' → logprob: -7.5247344970703125
    5. 'M' → logprob: -7.6497344970703125
    6. 'D' → logprob: -8.274734497070312
    7. 'C' → logprob: -9.024734497070312
    8. 'AA' → logprob: -9.024734497070312
    9. 'E' → logprob: -9.649734497070312
    10. 'H' → logprob: -9.774734497070312

Token 105: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.027072634547948837
    2. '")
' → logprob: -3.6520726680755615
    3. '       ' → logprob: -8.02707290649414
    4. '")
' → logprob: -8.40207290649414
    5. 'elif' → logprob: -9.77707290649414
    6. '   ' → logprob: -10.15207290649414
    7. ' ")' → logprob: -10.27707290649414
    8. ')' → logprob: -10.65207290649414
    9. '\n' → logprob: -10.90207290649414
    10. 'else' → logprob: -11.65207290649414

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004664193547796458
    2. 'elif' → logprob: -8.375466346740723
    3. '<|end|>' → logprob: -9.125466346740723
    4. '           ' → logprob: -9.625466346740723
    5. ' elif' → logprob: -10.500466346740723
    6. 'else' → logprob: -11.000466346740723
    7. '   ' → logprob: -11.750466346740723
    8. ' else' → logprob: -12.000466346740723
    9. ' ' → logprob: -14.125466346740723
    10. '<|end|>' → logprob: -14.500466346740723

Token 107: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042271193116903305
    2. 'elif' (adapté à ' elif') → logprob: -3.667271137237549
    3. 'else' → logprob: -4.917271137237549
    4. ' elif' → logprob: -5.417271137237549
    5. ' else' → logprob: -5.542271137237549
    6. '   ' → logprob: -9.417271614074707
    7. '<|end|>' → logprob: -10.292271614074707
    8. '```' → logprob: -10.542271614074707
    9. ' ' → logprob: -10.917271614074707
    10. '	elif' → logprob: -12.667271614074707

Token 108: ' avg' (ID: 31686)
  Prédit: ' avg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avg' → logprob: -0.14513276517391205
    2. 'avg' → logprob: -2.0201327800750732
    3. ' ' → logprob: -6.395132541656494
    4. '(avg' → logprob: -8.145133018493652
    5. '90' → logprob: -8.520133018493652
    6. ' (' → logprob: -10.145133018493652
    7. '70' → logprob: -10.395133018493652
    8. ' average' → logprob: -10.520133018493652
    9. '80' → logprob: -10.520133018493652
    10. ' pm' → logprob: -10.645133018493652

Token 109: '_all' (ID: 13305)
  Prédit: '_me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_me' → logprob: -0.0006072447285987437
    2. '_all' → logprob: -7.500607013702393
    3. '_m' → logprob: -10.87560749053955
    4. '_' → logprob: -11.75060749053955
    5. 'me' → logprob: -12.87560749053955
    6. '_pe' → logprob: -13.00060749053955
    7. '_mc' → logprob: -13.00060749053955
    8. '_my' → logprob: -13.50060749053955
    9. '>=' → logprob: -13.50060749053955
    10. '   ' → logprob: -13.50060749053955

Token 110: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.08900260925292969
    2. '>=' → logprob: -2.4640026092529297
    3. ' ' → logprob: -10.46400260925293
    4. '   ' → logprob: -11.46400260925293
    5. '    ' → logprob: -12.21400260925293
    6. '	' → logprob: -12.46400260925293
    7. ' ' → logprob: -12.71400260925293
    8. ']>=' → logprob: -12.96400260925293
    9. ')>=' → logprob: -13.08900260925293
    10. '>' → logprob: -13.33900260925293

Token 111: ' ' (ID: 220)
  Prédit: '80'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '80' → logprob: -0.4481479823589325
    2. '90' → logprob: -1.1981480121612549
    3. '85' → logprob: -3.573148012161255
    4. '70' → logprob: -4.198147773742676
    5. ' ' → logprob: -4.323147773742676
    6. '75' → logprob: -6.198147773742676
    7. '60' → logprob: -6.948147773742676
    8. '   ' → logprob: -11.010647773742676
    9. '95' → logprob: -11.448147773742676
    10. '81' → logprob: -11.760647773742676

Token 112: '80' (ID: 2241)
  Prédit: '80'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '80' → logprob: -0.2881833016872406
    2. '90' → logprob: -1.413183331489563
    3. '70' → logprob: -5.538183212280273
    4. '85' → logprob: -6.288183212280273
    5. '75' → logprob: -7.413183212280273
    6. ' ' → logprob: -8.288183212280273
    7. '60' → logprob: -8.288183212280273
    8. '9' → logprob: -10.975683212280273
    9. '95' → logprob: -11.288183212280273
    10. '89' → logprob: -11.538183212280273

Token 113: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004672087728977203
    2. ':
' → logprob: -5.379672050476074
    3. '       ' → logprob: -11.004672050476074
    4. ' and' → logprob: -11.504672050476074
    5. '<|end|>' → logprob: -11.754672050476074
    6. '           ' → logprob: -11.879672050476074
    7. '   ' → logprob: -12.879672050476074
    8. '):' → logprob: -13.254672050476074
    9. 'and' → logprob: -13.254672050476074
    10. ' :' → logprob: -13.754672050476074

Token 114: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007513630669564009
    2. ':
' → logprob: -5.382513523101807
    3. '           ' → logprob: -6.507513523101807
    4. '       ' → logprob: -7.257513523101807
    5. '<|end|>' → logprob: -7.882513523101807
    6. ' and' → logprob: -8.632513999938965
    7. '):' → logprob: -10.382513999938965
    8. '   ' → logprob: -10.507513999938965
    9. 'and' → logprob: -11.132513999938965
    10. ' :' → logprob: -11.257513999938965

Token 115: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6676219701766968
    2. 'print' (adapté à ' print') → logprob: -0.7926219701766968
    3. ' print' → logprob: -3.4176220893859863
    4. '       ' → logprob: -6.917622089385986
    5. '   ' → logprob: -7.667622089385986
    6. 'A' → logprob: -9.792621612548828
    7. '               ' → logprob: -10.042621612548828
    8. '	print' → logprob: -11.167621612548828
    9. '```' → logprob: -11.417621612548828
    10. ' ' → logprob: -11.792621612548828

Token 116: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.029790299013257027
    2. '(' → logprob: -3.5297904014587402
    3. '("("' → logprob: -10.529789924621582
    4. '"' → logprob: -11.779789924621582
    5. '("")' → logprob: -13.154789924621582
    6. ' ("' → logprob: -13.779789924621582
    7. '('' → logprob: -14.154789924621582
    8. ' ' → logprob: -14.529789924621582
    9. '(("' → logprob: -15.154789924621582
    10. '()' → logprob: -15.154789924621582

Token 117: 'A' (ID: 32)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0015381926205009222
    2. 'A' → logprob: -6.501538276672363
    3. 'P' → logprob: -11.501538276672363
    4. ' B' → logprob: -11.876538276672363
    5. 'C' → logprob: -12.126538276672363
    6. 'M' → logprob: -13.501538276672363
    7. '	B' → logprob: -13.814038276672363
    8. 'D' → logprob: -13.876538276672363
    9. '"B' → logprob: -13.876538276672363
    10. 'E' → logprob: -14.001538276672363

Token 118: '")
' (ID: 1896)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -1.1729369163513184
    2. ')' → logprob: -1.2979369163513184
    3. '       ' → logprob: -1.6729369163513184
    4. '")' → logprob: -2.1729369163513184
    5. 'else' → logprob: -2.6729369163513184
    6. ' elif' → logprob: -3.7979369163513184
    7. ' else' → logprob: -3.9229369163513184
    8. ')
' → logprob: -6.547936916351318
    9. '   ' → logprob: -6.547936916351318
    10. '")
' → logprob: -6.797936916351318

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038535131607204676
    2. 'else' → logprob: -5.8788533210754395
    3. 'elif' → logprob: -7.2538533210754395
    4. ' else' → logprob: -8.128853797912598
    5. ' elif' → logprob: -10.378853797912598
    6. '```' → logprob: -11.878853797912598
    7. '<|end|>' → logprob: -12.628853797912598
    8. '   ' → logprob: -12.878853797912598
    9. ' ' → logprob: -14.378853797912598
    10. '	elif' → logprob: -15.128853797912598

Token 120: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22633172571659088
    2. 'else' → logprob: -1.7263317108154297
    3. 'elif' (adapté à ' elif') → logprob: -3.9763317108154297
    4. ' else' → logprob: -5.22633171081543
    5. ' elif' → logprob: -7.72633171081543
    6. '   ' → logprob: -10.72633171081543
    7. ' ' → logprob: -11.60133171081543
    8. '```' → logprob: -11.72633171081543
    9. '	elif' → logprob: -14.35133171081543
    10. '	else' → logprob: -14.60133171081543

Token 121: ' avg' (ID: 31686)
  Prédit: ' pm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pm' → logprob: -0.8966681361198425
    2. ' avg' → logprob: -1.3966681957244873
    3. 'avg' → logprob: -2.0216681957244873
    4. ' (' → logprob: -2.7716681957244873
    5. 'pm' → logprob: -3.0216681957244873
    6. '(pm' → logprob: -3.1466681957244873
    7. '(avg' → logprob: -3.8966681957244873
    8. '(' → logprob: -4.646667957305908
    9. ' pe' → logprob: -4.896667957305908
    10. '(pe' → logprob: -5.396667957305908

Token 122: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.22611039876937866
    2. '_me' → logprob: -1.6011104583740234
    3. 'all' → logprob: -7.601110458374023
    4. '_pe' → logprob: -8.726110458374023
    5. 'me' → logprob: -10.851110458374023
    6. '_' → logprob: -12.851110458374023
    7. '_pm' → logprob: -12.851110458374023
    8. '_m' → logprob: -13.351110458374023
    9. '_p' → logprob: -14.351110458374023
    10. '   ' → logprob: -14.476110458374023

Token 123: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.11527115106582642
    2. '>=' → logprob: -2.2402710914611816
    3. ' <' → logprob: -6.615271091461182
    4. '<' → logprob: -6.990271091461182
    5. ' ' → logprob: -8.86527156829834
    6. '>' → logprob: -11.99027156829834
    7. ' ' → logprob: -12.11527156829834
    8. '   ' → logprob: -12.24027156829834
    9. ' >' → logprob: -12.49027156829834
    10. ' <=' → logprob: -12.49027156829834

Token 124: ' ' (ID: 220)
  Prédit: '70'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '70' → logprob: -0.06719999015331268
    2. '60' → logprob: -3.067199945449829
    3. ' ' → logprob: -4.942200183868408
    4. '50' → logprob: -5.067200183868408
    5. '7' → logprob: -6.067200183868408
    6. '65' → logprob: -6.192200183868408
    7. '75' → logprob: -7.942200183868408
    8. '
' → logprob: -9.31719970703125
    9. '6' → logprob: -9.94219970703125
    10. '"' → logprob: -10.81719970703125

Token 125: '70' (ID: 2789)
  Prédit: '70'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '70' → logprob: -0.026253042742609978
    2. '50' → logprob: -4.2762532234191895
    3. '60' → logprob: -4.9012532234191895
    4. '7' → logprob: -6.0262532234191895
    5. '65' → logprob: -6.6512532234191895
    6. '75' → logprob: -7.4012532234191895
    7. '5' → logprob: -9.276252746582031
    8. '6' → logprob: -10.151252746582031
    9. '90' → logprob: -10.838752746582031
    10. '
' → logprob: -11.338752746582031

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003354758722707629
    2. ':
' → logprob: -5.753354549407959
    3. ' and' → logprob: -9.253355026245117
    4. 'and' → logprob: -10.253355026245117
    5. '           ' → logprob: -10.878355026245117
    6. '       ' → logprob: -11.503355026245117
    7. '   ' → logprob: -11.503355026245117
    8. ':
' → logprob: -13.003355026245117
    9. ' or' → logprob: -13.128355026245117
    10. ' :' → logprob: -13.753355026245117

Token 127: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6296805143356323
    2. '           ' → logprob: -0.8796805143356323
    3. '       ' → logprob: -4.129680633544922
    4. ' and' → logprob: -4.379680633544922
    5. 'and' → logprob: -4.379680633544922
    6. 'print' → logprob: -5.754680633544922
    7. ':
' → logprob: -5.879680633544922
    8. ' or' → logprob: -5.879680633544922
    9. '   ' → logprob: -6.754680633544922
    10. '	       ' → logprob: -8.004680633544922

Token 128: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00021736434428021312
    2. ' print' → logprob: -9.37521743774414
    3. '           ' → logprob: -9.62521743774414
    4. '   ' → logprob: -10.12521743774414
    5. '       ' → logprob: -10.75021743774414
    6. '	print' → logprob: -13.37521743774414
    7. 'if' → logprob: -13.50021743774414
    8. 'B' → logprob: -14.25021743774414
    9. ' ' → logprob: -14.50021743774414
    10. 'printf' → logprob: -15.50021743774414

Token 129: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.007037643808871508
    2. '(' → logprob: -5.00703763961792
    3. ' ("' → logprob: -8.257038116455078
    4. '("("' → logprob: -10.132038116455078
    5. '"' → logprob: -11.382038116455078
    6. '('' → logprob: -12.007038116455078
    7. ' (' → logprob: -12.757038116455078
    8. '("")' → logprob: -14.007038116455078
    9. ' ' → logprob: -14.257038116455078
    10. '(("' → logprob: -15.382038116455078

Token 130: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.003518937388435006
    2. ''' → logprob: -6.378519058227539
    3. 'C' → logprob: -6.503519058227539
    4. 'b' → logprob: -9.378519058227539
    5. ' B' → logprob: -9.628519058227539
    6. '"B' → logprob: -10.253519058227539
    7. ''C' → logprob: -10.941019058227539
    8. '	B' → logprob: -11.441019058227539
    9. 'D' → logprob: -11.503519058227539
    10. 'P' → logprob: -11.503519058227539

Token 131: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.8379701375961304
    2. ':' → logprob: -0.9629701375961304
    3. '       ' → logprob: -2.71297025680542
    4. ':
' → logprob: -3.08797025680542
    5. '")
' → logprob: -3.71297025680542
    6. '"):
' → logprob: -3.83797025680542
    7. ')' → logprob: -4.46297025680542
    8. '"):' → logprob: -5.83797025680542
    9. '           ' → logprob: -5.96297025680542
    10. '):
' → logprob: -5.96297025680542

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014566556550562382
    2. 'elif' → logprob: -4.764566421508789
    3. 'else' → logprob: -5.264566421508789
    4. ' else' → logprob: -8.139566421508789
    5. ' elif' → logprob: -8.514566421508789
    6. '<|end|>' → logprob: -8.514566421508789
    7. '```' → logprob: -10.264566421508789
    8. '   ' → logprob: -11.014566421508789
    9. '	elif' → logprob: -11.889566421508789
    10. '      ' → logprob: -13.389566421508789

Token 133: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.07332061976194382
    2. 'else' → logprob: -2.8233206272125244
    3. '       ' → logprob: -4.948320388793945
    4. ' elif' → logprob: -5.573320388793945
    5. ' else' → logprob: -7.948320388793945
    6. '	elif' → logprob: -10.823320388793945
    7. '   ' → logprob: -11.073320388793945
    8. '```' → logprob: -13.323320388793945
    9. '<|end|>' → logprob: -13.573320388793945
    10. ' ' → logprob: -14.323320388793945

Token 134: ' avg' (ID: 31686)
  Prédit: 'avg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avg' → logprob: -0.024708589538931847
    2. ' avg' → logprob: -3.7747085094451904
    3. '60' → logprob: -7.1497087478637695
    4. '65' → logprob: -8.39970874786377
    5. '70' → logprob: -8.52470874786377
    6. ' ' → logprob: -9.02470874786377
    7. '(avg' → logprob: -10.14970874786377
    8. 'average' → logprob: -10.52470874786377
    9. 'all' → logprob: -10.64970874786377
    10. '50' → logprob: -10.77470874786377

Token 135: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -3.190178904333152e-05
    2. '_me' → logprob: -10.500031471252441
    3. '>=' → logprob: -13.625031471252441
    4. 'all' → logprob: -13.750031471252441
    5. '_' → logprob: -13.875031471252441
    6. ' >=' → logprob: -15.250031471252441
    7. '_avg' → logprob: -16.250032424926758
    8. '_All' → logprob: -16.250032424926758
    9. '_at' → logprob: -16.375032424926758
    10. 'All' → logprob: -16.500032424926758

Token 136: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.05493701249361038
    2. '>=' → logprob: -2.9299371242523193
    3. ' ' → logprob: -9.929937362670898
    4. '   ' → logprob: -12.554937362670898
    5. '>' → logprob: -14.804937362670898
    6. '    ' → logprob: -14.929937362670898
    7. '[' → logprob: -14.929937362670898
    8. ')>=' → logprob: -14.929937362670898
    9. ']>=' → logprob: -15.554937362670898
    10. '  ' → logprob: -15.554937362670898

Token 137: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.018342498689889908
    2. ' ' → logprob: -4.2683424949646
    3. '50' → logprob: -5.7683424949646
    4. '6' → logprob: -7.6433424949646
    5. '
' → logprob: -9.143342971801758
    6. '   ' → logprob: -9.143342971801758
    7. '  ' → logprob: -9.268342971801758
    8. '	' → logprob: -10.018342971801758
    9. '    ' → logprob: -10.643342971801758
    10. '"' → logprob: -10.705842971801758

Token 138: '50' (ID: 1434)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.0004921489744447172
    2. '50' → logprob: -8.000492095947266
    3. '6' → logprob: -9.500492095947266
    4. '
' → logprob: -10.750492095947266
    5. ' ' → logprob: -11.000492095947266
    6. '40' → logprob: -11.375492095947266
    7. '65' → logprob: -12.250492095947266
    8. '600' → logprob: -12.437992095947266
    9. '"' → logprob: -12.625492095947266
    10. '

' → logprob: -13.125492095947266

Token 139: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004095377866178751
    2. ':
' → logprob: -5.504095554351807
    3. '           ' → logprob: -11.629095077514648
    4. '       ' → logprob: -13.004095077514648
    5. ' and' → logprob: -13.379095077514648
    6. ' :' → logprob: -13.754095077514648
    7. ':
' → logprob: -14.379095077514648
    8. '   ' → logprob: -14.504095077514648
    9. 'and' → logprob: -14.629095077514648
    10. ')' → logprob: -15.129095077514648

Token 140: ' (' (ID: 350)
  Prédit: 'pm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pm' → logprob: -0.6788766384124756
    2. 'avg' → logprob: -1.3038766384124756
    3. '(pm' → logprob: -2.1788766384124756
    4. ' pm' → logprob: -3.6788766384124756
    5. 'pj' → logprob: -3.8038766384124756
    6. '(avg' → logprob: -4.053876876831055
    7. 'pe' → logprob: -4.178876876831055
    8. ' avg' → logprob: -4.928876876831055
    9. '(' → logprob: -5.428876876831055
    10. ' pj' → logprob: -5.678876876831055

Token 141: 'pm' (ID: 6991)
  Prédit: 'pm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pm' → logprob: -1.0531882047653198
    2. 'avg' → logprob: -1.4281882047653198
    3. ' pm' → logprob: -1.9281882047653198
    4. '(pm' → logprob: -2.4281883239746094
    5. ' avg' → logprob: -2.8031883239746094
    6. 'pe' → logprob: -3.6781883239746094
    7. '(avg' → logprob: -3.9281883239746094
    8. ' pj' → logprob: -4.428188323974609
    9. 'pj' → logprob: -4.428188323974609
    10. ' (' → logprob: -4.553188323974609

Token 142: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5417051911354065
    2. '>=' → logprob: -1.6667051315307617
    3. ' +' → logprob: -1.7917051315307617
    4. '+' → logprob: -2.9167051315307617
    5. ' ==' → logprob: -5.916705131530762
    6. '==' → logprob: -6.166705131530762
    7. ' >' → logprob: -6.416705131530762
    8. ' ' → logprob: -7.541705131530762
    9. '>' → logprob: -7.541705131530762
    10. ' or' → logprob: -8.041705131530762

Token 143: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.6691960692405701
    2. '50' → logprob: -1.0441961288452148
    3. '90' → logprob: -2.794196128845215
    4. '70' → logprob: -2.919196128845215
    5. '55' → logprob: -4.919196128845215
    6. '80' → logprob: -4.919196128845215
    7. '40' → logprob: -6.169196128845215
    8. '65' → logprob: -6.294196128845215
    9. '30' → logprob: -7.294196128845215
    10. ' ' → logprob: -7.794196128845215

Token 144: '80' (ID: 2241)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.44928616285324097
    2. '50' → logprob: -1.1992862224578857
    3. '70' → logprob: -3.0742862224578857
    4. '40' → logprob: -5.074285984039307
    5. '30' → logprob: -5.699285984039307
    6. '90' → logprob: -6.074285984039307
    7. '80' → logprob: -6.824285984039307
    8. '55' → logprob: -7.949285984039307
    9. '65' → logprob: -8.324286460876465
    10. '10' → logprob: -8.449286460876465

Token 145: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.16277286410331726
    2. ' and' → logprob: -1.9127728939056396
    3. 'and' → logprob: -6.6627726554870605
    4. ')' → logprob: -7.2877726554870605
    5. 'or' → logprob: -7.6627726554870605
    6. '):
' → logprob: -10.162773132324219
    7. '):' → logprob: -10.662773132324219
    8. ' )' → logprob: -11.287773132324219
    9. '   ' → logprob: -11.537773132324219
    10. ' ' → logprob: -11.662773132324219

Token 146: ' pe' (ID: 1045)
  Prédit: 'pj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pj' → logprob: -0.6739554405212402
    2. 'pe' → logprob: -0.7989554405212402
    3. ' pj' → logprob: -3.7989554405212402
    4. ' pe' → logprob: -4.04895544052124
    5. 'pm' → logprob: -8.548955917358398
    6. '   ' → logprob: -8.673955917358398
    7. ' ' → logprob: -9.048955917358398
    8. '(pe' → logprob: -10.423955917358398
    9. '       ' → logprob: -10.673955917358398
    10. '  ' → logprob: -11.486455917358398

Token 147: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3485265374183655
    2. '>=' → logprob: -1.2235264778137207
    3. '==' → logprob: -10.723526954650879
    4. ' ' → logprob: -10.973526954650879
    5. ')' → logprob: -11.473526954650879
    6. '   ' → logprob: -11.473526954650879
    7. ')>=' → logprob: -11.598526954650879
    8. ' ==' → logprob: -11.848526954650879
    9. ' or' → logprob: -13.723526954650879
    10. '≥' → logprob: -14.098526954650879

Token 148: ' ' (ID: 220)
  Prédit: '80'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '80' → logprob: -0.02919653058052063
    2. '50' → logprob: -4.029196739196777
    3. '70' → logprob: -5.279196739196777
    4. ' ' → logprob: -5.654196739196777
    5. '60' → logprob: -6.904196739196777
    6. '85' → logprob: -7.404196739196777
    7. '90' → logprob: -8.154196739196777
    8. '65' → logprob: -8.404196739196777
    9. '75' → logprob: -8.904196739196777
    10. '
' → logprob: -10.591696739196777

Token 149: '80' (ID: 2241)
  Prédit: '80'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '80' → logprob: -0.062095627188682556
    2. '50' → logprob: -2.9370956420898438
    3. '70' → logprob: -5.187095642089844
    4. '60' → logprob: -7.187095642089844
    5. '90' → logprob: -8.562095642089844
    6. '65' → logprob: -8.687095642089844
    7. '75' → logprob: -8.812095642089844
    8. '85' → logprob: -8.812095642089844
    9. ' ' → logprob: -9.374595642089844
    10. '40' → logprob: -10.749595642089844

Token 150: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029510125517845154
    2. '):
' → logprob: -3.904510021209717
    3. ' or' → logprob: -4.779510021209717
    4. ')' → logprob: -8.279510498046875
    5. '):

' → logprob: -8.904510498046875
    6. ' ):' → logprob: -9.654510498046875
    7. ':' → logprob: -10.779510498046875
    8. '       ' → logprob: -11.154510498046875
    9. 'or' → logprob: -11.404510498046875
    10. ' and' → logprob: -11.654510498046875

Token 151: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03945055976510048
    2. '       ' → logprob: -4.039450645446777
    3. 'print' → logprob: -4.789450645446777
    4. ':
' → logprob: -5.164450645446777
    5. ':' → logprob: -5.539450645446777
    6. '<|end|>' → logprob: -7.164450645446777
    7. '               ' → logprob: -7.289450645446777
    8. '	       ' → logprob: -8.289450645446777
    9. '```' → logprob: -8.289450645446777
    10. '   ' → logprob: -8.539450645446777

Token 152: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.008159914053976536
    2. ' print' → logprob: -5.13316011428833
    3. '           ' → logprob: -6.13316011428833
    4. '       ' → logprob: -9.883159637451172
    5. '               ' → logprob: -12.758159637451172
    6. '   ' → logprob: -12.883159637451172
    7. '	print' → logprob: -13.758159637451172
    8. '```' → logprob: -14.508159637451172
    9. ' ' → logprob: -14.633159637451172
    10. '
' → logprob: -15.883159637451172

Token 153: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0007106438861228526
    2. '(' → logprob: -7.250710487365723
    3. '("("' → logprob: -15.375710487365723
    4. '(
' → logprob: -16.12571144104004
    5. '('' → logprob: -16.25071144104004
    6. ' ("' → logprob: -16.62571144104004
    7. '("")' → logprob: -16.75071144104004
    8. '"B' → logprob: -17.00071144104004
    9. '()' → logprob: -17.12571144104004
    10. '"' → logprob: -17.12571144104004

Token 154: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.20432431995868683
    2. 'C' → logprob: -1.7043243646621704
    3. 'A' → logprob: -6.079324245452881
    4. '"B' → logprob: -8.204324722290039
    5. '"' → logprob: -8.704324722290039
    6. '"C' → logprob: -9.579324722290039
    7. ''' → logprob: -10.829324722290039
    8. 'c' → logprob: -10.829324722290039
    9. ' B' → logprob: -11.079324722290039
    10. 'D' → logprob: -11.829324722290039

Token 155: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.5951665043830872
    2. '")' → logprob: -0.8451665043830872
    3. '       ' → logprob: -4.2201666831970215
    4. ')
' → logprob: -5.9701666831970215
    5. ')' → logprob: -6.5951666831970215
    6. 'else' → logprob: -7.8451666831970215
    7. '   ' → logprob: -11.470166206359863
    8. ' else' → logprob: -11.595166206359863
    9. '")
' → logprob: -12.220166206359863
    10. ')")
' → logprob: -13.595166206359863

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5771067142486572
    2. 'else' → logprob: -0.8271067142486572
    3. ' else' → logprob: -6.827106475830078
    4. 'elif' → logprob: -9.577106475830078
    5. '   ' → logprob: -11.577106475830078
    6. '```' → logprob: -13.577106475830078
    7. '<|end|>' → logprob: -13.702106475830078
    8. '	else' → logprob: -14.202106475830078
    9. '_else' → logprob: -15.452106475830078
    10. '	' → logprob: -15.577106475830078

Token 157: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.03749886527657509
    2. ' else' → logprob: -3.787498950958252
    3. '       ' → logprob: -4.287498950958252
    4. 'elif' → logprob: -7.912498950958252
    5. '   ' → logprob: -10.162498474121094
    6. ' elif' → logprob: -12.537498474121094
    7. '	else' → logprob: -12.912498474121094
    8. ' ' → logprob: -13.412498474121094
    9. '```' → logprob: -15.287498474121094
    10. '_else' → logprob: -16.037498474121094

Token 158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10022219270467758
    2. ':
' → logprob: -2.350222110748291
    3. '   ' → logprob: -11.72522258758545
    4. ':
' → logprob: -12.85022258758545
    5. ' :' → logprob: -13.72522258758545
    6. ' :
' → logprob: -13.72522258758545
    7. '       ' → logprob: -13.85022258758545
    8. ':

' → logprob: -14.10022258758545
    9. '           ' → logprob: -15.85022258758545
    10. 'print' → logprob: -16.225221633911133

Token 159: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4376809000968933
    2. ' print' → logprob: -1.437680959701538
    3. '           ' → logprob: -2.187680959701538
    4. '       ' → logprob: -5.437680721282959
    5. '   ' → logprob: -7.937680721282959
    6. ' ' → logprob: -10.062681198120117
    7. '	print' → logprob: -10.937681198120117
    8. '	       ' → logprob: -11.812681198120117
    9. '```' → logprob: -12.062681198120117
    10. '        ' → logprob: -12.437681198120117

Token 160: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.08903151005506516
    2. ' print' → logprob: -2.464031457901001
    3. '           ' → logprob: -9.464031219482422
    4. '   ' → logprob: -12.339031219482422
    5. '       ' → logprob: -12.714031219482422
    6. 'C' → logprob: -13.339031219482422
    7. ' ' → logprob: -13.339031219482422
    8. ' C' → logprob: -13.589031219482422
    9. '	print' → logprob: -14.339031219482422
    10. 'A' → logprob: -14.589031219482422

Token 161: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.018169842660427094
    2. '(' → logprob: -4.01816987991333
    3. '("("' → logprob: -11.143169403076172
    4. '("")' → logprob: -13.518169403076172
    5. '(
' → logprob: -13.643169403076172
    6. '('' → logprob: -13.643169403076172
    7. '("""' → logprob: -14.643169403076172
    8. ' ("' → logprob: -15.018169403076172
    9. '"' → logprob: -15.268169403076172
    10. '("(' → logprob: -15.393169403076172

Token 162: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.08261266350746155
    2. 'F' → logprob: -2.7076127529144287
    3. '"C' → logprob: -4.70761251449585
    4. '"' → logprob: -5.70761251449585
    5. 'D' → logprob: -8.957612991333008
    6. ''C' → logprob: -9.832612991333008
    7. 'E' → logprob: -10.957612991333008
    8. ' C' → logprob: -11.332612991333008
    9. '"D' → logprob: -11.457612991333008
    10. ''' → logprob: -12.082612991333008

Token 163: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.38701239228248596
    2. ')' → logprob: -1.1370123624801636
    3. ')")' → logprob: -9.262012481689453
    4. '")
' → logprob: -11.012012481689453
    5. ')
' → logprob: -11.012012481689453
    6. '')' → logprob: -12.262012481689453
    7. '```' → logprob: -12.262012481689453
    8. '`)' → logprob: -13.762012481689453
    9. '()' → logprob: -14.262012481689453
    10. '}")' → logprob: -14.262012481689453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 161
Tokens correctement prédits (1ère position, stricte): 78
Tokens correctement prédits (1ère position, avec adaptation): 85
Tokens correctement prédits (top 10): 146
Précision stricte (1ère position): 48.45%
Précision adaptée (1ère position): 52.80%
Précision (top 10): 90.68%
================================================================================
