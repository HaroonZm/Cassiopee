================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:22:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

N,K=map(int,input().split())
parts={}
for _ in range(K):
    p,h=input().split()
    h=int(h)
    bars=[]
    for __ in range(h-1):
        row=list(map(int,input().split()))
        bars.append(row)
    perm=list(range(N))
    # build permutation for one part
    # simulate amida
    def part_perm():
        res=perm[:]
        for row in bars:
            i=0
            while i<N-1:
                if row[i]==1:
                    res[i],res[i+1]=res[i+1],res[i]
                    i+=2
                else:
                    i+=1
        return res
    pp=part_perm()
    # Build inverse permutation for mapping top->bottom
    # Since the simulation gave final labels position, we want the permutation mapping input positions to outputs
    # The permutation pp shows the output order of input positions
    # So permutation p maps i to pp[i]
    # But to compose permutations as function composition, we use zero-based arrays,
    # where p[i] = position after transformation of i
    parts[p]=pp

E=int(input())

# Parse expression into sequence list: element is (type, value)
# type: 'part' for single part, 'seq' for sequence, 'repeat' for repeated sequence
# we parse into nested structure and then build overall permutation
#
# Grammar:
# expression := term {'+' term}
# term := factor | number '(' expression ')'
# factor := uppercase letter
# number := integer

import re
token_re=re.compile(r'[A-Z]|\d+|\+|\(|\)')

class Parser:
    def __init__(self,s):
        self.tokens=token_re.findall(s)
        self.pos=0
    def peek(self):
        return self.tokens[self.pos] if self.pos<len(self.tokens) else None
    def consume(self,t=None):
        if t is not None and self.peek()!=t:
            raise ValueError('Expected '+t+' but got '+str(self.peek()))
        v=self.peek()
        self.pos+=1
        return v
    def parse_expression(self):
        terms=[self.parse_term()]
        while self.peek()=='+':
            self.consume('+')
            terms.append(self.parse_term())
        if len(terms)==1:
            return terms[0]
        return ('seq',terms)
    def parse_term(self):
        if self.peek() and self.peek().isdigit():
            n=int(self.consume())
            self.consume('(')
            exp=self.parse_expression()
            self.consume(')')
            return ('repeat',n,exp)
        else:
            return self.parse_factor()
    def parse_factor(self):
        t=self.peek()
        if t is None:
            raise ValueError('Unexpected end')
        if re.match('[A-Z]',t):
            self.consume()
            return ('part',t)
        else:
            raise ValueError('Unexpected token '+str(t))

def compose(p,q):
    # compose two permutations p,q of size N: return p(q(x))
    # permutations are lists of size N where p[i] is image of i
    return [p[q[i]] for i in range(N)]
def pow_perm(p,k):
    # fast exponentiation of permutation p to k-th power
    res=list(range(N))
    base=p[:]
    while k>0:
        if k&1:
            res=compose(base,res)
        base=compose(base,base)
        k>>=1
    return res
def eval_exp(exp):
    if exp[0]=='part':
        return parts[exp[1]]
    if exp[0]=='seq':
        res=list(range(N))
        for sub in exp[1]:
            res=compose(eval_exp(sub),res)
        return res
    if exp[0]=='repeat':
        n,sub=exp[1],exp[2]
        p=eval_exp(sub)
        return pow_perm(p,n)

for _ in range(E):
    line=input()
    p=Parser(line)
    exp=p.parse_expression()
    ans=eval_exp(exp)
    # output: for input positions 0..N-1, numbering from 1..N
    # ans[i] is output position of i, zero-based
    # We need to output the output permutation that transforms 1..N to after amida, so output ans mapped +1
    # But the problem says output the labels at the bottom in the order from left to right
    # The labels at bottom are from top (1..N) mapped according to amida: for each i from top 1 to N,
    # we follow amida down and reach ans[i] (0-based index)
    # So output is bottom labels as per ans
    # output ans but +1
    print(*[a+1 for a in ans])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.523948907968588e-05
    2. ' .' → logprob: -11.875035285949707
    3. '.import' → logprob: -12.125035285949707
    4. '.user' → logprob: -12.875035285949707
    5. '.readline' → logprob: -12.875035285949707
    6. '.`' → logprob: -13.125035285949707
    7. '.stdout' → logprob: -13.625035285949707
    8. '[' → logprob: -13.625035285949707
    9. '.exit' → logprob: -13.875035285949707
    10. '​.' → logprob: -14.125035285949707

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -1.013696551322937
    2. '_' → logprob: -1.138696551322937
    3. 't' → logprob: -2.5136966705322266
    4. '_trace' → logprob: -2.7636966705322266
    5. 'x' → logprob: -2.8886966705322266
    6. 'default' → logprob: -4.513696670532227
    7. ' _' → logprob: -4.513696670532227
    8. '_version' → logprob: -4.638696670532227
    9. 'ex' → logprob: -4.638696670532227
    10. 'f' → logprob: -4.763696670532227

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0013267839094623923
    2. 'ursive' → logprob: -6.876326560974121
    3. 'ur' → logprob: -9.376326560974121
    4. 'urs' → logprob: -9.876326560974121
    5. '_' → logprob: -10.126326560974121
    6. 'limit' → logprob: -10.251326560974121
    7. '_limit' → logprob: -11.001326560974121
    8. 'urf' → logprob: -11.126326560974121
    9. 't' → logprob: -11.626326560974121
    10. 'ursor' → logprob: -11.876326560974121

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.15307803452014923
    2. 'limit' → logprob: -2.028078079223633
    3. '_depth' → logprob: -4.653078079223633
    4. '_' → logprob: -7.903078079223633
    5. 'depth' → logprob: -9.653078079223633
    6. ' limit' → logprob: -10.028078079223633
    7. '_rate' → logprob: -10.153078079223633
    8. '_error' → logprob: -10.403078079223633
    9. '_lim' → logprob: -10.653078079223633
    10. '_max' → logprob: -10.778078079223633

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0325924449716695e-05
    2. '(
' → logprob: -12.37501049041748
    3. ' (' → logprob: -12.50001049041748
    4. '(

' → logprob: -13.25001049041748
    5. '((' → logprob: -15.75001049041748
    6. '("("' → logprob: -15.87501049041748
    7. '('' → logprob: -16.875009536743164
    8. '(
' → logprob: -17.000009536743164
    9. '(None' → logprob: -17.500009536743164
    10. '()' → logprob: -17.500009536743164

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07892151176929474
    2. '100' → logprob: -2.5789215564727783
    3. '300' → logprob: -11.2039213180542
    4. ' ' → logprob: -11.8289213180542
    5. '500' → logprob: -12.3289213180542
    6. '999' → logprob: -12.5789213180542
    7. '200' → logprob: -14.3289213180542
    8. '150' → logprob: -14.3289213180542
    9. '1' → logprob: -14.7039213180542
    10. '   ' → logprob: -14.9539213180542

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09284054487943649
    2. '000' → logprob: -2.7178404331207275
    3. '00' → logprob: -3.8428404331207275
    4. '4' → logprob: -7.092840671539307
    5. '6' → logprob: -8.217840194702148
    6. '**' → logprob: -9.967840194702148
    7. '```' → logprob: -10.842840194702148
    8. '5' → logprob: -11.092840194702148
    9. '3' → logprob: -11.592840194702148
    10. '2' → logprob: -12.092840194702148

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0028600357472896576
    2. '6' → logprob: -6.252860069274902
    3. '9' → logprob: -7.002860069274902
    4. '8' → logprob: -10.752860069274902
    5. ' ' → logprob: -15.502860069274902
    6. '(' → logprob: -16.502859115600586
    7. '```' → logprob: -17.377859115600586
    8. '3' → logprob: -18.377859115600586
    9. ')' → logprob: -19.002859115600586
    10. '0' → logprob: -19.502859115600586

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -13.12500286102295
    3. '))' → logprob: -13.75000286102295
    4. ')
' → logprob: -16.750003814697266
    5. ')))' → logprob: -18.000003814697266
    6. ' ' → logprob: -18.125003814697266
    7. '）' → logprob: -18.625003814697266
    8. '),' → logprob: -18.750003814697266
    9. ')`' → logprob: -18.750003814697266
    10. '')' → logprob: -19.000003814697266

Token 13: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08450386673212051
    2. '\' → logprob: -2.8345038890838623
    3. '\n' → logprob: -4.709503650665283
    4. '
' → logprob: -5.709503650665283
    5. '```' → logprob: -6.459503650665283
    6. '#' → logprob: -6.459503650665283
    7. ')' → logprob: -6.709503650665283
    8. '
' → logprob: -6.834503650665283
    9. '(' → logprob: -7.334503650665283
    10. 'import' → logprob: -7.334503650665283

Token 14: ',K' (ID: 107147)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7772374749183655
    2. ' =' → logprob: -0.7772374749183655
    3. ',' → logprob: -3.2772374153137207
    4. '=' → logprob: -3.4022374153137207
    5. ' ,' → logprob: -5.527237415313721
    6. '.' → logprob: -6.277237415313721
    7. '  ' → logprob: -6.777237415313721
    8. ')' → logprob: -7.027237415313721
    9. ' )' → logprob: -7.777237415313721
    10. '[' → logprob: -8.527237892150879

Token 15: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06996533274650574
    2. '=' → logprob: -2.694965362548828
    3. ',' → logprob: -10.819965362548828
    4. ' =
' → logprob: -12.444965362548828
    5. '=int' → logprob: -12.944965362548828
    6. ' ,' → logprob: -13.694965362548828
    7. ' ' → logprob: -14.569965362548828
    8. ' =
' → logprob: -15.194965362548828
    9. '=input' → logprob: -15.444965362548828
    10. ')' → logprob: -15.819965362548828

Token 16: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.3842628300189972
    2. ' map' → logprob: -1.2592628002166748
    3. 'int' → logprob: -3.759262800216675
    4. ' int' → logprob: -4.884263038635254
    5. ' ' → logprob: -5.759263038635254
    6. '10' → logprob: -7.259263038635254
    7. '5' → logprob: -9.634263038635254
    8. '0' → logprob: -9.634263038635254
    9. '100' → logprob: -9.759263038635254
    10. '20' → logprob: -9.884263038635254

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20376081764698029
    2. '(' → logprob: -1.7037608623504639
    3. '(str' → logprob: -6.453760623931885
    4. '(input' → logprob: -7.328760623931885
    5. '(lambda' → logprob: -10.078761100769043
    6. '(list' → logprob: -10.703761100769043
    7. '(
' → logprob: -11.078761100769043
    8. 'int' → logprob: -11.703761100769043
    9. '(tuple' → logprob: -12.203761100769043
    10. '(len' → logprob: -12.203761100769043

Token 18: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04763748496770859
    2. ',input' → logprob: -3.547637462615967
    3. '(sys' → logprob: -5.172637462615967
    4. ',int' → logprob: -5.172637462615967
    5. '(' → logprob: -5.547637462615967
    6. ',(' → logprob: -6.547637462615967
    7. ',System' → logprob: -7.797637462615967
    8. ',bool' → logprob: -9.422637939453125
    9. ')' → logprob: -9.672637939453125
    10. ',float' → logprob: -9.672637939453125

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0023020319640636444
    2. '())' → logprob: -6.127302169799805
    3. '()' → logprob: -9.502302169799805
    4. ')' → logprob: -10.127302169799805
    5. '(' → logprob: -14.877302169799805
    6. '()[' → logprob: -14.877302169799805
    7. ' ().' → logprob: -15.002302169799805
    8. '());' → logprob: -15.002302169799805
    9. '();)' → logprob: -15.502302169799805
    10. '()))' → logprob: -16.002302169799805

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.3213025744771585e-05
    2. ')' → logprob: -10.750033378601074
    3. 'strip' → logprob: -12.000033378601074
    4. ' split' → logprob: -12.750033378601074
    5. 'rstrip' → logprob: -13.625033378601074
    6. '(split' → logprob: -14.625033378601074
    7. 'read' → logprob: -14.625033378601074
    8. 'spl' → logprob: -14.750033378601074
    9. '())' → logprob: -16.875032424926758
    10. '```' → logprob: -18.000032424926758

Token 21: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016056748572736979
    2. '())' → logprob: -7.12660551071167
    3. '))' → logprob: -7.25160551071167
    4. '()' → logprob: -10.376605987548828
    5. '(' → logprob: -11.001605987548828
    6. '),' → logprob: -11.251605987548828
    7. '`)' → logprob: -11.251605987548828
    8. ')`' → logprob: -11.501605987548828
    9. ' )' → logprob: -14.001605987548828
    10. '')' → logprob: -14.001605987548828

Token 22: 'parts' (ID: 34761)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5605602264404297
    2. 'A' → logprob: -1.1855602264404297
    3. 'd' → logprob: -2.9355602264404297
    4. 'dp' → logprob: -4.18556022644043
    5. 'S' → logprob: -4.31056022644043
    6. 'data' → logprob: -4.68556022644043
    7. 'D' → logprob: -4.93556022644043
    8. '```' → logprob: -5.68556022644043
    9. 'arr' → logprob: -5.93556022644043
    10. 's' → logprob: -6.06056022644043

Token 23: '={}
' (ID: 146130)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16059961915016174
    2. ' =' → logprob: -2.035599708557129
    3. '_' → logprob: -4.660599708557129
    4. '[' → logprob: -5.535599708557129
    5. 's' → logprob: -6.410599708557129
    6. '=[]' → logprob: -6.535599708557129
    7. '_count' → logprob: -8.285599708557129
    8. '.' → logprob: -8.535599708557129
    9. ')' → logprob: -8.535599708557129
    10. '[:]' → logprob: -9.160599708557129

Token 24: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004015360493212938
    2. ' for' → logprob: -6.3790154457092285
    3. 'a' → logprob: -7.2540154457092285
    4. 'parts' → logprob: -7.2540154457092285
    5. '[' → logprob: -8.87901496887207
    6. 'count' → logprob: -9.00401496887207
    7. 'dp' → logprob: -9.12901496887207
    8. 'def' → logprob: -9.62901496887207
    9. '[]' → logprob: -9.87901496887207
    10. 'A' → logprob: -10.12901496887207

Token 25: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3268567621707916
    2. ' i' → logprob: -1.3268567323684692
    3. '_' → logprob: -4.32685661315918
    4. ' ' → logprob: -8.82685661315918
    5. 'i' → logprob: -8.95185661315918
    6. ' part' → logprob: -12.20185661315918
    7. '_i' → logprob: -12.32685661315918
    8. ' parts' → logprob: -12.82685661315918
    9. ' ' → logprob: -13.82685661315918
    10. ' p' → logprob: -14.07685661315918

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1010720431804657
    2. 'in' → logprob: -2.351072072982788
    3. ' ' → logprob: -7.351071834564209
    4. 'i' → logprob: -9.351072311401367
    5. 'n' → logprob: -10.101072311401367
    6. ' i' → logprob: -10.601072311401367
    7. ' _' → logprob: -10.851072311401367
    8. ',' → logprob: -11.851072311401367
    9. '	in' → logprob: -11.851072311401367
    10. '  ' → logprob: -11.976072311401367

Token 27: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06203513219952583
    2. ' range' → logprob: -2.812035083770752
    3. 'parts' → logprob: -10.43703556060791
    4. 'input' → logprob: -11.56203556060791
    5. '[' → logprob: -11.93703556060791
    6. '(range' → logprob: -12.43703556060791
    7. 'ra' → logprob: -13.06203556060791
    8. 'r' → logprob: -13.43703556060791
    9. ' ' → logprob: -13.56203556060791
    10. '	range' → logprob: -13.56203556060791

Token 28: '(K' (ID: 28797)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5534125566482544
    2. '(' → logprob: -0.9284125566482544
    3. '(K' → logprob: -3.803412437438965
    4. ' (' → logprob: -5.053412437438965
    5. '(int' → logprob: -7.303412437438965
    6. ' N' → logprob: -8.928412437438965
    7. '(range' → logprob: -9.303412437438965
    8. '(
' → logprob: -9.303412437438965
    9. ' K' → logprob: -10.428412437438965
    10. ' range' → logprob: -10.553412437438965

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002886783331632614
    2. ')' → logprob: -6.627886772155762
    3. '):
' → logprob: -7.002886772155762
    4. '+' → logprob: -7.752886772155762
    5. ' ):' → logprob: -9.002886772155762
    6. ':' → logprob: -9.377886772155762
    7. '-' → logprob: -12.502886772155762
    8. ',' → logprob: -13.252886772155762
    9. '):
' → logprob: -13.252886772155762
    10. '():' → logprob: -13.877886772155762

Token 30: '   ' (ID: 271)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.6687980890274048
    2. '   ' → logprob: -1.1687980890274048
    3. ' part' → logprob: -3.2937979698181152
    4. ' line' → logprob: -3.7937979698181152
    5. ' token' → logprob: -3.9187979698181152
    6. ' key' → logprob: -4.418797969818115
    7. 'a' → logprob: -4.793797969818115
    8. ' a' → logprob: -4.793797969818115
    9. ' ind' → logprob: -4.793797969818115
    10. ' ' → logprob: -5.043797969818115

Token 31: ' p' (ID: 275)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.636754035949707
    2. ' a' → logprob: -2.011754035949707
    3. ' p' → logprob: -2.386754035949707
    4. 'p' (adapté à ' p') → logprob: -2.386754035949707
    5. 'x' → logprob: -2.636754035949707
    6. ' x' → logprob: -3.636754035949707
    7. 'l' → logprob: -4.761754035949707
    8. 'i' → logprob: -5.136754035949707
    9. 'u' → logprob: -5.386754035949707
    10. 's' → logprob: -5.511754035949707

Token 32: ',h' (ID: 42751)
  Prédit: 'arts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arts' → logprob: -0.10854165256023407
    2. ',' → logprob: -2.85854172706604
    3. 'art' → logprob: -3.73354172706604
    4. '=' → logprob: -4.608541488647461
    5. ' =' → logprob: -5.858541488647461
    6. ',a' → logprob: -6.358541488647461
    7. ',p' → logprob: -6.733541488647461
    8. ' ,' → logprob: -6.733541488647461
    9. '=int' → logprob: -7.358541488647461
    10. ',l' → logprob: -7.483541488647461

Token 33: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030141640454530716
    2. ' =' → logprob: -3.655141592025757
    3. '=int' → logprob: -6.655141830444336
    4. 'p' → logprob: -7.280141830444336
    5. '=input' → logprob: -7.405141830444336
    6. ',p' → logprob: -7.780141830444336
    7. '=p' → logprob: -8.030141830444336
    8. ' ' → logprob: -9.280141830444336
    9. ',' → logprob: -9.280141830444336
    10. ',i' → logprob: -9.780141830444336

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.633516252040863
    2. '()' → logprob: -0.758516252040863
    3. '())' → logprob: -7.633516311645508
    4. '(' → logprob: -8.383516311645508
    5. ')' → logprob: -10.133516311645508
    6. ' ()' → logprob: -10.633516311645508
    7. '()
' → logprob: -11.008516311645508
    8. '()>' → logprob: -11.133516311645508
    9. '()<' → logprob: -11.508516311645508
    10. '()[' → logprob: -11.758516311645508

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002017024904489517
    2. 'strip' → logprob: -6.252017021179199
    3. 'rstrip' → logprob: -9.3770170211792
    4. 'spl' → logprob: -13.5020170211792
    5. 'rs' → logprob: -13.8770170211792
    6. ' split' → logprob: -14.0020170211792
    7. 'sp' → logprob: -15.8770170211792
    8. '```' → logprob: -16.002017974853516
    9. '(split' → logprob: -16.252017974853516
    10. 's' → logprob: -16.377017974853516

Token 36: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04115547612309456
    2. '(' → logprob: -3.2911555767059326
    3. '('' → logprob: -6.5411553382873535
    4. '())' → logprob: -7.2911553382873535
    5. ')' → logprob: -7.9161553382873535
    6. '("("' → logprob: -9.041155815124512
    7. '(
' → logprob: -9.916155815124512
    8. '()[' → logprob: -10.041155815124512
    9. '(`' → logprob: -10.166155815124512
    10. '()
' → logprob: -10.291155815124512

Token 37: '   ' (ID: 271)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.9657961130142212
    2. ' parts' → logprob: -1.3407961130142212
    3. 'p' → logprob: -2.2157959938049316
    4. '<|end|>' → logprob: -2.4657959938049316
    5. '   ' → logprob: -2.7157959938049316
    6. ')' → logprob: -3.8407959938049316
    7. ' 
' → logprob: -4.215795993804932
    8. 'parts' → logprob: -4.590795993804932
    9. ',' → logprob: -4.715795993804932
    10. '    
' → logprob: -5.215795993804932

Token 38: ' h' (ID: 312)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.7845958471298218
    2. ' parts' → logprob: -1.5345958471298218
    3. '<|end|>' → logprob: -1.5345958471298218
    4. 'p' → logprob: -2.4095959663391113
    5. ' ' → logprob: -4.659595966339111
    6. 'parts' → logprob: -5.034595966339111
    7. '<|end|>' → logprob: -6.284595966339111
    8. ' 
' → logprob: -7.034595966339111
    9. ')' → logprob: -7.159595966339111
    10. '(parts' → logprob: -7.409595966339111

Token 39: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1153823733329773
    2. '=int' → logprob: -2.240382432937622
    3. ' =' → logprob: -5.990382194519043
    4. '=

' → logprob: -10.615382194519043
    5. '=
' → logprob: -11.365382194519043
    6. 'int' → logprob: -12.490382194519043
    7. ',' → logprob: -13.115382194519043
    8. '=h' → logprob: -13.490382194519043
    9. ')=' → logprob: -13.490382194519043
    10. '=Integer' → logprob: -13.740382194519043

Token 40: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.007628042250871658
    2. '(' → logprob: -4.882627964019775
    3. ' (' → logprob: -11.257628440856934
    4. ')' → logprob: -12.632628440856934
    5. '(p' → logprob: -13.507628440856934
    6. '(
' → logprob: -13.507628440856934
    7. '(H' → logprob: -13.882628440856934
    8. '(`' → logprob: -14.882628440856934
    9. ' ' → logprob: -15.132628440856934
    10. '()' → logprob: -15.382628440856934

Token 41: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02074974775314331
    2. ')
' → logprob: -3.895749807357788
    3. '   ' → logprob: -9.520750045776367
    4. ' )' → logprob: -9.645750045776367
    5. ')
' → logprob: -10.645750045776367
    6. ')p' → logprob: -11.270750045776367
    7. ' )
' → logprob: -11.770750045776367
    8. '))' → logprob: -12.270750045776367
    9. '+' → logprob: -12.645750045776367
    10. '-' → logprob: -13.020750045776367

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07056961208581924
    2. ' parts' → logprob: -2.8205695152282715
    3. ' if' → logprob: -5.3205695152282715
    4. 'parts' → logprob: -5.8205695152282715
    5. 'if' → logprob: -8.32056999206543
    6. '<|end|>' → logprob: -8.32056999206543
    7. '(parts' → logprob: -9.57056999206543
    8. ' for' → logprob: -10.32056999206543
    9. ')' → logprob: -10.44556999206543
    10. ',' → logprob: -10.57056999206543

Token 43: ' bars' (ID: 21821)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28146815299987793
    2. 'if' → logprob: -1.656468152999878
    3. ' if' → logprob: -3.156468152999878
    4. 'parts' → logprob: -4.906468391418457
    5. ' parts' → logprob: -5.531468391418457
    6. 'p' → logprob: -8.031468391418457
    7. 'for' → logprob: -9.906468391418457
    8. ' ' → logprob: -10.656468391418457
    9. '  ' → logprob: -10.781468391418457
    10. 'try' → logprob: -10.906468391418457

Token 44: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33448535203933716
    2. ' =' → logprob: -1.4594852924346924
    3. '=p' → logprob: -3.2094852924346924
    4. '=[]' → logprob: -5.4594855308532715
    5. '[p' → logprob: -6.4594855308532715
    6. '=set' → logprob: -6.4594855308532715
    7. '=[' → logprob: -7.0844855308532715
    8. ',p' → logprob: -7.3344855308532715
    9. '=int' → logprob: -7.4594855308532715
    10. ',' → logprob: -7.8344855308532715

Token 45: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2725580930709839
    2. ' for' → logprob: -1.6475580930709839
    3. 'parts' → logprob: -4.272558212280273
    4. 'bars' → logprob: -4.897558212280273
    5. ' bars' → logprob: -5.272558212280273
    6. ' parts' → logprob: -5.272558212280273
    7. 'if' → logprob: -5.647558212280273
    8. 'p' → logprob: -6.022558212280273
    9. ' if' → logprob: -6.397558212280273
    10. ' ' → logprob: -6.647558212280273

Token 47: ' __' (ID: 2516)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4557648301124573
    2. '_' → logprob: -1.0807647705078125
    3. ' i' → logprob: -4.0807647705078125
    4. 'i' → logprob: -5.2057647705078125
    5. ' __' → logprob: -6.5807647705078125
    6. '_i' → logprob: -6.8307647705078125
    7. '__' → logprob: -7.2057647705078125
    8. ' ' → logprob: -7.9557647705078125
    9. '___' → logprob: -8.455764770507812
    10. ' j' → logprob: -8.580764770507812

Token 48: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005992432124912739
    2. 'in' → logprob: -5.130992412567139
    3. '_' → logprob: -10.755992889404297
    4. ' ' → logprob: -11.255992889404297
    5. 'range' → logprob: -11.255992889404297
    6. 's' → logprob: -12.255992889404297
    7. ' _' → logprob: -12.380992889404297
    8. ' range' → logprob: -13.880992889404297
    9. '_in' → logprob: -13.880992889404297
    10. ')' → logprob: -14.693492889404297

Token 49: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17976923286914825
    2. ' range' → logprob: -1.8047692775726318
    3. 'rang' → logprob: -12.554769515991211
    4. 'r' → logprob: -12.804769515991211
    5. '	range' → logprob: -12.804769515991211
    6. ' ' → logprob: -12.929769515991211
    7. 'ran' → logprob: -13.054769515991211
    8. 'p' → logprob: -13.304769515991211
    9. 'input' → logprob: -13.429769515991211
    10. 'ra' → logprob: -13.804769515991211

Token 50: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0015955570852383971
    2. 'h' → logprob: -6.501595497131348
    3. '(p' → logprob: -10.126595497131348
    4. '(' → logprob: -10.501595497131348
    5. '	h' → logprob: -12.126595497131348
    6. ' (' → logprob: -12.251595497131348
    7. '(int' → logprob: -12.376595497131348
    8. ' h' → logprob: -12.626595497131348
    9. '   ' → logprob: -12.751595497131348
    10. '(N' → logprob: -13.626595497131348

Token 51: '-' (ID: 12)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20827241241931915
    2. '):' → logprob: -1.7082724571228027
    3. '   ' → logprob: -5.708272457122803
    4. ')' → logprob: -6.333272457122803
    5. '):
' → logprob: -7.208272457122803
    6. '       ' → logprob: -7.958272457122803
    7. '+' → logprob: -8.083271980285645
    8. '-' → logprob: -8.958271980285645
    9. ' ' → logprob: -9.833271980285645
    10. ' ):
' → logprob: -10.833271980285645

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08398457616567612
    2. ' ' → logprob: -2.958984613418579
    3. '-' → logprob: -3.958984613418579
    4. '2' → logprob: -5.333984375
    5. ' -' → logprob: -6.458984375
    6. ')' → logprob: -7.083984375
    7. '0' → logprob: -7.083984375
    8. 'h' → logprob: -8.771484375
    9. '+' → logprob: -8.771484375
    10. 'int' → logprob: -9.208984375

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.44425320625305176
    2. ')' → logprob: -1.8192532062530518
    3. '):
' → logprob: -1.8192532062530518
    4. '   ' → logprob: -3.9442532062530518
    5. ',' → logprob: -5.319252967834473
    6. ':' → logprob: -5.569252967834473
    7. '       ' → logprob: -6.069252967834473
    8. '+' → logprob: -6.944252967834473
    9. ')
' → logprob: -7.069252967834473
    10. ' )' → logprob: -8.069252967834473

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14304304122924805
    2. '   ' → logprob: -2.268043041229248
    3. '	   ' → logprob: -4.143043041229248
    4. '	' → logprob: -5.393043041229248
    5. '    ' → logprob: -5.643043041229248
    6. 's' → logprob: -6.643043041229248
    7. '	s' → logprob: -7.768043041229248
    8. '	bar' → logprob: -7.768043041229248
    9. ' bars' → logprob: -8.018043518066406
    10. '' → logprob: -8.268043518066406

Token 55: ' row' (ID: 5225)
  Prédit: ' bars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bars' → logprob: -0.2321922928094864
    2. '   ' → logprob: -2.607192277908325
    3. ' bar' → logprob: -3.232192277908325
    4. 'bars' → logprob: -4.232192516326904
    5. ' parts' → logprob: -4.607192516326904
    6. ' p' → logprob: -4.607192516326904
    7. ' _' → logprob: -4.732192516326904
    8. '       ' → logprob: -4.857192516326904
    9. '_' → logprob: -4.982192516326904
    10. 'bar' → logprob: -4.982192516326904

Token 56: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8465550541877747
    2. '=input' → logprob: -0.9715550541877747
    3. 's' → logprob: -2.22155499458313
    4. ' =' → logprob: -4.096555233001709
    5. '=[]' → logprob: -4.221555233001709
    6. '=list' → logprob: -4.471555233001709
    7. '+=' → logprob: -4.596555233001709
    8. '=int' → logprob: -4.971555233001709
    9. ',' → logprob: -5.096555233001709
    10. '.append' → logprob: -5.471555233001709

Token 57: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0038937802892178297
    2. '(input' → logprob: -5.628893852233887
    3. '(' → logprob: -8.253893852233887
    4. '(int' → logprob: -10.503893852233887
    5. '()' → logprob: -13.378893852233887
    6. 'map' → logprob: -13.878893852233887
    7. '(range' → logprob: -13.878893852233887
    8. '(filter' → logprob: -14.378893852233887
    9. '(row' → logprob: -15.003893852233887
    10. '(str' → logprob: -15.128893852233887

Token 58: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.2007883671903983e-05
    2. '(' → logprob: -11.750021934509277
    3. 'int' → logprob: -12.375021934509277
    4. '(str' → logprob: -12.750021934509277
    5. '(lambda' → logprob: -12.875021934509277
    6. ',int' → logprob: -13.125021934509277
    7. '=int' → logprob: -14.000021934509277
    8. '[int' → logprob: -14.625021934509277
    9. '<int' → logprob: -15.250021934509277
    10. ' int' → logprob: -15.250021934509277

Token 59: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3524961769580841
    2. ',input' → logprob: -1.2274961471557617
    3. '(' → logprob: -6.102496147155762
    4. ',' → logprob: -6.602496147155762
    5. 'input' → logprob: -7.852496147155762
    6. '(sys' → logprob: -10.852496147155762
    7. ' input' → logprob: -11.727496147155762
    8. ')' → logprob: -12.227496147155762
    9. ',int' → logprob: -12.727496147155762
    10. ',list' → logprob: -12.852496147155762

Token 60: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.531315314830863e-06
    2. '()' → logprob: -13.500003814697266
    3. ' ().' → logprob: -13.500003814697266
    4. '.' → logprob: -15.250003814697266
    5. '()))' → logprob: -15.625003814697266
    6. '))' → logprob: -16.625003814697266
    7. '(' → logprob: -16.875003814697266
    8. ')' → logprob: -17.500003814697266
    9. ' .' → logprob: -17.500003814697266
    10. '   ' → logprob: -17.875003814697266

Token 61: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00011510594777064398
    2. 'strip' → logprob: -9.125115394592285
    3. 'rstrip' → logprob: -12.375115394592285
    4. ' split' → logprob: -13.500115394592285
    5. 'read' → logprob: -15.125115394592285
    6. '(split' → logprob: -15.750115394592285
    7. 's' → logprob: -16.50011444091797
    8. 'spl' → logprob: -17.75011444091797
    9. ')' → logprob: -19.25011444091797
    10. ' ' → logprob: -19.37511444091797

Token 62: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.021909119561314583
    2. '))' → logprob: -4.771909236907959
    3. '()' → logprob: -5.146909236907959
    4. '())' → logprob: -5.146909236907959
    5. '(' → logprob: -6.896909236907959
    6. '()))
' → logprob: -7.771909236907959
    7. ')' → logprob: -9.3969087600708
    8. '()));' → logprob: -11.0219087600708
    9. '())))' → logprob: -11.6469087600708
    10. '())
' → logprob: -12.0219087600708

Token 63: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014176911674439907
    2. ')
' → logprob: -5.014176845550537
    3. '       ' → logprob: -5.139176845550537
    4. '   ' → logprob: -6.889176845550537
    5. ' )' → logprob: -8.389177322387695
    6. '[' → logprob: -9.639177322387695
    7. ']' → logprob: -9.764177322387695
    8. '<|end|>' → logprob: -10.139177322387695
    9. '),' → logprob: -10.639177322387695
    10. '           ' → logprob: -11.014177322387695

Token 64: ' bars' (ID: 21821)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08685071766376495
    2. 'bars' (adapté à ' bars') → logprob: -3.461850643157959
    3. ' bars' → logprob: -3.586850643157959
    4. '       ' → logprob: -4.711850643157959
    5. 'rows' → logprob: -4.836850643157959
    6. '   ' → logprob: -6.461850643157959
    7. '.' → logprob: -6.961850643157959
    8. '-bars' → logprob: -7.211850643157959
    9. ')
' → logprob: -7.586850643157959
    10. 'parts' → logprob: -7.586850643157959

Token 65: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008955133147537708
    2. '.' → logprob: -4.758955001831055
    3. '.extend' → logprob: -8.008955001831055
    4. '.ap' → logprob: -12.883955001831055
    5. ' .' → logprob: -12.883955001831055
    6. '.app' → logprob: -13.008955001831055
    7. '.add' → logprob: -15.133955001831055
    8. '.setdefault' → logprob: -15.633955001831055
    9. '.push' → logprob: -16.258955001831055
    10. ' +=' → logprob: -17.508955001831055

Token 66: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.001173321157693863
    2. '(' → logprob: -6.751173496246338
    3. '(list' → logprob: -13.50117301940918
    4. '(tuple' → logprob: -13.75117301940918
    5. '(rows' → logprob: -15.12617301940918
    6. 'row' → logprob: -15.62617301940918
    7. '((' → logprob: -16.00117301940918
    8. '(
' → logprob: -16.87617301940918
    9. '(line' → logprob: -17.25117301940918
    10. '(r' → logprob: -17.50117301940918

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.24179228907451e-05
    2. ')
' → logprob: -9.875061988830566
    3. ' )' → logprob: -12.000061988830566
    4. '))' → logprob: -13.000061988830566
    5. '   ' → logprob: -13.625061988830566
    6. ')
' → logprob: -15.500061988830566
    7. ')`' → logprob: -15.750061988830566
    8. '       ' → logprob: -16.250062942504883
    9. ')

' → logprob: -16.250062942504883
    10. '`)' → logprob: -16.375062942504883

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23343801498413086
    2. ')' → logprob: -2.108438014984131
    3. '<|end|>' → logprob: -2.608438014984131
    4. ']' → logprob: -5.358438014984131
    5. ' parts' → logprob: -5.983438014984131
    6. '}' → logprob: -6.233438014984131
    7. 'parts' → logprob: -6.858438014984131
    8. '```' → logprob: -7.858438014984131
    9. '[]' → logprob: -8.233438491821289
    10. '
' → logprob: -8.608438491821289

Token 69: ' perm' (ID: 5961)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2604546546936035
    2. 'parts' → logprob: -2.8854546546936035
    3. ')' → logprob: -3.0104546546936035
    4. ']' → logprob: -3.2604546546936035
    5. ' parts' → logprob: -3.6354546546936035
    6. 'bars' → logprob: -4.6354546546936035
    7. '<|end|>' → logprob: -4.6354546546936035
    8. 'if' → logprob: -5.0104546546936035
    9. ' if' → logprob: -5.2604546546936035
    10. 'for' → logprob: -5.3854546546936035

Token 70: '=list' (ID: 93413)
  Prédit: 'utations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'utations' → logprob: -0.15441389381885529
    2. 's' → logprob: -2.154413938522339
    3. 'utation' → logprob: -4.02941370010376
    4. '=' → logprob: -5.15441370010376
    5. '=[]' → logprob: -6.90441370010376
    6. '={}' → logprob: -7.40441370010376
    7. 'uts' → logprob: -7.52941370010376
    8. 'ut' → logprob: -7.52941370010376
    9. ' =' → logprob: -8.404414176940918
    10. 'utable' → logprob: -8.904414176940918

Token 71: '(range' (ID: 50017)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.023248156532645226
    2. '(' → logprob: -3.8982481956481934
    3. '(range' → logprob: -6.023248195648193
    4. '(per' → logprob: -9.148247718811035
    5. '(input' → logprob: -9.273247718811035
    6. '(int' → logprob: -10.523247718811035
    7. '(sorted' → logprob: -11.148247718811035
    8. '(it' → logprob: -11.773247718811035
    9. '()' → logprob: -12.023247718811035
    10. 'map' → logprob: -12.273247718811035

Token 72: '(N' (ID: 10564)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.5131110548973083
    2. '(N' → logprob: -1.2631111145019531
    3. '(' → logprob: -2.888111114501953
    4. '(K' → logprob: -3.138111114501953
    5. '(n' → logprob: -4.763111114501953
    6. '(len' → logprob: -4.888111114501953
    7. '(p' → logprob: -6.263111114501953
    8. '(H' → logprob: -7.388111114501953
    9. '(k' → logprob: -7.763111114501953
    10. '(M' → logprob: -9.513111114501953

Token 73: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001069727586582303
    2. ')' → logprob: -7.50106954574585
    3. '))
' → logprob: -8.126070022583008
    4. ' ))' → logprob: -9.251070022583008
    5. ')))' → logprob: -9.251070022583008
    6. '-' → logprob: -11.626070022583008
    7. '+' → logprob: -12.876070022583008
    8. '))

' → logprob: -13.001070022583008
    9. ',' → logprob: -13.251070022583008
    10. ' )' → logprob: -13.251070022583008

Token 74: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' build' (ID: 3024)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42660650610923767
    2. '<|end|>' → logprob: -1.92660653591156
    3. '#' → logprob: -2.5516064167022705
    4. '[' → logprob: -3.6766064167022705
    5. ')' → logprob: -4.17660665512085
    6. ' for' → logprob: -4.67660665512085
    7. ']' → logprob: -4.67660665512085
    8. ' ]' → logprob: -4.80160665512085
    9. 'for' → logprob: -5.05160665512085
    10. '```' → logprob: -5.67660665512085

Token 77: ' permutation' (ID: 135200)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3861481547355652
    2. '[' → logprob: -1.26114821434021
    3. ' =' → logprob: -4.636147975921631
    4. '=' → logprob: -4.886147975921631
    5. ']' → logprob: -5.386147975921631
    6. '<|end|>' → logprob: -5.511147975921631
    7. '_' → logprob: -5.636147975921631
    8. '[:]' → logprob: -7.136147975921631
    9. '[p' → logprob: -7.261147975921631
    10. ':' → logprob: -7.511147975921631

Token 79: ' one' (ID: 1001)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.07400886714458466
    2. 'p' → logprob: -3.8240089416503906
    3. ' h' → logprob: -4.449008941650391
    4. ' each' → logprob: -4.449008941650391
    5. ' the' → logprob: -4.949008941650391
    6. ' bar' → logprob: -5.824008941650391
    7. ' i' → logprob: -5.949008941650391
    8. ' ' → logprob: -6.324008941650391
    9. '_' → logprob: -6.449008941650391
    10. 'h' → logprob: -6.699008941650391

Token 80: ' part' (ID: 997)
  Prédit: ' bar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bar' → logprob: -0.40207111835479736
    2. 'bar' → logprob: -2.902070999145508
    3. 'row' → logprob: -3.152070999145508
    4. ' day' → logprob: -3.277070999145508
    5. 'h' → logprob: -3.652070999145508
    6. '<|end|>' → logprob: -3.902070999145508
    7. 'day' → logprob: -4.027070999145508
    8. ' step' → logprob: -4.027070999145508
    9. 'p' → logprob: -4.652070999145508
    10. 'layer' → logprob: -4.777070999145508

Token 81: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15764404833316803
    2. '   ' → logprob: -3.157644033432007
    3. ' for' → logprob: -3.407644033432007
    4. '[' → logprob: -3.782644033432007
    5. 'for' → logprob: -3.907644033432007
    6. '<|end|>' → logprob: -5.157644271850586
    7. ']' → logprob: -5.407644271850586
    8. ' )' → logprob: -6.032644271850586
    9. '=' → logprob: -6.282644271850586
    10. '.' → logprob: -6.532644271850586

Token 82: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23097844421863556
    2. '[' → logprob: -2.105978488922119
    3. '   ' → logprob: -3.855978488922119
    4. '<|end|>' → logprob: -4.105978488922119
    5. ':' → logprob: -4.480978488922119
    6. ' ' → logprob: -4.855978488922119
    7. ']' → logprob: -5.230978488922119
    8. ' =' → logprob: -5.480978488922119
    9. '=' → logprob: -5.605978488922119
    10. '.' → logprob: -5.855978488922119

Token 83: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6177189350128174
    2. 'for' → logprob: -1.2427189350128174
    3. ' for' → logprob: -2.3677189350128174
    4. ']' → logprob: -3.4927189350128174
    5. '[' → logprob: -3.6177189350128174
    6. '   ' → logprob: -4.617718696594238
    7. 'p' → logprob: -5.992718696594238
    8. '=' → logprob: -6.867718696594238
    9. ' )' → logprob: -6.867718696594238
    10. ' =' → logprob: -7.242718696594238

Token 84: ' simulate' (ID: 66687)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9282637238502502
    2. ')' → logprob: -1.3032636642456055
    3. ' for' → logprob: -1.3032636642456055
    4. '   ' → logprob: -3.1782636642456055
    5. '[' → logprob: -5.1782636642456055
    6. ']' → logprob: -5.4282636642456055
    7. '<|end|>' → logprob: -5.4282636642456055
    8. '	for' → logprob: -7.3032636642456055
    9. '```' → logprob: -7.4282636642456055
    10. ' )' → logprob: -7.6782636642456055

Token 85: ' am' (ID: 939)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5490251779556274
    2. ' for' → logprob: -1.2990251779556274
    3. ')' → logprob: -2.299025058746338
    4. '<|end|>' → logprob: -3.299025058746338
    5. '   ' → logprob: -5.924025058746338
    6. '<|end|>' → logprob: -6.049025058746338
    7. 'def' → logprob: -6.924025058746338
    8. ' bars' → logprob: -7.049025058746338
    9. ']' → logprob: -7.549025058746338
    10. ' ' → logprob: -7.924025058746338

Token 86: 'ida' (ID: 2261)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.6773416996002197
    2. 'ong' → logprob: -1.8023416996002197
    3. 'ount' → logprob: -2.0523416996002197
    4. 'b' → logprob: -3.5523416996002197
    5. 'plitude' → logprob: -3.5523416996002197
    6. 'p' → logprob: -4.052341461181641
    7. 'm' → logprob: -4.302341461181641
    8. 'end' → logprob: -4.552341461181641
    9. 'alg' → logprob: -4.802341461181641
    10. 'ort' → logprob: -4.927341461181641

Token 87: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16623327136039734
    2. '<|end|>' → logprob: -2.7912333011627197
    3. ':' → logprob: -4.166233062744141
    4. '[' → logprob: -4.291233062744141
    5. ' for' → logprob: -4.291233062744141
    6. 'for' → logprob: -4.416233062744141
    7. ' =' → logprob: -4.541233062744141
    8. '=' → logprob: -4.916233062744141
    9. ']' → logprob: -5.291233062744141
    10. '   ' → logprob: -5.666233062744141

Token 88: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5282854437828064
    2. ' for' → logprob: -0.9032854437828064
    3. '   ' → logprob: -5.403285503387451
    4. ')' → logprob: -8.028285026550293
    5. ' ' → logprob: -9.778285026550293
    6. '	for' → logprob: -10.028285026550293
    7. '<|end|>' → logprob: -10.153285026550293
    8. '```' → logprob: -10.403285026550293
    9. '[' → logprob: -10.528285026550293
    10. '    ' → logprob: -11.028285026550293

Token 90: ' part' (ID: 997)
  Prédit: ' am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' am' → logprob: -0.47772011160850525
    2. ' simulate' → logprob: -1.1027201414108276
    3. ' dfs' → logprob: -3.852720022201538
    4. 'simulate' → logprob: -4.102720260620117
    5. ' sim' → logprob: -5.602720260620117
    6. ' perm' → logprob: -6.227720260620117
    7. ' build' → logprob: -6.852720260620117
    8. ' solve' → logprob: -7.102720260620117
    9. ' ' → logprob: -7.602720260620117
    10. 'dfs' → logprob: -8.227720260620117

Token 91: '_perm' (ID: 128866)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25641393661499023
    2. '_per' → logprob: -2.7564139366149902
    3. '_' → logprob: -3.6314139366149902
    4. '_swap' → logprob: -3.7564139366149902
    5. '(_' → logprob: -4.25641393661499
    6. '(p' → logprob: -4.25641393661499
    7. '_part' → logprob: -4.38141393661499
    8. '(step' → logprob: -4.63141393661499
    9. '_map' → logprob: -5.13141393661499
    10. '(n' → logprob: -5.13141393661499

Token 92: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01877077855169773
    2. '(n' → logprob: -5.018770694732666
    3. '(p' → logprob: -5.518770694732666
    4. '():' → logprob: -5.768770694732666
    5. '(i' → logprob: -7.268770694732666
    6. '(u' → logprob: -8.018771171569824
    7. '(line' → logprob: -8.143771171569824
    8. '(token' → logprob: -8.143771171569824
    9. '(N' → logprob: -8.268771171569824
    10. '(s' → logprob: -8.268771171569824

Token 93: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2476468086242676
    2. '       ' → logprob: -1.2476468086242676
    3. ' ' → logprob: -2.1226468086242676
    4. '<|end|>' → logprob: -2.2476468086242676
    5. '    ' → logprob: -2.9976468086242676
    6. '   ' → logprob: -3.2476468086242676
    7. '
' → logprob: -3.6226468086242676
    8. ')' → logprob: -3.9976468086242676
    9. '\n' → logprob: -4.372646808624268
    10. ':' → logprob: -4.372646808624268

Token 94: ' res' (ID: 694)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.731421947479248
    2. 'for' → logprob: -1.481421947479248
    3. 'i' → logprob: -1.981421947479248
    4. ' i' → logprob: -2.856421947479248
    5. '   ' → logprob: -2.981421947479248
    6. '    ' → logprob: -4.481421947479248
    7. 'p' → logprob: -5.106421947479248
    8. '       ' → logprob: -5.231421947479248
    9. ' p' → logprob: -5.481421947479248
    10. 'n' → logprob: -5.856421947479248

Token 95: '=' (ID: 28)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.8440955877304077
    2. '=' → logprob: -1.0940955877304077
    3. ' =' → logprob: -1.8440955877304077
    4. '=[' → logprob: -2.5940957069396973
    5. '=[]
' → logprob: -6.969095706939697
    6. ' =[' → logprob: -7.844095706939697
    7. '={}' → logprob: -8.344095230102539
    8. '=list' → logprob: -8.469095230102539
    9. '[:]' → logprob: -8.594095230102539
    10. '=len' → logprob: -9.594095230102539

Token 96: 'perm' (ID: 34794)
  Prédit: 'perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.035157181322574615
    2. 'list' → logprob: -3.6601572036743164
    3. '[' → logprob: -4.910157203674316
    4. ' perm' → logprob: -6.910157203674316
    5. 'per' → logprob: -8.910157203674316
    6. ' list' → logprob: -9.285157203674316
    7. '[]' → logprob: -9.535157203674316
    8. '   ' → logprob: -10.535157203674316
    9. '[list' → logprob: -10.535157203674316
    10. ' [' → logprob: -10.785157203674316

Token 97: '[:' (ID: 7808)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.016494937241077423
    2. '.copy' → logprob: -4.6414947509765625
    3. '[:' → logprob: -5.0164947509765625
    4. '[' → logprob: -9.766494750976562
    5. '=' → logprob: -11.266494750976562
    6. ' =' → logprob: -12.141494750976562
    7. '[::-' → logprob: -12.516494750976562
    8. '.' → logprob: -12.641494750976562
    9. 'copy' → logprob: -13.141494750976562
    10. ':' → logprob: -13.891494750976562

Token 98: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.1349773406982422
    2. ']' → logprob: -2.134977340698242
    3. ']
' → logprob: -5.009977340698242
    4. ']

' → logprob: -7.759977340698242
    5. ')
' → logprob: -8.134977340698242
    6. '
' → logprob: -8.134977340698242
    7. ')' → logprob: -8.884977340698242
    8. '
' → logprob: -9.759977340698242
    9. ' ]
' → logprob: -10.384977340698242
    10. ' ]' → logprob: -10.759977340698242

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13789159059524536
    2. '<|end|>' → logprob: -2.3878915309906006
    3. '
' → logprob: -3.8878915309906006
    4. ' for' → logprob: -4.26289176940918
    5. 'for' → logprob: -7.13789176940918
    6. '   ' → logprob: -7.63789176940918
    7. '<|end|>' → logprob: -7.63789176940918
    8. ')' → logprob: -7.88789176940918
    9. 'def' → logprob: -10.01289176940918
    10. '        
' → logprob: -10.13789176940918

Token 100: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005293221911415458
    2. ' for' → logprob: -7.6255292892456055
    3. '       ' → logprob: -10.750529289245605
    4. '   ' → logprob: -10.875529289245605
    5. '	for' → logprob: -14.375529289245605
    6. 'i' → logprob: -16.000530242919922
    7. '```' → logprob: -16.875530242919922
    8. 'n' → logprob: -17.125530242919922
    9. '
' → logprob: -18.000530242919922
    10. 'def' → logprob: -18.375530242919922

Token 101: ' row' (ID: 5225)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.1281150579452515
    2. ' bar' → logprob: -1.3781150579452515
    3. 'i' → logprob: -1.8781150579452515
    4. ' row' → logprob: -2.253115177154541
    5. 'bar' → logprob: -3.003115177154541
    6. 'row' → logprob: -3.253115177154541
    7. ' bars' → logprob: -3.378115177154541
    8. 'bars' → logprob: -4.753115177154541
    9. ' b' → logprob: -5.003115177154541
    10. 'b' → logprob: -5.128115177154541

Token 102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014233322814106941
    2. 'in' → logprob: -4.264233112335205
    3. ' ' → logprob: -10.514233589172363
    4. '   ' → logprob: -11.139233589172363
    5. '  ' → logprob: -11.639233589172363
    6. '    ' → logprob: -12.639233589172363
    7. '_in' → logprob: -12.639233589172363
    8. 's' → logprob: -13.014233589172363
    9. '	in' → logprob: -13.389233589172363
    10. '<|end|>' → logprob: -13.889233589172363

Token 103: ' bars' (ID: 21821)
  Prédit: 'bars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bars' → logprob: -0.026469819247722626
    2. ' bars' → logprob: -3.7764697074890137
    3. 'range' → logprob: -5.901469707489014
    4. ' range' → logprob: -8.526470184326172
    5. 'rows' → logprob: -8.776470184326172
    6. '   ' → logprob: -10.151470184326172
    7. 'b' → logprob: -10.276470184326172
    8. 'bar' → logprob: -10.526470184326172
    9. 'row' → logprob: -11.526470184326172
    10. 'parts' → logprob: -12.526470184326172

Token 104: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038705902989022434
    2. ':
' → logprob: -8.000387191772461
    3. ' :' → logprob: -10.375387191772461
    4. ',' → logprob: -12.125387191772461
    5. '):' → logprob: -12.375387191772461
    6. ' in' → logprob: -12.875387191772461
    7. '[::-' → logprob: -12.875387191772461
    8. '[' → logprob: -13.375387191772461
    9. '       ' → logprob: -14.000387191772461
    10. ':**' → logprob: -14.375387191772461

Token 105: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031524449586868286
    2. ' for' → logprob: -3.531524419784546
    3. 'for' → logprob: -7.531524658203125
    4. '<|end|>' → logprob: -7.531524658203125
    5. '	       ' → logprob: -8.531524658203125
    6. ',' → logprob: -8.906524658203125
    7. ' ' → logprob: -9.656524658203125
    8. '       ' → logprob: -9.906524658203125
    9. '         ' → logprob: -10.406524658203125
    10. '
' → logprob: -10.531524658203125

Token 106: ' i' (ID: 575)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25208649039268494
    2. 'for' → logprob: -1.5020865201950073
    3. ' i' → logprob: -9.502086639404297
    4. '       ' → logprob: -10.752086639404297
    5. '           ' → logprob: -10.877086639404297
    6. '               ' → logprob: -11.002086639404297
    7. 'i' (adapté à ' i') → logprob: -11.502086639404297
    8. ' ' → logprob: -11.627086639404297
    9. '	for' → logprob: -12.252086639404297
    10. '   ' → logprob: -13.627086639404297

Token 107: '=' (ID: 28)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2917152941226959
    2. '=' → logprob: -1.6667152643203735
    3. 'n' → logprob: -3.416715383529663
    4. ' =' → logprob: -4.666715145111084
    5. 'in' → logprob: -4.666715145111084
    6. ' ' → logprob: -4.791715145111084
    7. ' range' → logprob: -6.416715145111084
    8. 'range' → logprob: -7.541715145111084
    9. '   ' → logprob: -7.791715145111084
    10. 'nd' → logprob: -7.916715145111084

Token 108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006291598547250032
    2. ' ' → logprob: -7.37562894821167
    3. '1' → logprob: -12.875629425048828
    4. 'len' → logprob: -17.250629425048828
    5. '<|end|>' → logprob: -18.250629425048828
    6. '[' → logprob: -18.500629425048828
    7. '  ' → logprob: -18.563129425048828
    8. '
' → logprob: -18.750629425048828
    9. '   ' → logprob: -18.813129425048828
    10. '2' → logprob: -18.813129425048828

Token 109: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5270802974700928
    2. 'while' (adapté à ' while') → logprob: -0.9020802974700928
    3. '<|end|>' → logprob: -6.027080535888672
    4. ' i' → logprob: -7.652080535888672
    5. '
' → logprob: -7.777080535888672
    6. 'i' → logprob: -8.027080535888672
    7. '<|end|>' → logprob: -9.152080535888672
    8. 'While' → logprob: -9.777080535888672
    9. ' While' → logprob: -10.402080535888672
    10. ' ' → logprob: -10.402080535888672

Token 112: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5231441855430603
    2. ' i' → logprob: -0.8981441855430603
    3. '(i' → logprob: -11.898143768310547
    4. ' ' → logprob: -12.523143768310547
    5. '	i' → logprob: -12.898143768310547
    6. 'True' → logprob: -13.398143768310547
    7. '```' → logprob: -13.398143768310547
    8. ' True' → logprob: -14.398143768310547
    9. '<i' → logprob: -14.460643768310547
    10. '   ' → logprob: -14.835643768310547

Token 113: '<N' (ID: 60262)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.09353744983673096
    2. '<len' → logprob: -2.8435373306274414
    3. ' <' → logprob: -3.7185373306274414
    4. '<N' → logprob: -5.093537330627441
    5. '<n' → logprob: -7.718537330627441
    6. '+' → logprob: -9.218537330627441
    7. ' ' → logprob: -9.718537330627441
    8. '<K' → logprob: -10.968537330627441
    9. '<size' → logprob: -11.093537330627441
    10. '<num' → logprob: -11.468537330627441

Token 114: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01893443986773491
    2. ' -' → logprob: -4.01893424987793
    3. ':
' → logprob: -7.89393424987793
    4. '1' → logprob: -8.14393424987793
    5. '           ' → logprob: -10.39393424987793
    6. '       ' → logprob: -10.64393424987793
    7. ' ' → logprob: -10.89393424987793
    8. ':' → logprob: -11.64393424987793
    9. '   ' → logprob: -11.76893424987793
    10. '):
' → logprob: -11.76893424987793

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2020991056924686e-05
    2. ' ' → logprob: -10.375032424926758
    3. '   ' → logprob: -15.750032424926758
    4. '-' → logprob: -16.187532424926758
    5. '```' → logprob: -16.375032424926758
    6. '2' → logprob: -16.937532424926758
    7. '１' → logprob: -17.125032424926758
    8. 'i' → logprob: -17.312532424926758
    9. '  ' → logprob: -17.625032424926758
    10. 'row' → logprob: -17.687532424926758

Token 116: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1891983151435852
    2. ':' → logprob: -1.8141982555389404
    3. ' and' → logprob: -4.9391984939575195
    4. '               ' → logprob: -7.0641984939575195
    5. 'and' → logprob: -7.4391984939575195
    6. '           ' → logprob: -8.06419849395752
    7. '):
' → logprob: -8.68919849395752
    8. ' :
' → logprob: -9.31419849395752
    9. ':

' → logprob: -9.68919849395752
    10. '       ' → logprob: -10.56419849395752

Token 117: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03741905465722084
    2. ' if' → logprob: -4.412418842315674
    3. '<|end|>' → logprob: -4.537418842315674
    4. '           ' → logprob: -4.912418842315674
    5. ' ' → logprob: -6.037418842315674
    6. '                
' → logprob: -7.287418842315674
    7. '                ' → logprob: -7.537418842315674
    8. ':
' → logprob: -7.537418842315674
    9. '       ' → logprob: -8.037419319152832
    10. '            ' → logprob: -8.162419319152832

Token 118: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0337570384144783
    2. 'if' (adapté à ' if') → logprob: -3.658756971359253
    3. ' ' → logprob: -5.033757209777832
    4. '<|end|>' → logprob: -7.783757209777832
    5. '               ' → logprob: -9.033757209777832
    6. ' 
' → logprob: -9.033757209777832
    7. '                ' → logprob: -9.033757209777832
    8. '           ' → logprob: -10.158757209777832
    9. '                   ' → logprob: -11.033757209777832
    10. '<|end|>' → logprob: -11.158757209777832

Token 119: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.08936133235692978
    2. 'row' → logprob: -2.4643614292144775
    3. ' i' → logprob: -8.464361190795898
    4. '(row' → logprob: -9.214361190795898
    5. 'i' → logprob: -9.714361190795898
    6. ' ' → logprob: -10.964361190795898
    7. '	row' → logprob: -11.339361190795898
    8. ' (' → logprob: -11.839361190795898
    9. '   ' → logprob: -12.589361190795898
    10. '    ' → logprob: -13.214361190795898

Token 120: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011844364780699834
    2. ' [' → logprob: -9.250118255615234
    3. '[' → logprob: -10.875118255615234
    4. ' i' → logprob: -13.500118255615234
    5. 'i' → logprob: -14.500118255615234
    6. '```' → logprob: -14.875118255615234
    7. '\[' → logprob: -15.250118255615234
    8. '   ' → logprob: -16.000118255615234
    9. '==' → logprob: -16.250118255615234
    10. '(i' → logprob: -16.375118255615234

Token 121: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.4241223633289337
    2. '==' → logprob: -1.1741223335266113
    3. ':' → logprob: -4.049122333526611
    4. ' ==' → logprob: -4.799122333526611
    5. ']:' → logprob: -5.174122333526611
    6. ']' → logprob: -5.924122333526611
    7. ']:
' → logprob: -6.674122333526611
    8. ':
' → logprob: -7.424122333526611
    9. '<|end|>' → logprob: -9.17412281036377
    10. '<|end|>' → logprob: -9.17412281036377

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009573166607879102
    2. ' ' → logprob: -7.000957489013672
    3. '0' → logprob: -10.500957489013672
    4. '   ' → logprob: -11.750957489013672
    5. '2' → logprob: -12.250957489013672
    6. ''' → logprob: -13.125957489013672
    7. '-' → logprob: -13.750957489013672
    8. 'True' → logprob: -13.750957489013672
    9. '  ' → logprob: -15.375957489013672
    10. ''s' → logprob: -15.875957489013672

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5452606678009033
    2. ':
' → logprob: -1.4202606678009033
    3. '                   ' → logprob: -1.7952606678009033
    4. '               ' → logprob: -5.420260429382324
    5. ' and' → logprob: -6.170260429382324
    6. '<|end|>' → logprob: -6.295260429382324
    7. '):
' → logprob: -6.920260429382324
    8. '           ' → logprob: -7.420260429382324
    9. ',' → logprob: -7.795260429382324
    10. '                ' → logprob: -8.295260429382324

Token 124: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.802025556564331
    2. ' res' → logprob: -1.052025556564331
    3. 'res' → logprob: -2.177025556564331
    4. '           ' → logprob: -3.302025556564331
    5. '               ' → logprob: -4.05202579498291
    6. '<|end|>' → logprob: -4.92702579498291
    7. ',' → logprob: -5.30202579498291
    8. ':
' → logprob: -5.55202579498291
    9. ',res' → logprob: -5.67702579498291
    10. '                    
' → logprob: -6.42702579498291

Token 125: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.5762629508972168
    2. ' res' → logprob: -0.8262629508972168
    3. '                   ' → logprob: -9.076263427734375
    4. '
' → logprob: -9.201263427734375
    5. '                       ' → logprob: -9.201263427734375
    6. ',res' → logprob: -13.201263427734375
    7. '	res' → logprob: -14.076263427734375
    8. '                        
' → logprob: -14.326263427734375
    9. '       ' → logprob: -14.451263427734375
    10. '                    
' → logprob: -14.451263427734375

Token 126: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.546478935983032e-05
    2. ',' → logprob: -11.375025749206543
    3. ',i' → logprob: -11.375025749206543
    4. '[' → logprob: -14.250025749206543
    5. 'i' → logprob: -14.375025749206543
    6. '                   ' → logprob: -14.500025749206543
    7. '               ' → logprob: -15.625025749206543
    8. '   ' → logprob: -15.750025749206543
    9. '```' → logprob: -16.875024795532227
    10. ' [' → logprob: -17.000024795532227

Token 127: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.23474785685539246
    2. '+' → logprob: -1.6097478866577148
    3. ',' → logprob: -5.109747886657715
    4. ',i' → logprob: -6.234747886657715
    5. ',res' → logprob: -7.609747886657715
    6. ' +' → logprob: -8.734747886657715
    7. ' ,' → logprob: -8.734747886657715
    8. '),' → logprob: -8.859747886657715
    9. '+i' → logprob: -8.984747886657715
    10. ' ],' → logprob: -10.109747886657715

Token 128: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0003809833142440766
    2. ' res' → logprob: -7.875380992889404
    3. '                   ' → logprob: -14.625380516052246
    4. '=res' → logprob: -15.375380516052246
    5. '                       ' → logprob: -16.125381469726562
    6. '(res' → logprob: -16.875381469726562
    7. '	res' → logprob: -17.125381469726562
    8. '               ' → logprob: -17.375381469726562
    9. '<|end|>' → logprob: -18.000381469726562
    10. '           ' → logprob: -18.375381469726562

Token 129: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010127831774298102
    2. 'i' → logprob: -9.500101089477539
    3. ',i' → logprob: -11.250101089477539
    4. '[
' → logprob: -12.375101089477539
    5. ',' → logprob: -12.875101089477539
    6. '[' → logprob: -13.375101089477539
    7. ' i' → logprob: -13.375101089477539
    8. '```' → logprob: -14.125101089477539
    9. '<|end|>' → logprob: -14.625101089477539
    10. '(i' → logprob: -14.625101089477539

Token 130: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.100059156073257e-05
    2. '+i' → logprob: -10.125070571899414
    3. ' +' → logprob: -10.500070571899414
    4. '1' → logprob: -13.625070571899414
    5. '+
' → logprob: -13.875070571899414
    6. 'i' → logprob: -14.875070571899414
    7. '0' → logprob: -15.500070571899414
    8. '+]' → logprob: -15.625070571899414
    9. ']' → logprob: -16.000070571899414
    10. '[i' → logprob: -16.750070571899414

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.65707261255011e-06
    2. ' ' → logprob: -11.750008583068848
    3. '```' → logprob: -15.125008583068848
    4. ']' → logprob: -16.375009536743164
    5. '   ' → logprob: -16.625009536743164
    6. '0' → logprob: -17.000009536743164
    7. 'i' → logprob: -17.250009536743164
    8. '<|end|>' → logprob: -17.500009536743164
    9. '  ' → logprob: -17.875009536743164
    10. '
' → logprob: -17.937509536743164

Token 132: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.38754621148109436
    2. ']' → logprob: -1.137546181678772
    3. '=' → logprob: -7.387546062469482
    4. '=res' → logprob: -10.51254653930664
    5. '']=' → logprob: -11.88754653930664
    6. ')=' → logprob: -12.51254653930664
    7. ' ]' → logprob: -12.76254653930664
    8. '"]=' → logprob: -12.88754653930664
    9. ']=(' → logprob: -12.88754653930664
    10. ']={' → logprob: -13.51254653930664

Token 133: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -7.493430894101039e-05
    2. ' res' → logprob: -9.500075340270996
    3. '
' → logprob: -17.87507438659668
    4. '(res' → logprob: -18.25007438659668
    5. '	res' → logprob: -18.75007438659668
    6. 'ress' → logprob: -19.87507438659668
    7. '=res' → logprob: -19.87507438659668
    8. 'resi' → logprob: -20.37507438659668
    9. 'resp' → logprob: -20.50007438659668
    10. '   ' → logprob: -20.62507438659668

Token 134: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00014203863975126296
    2. 'i' → logprob: -8.875142097473145
    3. '[' → logprob: -14.125142097473145
    4. ',i' → logprob: -14.375142097473145
    5. ' i' → logprob: -14.875142097473145
    6. '_i' → logprob: -15.875142097473145
    7. '(i' → logprob: -16.625141143798828
    8. '<|end|>' → logprob: -16.625141143798828
    9. '+i' → logprob: -16.750141143798828
    10. '	i' → logprob: -16.875141143798828

Token 135: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.6895233531831764e-05
    2. '],' → logprob: -12.00002670288086
    3. ' +' → logprob: -12.37502670288086
    4. ',i' → logprob: -12.37502670288086
    5. ']+' → logprob: -12.62502670288086
    6. '+i' → logprob: -12.62502670288086
    7. 'i' → logprob: -12.75002670288086
    8. '[i' → logprob: -13.87502670288086
    9. '+
' → logprob: -14.87502670288086
    10. '+,' → logprob: -15.12502670288086

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.2524021157296374e-05
    2. ' ' → logprob: -10.125052452087402
    3. 'i' → logprob: -12.750052452087402
    4. 'res' → logprob: -12.937552452087402
    5. '
' → logprob: -14.000052452087402
    6. '```' → logprob: -14.000052452087402
    7. '0' → logprob: -14.250052452087402
    8. '   ' → logprob: -14.250052452087402
    9. '2' → logprob: -15.187552452087402
    10. '+' → logprob: -15.250052452087402

Token 137: '],' (ID: 2155)
  Prédit: ',res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',res' → logprob: -0.04294472560286522
    2. ',' → logprob: -3.9179446697235107
    3. '],' → logprob: -3.9179446697235107
    4. ',i' → logprob: -6.16794490814209
    5. 'res' → logprob: -9.29294490814209
    6. ' ,' → logprob: -9.66794490814209
    7. 'i' → logprob: -11.91794490814209
    8. '   ' → logprob: -12.66794490814209
    9. ']' → logprob: -13.29294490814209
    10. '	res' → logprob: -13.79294490814209

Token 138: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -2.1008713702030946e-06
    2. ' res' → logprob: -13.125001907348633
    3. '(res' → logprob: -17.250001907348633
    4. '	res' → logprob: -18.375001907348633
    5. '
' → logprob: -18.625001907348633
    6. '$res' → logprob: -18.750001907348633
    7. '```' → logprob: -19.000001907348633
    8. 'i' → logprob: -19.625001907348633
    9. '.res' → logprob: -19.625001907348633
    10. '=res' → logprob: -19.625001907348633

Token 139: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009919608710333705
    2. 'i' → logprob: -7.0009918212890625
    3. '[' → logprob: -9.625991821289062
    4. ']' → logprob: -11.625991821289062
    5. '][' → logprob: -13.750991821289062
    6. '[
' → logprob: -13.750991821289062
    7. '```' → logprob: -13.750991821289062
    8. ' i' → logprob: -14.000991821289062
    9. ',i' → logprob: -15.625991821289062
    10. '	i' → logprob: -15.750991821289062

Token 140: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013592824107035995
    2. ']
' → logprob: -7.376359462738037
    3. 'i' → logprob: -7.876359462738037
    4. '+' → logprob: -8.251358985900879
    5. '[i' → logprob: -10.126358985900879
    6. ']+' → logprob: -11.251358985900879
    7. ' ]' → logprob: -11.626358985900879
    8. '+i' → logprob: -12.126358985900879
    9. ']

' → logprob: -12.376358985900879
    10. '+]' → logprob: -12.501358985900879

Token 141: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.37979257106781006
    2. '               ' → logprob: -2.1297926902770996
    3. ' i' → logprob: -2.5047926902770996
    4. 'i' → logprob: -2.7547926902770996
    5. '
' → logprob: -3.7547926902770996
    6. ' 
' → logprob: -4.5047926902771
    7. '                    
' → logprob: -5.6297926902771
    8. '  
' → logprob: -6.1297926902771
    9. '```' → logprob: -6.5047926902771
    10. '                
' → logprob: -6.5047926902771

Token 142: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.00036418659146875143
    2. ' i' → logprob: -8.000364303588867
    3. '                   ' → logprob: -10.500364303588867
    4. '   ' → logprob: -14.625364303588867
    5. '                       ' → logprob: -15.375364303588867
    6. '               ' → logprob: -15.375364303588867
    7. '           ' → logprob: -16.250364303588867
    8. '                           ' → logprob: -16.500364303588867
    9. '       ' → logprob: -16.625364303588867
    10. '```' → logprob: -16.875364303588867

Token 143: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01489756628870964
    2. ' +=' → logprob: -4.514897346496582
    3. '=' → logprob: -5.639897346496582
    4. '+' → logprob: -8.389897346496582
    5. ' =' → logprob: -10.264897346496582
    6. '=i' → logprob: -11.264897346496582
    7. '2' → logprob: -11.639897346496582
    8. '```' → logprob: -13.389897346496582
    9. '
' → logprob: -14.264897346496582
    10. ' ' → logprob: -14.264897346496582

Token 144: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010422171326354146
    2. '1' → logprob: -6.876042366027832
    3. ' ' → logprob: -11.626042366027832
    4. '
' → logprob: -15.501042366027832
    5. '   ' → logprob: -15.626042366027832
    6. '  ' → logprob: -18.001041412353516
    7. '```' → logprob: -18.188541412353516
    8. '２' → logprob: -19.126041412353516
    9. '۲' → logprob: -19.626041412353516
    10. '

' → logprob: -20.188541412353516

Token 145: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00045474470243789256
    2. 'else' → logprob: -8.375454902648926
    3. '                   ' → logprob: -9.000454902648926
    4. ' else' → logprob: -10.250454902648926
    5. '```' → logprob: -10.625454902648926
    6. '           ' → logprob: -11.125454902648926
    7. '              ' → logprob: -11.625454902648926
    8. '                ' → logprob: -12.125454902648926
    9. '       ' → logprob: -12.375454902648926
    10. '   ' → logprob: -13.625454902648926

Token 146: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001064486219547689
    2. 'else' → logprob: -7.876064300537109
    3. '                   ' → logprob: -8.00106430053711
    4. '```' → logprob: -8.37606430053711
    5. '           ' → logprob: -10.25106430053711
    6. ' else' → logprob: -10.37606430053711
    7. '       ' → logprob: -11.12606430053711
    8. '              ' → logprob: -11.62606430053711
    9. '                ' → logprob: -12.12606430053711
    10. '                
' → logprob: -12.25106430053711

Token 147: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5460092425346375
    2. ' else' → logprob: -1.0460093021392822
    3. 'else' (adapté à ' else') → logprob: -2.6710093021392822
    4. '```' → logprob: -9.296009063720703
    5. '           ' → logprob: -9.921009063720703
    6. '	else' → logprob: -10.671009063720703
    7. '              ' → logprob: -10.796009063720703
    8. '                   ' → logprob: -11.671009063720703
    9. '       ' → logprob: -11.796009063720703
    10. '   ' → logprob: -11.921009063720703

Token 148: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5152425765991211
    2. ':
' → logprob: -1.515242576599121
    3. ':' → logprob: -2.015242576599121
    4. '               ' → logprob: -3.765242576599121
    5. '           ' → logprob: -4.140242576599121
    6. '   ' → logprob: -5.765242576599121
    7. ':i' → logprob: -6.640242576599121
    8. 'i' → logprob: -6.890242576599121
    9. '1' → logprob: -7.265242576599121
    10. '       ' → logprob: -7.515242576599121

Token 149: '                   ' (ID: 699)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.45838111639022827
    2. '                   ' → logprob: -1.583381175994873
    3. 'i' → logprob: -2.208381175994873
    4. '1' → logprob: -3.208381175994873
    5. '               ' → logprob: -5.083381175994873
    6. '   ' → logprob: -5.583381175994873
    7. '                ' → logprob: -7.458381175994873
    8. '           ' → logprob: -7.708381175994873
    9. '    ' → logprob: -7.833381175994873
    10. ' ' → logprob: -8.083380699157715

Token 150: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.2524021863937378
    2. ' i' → logprob: -1.7524021863937378
    3. '1' → logprob: -3.0024023056030273
    4. ' ' → logprob: -10.877402305603027
    5. '                   ' → logprob: -10.877402305603027
    6. '   ' → logprob: -12.877402305603027
    7. '	i' → logprob: -14.377402305603027
    8. '    ' → logprob: -14.627402305603027
    9. '               ' → logprob: -14.752402305603027
    10. '                    ' → logprob: -15.377402305603027

Token 151: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0001911432045744732
    2. '+' → logprob: -8.750190734863281
    3. ' +=' → logprob: -10.750190734863281
    4. '1' → logprob: -12.000190734863281
    5. '=' → logprob: -13.250190734863281
    6. '   ' → logprob: -13.375190734863281
    7. ']+=' → logprob: -14.125190734863281
    8. '+='' → logprob: -15.375190734863281
    9. '+="' → logprob: -15.750190734863281
    10. '    ' → logprob: -15.750190734863281

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -18.5
    4. '+' → logprob: -19.3125
    5. '<|end|>' → logprob: -19.5
    6. '   ' → logprob: -20.0
    7. '
' → logprob: -20.125
    8. '１' → logprob: -20.125
    9. '۱' → logprob: -20.3125
    10. '१' → logprob: -20.875

Token 153: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10119012743234634
    2. '               ' → logprob: -2.6011900901794434
    3. '           ' → logprob: -4.101190090179443
    4. ' return' → logprob: -6.351190090179443
    5. '   ' → logprob: -6.601190090179443
    6. 'return' → logprob: -6.851190090179443
    7. '
' → logprob: -7.976190090179443
    8. '```' → logprob: -7.976190090179443
    9. '<|end|>' → logprob: -8.476190567016602
    10. ')' → logprob: -9.476190567016602

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019680101424455643
    2. '           ' → logprob: -4.644680023193359
    3. '   ' → logprob: -5.269680023193359
    4. ' return' → logprob: -6.144680023193359
    5. 'return' → logprob: -6.644680023193359
    6. '               ' → logprob: -6.894680023193359
    7. '```' → logprob: -9.01968002319336
    8. ',' → logprob: -10.26968002319336
    9. '	return' → logprob: -10.39468002319336
    10. '<|end|>' → logprob: -10.51968002319336

Token 155: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5077986717224121
    2. '       ' → logprob: -1.257798671722412
    3. ' return' → logprob: -2.757798671722412
    4. 'return' (adapté à ' return') → logprob: -3.007798671722412
    5. '           ' → logprob: -7.132798671722412
    6. '	return' → logprob: -9.63279914855957
    7. '               ' → logprob: -9.75779914855957
    8. ' ' → logprob: -9.75779914855957
    9. '
' → logprob: -10.38279914855957
    10. ':return' → logprob: -11.63279914855957

Token 156: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.004078639671206474
    2. ' res' → logprob: -5.5040788650512695
    3. '[' → logprob: -16.004077911376953
    4. '(res' → logprob: -17.754077911376953
    5. '	res' → logprob: -17.879077911376953
    6. ' ' → logprob: -18.004077911376953
    7. '$res' → logprob: -19.004077911376953
    8. 'r' → logprob: -19.379077911376953
    9. '   ' → logprob: -19.379077911376953
    10. 're' → logprob: -19.879077911376953

Token 157: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2524339556694031
    2. '<|end|>' → logprob: -2.002434015274048
    3. '()' → logprob: -3.127434015274048
    4. ')' → logprob: -3.502434015274048
    5. '<|end|>' → logprob: -5.377433776855469
    6. '
' → logprob: -5.502433776855469
    7. '    
' → logprob: -6.502433776855469
    8. '(' → logprob: -7.127433776855469
    9. '       ' → logprob: -7.377433776855469
    10. '()
' → logprob: -8.252433776855469

Token 158: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: ' pp' (ID: 25476)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4292548894882202
    2. '()' → logprob: -1.4292548894882202
    3. '<|end|>' → logprob: -2.5542550086975098
    4. ')' → logprob: -4.67925500869751
    5. '(' → logprob: -5.55425500869751
    6. '
' → logprob: -5.55425500869751
    7. '    
' → logprob: -6.05425500869751
    8. '()
' → logprob: -6.30425500869751
    9. '<|end|>' → logprob: -6.42925500869751
    10. '(
' → logprob: -6.55425500869751

Token 160: '=' (ID: 28)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002313930308446288
    2. '_' → logprob: -7.00231409072876
    3. '_perm' → logprob: -7.37731409072876
    4. '(' → logprob: -7.62731409072876
    5. '=' → logprob: -9.877313613891602
    6. '().' → logprob: -10.127313613891602
    7. '.' → logprob: -10.377313613891602
    8. '();' → logprob: -10.627313613891602
    9. '_per' → logprob: -11.002313613891602
    10. '[:]' → logprob: -11.252313613891602

Token 161: 'part' (ID: 5815)
  Prédit: 'part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -2.4868770196917467e-05
    2. ' part' → logprob: -10.625024795532227
    3. '(part' → logprob: -14.750024795532227
    4. 'parts' → logprob: -16.625024795532227
    5. '	part' → logprob: -17.500024795532227
    6. '   ' → logprob: -18.500024795532227
    7. 'par' → logprob: -18.500024795532227
    8. '{' → logprob: -18.625024795532227
    9. 'partition' → logprob: -18.750024795532227
    10. 'p' → logprob: -18.875024795532227

Token 162: '_perm' (ID: 128866)
  Prédit: '_perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_perm' → logprob: -5.080963092041202e-06
    2. 'perm' → logprob: -12.250004768371582
    3. '_perf' → logprob: -15.500004768371582
    4. '_prob' → logprob: -19.0000057220459
    5. '_permalink' → logprob: -19.2500057220459
    6. '_p' → logprob: -20.0000057220459
    7. 'p' → logprob: -20.1250057220459
    8. 's' → logprob: -20.3750057220459
    9. '_' → logprob: -20.5000057220459
    10. '_prog' → logprob: -20.5000057220459

Token 163: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019318510312587023
    2. '()
' → logprob: -6.251931667327881
    3. '()
' → logprob: -13.376932144165039
    4. '()`' → logprob: -14.251932144165039
    5. '()

' → logprob: -15.126932144165039
    6. '()\' → logprob: -15.501932144165039
    7. '(' → logprob: -15.751932144165039
    8. '()]' → logprob: -15.876932144165039
    9. '()"' → logprob: -16.12693214416504
    10. ' ()' → logprob: -17.12693214416504

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10777806490659714
    2. ' parts' → logprob: -2.9827780723571777
    3. 'parts' → logprob: -3.3577780723571777
    4. '<|end|>' → logprob: -4.482778072357178
    5. '
' → logprob: -5.482778072357178
    6. '(parts' → logprob: -7.232778072357178
    7. '    
' → logprob: -8.10777759552002
    8. '_parts' → logprob: -9.73277759552002
    9. '.parts' → logprob: -10.23277759552002
    10. ')' → logprob: -10.48277759552002

Token 165: ' #' (ID: 1069)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.11532320827245712
    2. ' parts' → logprob: -2.240323305130005
    3. '   ' → logprob: -6.115323066711426
    4. '(parts' → logprob: -8.865323066711426
    5. '
' → logprob: -9.990323066711426
    6. '    
' → logprob: -10.115323066711426
    7. '.parts' → logprob: -10.990323066711426
    8. '<|end|>' → logprob: -11.115323066711426
    9. 'part' → logprob: -11.490323066711426
    10. '_parts' → logprob: -12.240323066711426

Token 166: ' Build' (ID: 10885)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.1130235567688942
    2. ' parts' → logprob: -2.238023519515991
    3. '   ' → logprob: -9.73802375793457
    4. '(parts' → logprob: -9.98802375793457
    5. '.parts' → logprob: -10.98802375793457
    6. 'import' → logprob: -11.11302375793457
    7. 'part' → logprob: -11.17552375793457
    8. 'for' → logprob: -12.42552375793457
    9. 'p' → logprob: -12.48802375793457
    10. 'points' → logprob: -12.86302375793457

Token 167: ' inverse' (ID: 53743)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.4366743862628937
    2. 'parts' → logprob: -1.1866743564605713
    3. '(parts' → logprob: -4.06167459487915
    4. 'pp' → logprob: -4.43667459487915
    5. '{' → logprob: -5.81167459487915
    6. 'p' → logprob: -5.93667459487915
    7. ' pp' → logprob: -5.93667459487915
    8. ' p' → logprob: -6.31167459487915
    9. 'perm' → logprob: -6.81167459487915
    10. '[' → logprob: -7.18667459487915

Token 168: ' permutation' (ID: 135200)
  Prédit: '_pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pp' → logprob: -0.5689524412155151
    2. 'pp' → logprob: -1.3189524412155151
    3. '(pp' → logprob: -3.0689525604248047
    4. ' =' → logprob: -3.1939525604248047
    5. '_' → logprob: -3.6939525604248047
    6. 'def' → logprob: -4.193952560424805
    7. '=' → logprob: -4.818952560424805
    8. ' pp' → logprob: -5.068952560424805
    9. '_p' → logprob: -5.693952560424805
    10. ' perm' → logprob: -5.943952560424805

Token 169: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34295207262039185
    2. '   ' → logprob: -1.967952013015747
    3. ' =' → logprob: -2.842952013015747
    4. '=' → logprob: -3.592952013015747
    5. '<|end|>' → logprob: -3.967952013015747
    6. '_inv' → logprob: -4.967952251434326
    7. 'def' → logprob: -5.342952251434326
    8. ':' → logprob: -5.342952251434326
    9. '_inverse' → logprob: -5.467952251434326
    10. 'inverse' → logprob: -5.842952251434326

Token 170: ' mapping' (ID: 22573)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.6977781653404236
    2. ' pp' → logprob: -1.4477782249450684
    3. 'parts' → logprob: -2.0727782249450684
    4. ' parts' → logprob: -2.3227782249450684
    5. 'p' → logprob: -4.072778224945068
    6. ' p' → logprob: -4.322778224945068
    7. 'part' → logprob: -4.572778224945068
    8. ' part' → logprob: -6.197778224945068
    9. 'perm' → logprob: -9.38527774810791
    10. ' ' → logprob: -9.51027774810791

Token 171: ' top' (ID: 2344)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.8464926481246948
    2. ' =' → logprob: -1.3464926481246948
    3. ' pp' → logprob: -2.5964927673339844
    4. 'pp' → logprob: -3.0964927673339844
    5. '   ' → logprob: -3.3464927673339844
    6. ' p' → logprob: -3.8464927673339844
    7. '
' → logprob: -3.9714927673339844
    8. 'parts' → logprob: -3.9714927673339844
    9. '=' → logprob: -4.096492767333984
    10. ' for' → logprob: -4.221492767333984

Token 172: '->' (ID: 609)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6957516670227051
    2. 'pp' → logprob: -1.570751667022705
    3. '(pp' → logprob: -2.570751667022705
    4. 'to' → logprob: -2.945751667022705
    5. ')' → logprob: -3.195751667022705
    6. ' pp' → logprob: -3.695751667022705
    7. ' =' → logprob: -3.820751667022705
    8. '=' → logprob: -4.445751667022705
    9. '_pp' → logprob: -4.570751667022705
    10. ',' → logprob: -5.195751667022705

Token 173: 'bottom' (ID: 29677)
  Prédit: 'bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.037720680236816406
    2. ' bottom' → logprob: -3.4127206802368164
    3. 'bot' → logprob: -6.037720680236816
    4. 'p' → logprob: -7.537720680236816
    5. 'down' → logprob: -7.662720680236816
    6. ' p' → logprob: -8.537720680236816
    7. 'pp' → logprob: -8.912720680236816
    8. 'part' → logprob: -9.287720680236816
    9. 'top' → logprob: -9.412720680236816
    10. 'parts' → logprob: -9.912720680236816

Token 174: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41094860434532166
    2. '   ' → logprob: -2.2859485149383545
    3. 'inv' → logprob: -2.4109485149383545
    4. 'inverse' → logprob: -2.7859485149383545
    5. ' inv' → logprob: -3.2859485149383545
    6. '_inv' → logprob: -4.410948753356934
    7. ' inverse' → logprob: -4.535948753356934
    8. '_inverse' → logprob: -5.535948753356934
    9. 'def' → logprob: -5.910948753356934
    10. 'ip' → logprob: -6.035948753356934

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6617752313613892
    2. ' inv' → logprob: -2.1617751121520996
    3. 'inv' → logprob: -2.2867751121520996
    4. 'inverse' → logprob: -2.5367751121520996
    5. '
' → logprob: -2.9117751121520996
    6. ' parts' → logprob: -2.9117751121520996
    7. ' inverse' → logprob: -2.9117751121520996
    8. 'import' → logprob: -5.5367751121521
    9. '_inv' → logprob: -5.6617751121521
    10. 'parts' → logprob: -5.7867751121521

Token 176: ' #' (ID: 1069)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.2885224521160126
    2. ' inv' → logprob: -1.663522481918335
    3. 'inverse' → logprob: -3.413522481918335
    4. 'pp' → logprob: -4.788522243499756
    5. 'ip' → logprob: -5.038522243499756
    6. ' inverse' → logprob: -5.288522243499756
    7. ' parts' → logprob: -6.163522243499756
    8. 'parts' → logprob: -6.288522243499756
    9. 'def' → logprob: -6.913522243499756
    10. ' ip' → logprob: -7.288522243499756

Token 177: ' Since' (ID: 12265)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.07983192801475525
    2. 'inverse' → logprob: -2.954831838607788
    3. ' inv' → logprob: -4.829832077026367
    4. 'parts' → logprob: -5.079832077026367
    5. 'ip' → logprob: -5.454832077026367
    6. 'pp' → logprob: -5.954832077026367
    7. 'in' → logprob: -6.829832077026367
    8. ' inverse' → logprob: -7.579832077026367
    9. ' parts' → logprob: -8.079832077026367
    10. 'for' → logprob: -8.204832077026367

Token 178: ' the' (ID: 290)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.5406953692436218
    2. ' pp' → logprob: -1.2906954288482666
    3. 'len' → logprob: -3.2906954288482666
    4. ' parts' → logprob: -3.5406954288482666
    5. 'parts' → logprob: -3.6656954288482666
    6. ' len' → logprob: -3.9156954288482666
    7. ' N' → logprob: -5.1656951904296875
    8. 'N' → logprob: -5.1656951904296875
    9. 'K' → logprob: -5.2906951904296875
    10. ' K' → logprob: -5.7906951904296875

Token 179: ' simulation' (ID: 30937)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.7950260043144226
    2. ' inverse' → logprob: -2.1700260639190674
    3. 'inverse' → logprob: -2.4200260639190674
    4. 'pp' → logprob: -2.4200260639190674
    5. 'parts' → logprob: -2.6700260639190674
    6. 'perm' → logprob: -3.5450260639190674
    7. ' pp' → logprob: -3.9200260639190674
    8. 'inv' → logprob: -4.045025825500488
    9. ' code' → logprob: -4.045025825500488
    10. ' for' → logprob: -4.295025825500488

Token 180: ' gave' (ID: 10175)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.8532992005348206
    2. ' is' → logprob: -1.4782991409301758
    3. ' for' → logprob: -2.728299140930176
    4. ',' → logprob: -2.978299140930176
    5. 'pp' → logprob: -2.978299140930176
    6. ' pp' → logprob: -3.728299140930176
    7. 's' → logprob: -4.103299140930176
    8. ':' → logprob: -4.103299140930176
    9. 'of' → logprob: -4.353299140930176
    10. ' =' → logprob: -4.353299140930176

Token 181: ' final' (ID: 1721)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.34252798557281494
    2. ' pp' → logprob: -1.342527985572815
    3. 'top' → logprob: -5.342527866363525
    4. 'perm' → logprob: -5.842527866363525
    5. ' the' → logprob: -5.967527866363525
    6. ' a' → logprob: -5.967527866363525
    7. 'p' → logprob: -6.217527866363525
    8. 'bottom' → logprob: -6.342527866363525
    9. 'the' → logprob: -6.467527866363525
    10. 'a' → logprob: -6.717527866363525

Token 182: ' labels' (ID: 17125)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perm' → logprob: -1.2430788278579712
    2. ' permutation' → logprob: -1.2430788278579712
    3. 'pp' → logprob: -1.3680788278579712
    4. 'positions' → logprob: -3.4930787086486816
    5. ' pp' → logprob: -3.6180787086486816
    6. 'position' → logprob: -3.6180787086486816
    7. ' perm' → logprob: -3.7430787086486816
    8. ' positions' → logprob: -3.7430787086486816
    9. ' position' → logprob: -4.493078708648682
    10. 'per' → logprob: -5.118078708648682

Token 183: ' position' (ID: 4010)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -1.4306975603103638
    2. ' inv' → logprob: -1.6806975603103638
    3. 'inverse' → logprob: -1.9306975603103638
    4. ' parts' → logprob: -2.055697441101074
    5. ' inverse' → logprob: -2.305697441101074
    6. '
' → logprob: -2.555697441101074
    7. '   ' → logprob: -3.430697441101074
    8. '_inv' → logprob: -3.930697441101074
    9. 'parts' → logprob: -4.180697441101074
    10. '_inverse' → logprob: -4.305697441101074

Token 184: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40540552139282227
    2. ',' → logprob: -1.5304055213928223
    3. '
' → logprob: -3.2804055213928223
    4. 'pp' → logprob: -4.030405521392822
    5. ' for' → logprob: -4.905405521392822
    6. ',
' → logprob: -4.905405521392822
    7. 'inverse' → logprob: -5.030405521392822
    8. ' parts' → logprob: -5.405405521392822
    9. ')' → logprob: -5.405405521392822
    10. ' inverse' → logprob: -5.655405521392822

Token 185: ' we' (ID: 581)
  Prédit: ' inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inv' → logprob: -0.6356045007705688
    2. 'inv' → logprob: -1.1356045007705688
    3. ' inverse' → logprob: -3.0106043815612793
    4. ' parts' → logprob: -3.5106043815612793
    5. 'inverse' → logprob: -3.6356043815612793
    6. 'pp' → logprob: -4.260604381561279
    7. '   ' → logprob: -4.760604381561279
    8. ' for' → logprob: -5.635604381561279
    9. 'perm' → logprob: -5.635604381561279
    10. 'pos' → logprob: -6.010604381561279

Token 186: ' want' (ID: 1682)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.7515896558761597
    2. 'need' → logprob: -0.8765896558761597
    3. ' can' → logprob: -2.751589775085449
    4. 'can' → logprob: -4.501589775085449
    5. ' want' → logprob: -4.751589775085449
    6. '#' → logprob: -5.251589775085449
    7. 'invert' → logprob: -5.376589775085449
    8. 'continue' → logprob: -5.626589775085449
    9. ' continue' → logprob: -5.876589775085449
    10. 'want' → logprob: -6.001589775085449

Token 187: ' the' (ID: 290)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.40765953063964844
    2. 'to' → logprob: -1.9076595306396484
    3. ' the' → logprob: -2.2826595306396484
    4. ' inverse' → logprob: -3.4076595306396484
    5. 'the' → logprob: -4.282659530639648
    6. 'top' → logprob: -4.407659530639648
    7. 'inverse' → logprob: -4.657659530639648
    8. ' top' → logprob: -5.532659530639648
    9. ' a' → logprob: -5.657659530639648
    10. 'pp' → logprob: -5.657659530639648

Token 188: ' permutation' (ID: 135200)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.07717292755842209
    2. ' inverse' → logprob: -2.8271729946136475
    3. 'top' → logprob: -4.702172756195068
    4. 'next' → logprob: -7.327172756195068
    5. 'inv' → logprob: -7.327172756195068
    6. ' top' → logprob: -7.327172756195068
    7. 'positions' → logprob: -7.702172756195068
    8. ' next' → logprob: -7.827172756195068
    9. 'mapping' → logprob: -7.827172756195068
    10. 'perm' → logprob: -7.952172756195068

Token 189: ' mapping' (ID: 22573)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7909888029098511
    2. ' =' → logprob: -0.9159888029098511
    3. '_inverse' → logprob: -2.7909889221191406
    4. 'inverse' → logprob: -3.7909889221191406
    5. '_inv' → logprob: -3.9159889221191406
    6. ' inverse' → logprob: -4.540988922119141
    7. ' for' → logprob: -4.790988922119141
    8. ' to' → logprob: -5.915988922119141
    9. '.inverse' → logprob: -6.040988922119141
    10. ' of' → logprob: -6.165988922119141

Token 190: ' input' (ID: 3422)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.9458001255989075
    2. ' top' → logprob: -1.3208000659942627
    3. ' of' → logprob: -2.1958000659942627
    4. 'top' → logprob: -2.4458000659942627
    5. 'from' → logprob: -2.8208000659942627
    6. ' inverse' → logprob: -3.4458000659942627
    7. 'inverse' → logprob: -4.320800304412842
    8. ' to' → logprob: -5.195800304412842
    9. ' for' → logprob: -5.195800304412842
    10. '[top' → logprob: -5.320800304412842

Token 191: ' positions' (ID: 15897)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7317851185798645
    2. 'to' → logprob: -1.7317850589752197
    3. 'p' → logprob: -3.1067850589752197
    4. ')' → logprob: -3.1067850589752197
    5. 'pp' → logprob: -3.1067850589752197
    6. 'top' → logprob: -3.2317850589752197
    7. ' p' → logprob: -3.2317850589752197
    8. ',' → logprob: -3.8567850589752197
    9. ' ->' → logprob: -4.231785297393799
    10. '->' → logprob: -4.231785297393799

Token 192: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.43301740288734436
    2. '->' → logprob: -1.933017373085022
    3. ' ->' → logprob: -2.3080174922943115
    4. 'to' → logprob: -2.4330174922943115
    5. 'top' → logprob: -5.558017253875732
    6. ' p' → logprob: -5.808017253875732
    7. ')' → logprob: -5.933017253875732
    8. ',' → logprob: -6.183017253875732
    9. 'p' → logprob: -6.308017253875732
    10. '   ' → logprob: -7.058017253875732

Token 193: ' outputs' (ID: 32725)
  Prédit: ' output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' output' → logprob: -0.1093946248292923
    2. 'output' → logprob: -2.6093945503234863
    3. ' input' → logprob: -4.234394550323486
    4. ' final' → logprob: -5.359394550323486
    5. ' positions' → logprob: -5.484394550323486
    6. 'input' → logprob: -5.734394550323486
    7. ' their' → logprob: -6.484394550323486
    8. 'final' → logprob: -7.484394550323486
    9. 'positions' → logprob: -7.859394550323486
    10. ' indices' → logprob: -8.109395027160645

Token 194: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18975256383419037
    2. ',' → logprob: -3.3147525787353516
    3. 'inverse' → logprob: -3.3147525787353516
    4. 'pp' → logprob: -4.314752578735352
    5. '
' → logprob: -4.564752578735352
    6. ':' → logprob: -4.814752578735352
    7. 'inv' → logprob: -4.939752578735352
    8. '.' → logprob: -4.939752578735352
    9. ' for' → logprob: -5.064752578735352
    10. ' =' → logprob: -5.314752578735352

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4153540134429932
    2. 'inv' → logprob: -1.6653540134429932
    3. ' inv' → logprob: -2.290354013442993
    4. 'inverse' → logprob: -2.290354013442993
    5. '_inv' → logprob: -2.790354013442993
    6. ' inverse' → logprob: -3.290354013442993
    7. ' parts' → logprob: -3.290354013442993
    8. ' =' → logprob: -3.665354013442993
    9. ' p' → logprob: -3.665354013442993
    10. '
' → logprob: -3.665354013442993

Token 196: ' #' (ID: 1069)
  Prédit: ' inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inv' → logprob: -0.543131947517395
    2. 'inv' → logprob: -1.043131947517395
    3. ' parts' → logprob: -3.5431318283081055
    4. 'inverse' → logprob: -5.0431318283081055
    5. 'parts' → logprob: -5.1681318283081055
    6. ' inverse' → logprob: -5.1681318283081055
    7. 'pp' → logprob: -5.4181318283081055
    8. 'ip' → logprob: -5.5431318283081055
    9. 'in' → logprob: -6.0431318283081055
    10. ' ip' → logprob: -6.4181318283081055

Token 197: ' The' (ID: 623)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.20530885457992554
    2. ' inv' → logprob: -2.2053089141845703
    3. 'parts' → logprob: -3.5803089141845703
    4. 'inverse' → logprob: -3.8303089141845703
    5. ' parts' → logprob: -4.33030891418457
    6. 'pp' → logprob: -5.58030891418457
    7. ' inverse' → logprob: -5.95530891418457
    8. 'in' → logprob: -6.45530891418457
    9. 'perm' → logprob: -6.45530891418457
    10. 'part' → logprob: -7.20530891418457

Token 198: ' permutation' (ID: 135200)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -1.1202688217163086
    2. 'inv' → logprob: -1.3702688217163086
    3. 'inverse' → logprob: -1.9952688217163086
    4. ' inverse' → logprob: -2.1202688217163086
    5. ' inv' → logprob: -2.9952688217163086
    6. ' pp' → logprob: -3.3702688217163086
    7. ' for' → logprob: -4.120268821716309
    8. ' parts' → logprob: -4.245268821716309
    9. 'for' → logprob: -4.620268821716309
    10. ' part' → logprob: -5.495268821716309

Token 199: ' pp' (ID: 25476)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03306252136826515
    2. ' =' → logprob: -4.15806245803833
    3. '_inverse' → logprob: -4.90806245803833
    4. 'inverse' → logprob: -5.65806245803833
    5. ' is' → logprob: -6.03306245803833
    6. '_inv' → logprob: -6.90806245803833
    7. ' inverse' → logprob: -7.53306245803833
    8. ' for' → logprob: -8.408062934875488
    9. 'inv' → logprob: -8.783062934875488
    10. ''s' → logprob: -8.908062934875488

Token 200: ' shows' (ID: 7398)
  Prédit: '_inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.9607182741165161
    2. '=' → logprob: -1.2107182741165161
    3. '_inverse' → logprob: -1.3357182741165161
    4. 'inverse' → logprob: -3.7107181549072266
    5. ' =' → logprob: -4.335718154907227
    6. ' inverse' → logprob: -4.585718154907227
    7. 'inv' → logprob: -5.585718154907227
    8. '=[' → logprob: -6.210718154907227
    9. '.inverse' → logprob: -7.085718154907227
    10. ' is' → logprob: -7.335718154907227

Token 201: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.906391978263855
    2. ' the' → logprob: -1.531391978263855
    3. 'where' → logprob: -1.906391978263855
    4. 'which' → logprob: -2.5313920974731445
    5. ' where' → logprob: -2.7813920974731445
    6. ' which' → logprob: -3.6563920974731445
    7. 'for' → logprob: -3.9063920974731445
    8. 'how' → logprob: -4.6563920974731445
    9. ',' → logprob: -4.9063920974731445
    10. ' for' → logprob: -5.0313920974731445

Token 202: ' output' (ID: 4733)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.9272986650466919
    2. 'positions' → logprob: -1.302298665046692
    3. 'final' → logprob: -2.5522985458374023
    4. 'mapping' → logprob: -2.6772985458374023
    5. 'index' → logprob: -2.8022985458374023
    6. ' positions' → logprob: -3.9272985458374023
    7. ' position' → logprob: -4.052298545837402
    8. 'output' → logprob: -4.052298545837402
    9. 'inverse' → logprob: -4.177298545837402
    10. 'indices' → logprob: -4.302298545837402

Token 203: ' order' (ID: 2569)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5295926332473755
    2. '=' → logprob: -1.2795926332473755
    3. '
' → logprob: -3.529592514038086
    4. ')' → logprob: -3.779592514038086
    5. '=
' → logprob: -4.779592514038086
    6. 's' → logprob: -5.279592514038086
    7. '_inverse' → logprob: -5.279592514038086
    8. ']' → logprob: -5.529592514038086
    9. '[' → logprob: -5.529592514038086
    10. 'positions' → logprob: -5.654592514038086

Token 204: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8208640217781067
    2. ' parts' → logprob: -1.695863962173462
    3. '<|end|>' → logprob: -1.695863962173462
    4. '
' → logprob: -2.320863962173462
    5. 'inverse' → logprob: -4.070864200592041
    6. 'parts' → logprob: -4.070864200592041
    7. ' for' → logprob: -4.445864200592041
    8. ' inverse' → logprob: -4.695864200592041
    9. ')' → logprob: -4.820864200592041
    10. '<|end|>' → logprob: -5.695864200592041

Token 205: ' input' (ID: 3422)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.099890112876892
    2. 'inputs' → logprob: -1.349890112876892
    3. 'the' → logprob: -1.974890112876892
    4. 'input' → logprob: -2.0998902320861816
    5. 'indices' → logprob: -3.3498902320861816
    6. 'top' → logprob: -3.9748902320861816
    7. 'perm' → logprob: -4.224890232086182
    8. 'labels' → logprob: -4.224890232086182
    9. 'elements' → logprob: -4.599890232086182
    10. ' the' → logprob: -4.724890232086182

Token 206: ' positions' (ID: 15897)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.697550356388092
    2. '   ' → logprob: -2.4475502967834473
    3. ')' → logprob: -2.6975502967834473
    4. 'positions' → logprob: -3.0725502967834473
    5. 'inverse' → logprob: -3.0725502967834473
    6. ' for' → logprob: -3.5725502967834473
    7. 's' → logprob: -3.5725502967834473
    8. '
' → logprob: -3.5725502967834473
    9. '<|end|>' → logprob: -3.5725502967834473
    10. 'indices' → logprob: -3.6975502967834473

Token 207: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2152578830718994
    2. 'inverse' → logprob: -1.7152578830718994
    3. ' inverse' → logprob: -1.8402578830718994
    4. '   ' → logprob: -2.3402578830718994
    5. 'inv' → logprob: -2.7152578830718994
    6. ' for' → logprob: -3.2152578830718994
    7. 'pp' → logprob: -3.4652578830718994
    8. '_inverse' → logprob: -3.4652578830718994
    9. ' inv' → logprob: -3.7152578830718994
    10. '_inv' → logprob: -4.59025764465332

Token 209: ' #' (ID: 1069)
  Prédit: ' inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inv' → logprob: -0.9446995854377747
    2. 'inv' → logprob: -1.4446995258331299
    3. ' inverse' → logprob: -1.8196995258331299
    4. 'inverse' → logprob: -2.31969952583313
    5. '
' → logprob: -2.94469952583313
    6. 'pp' → logprob: -4.444699764251709
    7. ' parts' → logprob: -4.944699764251709
    8. '_inv' → logprob: -5.069699764251709
    9. ' for' → logprob: -5.069699764251709
    10. '_inverse' → logprob: -5.194699764251709

Token 210: ' So' (ID: 2632)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.7024932503700256
    2. ' inv' → logprob: -0.8274932503700256
    3. 'pp' → logprob: -4.077493190765381
    4. 'inverse' → logprob: -4.202493190765381
    5. ' inverse' → logprob: -4.827493190765381
    6. 'for' → logprob: -4.827493190765381
    7. ' for' → logprob: -4.952493190765381
    8. 'ip' → logprob: -5.327493190765381
    9. ' ip' → logprob: -6.202493190765381
    10. ' pp' → logprob: -6.327493190765381

Token 211: ' permutation' (ID: 135200)
  Prédit: ' inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inv' → logprob: -0.5282670855522156
    2. 'inv' → logprob: -1.4032671451568604
    3. ' inverse' → logprob: -3.0282671451568604
    4. ' for' → logprob: -3.1532671451568604
    5. 'inverse' → logprob: -3.5282671451568604
    6. 'for' → logprob: -4.153266906738281
    7. 'pp' → logprob: -4.278266906738281
    8. ' ip' → logprob: -5.403266906738281
    9. ' pp' → logprob: -5.528266906738281
    10. ' ipp' → logprob: -6.653266906738281

Token 212: ' p' (ID: 275)
  Prédit: '_inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.5145837068557739
    2. '=' → logprob: -2.0145835876464844
    3. '_inverse' → logprob: -2.3895835876464844
    4. 'inv' → logprob: -2.6395835876464844
    5. ' =' → logprob: -2.7645835876464844
    6. 'pp' → logprob: -4.014583587646484
    7. 'inverse' → logprob: -4.889583587646484
    8. '_pp' → logprob: -5.264583587646484
    9. ' inverse' → logprob: -5.389583587646484
    10. ' inv' → logprob: -6.014583587646484

Token 213: ' maps' (ID: 24267)
  Prédit: '_inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.05455825850367546
    2. '_inverse' → logprob: -3.804558277130127
    3. '=' → logprob: -4.179558277130127
    4. 'inv' → logprob: -4.429558277130127
    5. ' =' → logprob: -6.054558277130127
    6. 'inverse' → logprob: -7.554558277130127
    7. '_=' → logprob: -9.304557800292969
    8. 'p' → logprob: -9.429557800292969
    9. '=p' → logprob: -9.554557800292969
    10. '_' → logprob: -9.804557800292969

Token 214: ' i' (ID: 575)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.27105045318603516
    2. ' input' → logprob: -1.7710504531860352
    3. 'pp' → logprob: -3.396050453186035
    4. 'i' → logprob: -4.896050453186035
    5. 'inputs' → logprob: -5.271050453186035
    6. ' inputs' → logprob: -5.521050453186035
    7. ' i' → logprob: -6.146050453186035
    8. 'top' → logprob: -6.146050453186035
    9. ' p' → logprob: -6.771050453186035
    10. 'from' → logprob: -6.896050453186035

Token 215: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2777458131313324
    2. 'to' → logprob: -1.6527458429336548
    3. ' i' → logprob: -4.027745723724365
    4. ' in' → logprob: -4.777745723724365
    5. '_to' → logprob: -5.152745723724365
    6. ' ->' → logprob: -5.527745723724365
    7. 'i' → logprob: -6.027745723724365
    8. '->' → logprob: -6.402745723724365
    9. ' ' → logprob: -6.777745723724365
    10. ' of' → logprob: -6.777745723724365

Token 216: ' pp' (ID: 25476)
  Prédit: ' pp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pp' → logprob: -0.2257390171289444
    2. 'pp' → logprob: -1.6007390022277832
    3. ' res' → logprob: -8.600739479064941
    4. 'res' → logprob: -9.850739479064941
    5. '	pp' → logprob: -10.850739479064941
    6. ' the' → logprob: -11.225739479064941
    7. '(pp' → logprob: -11.350739479064941
    8. ' p' → logprob: -11.475739479064941
    9. ' ' → logprob: -11.600739479064941
    10. 'the' → logprob: -11.975739479064941

Token 217: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6147121787071228
    2. '[' → logprob: -1.2397122383117676
    3. '[p' → logprob: -1.8647122383117676
    4. '.' → logprob: -5.864712238311768
    5. '[ip' → logprob: -6.114712238311768
    6. '[]' → logprob: -6.864712238311768
    7. '[:]' → logprob: -6.864712238311768
    8. '\[' → logprob: -6.864712238311768
    9. '```' → logprob: -7.114712238311768
    10. ',' → logprob: -7.739712238311768

Token 218: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017797837499529123
    2. '],' → logprob: -6.751779556274414
    3. ' ]' → logprob: -8.001779556274414
    4. ']
' → logprob: -8.751779556274414
    5. '].' → logprob: -9.376779556274414
    6. '[' → logprob: -12.126779556274414
    7. ']

' → logprob: -12.876779556274414
    8. ']:' → logprob: -13.001779556274414
    9. ']==' → logprob: -13.251779556274414
    10. '   ' → logprob: -13.501779556274414

Token 219: '   ' (ID: 271)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -1.174446702003479
    2. '
' → logprob: -1.674446702003479
    3. '<|end|>' → logprob: -1.674446702003479
    4. '   ' → logprob: -1.799446702003479
    5. 'parts' → logprob: -2.5494465827941895
    6. ')' → logprob: -4.0494465827941895
    7. ' p' → logprob: -4.0494465827941895
    8. 'p' → logprob: -5.4244465827941895
    9. ',' → logprob: -5.5494465827941895
    10. '(parts' → logprob: -5.7994465827941895

Token 220: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5289097428321838
    2. '   ' → logprob: -1.903909683227539
    3. '<|end|>' → logprob: -1.903909683227539
    4. ' parts' → logprob: -3.403909683227539
    5. 'parts' → logprob: -3.528909683227539
    6. 'p' → logprob: -4.403909683227539
    7. '}' → logprob: -4.903909683227539
    8. '
' → logprob: -4.903909683227539
    9. ' p' → logprob: -5.403909683227539
    10. '    
' → logprob: -6.028909683227539

Token 221: ' But' (ID: 3072)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.06109907105565071
    2. ' parts' → logprob: -3.061099052429199
    3. 'p' → logprob: -5.811099052429199
    4. 'perm' → logprob: -5.936099052429199
    5. 'import' → logprob: -6.061099052429199
    6. 'for' → logprob: -6.311099052429199
    7. '   ' → logprob: -7.311099052429199
    8. 'inv' → logprob: -8.1860990524292
    9. ' p' → logprob: -8.4360990524292
    10. ' for' → logprob: -8.5610990524292

Token 222: ' to' (ID: 316)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.3306445777416229
    2. 'we' → logprob: -1.9556446075439453
    3. 'pp' → logprob: -3.7056446075439453
    4. ' for' → logprob: -3.8306446075439453
    5. ' to' → logprob: -3.9556446075439453
    6. ' you' → logprob: -3.9556446075439453
    7. ' the' → logprob: -4.455644607543945
    8. 'for' → logprob: -4.705644607543945
    9. ' p' → logprob: -4.955644607543945
    10. ' pp' → logprob: -5.080644607543945

Token 223: ' compose' (ID: 43360)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.44713684916496277
    2. 'get' → logprob: -2.322136878967285
    3. ' map' → logprob: -2.947136878967285
    4. ' find' → logprob: -3.322136878967285
    5. ' apply' → logprob: -3.697136878967285
    6. ' compose' → logprob: -3.822136878967285
    7. 'compose' → logprob: -3.947136878967285
    8. ' combine' → logprob: -4.322136878967285
    9. 'apply' → logprob: -4.322136878967285
    10. ' p' → logprob: -4.447136878967285

Token 224: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.7379545569419861
    2. ' p' → logprob: -1.2379546165466309
    3. 'p' → logprob: -1.7379546165466309
    4. ' the' → logprob: -3.237954616546631
    5. 'per' → logprob: -5.612954616546631
    6. 'the' → logprob: -5.737954616546631
    7. ' two' → logprob: -5.862954616546631
    8. 'perm' → logprob: -6.237954616546631
    9. ' with' → logprob: -6.487954616546631
    10. ' a' → logprob: -7.487954616546631

Token 225: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008631822653114796
    2. ' ,' → logprob: -5.883631706237793
    3. ' we' → logprob: -6.008631706237793
    4. '<|end|>' → logprob: -6.758631706237793
    5. ',
' → logprob: -7.258631706237793
    6. ' with' → logprob: -8.633631706237793
    7. 'we' → logprob: -8.633631706237793
    8. ' p' → logprob: -8.758631706237793
    9. ' for' → logprob: -9.383631706237793
    10. ' in' → logprob: -9.508631706237793

Token 226: ' function' (ID: 1114)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.364695429801941
    2. 'pp' → logprob: -1.614695429801941
    3. ' functions' → logprob: -1.989695429801941
    4. 'p' → logprob: -1.989695429801941
    5. 'functions' → logprob: -2.7396955490112305
    6. ' pp' → logprob: -3.2396955490112305
    7. 'lists' → logprob: -3.7396955490112305
    8. ' lists' → logprob: -3.8646955490112305
    9. ' permutations' → logprob: -3.8646955490112305
    10. 'def' → logprob: -4.6146955490112305

Token 227: ' composition' (ID: 27524)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1256153583526611
    2. ' application' → logprob: -1.2506153583526611
    3. ',' → logprob: -1.3756153583526611
    4. ' composition' → logprob: -2.500615358352661
    5. ' calls' → logprob: -4.750615119934082
    6. ' s' → logprob: -5.125615119934082
    7. ' ,' → logprob: -5.250615119934082
    8. ' ' → logprob: -5.375615119934082
    9. ' compositions' → logprob: -5.500615119934082
    10. '_call' → logprob: -5.625615119934082

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005365733522921801
    2. ' ,' → logprob: -6.50536584854126
    3. '<|end|>' → logprob: -6.63036584854126
    4. ':' → logprob: -7.00536584854126
    5. ',
' → logprob: -7.63036584854126
    6. ')' → logprob: -8.130365371704102
    7. ' we' → logprob: -8.755365371704102
    8. '<|end|>' → logprob: -9.005365371704102
    9. ' p' → logprob: -9.630365371704102
    10. '   ' → logprob: -9.880365371704102

Token 229: ' we' (ID: 581)
  Prédit: ' we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -1.146246075630188
    2. 'pp' → logprob: -1.146246075630188
    3. ' p' → logprob: -2.3962459564208984
    4. 'we' → logprob: -2.7712459564208984
    5. ' pp' → logprob: -2.8962459564208984
    6. '<|end|>' → logprob: -2.8962459564208984
    7. 'p' → logprob: -3.2712459564208984
    8. ' you' → logprob: -4.771245956420898
    9. 'perm' → logprob: -4.896245956420898
    10. ' the' → logprob: -5.021245956420898

Token 230: ' use' (ID: 1199)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.5056300163269043
    2. 'need' → logprob: -1.6306300163269043
    3. ' want' → logprob: -1.8806300163269043
    4. 'want' → logprob: -3.8806300163269043
    5. ' should' → logprob: -4.380630016326904
    6. 'should' → logprob: -4.630630016326904
    7. ')' → logprob: -6.380630016326904
    8. ' must' → logprob: -7.255630016326904
    9. 'continue' → logprob: -7.380630016326904
    10. ' continue' → logprob: -7.630630016326904

Token 231: ' zero' (ID: 12421)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.17025932669639587
    2. '[' → logprob: -2.4202592372894287
    3. ' pp' → logprob: -4.045259475708008
    4. 'lambda' → logprob: -4.295259475708008
    5. '[p' → logprob: -5.045259475708008
    6. '[]' → logprob: -5.170259475708008
    7. ' p' → logprob: -5.420259475708008
    8. ' [' → logprob: -5.545259475708008
    9. 'p' → logprob: -5.670259475708008
    10. ' lambda' → logprob: -5.670259475708008

Token 232: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.044988326728343964
    2. ' -' → logprob: -3.7949883937835693
    3. 'based' → logprob: -4.16998815536499
    4. ' based' → logprob: -5.66998815536499
    5. '_based' → logprob: -6.66998815536499
    6. '-index' → logprob: -7.04498815536499
    7. '-' → logprob: -8.044988632202148
    8. '-base' → logprob: -9.669988632202148
    9. 'Based' → logprob: -9.919988632202148
    10. ' indexed' → logprob: -12.044988632202148

Token 233: ' arrays' (ID: 38774)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: ',
' (ID: 412)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 235: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5782155394554138
    2. '<|end|>' → logprob: -0.9532155394554138
    3. '   ' → logprob: -3.8282155990600586
    4. ' and' → logprob: -4.828215599060059
    5. ']' → logprob: -5.328215599060059
    6. '<|end|>' → logprob: -5.453215599060059
    7. ' )' → logprob: -5.703215599060059
    8. '[' → logprob: -6.453215599060059
    9. ')
' → logprob: -6.703215599060059
    10. ' 
' → logprob: -6.703215599060059

Token 236: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5935421586036682
    2. ')' → logprob: -0.9685421586036682
    3. '<|end|>' → logprob: -2.9685420989990234
    4. ']' → logprob: -5.343542098999023
    5. ' p' → logprob: -5.968542098999023
    6. ' )' → logprob: -6.468542098999023
    7. '#' (adapté à ' #') → logprob: -7.093542098999023
    8. ' and' → logprob: -7.218542098999023
    9. 'def' → logprob: -7.218542098999023
    10. '<|end|>' → logprob: -7.218542098999023

Token 237: ' where' (ID: 1919)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.1861006021499634
    2. 'perm' → logprob: -1.4361006021499634
    3. 'def' → logprob: -1.6861006021499634
    4. '#' → logprob: -2.311100482940674
    5. ' p' → logprob: -2.811100482940674
    6. 'pp' → logprob: -3.186100482940674
    7. 'import' → logprob: -4.061100482940674
    8. 'parts' → logprob: -4.186100482940674
    9. ' def' → logprob: -5.311100482940674
    10. 'part' → logprob: -5.311100482940674

Token 238: ' p' (ID: 275)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.9322260618209839
    2. 'perm' → logprob: -1.5572260618209839
    3. 'p' → logprob: -1.8072260618209839
    4. ' p' → logprob: -2.4322261810302734
    5. ' perm' → logprob: -3.9322261810302734
    6. ' composition' → logprob: -3.9322261810302734
    7. 'def' → logprob: -4.057226181030273
    8. 'composition' → logprob: -4.057226181030273
    9. ' def' → logprob: -4.307226181030273
    10. ' the' → logprob: -4.682226181030273

Token 239: '[i' (ID: 1768)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2356739640235901
    2. '[i' → logprob: -1.7356739044189453
    3. 'erm' → logprob: -4.485673904418945
    4. '=' → logprob: -5.110673904418945
    5. ' =' → logprob: -5.110673904418945
    6. '[p' → logprob: -5.860673904418945
    7. '=[' → logprob: -6.360673904418945
    8. '[' → logprob: -6.610673904418945
    9. ' p' → logprob: -7.235673904418945
    10. 's' → logprob: -7.860673904418945

Token 240: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02988366037607193
    2. ']=' → logprob: -3.529883623123169
    3. ' ]' → logprob: -10.40488338470459
    4. ']+=' → logprob: -10.65488338470459
    5. ']==' → logprob: -10.77988338470459
    6. '],' → logprob: -11.40488338470459
    7. 's' → logprob: -11.52988338470459
    8. '=' → logprob: -11.77988338470459
    9. ']=(' → logprob: -12.90488338470459
    10. 'def' → logprob: -13.52988338470459

Token 241: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04956289753317833
    2. ' =' → logprob: -3.549562931060791
    3. ']' → logprob: -5.049562931060791
    4. ' is' → logprob: -5.549562931060791
    5. '=p' → logprob: -5.549562931060791
    6. ']=' → logprob: -5.674562931060791
    7. ' maps' → logprob: -7.424562931060791
    8. '=i' → logprob: -7.549562931060791
    9. 'is' → logprob: -9.174562454223633
    10. ' represents' → logprob: -9.424562454223633

Token 242: ' position' (ID: 4010)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.0004969134461134672
    2. ' pp' → logprob: -7.625496864318848
    3. '	pp' → logprob: -12.375496864318848
    4. 'i' → logprob: -12.625496864318848
    5. 'the' → logprob: -15.250496864318848
    6. '(pp' → logprob: -15.250496864318848
    7. 'p' → logprob: -15.500496864318848
    8. ' ' → logprob: -15.750496864318848
    9. ' i' → logprob: -16.125497817993164
    10. '   ' → logprob: -16.500497817993164

Token 243: ' after' (ID: 1934)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.461760938167572
    2. '+' → logprob: -2.711760997772217
    3. ' of' → logprob: -2.961760997772217
    4. ']+' → logprob: -3.211760997772217
    5. 'of' → logprob: -3.336760997772217
    6. ']+=' → logprob: -3.586760997772217
    7. '   ' → logprob: -3.711760997772217
    8. 's' → logprob: -4.086760997772217
    9. 'import' → logprob: -4.336760997772217
    10. ')' → logprob: -4.711760997772217

Token 244: ' transformation' (ID: 26242)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.020769838243722916
    2. ' pp' → logprob: -3.8957698345184326
    3. 'p' → logprob: -9.020770072937012
    4. 'the' → logprob: -10.770770072937012
    5. ' p' → logprob: -11.020770072937012
    6. 'per' → logprob: -11.145770072937012
    7. 'perm' → logprob: -11.270770072937012
    8. 'app' → logprob: -11.520770072937012
    9. ' the' → logprob: -11.645770072937012
    10. 'i' → logprob: -11.770770072937012

Token 245: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3894178569316864
    2. ' i' → logprob: -1.1394178867340088
    3. ' input' → logprob: -6.26441764831543
    4. 'input' → logprob: -8.13941764831543
    5. 'pp' → logprob: -9.01441764831543
    6. ' pp' → logprob: -9.26441764831543
    7. ' the' → logprob: -9.76441764831543
    8. 'the' → logprob: -11.01441764831543
    9. ' ' → logprob: -11.26441764831543
    10. ' p' → logprob: -11.38941764831543

Token 247: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26326504349708557
    2. '   ' → logprob: -2.1382651329040527
    3. '<|end|>' → logprob: -2.5132651329040527
    4. ']' → logprob: -3.6382651329040527
    5. '}' → logprob: -6.013265132904053
    6. '<|end|>' → logprob: -7.513265132904053
    7. '[' → logprob: -7.763265132904053
    8. '])' → logprob: -8.013264656066895
    9. 'tokens' → logprob: -8.013264656066895
    10. ')
' → logprob: -8.263264656066895

Token 249: ' parts' (ID: 7881)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48097681999206543
    2. '   ' → logprob: -1.3559768199920654
    3. '<|end|>' → logprob: -2.3559768199920654
    4. ']' → logprob: -4.4809770584106445
    5. '}' → logprob: -4.6059770584106445
    6. 'parts' (adapté à ' parts') → logprob: -5.9809770584106445
    7. 'tokens' → logprob: -7.2309770584106445
    8. ' parts' → logprob: -7.3559770584106445
    9. '<|end|>' → logprob: -7.3559770584106445
    10. '])' → logprob: -7.8559770584106445

Token 250: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -7.703443770878948e-06
    2. '[' → logprob: -12.000007629394531
    3. '\[' → logprob: -14.625007629394531
    4. ' [' → logprob: -14.875007629394531
    5. '[P' → logprob: -15.375007629394531
    6. 'p' → logprob: -15.625007629394531
    7. '[int' → logprob: -16.25000762939453
    8. '```' → logprob: -17.25000762939453
    9. '[s' → logprob: -17.37500762939453
    10. '[c' → logprob: -17.87500762939453

Token 251: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3132949769496918
    2. ']=' → logprob: -1.3132950067520142
    3. ' ]' → logprob: -10.938295364379883
    4. ']=(' → logprob: -11.563295364379883
    5. ']={' → logprob: -13.063295364379883
    6. '=' → logprob: -13.938295364379883
    7. '']=' → logprob: -14.313295364379883
    8. ']]=' → logprob: -14.563295364379883
    9. ']+=' → logprob: -14.813295364379883
    10. '"]=' → logprob: -14.938295364379883

Token 252: 'pp' (ID: 654)
  Prédit: 'pp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -5.512236498361744e-07
    2. ' pp' → logprob: -14.500000953674316
    3. '(pp' → logprob: -18.25
    4. '	pp' → logprob: -18.75
    5. '{' → logprob: -19.25
    6. '[' → logprob: -20.625
    7. 'np' → logprob: -21.875
    8. 'ppy' → logprob: -22.0
    9. 'p' → logprob: -22.5
    10. 'ppi' → logprob: -22.5

Token 253: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 254: 'E' (ID: 36)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: '=int' (ID: 37431)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 256: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007511268835514784
    2. 'input' → logprob: -5.257511138916016
    3. '(int' → logprob: -6.132511138916016
    4. 'int' → logprob: -9.507511138916016
    5. '=input' → logprob: -10.882511138916016
    6. '=int' → logprob: -12.632511138916016
    7. ' input' → logprob: -12.757511138916016
    8. ',input' → logprob: -13.132511138916016
    9. 'E' → logprob: -14.382511138916016
    10. ' (' → logprob: -14.382511138916016

Token 257: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.016680890694260597
    2. '()' → logprob: -4.516680717468262
    3. '())
' → logprob: -5.266680717468262
    4. ')' → logprob: -7.766680717468262
    5. '()
' → logprob: -10.891680717468262
    6. '())
' → logprob: -12.141680717468262
    7. '(' → logprob: -12.516680717468262
    8. ' ())' → logprob: -13.141680717468262
    9. '())

' → logprob: -13.516680717468262
    10. '().' → logprob: -14.266680717468262

Token 258: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4049749970436096
    2. 'answers' → logprob: -2.529974937438965
    3. 'res' → logprob: -3.154974937438965
    4. 'query' → logprob: -3.404974937438965
    5. 'ans' → logprob: -3.404974937438965
    6. 'queries' → logprob: -3.529974937438965
    7. 'result' → logprob: -3.779974937438965
    8. 'results' → logprob: -4.154974937438965
    9. 'positions' → logprob: -4.654974937438965
    10. 'current' → logprob: -4.654974937438965

Token 259: ' Parse' (ID: 26701)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2651386260986328
    2. 'from' → logprob: -2.015138626098633
    3. 'answers' → logprob: -2.265138626098633
    4. 'queries' → logprob: -2.390138626098633
    5. 'res' → logprob: -2.765138626098633
    6. 'def' → logprob: -2.890138626098633
    7. 'query' → logprob: -3.265138626098633
    8. 'ans' → logprob: -3.390138626098633
    9. 'result' → logprob: -3.640138626098633
    10. 'dp' → logprob: -3.765138626098633

Token 260: ' expression' (ID: 12973)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9104070663452148
    2. '_' → logprob: -1.1604070663452148
    3. 'parts' → logprob: -3.035407066345215
    4. 'commands' → logprob: -3.410407066345215
    5. 'queries' → logprob: -3.535407066345215
    6. 'E' → logprob: -3.910407066345215
    7. 'lines' → logprob: -4.035407066345215
    8. '()' → logprob: -4.285407066345215
    9. 'events' → logprob: -4.285407066345215
    10. 'e' → logprob: -4.410407066345215

Token 261: ' into' (ID: 1511)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.016291597858071327
    2. 'expression' → logprob: -4.391291618347168
    3. 'exp' → logprob: -5.766291618347168
    4. 'import' → logprob: -8.516291618347168
    5. 's' → logprob: -8.766291618347168
    6. 'S' → logprob: -9.391291618347168
    7. 'stack' → logprob: -9.891291618347168
    8. 'e' → logprob: -10.016291618347168
    9. 'express' → logprob: -10.891291618347168
    10. 'res' → logprob: -11.641291618347168

Token 262: ' sequence' (ID: 16281)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.28012615442276
    2. '[]' → logprob: -1.5301260948181152
    3. ' tokens' → logprob: -5.155126094818115
    4. 'expr' → logprob: -5.405126094818115
    5. 'input' → logprob: -5.530126094818115
    6. 'list' → logprob: -5.905126094818115
    7. 'tree' → logprob: -6.030126094818115
    8. 'lst' → logprob: -6.655126094818115
    9. 'import' → logprob: -6.905126094818115
    10. 's' → logprob: -6.905126094818115

Token 263: ' list' (ID: 1562)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.11580831557512283
    2. 's' → logprob: -2.8658082485198975
    3. 'exp' → logprob: -3.9908082485198975
    4. 'tokens' → logprob: -4.240808486938477
    5. 'expression' → logprob: -4.740808486938477
    6. ' =' → logprob: -5.865808486938477
    7. '=' → logprob: -6.240808486938477
    8. 'line' → logprob: -6.615808486938477
    9. 'code' → logprob: -7.115808486938477
    10. '(expr' → logprob: -7.365808486938477

Token 264: ':' (ID: 25)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.021358484402298927
    2. 'expression' → logprob: -4.521358489990234
    3. 'exp' → logprob: -5.271358489990234
    4. 's' → logprob: -5.896358489990234
    5. 'seq' → logprob: -6.896358489990234
    6. 'stack' → logprob: -7.271358489990234
    7. 'S' → logprob: -8.771358489990234
    8. 'import' → logprob: -8.896358489990234
    9. 'tokens' → logprob: -9.146358489990234
    10. 'def' → logprob: -10.021358489990234

Token 265: ' element' (ID: 3577)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.11112423241138458
    2. 'seq' → logprob: -3.486124277114868
    3. 'exp' → logprob: -3.611124277114868
    4. '[]' → logprob: -3.861124277114868
    5. 's' → logprob: -4.611124038696289
    6. 'expression' → logprob: -4.611124038696289
    7. 'stack' → logprob: -6.111124038696289
    8. 'tokens' → logprob: -6.736124038696289
    9. 'parts' → logprob: -7.486124038696289
    10. 'lst' → logprob: -7.736124038696289

Token 266: ' is' (ID: 382)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.3320981562137604
    2. 's' → logprob: -1.957098126411438
    3. '=' → logprob: -2.3320982456207275
    4. '[]' → logprob: -3.3320982456207275
    5. '=[]
' → logprob: -5.582098007202148
    6. '[]=' → logprob: -6.957098007202148
    7. ' =' → logprob: -7.082098007202148
    8. 'sequence' → logprob: -7.582098007202148
    9. 'tokens' → logprob: -8.207098007202148
    10. '=line' → logprob: -8.332098007202148

Token 267: ' (' (ID: 350)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3770349323749542
    2. '''' → logprob: -1.3770349025726318
    3. '('' → logprob: -3.377034902572632
    4. '""' → logprob: -4.252035140991211
    5. '('',' → logprob: -5.127035140991211
    6. ''' → logprob: -6.252035140991211
    7. '()' → logprob: -6.252035140991211
    8. '(' → logprob: -6.502035140991211
    9. '['' → logprob: -7.002035140991211
    10. '[]
' → logprob: -8.002035140991211

Token 268: 'type' (ID: 2493)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.4255506694316864
    2. ''p' → logprob: -1.8005506992340088
    3. 'p' → logprob: -2.800550699234009
    4. ''s' → logprob: -2.925550699234009
    5. ''' → logprob: -3.550550699234009
    6. 'parts' → logprob: -3.800550699234009
    7. ')' → logprob: -6.05055046081543
    8. ''int' → logprob: -6.17555046081543
    9. ''type' → logprob: -6.67555046081543
    10. 'True' → logprob: -6.80055046081543

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011616500560194254
    2. ',str' → logprob: -7.876161575317383
    3. ',value' → logprob: -8.876161575317383
    4. ',input' → logprob: -9.126161575317383
    5. ',name' → logprob: -9.376161575317383
    6. ')' → logprob: -9.501161575317383
    7. ',p' → logprob: -10.251161575317383
    8. ',char' → logprob: -10.501161575317383
    9. ',type' → logprob: -10.751161575317383
    10. ',line' → logprob: -10.751161575317383

Token 270: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.5516831278800964
    2. ''value' → logprob: -1.0516831874847412
    3. ''s' → logprob: -3.801683187484741
    4. ' value' → logprob: -4.051682949066162
    5. ''op' → logprob: -4.676682949066162
    6. ''p' → logprob: -4.676682949066162
    7. ''' → logprob: -5.551682949066162
    8. ''name' → logprob: -5.926682949066162
    9. '"value' → logprob: -6.301682949066162
    10. ''int' → logprob: -6.551682949066162

Token 271: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28243502974510193
    2. ',' → logprob: -1.4074350595474243
    3. ',)' → logprob: -7.532434940338135
    4. '[' → logprob: -8.282435417175293
    5. ')
' → logprob: -8.532435417175293
    6. 's' → logprob: -10.157435417175293
    7. '=' → logprob: -10.407435417175293
    8. '[])' → logprob: -10.782435417175293
    9. ' )' → logprob: -10.907435417175293
    10. ',
' → logprob: -11.157435417175293

Token 272: '#' (ID: 2)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.022651417180895805
    2. 'expression' → logprob: -4.397651195526123
    3. 'seq' → logprob: -5.522651195526123
    4. 'tokens' → logprob: -6.647651195526123
    5. 'exp' → logprob: -6.897651195526123
    6. 'parts' → logprob: -7.022651195526123
    7. 'def' → logprob: -7.147651195526123
    8. 'stack' → logprob: -7.772651195526123
    9. 'elements' → logprob: -7.772651195526123
    10. ' expr' → logprob: -8.022651672363281

Token 273: ' type' (ID: 1490)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.09926141053438187
    2. 'tokens' → logprob: -2.849261522293091
    3. 'expression' → logprob: -4.224261283874512
    4. 'seq' → logprob: -4.849261283874512
    5. 'elements' → logprob: -5.224261283874512
    6. 'def' → logprob: -5.599261283874512
    7. 'token' → logprob: -6.724261283874512
    8. 'stack' → logprob: -6.974261283874512
    9. '#' → logprob: -7.474261283874512
    10. 'sequence' → logprob: -7.474261283874512

Token 274: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24396692216396332
    2. '=' → logprob: -1.6189669370651245
    3. ')' → logprob: -5.368967056274414
    4. ' =' → logprob: -5.368967056274414
    5. '_' → logprob: -5.618967056274414
    6. '_,' → logprob: -5.618967056274414
    7. 's' → logprob: -7.118967056274414
    8. ' ,' → logprob: -8.993967056274414
    9. '#' → logprob: -9.493967056274414
    10. ',value' → logprob: -9.493967056274414

Token 275: ' '' (ID: 461)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.16773472726345062
    2. ''int' → logprob: -2.6677346229553223
    3. ' str' → logprob: -2.9177346229553223
    4. ''s' → logprob: -4.042734622955322
    5. ''' → logprob: -4.917734622955322
    6. 'int' → logprob: -5.542734622955322
    7. ' int' → logprob: -7.042734622955322
    8. '"' → logprob: -7.292734622955322
    9. '0' → logprob: -7.917734622955322
    10. ' '' → logprob: -8.79273509979248

Token 276: 'part' (ID: 5815)
  Prédit: 'part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.4209580719470978
    2. 'str' → logprob: -2.7959580421447754
    3. 'char' → logprob: -2.9209580421447754
    4. 'p' → logprob: -3.0459580421447754
    5. 'op' → logprob: -3.0459580421447754
    6. 'elem' → logprob: -3.5459580421447754
    7. '('' → logprob: -3.6709580421447754
    8. 'var' → logprob: -3.7959580421447754
    9. 'paren' → logprob: -4.545958042144775
    10. 'id' → logprob: -4.670958042144775

Token 277: ''' (ID: 6)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.6957972049713135
    2. ''' → logprob: -0.8207972049713135
    3. '','' → logprob: -3.4457972049713135
    4. ',' → logprob: -3.6957972049713135
    5. ','' → logprob: -5.570796966552734
    6. ''s' → logprob: -9.695796966552734
    7. '',"' → logprob: -9.820796966552734
    8. '```' → logprob: -9.820796966552734
    9. '',
' → logprob: -10.070796966552734
    10. '',(' → logprob: -10.445796966552734

Token 278: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04825141653418541
    2. '=' → logprob: -3.1732513904571533
    3. '<|end|>' → logprob: -5.923251628875732
    4. ' =' → logprob: -7.173251628875732
    5. ')' → logprob: -7.173251628875732
    6. ' ,' → logprob: -8.173251152038574
    7. ',value' → logprob: -8.298251152038574
    8. ' or' → logprob: -8.923251152038574
    9. ',
' → logprob: -9.548251152038574
    10. '='' → logprob: -9.798251152038574

Token 279: ' single' (ID: 4590)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.06425505876541138
    2. ''' → logprob: -2.9392549991607666
    3. 'str' → logprob: -6.189255237579346
    4. 'p' → logprob: -6.689255237579346
    5. 'identifier' → logprob: -7.189255237579346
    6. ' part' → logprob: -7.189255237579346
    7. ''s' → logprob: -7.314255237579346
    8. ''p' → logprob: -7.314255237579346
    9. 'parts' → logprob: -7.814255237579346
    10. 'token' → logprob: -7.814255237579346

Token 280: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.23454459011554718
    2. 'token' → logprob: -1.9845446348190308
    3. 'element' → logprob: -3.859544515609741
    4. 'parts' → logprob: -4.35954475402832
    5. 'character' → logprob: -4.98454475402832
    6. ' part' → logprob: -5.35954475402832
    7. '<|end|>' → logprob: -5.48454475402832
    8. ',' → logprob: -5.98454475402832
    9. ')' → logprob: -6.10954475402832
    10. 'word' → logprob: -6.35954475402832

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007854561321437359
    2. ',
' → logprob: -6.257854461669922
    3. 'expression' → logprob: -6.757854461669922
    4. '',' → logprob: -7.132854461669922
    5. '=' → logprob: -7.382854461669922
    6. 'expr' → logprob: -7.507854461669922
    7. '_expression' → logprob: -8.132854461669922
    8. ' =' → logprob: -8.257854461669922
    9. ' ,' → logprob: -8.382854461669922
    10. '_expr' → logprob: -8.382854461669922

Token 282: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5424286723136902
    2. ''op' → logprob: -1.292428731918335
    3. ''ex' → logprob: -2.042428731918335
    4. ''value' → logprob: -5.292428493499756
    5. ''s' → logprob: -5.542428493499756
    6. ''int' → logprob: -6.292428493499756
    7. ''exp' → logprob: -7.167428493499756
    8. ''m' → logprob: -7.292428493499756
    9. '#' → logprob: -7.667428493499756
    10. ''type' → logprob: -8.292428970336914

Token 283: 'seq' (ID: 27794)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.40838807821273804
    2. 'paren' → logprob: -2.158388137817383
    3. 'op' → logprob: -2.408388137817383
    4. 'expr' → logprob: -3.033388137817383
    5. 'open' → logprob: -3.908388137817383
    6. 'par' → logprob: -4.408388137817383
    7. ''' → logprob: -5.033388137817383
    8. 'group' → logprob: -5.033388137817383
    9. 'exp' → logprob: -5.033388137817383
    10. 'number' → logprob: -5.783388137817383

Token 284: ''' (ID: 6)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.25447210669517517
    2. ''' → logprob: -2.004472017288208
    3. '',' → logprob: -2.504472017288208
    4. 'quence' → logprob: -6.254472255706787
    5. ''u' → logprob: -6.379472255706787
    6. 'ue' → logprob: -6.879472255706787
    7. '')' → logprob: -7.129472255706787
    8. '','' → logprob: -7.629472255706787
    9. 'ence' → logprob: -7.879472255706787
    10. 'uest' → logprob: -8.254471778869629

Token 285: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00777887599542737
    2. 'for' → logprob: -6.132778644561768
    3. '=' → logprob: -6.632778644561768
    4. '<|end|>' → logprob: -7.007778644561768
    5. ' or' → logprob: -7.257778644561768
    6. ' =' → logprob: -7.257778644561768
    7. ',
' → logprob: -8.007779121398926
    8. 'or' → logprob: -8.257779121398926
    9. ')' → logprob: -8.257779121398926
    10. ' for' → logprob: -8.632779121398926

Token 286: ' sequence' (ID: 16281)
  Prédit: ''ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''ex' → logprob: -0.4516414403915405
    2. ''' → logprob: -1.2016414403915405
    3. 'sequence' → logprob: -3.07664155960083
    4. ''s' → logprob: -4.32664155960083
    5. ''exp' → logprob: -7.07664155960083
    6. 'expression' → logprob: -7.20164155960083
    7. ''op' → logprob: -8.076641082763672
    8. 'list' → logprob: -8.201641082763672
    9. ''e' → logprob: -8.576641082763672
    10. ''application' → logprob: -8.576641082763672

Token 287: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3916412591934204
    2. '=[]' → logprob: -2.016641139984131
    3. '=' → logprob: -2.516641139984131
    4. ',' → logprob: -3.141641139984131
    5. '=[]
' → logprob: -3.516641139984131
    6. 'expression' → logprob: -4.766641139984131
    7. 'expr' → logprob: -4.766641139984131
    8. 's' → logprob: -5.516641139984131
    9. '_expr' → logprob: -5.641641139984131
    10. 'parts' → logprob: -6.016641139984131

Token 288: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9611970782279968
    2. ''ex' → logprob: -0.9611970782279968
    3. ''op' → logprob: -2.2111971378326416
    4. ''s' → logprob: -2.7111971378326416
    5. '#' → logprob: -4.3361968994140625
    6. ''re' → logprob: -4.4611968994140625
    7. ''value' → logprob: -4.7111968994140625
    8. ''exp' → logprob: -4.9611968994140625
    9. ''n' → logprob: -5.5861968994140625
    10. ''type' → logprob: -5.7111968994140625

Token 289: 'repeat' (ID: 63242)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18494483828544617
    2. ''ex' → logprob: -3.1849448680877686
    3. 'par' → logprob: -3.4349448680877686
    4. 'paren' → logprob: -4.1849446296691895
    5. 'expr' → logprob: -4.4349446296691895
    6. ''op' → logprob: -4.5599446296691895
    7. ''s' → logprob: -4.6849446296691895
    8. ''exp' → logprob: -5.0599446296691895
    9. 'repeat' → logprob: -5.1849446296691895
    10. 'tuple' → logprob: -5.5599446296691895

Token 290: ''' (ID: 6)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5468319058418274
    2. ''' → logprob: -1.0468318462371826
    3. '',' → logprob: -2.9218318462371826
    4. ')' → logprob: -4.546832084655762
    5. '_count' → logprob: -6.421832084655762
    6. '']' → logprob: -7.171832084655762
    7. '','' → logprob: -7.171832084655762
    8. '=' → logprob: -8.046832084655762
    9. '<|end|>' → logprob: -8.296832084655762
    10. 'count' → logprob: -8.546832084655762

Token 291: ' for' (ID: 395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46426650881767273
    2. ',' → logprob: -1.9642665386199951
    3. 'expression' → logprob: -2.339266538619995
    4. ' =' → logprob: -2.714266538619995
    5. 'expr' → logprob: -4.339266300201416
    6. '=[]' → logprob: -4.339266300201416
    7. 'import' → logprob: -5.464266300201416
    8. '=
' → logprob: -5.464266300201416
    9. 'parts' → logprob: -5.464266300201416
    10. '_expression' → logprob: -5.464266300201416

Token 292: ' repeated' (ID: 24161)
  Prédit: ''re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''re' → logprob: -0.7449465394020081
    2. 'repeat' → logprob: -1.3699464797973633
    3. ''' → logprob: -1.9949464797973633
    4. ''ex' → logprob: -2.2449464797973633
    5. ''s' → logprob: -4.994946479797363
    6. ''m' → logprob: -5.494946479797363
    7. 'expression' → logprob: -5.744946479797363
    8. 'sequence' → logprob: -6.369946479797363
    9. ''exp' → logprob: -6.369946479797363
    10. 'part' → logprob: -6.619946479797363

Token 293: ' sequence' (ID: 16281)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.03761379048228264
    2. 'tokens' → logprob: -4.287613868713379
    3. 'elements' → logprob: -5.162613868713379
    4. 'seq' → logprob: -5.287613868713379
    5. 'exp' → logprob: -5.537613868713379
    6. 'expression' → logprob: -6.162613868713379
    7. 'parts' → logprob: -6.287613868713379
    8. 'sequence' → logprob: -6.537613868713379
    9. 'lst' → logprob: -7.287613868713379
    10. 'elem' → logprob: -7.787613868713379

Token 294: '
' (ID: 198)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.41879788041114807
    2. 'expression' → logprob: -1.2937978506088257
    3. 'def' → logprob: -2.9187979698181152
    4. 'seq' → logprob: -5.918797969818115
    5. 'sequence' → logprob: -6.043797969818115
    6. 'parts' → logprob: -6.043797969818115
    7. 'exp' → logprob: -6.168797969818115
    8. 'tokens' → logprob: -6.293797969818115
    9. 'import' → logprob: -6.918797969818115
    10. 'code' → logprob: -8.293797492980957

Token 295: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7054509520530701
    2. 'expr' → logprob: -1.0804510116577148
    3. 'expression' → logprob: -2.080451011657715
    4. 'tokens' → logprob: -4.080451011657715
    5. 'parts' → logprob: -4.830451011657715
    6. 'seq' → logprob: -5.455451011657715
    7. 'sequence' → logprob: -5.580451011657715
    8. 'exp' → logprob: -6.080451011657715
    9. 'import' → logprob: -6.330451011657715
    10. 'code' → logprob: -6.830451011657715

Token 296: ' we' (ID: 581)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3486608862876892
    2. 'expr' → logprob: -1.598660945892334
    3. 'expression' → logprob: -2.723660945892334
    4. 'import' → logprob: -4.598660945892334
    5. 'tokens' → logprob: -5.098660945892334
    6. 'sequence' → logprob: -5.723660945892334
    7. 'seq' → logprob: -5.973660945892334
    8. 'from' → logprob: -6.973660945892334
    9. 'stack' → logprob: -6.973660945892334
    10. 'code' → logprob: -7.348660945892334

Token 297: ' parse' (ID: 8420)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31022176146507263
    2. 'def' → logprob: -1.935221791267395
    3. ' =' → logprob: -2.4352216720581055
    4. ''ll' → logprob: -4.5602216720581055
    5. ' continue' → logprob: -5.5602216720581055
    6. ' def' → logprob: -5.9352216720581055
    7. 'continue' → logprob: -6.1852216720581055
    8. 're' → logprob: -6.1852216720581055
    9. '#' → logprob: -6.4352216720581055
    10. ''' → logprob: -6.5602216720581055

Token 298: ' into' (ID: 1511)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39760780334472656
    2. 's' → logprob: -2.3976078033447266
    3. 'tokens' → logprob: -2.6476078033447266
    4. 'expr' → logprob: -2.8976078033447266
    5. 'expression' → logprob: -3.2726078033447266
    6. '(' → logprob: -4.147607803344727
    7. 'token' → logprob: -4.147607803344727
    8. 'stack' → logprob: -4.272607803344727
    9. '()' → logprob: -5.772607803344727
    10. ' def' → logprob: -5.772607803344727

Token 299: ' nested' (ID: 47576)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1786285936832428
    2. 'tokens' → logprob: -2.42862868309021
    3. 'def' → logprob: -2.92862868309021
    4. 'a' → logprob: -4.678628444671631
    5. '[' → logprob: -5.053628444671631
    6. '['' → logprob: -6.053628444671631
    7. '('' → logprob: -6.178628444671631
    8. ' tokens' → logprob: -8.178628921508789
    9. ' a' → logprob: -8.303628921508789
    10. 'token' → logprob: -8.428628921508789

Token 300: ' structure' (ID: 8866)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.50997394323349
    2. '[' → logprob: -1.5099740028381348
    3. 'list' → logprob: -2.1349740028381348
    4. 'def' → logprob: -3.7599740028381348
    5. '_list' → logprob: -4.384974002838135
    6. 'lists' → logprob: -5.509974002838135
    7. 'tokens' → logprob: -5.759974002838135
    8. '=[]' → logprob: -5.759974002838135
    9. 'structures' → logprob: -6.134974002838135
    10. '_tokens' → logprob: -6.509974002838135

Token 301: ' and' (ID: 326)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.5785542726516724
    2. 'def' → logprob: -1.4535542726516724
    3. 'stack' → logprob: -2.203554153442383
    4. 'expression' → logprob: -3.203554153442383
    5. 's' → logprob: -4.078554153442383
    6. 'tokens' → logprob: -4.203554153442383
    7. 'import' → logprob: -4.453554153442383
    8. 'token' → logprob: -5.453554153442383
    9. 'pos' → logprob: -6.078554153442383
    10. 'code' → logprob: -6.453554153442383

Token 302: ' then' (ID: 1815)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14096079766750336
    2. 'pos' → logprob: -3.640960693359375
    3. 'token' → logprob: -4.390960693359375
    4. ' def' → logprob: -4.515960693359375
    5. 'import' → logprob: -4.640960693359375
    6. ' tokenize' → logprob: -4.640960693359375
    7. 'consume' → logprob: -5.265960693359375
    8. 'stack' → logprob: -5.515960693359375
    9. 'continue' → logprob: -5.640960693359375
    10. ' continue' → logprob: -5.765960693359375

Token 303: ' build' (ID: 3024)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02496197819709778
    2. 'import' → logprob: -4.524961948394775
    3. 'define' → logprob: -5.274961948394775
    4. 'evaluate' → logprob: -5.899961948394775
    5. ' tokenize' → logprob: -5.899961948394775
    6. 'token' → logprob: -7.274961948394775
    7. ' define' → logprob: -7.649961948394775
    8. ' def' → logprob: -8.149962425231934
    9. 'from' → logprob: -8.149962425231934
    10. 'continue' → logprob: -8.899962425231934

Token 304: ' overall' (ID: 10705)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.7654114365577698
    2. 'def' → logprob: -1.015411376953125
    3. 'expr' → logprob: -2.640411376953125
    4. 'tokens' → logprob: -3.515411376953125
    5. 'token' → logprob: -3.765411376953125
    6. 'code' → logprob: -4.015411376953125
    7. 's' → logprob: -4.765411376953125
    8. 'import' → logprob: -5.015411376953125
    9. ' stack' → logprob: -6.015411376953125
    10. 'expression' → logprob: -6.015411376953125

Token 305: ' permutation' (ID: 135200)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6341516375541687
    2. 'stack' → logprob: -1.7591516971588135
    3. 'tokens' → logprob: -2.0091516971588135
    4. 'expr' → logprob: -2.1341516971588135
    5. 'import' → logprob: -3.8841516971588135
    6. 'code' → logprob: -5.009151458740234
    7. 'expression' → logprob: -5.134151458740234
    8. 'pos' → logprob: -5.384151458740234
    9. 'token' → logprob: -5.509151458740234
    10. 'seq' → logprob: -7.384151458740234

Token 306: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1328165978193283
    2. 'expr' → logprob: -3.0078165531158447
    3. 'stack' → logprob: -3.7578165531158447
    4. 'expression' → logprob: -4.757816791534424
    5. 'import' → logprob: -4.882816791534424
    6. ')' → logprob: -4.882816791534424
    7. 'tokens' → logprob: -5.007816791534424
    8. 'token' → logprob: -5.507816791534424
    9. 'code' → logprob: -5.757816791534424
    10. 's' → logprob: -5.882816791534424

Token 307: '#
' (ID: 11240)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8253594040870667
    2. 'def' → logprob: -0.8253594040870667
    3. 'tokens' → logprob: -3.075359344482422
    4. 'token' → logprob: -3.700359344482422
    5. ')' → logprob: -4.450359344482422
    6. '[' → logprob: -4.575359344482422
    7. 'stack' → logprob: -5.575359344482422
    8. 'import' → logprob: -5.700359344482422
    9. 'code' → logprob: -5.950359344482422
    10. ' (' → logprob: -6.075359344482422

Token 308: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.050952665507793427
    2. '(' → logprob: -4.425952434539795
    3. 'tokens' → logprob: -5.175952434539795
    4. 'expr' → logprob: -5.300952434539795
    5. 'expression' → logprob: -5.300952434539795
    6. 'import' → logprob: -5.425952434539795
    7. 'token' → logprob: -5.550952434539795
    8. '#' → logprob: -6.175952434539795
    9. ')' → logprob: -6.300952434539795
    10. 'stack' → logprob: -6.300952434539795

Token 309: ' Grammar' (ID: 104879)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10917650908231735
    2. 'import' → logprob: -2.7341763973236084
    3. 'from' → logprob: -4.4841766357421875
    4. 'expr' → logprob: -4.7341766357421875
    5. 'stack' → logprob: -4.8591766357421875
    6. 'class' → logprob: -5.3591766357421875
    7. 'code' → logprob: -6.4841766357421875
    8. 'pos' → logprob: -6.8591766357421875
    9. 'tokens' → logprob: -6.9841766357421875
    10. 'expression' → logprob: -7.1091766357421875

Token 310: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.399053692817688
    2. ' =' → logprob: -1.524053692817688
    3. 'expr' → logprob: -2.2740535736083984
    4. ':
' → logprob: -2.6490535736083984
    5. '``' → logprob: -2.6490535736083984
    6. '```' → logprob: -2.7740535736083984
    7. 'S' → logprob: -2.8990535736083984
    8. 'expression' → logprob: -3.0240535736083984
    9. ' S' → logprob: -3.7740535736083984
    10. '=' → logprob: -4.024053573608398

Token 311: '#' (ID: 2)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.8507868051528931
    2. 'expression' → logprob: -0.8507868051528931
    3. 'S' → logprob: -2.6007866859436035
    4. '#' → logprob: -3.9757866859436035
    5. ' expression' → logprob: -4.6007866859436035
    6. 'Expr' → logprob: -4.6007866859436035
    7. '``' → logprob: -4.9757866859436035
    8. '"""
' → logprob: -5.2257866859436035
    9. 'start' → logprob: -5.6007866859436035
    10. ' expr' → logprob: -5.6007866859436035

Token 312: ' expression' (ID: 12973)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.8619887828826904
    2. 'expression' → logprob: -0.8619887828826904
    3. 'S' → logprob: -2.2369887828826904
    4. ' expression' → logprob: -4.2369890213012695
    5. 'Expr' → logprob: -4.3619890213012695
    6. ' expr' → logprob: -4.9869890213012695
    7. 'Expression' → logprob: -5.1119890213012695
    8. ' S' → logprob: -5.7369890213012695
    9. ' Expr' → logprob: -6.6119890213012695
    10. 'start' → logprob: -6.9869890213012695

Token 313: ' :=' (ID: 3405)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10720378905534744
    2. '=' → logprob: -2.357203722000122
    3. ' ::=' → logprob: -5.607203960418701
    4. ':' → logprob: -5.857203960418701
    5. ' ->' → logprob: -8.732203483581543
    6. ' :' → logprob: -9.107203483581543
    7. ' :=' → logprob: -9.482203483581543
    8. ' ' → logprob: -9.857203483581543
    9. ':=' → logprob: -12.357203483581543
    10. '=parse' → logprob: -12.482203483581543

Token 314: ' term' (ID: 2914)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.20526720583438873
    2. ' term' → logprob: -1.8302671909332275
    3. ' part' → logprob: -4.705267429351807
    4. 'part' → logprob: -4.955267429351807
    5. 'sequence' → logprob: -5.080267429351807
    6. 'factor' → logprob: -7.330267429351807
    7. ' sequence' → logprob: -7.580267429351807
    8. 'expression' → logprob: -7.580267429351807
    9. ' factor' → logprob: -7.705267429351807
    10. ' expression' → logprob: -8.080266952514648

Token 315: ' {'' (ID: 11881)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.908538281917572
    2. ' (' → logprob: -1.4085383415222168
    3. ' |' → logprob: -1.9085383415222168
    4. ' ('' → logprob: -3.283538341522217
    5. '('' → logprob: -3.408538341522217
    6. '(term' → logprob: -3.783538341522217
    7. ' {' → logprob: -3.908538341522217
    8. 'term' → logprob: -4.158538341522217
    9. ' ((' → logprob: -4.533538341522217
    10. ' ' → logprob: -4.908538341522217

Token 316: '+'' (ID: 14403)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.602239727973938
    2. '}' → logprob: -2.1022396087646484
    3. '|' → logprob: -2.6022396087646484
    4. '*' → logprob: -2.7272396087646484
    5. ''' → logprob: -3.9772396087646484
    6. ''}' → logprob: -3.9772396087646484
    7. ' '+'' → logprob: -3.9772396087646484
    8. ' +' → logprob: -4.352239608764648
    9. ' |' → logprob: -4.477239608764648
    10. 'term' → logprob: -4.477239608764648

Token 317: ' term' (ID: 2914)
  Prédit: ' term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' term' → logprob: -0.369828999042511
    2. 'term' → logprob: -1.2448289394378662
    3. ' expression' → logprob: -4.744829177856445
    4. '|' → logprob: -5.119829177856445
    5. ''' → logprob: -6.119829177856445
    6. 'expression' → logprob: -6.744829177856445
    7. ' '+'' → logprob: -6.869829177856445
    8. ' |' → logprob: -7.369829177856445
    9. ' ' → logprob: -7.619829177856445
    10. ' '' → logprob: -8.119829177856445

Token 318: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0034162935335189104
    2. ' }' → logprob: -6.003416061401367
    3. ''}' → logprob: -7.503416061401367
    4. '|' → logprob: -8.753416061401367
    5. ' |' → logprob: -9.753416061401367
    6. '}+' → logprob: -10.003416061401367
    7. '}
' → logprob: -10.628416061401367
    8. '*' → logprob: -10.628416061401367
    9. 'term' → logprob: -11.378416061401367
    10. ' '}' → logprob: -11.378416061401367

Token 319: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 320: ' term' (ID: 2914)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.30609896779060364
    2. 'term' → logprob: -1.9310989379882812
    3. '#' → logprob: -2.1810989379882812
    4. 'token' → logprob: -5.556098937988281
    5. ' def' → logprob: -6.931098937988281
    6. 'expression' → logprob: -7.931098937988281
    7. ' term' → logprob: -8.556098937988281
    8. ' #' → logprob: -9.806098937988281
    9. 'import' → logprob: -9.931098937988281
    10. 'next' → logprob: -9.931098937988281

Token 321: ' :=' (ID: 3405)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.649458110332489
    2. ' :=' → logprob: -1.3994581699371338
    3. ' ::=' → logprob: -2.024458169937134
    4. ':' → logprob: -2.649458169937134
    5. '=' → logprob: -4.649457931518555
    6. ' :' → logprob: -4.649457931518555
    7. ' ' → logprob: -5.524457931518555
    8. ' ->' → logprob: -6.274457931518555
    9. ':=' → logprob: -6.524457931518555
    10. 'def' → logprob: -7.649457931518555

Token 322: ' factor' (ID: 12332)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.060424886643886566
    2. 'part' → logprob: -3.4354248046875
    3. ' factor' → logprob: -3.8104248046875
    4. ' part' → logprob: -6.6854248046875
    5. ''' → logprob: -6.9354248046875
    6. 'repeat' → logprob: -7.8104248046875
    7. 'fact' → logprob: -7.9354248046875
    8. '('' → logprob: -8.0604248046875
    9. 'primary' → logprob: -8.5604248046875
    10. 'element' → logprob: -8.5604248046875

Token 323: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -1.5687365531921387
    2. '<|end|>' → logprob: -1.8187365531921387
    3. ' |' → logprob: -1.9437365531921387
    4. '{'' → logprob: -2.0687365531921387
    5. '{' → logprob: -2.6937365531921387
    6. ' =' → logprob: -3.0687365531921387
    7. 'factor' → logprob: -3.1937365531921387
    8. '{
' → logprob: -3.3187365531921387
    9. ' {'' → logprob: -3.3187365531921387
    10. '<|end|>' → logprob: -3.5687365531921387

Token 324: ' number' (ID: 2086)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.15673822164535522
    2. ' factor' → logprob: -2.03173828125
    3. 'repeat' → logprob: -4.40673828125
    4. ' repeat' → logprob: -6.65673828125
    5. ''' → logprob: -9.40673828125
    6. 'fact' → logprob: -9.65673828125
    7. 'term' → logprob: -9.78173828125
    8. 're' → logprob: -9.90673828125
    9. ' ' → logprob: -10.03173828125
    10. 'f' → logprob: -10.15673828125

Token 325: ' '('' (ID: 87284)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.6963403820991516
    2. '<|end|>' → logprob: -1.5713403224945068
    3. ' factor' → logprob: -2.071340322494507
    4. '*' → logprob: -2.321340322494507
    5. ' *' → logprob: -3.821340322494507
    6. '+' → logprob: -4.696340560913086
    7. ''*' → logprob: -4.821340560913086
    8. ''' → logprob: -4.946340560913086
    9. ' '*'' → logprob: -5.196340560913086
    10. '<|end|>' → logprob: -5.446340560913086

Token 326: ' expression' (ID: 12973)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.00946104060858488
    2. 'term' → logprob: -5.009460926055908
    3. ' factor' → logprob: -6.509460926055908
    4. 'expression' → logprob: -6.759460926055908
    5. 'fact' → logprob: -10.759461402893066
    6. ' expression' → logprob: -11.134461402893066
    7. 'number' → logprob: -11.384461402893066
    8. ' term' → logprob: -11.634461402893066
    9. ')' → logprob: -11.759461402893066
    10. '_factor' → logprob: -12.259461402893066

Token 327: ' ')' (ID: 35910)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.797696053981781
    2. 'factor' → logprob: -1.1726961135864258
    3. '')' → logprob: -1.6726961135864258
    4. '<|end|>' → logprob: -3.672696113586426
    5. '|' → logprob: -5.047696113586426
    6. ''' → logprob: -5.172696113586426
    7. ' factor' → logprob: -5.922696113586426
    8. 'def' → logprob: -6.297696113586426
    9. ' ')'' → logprob: -6.297696113586426
    10. '<|end|>' → logprob: -6.422696113586426

Token 328: ''
' (ID: 2207)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.10870836675167084
    2. '<|end|>' → logprob: -3.483708381652832
    3. ')' → logprob: -3.983708381652832
    4. 'def' → logprob: -4.108708381652832
    5. '<|end|>' → logprob: -4.733708381652832
    6. '#' → logprob: -4.983708381652832
    7. '
' → logprob: -5.108708381652832
    8. ' factor' → logprob: -5.858708381652832
    9. ' ' → logprob: -6.358708381652832
    10. '   ' → logprob: -6.483708381652832

Token 329: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5901176929473877
    2. 'token' → logprob: -1.8401176929473877
    3. 'tokens' → logprob: -2.3401176929473877
    4. '<|end|>' → logprob: -2.9651176929473877
    5. 'import' → logprob: -3.4651176929473877
    6. '```' → logprob: -4.215117454528809
    7. 'next' → logprob: -4.340117454528809
    8. ' def' → logprob: -4.590117454528809
    9. 'i' → logprob: -5.090117454528809
    10. ' token' → logprob: -5.090117454528809

Token 330: ' factor' (ID: 12332)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1440613567829132
    2. 'import' → logprob: -2.644061326980591
    3. 'pos' → logprob: -3.894061326980591
    4. 'tokens' → logprob: -4.14406156539917
    5. 'token' → logprob: -4.76906156539917
    6. 'code' → logprob: -5.26906156539917
    7. 'next' → logprob: -5.39406156539917
    8. 'from' → logprob: -6.01906156539917
    9. 'expression' → logprob: -6.64406156539917
    10. '#' → logprob: -6.76906156539917

Token 331: ' :=' (ID: 3405)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4839072525501251
    2. ' =' → logprob: -0.9839072227478027
    3. ':' → logprob: -5.358907222747803
    4. ' ' → logprob: -6.733907222747803
    5. '<|end|>' → logprob: -6.858907222747803
    6. '=None' → logprob: -7.108907222747803
    7. '=[]' → logprob: -7.233907222747803
    8. ' ::=' → logprob: -9.108907699584961
    9. 'def' → logprob: -9.233907699584961
    10. '<|end|>' → logprob: -9.358907699584961

Token 332: ' uppercase' (ID: 79050)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.37707436084747314
    2. 'p' → logprob: -1.5020743608474731
    3. ''' → logprob: -3.5020742416381836
    4. '[' → logprob: -4.002074241638184
    5. '[p' → logprob: -4.127074241638184
    6. ''p' → logprob: -5.002074241638184
    7. '[a' → logprob: -5.377074241638184
    8. 'str' → logprob: -6.127074241638184
    9. 'parts' → logprob: -6.377074241638184
    10. 'identifier' → logprob: -6.377074241638184

Token 333: ' letter' (ID: 10263)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48060673475265503
    2. 'pos' → logprob: -2.4806067943573
    3. 'expression' → logprob: -2.4806067943573
    4. 'import' → logprob: -2.9806067943573
    5. 'token' → logprob: -3.2306067943573
    6. 'expr' → logprob: -3.2306067943573
    7. 'tokens' → logprob: -3.6056067943573
    8. 's' → logprob: -3.9806067943573
    9. 'code' → logprob: -4.355606555938721
    10. '#' → logprob: -5.355606555938721

Token 335: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.038284529000520706
    2. 'import' → logprob: -4.5382843017578125
    3. 'tokens' → logprob: -4.6632843017578125
    4. 'token' → logprob: -5.1632843017578125
    5. 'pos' → logprob: -5.4132843017578125
    6. 'next' → logprob: -7.0382843017578125
    7. '```' → logprob: -7.2882843017578125
    8. 'class' → logprob: -7.2882843017578125
    9. 'i' → logprob: -7.4132843017578125
    10. 'expression' → logprob: -7.5382843017578125

Token 336: ' number' (ID: 2086)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10457019507884979
    2. 'pos' → logprob: -3.479570150375366
    3. 'import' → logprob: -3.854570150375366
    4. 'class' → logprob: -4.479570388793945
    5. 'tokens' → logprob: -4.479570388793945
    6. 'token' → logprob: -4.854570388793945
    7. 'i' → logprob: -4.979570388793945
    8. 'expr' → logprob: -6.104570388793945
    9. 's' → logprob: -6.479570388793945
    10. 'index' → logprob: -6.729570388793945

Token 337: ' :=' (ID: 3405)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7296360731124878
    2. '=' → logprob: -0.8546360731124878
    3. 'def' → logprob: -3.2296361923217773
    4. '<|end|>' → logprob: -4.229636192321777
    5. '=input' → logprob: -4.854636192321777
    6. ')' → logprob: -5.354636192321777
    7. '=int' → logprob: -5.354636192321777
    8. '=[]' → logprob: -5.604636192321777
    9. 's' → logprob: -5.729636192321777
    10. ' ' → logprob: -5.729636192321777

Token 338: ' integer' (ID: 16336)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7484704256057739
    2. '''' → logprob: -0.9984704256057739
    3. 'str' → logprob: -2.6234703063964844
    4. '""' → logprob: -2.6234703063964844
    5. ''' → logprob: -5.123470306396484
    6. '''
' → logprob: -6.748470306396484
    7. '0' → logprob: -6.873470306396484
    8. 'r' → logprob: -6.873470306396484
    9. ' ''' → logprob: -7.248470306396484
    10. '[int' → logprob: -7.248470306396484

Token 339: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2133871614933014
    2. 'pos' → logprob: -2.4633872509002686
    3. 'i' → logprob: -3.3383872509002686
    4. 'import' → logprob: -3.5883872509002686
    5. 'token' → logprob: -3.8383872509002686
    6. 'tokens' → logprob: -4.4633870124816895
    7. 'expr' → logprob: -5.9633870124816895
    8. 'idx' → logprob: -6.4633870124816895
    9. 'expression' → logprob: -6.9633870124816895
    10. 'class' → logprob: -7.2133870124816895

Token 340: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.042055658996105194
    2. 'pos' → logprob: -3.792055606842041
    3. 'import' → logprob: -5.042055606842041
    4. 'class' → logprob: -5.167055606842041
    5. 'token' → logprob: -6.292055606842041
    6. 'tokens' → logprob: -6.667055606842041
    7. 'from' → logprob: -6.917055606842041
    8. 'expr' → logprob: -7.167055606842041
    9. 'idx' → logprob: -8.0420560836792
    10. 'expression' → logprob: -8.2920560836792

Token 341: ' re' (ID: 322)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.006429840810596943
    2. ' re' → logprob: -5.756429672241211
    3. 'sys' → logprob: -6.006429672241211
    4. 'collections' → logprob: -7.506429672241211
    5. 'math' → logprob: -8.756429672241211
    6. ' sys' → logprob: -9.506429672241211
    7. ' collections' → logprob: -13.506429672241211
    8. ' math' → logprob: -14.256429672241211
    9. '_re' → logprob: -15.381429672241211
    10. 'operator' → logprob: -15.631429672241211

Token 342: '
' (ID: 198)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.32463711500167847
    2. 'pattern' → logprob: -1.3246371746063232
    3. 'def' → logprob: -5.324636936187744
    4. 'tokens' → logprob: -5.699636936187744
    5. 'class' → logprob: -6.324636936187744
    6. '_token' → logprob: -8.199637413024902
    7. 'expression' → logprob: -8.324637413024902
    8. 'code' → logprob: -8.449637413024902
    9. 'expr' → logprob: -8.699637413024902
    10. '
' → logprob: -8.949637413024902

Token 343: 'token' (ID: 10346)
  Prédit: 'token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.5179052352905273
    2. 'pattern' → logprob: -1.1429052352905273
    3. 'class' → logprob: -3.1429052352905273
    4. 'def' → logprob: -3.7679052352905273
    5. 'tokens' → logprob: -4.767905235290527
    6. 'code' → logprob: -5.142905235290527
    7. 'expr' → logprob: -6.392905235290527
    8. 'expression' → logprob: -7.017905235290527
    9. '```' → logprob: -7.642905235290527
    10. '_token' → logprob: -8.142905235290527

Token 344: '_re' (ID: 3067)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004182398319244385
    2. 'izer' → logprob: -5.5041823387146
    3. '_pattern' → logprob: -9.879182815551758
    4. 'ize' → logprob: -10.629182815551758
    5. '_s' → logprob: -11.504182815551758
    6. '_list' → logprob: -12.004182815551758
    7. '_generator' → logprob: -12.879182815551758
    8. '=' → logprob: -13.129182815551758
    9. '_' → logprob: -13.504182815551758
    10. 'pattern' → logprob: -13.879182815551758

Token 345: '=re' (ID: 123382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13474765419960022
    2. ' =' → logprob: -2.3847477436065674
    3. '=re' → logprob: -3.3847477436065674
    4. '=r' → logprob: -10.134747505187988
    5. 're' → logprob: -11.384747505187988
    6. '.compile' → logprob: -12.134747505187988
    7. 'r' → logprob: -12.759747505187988
    8. '```' → logprob: -13.634747505187988
    9. '\s' → logprob: -13.884747505187988
    10. '\' → logprob: -14.259747505187988

Token 346: '.compile' (ID: 38900)
  Prédit: '.compile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compile' → logprob: -0.014373870566487312
    2. 'compile' → logprob: -4.264373779296875
    3. '.findall' → logprob: -8.764373779296875
    4. '_compile' → logprob: -10.389373779296875
    5. 'find' → logprob: -11.639373779296875
    6. '```' → logprob: -11.889373779296875
    7. 'token' → logprob: -13.389373779296875
    8. 'r' → logprob: -13.514373779296875
    9. 'compiled' → logprob: -13.889373779296875
    10. 'import' → logprob: -14.139373779296875

Token 347: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.0921942703134846e-05
    2. '(rb' → logprob: -11.50001049041748
    3. '(' → logprob: -15.37501049041748
    4. '('\' → logprob: -15.62501049041748
    5. 'r' → logprob: -16.000011444091797
    6. '=r' → logprob: -16.500011444091797
    7. '('\\' → logprob: -17.000011444091797
    8. '('' → logprob: -17.250011444091797
    9. '```' → logprob: -17.375011444091797
    10. '   ' → logprob: -17.500011444091797

Token 348: ''[' (ID: 187291)
  Prédit: ''['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''[' → logprob: -1.0091567039489746
    2. 'r' → logprob: -1.1341567039489746
    3. ''\' → logprob: -1.7591567039489746
    4. ''' → logprob: -2.0091567039489746
    5. '([' → logprob: -6.009156703948975
    6. '[' → logprob: -6.384156703948975
    7. ' r' → logprob: -6.634156703948975
    8. '"[' → logprob: -7.384156703948975
    9. '[r' → logprob: -7.884156703948975
    10. '[A' → logprob: -8.134157180786133

Token 349: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0016386464703828096
    2. '0' → logprob: -7.001638412475586
    3. '[A' → logprob: -8.626638412475586
    4. '(A' → logprob: -8.876638412475586
    5. '\d' → logprob: -8.876638412475586
    6. ' A' → logprob: -9.251638412475586
    7. '([' → logprob: -9.501638412475586
    8. '+' → logprob: -11.251638412475586
    9. '\' → logprob: -11.376638412475586
    10. 'a' → logprob: -11.626638412475586

Token 350: '-Z' (ID: 17216)
  Prédit: '-Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-Z' → logprob: -3.893480243277736e-05
    2. 'Z' → logprob: -10.625039100646973
    3. '-Za' → logprob: -11.375039100646973
    4. 'A' → logprob: -12.750039100646973
    5. '-' → logprob: -16.375038146972656
    6. '_Z' → logprob: -17.000038146972656
    7. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -17.250038146972656
    8. '\-' → logprob: -17.750038146972656
    9. '[A' → logprob: -17.875038146972656
    10. '-A' → logprob: -18.250038146972656

Token 351: ']' (ID: 60)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.11797162145376205
    2. '0' → logprob: -2.367971658706665
    3. 'A' → logprob: -4.992971420288086
    4. ']' → logprob: -5.242971420288086
    5. '\' → logprob: -5.867971420288086
    6. '\d' → logprob: -7.117971420288086
    7. '+' → logprob: -7.492971420288086
    8. ']|' → logprob: -7.992971420288086
    9. 'a' → logprob: -8.492971420288086
    10. '+]' → logprob: -8.867971420288086

Token 352: '|\' (ID: 50649)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.4384576976299286
    2. '|\' → logprob: -1.063457727432251
    3. '+' → logprob: -4.688457489013672
    4. '[' → logprob: -8.438457489013672
    5. '\d' → logprob: -9.188457489013672
    6. ']|' → logprob: -9.688457489013672
    7. ')|' → logprob: -10.313457489013672
    8. ']+' → logprob: -11.063457489013672
    9. '+[' → logprob: -11.313457489013672
    10. '\' → logprob: -11.563457489013672

Token 353: 'd' (ID: 67)
  Prédit: '\d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\d' → logprob: -0.006812811829149723
    2. '[' → logprob: -5.006813049316406
    3. '\' → logprob: -9.381813049316406
    4. '0' → logprob: -12.006813049316406
    5. '(\' → logprob: -12.631813049316406
    6. 'd' → logprob: -12.881813049316406
    7. '[\' → logprob: -14.756813049316406
    8. '\s' → logprob: -15.631813049316406
    9. '-' → logprob: -15.756813049316406
    10. ' \' → logprob: -16.131813049316406

Token 354: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012004701420664787
    2. '+')' → logprob: -6.7512006759643555
    3. '+)' → logprob: -10.751200675964355
    4. '+\' → logprob: -11.751200675964355
    5. '+'' → logprob: -14.626200675964355
    6. '+")' → logprob: -15.876200675964355
    7. '+]' → logprob: -15.876200675964355
    8. '+[' → logprob: -16.37619972229004
    9. '+(' → logprob: -17.50119972229004
    10. '+',' → logprob: -17.50119972229004

Token 355: '|\' (ID: 50649)
  Prédit: '|\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|\' → logprob: -0.07913917303085327
    2. '|' → logprob: -2.704139232635498
    3. '+' → logprob: -4.704139232635498
    4. '\' → logprob: -11.07913875579834
    5. ')' → logprob: -11.20413875579834
    6. '')' → logprob: -11.20413875579834
    7. '+)' → logprob: -11.20413875579834
    8. '+\' → logprob: -12.07913875579834
    9. '|'' → logprob: -12.20413875579834
    10. '```' → logprob: -12.20413875579834

Token 356: '+' (ID: 10)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2677922248840332
    2. '[' → logprob: -1.5177922248840332
    3. '[\' → logprob: -4.892792224884033
    4. '\(' → logprob: -4.892792224884033
    5. '\[' → logprob: -7.642792224884033
    6. ' \' → logprob: -9.517791748046875
    7. ''' → logprob: -10.017791748046875
    8. '\d' → logprob: -10.267791748046875
    9. '[(' → logprob: -10.517791748046875
    10. ' \(' → logprob: -10.642791748046875

Token 357: '|\' (ID: 50649)
  Prédit: '|\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|\' → logprob: -0.04864879697561264
    2. '|' → logprob: -3.0486488342285156
    3. '\' → logprob: -10.673648834228516
    4. '|'' → logprob: -10.923648834228516
    5. '|(' → logprob: -12.173648834228516
    6. '\(' → logprob: -12.673648834228516
    7. ')' → logprob: -12.798648834228516
    8. 'r' → logprob: -13.173648834228516
    9. '<|end|>' → logprob: -13.673648834228516
    10. '')' → logprob: -13.673648834228516

Token 358: '(|' (ID: 44441)
  Prédit: '\('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\(' → logprob: -0.6664800047874451
    2. '\' → logprob: -0.9164800047874451
    3. '(|' → logprob: -2.79148006439209
    4. '(' → logprob: -4.16648006439209
    5. '(\' → logprob: -4.66648006439209
    6. '[' → logprob: -9.04148006439209
    7. ' \(' → logprob: -9.79148006439209
    8. '()' → logprob: -10.16648006439209
    9. '\[' → logprob: -10.29148006439209
    10. '([' → logprob: -11.54148006439209

Token 359: '\' (ID: 59)
  Prédit: '\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.2948405128554441e-05
    2. '')' → logprob: -12.00001335144043
    3. ''\' → logprob: -12.50001335144043
    4. ')' → logprob: -13.75001335144043
    5. '\r' → logprob: -13.87501335144043
    6. '\d' → logprob: -15.25001335144043
    7. '|\' → logprob: -15.50001335144043
    8. '\x' → logprob: -15.75001335144043
    9. '|' → logprob: -16.37501335144043
    10. '\u' → logprob: -17.00001335144043

Token 360: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00045593673712573946
    2. ')|' → logprob: -8.125455856323242
    3. ')'' → logprob: -9.125455856323242
    4. '')' → logprob: -10.625455856323242
    5. '\' → logprob: -10.875455856323242
    6. ')','' → logprob: -13.000455856323242
    7. ')')
' → logprob: -13.250455856323242
    8. ')]' → logprob: -14.000455856323242
    9. ')")' → logprob: -14.000455856323242
    10. '|' → logprob: -14.500455856323242

Token 361: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03905992954969406
    2. '')' → logprob: -3.28905987739563
    3. '|' → logprob: -7.039060115814209
    4. '<|end|>' → logprob: -10.16405963897705
    5. '`)' → logprob: -10.28905963897705
    6. '")' → logprob: -11.03905963897705
    7. ']' → logprob: -11.91405963897705
    8. '```' → logprob: -11.91405963897705
    9. '   ' → logprob: -12.53905963897705
    10. 'token' → logprob: -12.66405963897705

Token 362: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7520231604576111
    2. 'tokens' → logprob: -0.7520231604576111
    3. 'pos' → logprob: -3.127023220062256
    4. 'class' → logprob: -5.002023220062256
    5. 'code' → logprob: -5.627023220062256
    6. 's' → logprob: -6.252023220062256
    7. 'text' → logprob: -8.002022743225098
    8. 'line' → logprob: -8.252022743225098
    9. 'token' → logprob: -8.752022743225098
    10. '```' → logprob: -9.252022743225098

Token 363: ' Parser' (ID: 44901)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.12429492920637131
    2. 'Tokenizer' → logprob: -2.8742949962615967
    3. ' Parser' → logprob: -3.2492949962615967
    4. 'Expression' → logprob: -4.749294757843018
    5. 'Lexer' → logprob: -5.374294757843018
    6. ')' → logprob: -6.624294757843018
    7. 'Expr' → logprob: -6.874294757843018
    8. '_parser' → logprob: -6.874294757843018
    9. 'Parse' → logprob: -6.999294757843018
    10. 'Token' → logprob: -7.124294757843018

Token 364: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0053464132361114025
    2. ':
' → logprob: -5.255346298217773
    3. '(object' → logprob: -9.630346298217773
    4. '():' → logprob: -11.255346298217773
    5. ' :' → logprob: -11.380346298217773
    6. '{' → logprob: -12.380346298217773
    7. '(' → logprob: -12.630346298217773
    8. ':

' → logprob: -13.130346298217773
    9. '():
' → logprob: -13.255346298217773
    10. '>:' → logprob: -13.255346298217773

Token 365: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5419936180114746
    2. ' def' → logprob: -1.1669936180114746
    3. '   ' → logprob: -2.7919936180114746
    4. '    ' → logprob: -4.666993618011475
    5. '	def' → logprob: -4.666993618011475
    6. 'def' → logprob: -4.916993618011475
    7. ' 
' → logprob: -5.166993618011475
    8. '	' → logprob: -6.166993618011475
    9. ' next' → logprob: -6.291993618011475
    10. ' token' → logprob: -6.291993618011475

Token 366: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.006198719143867493
    2. 'def' (adapté à ' def') → logprob: -5.131198883056641
    3. '   ' → logprob: -8.25619888305664
    4. '	def' → logprob: -11.75619888305664
    5. '    ' → logprob: -13.88119888305664
    6. ' next' → logprob: -14.50619888305664
    7. ' indent' → logprob: -14.63119888305664
    8. ' __' → logprob: -16.13119888305664
    9. ' tokens' → logprob: -16.25619888305664
    10. 'class' → logprob: -16.50619888305664

Token 367: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5256483554840088
    2. 'init' → logprob: -0.9006483554840088
    3. '_init' → logprob: -6.65064811706543
    4. ' __' → logprob: -6.90064811706543
    5. ' init' → logprob: -9.27564811706543
    6. '```' → logprob: -9.90064811706543
    7. '___' → logprob: -10.27564811706543
    8. '_next' → logprob: -11.52564811706543
    9. '____' → logprob: -12.02564811706543
    10. 'def' → logprob: -12.15064811706543

Token 368: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'next' → logprob: -16.5
    3. ' init' → logprob: -18.125
    4. '`' → logprob: -19.0
    5. 'def' → logprob: -20.0
    6. '_init' → logprob: -20.125
    7. '```' → logprob: -20.375
    8. 'new' → logprob: -20.5
    9. 'iter' → logprob: -20.625
    10. '
' → logprob: -20.625

Token 369: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012038279324769974
    2. '(' → logprob: -4.637038230895996
    3. ' (' → logprob: -6.262038230895996
    4. 'self' → logprob: -9.012038230895996
    5. '__(' → logprob: -9.262038230895996
    6. '(
' → logprob: -10.262038230895996
    7. ')' → logprob: -10.262038230895996
    8. ')(' → logprob: -11.262038230895996
    9. '=' → logprob: -11.387038230895996
    10. '   ' → logprob: -11.637038230895996

Token 370: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007056408794596791
    2. ' self' → logprob: -7.625705718994141
    3. '(self' → logprob: -8.50070571899414
    4. '   ' → logprob: -11.62570571899414
    5. 's' → logprob: -13.12570571899414
    6. '<|end|>' → logprob: -14.25070571899414
    7. ',self' → logprob: -14.37570571899414
    8. 'text' → logprob: -14.50070571899414
    9. ')' → logprob: -14.62570571899414
    10. 'token' → logprob: -15.25070571899414

Token 371: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02067210152745247
    2. 'self' → logprob: -4.02067232131958
    3. ',self' → logprob: -6.39567232131958
    4. ' self' → logprob: -8.395671844482422
    5. ',input' → logprob: -8.395671844482422
    6. ' ,' → logprob: -8.395671844482422
    7. '   ' → logprob: -9.145671844482422
    8. ',line' → logprob: -10.770671844482422
    9. ',s' → logprob: -11.270671844482422
    10. '(self' → logprob: -11.395671844482422

Token 372: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22566606104373932
    2. '):' → logprob: -1.6006660461425781
    3. ':' → logprob: -9.225666046142578
    4. '):
' → logprob: -9.600666046142578
    5. '):

' → logprob: -10.600666046142578
    6. '<|end|>' → logprob: -11.225666046142578
    7. ' ):
' → logprob: -11.350666046142578
    8. ' ):' → logprob: -11.475666046142578
    9. ',' → logprob: -11.850666046142578
    10. '   ' → logprob: -12.225666046142578

Token 373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004797138273715973
    2. 'self' → logprob: -5.504796981811523
    3. ' self' → logprob: -7.629796981811523
    4. '   ' → logprob: -9.879796981811523
    5. '	self' → logprob: -10.379796981811523
    6. '<|end|>' → logprob: -10.379796981811523
    7. '	' → logprob: -10.629796981811523
    8. 's' → logprob: -11.129796981811523
    9. '	   ' → logprob: -11.379796981811523
    10. '	       ' → logprob: -11.504796981811523

Token 374: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0015602122293785214
    2. ' self' → logprob: -6.501560211181641
    3. '       ' → logprob: -10.00156021118164
    4. '   ' → logprob: -11.62656021118164
    5. 'import' → logprob: -13.12656021118164
    6. '	self' → logprob: -13.62656021118164
    7. '    ' → logprob: -16.37656021118164
    8. '(self' → logprob: -16.75156021118164
    9. ' ' → logprob: -17.00156021118164
    10. 's' → logprob: -17.87656021118164

Token 375: '.tokens' (ID: 127362)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.004872231278568506
    2. '.pos' → logprob: -5.7548723220825195
    3. '.tokens' → logprob: -6.7548723220825195
    4. '.input' → logprob: -8.50487232208252
    5. '.text' → logprob: -8.87987232208252
    6. '.code' → logprob: -10.00487232208252
    7. '.' → logprob: -10.62987232208252
    8. '.token' → logprob: -10.62987232208252
    9. '.src' → logprob: -11.12987232208252
    10. '.data' → logprob: -11.50487232208252

Token 376: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019864413887262344
    2. ' =' → logprob: -4.019864559173584
    3. '=s' → logprob: -6.394864559173584
    4. '=self' → logprob: -10.644864082336426
    5. '=[]' → logprob: -11.394864082336426
    6. '=list' → logprob: -13.769864082336426
    7. '=[' → logprob: -13.769864082336426
    8. '   ' → logprob: -14.144864082336426
    9. '=re' → logprob: -14.269864082336426
    10. ',' → logprob: -14.644864082336426

Token 377: 'token' (ID: 10346)
  Prédit: 'token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.12796705961227417
    2. 're' → logprob: -2.127967119216919
    3. ' token' → logprob: -7.25296688079834
    4. ' re' → logprob: -8.25296688079834
    5. '[token' → logprob: -9.87796688079834
    6. 's' → logprob: -11.75296688079834
    7. '(token' → logprob: -12.62796688079834
    8. 'list' → logprob: -13.00296688079834
    9. 'deque' → logprob: -13.12796688079834
    10. '[' → logprob: -13.25296688079834

Token 378: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.0382516011595726
    2. 's' → logprob: -3.2882516384124756
    3. 'izer' → logprob: -9.538251876831055
    4. 'ize' → logprob: -9.913251876831055
    5. '_s' → logprob: -10.163251876831055
    6. '_list' → logprob: -10.163251876831055
    7. 're' → logprob: -12.413251876831055
    8. 'ized' → logprob: -13.163251876831055
    9. 'Re' → logprob: -13.788251876831055
    10. '_res' → logprob: -14.538251876831055

Token 379: '.findall' (ID: 95997)
  Prédit: '.findall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.findall' → logprob: -0.0006459566066041589
    2. '.split' → logprob: -7.375646114349365
    3. '.match' → logprob: -12.125645637512207
    4. '.find' → logprob: -12.125645637512207
    5. '.token' → logprob: -12.625645637512207
    6. 'token' → logprob: -12.625645637512207
    7. 'find' → logprob: -14.375645637512207
    8. '.' → logprob: -15.250645637512207
    9. 'split' → logprob: -15.375645637512207
    10. '_token' → logprob: -15.625645637512207

Token 380: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.580929347255733e-05
    2. '(' → logprob: -11.125016212463379
    3. ' (' → logprob: -14.625016212463379
    4. 's' → logprob: -14.625016212463379
    5. '(
' → logprob: -18.750015258789062
    6. '(r' → logprob: -19.500015258789062
    7. ')' → logprob: -19.625015258789062
    8. '(S' → logprob: -19.750015258789062
    9. ')(' → logprob: -19.750015258789062
    10. ' ' → logprob: -20.125015258789062

Token 381: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027413465082645416
    2. ',' → logprob: -3.6524133682250977
    3. ')
' → logprob: -7.277413368225098
    4. '[self' → logprob: -9.027413368225098
    5. '[' → logprob: -9.527413368225098
    6. '<|end|>' → logprob: -10.277413368225098
    7. '   ' → logprob: -10.402413368225098
    8. '       ' → logprob: -10.527413368225098
    9. ')+' → logprob: -10.652413368225098
    10. ',self' → logprob: -11.152413368225098

Token 382: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16170823574066162
    2. '   ' → logprob: -1.9117082357406616
    3. 'self' → logprob: -6.786708354949951
    4. ' self' → logprob: -8.786707878112793
    5. '<|end|>' → logprob: -9.286707878112793
    6. '	self' → logprob: -9.911707878112793
    7. 'def' → logprob: -11.286707878112793
    8. '
' → logprob: -11.536707878112793
    9. ',' → logprob: -11.661707878112793
    10. '	' → logprob: -12.161707878112793

Token 383: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001344042830169201
    2. ' self' → logprob: -7.251344203948975
    3. '       ' → logprob: -7.376344203948975
    4. '   ' → logprob: -12.001343727111816
    5. '
' → logprob: -13.876343727111816
    6. '	self' → logprob: -14.876343727111816
    7. '<|end|>' → logprob: -15.376343727111816
    8. ' ' → logprob: -16.376344680786133
    9. '(self' → logprob: -16.626344680786133
    10. '        
' → logprob: -16.751344680786133

Token 384: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.08056974411010742
    2. 'pos' → logprob: -2.5805697441101074
    3. '_pos' → logprob: -6.830569744110107
    4. '.position' → logprob: -8.830570220947266
    5. '.current' → logprob: -9.080570220947266
    6. '.index' → logprob: -9.080570220947266
    7. '.' → logprob: -10.080570220947266
    8. ' pos' → logprob: -10.080570220947266
    9. 'index' → logprob: -10.205570220947266
    10. '.idx' → logprob: -10.455570220947266

Token 385: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08767694234848022
    2. '+=' → logprob: -2.837677001953125
    3. '<|end|>' → logprob: -4.462677001953125
    4. ' +=' → logprob: -4.962677001953125
    5. ' =' → logprob: -5.087677001953125
    6. '+' → logprob: -7.712677001953125
    7. '++' → logprob: -9.337677001953125
    8. '   ' → logprob: -9.587677001953125
    9. '<|end|>' → logprob: -10.587677001953125
    10. ')' → logprob: -11.712677001953125

Token 386: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -20.750001907348633
    4. '[' → logprob: -20.875001907348633
    5. '۰' → logprob: -21.500001907348633
    6. '<|end|>' → logprob: -22.000001907348633
    7. '-' → logprob: -22.250001907348633
    8. '  ' → logprob: -22.250001907348633
    9. '1' → logprob: -22.625001907348633
    10. '```' → logprob: -23.250001907348633

Token 387: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 388: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7127023935317993
    2. '   ' → logprob: -1.3377023935317993
    3. 'def' → logprob: -1.4627023935317993
    4. '```' → logprob: -4.96270227432251
    5. '<|end|>' → logprob: -5.33770227432251
    6. '	def' → logprob: -6.71270227432251
    7. ' ' → logprob: -7.46270227432251
    8. '    
' → logprob: -7.58770227432251
    9. '       ' → logprob: -8.587702751159668
    10. '
' → logprob: -8.712702751159668

Token 389: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1278928965330124
    2. '   ' → logprob: -2.3778929710388184
    3. ' def' → logprob: -3.6278929710388184
    4. '	def' → logprob: -8.12789249420166
    5. '
' → logprob: -8.62789249420166
    6. '    
' → logprob: -8.62789249420166
    7. '```' → logprob: -10.62789249420166
    8. '<|end|>' → logprob: -11.37789249420166
    9. '        
' → logprob: -11.50289249420166
    10. '       ' → logprob: -11.87789249420166

Token 390: ' peek' (ID: 54757)
  Prédit: 'peek'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peek' → logprob: -0.578228235244751
    2. 'eat' → logprob: -1.078228235244751
    3. 'next' → logprob: -3.078228235244751
    4. 'consume' → logprob: -3.578228235244751
    5. 'parse' → logprob: -4.453227996826172
    6. ' peek' → logprob: -5.453227996826172
    7. 'e' → logprob: -6.078227996826172
    8. 'accept' → logprob: -6.453227996826172
    9. ' next' → logprob: -6.828227996826172
    10. 'current' → logprob: -7.078227996826172

Token 391: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003414870472624898
    2. '(self' → logprob: -6.128415107727051
    3. '(' → logprob: -7.003415107727051
    4. ' ()' → logprob: -9.25341510772705
    5. '():
' → logprob: -9.87841510772705
    6. '():' → logprob: -10.25341510772705
    7. '<|end|>' → logprob: -10.37841510772705
    8. '()[' → logprob: -11.12841510772705
    9. ' (' → logprob: -11.25341510772705
    10. '();' → logprob: -11.50341510772705

Token 392: '):
' (ID: 1883)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07162902504205704
    2. ')' → logprob: -3.196629047393799
    3. '():' → logprob: -5.071629047393799
    4. '<|end|>' → logprob: -5.196629047393799
    5. '())' → logprob: -5.696629047393799
    6. '):' → logprob: -5.821629047393799
    7. '()[' → logprob: -6.321629047393799
    8. '():
' → logprob: -6.321629047393799
    9. '[' → logprob: -6.696629047393799
    10. '()):
' → logprob: -6.821629047393799

Token 393: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6134242415428162
    2. 'return' → logprob: -0.9884242415428162
    3. ' return' → logprob: -2.988424301147461
    4. '       ' → logprob: -3.363424301147461
    5. '()
' → logprob: -7.738424301147461
    6. '<|end|>' → logprob: -8.988424301147461
    7. ':return' → logprob: -9.113424301147461
    8. ' ()' → logprob: -9.113424301147461
    9. '	return' → logprob: -9.363424301147461
    10. '[]' → logprob: -9.363424301147461

Token 394: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03058071993291378
    2. ' return' → logprob: -3.530580759048462
    3. 'if' → logprob: -7.280580520629883
    4. ' if' → logprob: -9.155580520629883
    5. 'self' → logprob: -10.280580520629883
    6. ' self' → logprob: -14.780580520629883
    7. '	return' → logprob: -15.780580520629883
    8. '       ' → logprob: -15.780580520629883
    9. '{return' → logprob: -15.780580520629883
    10. '
' → logprob: -15.905580520629883

Token 395: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07900567352771759
    2. ' self' → logprob: -2.579005718231201
    3. 'None' → logprob: -9.579005241394043
    4. ' None' → logprob: -10.204005241394043
    5. '''' → logprob: -11.704005241394043
    6. '""' → logprob: -14.329005241394043
    7. '(self' → logprob: -14.454005241394043
    8. ' ' → logprob: -15.829005241394043
    9. ' ''' → logprob: -16.07900619506836
    10. '	self' → logprob: -17.45400619506836

Token 396: '.tokens' (ID: 127362)
  Prédit: '.tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tokens' → logprob: -0.0015085549093782902
    2. ' .' → logprob: -7.001508712768555
    3. 'tokens' → logprob: -7.876508712768555
    4. '.pos' → logprob: -8.626508712768555
    5. '.' → logprob: -11.001508712768555
    6. 'pos' → logprob: -11.626508712768555
    7. '.token' → logprob: -12.251508712768555
    8. 'okens' → logprob: -13.501508712768555
    9. '.parts' → logprob: -13.876508712768555
    10. ' tokens' → logprob: -14.251508712768555

Token 397: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -1.771655115589965e-05
    2. 'self' → logprob: -11.000018119812012
    3. '[' → logprob: -13.875018119812012
    4. ' self' → logprob: -18.125017166137695
    5. '[
' → logprob: -18.500017166137695
    6. '(self' → logprob: -18.625017166137695
    7. '	self' → logprob: -20.125017166137695
    8. '[this' → logprob: -20.125017166137695
    9. '[min' → logprob: -20.250017166137695
    10. ' [' → logprob: -21.000017166137695

Token 398: '.pos' (ID: 25321)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.12185469269752502
    2. '.pos' → logprob: -2.371854782104492
    3. '_pos' → logprob: -4.996854782104492
    4. '[pos' → logprob: -5.621854782104492
    5. '[' → logprob: -5.746854782104492
    6. 'self' → logprob: -6.746854782104492
    7. ')' → logprob: -6.746854782104492
    8. '<|end|>' → logprob: -7.121854782104492
    9. 's' → logprob: -7.496854782104492
    10. 'os' → logprob: -7.621854782104492

Token 399: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05429181829094887
    2. '<|end|>' → logprob: -3.0542917251586914
    3. ' if' → logprob: -5.554291725158691
    4. 'if' → logprob: -6.804291725158691
    5. '<|end|>' → logprob: -7.679291725158691
    6. ' ]' → logprob: -9.429291725158691
    7. '[' → logprob: -9.554291725158691
    8. ')' → logprob: -10.304291725158691
    9. '}' → logprob: -11.554291725158691
    10. '```' → logprob: -11.804291725158691

Token 400: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006715370807796717
    2. ' self' → logprob: -5.006715297698975
    3. '(self' → logprob: -19.131715774536133
    4. ' ' → logprob: -21.131715774536133
    5. '	self' → logprob: -21.256715774536133
    6. '   ' → logprob: -21.631715774536133
    7. '0' → logprob: -22.381715774536133
    8. '_self' → logprob: -22.631715774536133
    9. 'Self' → logprob: -22.756715774536133
    10. ' ' → logprob: -22.881715774536133

Token 402: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0017058902885764837
    2. 'pos' → logprob: -6.376706123352051
    3. 'self' → logprob: -13.37670612335205
    4. '.' → logprob: -13.50170612335205
    5. ' pos' → logprob: -15.37670612335205
    6. '	pos' → logprob: -15.62670612335205
    7. '_pos' → logprob: -15.87670612335205
    8. '.position' → logprob: -16.376705169677734
    9. '[pos' → logprob: -16.376705169677734
    10. ' .' → logprob: -17.001705169677734

Token 403: '<len' (ID: 141365)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.01560927089303732
    2. '<len' → logprob: -4.265609264373779
    3. ' <' → logprob: -6.765609264373779
    4. '<size' → logprob: -8.765609741210938
    5. '<Token' → logprob: -10.140609741210938
    6. '<int' → logprob: -10.890609741210938
    7. '<num' → logprob: -11.015609741210938
    8. '<class' → logprob: -11.515609741210938
    9. '<ll' → logprob: -11.640609741210938
    10. '<const' → logprob: -12.265609741210938

Token 404: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00023131117632146925
    2. 'self' → logprob: -8.375231742858887
    3. '(' → logprob: -14.875231742858887
    4. '=self' → logprob: -16.00023078918457
    5. ' self' → logprob: -16.12523078918457
    6. 's' → logprob: -16.50023078918457
    7. '[self' → logprob: -16.87523078918457
    8. '	self' → logprob: -18.25023078918457
    9. ' (' → logprob: -18.50023078918457
    10. ':self' → logprob: -18.75023078918457

Token 405: '.tokens' (ID: 127362)
  Prédit: '.tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tokens' → logprob: -5.538490950129926e-05
    2. 'tokens' → logprob: -10.000055313110352
    3. 'self' → logprob: -11.625055313110352
    4. '_tokens' → logprob: -15.125055313110352
    5. '.t' → logprob: -15.125055313110352
    6. '(tokens' → logprob: -15.375055313110352
    7. '.token' → logprob: -15.875055313110352
    8. 'okens' → logprob: -16.62505531311035
    9. ' tokens' → logprob: -17.00005531311035
    10. ' .' → logprob: -17.87505531311035

Token 406: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004641544655896723
    2. ' else' → logprob: -8.12546443939209
    3. 'else' → logprob: -8.75046443939209
    4. '<|end|>' → logprob: -13.12546443939209
    5. ' )' → logprob: -13.25046443939209
    6. '   ' → logprob: -13.75046443939209
    7. ']' → logprob: -14.12546443939209
    8. ')return' → logprob: -14.25046443939209
    9. '       ' → logprob: -14.50046443939209
    10. '<|end|>' → logprob: -15.00046443939209

Token 407: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3132713735103607
    2. 'else' → logprob: -1.313271403312683
    3. '	else' → logprob: -12.063271522521973
    4. '<|end|>' → logprob: -13.438271522521973
    5. '       ' → logprob: -14.813271522521973
    6. '```' → logprob: -15.188271522521973
    7. 'and' → logprob: -15.313271522521973
    8. ' ' → logprob: -15.313271522521973
    9. ' and' → logprob: -15.438271522521973
    10. ')' → logprob: -15.563271522521973

Token 408: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.001433216268196702
    2. ' None' → logprob: -6.751433372497559
    3. '''' → logprob: -8.251433372497559
    4. '''
' → logprob: -13.626433372497559
    5. '""' → logprob: -15.001433372497559
    6. ''' → logprob: -15.251433372497559
    7. '_None' → logprob: -16.376432418823242
    8. ' ' → logprob: -16.626432418823242
    9. '(None' → logprob: -16.751432418823242
    10. '"' → logprob: -16.751432418823242

Token 409: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5954921245574951
    2. 'def' → logprob: -0.9704921245574951
    3. ' def' → logprob: -2.720492124557495
    4. '```' → logprob: -6.095492362976074
    5. '<|end|>' → logprob: -7.095492362976074
    6. '	def' → logprob: -7.595492362976074
    7. '<|end|>' → logprob: -8.970492362976074
    8. '       ' → logprob: -9.970492362976074
    9. ' ' → logprob: -9.970492362976074
    10. '    
' → logprob: -10.720492362976074

Token 411: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.08088687807321548
    2. ' def' → logprob: -3.0808868408203125
    3. '   ' → logprob: -3.4558868408203125
    4. '```' → logprob: -9.205886840820312
    5. '	def' → logprob: -9.705886840820312
    6. ' ' → logprob: -10.955886840820312
    7. '       ' → logprob: -11.205886840820312
    8. '<|end|>' → logprob: -11.955886840820312
    9. '.' → logprob: -12.330886840820312
    10. '<|end|>' → logprob: -12.580886840820312

Token 412: ' consume' (ID: 34881)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.7557463645935059
    2. 'consume' → logprob: -0.7557463645935059
    3. 'advance' → logprob: -3.505746364593506
    4. 'next' → logprob: -3.505746364593506
    5. 'expect' → logprob: -7.755746364593506
    6. 'e' → logprob: -9.005746841430664
    7. ' consume' → logprob: -10.755746841430664
    8. 'accept' → logprob: -10.880746841430664
    9. 'match' → logprob: -11.380746841430664
    10. 'pos' → logprob: -11.380746841430664

Token 413: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06268272548913956
    2. '(self' → logprob: -2.937682628631592
    3. '(' → logprob: -4.937682628631592
    4. '():
' → logprob: -8.68768310546875
    5. ' ()' → logprob: -9.43768310546875
    6. '():' → logprob: -9.56268310546875
    7. '()(' → logprob: -9.81268310546875
    8. ' (' → logprob: -10.31268310546875
    9. 'self' → logprob: -10.31268310546875
    10. '()
' → logprob: -10.43768310546875

Token 414: ',t' (ID: 26927)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8032683730125427
    2. '):' → logprob: -1.1782684326171875
    3. ')' → logprob: -1.6782684326171875
    4. '()' → logprob: -3.8032684326171875
    5. '()):
' → logprob: -4.1782684326171875
    6. '():
' → logprob: -4.6782684326171875
    7. '():' → logprob: -5.8032684326171875
    8. 'self' → logprob: -6.1782684326171875
    9. '(self' → logprob: -6.5532684326171875
    10. '(' → logprob: -6.5532684326171875

Token 415: '=None' (ID: 12783)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.35068488121032715
    2. 'oken' → logprob: -1.2256848812103271
    3. 'ok' → logprob: -6.725685119628906
    4. 'ype' → logprob: -7.350685119628906
    5. '):' → logprob: -9.100685119628906
    6. '):

' → logprob: -9.475685119628906
    7. 'okens' → logprob: -9.600685119628906
    8. ')' → logprob: -10.600685119628906
    9. ')
' → logprob: -11.350685119628906
    10. '):
' → logprob: -11.350685119628906

Token 416: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0030309518333524466
    2. '       ' → logprob: -6.753030776977539
    3. '):' → logprob: -7.003030776977539
    4. '   ' → logprob: -7.878030776977539
    5. '():
' → logprob: -8.253030776977539
    6. ':
' → logprob: -9.003030776977539
    7. '(self' → logprob: -9.503030776977539
    8. 'self' → logprob: -10.378030776977539
    9. '(token' → logprob: -11.503030776977539
    10. ',' → logprob: -11.628030776977539

Token 417: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9407687187194824
    2. 'token' → logprob: -1.1907687187194824
    3. ' token' → logprob: -2.4407687187194824
    4. 'if' → logprob: -2.4407687187194824
    5. 'self' → logprob: -2.5657687187194824
    6. ' if' → logprob: -3.4407687187194824
    7. ' self' → logprob: -4.815768718719482
    8. '   ' → logprob: -5.315768718719482
    9. '(token' → logprob: -5.690768718719482
    10. 'return' → logprob: -6.440768718719482

Token 418: ' if' (ID: 538)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -1.1219735145568848
    2. 'tok' → logprob: -1.2469735145568848
    3. ' token' → logprob: -1.3719735145568848
    4. ' tok' → logprob: -2.8719735145568848
    5. 't' → logprob: -3.3719735145568848
    6. 'if' (adapté à ' if') → logprob: -3.4969735145568848
    7. ' if' → logprob: -4.996973514556885
    8. ' t' → logprob: -5.621973514556885
    9. 'x' → logprob: -7.871973514556885
    10. 'c' → logprob: -8.246973037719727

Token 419: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.015321561135351658
    2. ' t' → logprob: -4.265321731567383
    3. 'self' → logprob: -6.890321731567383
    4. ' self' → logprob: -9.140321731567383
    5. '   ' → logprob: -11.265321731567383
    6. ' not' → logprob: -11.390321731567383
    7. 'not' → logprob: -12.640321731567383
    8. '	t' → logprob: -13.265321731567383
    9. ' ' → logprob: -13.890321731567383
    10. '(t' → logprob: -14.390321731567383

Token 420: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.012131327763199806
    2. ' ==' → logprob: -4.637131214141846
    3. '=' → logprob: -7.012131214141846
    4. ' is' → logprob: -7.387131214141846
    5. 'is' → logprob: -8.137131690979004
    6. '=None' → logprob: -8.262131690979004
    7. '()==' → logprob: -9.262131690979004
    8. ')==' → logprob: -9.887131690979004
    9. 'self' → logprob: -10.512131690979004
    10. '==
' → logprob: -10.637131690979004

Token 421: ' not' (ID: 625)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0023996743839234114
    2. 'self' → logprob: -6.502399444580078
    3. ' None' → logprob: -7.502399444580078
    4. 'not' → logprob: -8.002399444580078
    5. ' not' → logprob: -11.502399444580078
    6. 'Not' → logprob: -14.877399444580078
    7. ' self' → logprob: -16.627399444580078
    8. '(None' → logprob: -18.002399444580078
    9. '   ' → logprob: -18.252399444580078
    10. 'none' → logprob: -18.377399444580078

Token 422: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0009513601544313133
    2. ' None' → logprob: -7.000951290130615
    3. 'not' → logprob: -10.250951766967773
    4. ' not' → logprob: -12.625951766967773
    5. '(None' → logprob: -14.750951766967773
    6. '=None' → logprob: -15.000951766967773
    7. '   ' → logprob: -15.875951766967773
    8. 'Not' → logprob: -15.875951766967773
    9. '_None' → logprob: -16.625951766967773
    10. '_none' → logprob: -17.250951766967773

Token 423: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5298677086830139
    2. ' and' → logprob: -0.9048677086830139
    3. '==' → logprob: -5.654867649078369
    4. ':
' → logprob: -6.404867649078369
    5. ',' → logprob: -7.529867649078369
    6. '<|end|>' → logprob: -8.029868125915527
    7. '=' → logprob: -9.154868125915527
    8. '):
' → logprob: -9.404868125915527
    9. ')==' → logprob: -9.404868125915527
    10. ':' → logprob: -9.529868125915527

Token 424: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014176442287862301
    2. ' self' → logprob: -4.264176368713379
    3. '(self' → logprob: -11.264176368713379
    4. ' (' → logprob: -16.264177322387695
    5. '	self' → logprob: -17.889177322387695
    6. 'not' → logprob: -19.514177322387695
    7. '(' → logprob: -19.764177322387695
    8. ' ' → logprob: -19.764177322387695
    9. 't' → logprob: -20.139177322387695
    10. '[self' → logprob: -20.264177322387695

Token 425: '.peek' (ID: 73296)
  Prédit: '.tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tokens' → logprob: -0.00012118533049942926
    2. '.peek' → logprob: -9.625121116638184
    3. '.consume' → logprob: -10.000121116638184
    4. 'tokens' → logprob: -11.750121116638184
    5. ' .' → logprob: -14.625121116638184
    6. '.' → logprob: -14.750121116638184
    7. '.token' → logprob: -14.875121116638184
    8. '.pos' → logprob: -15.500121116638184
    9. '(tokens' → logprob: -15.750121116638184
    10. '.current' → logprob: -15.750121116638184

Token 426: '()!=' (ID: 71703)
  Prédit: '()=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()==' → logprob: -0.4320679306983948
    2. '()' → logprob: -1.18206787109375
    3. '()!=' → logprob: -3.18206787109375
    4. '==' → logprob: -5.93206787109375
    5. '!=' → logprob: -11.18206787109375
    6. ']==' → logprob: -11.30706787109375
    7. ')==' → logprob: -12.05706787109375
    8. ' ()' → logprob: -13.30706787109375
    9. '```' → logprob: -13.55706787109375
    10. '(' → logprob: -14.05706787109375

Token 427: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.5776860184123507e-06
    2. ' t' → logprob: -13.00000286102295
    3. '`t' → logprob: -15.12500286102295
    4. '	t' → logprob: -19.625001907348633
    5. '_t' → logprob: -22.125001907348633
    6. ')t' → logprob: -22.375001907348633
    7. '(t' → logprob: -22.625001907348633
    8. '<t' → logprob: -22.875001907348633
    9. 'т' → logprob: -23.000001907348633
    10. '   ' → logprob: -23.125001907348633

Token 428: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20630717277526855
    2. '           ' → logprob: -2.0813071727752686
    3. ':' → logprob: -2.8313071727752686
    4. ':return' → logprob: -6.081307411193848
    5. '):
' → logprob: -8.206307411193848
    6. '       ' → logprob: -9.581307411193848
    7. ' or' → logprob: -10.206307411193848
    8. 'return' → logprob: -11.956307411193848
    9. '):' → logprob: -12.206307411193848
    10. '():
' → logprob: -12.206307411193848

Token 429: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0036555302795022726
    2. 'return' → logprob: -6.378655433654785
    3. ' return' → logprob: -7.003655433654785
    4. 'raise' → logprob: -7.253655433654785
    5. ' raise' → logprob: -8.503655433654785
    6. '
' → logprob: -10.128655433654785
    7. 'self' → logprob: -10.503655433654785
    8. '	       ' → logprob: -11.128655433654785
    9. '       ' → logprob: -11.628655433654785
    10. '	raise' → logprob: -11.753655433654785

Token 430: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.03504829481244087
    2. ' raise' → logprob: -3.785048246383667
    3. '           ' → logprob: -5.160048484802246
    4. 'return' → logprob: -5.160048484802246
    5. '       ' → logprob: -8.785048484802246
    6. 'assert' → logprob: -10.410048484802246
    7. ' return' → logprob: -10.410048484802246
    8. 'self' → logprob: -11.285048484802246
    9. '	raise' → logprob: -11.285048484802246
    10. 'sys' → logprob: -11.785048484802246

Token 431: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.017337070778012276
    2. 'Exception' → logprob: -4.267336845397949
    3. 'Syntax' → logprob: -6.017336845397949
    4. 'Runtime' → logprob: -7.267336845397949
    5. 'Assertion' → logprob: -10.51733684539795
    6. ' Value' → logprob: -11.89233684539795
    7. ' Exception' → logprob: -14.51733684539795
    8. '(Value' → logprob: -16.892337799072266
    9. '(Exception' → logprob: -17.392337799072266
    10. ' Runtime' → logprob: -18.142337799072266

Token 432: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -3.810037742368877e-05
    2. 'Index' → logprob: -10.375038146972656
    3. 'Value' → logprob: -12.875038146972656
    4. 'Token' → logprob: -13.125038146972656
    5. 'Exception' → logprob: -14.250038146972656
    6. 'rror' → logprob: -15.000038146972656
    7. '("' → logprob: -15.250038146972656
    8. 'EOF' → logprob: -15.625038146972656
    9. '```' → logprob: -15.750038146972656
    10. '('' → logprob: -15.750038146972656

Token 433: '('' (ID: 706)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6956939697265625
    2. '('' → logprob: -1.4456939697265625
    3. '(f' → logprob: -2.4456939697265625
    4. '('\' → logprob: -2.9456939697265625
    5. '()' → logprob: -3.3206939697265625
    6. '
' → logprob: -3.5706939697265625
    7. '("' → logprob: -3.6956939697265625
    8. '(' → logprob: -5.1956939697265625
    9. '(None' → logprob: -5.1956939697265625
    10. '()
' → logprob: -5.3206939697265625

Token 434: 'Expected' (ID: 28041)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.29557883739471436
    2. 't' → logprob: -1.9205788373947144
    3. 'Unexpected' → logprob: -2.670578956604004
    4. 'Syntax' → logprob: -3.545578956604004
    5. 'Expected' → logprob: -5.170578956604004
    6. ''' → logprob: -6.170578956604004
    7. ' f' → logprob: -7.420578956604004
    8. ' t' → logprob: -7.545578956604004
    9. '"' → logprob: -7.670578956604004
    10. 'token' → logprob: -7.920578956604004

Token 435: ' '+' (ID: 30120)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06209731101989746
    2. ' t' → logprob: -2.8120973110198975
    3. '`t' → logprob: -9.437097549438477
    4. 'token' → logprob: -10.062097549438477
    5. ''' → logprob: -13.312097549438477
    6. ''t' → logprob: -13.812097549438477
    7. '(t' → logprob: -14.062097549438477
    8. '	t' → logprob: -14.312097549438477
    9. ' token' → logprob: -14.312097549438477
    10. '`' → logprob: -14.437097549438477

Token 436: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07982521504163742
    2. 'repr' → logprob: -2.5798251628875732
    3. 'str' → logprob: -7.079825401306152
    4. '`t' → logprob: -9.579825401306152
    5. ' repr' → logprob: -11.079825401306152
    6. ' t' → logprob: -12.204825401306152
    7. '`' → logprob: -13.454825401306152
    8. '```' → logprob: -14.204825401306152
    9. '"'' → logprob: -14.829825401306152
    10. ''' → logprob: -14.954825401306152

Token 437: '+'' (ID: 14403)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34797531366348267
    2. ')
' → logprob: -1.347975254058838
    3. '+' → logprob: -4.222975254058838
    4. '+',' → logprob: -4.847975254058838
    5. ',' → logprob: -5.472975254058838
    6. ' but' → logprob: -5.472975254058838
    7. '+')' → logprob: -7.472975254058838
    8. ' +' → logprob: -7.972975254058838
    9. '+",' → logprob: -7.972975254058838
    10. '+'' → logprob: -8.097975730895996

Token 438: ' but' (ID: 889)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12118486315011978
    2. '')' → logprob: -2.996184825897217
    3. ')
' → logprob: -3.371184825897217
    4. ' but' → logprob: -3.996184825897217
    5. ',' → logprob: -5.371184825897217
    6. ' token' → logprob: -6.621184825897217
    7. '')
' → logprob: -6.621184825897217
    8. '+')' → logprob: -6.621184825897217
    9. '+' → logprob: -7.121184825897217
    10. ' )' → logprob: -7.496184825897217

Token 439: ' got' (ID: 3508)
  Prédit: ' got'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' got' → logprob: -0.6552972197532654
    2. 'got' → logprob: -0.7802972197532654
    3. 'found' → logprob: -4.15529727935791
    4. ' found' → logprob: -5.03029727935791
    5. 'get' → logprob: -8.90529727935791
    6. 'received' → logprob: -10.53029727935791
    7. '	got' → logprob: -11.03029727935791
    8. ' get' → logprob: -11.15529727935791
    9. ' was' → logprob: -11.53029727935791
    10. 'token' → logprob: -12.53029727935791

Token 440: ' '+' (ID: 30120)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.016719341278076172
    2. ' self' → logprob: -4.266719341278076
    3. 'repr' → logprob: -6.516719341278076
    4. 'str' → logprob: -7.266719341278076
    5. ''' → logprob: -8.516719818115234
    6. ' repr' → logprob: -8.891719818115234
    7. ' str' → logprob: -10.516719818115234
    8. '(self' → logprob: -11.891719818115234
    9. ''s' → logprob: -13.641719818115234
    10. '`' → logprob: -13.641719818115234

Token 441: 'str' (ID: 689)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2278604358434677
    2. 'str' → logprob: -1.977860450744629
    3. 'repr' → logprob: -2.727860450744629
    4. '(self' → logprob: -10.977860450744629
    5. ' repr' → logprob: -11.727860450744629
    6. '(str' → logprob: -11.977860450744629
    7. ' self' → logprob: -12.227860450744629
    8. '
' → logprob: -13.227860450744629
    9. ' str' → logprob: -13.602860450744629
    10. '`' → logprob: -13.977860450744629

Token 442: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0040865931659936905
    2. 'self' → logprob: -5.504086494445801
    3. '(' → logprob: -11.7540864944458
    4. ' self' → logprob: -16.379087448120117
    5. '(
' → logprob: -17.004087448120117
    6. ' (' → logprob: -17.129087448120117
    7. '((' → logprob: -17.379087448120117
    8. 'repr' → logprob: -17.379087448120117
    9. '+self' → logprob: -17.879087448120117
    10. '(token' → logprob: -18.129087448120117

Token 443: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.014186781831085682
    2. '.tokens' → logprob: -4.264186859130859
    3. '.consume' → logprob: -11.88918685913086
    4. 'tokens' → logprob: -12.01418685913086
    5. 'peek' → logprob: -12.38918685913086
    6. '.pe' → logprob: -13.26418685913086
    7. '.next' → logprob: -13.63918685913086
    8. ' .' → logprob: -13.76418685913086
    9. '.' → logprob: -14.26418685913086
    10. ').' → logprob: -14.51418685913086

Token 444: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.8135392069816589
    2. '()))' → logprob: -1.4385392665863037
    3. '())' → logprob: -2.3135392665863037
    4. ')' → logprob: -2.3135392665863037
    5. '()))
' → logprob: -2.4385392665863037
    6. '))
' → logprob: -3.4385392665863037
    7. '()' → logprob: -6.563539028167725
    8. '())
' → logprob: -7.813539028167725
    9. ''))' → logprob: -8.813539505004883
    10. ')
' → logprob: -10.188539505004883

Token 445: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008208387531340122
    2. 'self' → logprob: -5.008208274841309
    3. '<|end|>' → logprob: -7.508208274841309
    4. '```' → logprob: -7.883208274841309
    5. '   ' → logprob: -8.133208274841309
    6. '
' → logprob: -9.758208274841309
    7. '	' → logprob: -10.258208274841309
    8. 'def' → logprob: -10.258208274841309
    9. ' self' → logprob: -10.508208274841309
    10. ')' → logprob: -10.633208274841309

Token 446: ' v' (ID: 323)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3428924083709717
    2. '       ' → logprob: -1.4678924083709717
    3. 'token' → logprob: -2.8428924083709717
    4. ' self' → logprob: -7.092892646789551
    5. '   ' → logprob: -8.09289264678955
    6. ' token' → logprob: -8.21789264678955
    7. 'tok' → logprob: -9.46789264678955
    8. 't' → logprob: -10.21789264678955
    9. 'ret' → logprob: -10.71789264678955
    10. 'result' → logprob: -11.34289264678955

Token 447: '=self' (ID: 16945)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09169264137744904
    2. '=self' → logprob: -2.9666926860809326
    3. ' =' → logprob: -3.3416926860809326
    4. '=
' → logprob: -8.091692924499512
    5. '=v' → logprob: -8.591692924499512
    6. '=sys' → logprob: -9.341692924499512
    7. '=len' → logprob: -10.341692924499512
    8. '=[]
' → logprob: -10.716692924499512
    9. '   ' → logprob: -11.341692924499512
    10. '=index' → logprob: -11.466692924499512

Token 448: '.peek' (ID: 73296)
  Prédit: '.tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tokens' → logprob: -4.954393079970032e-05
    2. 'tokens' → logprob: -10.000049591064453
    3. '.consume' → logprob: -12.500049591064453
    4. '.peek' → logprob: -15.875049591064453
    5. '.token' → logprob: -16.250049591064453
    6. '(tokens' → logprob: -17.125049591064453
    7. '.t' → logprob: -17.500049591064453
    8. 'okens' → logprob: -17.750049591064453
    9. 'consume' → logprob: -18.250049591064453
    10. ' .' → logprob: -18.500049591064453

Token 449: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12882426381111145
    2. '       ' → logprob: -2.753824234008789
    3. '()
' → logprob: -3.503824234008789
    4. ')
' → logprob: -4.253824234008789
    5. ';' → logprob: -5.378824234008789
    6. ')' → logprob: -6.378824234008789
    7. 'self' → logprob: -6.503824234008789
    8. '()' → logprob: -6.503824234008789
    9. '<|end|>' → logprob: -7.503824234008789
    10. '   ' → logprob: -7.753824234008789

Token 450: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20279479026794434
    2. '       ' → logprob: -1.7027947902679443
    3. '
' → logprob: -7.327795028686523
    4. ' self' → logprob: -8.077795028686523
    5. '   ' → logprob: -8.327795028686523
    6. '```' → logprob: -9.452795028686523
    7. '	self' → logprob: -10.327795028686523
    8. '	' → logprob: -11.452795028686523
    9. '(self' → logprob: -11.702795028686523
    10. '<|end|>' → logprob: -11.702795028686523

Token 451: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00010783452307805419
    2. ' self' → logprob: -9.875107765197754
    3. '       ' → logprob: -10.375107765197754
    4. '
' → logprob: -10.625107765197754
    5. '	self' → logprob: -15.125107765197754
    6. '```' → logprob: -15.625107765197754
    7. '   ' → logprob: -15.750107765197754
    8. 'if' → logprob: -16.37510871887207
    9. '(self' → logprob: -17.37510871887207
    10. '        
' → logprob: -17.87510871887207

Token 452: '.pos' (ID: 25321)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.20148779451847076
    2. '.pos' → logprob: -1.7014877796173096
    3. '_pos' → logprob: -10.32648754119873
    4. '.consume' → logprob: -11.20148754119873
    5. 'consume' → logprob: -11.82648754119873
    6. ' pos' → logprob: -11.82648754119873
    7. '	pos' → logprob: -12.07648754119873
    8. 'tokens' → logprob: -12.70148754119873
    9. '.tokens' → logprob: -13.70148754119873
    10. '[pos' → logprob: -13.70148754119873

Token 453: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0009692259482108057
    2. ' +=' → logprob: -7.000969409942627
    3. '+' → logprob: -10.750968933105469
    4. ']+=' → logprob: -10.750968933105469
    5. '```' → logprob: -11.875968933105469
    6. '+='' → logprob: -12.625968933105469
    7. '+="' → logprob: -13.375968933105469
    8. '<|end|>' → logprob: -14.500968933105469
    9. '=' → logprob: -14.875968933105469
    10. '[' → logprob: -15.000968933105469

Token 454: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '```' → logprob: -21.5
    4. '１' → logprob: -22.125
    5. '+' → logprob: -22.875
    6. '   ' → logprob: -23.0
    7. '۱' → logprob: -23.25
    8. '
' → logprob: -23.5
    9. '১' → logprob: -24.625
    10. '' → logprob: -24.75

Token 455: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02073410153388977
    2. 'return' → logprob: -3.8957340717315674
    3. ' return' → logprob: -8.895733833312988
    4. '   ' → logprob: -10.270733833312988
    5. '<|end|>' → logprob: -11.395733833312988
    6. '	return' → logprob: -12.520733833312988
    7. '
' → logprob: -13.270733833312988
    8. '{return' → logprob: -14.020733833312988
    9. '           ' → logprob: -14.395733833312988
    10. ':return' → logprob: -14.520733833312988

Token 456: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014364466071128845
    2. 'return' → logprob: -4.264364242553711
    3. '   ' → logprob: -9.264364242553711
    4. ' return' → logprob: -9.764364242553711
    5. '	return' → logprob: -10.889364242553711
    6. '	' → logprob: -11.889364242553711
    7. '<|end|>' → logprob: -11.889364242553711
    8. '```' → logprob: -12.014364242553711
    9. '{return' → logprob: -12.389364242553711
    10. '	   ' → logprob: -12.889364242553711

Token 457: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00028612653841264546
    2. ' return' → logprob: -8.250286102294922
    3. '       ' → logprob: -10.750286102294922
    4. '	return' → logprob: -12.750286102294922
    5. '   ' → logprob: -16.000286102294922
    6. '{return' → logprob: -16.125286102294922
    7. ':return' → logprob: -16.125286102294922
    8. 'eturn' → logprob: -17.250286102294922
    9. '```' → logprob: -17.375286102294922
    10. '@return' → logprob: -17.875286102294922

Token 458: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.006715370807796717
    2. ' v' → logprob: -5.006715297698975
    3. '	v' → logprob: -17.631715774536133
    4. '_v' → logprob: -21.506715774536133
    5. ')v' → logprob: -22.131715774536133
    6. ' ' → logprob: -22.506715774536133
    7. '$v' → logprob: -22.506715774536133
    8. '(v' → logprob: -22.506715774536133
    9. '.v' → logprob: -22.756715774536133
    10. '<v' → logprob: -23.256715774536133

Token 459: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01121982466429472
    2. 'def' → logprob: -4.6362199783325195
    3. '<|end|>' → logprob: -7.1362199783325195
    4. ' def' → logprob: -8.13621997833252
    5. '```' → logprob: -8.51121997833252
    6. '
' → logprob: -9.51121997833252
    7. '    
' → logprob: -9.76121997833252
    8. '	def' → logprob: -11.26121997833252
    9. '<|end|>' → logprob: -11.51121997833252
    10. ' ' → logprob: -12.13621997833252

Token 460: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03175416588783264
    2. 'def' → logprob: -3.5317542552948
    3. ' def' → logprob: -6.656754016876221
    4. '```' → logprob: -7.531754016876221
    5. '<|end|>' → logprob: -9.656754493713379
    6. '    
' → logprob: -10.031754493713379
    7. '
' → logprob: -10.781754493713379
    8. '	def' → logprob: -11.156754493713379
    9. '<|end|>' → logprob: -11.281754493713379
    10. ' ' → logprob: -11.406754493713379

Token 461: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2580644190311432
    2. 'def' (adapté à ' def') → logprob: -1.5080643892288208
    3. ' def' → logprob: -5.133064270019531
    4. '```' → logprob: -8.758064270019531
    5. '
' → logprob: -10.633064270019531
    6. '	def' → logprob: -11.258064270019531
    7. ' ' → logprob: -11.383064270019531
    8. '    
' → logprob: -11.883064270019531
    9. '  ' → logprob: -13.508064270019531
    10. '       ' → logprob: -13.633064270019531

Token 462: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0018047726480290294
    2. 'expr' → logprob: -7.126804828643799
    3. ' parse' → logprob: -7.126804828643799
    4. 'expression' → logprob: -9.25180435180664
    5. 'def' → logprob: -10.12680435180664
    6. 'factor' → logprob: -10.12680435180664
    7. 'e' → logprob: -11.75180435180664
    8. 'consume' → logprob: -12.87680435180664
    9. '_parse' → logprob: -13.25180435180664
    10. 'eat' → logprob: -13.37680435180664

Token 463: '_expression' (ID: 69265)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.09221458435058594
    2. '_expression' → logprob: -2.842214584350586
    3. '_term' → logprob: -3.592214584350586
    4. '_expr' → logprob: -6.717214584350586
    5. 'factor' → logprob: -7.592214584350586
    6. '()' → logprob: -8.842214584350586
    7. 'Factor' → logprob: -8.842214584350586
    8. '_atom' → logprob: -9.217214584350586
    9. 'expression' → logprob: -10.342214584350586
    10. '_exp' → logprob: -10.467214584350586

Token 464: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.500005722045898
    3. '():
' → logprob: -13.750005722045898
    4. 'self' → logprob: -15.500005722045898
    5. 'def' → logprob: -15.750005722045898
    6. '()' → logprob: -16.3750057220459
    7. '   ' → logprob: -16.5000057220459
    8. '(Self' → logprob: -16.6250057220459
    9. ' (' → logprob: -16.7500057220459
    10. '(
' → logprob: -17.2500057220459

Token 465: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00014334988372866064
    2. '():
' → logprob: -9.375143051147461
    3. '):
' → logprob: -10.375143051147461
    4. 'self' → logprob: -11.375143051147461
    5. '(' → logprob: -12.125143051147461
    6. '():' → logprob: -12.750143051147461
    7. '()' → logprob: -13.125143051147461
    8. '):' → logprob: -13.375143051147461
    9. 'def' → logprob: -13.750143051147461
    10. '   ' → logprob: -14.125143051147461

Token 466: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038900997024029493
    2. 'self' → logprob: -6.753890037536621
    3. '(self' → logprob: -7.003890037536621
    4. '   ' → logprob: -7.003890037536621
    5. 'tokens' → logprob: -8.253890037536621
    6. '()' → logprob: -8.378890037536621
    7. '```' → logprob: -9.128890037536621
    8. 'def' → logprob: -10.003890037536621
    9. 'result' → logprob: -10.128890037536621
    10. '(' → logprob: -10.878890037536621

Token 467: ' terms' (ID: 5941)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.6041589975357056
    2. 'res' → logprob: -1.7291589975357056
    3. 'node' → logprob: -2.354158878326416
    4. 'left' → logprob: -2.604158878326416
    5. 'seq' → logprob: -2.979158878326416
    6. 'terms' (adapté à ' terms') → logprob: -3.479158878326416
    7. 'result' → logprob: -4.229158878326416
    8. 'expr' → logprob: -5.354158878326416
    9. 'elements' → logprob: -6.729158878326416
    10. 'lhs' → logprob: -6.854158878326416

Token 468: '=[' (ID: 13370)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.5066079497337341
    2. '=' → logprob: -1.506608009338379
    3. '=[]
' → logprob: -2.381608009338379
    4. ' =' → logprob: -2.506608009338379
    5. '=self' → logprob: -6.756608009338379
    6. '=[' → logprob: -8.506608009338379
    7. '=[]
' → logprob: -9.131608009338379
    8. '   ' → logprob: -9.256608009338379
    9. '       ' → logprob: -9.506608009338379
    10. 'tokens' → logprob: -9.631608009338379

Token 469: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.32523515378125e-05
    2. ' self' → logprob: -10.125062942504883
    3. '('' → logprob: -10.875062942504883
    4. '   ' → logprob: -13.000062942504883
    5. '(self' → logprob: -13.375062942504883
    6. 'term' → logprob: -16.000062942504883
    7. ' ' → logprob: -16.250062942504883
    8. '       ' → logprob: -16.750062942504883
    9. ' ('' → logprob: -17.500062942504883
    10. '(' → logprob: -17.750062942504883

Token 470: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.062207769602537155
    2. '.consume' → logprob: -2.8122076988220215
    3. '].' → logprob: -9.31220817565918
    4. '.' → logprob: -9.56220817565918
    5. 'parse' → logprob: -10.43720817565918
    6. '.peek' → logprob: -10.43720817565918
    7. ']' → logprob: -11.43720817565918
    8. '().' → logprob: -12.06220817565918
    9. 'consume' → logprob: -12.68720817565918
    10. ' .' → logprob: -15.56220817565918

Token 471: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.16409461200237274
    2. 'term' → logprob: -1.9140945672988892
    3. '_factor' → logprob: -5.7890944480896
    4. '_expression' → logprob: -7.5390944480896
    5. 'factor' → logprob: -8.289094924926758
    6. 'expression' → logprob: -11.414094924926758
    7. 'Term' → logprob: -13.164094924926758
    8. '_terms' → logprob: -14.039094924926758
    9. '_' → logprob: -14.164094924926758
    10. '(term' → logprob: -14.414094924926758

Token 472: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.1629585474729538
    2. '()]
' → logprob: -1.9129585027694702
    3. '()' → logprob: -5.91295862197876
    4. '()
' → logprob: -10.662958145141602
    5. '())' → logprob: -13.787958145141602
    6. ' ()' → logprob: -14.537958145141602
    7. '()])
' → logprob: -14.787958145141602
    8. '()`' → logprob: -15.162958145141602
    9. ']' → logprob: -15.412958145141602
    10. ']()
' → logprob: -15.662958145141602

Token 473: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18394622206687927
    2. 'while' → logprob: -1.9339462518692017
    3. ' while' → logprob: -3.808946132659912
    4. '
' → logprob: -7.058946132659912
    5. '	while' → logprob: -8.18394660949707
    6. '   ' → logprob: -9.80894660949707
    7. '```' → logprob: -10.30894660949707
    8. '	' → logprob: -11.18394660949707
    9. '        
' → logprob: -11.68394660949707
    10. ',' → logprob: -12.18394660949707

Token 474: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.02867204137146473
    2. ' while' → logprob: -4.028672218322754
    3. '       ' → logprob: -5.028672218322754
    4. '
' → logprob: -5.903672218322754
    5. '	while' → logprob: -6.778672218322754
    6. '   ' → logprob: -10.153672218322754
    7. '        
' → logprob: -12.028672218322754
    8. '```' → logprob: -12.903672218322754
    9. '
' → logprob: -13.653672218322754
    10. '``' → logprob: -14.153672218322754

Token 475: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889155298471451
    2. ' self' → logprob: -2.5788915157318115
    3. '(self' → logprob: -13.32889175415039
    4. 'True' → logprob: -16.57889175415039
    5. '	self' → logprob: -17.57889175415039
    6. ' True' → logprob: -17.82889175415039
    7. '(' → logprob: -18.82889175415039
    8. ' (' → logprob: -18.95389175415039
    9. ' ' → logprob: -18.95389175415039
    10. '   ' → logprob: -20.20389175415039

Token 476: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.005407830700278282
    2. '.consume' → logprob: -5.255407810211182
    3. 'peek' → logprob: -9.38040828704834
    4. '.' → logprob: -9.50540828704834
    5. ' .' → logprob: -11.50540828704834
    6. '.pe' → logprob: -13.00540828704834
    7. 'consume' → logprob: -14.13040828704834
    8. '.cons' → logprob: -14.63040828704834
    9. '.pos' → logprob: -15.25540828704834
    10. '.poll' → logprob: -15.50540828704834

Token 477: '()==' (ID: 39177)
  Prédit: '()=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()==' → logprob: -0.10038846731185913
    2. '()' → logprob: -2.350388526916504
    3. '==' → logprob: -8.850388526916504
    4. '()=="' → logprob: -10.475388526916504
    5. '()!=' → logprob: -12.350388526916504
    6. '()='' → logprob: -13.100388526916504
    7. '(' → logprob: -13.850388526916504
    8. '()+' → logprob: -14.100388526916504
    9. '()=>' → logprob: -14.475388526916504
    10. '=='' → logprob: -14.600388526916504

Token 478: ''+' (ID: 16370)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16070762276649475
    2. ''+' → logprob: -1.9107075929641724
    3. '+' → logprob: -8.285707473754883
    4. ' '+'' → logprob: -8.785707473754883
    5. '"+"' → logprob: -9.785707473754883
    6. '('+' → logprob: -11.910707473754883
    7. '"+' → logprob: -12.285707473754883
    8. ' '+' → logprob: -12.410707473754883
    9. '"' → logprob: -13.660707473754883
    10. '+'' → logprob: -13.660707473754883

Token 479: '':
' (ID: 7669)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.004372559487819672
    2. '+' → logprob: -6.004372596740723
    3. ''' → logprob: -7.004372596740723
    4. '':' → logprob: -7.504372596740723
    5. ':' → logprob: -9.004372596740723
    6. ' '+' → logprob: -9.254372596740723
    7. '('+' → logprob: -9.379372596740723
    8. '+:' → logprob: -9.879372596740723
    9. ' '+'' → logprob: -10.629372596740723
    10. ':
' → logprob: -11.254372596740723

Token 480: '           ' (ID: 352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47466108202934265
    2. '       ' → logprob: -1.599661111831665
    3. '           ' → logprob: -1.974661111831665
    4. ' self' → logprob: -4.099660873413086
    5. '
' → logprob: -5.224660873413086
    6. '```' → logprob: -5.224660873413086
    7. '   ' → logprob: -5.599660873413086
    8. '\' → logprob: -6.974660873413086
    9. '{
' → logprob: -6.974660873413086
    10. ':
' → logprob: -7.224660873413086

Token 481: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0023002512753009796
    2. ' self' → logprob: -6.377300262451172
    3. '           ' → logprob: -7.752300262451172
    4. '       ' → logprob: -9.252300262451172
    5. '   ' → logprob: -9.627300262451172
    6. '
' → logprob: -13.127300262451172
    7. '	self' → logprob: -13.377300262451172
    8. '               ' → logprob: -14.002300262451172
    9. '(self' → logprob: -14.877300262451172
    10. ' ' → logprob: -15.002300262451172

Token 482: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.33494776487350464
    2. 'consume' → logprob: -1.3349478244781494
    3. '
' → logprob: -4.08494758605957
    4. '.' → logprob: -6.33494758605957
    5. '=' → logprob: -6.45994758605957
    6. '()
' → logprob: -7.58494758605957
    7. '.
' → logprob: -8.58494758605957
    8. ':
' → logprob: -8.58494758605957
    9. ' =' → logprob: -9.33494758605957
    10. ' consume' → logprob: -9.33494758605957

Token 483: '('+' (ID: 108514)
  Prédit: '('+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('+' → logprob: -0.0008806154946796596
    2. '(' → logprob: -8.125880241394043
    3. ''+' → logprob: -8.125880241394043
    4. '('' → logprob: -8.250880241394043
    5. '("+' → logprob: -10.875880241394043
    6. '()' → logprob: -12.125880241394043
    7. '+' → logprob: -13.250880241394043
    8. '='+' → logprob: -14.875880241394043
    9. ''' → logprob: -15.125880241394043
    10. '('.')' → logprob: -15.125880241394043

Token 484: '')
' (ID: 2515)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08375284075737
    2. '')
' → logprob: -2.7087528705596924
    3. ')' → logprob: -4.458752632141113
    4. '           ' → logprob: -6.833752632141113
    5. '')' → logprob: -7.458752632141113
    6. ')
' → logprob: -7.833752632141113
    7. '')
' → logprob: -10.208752632141113
    8. ')')
' → logprob: -10.833752632141113
    9. ' )
' → logprob: -11.083752632141113
    10. '")
' → logprob: -11.583752632141113

Token 485: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014964737929403782
    2. 'terms' → logprob: -4.389964580535889
    3. '       ' → logprob: -6.514964580535889
    4. ' terms' → logprob: -7.014964580535889
    5. '```' → logprob: -10.764965057373047
    6. 'term' → logprob: -11.264965057373047
    7. 'tokens' → logprob: -11.514965057373047
    8. '   ' → logprob: -11.764965057373047
    9. ',' → logprob: -12.139965057373047
    10. '		' → logprob: -12.514965057373047

Token 486: ' terms' (ID: 5941)
  Prédit: 'terms'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'terms' (adapté à ' terms') → logprob: -0.00043925188947468996
    2. '           ' → logprob: -8.000439643859863
    3. ' terms' → logprob: -9.625439643859863
    4. 'term' → logprob: -10.625439643859863
    5. '       ' → logprob: -11.250439643859863
    6. '   ' → logprob: -15.625439643859863
    7. '```' → logprob: -16.625438690185547
    8. '               ' → logprob: -17.250438690185547
    9. 'ter' → logprob: -17.250438690185547
    10. 't' → logprob: -17.250438690185547

Token 487: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004091224167495966
    2. '.' → logprob: -5.504091262817383
    3. ' .' → logprob: -11.379091262817383
    4. '+.' → logprob: -14.504091262817383
    5. 'append' → logprob: -14.879091262817383
    6. ').' → logprob: -16.379091262817383
    7. '=.' → logprob: -16.504091262817383
    8. '].' → logprob: -17.004091262817383
    9. '​.' → logprob: -17.129091262817383
    10. '().' → logprob: -17.379091262817383

Token 488: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.149051427608356e-05
    2. 'self' → logprob: -9.500081062316895
    3. '(' → logprob: -12.000081062316895
    4. ' (' → logprob: -15.125081062316895
    5. ' self' → logprob: -15.750081062316895
    6. '(
' → logprob: -17.37508201599121
    7. '   ' → logprob: -19.25008201599121
    8. '
' → logprob: -20.12508201599121
    9. '       ' → logprob: -20.12508201599121
    10. '[self' → logprob: -20.62508201599121

Token 489: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -2.1008713702030946e-06
    2. '.' → logprob: -13.875001907348633
    3. 'parse' → logprob: -14.000001907348633
    4. ' .' → logprob: -15.250001907348633
    5. ').' → logprob: -19.375001907348633
    6. '=parse' → logprob: -19.875001907348633
    7. '.decode' → logprob: -20.125001907348633
    8. ' parse' → logprob: -20.375001907348633
    9. '.Parse' → logprob: -20.625001907348633
    10. '.consume' → logprob: -20.875001907348633

Token 490: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.0003622793301474303
    2. 'term' → logprob: -8.500362396240234
    3. '_expression' → logprob: -8.750362396240234
    4. 'expression' → logprob: -15.000362396240234
    5. '_factor' → logprob: -16.875362396240234
    6. '_' → logprob: -17.500362396240234
    7. '_terms' → logprob: -17.625362396240234
    8. ' term' → logprob: -18.125362396240234
    9. '(term' → logprob: -19.000362396240234
    10. '_expr' → logprob: -19.000362396240234

Token 491: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.018457891419529915
    2. '())
' → logprob: -4.018457889556885
    3. '()' → logprob: -8.143458366394043
    4. '())

' → logprob: -12.143458366394043
    5. '()
' → logprob: -12.268458366394043
    6. ' ())' → logprob: -12.518458366394043
    7. ')' → logprob: -12.893458366394043
    8. '())
' → logprob: -14.893458366394043
    9. '();)' → logprob: -15.643458366394043
    10. '()))' → logprob: -15.768458366394043

Token 492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017258725129067898
    2. '
' → logprob: -6.876725673675537
    3. ' return' → logprob: -8.126726150512695
    4. 'return' → logprob: -8.626726150512695
    5. '<|end|>' → logprob: -9.751726150512695
    6. '```' → logprob: -10.126726150512695
    7. '        
' → logprob: -10.751726150512695
    8. ')' → logprob: -11.001726150512695
    9. '[' → logprob: -11.001726150512695
    10. '  
' → logprob: -11.626726150512695

Token 493: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.038501568138599396
    2. '       ' → logprob: -3.538501501083374
    3. ' return' → logprob: -4.913501739501953
    4. 'def' → logprob: -7.663501739501953
    5. 'if' (adapté à ' if') → logprob: -7.788501739501953
    6. 'result' → logprob: -8.663501739501953
    7. '
' → logprob: -9.038501739501953
    8. ' if' → logprob: -9.538501739501953
    9. '   ' → logprob: -10.163501739501953
    10. 'res' → logprob: -10.663501739501953

Token 494: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.014165744185447693
    2. ' len' → logprob: -4.264165878295898
    3. '(len' → logprob: -13.264165878295898
    4. '	len' → logprob: -15.139165878295898
    5. '   ' → logprob: -16.1391658782959
    6. ' ' → logprob: -16.2641658782959
    7. '  ' → logprob: -17.3891658782959
    8. '[len' → logprob: -18.6391658782959
    9. '
' → logprob: -19.2641658782959
    10. 'l' → logprob: -19.6391658782959

Token 495: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. 'terms' → logprob: -16.375
    3. ' (' → logprob: -17.0
    4. '(parts' → logprob: -19.375
    5. '(term' → logprob: -20.125
    6. '(
' → logprob: -20.625
    7. ' terms' → logprob: -21.125
    8. '(tokens' → logprob: -22.0
    9. 'Terms' → logprob: -22.0
    10. '(self' → logprob: -22.5

Token 496: 'terms' (ID: 39463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759819746017456
    2. 'terms' → logprob: -0.8259819746017456
    3. ' terms' → logprob: -10.075982093811035
    4. 'term' → logprob: -15.325982093811035
    5. '_terms' → logprob: -16.07598114013672
    6. 'Terms' → logprob: -16.82598114013672
    7. '(term' → logprob: -16.95098114013672
    8. ' (' → logprob: -17.32598114013672
    9. '(parts' → logprob: -17.57598114013672
    10. '[' → logprob: -18.57598114013672

Token 497: ')==' (ID: 35269)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.010722601786255836
    2. '==' → logprob: -5.135722637176514
    3. ')>' → logprob: -6.260722637176514
    4. ' >' → logprob: -6.385722637176514
    5. ')' → logprob: -6.885722637176514
    6. ')==' → logprob: -9.385722160339355
    7. ' ==' → logprob: -9.760722160339355
    8. '()>' → logprob: -11.260722160339355
    9. '=' → logprob: -13.135722160339355
    10. ']>' → logprob: -13.260722160339355

Token 498: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '>' → logprob: -15.875005722045898
    4. '   ' → logprob: -16.5000057220459
    5. '=' → logprob: -16.7500057220459
    6. '۱' → logprob: -19.1250057220459
    7. '１' → logprob: -19.1250057220459
    8. '```' → logprob: -19.3750057220459
    9. '==' → logprob: -19.5000057220459
    10. '
' → logprob: -19.6250057220459

Token 499: ':
' (ID: 734)
  Prédit: ':return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':return' → logprob: -0.557755172252655
    2. ':
' → logprob: -1.4327552318572998
    3. ':' → logprob: -2.0577552318573
    4. 'return' → logprob: -2.9327552318573
    5. '           ' → logprob: -5.932754993438721
    6. '       ' → logprob: -6.182754993438721
    7. ' return' → logprob: -6.307754993438721
    8. '{return' → logprob: -7.182754993438721
    9. '   ' → logprob: -8.682755470275879
    10. ',' → logprob: -9.057755470275879

Token 500: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3484472930431366
    2. '           ' → logprob: -2.348447322845459
    3. ':
' → logprob: -2.598447322845459
    4. ':return' → logprob: -2.848447322845459
    5. ' return' → logprob: -3.223447322845459
    6. '       ' → logprob: -3.848447322845459
    7. ':' → logprob: -5.973447322845459
    8. '
' → logprob: -6.723447322845459
    9. '   ' → logprob: -7.348447322845459
    10. '{return' → logprob: -8.0984468460083

Token 501: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006173129193484783
    2. ' return' → logprob: -5.256173133850098
    3. '       ' → logprob: -7.131173133850098
    4. '           ' → logprob: -9.006173133850098
    5. '{return' → logprob: -12.006173133850098
    6. '
' → logprob: -12.381173133850098
    7. '	return' → logprob: -13.006173133850098
    8. ':return' → logprob: -13.131173133850098
    9. '   ' → logprob: -14.381173133850098
    10. ')return' → logprob: -14.506173133850098

Token 502: ' terms' (ID: 5941)
  Prédit: 'terms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'terms' → logprob: -9.627176768844947e-05
    2. ' terms' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.75009536743164
    4. 'term' → logprob: -17.75009536743164
    5. 'parts' → logprob: -20.25009536743164
    6. '[' → logprob: -20.87509536743164
    7. 'ter' → logprob: -21.87509536743164
    8. 'types' → logprob: -22.25009536743164
    9. 'steps' → logprob: -22.37509536743164
    10. 'termin' → logprob: -22.50009536743164

Token 503: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003255719493608922
    2. 'terms' → logprob: -8.500325202941895
    3. 's' → logprob: -9.250325202941895
    4. '0' → logprob: -11.500325202941895
    5. '[-' → logprob: -11.500325202941895
    6. 'else' → logprob: -13.375325202941895
    7. 'return' → logprob: -14.250325202941895
    8. 'term' → logprob: -14.375325202941895
    9. ' terms' → logprob: -14.500325202941895
    10. '
' → logprob: -14.500325202941895

Token 504: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.034592388459714e-06
    2. '[' → logprob: -12.375005722045898
    3. ' ' → logprob: -13.500005722045898
    4. '-' → logprob: -15.500005722045898
    5. '   ' → logprob: -16.2500057220459
    6. '#' → logprob: -16.8750057220459
    7. ']' → logprob: -17.5000057220459
    8. '(' → logprob: -17.5000057220459
    9. '```' → logprob: -17.6250057220459
    10. '
' → logprob: -17.8750057220459

Token 505: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5682379603385925
    2. '<|end|>' → logprob: -0.9432379603385925
    3. '       ' → logprob: -3.9432380199432373
    4. '<|end|>' → logprob: -4.443237781524658
    5. ')return' → logprob: -4.943237781524658
    6. 'return' → logprob: -7.068237781524658
    7. ')
' → logprob: -7.193237781524658
    8. '[' → logprob: -7.318237781524658
    9. ']' → logprob: -7.443237781524658
    10. ',' → logprob: -7.693237781524658

Token 506: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01894742250442505
    2. 'return' → logprob: -4.018947601318359
    3. '   ' → logprob: -8.76894760131836
    4. ' return' → logprob: -8.89394760131836
    5. '
' → logprob: -9.26894760131836
    6. 'else' → logprob: -9.51894760131836
    7. '	' → logprob: -9.64394760131836
    8. '{return' → logprob: -9.76894760131836
    9. '	return' → logprob: -10.14394760131836
    10. '{' → logprob: -10.14394760131836

Token 507: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5197938084602356
    2. '       ' → logprob: -2.269793748855591
    3. '('' → logprob: -2.269793748855591
    4. '
' → logprob: -2.394793748855591
    5. ' return' → logprob: -2.894793748855591
    6. '['' → logprob: -4.01979398727417
    7. '   ' → logprob: -4.51979398727417
    8. '{
' → logprob: -4.64479398727417
    9. ' ('' → logprob: -5.39479398727417
    10. '{'' → logprob: -6.39479398727417

Token 508: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0003855093673337251
    2. '{'' → logprob: -8.000385284423828
    3. '['' → logprob: -10.625385284423828
    4. ' ('' → logprob: -10.875385284423828
    5. '("' → logprob: -12.000385284423828
    6. '(' → logprob: -15.875385284423828
    7. ''s' → logprob: -16.125385284423828
    8. '{"' → logprob: -16.250385284423828
    9. '   ' → logprob: -16.750385284423828
    10. '{' → logprob: -17.000385284423828

Token 509: 'seq' (ID: 27794)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.25204601883888245
    2. 'seq' → logprob: -1.50204598903656
    3. ''s' → logprob: -9.502045631408691
    4. '"' → logprob: -10.502045631408691
    5. 'sequence' → logprob: -11.502045631408691
    6. ' seq' → logprob: -14.002045631408691
    7. 'SEQ' → logprob: -14.127045631408691
    8. '`' → logprob: -14.627045631408691
    9. '(seq' → logprob: -14.752045631408691
    10. 'se' → logprob: -15.002045631408691

Token 510: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.6454514265060425
    2. ',' → logprob: -1.1454514265060425
    3. '','' → logprob: -1.8954514265060425
    4. ','' → logprob: -5.770451545715332
    5. '',[' → logprob: -5.895451545715332
    6. ''' → logprob: -7.770451545715332
    7. '',['' → logprob: -7.895451545715332
    8. ',['' → logprob: -8.645451545715332
    9. ' ,' → logprob: -8.895451545715332
    10. ',[' → logprob: -9.895451545715332

Token 511: 'terms' (ID: 39463)
  Prédit: 'terms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'terms' → logprob: -8.537868779967539e-06
    2. ' terms' → logprob: -11.750008583068848
    3. '[' → logprob: -14.625008583068848
    4. ''' → logprob: -16.50000762939453
    5. ''+' → logprob: -17.50000762939453
    6. '   ' → logprob: -18.25000762939453
    7. 'term' → logprob: -19.00000762939453
    8. ' ' → logprob: -19.50000762939453
    9. '[
' → logprob: -20.00000762939453
    10. ' [' → logprob: -20.00000762939453

Token 512: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04776295647025108
    2. ',' → logprob: -3.172762870788574
    3. ',)' → logprob: -6.297762870788574
    4. '[' → logprob: -6.547762870788574
    5. ']' → logprob: -7.172762870788574
    6. '+' → logprob: -8.547762870788574
    7. ')]' → logprob: -8.922762870788574
    8. '+)' → logprob: -9.547762870788574
    9. '])' → logprob: -9.797762870788574
    10. '[])' → logprob: -10.297762870788574

Token 513: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0042391433380544186
    2. 'def' → logprob: -5.504239082336426
    3. ' def' → logprob: -9.754239082336426
    4. '```' → logprob: -10.004239082336426
    5. '<|end|>' → logprob: -10.254239082336426
    6. '	def' → logprob: -12.254239082336426
    7. ' ' → logprob: -12.629239082336426
    8. ',' → logprob: -12.754239082336426
    9. ')' → logprob: -12.879239082336426
    10. '<|end|>' → logprob: -13.254239082336426

Token 514: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13015441596508026
    2. 'def' (adapté à ' def') → logprob: -2.1301543712615967
    3. '<|end|>' → logprob: -6.380154609680176
    4. '```' → logprob: -7.005154609680176
    5. ' def' → logprob: -8.255154609680176
    6. '       ' → logprob: -9.380154609680176
    7. '<|end|>' → logprob: -9.630154609680176
    8. ')' → logprob: -9.880154609680176
    9. '
' → logprob: -10.505154609680176
    10. '    
' → logprob: -10.880154609680176

Token 515: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -1.27099974633893e-05
    2. 'def' → logprob: -11.625012397766113
    3. ' parse' → logprob: -12.500012397766113
    4. '.parse' → logprob: -18.37501335144043
    5. '(parse' → logprob: -18.50001335144043
    6. '_parse' → logprob: -18.62501335144043
    7. '=parse' → logprob: -18.62501335144043
    8. 'parser' → logprob: -18.75001335144043
    9. '	parse' → logprob: -19.62501335144043
    10. 'par' → logprob: -19.87501335144043

Token 516: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.000215457082958892
    2. 'term' → logprob: -8.500215530395508
    3. '_factor' → logprob: -11.375215530395508
    4. 'Term' → logprob: -15.375215530395508
    5. '_' → logprob: -15.750215530395508
    6. '_expression' → logprob: -17.500215530395508
    7. '(term' → logprob: -17.750215530395508
    8. 'factor' → logprob: -17.750215530395508
    9. ' term' → logprob: -18.000215530395508
    10. '_terminal' → logprob: -19.250215530395508

Token 517: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011224505578866228
    2. '(' → logprob: -9.250112533569336
    3. '   ' → logprob: -11.625112533569336
    4. 'self' → logprob: -12.250112533569336
    5. '(
' → logprob: -13.750112533569336
    6. 'def' → logprob: -14.375112533569336
    7. '       ' → logprob: -15.000112533569336
    8. '():
' → logprob: -15.500112533569336
    9. ' (' → logprob: -16.000112533569336
    10. '(Self' → logprob: -16.250112533569336

Token 518: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00013762809976469725
    2. 'self' → logprob: -9.625137329101562
    3. '(' → logprob: -10.375137329101562
    4. '):
' → logprob: -10.500137329101562
    5. ')' → logprob: -12.875137329101562
    6. 'def' → logprob: -13.125137329101562
    7. '(
' → logprob: -13.125137329101562
    8. '():
' → logprob: -13.125137329101562
    9. '   ' → logprob: -13.500137329101562
    10. '):' → logprob: -14.000137329101562

Token 519: '       ' (ID: 309)
  Prédit: 'tok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tok' → logprob: -0.6088656187057495
    2. 'token' → logprob: -0.8588656187057495
    3. 'if' → logprob: -4.358865737915039
    4. 't' → logprob: -4.483865737915039
    5. '   ' → logprob: -5.483865737915039
    6. 'peek' → logprob: -6.108865737915039
    7. 'tk' → logprob: -6.483865737915039
    8. 'c' → logprob: -8.483865737915039
    9. '       ' → logprob: -9.608865737915039
    10. 'ch' → logprob: -10.358865737915039

Token 520: ' if' (ID: 538)
  Prédit: 'tok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tok' → logprob: -0.3197464346885681
    2. 'if' (adapté à ' if') → logprob: -2.069746494293213
    3. 'token' → logprob: -2.319746494293213
    4. 't' → logprob: -3.069746494293213
    5. 'tk' → logprob: -6.069746494293213
    6. 'peek' → logprob: -8.694746017456055
    7. '   ' → logprob: -9.069746017456055
    8. '       ' → logprob: -9.444746017456055
    9. 'c' → logprob: -11.444746017456055
    10. 'v' → logprob: -11.694746017456055

Token 521: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00016516048344783485
    2. 're' → logprob: -9.000164985656738
    3. ' self' → logprob: -10.125164985656738
    4. '(self' → logprob: -13.750164985656738
    5. ' re' → logprob: -14.875164985656738
    6. '   ' → logprob: -15.750164985656738
    7. '(re' → logprob: -17.250165939331055
    8. 'token' → logprob: -18.625165939331055
    9. '  ' → logprob: -19.375165939331055
    10. '	self' → logprob: -19.500165939331055

Token 522: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -4.167648876318708e-05
    2. '.consume' → logprob: -10.625041961669922
    3. 'peek' → logprob: -11.375041961669922
    4. '().' → logprob: -12.375041961669922
    5. '.tokens' → logprob: -14.625041961669922
    6. '.pe' → logprob: -14.625041961669922
    7. '.parse' → logprob: -14.875041961669922
    8. '.' → logprob: -16.125041961669922
    9. '.pos' → logprob: -16.250041961669922
    10. 'Peek' → logprob: -17.500041961669922

Token 523: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.33861368894577026
    2. '().' → logprob: -1.588613748550415
    3. '()==' → logprob: -2.713613748550415
    4. '()[' → logprob: -4.588613510131836
    5. 'isdigit' → logprob: -6.463613510131836
    6. 'is' → logprob: -7.088613510131836
    7. '()='' → logprob: -7.213613510131836
    8. 'and' → logprob: -7.338613510131836
    9. '()>' → logprob: -7.713613510131836
    10. '   ' → logprob: -7.963613510131836

Token 524: ' and' (ID: 326)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.09104584157466888
    2. 'is' → logprob: -3.21604585647583
    3. '()' → logprob: -4.21604585647583
    4. 'isdigit' → logprob: -4.59104585647583
    5. 'and' → logprob: -4.96604585647583
    6. '==' → logprob: -5.21604585647583
    7. '()==' → logprob: -5.34104585647583
    8. '.is' → logprob: -6.46604585647583
    9. ' and' → logprob: -6.46604585647583
    10. ' is' → logprob: -7.59104585647583

Token 525: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010282796574756503
    2. ' self' → logprob: -9.625102996826172
    3. 're' → logprob: -10.500102996826172
    4. '(self' → logprob: -11.625102996826172
    5. ' re' → logprob: -16.125102996826172
    6. '(re' → logprob: -16.125102996826172
    7. '   ' → logprob: -17.125102996826172
    8. ' (' → logprob: -18.375102996826172
    9. '  ' → logprob: -18.875102996826172
    10. ' ' → logprob: -19.000102996826172

Token 526: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.004971408750861883
    2. '.tokens' → logprob: -5.754971504211426
    3. 'peek' → logprob: -6.754971504211426
    4. '.' → logprob: -7.504971504211426
    5. '.token' → logprob: -10.879971504211426
    6. '().' → logprob: -11.004971504211426
    7. '.is' → logprob: -11.129971504211426
    8. 'tokens' → logprob: -11.129971504211426
    9. 'isdigit' → logprob: -13.254971504211426
    10. '.match' → logprob: -13.254971504211426

Token 527: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.047117915004491806
    2. '()' → logprob: -3.6721179485321045
    3. '()==' → logprob: -4.047117710113525
    4. '()[' → logprob: -6.797117710113525
    5. 'isdigit' → logprob: -7.547117710113525
    6. '   ' → logprob: -8.422118186950684
    7. '()='' → logprob: -8.547118186950684
    8. '()>' → logprob: -8.797118186950684
    9. ' ().' → logprob: -9.047118186950684
    10. '=='' → logprob: -9.047118186950684

Token 528: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -0.014232140965759754
    2. 'is' → logprob: -4.264232158660889
    3. 'isal' → logprob: -9.76423168182373
    4. '.is' → logprob: -12.26423168182373
    5. 'match' → logprob: -12.38923168182373
    6. ' is' → logprob: -13.88923168182373
    7. 'isl' → logprob: -14.51423168182373
    8. 'isas' → logprob: -15.01423168182373
    9. '[' → logprob: -16.014232635498047
    10. 'ist' → logprob: -16.264232635498047

Token 529: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.16307055950164795
    2. '():' → logprob: -1.913070559501648
    3. '()' → logprob: -5.9130706787109375
    4. '()):
' → logprob: -9.788070678710938
    5. '():
' → logprob: -10.288070678710938
    6. '()==' → logprob: -10.413070678710938
    7. ':' → logprob: -11.913070678710938
    8. '():

' → logprob: -12.163070678710938
    9. '()>' → logprob: -13.038070678710938
    10. '()!=' → logprob: -14.413070678710938

Token 530: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3077002465724945
    2. '       ' → logprob: -1.932700276374817
    3. ':' → logprob: -2.6827001571655273
    4. ':
' → logprob: -3.6827001571655273
    5. 'number' → logprob: -5.182700157165527
    6. '=' → logprob: -5.432700157165527
    7. '):
' → logprob: -5.932700157165527
    8. ' =' → logprob: -6.307700157165527
    9. 'num' → logprob: -6.307700157165527
    10. '#' → logprob: -6.432700157165527

Token 531: ' n' (ID: 297)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.47805750370025635
    2. 'n' (adapté à ' n') → logprob: -0.9780575037002563
    3. '           ' → logprob: -6.103057384490967
    4. 'count' → logprob: -7.228057384490967
    5. 'k' → logprob: -7.353057384490967
    6. 'times' → logprob: -8.978057861328125
    7. ' num' → logprob: -9.728057861328125
    8. ' n' → logprob: -9.853057861328125
    9. 'number' → logprob: -10.603057861328125
    10. 'c' → logprob: -10.728057861328125

Token 532: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7187827825546265
    2. '=int' → logprob: -1.3437827825546265
    3. '=self' → logprob: -1.7187827825546265
    4. ' =' → logprob: -2.718782901763916
    5. '=n' → logprob: -5.843782901763916
    6. '=num' → logprob: -5.843782901763916
    7. 'token' → logprob: -8.843782424926758
    8. '=_' → logprob: -9.343782424926758
    9. '=t' → logprob: -9.593782424926758
    10. '           ' → logprob: -9.593782424926758

Token 533: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0077417283318936825
    2. 'self' → logprob: -4.882741928100586
    3. ')' → logprob: -10.007741928100586
    4. '()' → logprob: -10.382741928100586
    5. '(' → logprob: -10.882741928100586
    6. ' self' → logprob: -11.132741928100586
    7. ' (' → logprob: -11.382741928100586
    8. '[self' → logprob: -12.882741928100586
    9. '```' → logprob: -13.007741928100586
    10. '   ' → logprob: -13.007741928100586

Token 534: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.02664893865585327
    2. 'consume' → logprob: -3.651648998260498
    3. '.' → logprob: -8.65164852142334
    4. '.peek' → logprob: -9.02664852142334
    5. ').' → logprob: -10.27664852142334
    6. ')' → logprob: -12.15164852142334
    7. '   ' → logprob: -12.40164852142334
    8. ' .' → logprob: -13.52664852142334
    9. ' consume' → logprob: -13.90164852142334
    10. 'peek' → logprob: -14.27664852142334

Token 535: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08614597469568253
    2. '())
' → logprob: -2.8361458778381348
    3. ')' → logprob: -3.8361458778381348
    4. '(None' → logprob: -7.086145877838135
    5. '()' → logprob: -7.211145877838135
    6. ' ())' → logprob: -7.711145877838135
    7. ')
' → logprob: -8.961146354675293
    8. '(' → logprob: -9.586146354675293
    9. 'None' → logprob: -9.836146354675293
    10. ' ())
' → logprob: -11.336146354675293

Token 536: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04454229399561882
    2. '       ' → logprob: -3.1695423126220703
    3. '	       ' → logprob: -7.79454231262207
    4. '   ' → logprob: -8.41954231262207
    5. '
' → logprob: -8.79454231262207
    6. ')' → logprob: -8.79454231262207
    7. 'token' → logprob: -9.29454231262207
    8. '	   ' → logprob: -9.79454231262207
    9. ')
' → logprob: -9.79454231262207
    10. '		' → logprob: -10.16954231262207

Token 537: ' self' (ID: 1051)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7510711550712585
    2. '           ' → logprob: -1.1260712146759033
    3. 'self' (adapté à ' self') → logprob: -1.6260712146759033
    4. '       ' → logprob: -5.251070976257324
    5. '(self' → logprob: -7.876070976257324
    6. '(
' → logprob: -8.126070976257324
    7. '(' → logprob: -8.376070976257324
    8. ' if' → logprob: -8.501070976257324
    9. '
' → logprob: -9.126070976257324
    10. '   ' → logprob: -9.126070976257324

Token 538: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.03866616636514664
    2. '.peek' → logprob: -3.788666248321533
    3. 'if' → logprob: -4.788666248321533
    4. 'consume' → logprob: -5.788666248321533
    5. 'def' → logprob: -6.413666248321533
    6. '.' → logprob: -6.538666248321533
    7. 'peek' → logprob: -7.788666248321533
    8. '.expect' → logprob: -8.788665771484375
    9. '{
' → logprob: -10.413665771484375
    10. '.parse' → logprob: -10.788665771484375

Token 539: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0025366635527461767
    2. ''' → logprob: -6.002536773681641
    3. '("("' → logprob: -10.37753677368164
    4. '(' → logprob: -10.50253677368164
    5. ' ('' → logprob: -13.50253677368164
    6. ' '('' → logprob: -14.25253677368164
    7. '(
' → logprob: -16.00253677368164
    8. '(('' → logprob: -16.62753677368164
    9. '('(' → logprob: -16.87753677368164
    10. '('='' → logprob: -17.25253677368164

Token 540: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0010434092255309224
    2. '(' → logprob: -6.876043319702148
    3. ''' → logprob: -11.876043319702148
    4. '(\'' → logprob: -13.501043319702148
    5. '("("' → logprob: -14.126043319702148
    6. '(
' → logprob: -14.251043319702148
    7. '(','' → logprob: -15.001043319702148
    8. '(',' → logprob: -16.00104331970215
    9. '("' → logprob: -16.37604331970215
    10. '(('' → logprob: -16.37604331970215

Token 541: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017190495505928993
    2. '<|end|>' → logprob: -4.392190456390381
    3. '')' → logprob: -5.892190456390381
    4. '<|end|>' → logprob: -7.392190456390381
    5. '(None' → logprob: -7.892190456390381
    6. ')
' → logprob: -8.517190933227539
    7. '           ' → logprob: -8.517190933227539
    8. ')return' → logprob: -9.142190933227539
    9. 'None' → logprob: -9.642190933227539
    10. '")' → logprob: -9.892190933227539

Token 542: '           ' (ID: 352)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.08951787650585175
    2. 'exp' → logprob: -2.964517831802368
    3. '       ' → logprob: -3.464517831802368
    4. 'e' → logprob: -6.839518070220947
    5. 'ex' → logprob: -7.214518070220947
    6. '           ' → logprob: -7.589518070220947
    7. 'expression' → logprob: -8.339517593383789
    8. ' expr' → logprob: -9.089517593383789
    9. 'return' → logprob: -11.339517593383789
    10. '   ' → logprob: -11.464517593383789

Token 543: ' exp' (ID: 2794)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.011151574552059174
    2. 'exp' (adapté à ' exp') → logprob: -4.5111517906188965
    3. 'e' → logprob: -9.511151313781738
    4. 'inner' → logprob: -11.011151313781738
    5. 'sub' → logprob: -11.636151313781738
    6. 'ex' → logprob: -13.011151313781738
    7. '   ' → logprob: -14.011151313781738
    8. 'body' → logprob: -14.886151313781738
    9. ' expr' → logprob: -14.886151313781738
    10. 'inside' → logprob: -15.636151313781738

Token 544: '=self' (ID: 16945)
  Prédit: 'ression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ression' → logprob: -0.3905782699584961
    2. '=' → logprob: -1.515578269958496
    3. ' =' → logprob: -3.265578269958496
    4. 'ress' → logprob: -3.890578269958496
    5. 'res' → logprob: -4.015578269958496
    6. 'ession' → logprob: -4.140578269958496
    7. 'r' → logprob: -5.140578269958496
    8. 'exp' → logprob: -6.140578269958496
    9. 'pression' → logprob: -6.890578269958496
    10. '           ' → logprob: -7.015578269958496

Token 545: '.parse' (ID: 7259)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.048605531454086304
    2. '.parse' → logprob: -3.048605442047119
    3. ' parse' → logprob: -11.423605918884277
    4. '   ' → logprob: -13.173605918884277
    5. '=parse' → logprob: -13.298605918884277
    6. '(parse' → logprob: -13.673605918884277
    7. '	parse' → logprob: -13.673605918884277
    8. '.' → logprob: -14.173605918884277
    9. '_parse' → logprob: -14.548605918884277
    10. '           ' → logprob: -16.79860496520996

Token 546: '_expression' (ID: 69265)
  Prédit: '_expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expression' → logprob: -0.16022524237632751
    2. 'expression' → logprob: -1.91022527217865
    3. 'Expression' → logprob: -14.410224914550781
    4. ' expression' → logprob: -15.160224914550781
    5. '(expression' → logprob: -15.535224914550781
    6. '.expression' → logprob: -18.91022491455078
    7. 'expr' → logprob: -19.03522491455078
    8. '-expression' → logprob: -19.28522491455078
    9. 'express' → logprob: -19.41022491455078
    10. '_term' → logprob: -19.66022491455078

Token 547: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06716398149728775
    2. ')
' → logprob: -3.0671639442443848
    3. ')' → logprob: -4.067163944244385
    4. '       ' → logprob: -7.567163944244385
    5. '()
' → logprob: -8.442164421081543
    6. '()' → logprob: -9.192164421081543
    7. 'return' → logprob: -9.317164421081543
    8. '')' → logprob: -9.442164421081543
    9. '
' → logprob: -10.317164421081543
    10. '   ' → logprob: -10.317164421081543

Token 548: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004672445356845856
    2. 'self' → logprob: -5.629672527313232
    3. '       ' → logprob: -7.254672527313232
    4. '   ' → logprob: -8.504672050476074
    5. ')' → logprob: -9.879672050476074
    6. 'return' → logprob: -10.629672050476074
    7. '	       ' → logprob: -10.879672050476074
    8. ' self' → logprob: -11.004672050476074
    9. '		' → logprob: -11.254672050476074
    10. 'n' → logprob: -11.504672050476074

Token 549: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.062234535813331604
    2. '           ' → logprob: -2.81223464012146
    3. ' self' → logprob: -8.312234878540039
    4. 'return' → logprob: -11.562234878540039
    5. '   ' → logprob: -12.437234878540039
    6. '       ' → logprob: -12.687234878540039
    7. '	self' → logprob: -13.437234878540039
    8. 'this' → logprob: -13.812234878540039
    9. '(self' → logprob: -13.812234878540039
    10. '               ' → logprob: -15.187234878540039

Token 550: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -6.599403423024341e-05
    2. 'consume' → logprob: -9.750065803527832
    3. '.' → logprob: -11.875065803527832
    4. '   ' → logprob: -14.750065803527832
    5. ').' → logprob: -16.62506675720215
    6. ' .' → logprob: -16.62506675720215
    7. ')' → logprob: -16.87506675720215
    8. ')
' → logprob: -18.50006675720215
    9. '.expect' → logprob: -18.62506675720215
    10. '
' → logprob: -19.00006675720215

Token 551: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.38716062903404236
    2. '')' → logprob: -1.1371606588363647
    3. ')' → logprob: -8.262160301208496
    4. '(' → logprob: -10.887160301208496
    5. '['' → logprob: -12.387160301208496
    6. '")' → logprob: -13.012160301208496
    7. '+')' → logprob: -13.387160301208496
    8. '("' → logprob: -13.762160301208496
    9. '.')' → logprob: -14.762160301208496
    10. ' ')' → logprob: -15.012160301208496

Token 552: ')')
' (ID: 80616)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.3868735730648041
    2. ')' → logprob: -1.1368736028671265
    3. ')'' → logprob: -13.261873245239258
    4. ')")' → logprob: -15.386873245239258
    5. '")' → logprob: -15.761873245239258
    6. ')')
' → logprob: -15.886873245239258
    7. ')','' → logprob: -16.761873245239258
    8. ')').' → logprob: -16.886873245239258
    9. '('' → logprob: -17.011873245239258
    10. ' ')' → logprob: -17.386873245239258

Token 553: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00996655784547329
    2. 'return' → logprob: -4.8849663734436035
    3. '       ' → logprob: -6.1349663734436035
    4. '   ' → logprob: -8.759966850280762
    5. ' return' → logprob: -10.634966850280762
    6. '	return' → logprob: -12.634966850280762
    7. '	       ' → logprob: -13.134966850280762
    8. '		' → logprob: -13.259966850280762
    9. '{return' → logprob: -13.259966850280762
    10. '	   ' → logprob: -14.259966850280762

Token 554: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004552354104816914
    2. '       ' → logprob: -5.504552364349365
    3. ' return' → logprob: -7.879552364349365
    4. '	return' → logprob: -9.754551887512207
    5. '           ' → logprob: -10.379551887512207
    6. '   ' → logprob: -12.129551887512207
    7. '{return' → logprob: -15.129551887512207
    8. ':return' → logprob: -15.629551887512207
    9. ' ' → logprob: -16.379552841186523
    10. '	       ' → logprob: -16.379552841186523

Token 555: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.688212614681106e-05
    2. ' ('' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.875017166137695
    4. '       ' → logprob: -17.750017166137695
    5. '(('' → logprob: -19.375017166137695
    6. ''re' → logprob: -19.375017166137695
    7. '['' → logprob: -19.500017166137695
    8. '(' → logprob: -19.750017166137695
    9. '           ' → logprob: -20.000017166137695
    10. '  ' → logprob: -20.125017166137695

Token 556: 'repeat' (ID: 63242)
  Prédit: 'repeat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.3868755102157593
    2. ''re' → logprob: -1.1368755102157593
    3. ''' → logprob: -12.88687515258789
    4. ' repeat' → logprob: -14.13687515258789
    5. ' '' → logprob: -14.88687515258789
    6. 're' → logprob: -15.63687515258789
    7. '('' → logprob: -16.01187515258789
    8. '   ' → logprob: -16.13687515258789
    9. ''s' → logprob: -16.26187515258789
    10. ''r' → logprob: -16.26187515258789

Token 557: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.012013067491352558
    2. ',n' → logprob: -5.012012958526611
    3. ',' → logprob: -5.762012958526611
    4. '(n' → logprob: -6.637012958526611
    5. ''n' → logprob: -7.887012958526611
    6. 'n' → logprob: -8.26201343536377
    7. '',(' → logprob: -8.88701343536377
    8. ')n' → logprob: -11.38701343536377
    9. '','' → logprob: -11.51201343536377
    10. '",' → logprob: -11.76201343536377

Token 558: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.060365608893335e-05
    2. ' n' → logprob: -10.125041007995605
    3. '(n' → logprob: -14.625041007995605
    4. '   ' → logprob: -17.00004005432129
    5. ')' → logprob: -17.50004005432129
    6. ')n' → logprob: -17.50004005432129
    7. '[n' → logprob: -18.62504005432129
    8. '	n' → logprob: -19.37504005432129
    9. ',' → logprob: -19.50004005432129
    10. ''n' → logprob: -19.50004005432129

Token 559: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003694205661304295
    2. ' ,' → logprob: -8.50036907196045
    3. 'exp' → logprob: -8.75036907196045
    4. '(exp' → logprob: -12.25036907196045
    5. ',
' → logprob: -14.62536907196045
    6. ',exports' → logprob: -14.87536907196045
    7. ''exp' → logprob: -15.00036907196045
    8. ')' → logprob: -15.12536907196045
    9. '   ' → logprob: -15.37536907196045
    10. ',None' → logprob: -15.62536907196045

Token 560: 'exp' (ID: 8067)
  Prédit: 'exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -1.4855663721391466e-05
    2. ' exp' → logprob: -11.125015258789062
    3. '	exp' → logprob: -19.125015258789062
    4. '(exp' → logprob: -19.625015258789062
    5. '   ' → logprob: -19.750015258789062
    6. ''exp' → logprob: -19.750015258789062
    7. '[' → logprob: -20.000015258789062
    8. ')' → logprob: -20.000015258789062
    9. ' ' → logprob: -20.250015258789062
    10. '.exp' → logprob: -20.375015258789062

Token 561: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010735770774772391
    2. ')
' → logprob: -9.500107765197754
    3. '       ' → logprob: -10.375107765197754
    4. ' )' → logprob: -14.625107765197754
    5. ')return' → logprob: -15.375107765197754
    6. '   ' → logprob: -15.500107765197754
    7. '')' → logprob: -16.125106811523438
    8. '))' → logprob: -16.250106811523438
    9. '<|end|>' → logprob: -16.250106811523438
    10. '           ' → logprob: -17.250106811523438

Token 562: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001732663222355768
    2. 'else' → logprob: -8.875173568725586
    3. '```' → logprob: -10.875173568725586
    4. 'elif' → logprob: -12.250173568725586
    5. 'return' → logprob: -12.625173568725586
    6. '
' → logprob: -13.000173568725586
    7. 'def' → logprob: -13.375173568725586
    8. '   ' → logprob: -13.875173568725586
    9. ' else' → logprob: -15.125173568725586
    10. '#' → logprob: -15.125173568725586

Token 563: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.20164497196674347
    2. '       ' → logprob: -1.701645016670227
    3. 'elif' → logprob: -9.201644897460938
    4. ' else' → logprob: -9.451644897460938
    5. 'return' → logprob: -10.576644897460938
    6. '   ' → logprob: -11.076644897460938
    7. '
' → logprob: -11.951644897460938
    8. '```' → logprob: -12.701644897460938
    9. '           ' → logprob: -14.451644897460938
    10. 'def' → logprob: -15.326644897460938

Token 564: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3436107337474823
    2. 'if' → logprob: -1.5936107635498047
    3. ' if' → logprob: -3.3436107635498047
    4. 'return' → logprob: -3.5936107635498047
    5. '           ' → logprob: -4.218610763549805
    6. ':
' → logprob: -4.843610763549805
    7. ':' → logprob: -6.968610763549805
    8. ' return' → logprob: -7.343610763549805
    9. '   ' → logprob: -8.593610763549805
    10. 'factor' → logprob: -9.218610763549805

Token 565: '           ' (ID: 352)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -1.0865769386291504
    2. 'if' → logprob: -1.2115769386291504
    3. 'return' → logprob: -1.5865769386291504
    4. '       ' → logprob: -2.5865769386291504
    5. 'f' → logprob: -3.3365769386291504
    6. 'c' → logprob: -3.4615769386291504
    7. 'token' → logprob: -4.46157693862915
    8. 'fact' → logprob: -6.21157693862915
    9. 't' → logprob: -6.46157693862915
    10. 'ch' → logprob: -6.96157693862915

Token 566: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8012963533401489
    2. 'if' → logprob: -1.301296353340149
    3. 'factor' → logprob: -2.3012962341308594
    4. 'c' → logprob: -2.8012962341308594
    5. 'tok' → logprob: -3.1762962341308594
    6. 'token' → logprob: -3.3012962341308594
    7. 't' → logprob: -3.9262962341308594
    8. 'v' → logprob: -4.426296234130859
    9. 'val' → logprob: -5.801296234130859
    10. 'fact' → logprob: -6.426296234130859

Token 567: ' self' (ID: 1051)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0013166663702577353
    2. 'self' → logprob: -7.001316547393799
    3. ' ('' → logprob: -8.251317024230957
    4. '(self' → logprob: -8.876317024230957
    5. '(' → logprob: -13.251317024230957
    6. '   ' → logprob: -13.626317024230957
    7. ' self' → logprob: -14.001317024230957
    8. '(('' → logprob: -14.876317024230957
    9. '('_' → logprob: -16.50131607055664
    10. '       ' → logprob: -16.87631607055664

Token 568: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.038047339767217636
    2. '.consume' → logprob: -3.2880473136901855
    3. '.' → logprob: -12.913047790527344
    4. 'parse' → logprob: -13.038047790527344
    5. 'consume' → logprob: -15.038047790527344
    6. '.factor' → logprob: -15.288047790527344
    7. '.peek' → logprob: -15.538047790527344
    8. '.cons' → logprob: -15.913047790527344
    9. ' .' → logprob: -16.788047790527344
    10. '=parse' → logprob: -17.038047790527344

Token 569: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0003365350130479783
    2. 'factor' → logprob: -8.000336647033691
    3. '_expression' → logprob: -14.875336647033691
    4. '_term' → logprob: -15.500336647033691
    5. 'Factor' → logprob: -15.625336647033691
    6. '_' → logprob: -16.125335693359375
    7. '('' → logprob: -16.250335693359375
    8. '(f' → logprob: -17.625335693359375
    9. '`' → logprob: -17.750335693359375
    10. '__' → logprob: -17.875335693359375

Token 570: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11384069919586182
    2. 'def' → logprob: -2.2388405799865723
    3. '```' → logprob: -7.488840579986572
    4. ' def' → logprob: -8.61384105682373
    5. '       ' → logprob: -9.11384105682373
    6. '
' → logprob: -9.48884105682373
    7. '<|end|>' → logprob: -10.73884105682373
    8. '    
' → logprob: -10.86384105682373
    9. '	def' → logprob: -10.98884105682373
    10. '  ' → logprob: -11.48884105682373

Token 571: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19998174905776978
    2. 'def' → logprob: -1.824981689453125
    3. '```' → logprob: -4.699981689453125
    4. ' def' → logprob: -5.074981689453125
    5. '	def' → logprob: -5.824981689453125
    6. '<|end|>' → logprob: -7.074981689453125
    7. ' ' → logprob: -8.199981689453125
    8. '``' → logprob: -9.074981689453125
    9. '       ' → logprob: -9.699981689453125
    10. '<|end|>' → logprob: -9.824981689453125

Token 572: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3166992962360382
    2. 'def' (adapté à ' def') → logprob: -1.3166992664337158
    3. ' def' → logprob: -5.691699504852295
    4. '```' → logprob: -10.066699028015137
    5. '
' → logprob: -12.316699028015137
    6. ' ' → logprob: -12.441699028015137
    7. '	def' → logprob: -12.566699028015137
    8. '       ' → logprob: -13.566699028015137
    9. '  ' → logprob: -13.691699028015137
    10. '`' → logprob: -14.941699028015137

Token 573: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -2.0100624169572257e-05
    2. ' parse' → logprob: -11.000020027160645
    3. 'def' → logprob: -13.000020027160645
    4. 'consume' → logprob: -14.250020027160645
    5. 'peek' → logprob: -15.000020027160645
    6. 'factor' → logprob: -17.12502098083496
    7. '(parse' → logprob: -17.62502098083496
    8. '	parse' → logprob: -17.75002098083496
    9. 'parser' → logprob: -18.62502098083496
    10. '=parse' → logprob: -18.62502098083496

Token 574: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -5.347765181795694e-05
    2. 'factor' → logprob: -10.000053405761719
    3. '_expression' → logprob: -12.250053405761719
    4. '_' → logprob: -13.500053405761719
    5. 'def' → logprob: -14.250053405761719
    6. '__' → logprob: -15.125053405761719
    7. 'self' → logprob: -15.375053405761719
    8. '(self' → logprob: -15.625053405761719
    9. 'Factor' → logprob: -16.37505340576172
    10. '```' → logprob: -16.50005340576172

Token 575: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0012032082304358482
    2. '   ' → logprob: -6.8762030601501465
    3. '(' → logprob: -9.251203536987305
    4. '       ' → logprob: -10.376203536987305
    5. 'def' → logprob: -10.751203536987305
    6. 'self' → logprob: -11.626203536987305
    7. '(
' → logprob: -11.626203536987305
    8. '```' → logprob: -13.376203536987305
    9. '	self' → logprob: -14.126203536987305
    10. '():
' → logprob: -14.626203536987305

Token 576: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009574358118698001
    2. '   ' → logprob: -7.625957489013672
    3. 'self' → logprob: -8.250957489013672
    4. '(' → logprob: -9.375957489013672
    5. '       ' → logprob: -9.750957489013672
    6. 'def' → logprob: -10.375957489013672
    7. '):
' → logprob: -11.250957489013672
    8. '(
' → logprob: -11.375957489013672
    9. ')' → logprob: -13.125957489013672
    10. '	self' → logprob: -13.375957489013672

Token 577: '       ' (ID: 309)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -1.1290104389190674
    2. '       ' → logprob: -1.3790104389190674
    3. 'c' → logprob: -1.8790104389190674
    4. 'v' → logprob: -2.0040104389190674
    5. 't' → logprob: -2.7540104389190674
    6. 'tok' → logprob: -2.8790104389190674
    7. 'ch' → logprob: -5.129010200500488
    8. 'tk' → logprob: -5.254010200500488
    9. ' token' → logprob: -6.129010200500488
    10. ' c' → logprob: -6.879010200500488

Token 578: ' t' (ID: 260)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3630129396915436
    2. 't' (adapté à ' t') → logprob: -2.3630130290985107
    3. 'ch' → logprob: -2.6130130290985107
    4. 'tok' → logprob: -2.6130130290985107
    5. 'token' → logprob: -3.3630130290985107
    6. 'v' → logprob: -3.8630130290985107
    7. '       ' → logprob: -5.238012790679932
    8. 'p' → logprob: -6.863012790679932
    9. 'f' → logprob: -7.738012790679932
    10. 'tk' → logprob: -7.863012790679932

Token 579: '=self' (ID: 16945)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16300179064273834
    2. '=self' → logprob: -1.9130017757415771
    3. ' =' → logprob: -6.663002014160156
    4. '       ' → logprob: -7.538002014160156
    5. 'self' → logprob: -8.663002014160156
    6. 'token' → logprob: -8.913002014160156
    7. '=t' → logprob: -9.038002014160156
    8. '   ' → logprob: -9.413002014160156
    9. 'def' → logprob: -9.538002014160156
    10. '=('' → logprob: -9.538002014160156

Token 580: '.peek' (ID: 73296)
  Prédit: '.consume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.005265769083052874
    2. '.peek' → logprob: -5.255265712738037
    3. 'consume' → logprob: -11.130266189575195
    4. '.' → logprob: -11.130266189575195
    5. '.tokens' → logprob: -13.130266189575195
    6. '.cons' → logprob: -15.630266189575195
    7. '.token' → logprob: -16.130266189575195
    8. 'peek' → logprob: -16.130266189575195
    9. '.poll' → logprob: -16.255266189575195
    10. '.dequeue' → logprob: -16.630266189575195

Token 581: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13544218242168427
    2. '()
' → logprob: -2.5104422569274902
    3. '=' → logprob: -4.01044225692749
    4. '       ' → logprob: -4.63544225692749
    5. ' =' → logprob: -5.26044225692749
    6. 'if' → logprob: -5.51044225692749
    7. '<|end|>' → logprob: -6.13544225692749
    8. 'def' → logprob: -6.51044225692749
    9. '();' → logprob: -7.63544225692749
    10. '#' → logprob: -7.63544225692749

Token 582: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03955163434147835
    2. 'if' → logprob: -3.2895517349243164
    3. 'self' → logprob: -7.414551734924316
    4. ' if' → logprob: -7.539551734924316
    5. 'return' → logprob: -8.039551734924316
    6. '   ' → logprob: -10.539551734924316
    7. '```' → logprob: -11.789551734924316
    8. 'token' → logprob: -12.164551734924316
    9. 't' → logprob: -12.289551734924316
    10. '           ' → logprob: -12.914551734924316

Token 583: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10608706623315811
    2. 'self' → logprob: -2.3560869693756104
    3. 'return' → logprob: -5.7310872077941895
    4. '       ' → logprob: -5.9810872077941895
    5. ' if' → logprob: -9.356086730957031
    6. ' self' → logprob: -12.856086730957031
    7. 'token' → logprob: -12.981086730957031
    8. 'assert' → logprob: -14.356086730957031
    9. 'v' → logprob: -14.731086730957031
    10. '   ' → logprob: -14.981086730957031

Token 584: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.306760805164231e-05
    2. ' t' → logprob: -12.50001335144043
    3. ''' → logprob: -12.62501335144043
    4. 'self' → logprob: -13.00001335144043
    5. 're' → logprob: -13.12501335144043
    6. ''t' → logprob: -13.75001335144043
    7. '   ' → logprob: -15.62501335144043
    8. 'T' → logprob: -15.62501335144043
    9. '`t' → logprob: -16.12501335144043
    10. 'is' → logprob: -17.12501335144043

Token 585: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5255141258239746
    2. '.is' → logprob: -2.0255141258239746
    3. 'and' → logprob: -2.2755141258239746
    4. '>=' → logprob: -3.1505141258239746
    5. ' is' → logprob: -3.2755141258239746
    6. '==' → logprob: -3.4005141258239746
    7. ' and' → logprob: -3.6505141258239746
    8. 'if' → logprob: -4.400514125823975
    9. 'import' → logprob: -5.025514125823975
    10. '       ' → logprob: -5.650514125823975

Token 586: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.053487230092287064
    2. 'not' → logprob: -3.0534873008728027
    3. ' None' → logprob: -6.178487300872803
    4. ' not' → logprob: -6.303487300872803
    5. '   ' → logprob: -7.553487300872803
    6. ''[' → logprob: -9.178486824035645
    7. '       ' → logprob: -9.303486824035645
    8. ''' → logprob: -10.053486824035645
    9. ''A' → logprob: -10.053486824035645
    10. 'import' → logprob: -10.178486824035645

Token 587: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12921226024627686
    2. ':
' → logprob: -2.3792123794555664
    3. ' or' → logprob: -4.004212379455566
    4. ':' → logprob: -4.879212379455566
    5. '       ' → logprob: -6.254212379455566
    6. ':return' → logprob: -8.379212379455566
    7. ' and' → logprob: -8.754212379455566
    8. 'or' → logprob: -8.879212379455566
    9. '==' → logprob: -9.629212379455566
    10. '   ' → logprob: -10.004212379455566

Token 588: '           ' (ID: 352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5933197140693665
    2. '           ' → logprob: -0.9683197140693665
    3. 'if' → logprob: -3.3433196544647217
    4. 'raise' → logprob: -3.7183196544647217
    5. '       ' → logprob: -5.468319892883301
    6. 'c' → logprob: -6.468319892883301
    7. 'return' → logprob: -7.218319892883301
    8. 'token' → logprob: -7.968319892883301
    9. '   ' → logprob: -8.2183198928833
    10. ' self' → logprob: -8.2183198928833

Token 589: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.44686925411224365
    2. 'return' → logprob: -1.3218692541122437
    3. 'self' → logprob: -2.821869373321533
    4. '           ' → logprob: -3.446869373321533
    5. '       ' → logprob: -6.696869373321533
    6. ' raise' → logprob: -7.196869373321533
    7. 'break' → logprob: -8.571868896484375
    8. ' return' → logprob: -9.571868896484375
    9. 'None' → logprob: -9.696868896484375
    10. '   ' → logprob: -10.446868896484375

Token 590: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -6.749814019713085e-06
    2. 'EOF' → logprob: -12.000006675720215
    3. ' Value' → logprob: -14.750006675720215
    4. 'Syntax' → logprob: -15.750006675720215
    5. '_value' → logprob: -19.87500762939453
    6. '(Value' → logprob: -20.12500762939453
    7. 'value' → logprob: -20.87500762939453
    8. '_Value' → logprob: -21.00000762939453
    9. 'Exception' → logprob: -21.37500762939453
    10. '.Value' → logprob: -21.50000762939453

Token 591: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.029751643538475037
    2. 'rror' → logprob: -3.5297515392303467
    3. 'Value' → logprob: -14.404751777648926
    4. 'ror' → logprob: -15.029751777648926
    5. 'SError' → logprob: -15.779751777648926
    6. 'error' → logprob: -16.40475082397461
    7. 'LError' → logprob: -17.27975082397461
    8. '```' → logprob: -18.15475082397461
    9. '   ' → logprob: -18.27975082397461
    10. '(Error' → logprob: -18.27975082397461

Token 592: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.007764443289488554
    2. '       ' → logprob: -4.8827643394470215
    3. '           ' → logprob: -9.63276481628418
    4. ''' → logprob: -9.75776481628418
    5. '   ' → logprob: -11.13276481628418
    6. ' ('' → logprob: -11.75776481628418
    7. '("' → logprob: -12.38276481628418
    8. '(' → logprob: -13.38276481628418
    9. ''S' → logprob: -13.38276481628418
    10. 'def' → logprob: -13.88276481628418

Token 593: 'Unexpected' (ID: 59338)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.15155817568302155
    2. '')' → logprob: -2.9015581607818604
    3. 'Unexpected' → logprob: -3.4015581607818604
    4. ''' → logprob: -4.1515583992004395
    5. 'EOF' → logprob: -4.7765583992004395
    6. 'self' → logprob: -5.0265583992004395
    7. ')' → logprob: -5.4015583992004395
    8. 'Syntax' → logprob: -5.7765583992004395
    9. 'Expected' → logprob: -5.9015583992004395
    10. 't' → logprob: -5.9015583992004395

Token 594: ' end' (ID: 1268)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -1.1698161363601685
    2. ')' → logprob: -1.7948161363601685
    3. 'self' → logprob: -1.9198161363601685
    4. 'token' → logprob: -2.044816017150879
    5. '')' → logprob: -2.544816017150879
    6. 't' → logprob: -2.669816017150879
    7. 'None' → logprob: -3.294816017150879
    8. ')t' → logprob: -3.669816017150879
    9. 'Token' → logprob: -4.919816017150879
    10. 'end' → logprob: -4.919816017150879

Token 595: '')
' (ID: 2515)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.04977388679981232
    2. '       ' → logprob: -3.674773931503296
    3. 'of' → logprob: -4.299773693084717
    4. '           ' → logprob: -5.674773693084717
    5. ')' → logprob: -6.549773693084717
    6. 'token' → logprob: -6.799773693084717
    7. '   ' → logprob: -6.924773693084717
    8. '<|end|>' → logprob: -7.424773693084717
    9. '
' → logprob: -8.424774169921875
    10. 'while' → logprob: -8.549774169921875

Token 596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00042745075188577175
    2. '   ' → logprob: -8.50042724609375
    3. 'self' → logprob: -8.50042724609375
    4. 'token' → logprob: -12.12542724609375
    5. 'if' → logprob: -12.37542724609375
    6. '           ' → logprob: -12.75042724609375
    7. 'return' → logprob: -13.00042724609375
    8. '```' → logprob: -13.37542724609375
    9. 't' → logprob: -13.87542724609375
    10. ' self' → logprob: -14.12542724609375

Token 597: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5172954201698303
    2. 'if' (adapté à ' if') → logprob: -1.0172953605651855
    3. '       ' → logprob: -3.6422953605651855
    4. 'return' → logprob: -4.1422953605651855
    5. 'c' → logprob: -9.642295837402344
    6. 'token' → logprob: -9.642295837402344
    7. ' if' → logprob: -10.267295837402344
    8. ' self' → logprob: -11.017295837402344
    9. '   ' → logprob: -11.142295837402344
    10. 'v' → logprob: -11.517295837402344

Token 598: ' re' (ID: 322)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.012656088918447495
    2. 're' → logprob: -4.762656211853027
    3. ''' → logprob: -6.262656211853027
    4. ''t' → logprob: -6.512656211853027
    5. ''A' → logprob: -8.012656211853027
    6. ''T' → logprob: -8.887656211853027
    7. ' t' → logprob: -9.512656211853027
    8. ''re' → logprob: -10.762656211853027
    9. 'len' → logprob: -11.012656211853027
    10. 'T' → logprob: -11.262656211853027

Token 599: '.match' (ID: 21348)
  Prédit: '.match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.match' → logprob: -0.029818879440426826
    2. 'match' → logprob: -3.6548187732696533
    3. '.full' → logprob: -6.904819011688232
    4. '```' → logprob: -6.904819011688232
    5. '[A' → logprob: -7.154819011688232
    6. '^[' → logprob: -7.779819011688232
    7. '``' → logprob: -9.154818534851074
    8. '[' → logprob: -9.904818534851074
    9. 'full' → logprob: -10.779818534851074
    10. 'Match' → logprob: -11.029818534851074

Token 600: '('[' (ID: 43265)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.2558996379375458
    2. 'r' → logprob: -1.5058996677398682
    3. '('[' → logprob: -5.755899429321289
    4. '[r' → logprob: -7.255899429321289
    5. ''[' → logprob: -9.630899429321289
    6. ' r' → logprob: -11.380899429321289
    7. '=r' → logprob: -12.505899429321289
    8. '   ' → logprob: -12.755899429321289
    9. '	r' → logprob: -13.130899429321289
    10. '('' → logprob: -13.255899429321289

Token 601: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0004309076175559312
    2. '[A' → logprob: -7.750431060791016
    3. ''A' → logprob: -16.625431060791016
    4. 'Z' → logprob: -16.625431060791016
    5. '^[' → logprob: -17.000431060791016
    6. ' A' → logprob: -17.500431060791016
    7. '"A' → logprob: -17.750431060791016
    8. 'AZ' → logprob: -17.750431060791016
    9. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -18.125431060791016
    10. '`' → logprob: -19.000431060791016

Token 602: '-Z' (ID: 17216)
  Prédit: '-Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-Z' → logprob: -0.016612187027931213
    2. 'A' → logprob: -4.2666120529174805
    3. 'Z' → logprob: -6.0166120529174805
    4. '[A' → logprob: -11.89161205291748
    5. '-A' → logprob: -15.26661205291748
    6. '[' → logprob: -15.51661205291748
    7. '-' → logprob: -15.64161205291748
    8. '_Z' → logprob: -16.141613006591797
    9. '```' → logprob: -16.266613006591797
    10. '-z' → logprob: -17.266613006591797

Token 603: ']',' (ID: 66429)
  Prédit: ']','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']',' → logprob: -0.0009592238930054009
    2. ']' → logprob: -7.500959396362305
    3. '',' → logprob: -8.000959396362305
    4. ')',' → logprob: -11.000959396362305
    5. 'A' → logprob: -11.625959396362305
    6. ']+' → logprob: -11.625959396362305
    7. ']',
' → logprob: -11.875959396362305
    8. ']'' → logprob: -12.375959396362305
    9. ']",' → logprob: -12.375959396362305
    10. '])' → logprob: -12.500959396362305

Token 604: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -5.796184723294573e-06
    2. ' t' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.375005722045898
    4. '       ' → logprob: -17.2500057220459
    5. '           ' → logprob: -17.7500057220459
    6. 'self' → logprob: -18.1250057220459
    7. '	t' → logprob: -18.3750057220459
    8. '`t' → logprob: -18.5000057220459
    9. ' ' → logprob: -18.8750057220459
    10. ')t' → logprob: -19.0000057220459

Token 605: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12517979741096497
    2. '):' → logprob: -2.6251797676086426
    3. ')' → logprob: -3.2501797676086426
    4. ')==' → logprob: -5.125179767608643
    5. ',' → logprob: -9.0001802444458
    6. '[' → logprob: -9.7501802444458
    7. ')!=' → logprob: -9.7501802444458
    8. '):

' → logprob: -10.0001802444458
    9. '       ' → logprob: -10.0001802444458
    10. '           ' → logprob: -10.2501802444458

Token 606: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1480870544910431
    2. '           ' → logprob: -2.5230870246887207
    3. 'return' → logprob: -2.8980870246887207
    4. ' return' → logprob: -6.773087024688721
    5. '   ' → logprob: -8.023087501525879
    6. '	       ' → logprob: -8.148087501525879
    7. 'self' → logprob: -8.773087501525879
    8. '	return' → logprob: -9.898087501525879
    9. ':return' → logprob: -10.023087501525879
    10. '{
' → logprob: -10.023087501525879

Token 607: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02362895756959915
    2. 'return' → logprob: -3.7736289501190186
    3. '       ' → logprob: -8.898629188537598
    4. 'c' → logprob: -9.273629188537598
    5. 'v' → logprob: -9.898629188537598
    6. 'token' → logprob: -10.148629188537598
    7. '           ' → logprob: -10.523629188537598
    8. ' self' → logprob: -11.273629188537598
    9. 'tok' → logprob: -11.523629188537598
    10. 'ch' → logprob: -11.773629188537598

Token 608: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.0003364158037584275
    2. 'consume' → logprob: -8.500336647033691
    3. '.' → logprob: -9.000336647033691
    4. '   ' → logprob: -12.625336647033691
    5. 'def' → logprob: -13.000336647033691
    6. '.return' → logprob: -13.375336647033691
    7. 'return' → logprob: -13.875336647033691
    8. 'pos' → logprob: -14.625336647033691
    9. '.pos' → logprob: -14.875336647033691
    10. '.acquire' → logprob: -15.625336647033691

Token 609: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02642941288650036
    2. '()
' → logprob: -4.151429176330566
    3. '(t' → logprob: -5.026429176330566
    4. 't' → logprob: -5.901429176330566
    5. '(' → logprob: -7.401429176330566
    6. 'return' → logprob: -8.276429176330566
    7. '(None' → logprob: -9.651429176330566
    8. '();' → logprob: -11.026429176330566
    9. '<|end|>' → logprob: -11.026429176330566
    10. '('' → logprob: -11.401429176330566

Token 610: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2545396685600281
    2. '           ' → logprob: -1.5045397281646729
    3. '       ' → logprob: -6.504539489746094
    4. ' return' → logprob: -7.004539489746094
    5. '   ' → logprob: -9.129539489746094
    6. '{return' → logprob: -10.254539489746094
    7. '	return' → logprob: -10.504539489746094
    8. ':return' → logprob: -10.754539489746094
    9. '(return' → logprob: -13.004539489746094
    10. ')return' → logprob: -13.254539489746094

Token 611: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -2.935296834039036e-06
    2. ' return' → logprob: -13.00000286102295
    3. '           ' → logprob: -14.50000286102295
    4. '       ' → logprob: -17.125003814697266
    5. '{return' → logprob: -17.500003814697266
    6. '('' → logprob: -18.750003814697266
    7. ':return' → logprob: -18.875003814697266
    8. '   ' → logprob: -19.875003814697266
    9. '(return' → logprob: -20.125003814697266
    10. ')return' → logprob: -20.375003814697266

Token 612: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.173704271830502e-06
    2. '(t' → logprob: -13.00000286102295
    3. ' ('' → logprob: -14.50000286102295
    4. 't' → logprob: -14.87500286102295
    5. '(' → logprob: -17.625003814697266
    6. '(('' → logprob: -19.500003814697266
    7. ''t' → logprob: -20.875003814697266
    8. ' t' → logprob: -21.500003814697266
    9. '('_' → logprob: -21.750003814697266
    10. '('__' → logprob: -22.500003814697266

Token 613: 'part' (ID: 5815)
  Prédit: 'part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.3869979679584503
    2. ''' → logprob: -1.136997938156128
    3. '('' → logprob: -9.011998176574707
    4. '(part' → logprob: -13.136998176574707
    5. ' part' → logprob: -13.136998176574707
    6. '"' → logprob: -15.136998176574707
    7. ' '' → logprob: -15.261998176574707
    8. ''s' → logprob: -15.886998176574707
    9. ''post' → logprob: -15.886998176574707
    10. 'parts' → logprob: -16.26199722290039

Token 614: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -2.2842308680992573e-05
    2. '',(' → logprob: -12.000022888183594
    3. ',' → logprob: -12.625022888183594
    4. '','' → logprob: -12.750022888183594
    5. 't' → logprob: -12.875022888183594
    6. '",' → logprob: -13.125022888183594
    7. ''' → logprob: -13.625022888183594
    8. ' ',' → logprob: -14.125022888183594
    9. '<|end|>' → logprob: -14.250022888183594
    10. '',[' → logprob: -14.625022888183594

Token 615: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -6.704273118884885e-07
    2. ' t' → logprob: -14.375000953674316
    3. '`t' → logprob: -19.0
    4. ')t' → logprob: -19.875
    5. '	t' → logprob: -21.625
    6. '   ' → logprob: -22.75
    7. 'p' → logprob: -23.0
    8. ')' → logprob: -23.25
    9. '_t' → logprob: -23.5
    10. '$t' → logprob: -24.25

Token 616: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ')
' → logprob: -13.37500286102295
    3. '<|end|>' → logprob: -14.62500286102295
    4. ' )' → logprob: -15.00000286102295
    5. '')' → logprob: -15.50000286102295
    6. ')}' → logprob: -16.000003814697266
    7. ')return' → logprob: -16.375003814697266
    8. ',' → logprob: -16.500003814697266
    9. ')}}' → logprob: -16.625003814697266
    10. ',)' → logprob: -17.250003814697266

Token 617: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03494550660252571
    2. 'else' → logprob: -3.409945487976074
    3. 'raise' → logprob: -7.784945487976074
    4. '```' → logprob: -8.284945487976074
    5. 'elif' → logprob: -8.409945487976074
    6. ' else' → logprob: -8.784945487976074
    7. '   ' → logprob: -9.409945487976074
    8. '           ' → logprob: -10.034945487976074
    9. '
' → logprob: -10.284945487976074
    10. 'return' → logprob: -10.784945487976074

Token 618: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4697611629962921
    2. 'raise' → logprob: -1.7197611331939697
    3. 'else' (adapté à ' else') → logprob: -1.9697611331939697
    4. 'elif' → logprob: -3.2197611331939697
    5. 'if' → logprob: -4.219761371612549
    6. 'self' → logprob: -6.719761371612549
    7. '           ' → logprob: -8.84476089477539
    8. '   ' → logprob: -9.34476089477539
    9. 'return' → logprob: -10.46976089477539
    10. '```' → logprob: -10.59476089477539

Token 619: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002791803563013673
    2. 'raise' → logprob: -7.127791881561279
    3. '       ' → logprob: -7.377791881561279
    4. '	       ' → logprob: -8.252791404724121
    5. '	raise' → logprob: -8.252791404724121
    6. ' raise' → logprob: -8.377791404724121
    7. ',' → logprob: -8.502791404724121
    8. ':
' → logprob: -8.877791404724121
    9. ':' → logprob: -10.002791404724121
    10. '          ' → logprob: -10.377791404724121

Token 620: '           ' (ID: 352)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.0043282839469611645
    2. ' raise' → logprob: -5.75432825088501
    3. '           ' → logprob: -7.12932825088501
    4. '	raise' → logprob: -8.004328727722168
    5. 'raises' → logprob: -12.504328727722168
    6. 'Raise' → logprob: -12.879328727722168
    7. '_raise' → logprob: -13.254328727722168
    8. 'self' → logprob: -13.254328727722168
    9. '.raise' → logprob: -13.379328727722168
    10. 'raising' → logprob: -14.129328727722168

Token 621: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -1.1517960956552997e-05
    2. ' raise' → logprob: -11.500011444091797
    3. '   ' → logprob: -14.250011444091797
    4. 'return' → logprob: -14.875011444091797
    5. '           ' → logprob: -15.375011444091797
    6. '       ' → logprob: -17.000011444091797
    7. '	raise' → logprob: -17.000011444091797
    8. 'self' → logprob: -18.125011444091797
    9. 'Value' → logprob: -19.750011444091797
    10. '
' → logprob: -20.125011444091797

Token 622: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -6.392202976712724e-06
    2. 'Syntax' → logprob: -12.000006675720215
    3. ' Value' → logprob: -16.5000057220459
    4. 'Runtime' → logprob: -19.2500057220459
    5. '(Value' → logprob: -22.0000057220459
    6. '_value' → logprob: -22.0000057220459
    7. '_Value' → logprob: -22.6250057220459
    8. 'value' → logprob: -22.8750057220459
    9. '.Value' → logprob: -23.2500057220459
    10. '	Value' → logprob: -23.6250057220459

Token 623: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -8.888114098226652e-05
    2. 'rror' → logprob: -9.375088691711426
    3. '('' → logprob: -12.750088691711426
    4. 'error' → logprob: -14.500088691711426
    5. '_error' → logprob: -15.875088691711426
    6. 'SError' → logprob: -16.250089645385742
    7. '("' → logprob: -16.500089645385742
    8. '_Error' → logprob: -16.500089645385742
    9. 'r' → logprob: -17.250089645385742
    10. 'LError' → logprob: -17.375089645385742

Token 624: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00016587569552939385
    2. '(' → logprob: -9.125165939331055
    3. '(f' → logprob: -10.000165939331055
    4. '("' → logprob: -11.625165939331055
    5. '()' → logprob: -14.500165939331055
    6. '("'' → logprob: -14.875165939331055
    7. '('(' → logprob: -14.875165939331055
    8. '(t' → logprob: -15.500165939331055
    9. '(
' → logprob: -15.625165939331055
    10. '('\' → logprob: -16.000165939331055

Token 625: 'Unexpected' (ID: 59338)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02350366674363613
    2. 't' → logprob: -4.27350378036499
    3. 'f' → logprob: -5.02350378036499
    4. 'Unexpected' → logprob: -6.52350378036499
    5. 'Value' → logprob: -7.27350378036499
    6. 'Expected' → logprob: -8.898503303527832
    7. '"' → logprob: -9.148503303527832
    8. 'Syntax' → logprob: -9.273503303527832
    9. 'Invalid' → logprob: -10.273503303527832
    10. '('' → logprob: -10.273503303527832

Token 626: ' token' (ID: 6602)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.0421266183257103
    2. ' token' → logprob: -3.2921266555786133
    3. 'input' → logprob: -5.917126655578613
    4. 'Token' → logprob: -7.292126655578613
    5. 'expression' → logprob: -8.542126655578613
    6. '[token' → logprob: -8.917126655578613
    7. 'value' → logprob: -9.292126655578613
    8. ' input' → logprob: -9.792126655578613
    9. 'factor' → logprob: -9.917126655578613
    10. '(token' → logprob: -10.667126655578613

Token 627: ' '+' (ID: 30120)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.020410848781466484
    2. '('' → logprob: -4.520411014556885
    3. '(' → logprob: -5.520411014556885
    4. '(token' → logprob: -6.145411014556885
    5. ''' → logprob: -6.270411014556885
    6. '('+' → logprob: -8.020410537719727
    7. 't' → logprob: -8.770410537719727
    8. ',' → logprob: -8.770410537719727
    9. '')' → logprob: -9.645410537719727
    10. ')' → logprob: -9.770410537719727

Token 628: 'str' (ID: 689)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.264460951089859
    2. 'str' → logprob: -1.5144609212875366
    3. 'repr' → logprob: -4.389461040496826
    4. ' t' → logprob: -11.139460563659668
    5. ' str' → logprob: -11.389460563659668
    6. ' repr' → logprob: -11.514460563659668
    7. '`t' → logprob: -11.889460563659668
    8. '```' → logprob: -13.889460563659668
    9. '''' → logprob: -14.139460563659668
    10. '(t' → logprob: -15.014460563659668

Token 629: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -4.274932143744081e-05
    2. 't' → logprob: -10.500042915344238
    3. '(' → logprob: -11.125042915344238
    4. ')' → logprob: -15.875042915344238
    5. ' (' → logprob: -16.125041961669922
    6. '(token' → logprob: -16.250041961669922
    7. '(
' → logprob: -18.250041961669922
    8. '(tokens' → logprob: -18.750041961669922
    9. ')t' → logprob: -18.875041961669922
    10. '((' → logprob: -19.125041961669922

Token 630: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08345294743776321
    2. ')' → logprob: -2.7084529399871826
    3. ''))' → logprob: -4.333453178405762
    4. '')' → logprob: -8.958453178405762
    5. '()))' → logprob: -9.958453178405762
    6. '       ' → logprob: -10.208453178405762
    7. ')))' → logprob: -10.458453178405762
    8. '))
' → logprob: -10.583453178405762
    9. '   ' → logprob: -11.208453178405762
    10. ')+' → logprob: -12.208453178405762

Token 631: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003932576219085604
    2. '#' → logprob: -8.37539291381836
    3. '   ' → logprob: -10.12539291381836
    4. '```' → logprob: -10.25039291381836
    5. 'class' → logprob: -10.50039291381836
    6. ')' → logprob: -10.50039291381836
    7. '<|end|>' → logprob: -11.25039291381836
    8. 'import' → logprob: -12.12539291381836
    9. 'code' → logprob: -12.37539291381836
    10. '<|end|>' → logprob: -12.50039291381836

Token 632: ' compose' (ID: 43360)
  Prédit: 'compose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compose' → logprob: -0.09779055416584015
    2. ' compose' → logprob: -3.222790479660034
    3. 'apply' → logprob: -4.222790718078613
    4. 'perm' → logprob: -4.472790718078613
    5. 'combine' → logprob: -4.597790718078613
    6. 'def' → logprob: -4.847790718078613
    7. ' apply' → logprob: -5.972790718078613
    8. 'parse' → logprob: -6.722790718078613
    9. ' combine' → logprob: -6.972790718078613
    10. ' perm' → logprob: -7.097790718078613

Token 633: '(p' (ID: 2407)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.03462773561477661
    2. '(p' → logprob: -3.784627676010132
    3. '(A' → logprob: -4.909627914428711
    4. '(' → logprob: -5.784627914428711
    5. '(f' → logprob: -7.659627914428711
    6. '((' → logprob: -9.159627914428711
    7. '(P' → logprob: -9.284627914428711
    8. ' (' → logprob: -9.909627914428711
    9. '(
' → logprob: -10.659627914428711
    10. '(_' → logprob: -11.034627914428711

Token 634: ',q' (ID: 86188)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1400391161441803
    2. ',' → logprob: -2.1400392055511475
    3. ',q' → logprob: -5.015038967132568
    4. ',p' → logprob: -5.140038967132568
    5. 'a' → logprob: -8.640039443969727
    6. ' ,' → logprob: -9.140039443969727
    7. '2' → logprob: -9.140039443969727
    8. 'def' → logprob: -10.640039443969727
    9. ',a' → logprob: -10.640039443969727
    10. '_,' → logprob: -10.765039443969727

Token 635: '):
' (ID: 1883)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.5771154165267944
    2. ',' → logprob: -0.8271154165267944
    3. ' ,' → logprob: -7.202115535736084
    4. '):' → logprob: -8.327115058898926
    5. '):
' → logprob: -9.702115058898926
    6. ',q' → logprob: -9.827115058898926
    7. '(p' → logprob: -10.452115058898926
    8. '   ' → logprob: -11.077115058898926
    9. 'p' → logprob: -12.577115058898926
    10. ',n' → logprob: -12.702115058898926

Token 636: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5570926070213318
    2. '[' → logprob: -0.9320926070213318
    3. '[i' → logprob: -3.6820926666259766
    4. ' [' → logprob: -5.307092666625977
    5. '[n' → logprob: -6.182092666625977
    6. '[p' → logprob: -7.432092666625977
    7. ' res' → logprob: -8.557092666625977
    8. '[len' → logprob: -9.557092666625977
    9. '[
' → logprob: -10.182092666625977
    10. '[]' → logprob: -10.182092666625977

Token 637: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5287699103355408
    2. '[p' → logprob: -1.0287699699401855
    3. '[n' → logprob: -3.7787699699401855
    4. '[i' → logprob: -3.9037699699401855
    5. '[len' → logprob: -5.4037699699401855
    6. '[q' → logprob: -6.4037699699401855
    7. '[token' → logprob: -6.5287699699401855
    8. '[a' → logprob: -8.153769493103027
    9. '[j' → logprob: -8.278769493103027
    10. '[pos' → logprob: -8.278769493103027

Token 638: ' compose' (ID: 43360)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08870932459831238
    2. '[' → logprob: -3.8387093544006348
    3. '[p' → logprob: -4.338709354400635
    4. '[N' → logprob: -4.463709354400635
    5. '[len' → logprob: -5.088709354400635
    6. '[i' → logprob: -5.088709354400635
    7. '[q' → logprob: -5.213709354400635
    8. '[n' → logprob: -5.338709354400635
    9. ' return' → logprob: -5.463709354400635
    10. 'N' → logprob: -5.713709354400635

Token 639: ' two' (ID: 1920)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.5574700832366943
    2. 'def' → logprob: -1.3074700832366943
    3. '   ' → logprob: -3.1824700832366943
    4. 'lambda' → logprob: -3.3074700832366943
    5. '[' → logprob: -3.5574700832366943
    6. '(lambda' → logprob: -4.057470321655273
    7. '[i' → logprob: -4.432470321655273
    8. 'return' → logprob: -4.557470321655273
    9. 'p' → logprob: -5.432470321655273
    10. '[q' → logprob: -6.182470321655273

Token 640: ' permutations' (ID: 174595)
  Prédit: 'lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lists' → logprob: -0.7324602603912354
    2. '[p' → logprob: -1.2324602603912354
    3. 'p' → logprob: -1.8574602603912354
    4. 'def' → logprob: -2.8574602603912354
    5. ' lists' → logprob: -5.357460021972656
    6. 'list' → logprob: -5.732460021972656
    7. '[' → logprob: -6.357460021972656
    8. 'lambda' → logprob: -6.607460021972656
    9. 'per' → logprob: -6.857460021972656
    10. ' p' → logprob: -6.982460021972656

Token 641: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3727608621120453
    2. '[p' → logprob: -1.6227608919143677
    3. '(p' → logprob: -3.372760772705078
    4. '[' → logprob: -3.747760772705078
    5. ' return' → logprob: -4.622760772705078
    6. ' p' → logprob: -4.747760772705078
    7. '[i' → logprob: -4.997760772705078
    8. ':' → logprob: -5.247760772705078
    9. ')' → logprob: -5.372760772705078
    10. 'return' → logprob: -5.622760772705078

Token 642: ',q' (ID: 86188)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.179900884628296
    2. '[p' → logprob: -1.304900884628296
    3. '(p' → logprob: -1.929900884628296
    4. '   ' → logprob: -2.304900884628296
    5. '[i' → logprob: -2.679900884628296
    6. '[q' → logprob: -2.929900884628296
    7. 'def' → logprob: -4.304901123046875
    8. '[' → logprob: -4.429901123046875
    9. ',p' → logprob: -4.554901123046875
    10. ',q' → logprob: -5.554901123046875

Token 643: ' of' (ID: 328)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.41291192173957825
    2. '   ' → logprob: -1.5379118919372559
    3. '[' → logprob: -3.037911891937256
    4. ' p' → logprob: -3.912911891937256
    5. '(p' → logprob: -4.037911891937256
    6. '[q' → logprob: -4.162911891937256
    7. ':' → logprob: -5.162911891937256
    8. ' =' → logprob: -5.787911891937256
    9. '[]' → logprob: -6.037911891937256
    10. ')' → logprob: -6.162911891937256

Token 644: ' size' (ID: 2349)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.002574709476903081
    2. 'range' → logprob: -7.002574920654297
    3. 'length' → logprob: -7.127574920654297
    4. '=len' → logprob: -7.877574920654297
    5. 'N' → logprob: -8.627574920654297
    6. '[len' → logprob: -9.252574920654297
    7. ' len' → logprob: -9.627574920654297
    8. 'n' → logprob: -9.752574920654297
    9. 'def' → logprob: -10.377574920654297
    10. 'list' → logprob: -11.127574920654297

Token 645: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3543022572994232
    2. 'len' → logprob: -1.2293022871017456
    3. ' len' → logprob: -5.354302406311035
    4. ' N' → logprob: -7.354302406311035
    5. '(len' → logprob: -8.354302406311035
    6. '[len' → logprob: -9.229302406311035
    7. '   ' → logprob: -9.729302406311035
    8. '=len' → logprob: -10.729302406311035
    9. '```' → logprob: -11.104302406311035
    10. 'n' → logprob: -11.604302406311035

Token 646: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15906141698360443
    2. ':' → logprob: -2.6590614318847656
    3. '[' → logprob: -2.9090614318847656
    4. '):' → logprob: -5.659061431884766
    5. '{' → logprob: -5.784061431884766
    6. ' =' → logprob: -6.284061431884766
    7. ')' → logprob: -6.284061431884766
    8. '[i' → logprob: -6.784061431884766
    9. '[
' → logprob: -6.784061431884766
    10. '(' → logprob: -7.034061431884766

Token 647: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9495444893836975
    2. '[p' → logprob: -1.5745444297790527
    3. ' [' → logprob: -1.8245444297790527
    4. ' return' → logprob: -2.3245444297790527
    5. '   ' → logprob: -3.1995444297790527
    6. '[i' → logprob: -3.3245444297790527
    7. ' p' → logprob: -3.3245444297790527
    8. 'return' → logprob: -4.074544429779053
    9. '[len' → logprob: -5.949544429779053
    10. '[q' → logprob: -5.949544429779053

Token 648: ' p' (ID: 275)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.16557735204696655
    2. '[q' → logprob: -1.9155774116516113
    3. '[' → logprob: -5.415577411651611
    4. '[N' → logprob: -7.915577411651611
    5. '[n' → logprob: -8.665576934814453
    6. '[len' → logprob: -8.665576934814453
    7. '[i' → logprob: -9.415576934814453
    8. '[np' → logprob: -10.540576934814453
    9. '[next' → logprob: -10.790576934814453
    10. '[j' → logprob: -11.540576934814453

Token 649: '(q' (ID: 21479)
  Prédit: '[q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.05769139155745506
    2. '[' → logprob: -3.1826913356781006
    3. '[p' → logprob: -4.30769157409668
    4. 'q' → logprob: -7.80769157409668
    5. '[
' → logprob: -9.05769157409668
    6. '   ' → logprob: -9.05769157409668
    7. ' [' → logprob: -9.30769157409668
    8. '(q' → logprob: -9.93269157409668
    9. '```' → logprob: -10.18269157409668
    10. '[[' → logprob: -10.30769157409668

Token 650: '(x' (ID: 4061)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023284267634153366
    2. '))' → logprob: -4.398284435272217
    3. '(p' → logprob: -6.148284435272217
    4. '[q' → logprob: -6.398284435272217
    5. ')[' → logprob: -6.523284435272217
    6. '[' → logprob: -6.898284435272217
    7. ')]' → logprob: -7.023284435272217
    8. '[p' → logprob: -7.148284435272217
    9. 'q' → logprob: -7.398284435272217
    10. '(q' → logprob: -7.398284435272217

Token 651: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.8056595921516418
    2. ')[' → logprob: -1.180659532546997
    3. '[q' → logprob: -1.680659532546997
    4. '[p' → logprob: -3.680659532546997
    5. '))[' → logprob: -4.305659770965576
    6. ')' → logprob: -4.430659770965576
    7. '[i' → logprob: -5.430659770965576
    8. '[' → logprob: -6.555659770965576
    9. '[x' → logprob: -7.055659770965576
    10. 'q' → logprob: -7.180659770965576

Token 652: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.37003013491630554
    2. '   ' → logprob: -1.620030164718628
    3. '[p' → logprob: -2.495030164718628
    4. ' [' → logprob: -4.745029926300049
    5. '[
' → logprob: -5.120029926300049
    6. '[i' → logprob: -5.495029926300049
    7. '[q' → logprob: -5.620029926300049
    8. 'def' → logprob: -6.495029926300049
    9. ')' → logprob: -6.745029926300049
    10. 'return' → logprob: -7.495029926300049

Token 653: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3256094455718994
    2. '[' → logprob: -1.3256094455718994
    3. 'return' → logprob: -5.57560920715332
    4. '[
' → logprob: -6.07560920715332
    5. ' return' → logprob: -6.32560920715332
    6. ' [' → logprob: -6.32560920715332
    7. '[i' → logprob: -7.07560920715332
    8. '[n' → logprob: -7.57560920715332
    9. '[p' → logprob: -7.70060920715332
    10. 'def' → logprob: -8.70060920715332

Token 654: ' permutations' (ID: 174595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009068080224096775
    2. '   ' → logprob: -5.009068012237549
    3. ' return' → logprob: -6.509068012237549
    4. 'N' → logprob: -7.134068012237549
    5. 'n' → logprob: -9.884068489074707
    6. 'result' → logprob: -12.384068489074707
    7. 'res' → logprob: -12.759068489074707
    8. '[' → logprob: -13.009068489074707
    9. ' N' → logprob: -14.759068489074707
    10. '	return' → logprob: -14.759068489074707

Token 655: ' are' (ID: 553)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.752720296382904
    2. '=' → logprob: -1.6277203559875488
    3. ' =' → logprob: -1.7527203559875488
    4. '=[' → logprob: -3.127720355987549
    5. '[' → logprob: -3.377720355987549
    6. '=[]' → logprob: -3.502720355987549
    7. '   ' → logprob: -4.502720355987549
    8. '[]' → logprob: -5.002720355987549
    9. '<|end|>' → logprob: -5.502720355987549
    10. ')' → logprob: -5.627720355987549

Token 656: ' lists' (ID: 19471)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.1192622110247612
    2. '[q' → logprob: -2.869262218475342
    3. '[' → logprob: -3.369262218475342
    4. '[len' → logprob: -4.744262218475342
    5. '[i' → logprob: -4.744262218475342
    6. '[size' → logprob: -6.369262218475342
    7. '[list' → logprob: -7.869262218475342
    8. '[v' → logprob: -7.869262218475342
    9. '[n' → logprob: -8.244261741638184
    10. '[x' → logprob: -8.369261741638184

Token 657: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2176215797662735
    2. '[p' → logprob: -2.2176215648651123
    3. '[
' → logprob: -3.8426215648651123
    4. '   ' → logprob: -3.8426215648651123
    5. '[q' → logprob: -4.342621803283691
    6. 'def' → logprob: -5.092621803283691
    7. ' of' → logprob: -6.092621803283691
    8. '[n' → logprob: -6.092621803283691
    9. '[i' → logprob: -6.092621803283691
    10. ',' → logprob: -6.092621803283691

Token 658: ' size' (ID: 2349)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0008960972772911191
    2. '[int' → logprob: -7.500895977020264
    3. 'inte' → logprob: -8.750896453857422
    4. 'ints' → logprob: -8.875896453857422
    5. ' int' → logprob: -11.250896453857422
    6. 'length' → logprob: -11.500896453857422
    7. 'indices' → logprob: -11.875896453857422
    8. 'N' → logprob: -12.500896453857422
    9. 'range' → logprob: -12.500896453857422
    10. ' integers' → logprob: -12.750896453857422

Token 659: ' N' (ID: 478)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.048738718032836914
    2. 'N' → logprob: -3.048738718032837
    3. ' len' → logprob: -9.548738479614258
    4. '(len' → logprob: -9.673738479614258
    5. '=len' → logprob: -11.548738479614258
    6. '[len' → logprob: -12.173738479614258
    7. ' N' → logprob: -14.048738479614258
    8. '```' → logprob: -14.298738479614258
    9. '   ' → logprob: -14.923738479614258
    10. ',len' → logprob: -15.298738479614258

Token 660: ' where' (ID: 1919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0304837226867676
    2. '[p' → logprob: -1.1554837226867676
    3. '[' → logprob: -1.7804837226867676
    4. 'def' → logprob: -2.5304837226867676
    5. '[q' → logprob: -3.6554837226867676
    6. ':' → logprob: -3.9054837226867676
    7. '[i' → logprob: -4.780483722686768
    8. '(p' → logprob: -5.780483722686768
    9. '[n' → logprob: -6.030483722686768
    10. 'return' → logprob: -6.030483722686768

Token 661: ' p' (ID: 275)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.3865506052970886
    2. 'p' → logprob: -1.2615506649017334
    3. 'len' → logprob: -3.5115506649017334
    4. 'return' → logprob: -6.136550426483154
    5. ' q' → logprob: -6.761550426483154
    6. '[q' → logprob: -6.761550426483154
    7. 'N' → logprob: -7.136550426483154
    8. ' p' → logprob: -7.261550426483154
    9. '   ' → logprob: -7.636550426483154
    10. ' len' → logprob: -8.011550903320312

Token 662: '[i' (ID: 1768)
  Prédit: '[q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.08865925669670105
    2. '[i' → logprob: -2.8386592864990234
    3. '=' → logprob: -4.713659286499023
    4. '[' → logprob: -5.213659286499023
    5. ' =' → logprob: -5.463659286499023
    6. '=[' → logprob: -5.963659286499023
    7. '[p' → logprob: -6.838659286499023
    8. '[x' → logprob: -6.838659286499023
    9. '   ' → logprob: -6.838659286499023
    10. 'return' → logprob: -8.463659286499023

Token 663: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3492763638496399
    2. ']=' → logprob: -1.2242763042449951
    3. '],' → logprob: -8.474276542663574
    4. ']==' → logprob: -9.224276542663574
    5. '])' → logprob: -9.224276542663574
    6. ']=(' → logprob: -9.224276542663574
    7. '   ' → logprob: -9.974276542663574
    8. 'def' → logprob: -9.974276542663574
    9. '=' → logprob: -10.349276542663574
    10. ' ]' → logprob: -10.724276542663574

Token 664: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06976323574781418
    2. ' =' → logprob: -3.44476318359375
    3. '[' → logprob: -4.44476318359375
    4. '[q' → logprob: -4.69476318359375
    5. ']=' → logprob: -5.94476318359375
    6. ']' → logprob: -6.19476318359375
    7. '[p' → logprob: -6.44476318359375
    8. '=[' → logprob: -6.69476318359375
    9. '=q' → logprob: -6.69476318359375
    10. '=p' → logprob: -6.94476318359375

Token 665: ' image' (ID: 3621)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.02462879568338394
    2. 'p' → logprob: -3.7746288776397705
    3. 'the' → logprob: -6.774628639221191
    4. ' the' → logprob: -8.649628639221191
    5. ' q' → logprob: -10.274628639221191
    6. 'position' → logprob: -10.649628639221191
    7. ' p' → logprob: -12.274628639221191
    8. ' position' → logprob: -14.649628639221191
    9. 'a' → logprob: -15.524628639221191
    10. 'index' → logprob: -15.524628639221191

Token 666: ' of' (ID: 328)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0571143627166748
    2. '   ' → logprob: -1.4321143627166748
    3. '[q' → logprob: -1.6821143627166748
    4. ' q' → logprob: -2.807114362716675
    5. '=' → logprob: -3.307114362716675
    6. ' =' → logprob: -3.557114362716675
    7. '(q' → logprob: -4.057114601135254
    8. '[' → logprob: -4.057114601135254
    9. '[p' → logprob: -4.057114601135254
    10. ' of' → logprob: -4.432114601135254

Token 667: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006303519476205111
    2. ' i' → logprob: -7.3756303787231445
    3. 'p' → logprob: -13.125630378723145
    4. '   ' → logprob: -13.625630378723145
    5. '```' → logprob: -15.250630378723145
    6. '[i' → logprob: -16.125629425048828
    7. ' p' → logprob: -16.500629425048828
    8. '	i' → logprob: -16.625629425048828
    9. 'the' → logprob: -17.000629425048828
    10. '`' → logprob: -17.125629425048828

Token 668: '
' (ID: 198)
  Prédit: '[q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.40914541482925415
    2. '[' → logprob: -2.0341453552246094
    3. '[p' → logprob: -2.2841453552246094
    4. ')' → logprob: -3.7841453552246094
    5. ']' → logprob: -4.409145355224609
    6. '<|end|>' → logprob: -4.534145355224609
    7. 'q' → logprob: -4.534145355224609
    8. '   ' → logprob: -4.784145355224609
    9. ' q' → logprob: -4.909145355224609
    10. '][' → logprob: -5.659145355224609

Token 669: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6036428213119507
    2. '[' → logprob: -1.6036428213119507
    3. '[q' → logprob: -2.1036429405212402
    4. '[p' → logprob: -2.2286429405212402
    5. 'def' → logprob: -4.97864294052124
    6. 'return' → logprob: -5.85364294052124
    7. 'q' → logprob: -6.22864294052124
    8. ' [' → logprob: -6.35364294052124
    9. '[]' → logprob: -6.72864294052124
    10. '[
' → logprob: -7.10364294052124

Token 670: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08485502749681473
    2. '[' → logprob: -2.584855079650879
    3. 'def' → logprob: -5.834855079650879
    4. ' return' → logprob: -6.834855079650879
    5. ' [' → logprob: -7.709855079650879
    6. 'return' (adapté à ' return') → logprob: -7.959855079650879
    7. '[i' → logprob: -8.334855079650879
    8. '[p' → logprob: -8.709855079650879
    9. '[
' → logprob: -8.709855079650879
    10. '```' → logprob: -9.709855079650879

Token 671: ' [' (ID: 723)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.001330360071733594
    2. '[q' → logprob: -6.751330375671387
    3. '[' → logprob: -8.751330375671387
    4. '[np' → logprob: -14.126330375671387
    5. '[list' → logprob: -15.251330375671387
    6. '[n' → logprob: -15.876330375671387
    7. '[len' → logprob: -16.12632942199707
    8. '[int' → logprob: -16.25132942199707
    9. ' [' → logprob: -16.37632942199707
    10. '[u' → logprob: -16.50132942199707

Token 672: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.704273118884885e-07
    2. ' p' → logprob: -14.375000953674316
    3. 'q' → logprob: -18.125
    4. '[p' → logprob: -19.0
    5. '   ' → logprob: -19.125
    6. '<p' → logprob: -21.375
    7. '	p' → logprob: -21.625
    8. '(p' → logprob: -22.125
    9. '_p' → logprob: -22.25
    10. ')p' → logprob: -22.375

Token 673: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.0002108118060277775
    2. 'q' → logprob: -8.500210762023926
    3. '[' → logprob: -11.875210762023926
    4. ' [' → logprob: -15.625210762023926
    5. '[p' → logprob: -16.125211715698242
    6. '[
' → logprob: -16.625211715698242
    7. '[x' → logprob: -17.000211715698242
    8. '
' → logprob: -18.375211715698242
    9. '[i' → logprob: -18.750211715698242
    10. '(q' → logprob: -18.875211715698242

Token 674: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4849443838757e-06
    2. 'i' → logprob: -12.375004768371582
    3. '[x' → logprob: -15.625004768371582
    4. 'x' → logprob: -18.125003814697266
    5. '[j' → logprob: -18.875003814697266
    6. '_i' → logprob: -19.250003814697266
    7. '[p' → logprob: -19.375003814697266
    8. ']' → logprob: -19.500003814697266
    9. '(i' → logprob: -19.500003814697266
    10. '```' → logprob: -19.750003814697266

Token 675: ']]' (ID: 8928)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.027657469734549522
    2. 'i' → logprob: -4.152657508850098
    3. ']]' → logprob: -4.527657508850098
    4. ']' → logprob: -7.652657508850098
    5. ']])' → logprob: -8.402657508850098
    6. ']]]' → logprob: -10.902657508850098
    7. '(i' → logprob: -11.402657508850098
    8. ' ]]' → logprob: -12.652657508850098
    9. '[' → logprob: -12.777657508850098
    10. ' i' → logprob: -13.027657508850098

Token 676: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5554070472717285
    2. 'for' → logprob: -1.0554070472717285
    3. ']' → logprob: -2.5554070472717285
    4. ')' → logprob: -8.43040657043457
    5. ' ]' → logprob: -8.93040657043457
    6. '   ' → logprob: -10.05540657043457
    7. '[i' → logprob: -10.43040657043457
    8. ' ' → logprob: -11.30540657043457
    9. '	for' → logprob: -11.68040657043457
    10. '[' → logprob: -13.55540657043457

Token 677: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1271163523197174
    2. 'range' → logprob: -2.1271164417266846
    3. ' range' → logprob: -8.627116203308105
    4. ' i' → logprob: -12.002116203308105
    5. 'in' → logprob: -12.752116203308105
    6. 'x' → logprob: -15.752116203308105
    7. ' in' → logprob: -18.002117156982422
    8. ' ' → logprob: -18.252117156982422
    9. '(range' → logprob: -18.752117156982422
    10. '   ' → logprob: -19.127117156982422

Token 678: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07979781180620193
    2. 'range' → logprob: -2.8297977447509766
    3. ' in' → logprob: -4.079797744750977
    4. ' range' → logprob: -7.204797744750977
    5. 'i' → logprob: -11.454797744750977
    6. '(range' → logprob: -11.954797744750977
    7. '0' → logprob: -15.079797744750977
    8. ' ' → logprob: -15.579797744750977
    9. '	range' → logprob: -15.829797744750977
    10. ' i' → logprob: -16.079797744750977

Token 679: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.320199877838604e-07
    2. ' range' → logprob: -15.0
    3. '(range' → logprob: -19.875
    4. '   ' → logprob: -23.625
    5. '	range' → logprob: -23.75
    6. '
' → logprob: -23.875
    7. 'r' → logprob: -24.625
    8. ' ' → logprob: -25.125
    9. 'rang' → logprob: -25.125
    10. 'x' → logprob: -25.875

Token 680: '(N' (ID: 10564)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.011211925186216831
    2. 'N' → logprob: -4.51121187210083
    3. ' len' → logprob: -9.261212348937988
    4. '(len' → logprob: -9.636212348937988
    5. '   ' → logprob: -13.511212348937988
    6. ' N' → logprob: -14.386212348937988
    7. '[len' → logprob: -14.636212348937988
    8. '	len' → logprob: -15.261212348937988
    9. '=len' → logprob: -15.261212348937988
    10. ',len' → logprob: -15.261212348937988

Token 681: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.004696090007201e-05
    2. ']' → logprob: -9.625069618225098
    3. ']]' → logprob: -14.000069618225098
    4. ')' → logprob: -14.125069618225098
    5. '])' → logprob: -14.375069618225098
    6. ')]
' → logprob: -14.875069618225098
    7. '])]' → logprob: -15.000069618225098
    8. '')]' → logprob: -15.125069618225098
    9. ' ]' → logprob: -15.250069618225098
    10. ' )' → logprob: -15.750069618225098

Token 682: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.822646693966817e-06
    2. 'import' → logprob: -13.250007629394531
    3. 'from' → logprob: -13.500007629394531
    4. '
' → logprob: -13.750007629394531
    5. '#' → logprob: -14.000007629394531
    6. '<|end|>' → logprob: -14.125007629394531
    7. 'class' → logprob: -14.875007629394531
    8. ' def' → logprob: -14.875007629394531
    9. '```' → logprob: -15.125007629394531
    10. ')' → logprob: -15.875007629394531

Token 683: ' pow' (ID: 9779)
  Prédit: 'invert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'invert' → logprob: -0.40963220596313477
    2. 'apply' → logprob: -2.5346322059631348
    3. 'inverse' → logprob: -2.5346322059631348
    4. 'inv' → logprob: -2.6596322059631348
    5. 'identity' → logprob: -3.7846322059631348
    6. 'main' → logprob: -3.9096322059631348
    7. 'compose' → logprob: -3.9096322059631348
    8. 'pow' → logprob: -4.159632205963135
    9. 'def' → logprob: -4.409632205963135
    10. 'perm' → logprob: -5.409632205963135

Token 684: '_perm' (ID: 128866)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.46431583166122437
    2. '(pow' → logprob: -1.8393158912658691
    3. '(p' → logprob: -1.9643158912658691
    4. '(' → logprob: -2.714315891265869
    5. 'pow' → logprob: -5.839315891265869
    6. '(base' → logprob: -7.089315891265869
    7. '(def' → logprob: -7.339315891265869
    8. '_pow' → logprob: -7.839315891265869
    9. ' def' → logprob: -8.214315414428711
    10. '(comp' → logprob: -8.589315414428711

Token 685: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -9.007317567011341e-05
    2. '(' → logprob: -9.500089645385742
    3. 'def' → logprob: -11.875089645385742
    4. '(pow' → logprob: -12.750089645385742
    5. '(a' → logprob: -13.250089645385742
    6. ' (' → logprob: -13.625089645385742
    7. '(power' → logprob: -14.500089645385742
    8. '(q' → logprob: -15.250089645385742
    9. '(x' → logprob: -15.250089645385742
    10. '(base' → logprob: -15.375089645385742

Token 686: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01518373191356659
    2. ',p' → logprob: -4.515183925628662
    3. '(p' → logprob: -5.515183925628662
    4. ' ,' → logprob: -9.890183448791504
    5. 'def' → logprob: -11.015183448791504
    6. 'p' → logprob: -11.015183448791504
    7. ',n' → logprob: -11.765183448791504
    8. ',
' → logprob: -13.140183448791504
    9. '(n' → logprob: -13.140183448791504
    10. ')' → logprob: -13.390183448791504

Token 687: '):
' (ID: 1883)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.023933596909046173
    2. '):
' → logprob: -4.148933410644531
    3. '):' → logprob: -4.898933410644531
    4. 'def' → logprob: -8.523933410644531
    5. '   ' → logprob: -9.273933410644531
    6. ':' → logprob: -9.898933410644531
    7. ')' → logprob: -10.773933410644531
    8. ':
' → logprob: -11.273933410644531
    9. '(k' → logprob: -11.398933410644531
    10. '):
' → logprob: -11.898933410644531

Token 688: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28920212388038635
    2. 'def' → logprob: -1.789202094078064
    3. 'res' → logprob: -2.5392022132873535
    4. 'result' → logprob: -6.5392022132873535
    5. 'if' → logprob: -6.6642022132873535
    6. '```' → logprob: -6.6642022132873535
    7. 'r' → logprob: -7.4142022132873535
    8. ' res' → logprob: -8.039201736450195
    9. 'ret' → logprob: -9.789201736450195
    10. ' if' → logprob: -10.039201736450195

Token 689: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2647767663002014
    2. 'def' → logprob: -1.7647767066955566
    3. 'result' → logprob: -3.0147767066955566
    4. 'if' → logprob: -4.514776706695557
    5. '   ' → logprob: -6.764776706695557
    6. 'r' → logprob: -8.639777183532715
    7. '```' → logprob: -10.264777183532715
    8. ' res' → logprob: -10.764777183532715
    9. 'ret' → logprob: -12.264777183532715
    10. ' if' → logprob: -13.264777183532715

Token 690: ' fast' (ID: 5661)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.38943538069725037
    2. 'def' → logprob: -1.1394354104995728
    3. 'if' → logprob: -6.639435291290283
    4. 'result' → logprob: -6.889435291290283
    5. '   ' → logprob: -8.764435768127441
    6. 'r' → logprob: -9.639435768127441
    7. ' res' → logprob: -11.514435768127441
    8. '```' → logprob: -13.389435768127441
    9. 'ret' → logprob: -14.389435768127441
    10. ' def' → logprob: -15.139435768127441

Token 691: ' exponent' (ID: 51159)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023423897102475166
    2. 'pow' → logprob: -4.023423671722412
    3. 'p' → logprob: -5.898423671722412
    4. ' exponent' → logprob: -6.273423671722412
    5. 'power' → logprob: -8.39842414855957
    6. ' def' → logprob: -9.14842414855957
    7. 'ex' → logprob: -9.27342414855957
    8. 'k' → logprob: -10.02342414855957
    9. 'x' → logprob: -10.14842414855957
    10. 'return' → logprob: -10.27342414855957

Token 692: 'iation' (ID: 23408)
  Prédit: 'iation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iation' → logprob: -4.4060561776859686e-05
    2. '   ' → logprob: -10.125043869018555
    3. 'def' → logprob: -13.125043869018555
    4. 'iate' → logprob: -14.000043869018555
    5. 'p' → logprob: -14.750043869018555
    6. 'ation' → logprob: -15.250043869018555
    7. 'ion' → logprob: -16.000043869018555
    8. 'i' → logprob: -16.125043869018555
    9. '```' → logprob: -17.000043869018555
    10. 'iating' → logprob: -17.250043869018555

Token 693: ' of' (ID: 328)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0364929661154747
    2. 'res' → logprob: -3.7864930629730225
    3. '   ' → logprob: -4.536492824554443
    4. 'result' → logprob: -6.536492824554443
    5. '(p' → logprob: -7.411492824554443
    6. ' res' → logprob: -8.786493301391602
    7. '```' → logprob: -9.411493301391602
    8. ' def' → logprob: -9.536493301391602
    9. 'p' → logprob: -9.786493301391602
    10. '(res' → logprob: -11.786493301391602

Token 694: ' permutation' (ID: 135200)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001363168703392148
    2. 'def' → logprob: -9.125136375427246
    3. ' p' → logprob: -10.875136375427246
    4. '(p' → logprob: -12.250136375427246
    5. '[p' → logprob: -13.000136375427246
    6. '[' → logprob: -14.750136375427246
    7. 'pow' → logprob: -14.875136375427246
    8. '   ' → logprob: -15.500136375427246
    9. 'perm' → logprob: -15.875136375427246
    10. ' def' → logprob: -16.00013542175293

Token 695: ' p' (ID: 275)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15707561373710632
    2. '(p' → logprob: -2.4070756435394287
    3. '   ' → logprob: -2.9070756435394287
    4. ' def' → logprob: -8.282075881958008
    5. '```' → logprob: -8.407075881958008
    6. '(' → logprob: -10.032075881958008
    7. '(
' → logprob: -10.282075881958008
    8. 'p' → logprob: -10.657075881958008
    9. '(def' → logprob: -10.907075881958008
    10. '(s' → logprob: -12.032075881958008

Token 696: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06509681791067123
    2. '   ' → logprob: -3.065096855163574
    3. '(p' → logprob: -4.190096855163574
    4. 'res' → logprob: -7.940096855163574
    5. ' def' → logprob: -8.190096855163574
    6. '```' → logprob: -8.315096855163574
    7. '(s' → logprob: -9.065096855163574
    8. '(def' → logprob: -10.190096855163574
    9. ' res' → logprob: -10.315096855163574
    10. '(k' → logprob: -10.690096855163574

Token 697: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0022147269919514656
    2. ' k' → logprob: -6.7522149085998535
    3. 'the' → logprob: -7.3772149085998535
    4. ' the' → logprob: -8.877214431762695
    5. 'pow' → logprob: -8.877214431762695
    6. 'p' → logprob: -10.127214431762695
    7. 'def' → logprob: -10.252214431762695
    8. 'power' → logprob: -10.377214431762695
    9. ' kth' → logprob: -11.252214431762695
    10. ' power' → logprob: -12.377214431762695

Token 698: '-th' (ID: 14928)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5543009638786316
    2. 'def' → logprob: -0.9293009638786316
    3. '(p' → logprob: -3.5543010234832764
    4. ':
' → logprob: -7.304300785064697
    5. '```' → logprob: -7.679300785064697
    6. '(s' → logprob: -8.554301261901855
    7. ' def' → logprob: -8.804301261901855
    8. '
' → logprob: -9.054301261901855
    9. '):
' → logprob: -9.679301261901855
    10. ':' → logprob: -9.679301261901855

Token 699: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.7978060841560364
    2. 'result' → logprob: -1.2978060245513916
    3. 'def' → logprob: -1.7978060245513916
    4. 'res' → logprob: -2.5478060245513916
    5. ' res' → logprob: -4.172806262969971
    6. ' power' → logprob: -4.672806262969971
    7. '```' → logprob: -6.172806262969971
    8. ' def' → logprob: -6.797806262969971
    9. '
' → logprob: -7.047806262969971
    10. 'p' → logprob: -7.047806262969971

Token 700: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.352628231048584
    2. '   ' → logprob: -1.227628231048584
    3. 'res' → logprob: -6.602628231048584
    4. '```' → logprob: -6.602628231048584
    5. ' def' → logprob: -7.977628231048584
    6. ' res' → logprob: -8.227628707885742
    7. 'result' → logprob: -8.602628707885742
    8. ':
' → logprob: -8.727628707885742
    9. '(p' → logprob: -8.977628707885742
    10. 'p' → logprob: -8.977628707885742

Token 701: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.475369930267334
    2. '   ' → logprob: -0.975369930267334
    3. '```' → logprob: -6.975369930267334
    4. ' def' → logprob: -8.100370407104492
    5. '	def' → logprob: -11.725370407104492
    6. '``' → logprob: -11.850370407104492
    7. '{
' → logprob: -12.100370407104492
    8. 'result' → logprob: -12.225370407104492
    9. '    
' → logprob: -12.225370407104492
    10. 'tokens' → logprob: -12.600370407104492

Token 702: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.014783397316932678
    2. 'def' → logprob: -4.7647833824157715
    3. 'result' → logprob: -5.2647833824157715
    4. '   ' → logprob: -7.0147833824157715
    5. ' res' → logprob: -10.26478385925293
    6. 'if' → logprob: -10.63978385925293
    7. 'r' → logprob: -10.88978385925293
    8. '```' → logprob: -13.63978385925293
    9. 'ret' → logprob: -14.01478385925293
    10. '
' → logprob: -14.26478385925293

Token 703: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48373788595199585
    2. '=[' → logprob: -0.9837378859519958
    3. '=list' → logprob: -4.983737945556641
    4. ' =' → logprob: -5.983737945556641
    5. '=p' → logprob: -8.48373794555664
    6. ' =[' → logprob: -10.98373794555664
    7. '=
' → logprob: -11.85873794555664
    8. '   ' → logprob: -12.73373794555664
    9. '=res' → logprob: -12.85873794555664
    10. '=[]
' → logprob: -13.48373794555664

Token 704: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0015029559144750237
    2. 'range' → logprob: -6.501502990722656
    3. ' range' → logprob: -14.501502990722656
    4. '	range' → logprob: -16.501502990722656
    5. '(' → logprob: -17.126502990722656
    6. '=' → logprob: -17.876502990722656
    7. '```' → logprob: -18.251502990722656
    8. '`' → logprob: -18.501502990722656
    9. '.range' → logprob: -18.876502990722656
    10. '   ' → logprob: -19.126502990722656

Token 705: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004078997299075127
    2. '(N' → logprob: -5.5040788650512695
    3. 'len' → logprob: -15.37907886505127
    4. '	N' → logprob: -15.62907886505127
    5. '_N' → logprob: -16.379079818725586
    6. '```' → logprob: -16.629079818725586
    7. '[N' → logprob: -17.004079818725586
    8. ')' → logprob: -17.504079818725586
    9. '   ' → logprob: -17.629079818725586
    10. ',N' → logprob: -17.754079818725586

Token 706: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.5761719346046448
    2. '))' → logprob: -0.8261719346046448
    3. '))
' → logprob: -8.701171875
    4. '))

' → logprob: -10.201171875
    5. ' ))
' → logprob: -10.951171875
    6. ')' → logprob: -12.826171875
    7. ' ))' → logprob: -13.326171875
    8. ')),' → logprob: -13.326171875
    9. '));' → logprob: -13.326171875
    10. ')
' → logprob: -13.826171875

Token 707: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03995157778263092
    2. 'p' → logprob: -3.2899515628814697
    3. 'pow' → logprob: -7.789951801300049
    4. 'for' → logprob: -8.03995132446289
    5. 'def' → logprob: -8.41495132446289
    6. 'base' → logprob: -8.66495132446289
    7. 'tmp' → logprob: -8.78995132446289
    8. 'cur' → logprob: -8.91495132446289
    9. 'while' → logprob: -9.41495132446289
    10. ' p' → logprob: -9.66495132446289

Token 708: ' base' (ID: 3611)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06496299803256989
    2. '   ' → logprob: -2.9399631023406982
    3. 'for' → logprob: -4.939962863922119
    4. 'i' → logprob: -6.189962863922119
    5. 'base' (adapté à ' base') → logprob: -7.814962863922119
    6. ' while' → logprob: -9.189963340759277
    7. 'p' → logprob: -9.689963340759277
    8. 'pow' → logprob: -9.689963340759277
    9. 'd' → logprob: -9.939963340759277
    10. 'b' → logprob: -10.064963340759277

Token 709: '=p' (ID: 48137)
  Prédit: '=p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=p' → logprob: -0.10033779591321945
    2. '=' → logprob: -2.3503377437591553
    3. ' =' → logprob: -9.350337982177734
    4. '=
' → logprob: -10.475337982177734
    5. 'p' → logprob: -11.475337982177734
    6. '   ' → logprob: -13.100337982177734
    7. '=[' → logprob: -14.225337982177734
    8. '=list' → logprob: -14.350337982177734
    9. ',p' → logprob: -14.475337982177734
    10. '=[]
' → logprob: -15.350337982177734

Token 710: '[:' (ID: 7808)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2091374397277832
    2. '<|end|>' → logprob: -1.3341374397277832
    3. '=' → logprob: -1.8341374397277832
    4. 'while' → logprob: -2.084137439727783
    5. '[:]' → logprob: -3.209137439727783
    6. '<|end|>' → logprob: -3.584137439727783
    7. '.copy' → logprob: -3.709137439727783
    8. ' =' → logprob: -4.334137439727783
    9. '   ' → logprob: -4.584137439727783
    10. ',' → logprob: -4.584137439727783

Token 711: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.4886651933193207
    2. ']' → logprob: -1.113665223121643
    3. ')
' → logprob: -3.2386651039123535
    4. ')' → logprob: -3.9886651039123535
    5. '   ' → logprob: -8.613665580749512
    6. ']
' → logprob: -9.363665580749512
    7. '])
' → logprob: -9.863665580749512
    8. '])' → logprob: -9.988665580749512
    9. ']

' → logprob: -10.863665580749512
    10. '<|end|>' → logprob: -11.113665580749512

Token 712: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1276324987411499
    2. '   ' → logprob: -2.1276326179504395
    3. '	while' → logprob: -7.8776326179504395
    4. ' while' → logprob: -8.252632141113281
    5. '```' → logprob: -10.377632141113281
    6. 'k' → logprob: -10.752632141113281
    7. 'for' → logprob: -12.252632141113281
    8. 'def' → logprob: -12.627632141113281
    9. '
' → logprob: -13.627632141113281
    10. '    
' → logprob: -14.502632141113281

Token 713: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00027730545843951404
    2. '   ' → logprob: -8.250277519226074
    3. ' while' → logprob: -11.625277519226074
    4. '	while' → logprob: -11.875277519226074
    5. '```' → logprob: -16.000276565551758
    6. 'While' → logprob: -18.125276565551758
    7. 'for' → logprob: -18.875276565551758
    8. '
' → logprob: -19.250276565551758
    9. '``' → logprob: -19.750276565551758
    10. '       ' → logprob: -19.875276565551758

Token 714: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.704273118884885e-07
    2. ' k' → logprob: -14.500000953674316
    3. '   ' → logprob: -16.875
    4. '       ' → logprob: -19.875
    5. '	k' → logprob: -20.5
    6. '    ' → logprob: -22.875
    7. '_k' → logprob: -23.0
    8. '(k' → logprob: -23.5
    9. ' ' → logprob: -23.625
    10. '     ' → logprob: -23.75

Token 715: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -2.546478935983032e-05
    2. ' >' → logprob: -10.750025749206543
    3. 'k' → logprob: -13.250025749206543
    4. '&gt' → logprob: -14.375025749206543
    5. '   ' → logprob: -14.750025749206543
    6. ':
' → logprob: -14.750025749206543
    7. ':' → logprob: -15.500025749206543
    8. ' ' → logprob: -15.500025749206543
    9. '
' → logprob: -16.625024795532227
    10. 'and' → logprob: -16.750024795532227

Token 716: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001045551267452538
    2. 'k' → logprob: -7.5010457038879395
    3. ' ' → logprob: -7.6260457038879395
    4. '   ' → logprob: -13.501045227050781
    5. '1' → logprob: -13.626045227050781
    6. ' k' → logprob: -14.501045227050781
    7. '```' → logprob: -14.626045227050781
    8. '>' → logprob: -15.001045227050781
    9. '       ' → logprob: -15.626045227050781
    10. '(k' → logprob: -16.25104522705078

Token 717: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22232012450695038
    2. ':' → logprob: -1.8473200798034668
    3. '       ' → logprob: -3.222320079803467
    4. '   ' → logprob: -7.347320079803467
    5. ' and' → logprob: -7.972320079803467
    6. '<|end|>' → logprob: -8.097320556640625
    7. '):
' → logprob: -8.222320556640625
    8. '<|end|>' → logprob: -9.347320556640625
    9. '():
' → logprob: -10.347320556640625
    10. ',' → logprob: -10.597320556640625

Token 718: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7255371809005737
    2. 'if' → logprob: -1.4755371809005737
    3. '   ' → logprob: -1.7255371809005737
    4. ' if' → logprob: -2.2255373001098633
    5. '	if' → logprob: -6.850537300109863
    6. '     ' → logprob: -10.475537300109863
    7. '    ' → logprob: -10.475537300109863
    8. ' ' → logprob: -10.850537300109863
    9. '```' → logprob: -11.475537300109863
    10. '	   ' → logprob: -11.600537300109863

Token 719: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16826701164245605
    2. ' if' → logprob: -1.918267011642456
    3. '       ' → logprob: -4.918267250061035
    4. '   ' → logprob: -7.668267250061035
    5. '	if' → logprob: -8.418267250061035
    6. '           ' → logprob: -13.043267250061035
    7. ' ' → logprob: -13.168267250061035
    8. '```' → logprob: -13.293267250061035
    9. '	' → logprob: -13.793267250061035
    10. '@if' → logprob: -14.168267250061035

Token 720: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1041145626222715e-05
    2. ' k' → logprob: -11.500011444091797
    3. '(k' → logprob: -14.000011444091797
    4. '	k' → logprob: -18.875011444091797
    5. '(' → logprob: -20.500011444091797
    6. '   ' → logprob: -20.750011444091797
    7. '{k' → logprob: -20.750011444091797
    8. ' (' → logprob: -20.875011444091797
    9. '[k' → logprob: -21.875011444091797
    10. '_k' → logprob: -21.875011444091797

Token 721: '&' (ID: 5)
  Prédit: '&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.03806513547897339
    2. ' &' → logprob: -3.288065195083618
    3. '&p' → logprob: -11.163064956665039
    4. '%' → logprob: -12.913064956665039
    5. '&t' → logprob: -13.038064956665039
    6. '&
' → logprob: -13.538064956665039
    7. '&amp' → logprob: -14.038064956665039
    8. '&q' → logprob: -14.913064956665039
    9. '&B' → logprob: -15.038064956665039
    10. '&type' → logprob: -15.288064956665039

Token 722: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.875003814697266
    3. 'k' → logprob: -14.250003814697266
    4. '(k' → logprob: -16.500003814697266
    5. '(' → logprob: -17.750003814697266
    6. '   ' → logprob: -19.125003814697266
    7. ' (' → logprob: -19.375003814697266
    8. ' k' → logprob: -19.375003814697266
    9. '```' → logprob: -20.625003814697266
    10. '[k' → logprob: -21.000003814697266

Token 723: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22751761972904205
    2. ':' → logprob: -1.6025176048278809
    3. '==' → logprob: -6.727517604827881
    4. '=' → logprob: -8.102518081665039
    5. '):
' → logprob: -8.977518081665039
    6. ' ==' → logprob: -9.102518081665039
    7. ' :
' → logprob: -9.352518081665039
    8. '!=' → logprob: -9.477518081665039
    9. ':

' → logprob: -10.227518081665039
    10. '<|end|>' → logprob: -10.352518081665039

Token 724: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25134384632110596
    2. 'res' → logprob: -2.0013437271118164
    3. ' res' → logprob: -2.8763437271118164
    4. '           ' → logprob: -3.5013437271118164
    5. '   ' → logprob: -8.126343727111816
    6. '	res' → logprob: -9.751343727111816
    7. '[' → logprob: -10.126343727111816
    8. '	       ' → logprob: -10.126343727111816
    9. '               ' → logprob: -10.876343727111816
    10. '```' → logprob: -10.876343727111816

Token 725: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.007016452960669994
    2. ' res' → logprob: -5.007016658782959
    3. '               ' → logprob: -8.8820161819458
    4. '           ' → logprob: -9.1320161819458
    5. '	res' → logprob: -10.6320161819458
    6. '   ' → logprob: -10.8820161819458
    7. '       ' → logprob: -12.0070161819458
    8. '
' → logprob: -14.0070161819458
    9. ',res' → logprob: -14.3820161819458
    10. '(res' → logprob: -14.6320161819458

Token 726: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002478627720847726
    2. ' =' → logprob: -6.00247859954834
    3. '=com' → logprob: -13.12747859954834
    4. '=
' → logprob: -14.75247859954834
    5. '=[' → logprob: -15.12747859954834
    6. '=

' → logprob: -15.62747859954834
    7. '=p' → logprob: -16.627479553222656
    8. '＝' → logprob: -16.877479553222656
    9. '=res' → logprob: -17.752479553222656
    10. '=list' → logprob: -18.127479553222656

Token 727: 'compose' (ID: 65322)
  Prédit: 'compose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compose' → logprob: -1.7120533811976202e-05
    2. ' compose' → logprob: -11.000017166137695
    3. '[' → logprob: -15.000017166137695
    4. '.compose' → logprob: -16.750017166137695
    5. '-compose' → logprob: -18.750017166137695
    6. 'combine' → logprob: -19.000017166137695
    7. 'com' → logprob: -19.500017166137695
    8. '   ' → logprob: -20.000017166137695
    9. 'composer' → logprob: -21.250017166137695
    10. ' [' → logprob: -21.750017166137695

Token 728: '(base' (ID: 25314)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00033546582562848926
    2. 'res' → logprob: -8.000335693359375
    3. ' res' → logprob: -18.000335693359375
    4. '(base' → logprob: -18.500335693359375
    5. ',res' → logprob: -18.625335693359375
    6. '	res' → logprob: -18.625335693359375
    7. '=res' → logprob: -19.125335693359375
    8. '(p' → logprob: -20.000335693359375
    9. '$res' → logprob: -20.500335693359375
    10. '(' → logprob: -21.250335693359375

Token 729: ',res' (ID: 46138)
  Prédit: ',res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',res' → logprob: -0.005250949412584305
    2. ',' → logprob: -5.255250930786133
    3. ' ,' → logprob: -11.755250930786133
    4. 'res' → logprob: -11.880250930786133
    5. '(res' → logprob: -13.005250930786133
    6. ',
' → logprob: -17.380250930786133
    7. ',result' → logprob: -17.380250930786133
    8. '   ' → logprob: -18.130250930786133
    9. ',p' → logprob: -18.255250930786133
    10. ' res' → logprob: -18.755250930786133

Token 730: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10075855255126953
    2. ')
' → logprob: -2.3507585525512695
    3. '       ' → logprob: -7.7257585525512695
    4. ',' → logprob: -10.72575855255127
    5. ' )' → logprob: -10.72575855255127
    6. '           ' → logprob: -10.97575855255127
    7. ',k' → logprob: -11.47575855255127
    8. ' )
' → logprob: -11.47575855255127
    9. ')p' → logprob: -12.22575855255127
    10. '               ' → logprob: -12.60075855255127

Token 731: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026898354291915894
    2. 'k' → logprob: -3.6518983840942383
    3. ' k' → logprob: -8.401898384094238
    4. '
' → logprob: -8.651898384094238
    5. '   ' → logprob: -9.526898384094238
    6. '        
' → logprob: -10.151898384094238
    7. ',k' → logprob: -10.401898384094238
    8. ',' → logprob: -11.151898384094238
    9. '```' → logprob: -11.276898384094238
    10. '           ' → logprob: -12.026898384094238

Token 732: ' base' (ID: 3611)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0007992653991095722
    2. '       ' → logprob: -7.500799179077148
    3. 'base' (adapté à ' base') → logprob: -8.375799179077148
    4. ' k' → logprob: -11.125799179077148
    5. '   ' → logprob: -14.125799179077148
    6. '```' → logprob: -15.625799179077148
    7. '	k' → logprob: -15.875799179077148
    8. '           ' → logprob: -16.50079917907715
    9. ',k' → logprob: -16.75079917907715
    10. 'p' → logprob: -17.87579917907715

Token 733: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.082895273109898e-05
    2. '=[' → logprob: -10.500030517578125
    3. '=com' → logprob: -13.500030517578125
    4. '=p' → logprob: -14.125030517578125
    5. '=list' → logprob: -14.750030517578125
    6. '=

' → logprob: -15.875030517578125
    7. '=create' → logprob: -16.000030517578125
    8. '=
' → logprob: -16.125030517578125
    9. ' =' → logprob: -16.250030517578125
    10. '=s' → logprob: -17.250030517578125

Token 734: 'compose' (ID: 65322)
  Prédit: 'compose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compose' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.375001907348633
    3. ' compose' → logprob: -14.375001907348633
    4. '.compose' → logprob: -15.875001907348633
    5. '-compose' → logprob: -18.375001907348633
    6. '   ' → logprob: -18.625001907348633
    7. 'combine' → logprob: -21.250001907348633
    8. ' ' → logprob: -21.625001907348633
    9. 'com' → logprob: -21.750001907348633
    10. ' [' → logprob: -22.125001907348633

Token 735: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.25193315744400024
    2. 'base' → logprob: -1.5019330978393555
    3. ' base' → logprob: -12.501933097839355
    4. '	base' → logprob: -15.376933097839355
    5. '/base' → logprob: -17.251934051513672
    6. '_base' → logprob: -17.376934051513672
    7. '.base' → logprob: -17.876934051513672
    8. 'bases' → logprob: -18.626934051513672
    9. ';base' → logprob: -18.876934051513672
    10. 'Base' → logprob: -19.501934051513672

Token 736: ',' (ID: 11)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -5.598092684522271e-05
    2. '(base' → logprob: -10.000056266784668
    3. ' base' → logprob: -11.500056266784668
    4. ',' → logprob: -14.875056266784668
    5. '	base' → logprob: -18.37505531311035
    6. ';base' → logprob: -19.75005531311035
    7. '.base' → logprob: -20.12505531311035
    8. '/base' → logprob: -20.62505531311035
    9. '
' → logprob: -20.75005531311035
    10. 'bases' → logprob: -21.25005531311035

Token 737: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -3.8889261304575484e-06
    2. ' base' → logprob: -12.500003814697266
    3. '(base' → logprob: -17.125003814697266
    4. '	base' → logprob: -21.250003814697266
    5. 'bases' → logprob: -22.625003814697266
    6. 'basis' → logprob: -23.000003814697266
    7. '_base' → logprob: -23.125003814697266
    8. '.base' → logprob: -23.250003814697266
    9. 'baseline' → logprob: -23.250003814697266
    10. ' ' → logprob: -23.625003814697266

Token 738: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931961178779602
    2. ')
' → logprob: -0.6931961178779602
    3. '       ' → logprob: -10.943196296691895
    4. ')

' → logprob: -11.193196296691895
    5. '   ' → logprob: -12.068196296691895
    6. ')
' → logprob: -12.318196296691895
    7. ')return' → logprob: -13.193196296691895
    8. ',' → logprob: -13.318196296691895
    9. ' )
' → logprob: -13.943196296691895
    10. ')p' → logprob: -14.193196296691895

Token 739: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01821877807378769
    2. 'k' → logprob: -4.018218994140625
    3. ' k' → logprob: -10.018218994140625
    4. '   ' → logprob: -11.018218994140625
    5. ',k' → logprob: -12.768218994140625
    6. '           ' → logprob: -13.268218994140625
    7. '	k' → logprob: -13.643218994140625
    8. '{k' → logprob: -14.768218994140625
    9. '```' → logprob: -14.893218994140625
    10. '<|end|>' → logprob: -15.143218994140625

Token 740: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -9.13388703338569e-06
    2. ' k' → logprob: -11.750009536743164
    3. '       ' → logprob: -13.750009536743164
    4. '```' → logprob: -16.250009536743164
    5. '   ' → logprob: -17.625009536743164
    6. '	k' → logprob: -17.750009536743164
    7. '``' → logprob: -18.250009536743164
    8. '           ' → logprob: -19.875009536743164
    9. '    ' → logprob: -20.000009536743164
    10. ',k' → logprob: -20.000009536743164

Token 741: '>>' (ID: 3920)
  Prédit: '>>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.0008460793760605156
    2. '//=' → logprob: -7.250845909118652
    3. ' >>=' → logprob: -9.750845909118652
    4. '=' → logprob: -9.750845909118652
    5. '=k' → logprob: -11.000845909118652
    6. '>>>' → logprob: -13.750845909118652
    7. 'k' → logprob: -14.000845909118652
    8. '/=' → logprob: -14.875845909118652
    9. '```' → logprob: -15.625845909118652
    10. ',k' → logprob: -15.875845909118652

Token 742: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.0
    3. '>=' → logprob: -19.125
    4. '=
' → logprob: -21.25
    5. '=

' → logprob: -21.375
    6. '==' → logprob: -21.875
    7. '=_' → logprob: -22.625
    8. '=k' → logprob: -22.75
    9. '=-' → logprob: -23.0
    10. '=.' → logprob: -23.125

Token 743: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '```' → logprob: -19.625
    4. '=' → logprob: -20.375
    5. '   ' → logprob: -21.125
    6. '0' → logprob: -22.25
    7. '１' → logprob: -22.25
    8. '>' → logprob: -22.625
    9. '01' → logprob: -23.625
    10. '۱' → logprob: -23.75

Token 744: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009267112240195274
    2. 'return' → logprob: -4.884267330169678
    3. '<|end|>' → logprob: -7.384267330169678
    4. ' return' → logprob: -7.509267330169678
    5. '
' → logprob: -8.75926685333252
    6. '       ' → logprob: -9.88426685333252
    7. ':return' → logprob: -10.00926685333252
    8. '[' → logprob: -10.00926685333252
    9. '    
' → logprob: -10.38426685333252
    10. '	return' → logprob: -10.50926685333252

Token 745: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07264485955238342
    2. 'return' → logprob: -2.9476449489593506
    3. ' return' → logprob: -4.0726447105407715
    4. ' ' → logprob: -8.94764518737793
    5. '	return' → logprob: -9.07264518737793
    6. '<|end|>' → logprob: -9.44764518737793
    7. '[' → logprob: -9.82264518737793
    8. '  ' → logprob: -9.94764518737793
    9. '       ' → logprob: -10.57264518737793
    10. ':return' → logprob: -10.69764518737793

Token 746: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009813627693802118
    2. ' return' → logprob: -7.000981330871582
    3. '   ' → logprob: -9.625981330871582
    4. ' ' → logprob: -13.250981330871582
    5. '	return' → logprob: -13.500981330871582
    6. '0' → logprob: -15.625981330871582
    7. '  ' → logprob: -15.625981330871582
    8. 'def' → logprob: -16.1259822845459
    9. '
' → logprob: -16.3759822845459
    10. 'eturn' → logprob: -16.5009822845459

Token 747: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -3.128163257315464e-07
    2. ' res' → logprob: -15.125
    3. '(res' → logprob: -21.625
    4. 'pow' → logprob: -21.625
    5. 'list' → logprob: -22.75
    6. '[' → logprob: -23.125
    7. '	res' → logprob: -23.125
    8. '
' → logprob: -24.0
    9. '$res' → logprob: -24.0
    10. 'ret' → logprob: -24.125

Token 748: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08712969720363617
    2. 'ast' → logprob: -3.462129592895508
    3. 'exp' → logprob: -3.962129592895508
    4. 'root' → logprob: -4.212129592895508
    5. 'expr' → logprob: -4.962129592895508
    6. 'parsed' → logprob: -5.837129592895508
    7. 'tree' → logprob: -6.087129592895508
    8. 'node' → logprob: -6.587129592895508
    9. 'p' → logprob: -7.337129592895508
    10. '(ast' → logprob: -7.712129592895508

Token 749: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020116113126277924
    2. 'result' → logprob: -4.270116329193115
    3. 'res' → logprob: -6.395116329193115
    4. '#' → logprob: -6.770116329193115
    5. 'expr' → logprob: -7.020116329193115
    6. 'exp' → logprob: -7.645116329193115
    7. 'expression' → logprob: -7.770116329193115
    8. '```' → logprob: -8.645115852355957
    9. '
' → logprob: -9.020115852355957
    10. 'stack' → logprob: -9.145115852355957

Token 750: ' eval' (ID: 29383)
  Prédit: 'apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apply' → logprob: -0.200050950050354
    2. 'compose' → logprob: -2.2000508308410645
    3. 'main' → logprob: -2.8250508308410645
    4. 'perm' → logprob: -5.4500508308410645
    5. 'parse' → logprob: -6.3250508308410645
    6. ' apply' → logprob: -6.9500508308410645
    7. 'combine' → logprob: -7.0750508308410645
    8. 'invert' → logprob: -7.0750508308410645
    9. 'identity' → logprob: -7.4500508308410645
    10. ' main' → logprob: -7.8250508308410645

Token 751: '_exp' (ID: 30306)
  Prédit: '_expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expression' → logprob: -0.20135143399238586
    2. '_expr' → logprob: -2.2013514041900635
    3. '(expr' → logprob: -3.5763514041900635
    4. '(expression' → logprob: -4.076351642608643
    5. '_exp' → logprob: -4.576351642608643
    6. '(node' → logprob: -4.826351642608643
    7. '(exp' → logprob: -5.451351642608643
    8. 'exp' → logprob: -6.076351642608643
    9. 'expr' → logprob: -7.201351642608643
    10. 'expression' → logprob: -7.701351642608643

Token 752: '(exp' (ID: 51367)
  Prédit: '(exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(exp' → logprob: -0.4199539124965668
    2. '(node' → logprob: -2.1699538230895996
    3. 'def' → logprob: -2.6699538230895996
    4. '(expr' → logprob: -2.7949538230895996
    5. '(expression' → logprob: -3.5449538230895996
    6. 'exp' → logprob: -4.0449538230896
    7. '(s' → logprob: -4.4199538230896
    8. '_exp' → logprob: -5.0449538230896
    9. '(def' → logprob: -5.1699538230896
    10. '('' → logprob: -5.2949538230896

Token 753: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1440732330083847
    2. '):' → logprob: -2.019073247909546
    3. '(exp' → logprob: -7.019073009490967
    4. '):

' → logprob: -8.769073486328125
    5. ')' → logprob: -9.019073486328125
    6. ',' → logprob: -9.519073486328125
    7. '   ' → logprob: -10.019073486328125
    8. '):
' → logprob: -10.019073486328125
    9. '
' → logprob: -10.894073486328125
    10. 'exp' → logprob: -11.144073486328125

Token 754: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.3557529857498594e-05
    2. '```' → logprob: -11.12502384185791
    3. '	if' → logprob: -13.00002384185791
    4. 'if' → logprob: -13.25002384185791
    5. '       ' → logprob: -13.25002384185791
    6. ' if' → logprob: -14.12502384185791
    7. '   ' → logprob: -14.50002384185791
    8. 'token' → logprob: -15.50002384185791
    9. '    
' → logprob: -15.62502384185791
    10. '<|end|>' → logprob: -15.62502384185791

Token 755: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013380973832681775
    2. 'if' (adapté à ' if') → logprob: -7.251338005065918
    3. 't' → logprob: -8.126338005065918
    4. ' if' → logprob: -8.501338005065918
    5. 'type' → logprob: -9.376338005065918
    6. '	if' → logprob: -10.501338005065918
    7. '       ' → logprob: -12.001338005065918
    8. 'typ' → logprob: -13.626338005065918
    9. ' t' → logprob: -13.751338005065918
    10. ' ' → logprob: -13.751338005065918

Token 756: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.00017112065688706934
    2. ' exp' → logprob: -8.750170707702637
    3. '   ' → logprob: -11.750170707702637
    4. ' isinstance' → logprob: -13.125170707702637
    5. '  ' → logprob: -13.875170707702637
    6. ' ' → logprob: -14.250170707702637
    7. 'type' → logprob: -14.500170707702637
    8. '    ' → logprob: -14.625170707702637
    9. 'is' → logprob: -16.500171661376953
    10. 'len' → logprob: -16.625171661376953

Token 757: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004225847311317921
    2. '==' → logprob: -5.504225730895996
    3. ' ==' → logprob: -9.379225730895996
    4. '=='' → logprob: -10.754225730895996
    5. '==(' → logprob: -10.754225730895996
    6. '=' → logprob: -11.879225730895996
    7. '   ' → logprob: -13.129225730895996
    8. '==
' → logprob: -13.629225730895996
    9. '===' → logprob: -13.754225730895996
    10. '=[' → logprob: -14.004225730895996

Token 758: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. '1' → logprob: -10.875040054321289
    3. ' ' → logprob: -11.625040054321289
    4. '[' → logprob: -12.500040054321289
    5. '==' → logprob: -12.500040054321289
    6. '   ' → logprob: -12.875040054321289
    7. '=' → logprob: -14.125040054321289
    8. '#' → logprob: -14.500040054321289
    9. ':' → logprob: -15.500040054321289
    10. ' ==' → logprob: -15.625040054321289

Token 759: ']=='' (ID: 71177)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.49288737773895264
    2. '=='' → logprob: -0.9928873777389526
    3. ' ==' → logprob: -4.242887496948242
    4. ']==' → logprob: -6.367887496948242
    5. ']=='' → logprob: -6.492887496948242
    6. '']=='' → logprob: -8.242887496948242
    7. '==='' → logprob: -8.742887496948242
    8. ')==' → logprob: -8.867887496948242
    9. '=="' → logprob: -8.867887496948242
    10. ')=='' → logprob: -9.617887496948242

Token 760: 'part' (ID: 5815)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3139149248600006
    2. 'part' → logprob: -1.3139148950576782
    3. 'repeat' → logprob: -7.938914775848389
    4. ''re' → logprob: -8.688915252685547
    5. ' part' → logprob: -10.063915252685547
    6. '"' → logprob: -10.313915252685547
    7. 'seq' → logprob: -10.813915252685547
    8. ''s' → logprob: -11.438915252685547
    9. '`' → logprob: -11.563915252685547
    10. 'parts' → logprob: -12.813915252685547

Token 761: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6290746927261353
    2. '':
' → logprob: -2.0040745735168457
    3. '       ' → logprob: -2.1290745735168457
    4. '   ' → logprob: -2.1290745735168457
    5. ':' → logprob: -2.7540745735168457
    6. '':' → logprob: -3.7540745735168457
    7. '):
' → logprob: -5.504074573516846
    8. ''):
' → logprob: -6.754074573516846
    9. ''' → logprob: -7.754074573516846
    10. ',' → logprob: -7.754074573516846

Token 762: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23609372973442078
    2. '   ' → logprob: -1.8610937595367432
    3. 'return' → logprob: -3.111093759536743
    4. 'parts' → logprob: -4.861093521118164
    5. ' return' → logprob: -7.111093521118164
    6. 'tokens' → logprob: -8.111093521118164
    7. '```' → logprob: -8.361093521118164
    8. ':
' → logprob: -8.611093521118164
    9. 'part' → logprob: -8.611093521118164
    10. ' parts' → logprob: -8.861093521118164

Token 763: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.015757011249661446
    2. '   ' → logprob: -4.515757083892822
    3. '       ' → logprob: -5.890757083892822
    4. ' return' → logprob: -6.265757083892822
    5. '	return' → logprob: -10.515756607055664
    6. 'parts' → logprob: -13.390756607055664
    7. '{return' → logprob: -13.515756607055664
    8. ')return' → logprob: -13.640756607055664
    9. '
' → logprob: -15.015756607055664
    10. '           ' → logprob: -15.265756607055664

Token 764: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -1.1637164789135568e-05
    2. ' parts' → logprob: -11.375011444091797
    3. '(parts' → logprob: -17.375011444091797
    4. '   ' → logprob: -18.250011444091797
    5. 'pieces' → logprob: -19.375011444091797
    6. 'part' → logprob: -20.000011444091797
    7. 'Parts' → logprob: -20.125011444091797
    8. '.parts' → logprob: -20.625011444091797
    9. 'points' → logprob: -21.875011444091797
    10. ' ' → logprob: -22.000011444091797

Token 765: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.392202976712724e-06
    2. 'exp' → logprob: -12.000006675720215
    3. '(exp' → logprob: -16.0000057220459
    4. ' [' → logprob: -18.0000057220459
    5. '```' → logprob: -18.3750057220459
    6. '[[' → logprob: -19.6250057220459
    7. '[
' → logprob: -19.7500057220459
    8. '
' → logprob: -19.7500057220459
    9. '[e' → logprob: -19.8750057220459
    10. '.exp' → logprob: -20.0000057220459

Token 766: 'exp' (ID: 8067)
  Prédit: 'exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -4.246537173457909e-06
    2. '[' → logprob: -13.125003814697266
    3. ' exp' → logprob: -13.250003814697266
    4. '(exp' → logprob: -14.875003814697266
    5. ''exp' → logprob: -17.500003814697266
    6. '][' → logprob: -17.625003814697266
    7. '   ' → logprob: -17.625003814697266
    8. '.exp' → logprob: -18.000003814697266
    9. ' ' → logprob: -18.125003814697266
    10. '_exp' → logprob: -18.375003814697266

Token 767: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008174888207577169
    2. '1' → logprob: -7.12581729888916
    3. '][' → logprob: -11.62581729888916
    4. ']' → logprob: -13.00081729888916
    5. '2' → logprob: -14.75081729888916
    6. '
' → logprob: -15.62581729888916
    7. '```' → logprob: -15.62581729888916
    8. ' [' → logprob: -15.87581729888916
    9. '(' → logprob: -16.000818252563477
    10. 's' → logprob: -16.250818252563477

Token 768: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.225939872208983e-05
    2. '2' → logprob: -10.500032424926758
    3. '-' → logprob: -13.375032424926758
    4. '```' → logprob: -13.875032424926758
    5. '   ' → logprob: -14.625032424926758
    6. '[' → logprob: -14.937532424926758
    7. ']' → logprob: -15.062532424926758
    8. '``' → logprob: -15.687532424926758
    9. ' ' → logprob: -15.812532424926758
    10. '][' → logprob: -15.812532424926758

Token 769: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05537934973835945
    2. ']]' → logprob: -2.9303793907165527
    3. ']][' → logprob: -8.930378913879395
    4. '][' → logprob: -9.055378913879395
    5. '[' → logprob: -9.680378913879395
    6. ')]' → logprob: -10.055378913879395
    7. ']]]' → logprob: -10.055378913879395
    8. ' ]' → logprob: -10.555378913879395
    9. ' ]]' → logprob: -10.930378913879395
    10. '()]' → logprob: -11.430378913879395

Token 770: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.6900250911712646
    2. '   ' → logprob: -0.8150250911712646
    3. '```' → logprob: -3.8150250911712646
    4. 'return' → logprob: -3.8150250911712646
    5. 'if' → logprob: -4.815025329589844
    6. '
' → logprob: -6.190025329589844
    7. ' elif' → logprob: -7.815025329589844
    8. '[' → logprob: -7.815025329589844
    9. ')' → logprob: -9.315025329589844
    10. '`' → logprob: -9.440025329589844

Token 771: ' if' (ID: 538)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.06206078827381134
    2. 'if' (adapté à ' if') → logprob: -2.812060832977295
    3. '   ' → logprob: -9.812060356140137
    4. ' elif' → logprob: -11.062060356140137
    5. '```' → logprob: -11.437060356140137
    6. ' if' → logprob: -11.937060356140137
    7. '
' → logprob: -12.812060356140137
    8. 'return' → logprob: -13.937060356140137
    9. '[' → logprob: -14.437060356140137
    10. 'def' → logprob: -15.187060356140137

Token 772: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.00043102685594931245
    2. ' exp' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.875431060791016
    4. ' ' → logprob: -16.000431060791016
    5. 'len' → logprob: -16.750431060791016
    6. '(exp' → logprob: -17.125431060791016
    7. '[' → logprob: -17.250431060791016
    8. '  ' → logprob: -18.500431060791016
    9. '    ' → logprob: -18.750431060791016
    10. ''exp' → logprob: -18.875431060791016

Token 773: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002441741817165166
    2. '==' → logprob: -8.375244140625
    3. '=='' → logprob: -11.375244140625
    4. 'and' → logprob: -14.875244140625
    5. 'def' → logprob: -14.875244140625
    6. ' ==' → logprob: -15.000244140625
    7. '0' → logprob: -15.250244140625
    8. 'elif' → logprob: -15.250244140625
    9. '   ' → logprob: -15.500244140625
    10. '=' → logprob: -15.875244140625

Token 774: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005762049462646246
    2. ''' → logprob: -5.255762100219727
    3. '0' → logprob: -7.630762100219727
    4. ''s' → logprob: -10.505762100219727
    5. '[' → logprob: -11.255762100219727
    6. ''t' → logprob: -14.380762100219727
    7. '"' → logprob: -14.505762100219727
    8. '='' → logprob: -16.005762100219727
    9. '==' → logprob: -16.005762100219727
    10. '=='' → logprob: -16.005762100219727

Token 775: ']=='' (ID: 71177)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.009653148241341114
    2. ']=='' → logprob: -4.884653091430664
    3. '==' → logprob: -6.259653091430664
    4. ']==' → logprob: -10.134653091430664
    5. '[' → logprob: -10.259653091430664
    6. '']=='' → logprob: -10.634653091430664
    7. ' ==' → logprob: -11.259653091430664
    8. ')=='' → logprob: -12.259653091430664
    9. '==='' → logprob: -12.259653091430664
    10. '==
' → logprob: -12.384653091430664

Token 776: 'seq' (ID: 27794)
  Prédit: 'seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.062007904052734375
    2. ''' → logprob: -2.8120079040527344
    3. 'repeat' → logprob: -10.812007904052734
    4. ''s' → logprob: -11.937007904052734
    5. 'sequence' → logprob: -12.437007904052734
    6. '`' → logprob: -12.562007904052734
    7. '"' → logprob: -12.687007904052734
    8. ''re' → logprob: -13.812007904052734
    9. '(seq' → logprob: -14.562007904052734
    10. 'sequ' → logprob: -14.937007904052734

Token 777: '':
' (ID: 7669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9925858974456787
    2. '       ' → logprob: -1.2425858974456787
    3. '':
' → logprob: -1.6175858974456787
    4. '':' → logprob: -3.1175858974456787
    5. ':
' → logprob: -3.4925858974456787
    6. '',' → logprob: -3.6175858974456787
    7. ':' → logprob: -3.9925858974456787
    8. ''' → logprob: -4.742586135864258
    9. '']:
' → logprob: -5.867586135864258
    10. ''):
' → logprob: -6.117586135864258

Token 778: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39592254161834717
    2. '   ' → logprob: -1.6459225416183472
    3. 'return' → logprob: -2.8959226608276367
    4. ':' → logprob: -3.1459226608276367
    5. 'def' → logprob: -4.645922660827637
    6. ' return' → logprob: -5.145922660827637
    7. ' =' → logprob: -5.395922660827637
    8. ':return' → logprob: -5.770922660827637
    9. '=' → logprob: -6.270922660827637
    10. ',' → logprob: -6.520922660827637

Token 779: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0995430052280426
    2. 'p' → logprob: -2.7245430946350098
    3. '   ' → logprob: -4.47454309463501
    4. 'perm' → logprob: -5.22454309463501
    5. 'result' → logprob: -5.47454309463501
    6. 'cur' → logprob: -5.84954309463501
    7. 'curr' → logprob: -6.22454309463501
    8. '       ' → logprob: -6.97454309463501
    9. 'seq' → logprob: -7.72454309463501
    10. 'r' → logprob: -7.84954309463501

Token 780: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31799423694610596
    2. '=[' → logprob: -1.317994236946106
    3. '=['' → logprob: -5.942994117736816
    4. '=res' → logprob: -7.067994117736816
    5. '=list' → logprob: -7.192994117736816
    6. '=('' → logprob: -8.442994117736816
    7. '=[]' → logprob: -8.942994117736816
    8. ' =' → logprob: -10.317994117736816
    9. '=[]
' → logprob: -10.442994117736816
    10. '=None' → logprob: -10.942994117736816

Token 781: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.07889331132173538
    2. 'range' → logprob: -2.5788934230804443
    3. '=' → logprob: -13.078893661499023
    4. ' range' → logprob: -14.203893661499023
    5. '	range' → logprob: -14.453893661499023
    6. '   ' → logprob: -16.453893661499023
    7. '_range' → logprob: -17.203893661499023
    8. '.range' → logprob: -17.453893661499023
    9. '
' → logprob: -17.703893661499023
    10. ' =' → logprob: -18.453893661499023

Token 782: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.07889033854007721
    2. 'N' → logprob: -2.578890323638916
    3. '[N' → logprob: -16.203889846801758
    4. ' N' → logprob: -16.453889846801758
    5. ',N' → logprob: -16.578889846801758
    6. '```' → logprob: -16.703889846801758
    7. '(' → logprob: -16.828889846801758
    8. 'len' → logprob: -16.953889846801758
    9. '	N' → logprob: -17.203889846801758
    10. ')' → logprob: -17.578889846801758

Token 783: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.22500157356262207
    2. ')
' → logprob: -2.225001573562622
    3. '))' → logprob: -2.600001573562622
    4. ')' → logprob: -3.975001573562622
    5. '(N' → logprob: -8.225001335144043
    6. 'N' → logprob: -10.600001335144043
    7. '))
' → logprob: -11.475001335144043
    8. '])
' → logprob: -11.475001335144043
    9. '))

' → logprob: -11.975001335144043
    10. ')
' → logprob: -11.975001335144043

Token 784: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5414414405822754
    2. '       ' → logprob: -0.9164414405822754
    3. ' for' → logprob: -4.041441440582275
    4. '   ' → logprob: -8.166440963745117
    5. 'current' → logprob: -9.291440963745117
    6. ',' → logprob: -9.666440963745117
    7. '	for' → logprob: -10.541440963745117
    8. '[' → logprob: -10.666440963745117
    9. '
' → logprob: -11.291440963745117
    10. '        
' → logprob: -11.291440963745117

Token 785: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005688794772140682
    2. ' for' → logprob: -8.000569343566895
    3. '       ' → logprob: -8.375569343566895
    4. '   ' → logprob: -13.375569343566895
    5. '	for' → logprob: -13.750569343566895
    6. '```' → logprob: -15.500569343566895
    7. ' ' → logprob: -18.125568389892578
    8. 'from' → logprob: -18.125568389892578
    9. '``' → logprob: -18.125568389892578
    10. '        
' → logprob: -18.500568389892578

Token 786: ' sub' (ID: 1543)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.28060808777809143
    2. 'sub' → logprob: -1.905608057975769
    3. 'e' → logprob: -2.6556081771850586
    4. 'part' → logprob: -4.280608177185059
    5. ' sub' → logprob: -5.530608177185059
    6. ' part' → logprob: -6.530608177185059
    7. 'item' → logprob: -6.655608177185059
    8. 't' → logprob: -6.655608177185059
    9. ' term' → logprob: -7.030608177185059
    10. 'elem' → logprob: -7.030608177185059

Token 787: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.016465051099658012
    2. ' in' → logprob: -4.141465187072754
    3. '[' → logprob: -8.641465187072754
    4. '_idx' → logprob: -9.891465187072754
    5. 'i' → logprob: -10.391465187072754
    6. ':' → logprob: -10.641465187072754
    7. '_in' → logprob: -10.641465187072754
    8. '_' → logprob: -10.891465187072754
    9. '   ' → logprob: -11.391465187072754
    10. '=' → logprob: -11.391465187072754

Token 788: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.009463872760534286
    2. 'sub' → logprob: -4.759463787078857
    3. 'res' → logprob: -7.884463787078857
    4. '[' → logprob: -8.509464263916016
    5. '   ' → logprob: -9.509464263916016
    6. ' exp' → logprob: -9.509464263916016
    7. '(exp' → logprob: -10.509464263916016
    8. 'ex' → logprob: -10.884464263916016
    9. '('' → logprob: -11.259464263916016
    10. '(' → logprob: -11.259464263916016

Token 789: '[' (ID: 58)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4125771224498749
    2. ':' → logprob: -1.5375771522521973
    3. '[' → logprob: -2.2875771522521973
    4. '):
' → logprob: -4.287577152252197
    5. '):' → logprob: -5.662577152252197
    6. '       ' → logprob: -6.162577152252197
    7. '   ' → logprob: -7.287577152252197
    8. ')' → logprob: -7.787577152252197
    9. 'in' → logprob: -7.912577152252197
    10. '           ' → logprob: -8.287576675415039

Token 790: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008704868378117681
    2. '[' → logprob: -7.125870704650879
    3. 'sub' → logprob: -10.250870704650879
    4. '   ' → logprob: -11.375870704650879
    5. '2' → logprob: -12.813370704650879
    6. '(' → logprob: -12.813370704650879
    7. ' ' → logprob: -13.063370704650879
    8. '```' → logprob: -13.188370704650879
    9. ')' → logprob: -13.438370704650879
    10. '
' → logprob: -14.250870704650879

Token 791: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4648715853691101
    2. ':' → logprob: -1.8398716449737549
    3. ':
' → logprob: -1.8398716449737549
    4. '):' → logprob: -2.964871644973755
    5. '       ' → logprob: -6.714871406555176
    6. ']:
' → logprob: -7.464871406555176
    7. '():
' → logprob: -8.339871406555176
    8. ']:' → logprob: -8.339871406555176
    9. '   ' → logprob: -9.089871406555176
    10. '[' → logprob: -10.589871406555176

Token 792: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005742614157497883
    2. 'res' → logprob: -5.38074254989624
    3. ' res' → logprob: -7.13074254989624
    4. '	       ' → logprob: -9.005743026733398
    5. '<|end|>' → logprob: -10.005743026733398
    6. '```' → logprob: -10.630743026733398
    7. '          ' → logprob: -11.005743026733398
    8. '       ' → logprob: -11.255743026733398
    9. '<|end|>' → logprob: -11.255743026733398
    10. '            
' → logprob: -11.380743026733398

Token 793: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.35569140315055847
    2. '           ' → logprob: -1.7306914329528809
    3. 'sub' → logprob: -2.230691432952881
    4. ' res' → logprob: -4.605691432952881
    5. '               ' → logprob: -6.355691432952881
    6. 'tmp' → logprob: -6.855691432952881
    7. '       ' → logprob: -7.355691432952881
    8. 'temp' → logprob: -7.605691432952881
    9. ' sub' → logprob: -8.480690956115723
    10. 'submenu' → logprob: -9.230690956115723

Token 794: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0280383548888494e-06
    2. '=com' → logprob: -14.250000953674316
    3. ' =' → logprob: -15.875000953674316
    4. '=
' → logprob: -16.875001907348633
    5. '=

' → logprob: -17.625001907348633
    6. '=p' → logprob: -17.750001907348633
    7. '=create' → logprob: -18.250001907348633
    8. '=sub' → logprob: -18.875001907348633
    9. '=s' → logprob: -19.250001907348633
    10. '=c' → logprob: -19.375001907348633

Token 795: 'compose' (ID: 65322)
  Prédit: 'compose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compose' → logprob: -8.061054359131958e-06
    2. ' compose' → logprob: -11.750007629394531
    3. '.compose' → logprob: -16.12500762939453
    4. '   ' → logprob: -17.50000762939453
    5. '-compose' → logprob: -18.25000762939453
    6. 'combine' → logprob: -19.12500762939453
    7. '       ' → logprob: -19.12500762939453
    8. 'com' → logprob: -19.37500762939453
    9. '[' → logprob: -20.12500762939453
    10. 'composer' → logprob: -20.37500762939453

Token 796: '(eval' (ID: 126973)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.14631178975105286
    2. '(parts' → logprob: -2.0213117599487305
    3. 'res' → logprob: -5.7713117599487305
    4. 'parts' → logprob: -7.6463117599487305
    5. '(' → logprob: -10.52131175994873
    6. '(results' → logprob: -12.64631175994873
    7. '(part' → logprob: -13.89631175994873
    8. ' (' → logprob: -14.52131175994873
    9. ' parts' → logprob: -14.52131175994873
    10. ' res' → logprob: -14.64631175994873

Token 797: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.0015139080351218581
    2. 'exp' → logprob: -6.501513957977295
    3. '(sub' → logprob: -12.501513481140137
    4. '_sub' → logprob: -12.876513481140137
    5. '(exp' → logprob: -13.001513481140137
    6. 'sub' → logprob: -13.376513481140137
    7. '	exp' → logprob: -15.001513481140137
    8. '[sub' → logprob: -15.126513481140137
    9. ''exp' → logprob: -15.251513481140137
    10. 'Exp' → logprob: -15.501513481140137

Token 798: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.0006448837229982018
    2. 'sub' → logprob: -7.375644683837891
    3. 'parts' → logprob: -11.62564468383789
    4. '(parts' → logprob: -11.87564468383789
    5. '[sub' → logprob: -13.87564468383789
    6. ' (' → logprob: -14.62564468383789
    7. '
' → logprob: -15.37564468383789
    8. ' sub' → logprob: -15.62564468383789
    9. ',' → logprob: -15.75064468383789
    10. '(' → logprob: -15.87564468383789

Token 799: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22649866342544556
    2. ',res' → logprob: -1.6014986038208008
    3. '(parts' → logprob: -7.851498603820801
    4. '),' → logprob: -8.7264986038208
    5. ',)' → logprob: -8.9764986038208
    6. 'parts' → logprob: -9.2264986038208
    7. ',[' → logprob: -9.4764986038208
    8. ' ,' → logprob: -9.8514986038208
    9. '(res' → logprob: -9.9764986038208
    10. ',e' → logprob: -10.7264986038208

Token 800: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -9.088346359931165e-07
    2. ' res' → logprob: -14.000000953674316
    3. '
' → logprob: -19.125
    4. '(res' → logprob: -19.5
    5. '	res' → logprob: -20.625
    6. '$res' → logprob: -21.5
    7. '           ' → logprob: -21.875
    8. '[' → logprob: -22.25
    9. ',res' → logprob: -22.625
    10. '   ' → logprob: -22.875

Token 801: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07960495352745056
    2. ')
' → logprob: -2.5796048641204834
    3. '       ' → logprob: -7.8296051025390625
    4. ')return' → logprob: -8.079605102539062
    5. ')
' → logprob: -12.829605102539062
    6. ')

' → logprob: -13.579605102539062
    7. '   ' → logprob: -13.829605102539062
    8. ' )' → logprob: -14.079605102539062
    9. '           ' → logprob: -14.704605102539062
    10. ' )
' → logprob: -15.579605102539062

Token 802: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10104316473007202
    2. 'return' → logprob: -2.351043224334717
    3. ' return' → logprob: -7.851043224334717
    4. '   ' → logprob: -7.976043224334717
    5. '	return' → logprob: -9.976042747497559
    6. '	' → logprob: -10.226042747497559
    7. '	   ' → logprob: -12.851042747497559
    8. '```' → logprob: -12.851042747497559
    9. ':return' → logprob: -12.976042747497559
    10. '           ' → logprob: -12.976042747497559

Token 803: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -6.921253225300461e-05
    2. ' return' → logprob: -9.750069618225098
    3. '       ' → logprob: -11.750069618225098
    4. '   ' → logprob: -13.375069618225098
    5. '	return' → logprob: -13.500069618225098
    6. ' ' → logprob: -17.87506866455078
    7. 'eturn' → logprob: -18.12506866455078
    8. ':return' → logprob: -18.12506866455078
    9. '```' → logprob: -18.50006866455078
    10. '           ' → logprob: -18.75006866455078

Token 804: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2664456789934775e-06
    2. ' res' → logprob: -13.750000953674316
    3. 'compose' → logprob: -16.625001907348633
    4. '
' → logprob: -18.000001907348633
    5. '   ' → logprob: -18.125001907348633
    6. 'eval' → logprob: -19.125001907348633
    7. ' ' → logprob: -19.875001907348633
    8. 'return' → logprob: -20.250001907348633
    9. '	res' → logprob: -20.500001907348633
    10. '       ' → logprob: -20.625001907348633

Token 805: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01815837249159813
    2. 'if' → logprob: -4.018158435821533
    3. ' if' → logprob: -12.393157958984375
    4. 'elif' → logprob: -12.393157958984375
    5. '	if' → logprob: -16.268157958984375
    6. '
' → logprob: -17.018157958984375
    7. 'def' → logprob: -18.143157958984375
    8. '   ' → logprob: -18.393157958984375
    9. '```' → logprob: -19.393157958984375
    10. '    
' → logprob: -19.518157958984375

Token 806: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1269981414079666
    2. '   ' → logprob: -2.12699818611145
    3. ' if' → logprob: -9.876997947692871
    4. 'elif' → logprob: -11.251997947692871
    5. '```' → logprob: -12.876997947692871
    6. 'def' → logprob: -13.251997947692871
    7. '	if' → logprob: -13.501997947692871
    8. 'If' → logprob: -16.876998901367188
    9. '``' → logprob: -18.501998901367188
    10. '
' → logprob: -18.626998901367188

Token 807: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -6.623244553338736e-05
    2. '   ' → logprob: -10.250065803527832
    3. 'def' → logprob: -10.750065803527832
    4. ' if' → logprob: -12.250065803527832
    5. 'elif' → logprob: -12.375065803527832
    6. '```' → logprob: -15.875065803527832
    7. '	if' → logprob: -16.12506675720215
    8. ' ' → logprob: -18.25006675720215
    9. '``' → logprob: -19.75006675720215
    10. 'If' → logprob: -20.00006675720215

Token 808: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.12693661451339722
    2. ' exp' → logprob: -2.126936674118042
    3. '[' → logprob: -13.001936912536621
    4. '(exp' → logprob: -13.376936912536621
    5. '   ' → logprob: -13.501936912536621
    6. ''exp' → logprob: -13.626936912536621
    7. '_exp' → logprob: -14.126936912536621
    8. '.exp' → logprob: -14.376936912536621
    9. ' ' → logprob: -15.126936912536621
    10. '    ' → logprob: -15.751936912536621

Token 809: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.066919301403686e-05
    2. '==' → logprob: -9.500090599060059
    3. '=='' → logprob: -11.500090599060059
    4. '==(' → logprob: -13.375090599060059
    5. ' ==' → logprob: -13.625090599060059
    6. '=[' → logprob: -14.125090599060059
    7. '0' → logprob: -14.500090599060059
    8. '   ' → logprob: -14.750090599060059
    9. 'def' → logprob: -15.500090599060059
    10. '='' → logprob: -15.625090599060059

Token 810: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.21870575845241547
    2. '0' → logprob: -2.218705654144287
    3. '[' → logprob: -2.718705654144287
    4. ''re' → logprob: -3.968705654144287
    5. '1' → logprob: -6.218705654144287
    6. ''s' → logprob: -7.343705654144287
    7. ''r' → logprob: -10.468706130981445
    8. ''t' → logprob: -10.593706130981445
    9. ''[' → logprob: -10.593706130981445
    10. ' ' → logprob: -11.343706130981445

Token 811: ']=='' (ID: 71177)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.5196056962013245
    2. '[' → logprob: -1.2696056365966797
    3. '==' → logprob: -2.1446056365966797
    4. ']=='' → logprob: -5.14460563659668
    5. ']==' → logprob: -7.64460563659668
    6. ' ==' → logprob: -8.39460563659668
    7. '']=='' → logprob: -8.76960563659668
    8. ')=='' → logprob: -8.76960563659668
    9. '==='' → logprob: -9.14460563659668
    10. '='' → logprob: -9.39460563659668

Token 812: 'repeat' (ID: 63242)
  Prédit: ''re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''re' → logprob: -0.018159886822104454
    2. 'repeat' → logprob: -4.018159866333008
    3. '"' → logprob: -12.143159866333008
    4. 'Repeat' → logprob: -13.268159866333008
    5. ' repeat' → logprob: -13.643159866333008
    6. '`' → logprob: -13.893159866333008
    7. '_repeat' → logprob: -15.643159866333008
    8. ' ' → logprob: -15.643159866333008
    9. '   ' → logprob: -15.893159866333008
    10. 're' → logprob: -16.018159866333008

Token 813: '':
' (ID: 7669)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.16559837758541107
    2. '':
' → logprob: -2.1655983924865723
    3. ''' → logprob: -4.165598392486572
    4. '',
' → logprob: -5.290598392486572
    5. '',(' → logprob: -5.665598392486572
    6. '','' → logprob: -5.915598392486572
    7. '       ' → logprob: -6.290598392486572
    8. '':' → logprob: -6.415598392486572
    9. ''exp' → logprob: -6.415598392486572
    10. 'def' → logprob: -6.665598392486572

Token 814: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2587348222732544
    2. 'return' → logprob: -2.383734703063965
    3. ' k' → logprob: -3.258734703063965
    4. ' return' → logprob: -3.383734703063965
    5. 'k' → logprob: -3.758734703063965
    6. '(k' → logprob: -4.008734703063965
    7. '   ' → logprob: -4.258734703063965
    8. 'def' → logprob: -6.508734703063965
    9. 'n' → logprob: -6.758734703063965
    10. 'exp' → logprob: -7.258734703063965

Token 815: ' n' (ID: 297)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0022913292050361633
    2. 'k' → logprob: -7.127291202545166
    3. ' return' → logprob: -7.377291202545166
    4. '   ' → logprob: -7.627291202545166
    5. 'ret' → logprob: -9.127291679382324
    6. 'p' → logprob: -9.502291679382324
    7. 'res' → logprob: -9.627291679382324
    8. 'exp' → logprob: -9.752291679382324
    9. '       ' → logprob: -10.377291679382324
    10. 'result' → logprob: -11.502291679382324

Token 816: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6452454328536987
    2. ',k' → logprob: -1.1452454328536987
    3. '=' → logprob: -2.2702455520629883
    4. ',p' → logprob: -3.1452455520629883
    5. ',res' → logprob: -6.395245552062988
    6. 'k' → logprob: -6.395245552062988
    7. '=int' → logprob: -6.645245552062988
    8. ',n' → logprob: -6.895245552062988
    9. ',val' → logprob: -6.895245552062988
    10. '=k' → logprob: -7.270245552062988

Token 817: 'sub' (ID: 3834)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.04316749423742294
    2. 'k' → logprob: -3.2931675910949707
    3. 'e' → logprob: -5.668167591094971
    4. 'expr' → logprob: -6.918167591094971
    5. 'sub' → logprob: -7.668167591094971
    6. 'body' → logprob: -9.168167114257812
    7. 'p' → logprob: -10.168167114257812
    8. 'ex' → logprob: -10.543167114257812
    9. ' exp' → logprob: -11.918167114257812
    10. 'r' → logprob: -12.293167114257812

Token 818: '=' (ID: 28)
  Prédit: '=sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sub' → logprob: -0.358256459236145
    2. '=' → logprob: -1.358256459236145
    3. ',' → logprob: -3.2332563400268555
    4. ',n' → logprob: -5.7332563400268555
    5. ',res' → logprob: -7.6082563400268555
    6. 'sub' → logprob: -8.233256340026855
    7. ',k' → logprob: -8.733256340026855
    8. ',s' → logprob: -9.108256340026855
    9. ',p' → logprob: -9.608256340026855
    10. '=n' → logprob: -10.733256340026855

Token 819: 'exp' (ID: 8067)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.01816035620868206
    2. 'exp' → logprob: -4.018160343170166
    3. ' sub' → logprob: -11.893160820007324
    4. '[sub' → logprob: -13.518160820007324
    5. 'n' → logprob: -14.018160820007324
    6. '=sub' → logprob: -14.268160820007324
    7. '	sub' → logprob: -15.643160820007324
    8. '(sub' → logprob: -15.768160820007324
    9. '_exp' → logprob: -15.768160820007324
    10. ' exp' → logprob: -16.518159866333008

Token 820: '[' (ID: 58)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3673907220363617
    2. '=sub' → logprob: -1.617390751838684
    3. ',' → logprob: -2.3673906326293945
    4. ',res' → logprob: -5.4923906326293945
    5. ',e' → logprob: -5.6173906326293945
    6. 'sub' → logprob: -6.3673906326293945
    7. 'exp' → logprob: -6.8673906326293945
    8. ',p' → logprob: -7.2423906326293945
    9. ',n' → logprob: -7.3673906326293945
    10. '=parse' → logprob: -7.3673906326293945

Token 821: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001867326645879075
    2. '2' → logprob: -8.625186920166016
    3. '   ' → logprob: -13.125186920166016
    4. ' ' → logprob: -13.250186920166016
    5. '
' → logprob: -13.625186920166016
    6. '(' → logprob: -14.750186920166016
    7. '[' → logprob: -14.750186920166016
    8. '```' → logprob: -15.375186920166016
    9. ']' → logprob: -15.625186920166016
    10. '       ' → logprob: -16.125186920166016

Token 822: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003475339850410819
    2. ',res' → logprob: -5.753475189208984
    3. ',val' → logprob: -9.503475189208984
    4. ',p' → logprob: -9.878475189208984
    5. 'exp' → logprob: -10.628475189208984
    6. ',
' → logprob: -10.753475189208984
    7. ',s' → logprob: -10.878475189208984
    8. ',result' → logprob: -11.253475189208984
    9. ' ,' → logprob: -11.503475189208984
    10. '=sub' → logprob: -11.628475189208984

Token 823: 'exp' (ID: 8067)
  Prédit: 'exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.023306624963879585
    2. 'eval' → logprob: -4.023306846618652
    3. 'sub' → logprob: -5.273306846618652
    4. ' exp' → logprob: -11.648306846618652
    5. '   ' → logprob: -12.648306846618652
    6. 'expr' → logprob: -13.773306846618652
    7. ' eval' → logprob: -13.898306846618652
    8. ' sub' → logprob: -14.523306846618652
    9. 'expand' → logprob: -14.773306846618652
    10. '_exp' → logprob: -15.648306846618652

Token 824: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01770593598484993
    2. '2' → logprob: -4.767705917358398
    3. 'sub' → logprob: -4.767705917358398
    4. 'exp' → logprob: -8.392705917358398
    5. '[sub' → logprob: -9.517705917358398
    6. '1' → logprob: -9.767705917358398
    7. 'def' → logprob: -10.142705917358398
    8. '(sub' → logprob: -10.517705917358398
    9. 's' → logprob: -10.517705917358398
    10. '(' → logprob: -11.267705917358398

Token 825: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.953082341467962e-05
    2. 'sub' → logprob: -10.250039100646973
    3. '1' → logprob: -12.875039100646973
    4. '[' → logprob: -14.375039100646973
    5. ' ' → logprob: -14.750039100646973
    6. '-' → logprob: -15.625039100646973
    7. '   ' → logprob: -16.12504005432129
    8. 'exp' → logprob: -16.12504005432129
    9. '```' → logprob: -16.75004005432129
    10. ' sub' → logprob: -16.87504005432129

Token 826: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.009622922167181969
    2. '   ' → logprob: -5.634623050689697
    3. '       ' → logprob: -5.884623050689697
    4. ')' → logprob: -6.384623050689697
    5. ']
' → logprob: -7.634623050689697
    6. 'p' → logprob: -7.884623050689697
    7. '
' → logprob: -8.634622573852539
    8. ')p' → logprob: -8.759622573852539
    9. '):
' → logprob: -9.134622573852539
    10. ')
' → logprob: -9.759622573852539

Token 827: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2281770259141922
    2. 'return' → logprob: -1.7281770706176758
    3. '   ' → logprob: -3.853177070617676
    4. ' return' → logprob: -6.103177070617676
    5. '
' → logprob: -6.728177070617676
    6. 'res' → logprob: -6.853177070617676
    7. 'sub' → logprob: -8.603177070617676
    8. 'ret' → logprob: -8.853177070617676
    9. '
' → logprob: -9.228177070617676
    10. 'result' → logprob: -9.603177070617676

Token 828: ' p' (ID: 275)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5985095500946045
    2. 'sub' → logprob: -1.0985095500946045
    3. 'p' (adapté à ' p') → logprob: -2.2235095500946045
    4. 'res' → logprob: -5.098509788513184
    5. 'base' → logprob: -6.848509788513184
    6. 'r' → logprob: -7.223509788513184
    7. 'perm' → logprob: -8.348509788513184
    8. 'subs' → logprob: -8.723509788513184
    9. '   ' → logprob: -8.973509788513184
    10. 'body' → logprob: -9.223509788513184

Token 829: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02347501739859581
    2. '=sub' → logprob: -3.773474931716919
    3. '=p' → logprob: -9.14847469329834
    4. '=e' → logprob: -9.89847469329834
    5. ' =' → logprob: -10.64847469329834
    6. '_sub' → logprob: -10.89847469329834
    7. 'pow' → logprob: -11.39847469329834
    8. '=_' → logprob: -12.02347469329834
    9. 'sub' → logprob: -12.27347469329834
    10. '_pow' → logprob: -12.27347469329834

Token 830: 'eval' (ID: 37679)
  Prédit: 'eval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.00016861737822182477
    2. 'pow' → logprob: -8.750168800354004
    3. ' eval' → logprob: -11.750168800354004
    4. '(eval' → logprob: -14.000168800354004
    5. '   ' → logprob: -14.875168800354004
    6. 'evaluate' → logprob: -15.000168800354004
    7. 'parts' → logprob: -15.750168800354004
    8. 'ev' → logprob: -16.750167846679688
    9. 'exp' → logprob: -17.000167846679688
    10. 'expr' → logprob: -17.250167846679688

Token 831: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.0019297054968774319
    2. 'exp' → logprob: -6.251929759979248
    3. 'sub' → logprob: -14.62692928314209
    4. '_sub' → logprob: -15.12692928314209
    5. 'Exp' → logprob: -15.75192928314209
    6. '(exp' → logprob: -16.376930236816406
    7. ''exp' → logprob: -17.251930236816406
    8. '-exp' → logprob: -17.376930236816406
    9. '(sub' → logprob: -17.626930236816406
    10. '_eval' → logprob: -17.751930236816406

Token 832: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -1.3425219549390022e-05
    2. 'sub' → logprob: -11.25001335144043
    3. '[sub' → logprob: -15.00001335144043
    4. '=sub' → logprob: -17.62501335144043
    5. '(' → logprob: -19.87501335144043
    6. ' sub' → logprob: -20.37501335144043
    7. '{sub' → logprob: -20.87501335144043
    8. '	sub' → logprob: -21.00001335144043
    9. ' (' → logprob: -21.00001335144043
    10. '(substr' → logprob: -21.12501335144043

Token 833: ')
' (ID: 446)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.005412808153778315
    2. ',' → logprob: -5.255412578582764
    3. ',k' → logprob: -9.380413055419922
    4. ',p' → logprob: -10.005413055419922
    5. ')
' → logprob: -10.380413055419922
    6. ')' → logprob: -11.380413055419922
    7. ')n' → logprob: -12.130413055419922
    8. ' ,' → logprob: -14.880413055419922
    9. 'n' → logprob: -15.380413055419922
    10. '),' → logprob: -15.505413055419922

Token 834: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06334859132766724
    2. '       ' → logprob: -2.8133485317230225
    3. ' return' → logprob: -6.688348770141602
    4. '   ' → logprob: -9.063348770141602
    5. '```' → logprob: -11.688348770141602
    6. '	return' → logprob: -12.438348770141602
    7. 'result' → logprob: -13.188348770141602
    8. 'p' → logprob: -13.938348770141602
    9. '{return' → logprob: -14.188348770141602
    10. '
' → logprob: -14.313348770141602

Token 835: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.1279553291387856e-05
    2. '       ' → logprob: -11.500011444091797
    3. ' return' → logprob: -13.750011444091797
    4. 'p' → logprob: -16.875011444091797
    5. 'res' → logprob: -18.125011444091797
    6. '	return' → logprob: -18.250011444091797
    7. 'result' → logprob: -18.625011444091797
    8. '```' → logprob: -19.500011444091797
    9. 'ret' → logprob: -19.750011444091797
    10. '{return' → logprob: -19.875011444091797

Token 836: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -2.339278580620885e-06
    2. ' pow' → logprob: -13.000001907348633
    3. '(pow' → logprob: -20.625001907348633
    4. 'p' → logprob: -22.375001907348633
    5. '_pow' → logprob: -23.000001907348633
    6. '.pow' → logprob: -23.000001907348633
    7. 'Pow' → logprob: -23.125001907348633
    8. 'pw' → logprob: -23.375001907348633
    9. '   ' → logprob: -23.625001907348633
    10. 'pot' → logprob: -24.250001907348633

Token 837: '_perm' (ID: 128866)
  Prédit: '_perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_perm' → logprob: -0.0005199087900109589
    2. '_pow' → logprob: -7.750519752502441
    3. 'perm' → logprob: -9.500519752502441
    4. '(p' → logprob: -11.875519752502441
    5. 'p' → logprob: -12.250519752502441
    6. '_perf' → logprob: -14.000519752502441
    7. 'pow' → logprob: -14.500519752502441
    8. '(' → logprob: -14.875519752502441
    9. '```' → logprob: -15.750519752502441
    10. '(pow' → logprob: -16.375520706176758

Token 838: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -12.75000286102295
    3. 'p' → logprob: -16.125003814697266
    4. '(
' → logprob: -17.125003814697266
    5. ' (' → logprob: -18.375003814697266
    6. '```' → logprob: -18.500003814697266
    7. ',p' → logprob: -19.875003814697266
    8. '[p' → logprob: -19.875003814697266
    9. '<p' → logprob: -20.000003814697266
    10. ')' → logprob: -20.875003814697266

Token 839: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.014359178952872753
    2. ',' → logprob: -4.639358997344971
    3. 'n' → logprob: -5.389358997344971
    4. '(n' → logprob: -11.264359474182129
    5. ' ,' → logprob: -11.639359474182129
    6. '[n' → logprob: -13.264359474182129
    7. ',k' → logprob: -13.264359474182129
    8. ',p' → logprob: -13.764359474182129
    9. ' n' → logprob: -14.264359474182129
    10. 'p' → logprob: -14.889359474182129

Token 840: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0683535037969705e-05
    2. ')return' → logprob: -11.75001049041748
    3. ')
' → logprob: -13.37501049041748
    4. ' )' → logprob: -14.87501049041748
    5. '))' → logprob: -15.62501049041748
    6. '[' → logprob: -15.75001049041748
    7. ')p' → logprob: -15.87501049041748
    8. ')#' → logprob: -16.750011444091797
    9. ')[' → logprob: -17.000011444091797
    10. ',)' → logprob: -17.125011444091797

Token 841: 'for' (ID: 1938)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7931224703788757
    2. 'exp' → logprob: -1.2931225299835205
    3. 'expr' → logprob: -1.4181225299835205
    4. 'expression' → logprob: -3.5431225299835205
    5. '```' → logprob: -7.168122291564941
    6. 'S' → logprob: -7.793122291564941
    7. 'cmd' → logprob: -8.793122291564941
    8. '#' → logprob: -9.168122291564941
    9. 'while' → logprob: -9.668122291564941
    10. 'print' → logprob: -9.668122291564941

Token 842: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12010902911424637
    2. ' _' → logprob: -2.2451090812683105
    3. '_i' → logprob: -5.3701090812683105
    4. '_exp' → logprob: -6.9951090812683105
    5. '_line' → logprob: -7.4951090812683105
    6. ' i' → logprob: -8.120108604431152
    7. '_expression' → logprob: -8.245108604431152
    8. '_expr' → logprob: -8.495108604431152
    9. '_e' → logprob: -9.495108604431152
    10. '_E' → logprob: -9.620108604431152

Token 843: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0790267139673233
    2. ' in' → logprob: -2.579026699066162
    3. '_' → logprob: -9.95402717590332
    4. 'range' → logprob: -10.32902717590332
    5. 'i' → logprob: -10.82902717590332
    6. ' ' → logprob: -11.70402717590332
    7. 'line' → logprob: -11.82902717590332
    8. '_in' → logprob: -12.07902717590332
    9. 'ine' → logprob: -12.45402717590332
    10. 'inp' → logprob: -12.82902717590332

Token 844: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002646735229063779
    2. ' range' → logprob: -8.250265121459961
    3. 'in' → logprob: -13.000265121459961
    4. 'E' → logprob: -14.000265121459961
    5. 'input' → logprob: -16.00026512145996
    6. '(range' → logprob: -16.50026512145996
    7. ' in' → logprob: -18.12526512145996
    8. '	range' → logprob: -18.37526512145996
    9. '_' → logprob: -18.75026512145996
    10. 'ange' → logprob: -18.87526512145996

Token 845: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -7.052377623040229e-05
    2. 'E' → logprob: -10.000070571899414
    3. '(' → logprob: -11.375070571899414
    4. 'range' → logprob: -11.750070571899414
    5. '(range' → logprob: -12.375070571899414
    6. ' range' → logprob: -14.125070571899414
    7. '(int' → logprob: -14.375070571899414
    8. ' (' → logprob: -15.500070571899414
    9. ' E' → logprob: -17.125070571899414
    10. 'Range' → logprob: -18.000070571899414

Token 846: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13739877939224243
    2. '():
' → logprob: -2.8873987197875977
    3. '):' → logprob: -2.8873987197875977
    4. ':
' → logprob: -4.762398719787598
    5. ':' → logprob: -5.387398719787598
    6. '():' → logprob: -7.137398719787598
    7. '   ' → logprob: -7.262398719787598
    8. '(input' → logprob: -7.762398719787598
    9. 'in' → logprob: -8.262398719787598
    10. ' in' → logprob: -8.387398719787598

Token 847: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4870908856391907
    2. 'exp' → logprob: -1.612090826034546
    3. 'expr' → logprob: -1.737090826034546
    4. 'expression' → logprob: -5.612091064453125
    5. '   ' → logprob: -5.737091064453125
    6. 'line' → logprob: -6.862091064453125
    7. 'ex' → logprob: -6.987091064453125
    8. 'e' → logprob: -8.237091064453125
    9. 'code' → logprob: -8.237091064453125
    10. '```' → logprob: -8.612091064453125

Token 848: ' line' (ID: 2543)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6217785477638245
    2. 'expr' → logprob: -1.3717784881591797
    3. 'exp' → logprob: -1.6217784881591797
    4. 'expression' → logprob: -4.99677848815918
    5. 'line' (adapté à ' line') → logprob: -5.74677848815918
    6. '   ' → logprob: -6.37177848815918
    7. ' s' → logprob: -10.74677848815918
    8. 'e' → logprob: -10.99677848815918
    9. ' expr' → logprob: -11.12177848815918
    10. '_expr' → logprob: -11.12177848815918

Token 849: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7107253074645996
    2. '=line' → logprob: -0.7107253074645996
    3. '=input' → logprob: -4.0857253074646
    4. ' =' → logprob: -7.5857253074646
    5. '=sys' → logprob: -9.335725784301758
    6. '=s' → logprob: -12.335725784301758
    7. '=list' → logprob: -12.335725784301758
    8. '_=' → logprob: -12.960725784301758
    9. '   ' → logprob: -13.210725784301758
    10. '=_' → logprob: -13.960725784301758

Token 850: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008640571613796055
    2. '=' → logprob: -8.500864028930664
    3. '_line' → logprob: -8.875864028930664
    4. '())' → logprob: -9.250864028930664
    5. ')' → logprob: -9.375864028930664
    6. '()
' → logprob: -9.750864028930664
    7. '()>' → logprob: -10.000864028930664
    8. '().' → logprob: -10.250864028930664
    9. '()='' → logprob: -10.250864028930664
    10. 'line' → logprob: -10.375864028930664

Token 851: '   ' (ID: 271)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.03171190619468689
    2. 'expr' → logprob: -3.6567118167877197
    3. 'ast' → logprob: -5.531712055206299
    4. 'tree' → logprob: -7.281712055206299
    5. 'parsed' → logprob: -7.531712055206299
    6. '   ' → logprob: -9.65671157836914
    7. 'parser' → logprob: -10.03171157836914
    8. 'expression' → logprob: -10.40671157836914
    9. 'e' → logprob: -10.78171157836914
    10. 'ex' → logprob: -11.15671157836914

Token 852: ' p' (ID: 275)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.04489589110016823
    2. 'expr' → logprob: -3.294895887374878
    3. 'ast' → logprob: -5.669896125793457
    4. 'parsed' → logprob: -6.294896125793457
    5. 'tree' → logprob: -7.044896125793457
    6. 'expression' → logprob: -7.544896125793457
    7. 'parser' → logprob: -10.044896125793457
    8. '   ' → logprob: -10.794896125793457
    9. 'ex' → logprob: -11.044896125793457
    10. 'e' → logprob: -11.044896125793457

Token 853: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47130170464515686
    2. 'exp' → logprob: -1.2213016748428345
    3. 'ars' → logprob: -3.471301794052124
    4. 'ar' → logprob: -4.096301555633545
    5. 'expr' → logprob: -4.971301555633545
    6. 'arse' → logprob: -4.971301555633545
    7. '_exp' → logprob: -5.346301555633545
    8. ' =' → logprob: -5.471301555633545
    9. 'arts' → logprob: -5.971301555633545
    10. '=p' → logprob: -6.096301555633545

Token 854: 'Parser' (ID: 9231)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.31372904777526855
    2. 'Parser' → logprob: -1.3137290477752686
    3. 'parse' → logprob: -7.813729286193848
    4. ' eval' → logprob: -10.438729286193848
    5. ' Parser' → logprob: -11.063729286193848
    6. 'Eval' → logprob: -11.938729286193848
    7. 'parser' → logprob: -12.563729286193848
    8. '(eval' → logprob: -13.063729286193848
    9. '(Parser' → logprob: -13.563729286193848
    10. 'evaluate' → logprob: -13.688729286193848

Token 855: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.004358671605587006
    2. 'line' → logprob: -6.004358768463135
    3. 'p' → logprob: -6.879358768463135
    4. '=line' → logprob: -8.004358291625977
    5. '[line' → logprob: -8.379358291625977
    6. '#line' → logprob: -9.379358291625977
    7. ' line' → logprob: -9.879358291625977
    8. '   ' → logprob: -10.504358291625977
    9. '(' → logprob: -10.754358291625977
    10. '(p' → logprob: -10.879358291625977

Token 856: ')
' (ID: 446)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.04332994669675827
    2. '.parse' → logprob: -3.293329954147339
    3. ')' → logprob: -5.54332971572876
    4. '   ' → logprob: -7.16832971572876
    5. ')
' → logprob: -7.54332971572876
    6. '=parse' → logprob: -10.418330192565918
    7. '=' → logprob: -11.793330192565918
    8. 'parse' → logprob: -12.668330192565918
    9. '  ' → logprob: -12.668330192565918
    10. ')
' → logprob: -12.918330192565918

Token 857: '   ' (ID: 271)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.02215622365474701
    2. '   ' → logprob: -4.522156238555908
    3. 'expr' → logprob: -4.522156238555908
    4. 'expression' → logprob: -9.52215576171875
    5. 'e' → logprob: -10.89715576171875
    6. 'ast' → logprob: -11.02215576171875
    7. ' exp' → logprob: -11.02215576171875
    8. '```' → logprob: -11.02215576171875
    9. 'parsed' → logprob: -11.39715576171875
    10. '	exp' → logprob: -11.89715576171875

Token 858: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' (adapté à ' exp') → logprob: -0.0032125303987413645
    2. 'expr' → logprob: -5.8782124519348145
    3. 'expression' → logprob: -8.628212928771973
    4. '   ' → logprob: -9.003212928771973
    5. 'ast' → logprob: -9.878212928771973
    6. 'e' → logprob: -10.628212928771973
    7. 'parsed' → logprob: -11.628212928771973
    8. 'ex' → logprob: -11.628212928771973
    9. 'tree' → logprob: -12.253212928771973
    10. 'res' → logprob: -12.878212928771973

Token 859: '=p' (ID: 48137)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0014673690311610699
    2. '=p' → logprob: -7.376467227935791
    3. '=parse' → logprob: -8.12646770477295
    4. ' =' → logprob: -8.37646770477295
    5. 'exp' → logprob: -8.62646770477295
    6. '=res' → logprob: -9.50146770477295
    7. 'p' → logprob: -11.62646770477295
    8. 'res' → logprob: -12.00146770477295
    9. '=e' → logprob: -12.00146770477295
    10. '_=' → logprob: -12.37646770477295

Token 860: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.20284327864646912
    2. 'parse' → logprob: -1.7028433084487915
    3. '_parse' → logprob: -7.702843189239502
    4. 'arse' → logprob: -8.07784366607666
    5. 'eval' → logprob: -8.57784366607666
    6. '.' → logprob: -8.70284366607666
    7. '=parse' → logprob: -8.82784366607666
    8. '.eval' → logprob: -9.57784366607666
    9. 'exp' → logprob: -9.70284366607666
    10. '.evaluate' → logprob: -11.20284366607666

Token 861: '_expression' (ID: 69265)
  Prédit: '_expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expression' → logprob: -0.024988247081637383
    2. 'expression' → logprob: -3.8999881744384766
    3. 'exp' → logprob: -5.899988174438477
    4. '_exp' → logprob: -6.399988174438477
    5. '()' → logprob: -11.649988174438477
    6. '_expr' → logprob: -12.024988174438477
    7. ' =' → logprob: -12.649988174438477
    8. 'Expression' → logprob: -13.274988174438477
    9. '(expression' → logprob: -13.399988174438477
    10. '_line' → logprob: -13.399988174438477

Token 862: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01920332945883274
    2. 'res' → logprob: -4.519203186035156
    3. 'result' → logprob: -5.019203186035156
    4. 'perm' → logprob: -6.894203186035156
    5. 'r' → logprob: -9.144203186035156
    6. 'p' → logprob: -9.144203186035156
    7. '
' → logprob: -9.519203186035156
    8. '    
' → logprob: -10.269203186035156
    9. 'per' → logprob: -10.519203186035156
    10. ' res' → logprob: -10.644203186035156

Token 863: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.22386762499809265
    2. '   ' → logprob: -1.973867654800415
    3. 'perm' → logprob: -3.473867654800415
    4. 'ans' → logprob: -3.973867654800415
    5. 'result' → logprob: -4.598867416381836
    6. 'r' → logprob: -7.098867416381836
    7. 'print' → logprob: -8.098867416381836
    8. 'out' → logprob: -9.223867416381836
    9. 'final' → logprob: -9.223867416381836
    10. 'q' → logprob: -9.348867416381836

Token 864: ' ans' (ID: 3345)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.05327453464269638
    2. 'perm' → logprob: -3.053274631500244
    3. 'ans' (adapté à ' ans') → logprob: -6.053274631500244
    4. 'final' → logprob: -6.553274631500244
    5. 'result' → logprob: -7.303274631500244
    6. 'r' → logprob: -8.928274154663086
    7. 'per' → logprob: -10.428274154663086
    8. 'pos' → logprob: -11.053274154663086
    9. 'out' → logprob: -11.178274154663086
    10. 'mapping' → logprob: -11.678274154663086

Token 865: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012900309637188911
    2. '=[' → logprob: -4.887900352478027
    3. '=list' → logprob: -6.012900352478027
    4. '=p' → logprob: -6.637900352478027
    5. ' =' → logprob: -6.762900352478027
    6. '=e' → logprob: -8.012900352478027
    7. '=result' → logprob: -12.262900352478027
    8. '=[]' → logprob: -12.387900352478027
    9. '=res' → logprob: -12.637900352478027
    10. '=com' → logprob: -12.637900352478027

Token 866: 'eval' (ID: 37679)
  Prédit: 'eval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -1.0325924449716695e-05
    2. 'exp' → logprob: -12.12501049041748
    3. 'ans' → logprob: -12.50001049041748
    4. 'list' → logprob: -14.50001049041748
    5. '[' → logprob: -15.12501049041748
    6. '(eval' → logprob: -16.000009536743164
    7. 'p' → logprob: -16.250009536743164
    8. ' eval' → logprob: -16.375009536743164
    9. 'exec' → logprob: -17.250009536743164
    10. 'ev' → logprob: -17.500009536743164

Token 867: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.0002986392646562308
    2. 'exp' → logprob: -8.125298500061035
    3. '(exp' → logprob: -13.375298500061035
    4. '_ans' → logprob: -14.375298500061035
    5. '	exp' → logprob: -15.375298500061035
    6. 'Exp' → logprob: -16.12529945373535
    7. ''exp' → logprob: -16.12529945373535
    8. '_expr' → logprob: -17.50029945373535
    9. '-exp' → logprob: -17.75029945373535
    10. '.exp' → logprob: -18.25029945373535

Token 868: '(exp' (ID: 51367)
  Prédit: '(exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(exp' → logprob: -0.0019532525911927223
    2. '(ans' → logprob: -6.251953125
    3. 'exp' → logprob: -11.001953125
    4. '(' → logprob: -12.126953125
    5. '(expr' → logprob: -13.376953125
    6. ' (' → logprob: -14.376953125
    7. '_exp' → logprob: -15.751953125
    8. 'ans' → logprob: -16.001953125
    9. '(exc' → logprob: -16.626953125
    10. '((' → logprob: -17.001953125

Token 869: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2258719950914383
    2. ')' → logprob: -1.6008720397949219
    3. ')
' → logprob: -9.225872039794922
    4. ')[' → logprob: -9.350872039794922
    5. '[' → logprob: -9.475872039794922
    6. '(ans' → logprob: -9.850872039794922
    7. ')

' → logprob: -10.475872039794922
    8. '
' → logprob: -10.725872039794922
    9. 'print' → logprob: -11.100872039794922
    10. 'ans' → logprob: -11.350872039794922

Token 870: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19043873250484467
    2. '   ' → logprob: -1.8154387474060059
    3. 'output' → logprob: -5.440438747406006
    4. 'line' → logprob: -6.940438747406006
    5. 'for' → logprob: -6.940438747406006
    6. 'answer' → logprob: -7.065438747406006
    7. 'i' → logprob: -7.065438747406006
    8. '```' → logprob: -7.440438747406006
    9. 'result' → logprob: -7.565438747406006
    10. 'idx' → logprob: -7.690438747406006

Token 871: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03552620857954025
    2. 'for' → logprob: -3.9105262756347656
    3. 'output' → logprob: -5.035526275634766
    4. 'out' → logprob: -5.410526275634766
    5. 'inv' → logprob: -6.160526275634766
    6. 'res' → logprob: -7.285526275634766
    7. 'result' → logprob: -7.785526275634766
    8. 'pos' → logprob: -8.285526275634766
    9. 'inverse' → logprob: -9.410526275634766
    10. '   ' → logprob: -9.660526275634766

Token 872: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004054059740155935
    2. 'for' → logprob: -6.004054069519043
    3. 'output' → logprob: -7.129054069519043
    4. 'out' → logprob: -8.254054069519043
    5. '   ' → logprob: -8.629054069519043
    6. 'pos' → logprob: -9.004054069519043
    7. 'res' → logprob: -9.129054069519043
    8. 'inv' → logprob: -10.004054069519043
    9. 'positions' → logprob: -11.254054069519043
    10. 'result' → logprob: -11.254054069519043

Token 873: ':' (ID: 25)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01815415732562542
    2. 'for' → logprob: -4.018154144287109
    3. ' print' → logprob: -14.14315414428711
    4. '   ' → logprob: -14.39315414428711
    5. 'output' → logprob: -14.51815414428711
    6. 'result' → logprob: -14.51815414428711
    7. 'res' → logprob: -14.64315414428711
    8. '
' → logprob: -14.76815414428711
    9. 'out' → logprob: -15.26815414428711
    10. ' for' → logprob: -15.26815414428711

Token 874: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007998145185410976
    2. 'for' → logprob: -4.882997989654541
    3. ''' → logprob: -7.882997989654541
    4. ' print' → logprob: -11.7579984664917
    5. '"' → logprob: -12.7579984664917
    6. '   ' → logprob: -13.6329984664917
    7. ' for' → logprob: -14.0079984664917
    8. '#' → logprob: -14.3829984664917
    9. ''\' → logprob: -14.8829984664917
    10. 'result' → logprob: -15.5079984664917

Token 875: ' input' (ID: 3422)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.97155623533763e-05
    2. 'x' → logprob: -9.750089645385742
    3. ' i' → logprob: -11.000089645385742
    4. 'pos' → logprob: -11.375089645385742
    5. 'v' → logprob: -13.625089645385742
    6. 'ans' → logprob: -14.375089645385742
    7. '_i' → logprob: -15.000089645385742
    8. 'j' → logprob: -15.125089645385742
    9. '   ' → logprob: -15.375089645385742
    10. '```' → logprob: -15.875089645385742

Token 876: ' positions' (ID: 15897)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3222164213657379
    2. 'pos' → logprob: -1.9472163915634155
    3. 'positions' → logprob: -2.572216510772705
    4. 'position' → logprob: -3.072216510772705
    5. 'range' → logprob: -5.822216510772705
    6. ' i' → logprob: -5.947216510772705
    7. 'labels' → logprob: -6.947216510772705
    8. 'for' → logprob: -7.072216510772705
    9. ' positions' → logprob: -7.322216510772705
    10. 'label' → logprob: -8.072216033935547

Token 877: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20247483253479004
    2. 'for' → logprob: -1.70247483253479
    3. ' for' → logprob: -7.077474594116211
    4. '   ' → logprob: -9.327474594116211
    5. ' print' → logprob: -9.452474594116211
    6. '
' → logprob: -10.452474594116211
    7. '0' → logprob: -11.577474594116211
    8. 'output' → logprob: -13.077474594116211
    9. 'result' → logprob: -13.577474594116211
    10. 'ans' → logprob: -13.952474594116211

Token 878: '0' (ID: 15)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1311236023902893
    2. 'range' → logprob: -2.6311235427856445
    3. 'for' → logprob: -3.8811235427856445
    4. 'i' → logprob: -3.8811235427856445
    5. 'print' → logprob: -5.2561235427856445
    6. ' in' → logprob: -6.5061235427856445
    7. '0' → logprob: -6.5061235427856445
    8. '   ' → logprob: -7.7561235427856445
    9. '
' → logprob: -8.006123542785645
    10. 'from' → logprob: -8.131123542785645

Token 879: '..' (ID: 485)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.49872419238090515
    2. 'to' → logprob: -0.9987242221832275
    3. '..' → logprob: -4.123723983764648
    4. ' ' → logprob: -6.248723983764648
    5. ',' → logprob: -6.498723983764648
    6. ' through' → logprob: -7.123723983764648
    7. 'for' → logprob: -7.248723983764648
    8. 'print' → logprob: -7.373723983764648
    9. '...' → logprob: -7.373723983764648
    10. '
' → logprob: -7.998723983764648

Token 880: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.012696350924670696
    2. '
' → logprob: -5.262696266174316
    3. '...' → logprob: -6.012696266174316
    4. 'print' → logprob: -6.137696266174316
    5. 'range' → logprob: -6.762696266174316
    6. '```' → logprob: -7.887696266174316
    7. '{' → logprob: -8.262696266174316
    8. '..' → logprob: -8.262696266174316
    9. '(N' → logprob: -8.512696266174316
    10. '0' → logprob: -9.137696266174316

Token 881: '-' (ID: 12)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8839151859283447
    2. '-' → logprob: -1.0089151859283447
    3. 'print' → logprob: -1.6339151859283447
    4. ' for' → logprob: -4.758914947509766
    5. '   ' → logprob: -4.758914947509766
    6. '+' → logprob: -5.008914947509766
    7. ' print' → logprob: -7.008914947509766
    8. ' ' → logprob: -7.633914947509766
    9. ' -' → logprob: -7.883914947509766
    10. '
' → logprob: -8.133914947509766

Token 882: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.125000953674316
    3. '-' → logprob: -14.500000953674316
    4. ' ' → logprob: -17.000001907348633
    5. '
' → logprob: -17.750001907348633
    6. 'N' → logprob: -17.750001907348633
    7. '``' → logprob: -18.375001907348633
    8. '19' → logprob: -18.750001907348633
    9. '+' → logprob: -19.000001907348633
    10. '9' → logprob: -19.500001907348633

Token 883: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.025052549317479134
    2. 'for' → logprob: -4.025052547454834
    3. '   ' → logprob: -5.025052547454834
    4. ' for' → logprob: -8.775053024291992
    5. ' print' → logprob: -8.900053024291992
    6. '```' → logprob: -11.775053024291992
    7. '
' → logprob: -12.650053024291992
    8. 'output' → logprob: -13.775053024291992
    9. '	print' → logprob: -13.900053024291992
    10. 'ans' → logprob: -13.900053024291992

Token 884: ' numbering' (ID: 169570)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00248719216324389
    2. 'for' → logprob: -6.2524871826171875
    3. '   ' → logprob: -7.5024871826171875
    4. ' print' → logprob: -12.002487182617188
    5. '```' → logprob: -15.127487182617188
    6. ' for' → logprob: -15.627487182617188
    7. '
' → logprob: -16.502487182617188
    8. 'output' → logprob: -16.502487182617188
    9. '	print' → logprob: -17.752487182617188
    10. 'result' → logprob: -18.627487182617188

Token 885: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5340320467948914
    2. '=' → logprob: -1.9090321063995361
    3. 'range' → logprob: -2.784032106399536
    4. 'for' → logprob: -2.909032106399536
    5. '1' → logprob: -2.909032106399536
    6. '0' → logprob: -3.909032106399536
    7. '(range' → logprob: -4.034031867980957
    8. ' =' → logprob: -4.034031867980957
    9. '(' → logprob: -4.659031867980957
    10. '   ' → logprob: -5.284031867980957

Token 886: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.110668618930504e-05
    2. '0' → logprob: -10.12506103515625
    3. 'print' → logprob: -11.37506103515625
    4. ' ' → logprob: -12.37506103515625
    5. 'ans' → logprob: -13.12506103515625
    6. '
' → logprob: -14.12506103515625
    7. 'input' → logprob: -14.37506103515625
    8. '   ' → logprob: -14.50006103515625
    9. 'output' → logprob: -14.75006103515625
    10. 'top' → logprob: -15.37506103515625

Token 887: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032860899809747934
    2. '0' → logprob: -5.878285884857178
    3. 'top' → logprob: -8.378286361694336
    4. 'print' → logprob: -9.253286361694336
    5. 'bottom' → logprob: -9.878286361694336
    6. 'ans' → logprob: -10.128286361694336
    7. 'left' → logprob: -10.878286361694336
    8. 'the' → logprob: -11.128286361694336
    9. ' ' → logprob: -11.503286361694336
    10. 'input' → logprob: -11.878286361694336

Token 888: '..' (ID: 485)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13867227733135223
    2. 'print' → logprob: -2.513672351837158
    3. ' for' → logprob: -3.263672351837158
    4. '   ' → logprob: -5.138672351837158
    5. ' to' → logprob: -6.638672351837158
    6. ',' → logprob: -7.013672351837158
    7. '=' → logprob: -7.513672351837158
    8. 'to' → logprob: -7.638672351837158
    9. ' =' → logprob: -7.888672351837158
    10. '
' → logprob: -8.263671875

Token 889: 'N' (ID: 45)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.23818489909172058
    2. 'N' → logprob: -1.613184928894043
    3. 'for' → logprob: -5.613184928894043
    4. ' to' → logprob: -5.613184928894043
    5. 'print' → logprob: -5.738184928894043
    6. '
' → logprob: -6.863184928894043
    7. 'range' → logprob: -7.238184928894043
    8. '1' → logprob: -8.238184928894043
    9. 'ans' → logprob: -10.613184928894043
    10. '```' → logprob: -10.738184928894043

Token 890: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12742148339748383
    2. '   ' → logprob: -2.1274213790893555
    3. 'for' → logprob: -8.127421379089355
    4. '
' → logprob: -9.377421379089355
    5. ' print' → logprob: -9.377421379089355
    6. '```' → logprob: -11.752421379089355
    7. 'output' → logprob: -11.877421379089355
    8. '	print' → logprob: -11.877421379089355
    9. ' for' → logprob: -13.252421379089355
    10. '    
' → logprob: -14.252421379089355

Token 891: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0020019153598695993
    2. '   ' → logprob: -6.252001762390137
    3. 'for' → logprob: -9.627001762390137
    4. '```' → logprob: -12.377001762390137
    5. ' print' → logprob: -12.752001762390137
    6. '	print' → logprob: -15.627001762390137
    7. '
' → logprob: -17.002002716064453
    8. '``' → logprob: -17.252002716064453
    9. 'output' → logprob: -17.627002716064453
    10. ' for' → logprob: -18.627002716064453

Token 892: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0023325940128415823
    2. 'for' → logprob: -6.50233268737793
    3. '   ' → logprob: -7.12733268737793
    4. ' print' → logprob: -11.00233268737793
    5. '```' → logprob: -12.00233268737793
    6. ' for' → logprob: -12.87733268737793
    7. 'output' → logprob: -13.62733268737793
    8. '	print' → logprob: -15.62733268737793
    9. 'ans' → logprob: -15.87733268737793
    10. '
' → logprob: -16.00233268737793

Token 893: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008622728288173676
    2. 'for' → logprob: -4.758622646331787
    3. '   ' → logprob: -11.758623123168945
    4. ' print' → logprob: -15.258623123168945
    5. ' for' → logprob: -16.258623123168945
    6. '```' → logprob: -16.883623123168945
    7. '
' → logprob: -17.508623123168945
    8. 'output' → logprob: -19.008623123168945
    9. '    
' → logprob: -19.508623123168945
    10. '	print' → logprob: -21.008623123168945

Token 894: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1934884935617447
    2. '=[' → logprob: -2.068488597869873
    3. 'for' → logprob: -4.068488597869873
    4. 'print' → logprob: -4.443488597869873
    5. ' =' → logprob: -4.943488597869873
    6. '=list' → logprob: -5.818488597869873
    7. '[' → logprob: -6.193488597869873
    8. '=line' → logprob: -7.068488597869873
    9. 'positions' → logprob: -7.568488597869873
    10. '_indices' → logprob: -7.693488597869873

Token 895: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4309796690940857
    2. ']=' → logprob: -1.6809797286987305
    3. ']' → logprob: -2.9309797286987305
    4. ')' → logprob: -3.5559797286987305
    5. ')=' → logprob: -3.8059797286987305
    6. 'print' → logprob: -3.9309797286987305
    7. '=i' → logprob: -4.1809797286987305
    8. ' =' → logprob: -4.4309797286987305
    9. '   ' → logprob: -6.3059797286987305
    10. ']+=' → logprob: -6.4309797286987305

Token 896: ' is' (ID: 382)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7864231467247009
    2. 'print' → logprob: -1.2864232063293457
    3. '=' → logprob: -1.7864232063293457
    4. ' for' → logprob: -3.5364232063293457
    5. '   ' → logprob: -4.036423206329346
    6. ' =' → logprob: -4.536423206329346
    7. 'i' → logprob: -4.786423206329346
    8. '
' → logprob: -5.286423206329346
    9. ')' → logprob: -5.536423206329346
    10. ',' → logprob: -5.661423206329346

Token 897: ' output' (ID: 4733)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0010836597066372633
    2. 'i' → logprob: -8.126083374023438
    3. 'the' → logprob: -8.251083374023438
    4. ' ans' → logprob: -8.376083374023438
    5. 'str' → logprob: -8.626083374023438
    6. '(ans' → logprob: -9.251083374023438
    7. '	ans' → logprob: -11.876083374023438
    8. 'position' → logprob: -12.501083374023438
    9. 'answer' → logprob: -12.876083374023438
    10. '   ' → logprob: -12.876083374023438

Token 898: ' position' (ID: 4010)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6358518600463867
    2. ' for' → logprob: -1.7608518600463867
    3. ' =' → logprob: -2.5108518600463867
    4. '[i' → logprob: -2.8858518600463867
    5. '   ' → logprob: -3.1358518600463867
    6. 'print' → logprob: -3.2608518600463867
    7. '=' → logprob: -3.7608518600463867
    8. ' i' → logprob: -3.8858518600463867
    9. 'i' → logprob: -4.510851860046387
    10. 'positions' → logprob: -4.885851860046387

Token 899: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8400633335113525
    2. '   ' → logprob: -1.0900633335113525
    3. 'print' → logprob: -1.4650633335113525
    4. ' for' → logprob: -7.215063095092773
    5. '```' → logprob: -8.840063095092773
    6. 'output' → logprob: -9.465063095092773
    7. '	for' → logprob: -10.340063095092773
    8. 'i' → logprob: -10.715063095092773
    9. ' print' → logprob: -11.215063095092773
    10. '	print' → logprob: -11.840063095092773

Token 900: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0014442839892581105
    2. 'input' → logprob: -6.751444339752197
    3. ' i' → logprob: -8.251443862915039
    4. ' input' → logprob: -12.126443862915039
    5. '   ' → logprob: -12.876443862915039
    6. 'the' → logprob: -13.126443862915039
    7. '```' → logprob: -14.126443862915039
    8. 'ith' → logprob: -14.376443862915039
    9. 'position' → logprob: -14.376443862915039
    10. '`' → logprob: -15.001443862915039

Token 901: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12825797498226166
    2. '   ' → logprob: -2.128257989883423
    3. 'for' → logprob: -6.753257751464844
    4. 'output' → logprob: -9.503257751464844
    5. ' print' → logprob: -10.128257751464844
    6. '```' → logprob: -11.253257751464844
    7. 'result' → logprob: -11.628257751464844
    8. 'ans' → logprob: -11.753257751464844
    9. 'out' → logprob: -12.003257751464844
    10. '
' → logprob: -12.503257751464844

Token 902: ' zero' (ID: 12421)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014318748377263546
    2. '   ' → logprob: -4.389318943023682
    3. 'for' → logprob: -6.889318943023682
    4. ' print' → logprob: -7.264318943023682
    5. 'result' → logprob: -10.139318466186523
    6. ' for' → logprob: -10.889318466186523
    7. 'output' → logprob: -11.764318466186523
    8. '	print' → logprob: -12.264318466186523
    9. 'answer' → logprob: -12.514318466186523
    10. 'i' → logprob: -12.639318466186523

Token 903: '-based' (ID: 8235)
  Prédit: 'based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'based' → logprob: -0.49242717027664185
    2. '-based' → logprob: -0.9924271702766418
    3. ']' → logprob: -5.242427349090576
    4. ' based' → logprob: -5.367427349090576
    5. '_based' → logprob: -5.992427349090576
    6. 'for' → logprob: -6.242427349090576
    7. ' for' → logprob: -7.117427349090576
    8. '```' → logprob: -7.617427349090576
    9. 'Based' → logprob: -7.742427349090576
    10. '-index' → logprob: -8.117426872253418

Token 904: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00023691373644396663
    2. 'for' → logprob: -8.500236511230469
    3. '   ' → logprob: -10.375236511230469
    4. '
' → logprob: -14.375236511230469
    5. ' print' → logprob: -14.625236511230469
    6. 'output' → logprob: -14.750236511230469
    7. '```' → logprob: -14.750236511230469
    8. 'res' → logprob: -15.250236511230469
    9. 'out' → logprob: -16.37523651123047
    10. 'result' → logprob: -16.62523651123047

Token 905: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012239166535437107
    2. '   ' → logprob: -6.876224040985107
    3. '```' → logprob: -9.25122356414795
    4. 'for' → logprob: -9.50122356414795
    5. ' print' → logprob: -11.00122356414795
    6. '``' → logprob: -13.25122356414795
    7. '	print' → logprob: -14.00122356414795
    8. 'output' → logprob: -14.87622356414795
    9. 'result' → logprob: -15.12622356414795
    10. '<|end|>' → logprob: -15.62622356414795

Token 906: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002230667509138584
    2. 'for' → logprob: -6.127230644226074
    3. '   ' → logprob: -11.002230644226074
    4. '```' → logprob: -11.002230644226074
    5. 'output' → logprob: -12.502230644226074
    6. 'res' → logprob: -12.877230644226074
    7. 'out' → logprob: -13.002230644226074
    8. ' print' → logprob: -13.002230644226074
    9. 'result' → logprob: -14.002230644226074
    10. ' for' → logprob: -15.502230644226074

Token 907: ' We' (ID: 1416)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004145949613302946
    2. 'for' → logprob: -5.504146099090576
    3. 'out' → logprob: -10.254145622253418
    4. 'res' → logprob: -11.129145622253418
    5. 'output' → logprob: -11.254145622253418
    6. '   ' → logprob: -13.129145622253418
    7. 'result' → logprob: -13.254145622253418
    8. ' print' → logprob: -14.504145622253418
    9. 'inv' → logprob: -16.254146575927734
    10. 'sys' → logprob: -16.629146575927734

Token 908: ' need' (ID: 1309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.055732425302267075
    2. 'output' → logprob: -3.305732488632202
    3. 'for' → logprob: -4.430732250213623
    4. '=' → logprob: -6.055732250213623
    5. '_output' → logprob: -7.055732250213623
    6. 'out' → logprob: -7.180732250213623
    7. '   ' → logprob: -7.430732250213623
    8. 'reverse' → logprob: -8.805732727050781
    9. '.print' → logprob: -9.305732727050781
    10. '
' → logprob: -9.305732727050781

Token 909: ' to' (ID: 316)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008544125594198704
    2. '   ' → logprob: -5.508543968200684
    3. 'to' → logprob: -5.758543968200684
    4. ' to' → logprob: -7.133543968200684
    5. ' print' → logprob: -8.508543968200684
    6. 'output' → logprob: -8.758543968200684
    7. '
' → logprob: -9.508543968200684
    8. 'for' → logprob: -10.008543968200684
    9. 'reverse' → logprob: -11.508543968200684
    10. 'out' → logprob: -12.758543968200684

Token 910: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06540204584598541
    2. 'for' → logprob: -3.565402030944824
    3. 'output' → logprob: -3.940402030944824
    4. 'out' → logprob: -4.940402030944824
    5. 'inv' → logprob: -4.940402030944824
    6. 'inverse' → logprob: -7.690402030944824
    7. 'reverse' → logprob: -7.940402030944824
    8. 'rev' → logprob: -8.815402030944824
    9. '
' → logprob: -9.065402030944824
    10. 'res' → logprob: -9.440402030944824

Token 911: ' the' (ID: 290)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.013964975252747536
    2. '"' → logprob: -4.513965129852295
    3. 'print' → logprob: -6.013965129852295
    4. ' '' → logprob: -8.513964653015137
    5. ''N' → logprob: -9.513964653015137
    6. 'for' → logprob: -9.638964653015137
    7. '   ' → logprob: -10.263964653015137
    8. '('' → logprob: -10.763964653015137
    9. '
' → logprob: -10.763964653015137
    10. ''a' → logprob: -11.638964653015137

Token 912: ' output' (ID: 4733)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.38849136233329773
    2. ''' → logprob: -2.26349139213562
    3. 'final' → logprob: -2.51349139213562
    4. 'per' → logprob: -2.76349139213562
    5. '"' → logprob: -3.76349139213562
    6. 'result' → logprob: -4.513491153717041
    7. ' positions' → logprob: -5.013491153717041
    8. 'position' → logprob: -5.138491153717041
    9. 'inverse' → logprob: -5.763491153717041
    10. 'perm' → logprob: -5.888491153717041

Token 913: ' permutation' (ID: 135200)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.2719953656196594
    2. 'print' → logprob: -2.0219953060150146
    3. ''' → logprob: -3.3969953060150146
    4. ' =' → logprob: -4.771995544433594
    5. '"' → logprob: -4.771995544433594
    6. 'pos' → logprob: -5.021995544433594
    7. '_positions' → logprob: -5.021995544433594
    8. 'line' → logprob: -5.396995544433594
    9. 'for' → logprob: -5.396995544433594
    10. 'ans' → logprob: -5.521995544433594

Token 914: ' that' (ID: 484)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009966061916202307
    2. '   ' → logprob: -7.0009965896606445
    3. ' print' → logprob: -10.000996589660645
    4. 'for' → logprob: -10.250996589660645
    5. '	print' → logprob: -13.375996589660645
    6. '```' → logprob: -13.625996589660645
    7. 'output' → logprob: -14.000996589660645
    8. '
' → logprob: -15.125996589660645
    9. '#print' → logprob: -16.00099754333496
    10. ' for' → logprob: -16.50099754333496

Token 915: ' transforms' (ID: 55580)
  Prédit: 'maps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maps' → logprob: -0.639923095703125
    2. 'for' → logprob: -1.639923095703125
    3. 'in' → logprob: -2.139923095703125
    4. ' maps' → logprob: -2.764923095703125
    5. '#' → logprob: -3.014923095703125
    6. 'inv' → logprob: -4.639923095703125
    7. 'inverse' → logprob: -4.639923095703125
    8. 'outputs' → logprob: -5.139923095703125
    9. 'puts' → logprob: -5.639923095703125
    10. ' for' → logprob: -5.764923095703125

Token 916: ' ' (ID: 220)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.1188472509384155
    2. '[i' → logprob: -1.6188472509384155
    3. 'positions' → logprob: -1.9938472509384155
    4. 'input' → logprob: -2.493847370147705
    5. 'range' → logprob: -2.868847370147705
    6. 'i' → logprob: -3.243847370147705
    7. 'ans' → logprob: -3.368847370147705
    8. 'the' → logprob: -3.868847370147705
    9. '[' → logprob: -3.993847370147705
    10. '`' → logprob: -4.118847370147705

Token 917: '1' (ID: 16)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0541681051254272
    2. 'range' → logprob: -1.1791681051254272
    3. 'positions' → logprob: -2.054168224334717
    4. '[i' → logprob: -3.054168224334717
    5. 'input' → logprob: -3.054168224334717
    6. 'for' → logprob: -3.554168224334717
    7. 'i' → logprob: -3.804168224334717
    8. 'list' → logprob: -3.929168224334717
    9. '[' → logprob: -4.179168224334717
    10. '`' → logprob: -5.304168224334717

Token 918: '..' (ID: 485)
  Prédit: ' into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' into' → logprob: -1.3603266477584839
    2. ' to' → logprob: -1.4853266477584839
    3. 'to' → logprob: -1.6103266477584839
    4. 'into' → logprob: -1.9853266477584839
    5. 'for' → logprob: -3.1103267669677734
    6. '[i' → logprob: -3.6103267669677734
    7. ' for' → logprob: -3.7353267669677734
    8. ' ' → logprob: -4.360326766967773
    9. '```' → logprob: -4.485326766967773
    10. ',' → logprob: -4.860326766967773

Token 919: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00038658222183585167
    2. 'to' → logprob: -8.875386238098145
    3. '```' → logprob: -9.125386238098145
    4. 'range' → logprob: -9.625386238098145
    5. 'print' → logprob: -10.875386238098145
    6. ' N' → logprob: -11.375386238098145
    7. '`' → logprob: -11.375386238098145
    8. '...' → logprob: -11.750386238098145
    9. 'input' → logprob: -12.250386238098145
    10. '
' → logprob: -12.375386238098145

Token 920: ' to' (ID: 316)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015165306394919753
    2. 'output' → logprob: -7.501516342163086
    3. 'for' → logprob: -8.126516342163086
    4. 'ans' → logprob: -8.626516342163086
    5. ' print' → logprob: -8.751516342163086
    6. ' =' → logprob: -9.001516342163086
    7. '=' → logprob: -9.876516342163086
    8. '
' → logprob: -10.376516342163086
    9. '   ' → logprob: -10.626516342163086
    10. 'answer' → logprob: -11.001516342163086

Token 921: ' after' (ID: 1934)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8451991081237793
    2. ''' → logprob: -1.5951991081237793
    3. 'range' → logprob: -2.5951991081237793
    4. ' [' → logprob: -2.9701991081237793
    5. '1' → logprob: -3.2201991081237793
    6. '[N' → logprob: -3.3451991081237793
    7. 'N' → logprob: -3.4701991081237793
    8. '[i' → logprob: -3.4701991081237793
    9. 'ans' → logprob: -4.220199108123779
    10. ' '' → logprob: -4.220199108123779

Token 922: ' am' (ID: 939)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.47550147771835327
    2. '```' → logprob: -2.600501537322998
    3. '_positions' → logprob: -2.725501537322998
    4. 'pos' → logprob: -2.850501537322998
    5. 'position' → logprob: -4.100501537322998
    6. '_output' → logprob: -4.225501537322998
    7. 'output' → logprob: -4.350501537322998
    8. '   ' → logprob: -4.600501537322998
    9. 's' → logprob: -4.850501537322998
    10. 'input' → logprob: -4.975501537322998

Token 923: 'ida' (ID: 2261)
  Prédit: 'ida'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ida' → logprob: -0.00801115483045578
    2. '   ' → logprob: -5.383011341094971
    3. 'id' → logprob: -7.008011341094971
    4. 'output' → logprob: -8.258010864257812
    5. '```' → logprob: -8.508010864257812
    6. 'print' → logprob: -8.633010864257812
    7. '
' → logprob: -9.133010864257812
    8. 'ada' → logprob: -9.258010864257812
    9. 'da' → logprob: -9.258010864257812
    10. 'p' → logprob: -9.258010864257812

Token 924: ',' (ID: 11)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.5606558322906494
    2. 'pos' → logprob: -1.9356558322906494
    3. 'output' → logprob: -1.9356558322906494
    4. 'inv' → logprob: -2.9356558322906494
    5. 'print' → logprob: -3.3106558322906494
    6. 'res' → logprob: -3.8106558322906494
    7. 'result' → logprob: -4.68565559387207
    8. 'rev' → logprob: -5.06065559387207
    9. '   ' → logprob: -5.43565559387207
    10. 'inverse' → logprob: -6.43565559387207

Token 925: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1122008562088013
    2. 'out' → logprob: -1.1122008562088013
    3. 'res' → logprob: -2.1122007369995117
    4. 'output' → logprob: -2.4872007369995117
    5. 'print' → logprob: -3.2372007369995117
    6. 'pos' → logprob: -3.4872007369995117
    7. 'inv' → logprob: -3.6122007369995117
    8. 'result' → logprob: -3.7372007369995117
    9. 'ans' → logprob: -5.487200736999512
    10. 'positions' → logprob: -5.487200736999512

Token 926: ' output' (ID: 4733)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -1.0257985591888428
    2. 'res' → logprob: -1.1507985591888428
    3. 'output' → logprob: -1.4007985591888428
    4. 'pos' → logprob: -3.1507985591888428
    5. 'inv' → logprob: -4.025798797607422
    6. 'result' → logprob: -4.525798797607422
    7. 'print' → logprob: -5.775798797607422
    8. 'rev' → logprob: -6.400798797607422
    9. 'inverse' → logprob: -7.650798797607422
    10. '   ' → logprob: -7.900798797607422

Token 927: ' ans' (ID: 3345)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9773969054222107
    2. ' =' → logprob: -1.4773969650268555
    3. 'positions' → logprob: -1.8523969650268555
    4. 'print' → logprob: -2.2273969650268555
    5. 'ans' → logprob: -3.1023969650268555
    6. '=[' → logprob: -3.9773969650268555
    7. ''' → logprob: -4.1023969650268555
    8. '_positions' → logprob: -4.3523969650268555
    9. '[' → logprob: -4.9773969650268555
    10. '_ans' → logprob: -5.1023969650268555

Token 928: ' mapped' (ID: 47205)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.022543607279658318
    2. ' =' → logprob: -5.022543430328369
    3. '=' → logprob: -5.147543430328369
    4. 'for' → logprob: -5.772543430328369
    5. '
' → logprob: -6.272543430328369
    6. 'ans' → logprob: -6.647543430328369
    7. '[' → logprob: -6.772543430328369
    8. '   ' → logprob: -6.897543430328369
    9. ' print' → logprob: -8.147543907165527
    10. '=[' → logprob: -8.772543907165527

Token 929: ' +' (ID: 659)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0113601684570312
    2. '=' → logprob: -1.2613601684570312
    3. '[' → logprob: -1.5113601684570312
    4. '[i' → logprob: -3.0113601684570312
    5. '=[' → logprob: -3.8863601684570312
    6. ''' → logprob: -4.636360168457031
    7. 'ans' → logprob: -4.636360168457031
    8. '(ans' → logprob: -5.136360168457031
    9. '```' → logprob: -5.636360168457031
    10. ' [' → logprob: -5.886360168457031

Token 930: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011061598779633641
    2. '[' → logprob: -8.251106262207031
    3. '[i' → logprob: -8.376106262207031
    4. '
' → logprob: -8.501106262207031
    5. ' ' → logprob: -8.501106262207031
    6. '`' → logprob: -10.251106262207031
    7. 'i' → logprob: -10.501106262207031
    8. '(' → logprob: -10.751106262207031
    9. '+' → logprob: -11.001106262207031
    10. '   ' → logprob: -11.251106262207031

Token 931: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.56233171664644e-05
    2. '
' → logprob: -11.250055313110352
    3. ' print' → logprob: -11.750055313110352
    4. 'res' → logprob: -11.875055313110352
    5. 'output' → logprob: -12.000055313110352
    6. 'ans' → logprob: -12.000055313110352
    7. 'out' → logprob: -12.125055313110352
    8. '   ' → logprob: -12.125055313110352
    9. 'result' → logprob: -12.625055313110352
    10. 'answer' → logprob: -14.375055313110352

Token 932: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.2200749754119897e-06
    2. ' print' → logprob: -14.125001907348633
    3. '   ' → logprob: -14.375001907348633
    4. '
' → logprob: -14.875001907348633
    5. 'output' → logprob: -15.375001907348633
    6. '```' → logprob: -16.000001907348633
    7. 'result' → logprob: -16.750001907348633
    8. 'for' → logprob: -17.000001907348633
    9. 'out' → logprob: -18.000001907348633
    10. 'ans' → logprob: -18.625001907348633

Token 933: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00021831797494087368
    2. 'output' → logprob: -9.250218391418457
    3. 'out' → logprob: -9.375218391418457
    4. 'result' → logprob: -11.000218391418457
    5. 'res' → logprob: -11.125218391418457
    6. '   ' → logprob: -12.875218391418457
    7. ' print' → logprob: -13.125218391418457
    8. 'for' → logprob: -14.500218391418457
    9. '
' → logprob: -15.125218391418457
    10. 'ans' → logprob: -15.625218391418457

Token 934: ' But' (ID: 3072)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10654989629983902
    2. 'out' → logprob: -3.1065499782562256
    3. 'output' → logprob: -3.2315499782562256
    4. 'inv' → logprob: -4.9815497398376465
    5. 'res' → logprob: -5.6065497398376465
    6. 'pos' → logprob: -5.8565497398376465
    7. 'for' → logprob: -6.6065497398376465
    8. 'result' → logprob: -6.9815497398376465
    9. '   ' → logprob: -7.7315497398376465
    10. 'rev' → logprob: -8.231550216674805

Token 935: ' the' (ID: 290)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5640692114830017
    2. 'inv' → logprob: -0.9390692114830017
    3. '#' → logprob: -4.3140692710876465
    4. 'inverse' → logprob: -4.8140692710876465
    5. 'output' → logprob: -5.1890692710876465
    6. 'rev' → logprob: -5.4390692710876465
    7. 'perm' → logprob: -5.8140692710876465
    8. 'res' → logprob: -6.0640692710876465
    9. '   ' → logprob: -6.6890692710876465
    10. 'out' → logprob: -7.3140692710876465

Token 936: ' problem' (ID: 4792)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9453353881835938
    2. 'output' → logprob: -1.4453353881835938
    3. 'inv' → logprob: -1.5703353881835938
    4. 'out' → logprob: -2.9453353881835938
    5. 'res' → logprob: -3.1953353881835938
    6. '#' → logprob: -3.3203353881835938
    7. 'result' → logprob: -4.820335388183594
    8. 'inverse' → logprob: -4.820335388183594
    9. 'positions' → logprob: -4.945335388183594
    10. 'rev' → logprob: -5.070335388183594

Token 937: ' says' (ID: 5003)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9075784683227539
    2. 'is' → logprob: -1.407578468322754
    3. ' wants' → logprob: -2.032578468322754
    4. '#' → logprob: -2.657578468322754
    5. ' requires' → logprob: -3.032578468322754
    6. 'requires' → logprob: -3.407578468322754
    7. '=' → logprob: -4.407578468322754
    8. ':' → logprob: -4.907578468322754
    9. '   ' → logprob: -5.032578468322754
    10. 's' → logprob: -5.157578468322754

Token 938: ' output' (ID: 4733)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.286208987236023
    2. '#' → logprob: -1.411208987236023
    3. 'for' → logprob: -1.411208987236023
    4. 'the' → logprob: -2.1612091064453125
    5. ' for' → logprob: -3.0362091064453125
    6. 'print' → logprob: -3.6612091064453125
    7. 'pos' → logprob: -4.5362091064453125
    8. 'output' → logprob: -4.9112091064453125
    9. ' the' → logprob: -5.1612091064453125
    10. '
' → logprob: -5.2862091064453125

Token 939: ' the' (ID: 290)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11481213569641113
    2. '('' → logprob: -2.739812135696411
    3. '(*' → logprob: -3.739812135696411
    4. ''N' → logprob: -4.864811897277832
    5. '"' → logprob: -4.989811897277832
    6. '(' → logprob: -6.739811897277832
    7. 'ans' → logprob: -6.864811897277832
    8. 'N' → logprob: -6.989811897277832
    9. ''a' → logprob: -7.739811897277832
    10. '
' → logprob: -8.114811897277832

Token 940: ' labels' (ID: 17125)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.9067697525024414
    2. 'final' → logprob: -1.9067697525024414
    3. 'inverse' → logprob: -2.0317697525024414
    4. 'per' → logprob: -2.1567697525024414
    5. 'perm' → logprob: -2.9067697525024414
    6. 'ans' → logprob: -3.0317697525024414
    7. 'position' → logprob: -3.1567697525024414
    8. 'mapping' → logprob: -4.531769752502441
    9. '[' → logprob: -5.531769752502441
    10. 'output' → logprob: -5.531769752502441

Token 941: ' at' (ID: 540)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8634089231491089
    2. 'out' → logprob: -1.6134089231491089
    3. 'output' → logprob: -2.1134090423583984
    4. 'labels' → logprob: -2.7384090423583984
    5. 'res' → logprob: -2.8634090423583984
    6. 'print' → logprob: -2.9884090423583984
    7. 'for' → logprob: -3.3634090423583984
    8. 'positions' → logprob: -3.9884090423583984
    9. 'inv' → logprob: -4.363409042358398
    10. 'result' → logprob: -5.363409042358398

Token 942: ' the' (ID: 290)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.12889595329761505
    2. 'i' → logprob: -3.0038959980010986
    3. 'each' → logprob: -3.8788959980010986
    4. 'output' → logprob: -4.6288957595825195
    5. 'position' → logprob: -4.7538957595825195
    6. 'line' → logprob: -5.1288957595825195
    7. 'input' → logprob: -5.5038957595825195
    8. 'for' → logprob: -5.8788957595825195
    9. 'pos' → logprob: -5.8788957595825195
    10. '1' → logprob: -6.0038957595825195

Token 943: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.6143900156021118
    2. 'top' → logprob: -1.4893900156021118
    3. 'positions' → logprob: -2.3643898963928223
    4. 'output' → logprob: -2.7393898963928223
    5. 'end' → logprob: -2.9893898963928223
    6. 'final' → logprob: -4.614389896392822
    7. 'input' → logprob: -4.739389896392822
    8. 'i' → logprob: -7.114389896392822
    9. '```' → logprob: -7.114389896392822
    10. 'position' → logprob: -7.239389896392822

Token 944: ' in' (ID: 306)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002086615888401866
    2. 'output' → logprob: -7.377086639404297
    3. 'res' → logprob: -7.752086639404297
    4. 'out' → logprob: -7.877086639404297
    5. 'for' → logprob: -7.877086639404297
    6. 'result' → logprob: -8.627086639404297
    7. '   ' → logprob: -10.502086639404297
    8. 'ans' → logprob: -11.252086639404297
    9. 'positions' → logprob: -11.627086639404297
    10. '```' → logprob: -11.877086639404297

Token 945: ' the' (ID: 290)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.010915413498878479
    2. 'the' → logprob: -5.260915279388428
    3. 'positions' → logprob: -6.010915279388428
    4. '[' → logprob: -7.260915279388428
    5. 'input' → logprob: -7.635915279388428
    6. ' order' → logprob: -7.635915279388428
    7. 'ans' → logprob: -7.885915279388428
    8. 'one' → logprob: -8.385915756225586
    9. 'top' → logprob: -8.510915756225586
    10. '
' → logprob: -9.135915756225586

Token 946: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.015529927797615528
    2. 'input' → logprob: -5.640530109405518
    3. 'original' → logprob: -5.765530109405518
    4. 'positions' → logprob: -5.890530109405518
    5. ' order' → logprob: -6.015530109405518
    6. 'top' → logprob: -7.140530109405518
    7. 'correct' → logprob: -7.140530109405518
    8. 'final' → logprob: -7.640530109405518
    9. '[' → logprob: -8.51552963256836
    10. '
' → logprob: -9.01552963256836

Token 947: ' from' (ID: 591)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -1.254716157913208
    2. 'output' → logprob: -1.754716157913208
    3. 'pos' → logprob: -1.879716157913208
    4. 'print' → logprob: -2.129716157913208
    5. 'res' → logprob: -2.379716157913208
    6. '   ' → logprob: -2.629716157913208
    7. 'for' → logprob: -3.629716157913208
    8. 'positions' → logprob: -4.004715919494629
    9. 'inv' → logprob: -4.254715919494629
    10. 'result' → logprob: -4.254715919494629

Token 948: ' left' (ID: 3561)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16907620429992676
    2. '1' → logprob: -1.9190762042999268
    3. 'top' → logprob: -4.794075965881348
    4. 'bottom' → logprob: -8.669075965881348
    5. 'range' → logprob: -8.794075965881348
    6. 'i' → logprob: -8.919075965881348
    7. 'ans' → logprob: -10.794075965881348
    8. 'input' → logprob: -11.669075965881348
    9. '```' → logprob: -11.794075965881348
    10. 'for' → logprob: -11.919075965881348

Token 949: ' to' (ID: 316)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07769124209880829
    2. 'for' → logprob: -3.3276913166046143
    3. 'ans' → logprob: -4.077691078186035
    4. 'output' → logprob: -4.077691078186035
    5. '=' → logprob: -6.952691078186035
    6. 'out' → logprob: -7.327691078186035
    7. '```' → logprob: -7.702691078186035
    8. 'positions' → logprob: -7.827691078186035
    9. ' for' → logprob: -8.202691078186035
    10. ' =' → logprob: -8.202691078186035

Token 950: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.7032747864723206
    2. '1' → logprob: -0.9532747864723206
    3. 'top' → logprob: -2.453274726867676
    4. 'print' → logprob: -3.703274726867676
    5. 'output' → logprob: -4.953274726867676
    6. 'ans' → logprob: -7.078274726867676
    7. 'N' → logprob: -8.078274726867676
    8. 'input' → logprob: -8.328274726867676
    9. '```' → logprob: -9.078274726867676
    10. 'answer' → logprob: -9.203274726867676

Token 951: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20903776586055756
    2. 'out' → logprob: -2.5840377807617188
    3. 'output' → logprob: -2.7090377807617188
    4. 'res' → logprob: -3.4590377807617188
    5. 'result' → logprob: -4.334037780761719
    6. 'for' → logprob: -6.834037780761719
    7. 'pos' → logprob: -8.709037780761719
    8. 'labels' → logprob: -8.834037780761719
    9. '   ' → logprob: -8.959037780761719
    10. 'inv' → logprob: -9.209037780761719

Token 952: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.060226816684007645
    2. 'output' → logprob: -3.1852269172668457
    3. 'result' → logprob: -5.060226917266846
    4. 'out' → logprob: -5.685226917266846
    5. 'for' → logprob: -5.685226917266846
    6. 'res' → logprob: -5.935226917266846
    7. '```' → logprob: -7.435226917266846
    8. 'labels' → logprob: -8.060226440429688
    9. 'positions' → logprob: -9.185226440429688
    10. 'bottom' → logprob: -9.560226440429688

Token 953: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.36680400371551514
    2. 'out' → logprob: -1.9918040037155151
    3. 'output' → logprob: -2.1168041229248047
    4. 'result' → logprob: -3.3668041229248047
    5. 'res' → logprob: -4.366804122924805
    6. 'for' → logprob: -6.866804122924805
    7. '```' → logprob: -6.866804122924805
    8. 'pos' → logprob: -8.366804122924805
    9. 'labels' → logprob: -8.616804122924805
    10. 'positions' → logprob: -8.991804122924805

Token 954: ' The' (ID: 623)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.6056294441223145
    2. 'inv' → logprob: -1.3556294441223145
    3. 'res' → logprob: -2.4806294441223145
    4. 'output' → logprob: -2.9806294441223145
    5. 'pos' → logprob: -3.4806294441223145
    6. 'result' → logprob: -4.6056294441223145
    7. 'rev' → logprob: -5.1056294441223145
    8. 'for' → logprob: -5.7306294441223145
    9. 'print' → logprob: -5.7306294441223145
    10. 'bottom' → logprob: -5.8556294441223145

Token 955: ' labels' (ID: 17125)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7848595976829529
    2. 'inv' → logprob: -1.0348596572875977
    3. 'res' → logprob: -2.7848596572875977
    4. 'out' → logprob: -3.4098596572875977
    5. 'bottom' → logprob: -4.034859657287598
    6. 'rev' → logprob: -4.159859657287598
    7. 'output' → logprob: -4.159859657287598
    8. '#' → logprob: -4.159859657287598
    9. 'positions' → logprob: -4.784859657287598
    10. 'inverse' → logprob: -4.909859657287598

Token 956: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13229352235794067
    2. 'at' → logprob: -3.132293462753296
    3. 'positions' → logprob: -3.132293462753296
    4. '_positions' → logprob: -4.257293701171875
    5. '_at' → logprob: -4.757293701171875
    6. ' =' → logprob: -5.382293701171875
    7. '=[' → logprob: -5.382293701171875
    8. 'labels' → logprob: -7.382293701171875
    9. 'pos' → logprob: -7.507293701171875
    10. '_pos' → logprob: -7.632293701171875

Token 957: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.26186326146125793
    2. 'the' → logprob: -1.5118632316589355
    3. 'top' → logprob: -4.6368632316589355
    4. 'output' → logprob: -9.636863708496094
    5. ' bottom' → logprob: -9.886863708496094
    6. '#' → logprob: -11.136863708496094
    7. 'input' → logprob: -11.511863708496094
    8. '0' → logprob: -11.636863708496094
    9. '
' → logprob: -11.761863708496094
    10. ' the' → logprob: -11.886863708496094

Token 958: ' are' (ID: 553)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03464696556329727
    2. ' =' → logprob: -3.784646987915039
    3. 'are' → logprob: -5.534646987915039
    4. '=[' → logprob: -5.659646987915039
    5. 'positions' → logprob: -7.034646987915039
    6. '=[]' → logprob: -7.284646987915039
    7. ' are' → logprob: -7.659646987915039
    8. '=[]
' → logprob: -7.784646987915039
    9. 'at' → logprob: -8.159646987915039
    10. '=list' → logprob: -8.659646987915039

Token 959: ' from' (ID: 591)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005740594584494829
    2. '[in' → logprob: -6.505740642547607
    3. '[str' → logprob: -6.755740642547607
    4. '[i' → logprob: -7.005740642547607
    5. 'ans' → logprob: -7.380740642547607
    6. '['' → logprob: -8.25574016571045
    7. '[result' → logprob: -8.38074016571045
    8. ' [' → logprob: -8.50574016571045
    9. '[p' → logprob: -8.50574016571045
    10. '[len' → logprob: -9.38074016571045

Token 960: ' top' (ID: 2344)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03681807592511177
    2. 'range' → logprob: -3.786818027496338
    3. '0' → logprob: -4.536818027496338
    4. 'ans' → logprob: -6.536818027496338
    5. '[i' → logprob: -7.536818027496338
    6. '1' → logprob: -7.536818027496338
    7. '
' → logprob: -9.786818504333496
    8. ' [' → logprob: -10.036818504333496
    9. 'sorted' → logprob: -10.536818504333496
    10. '[in' → logprob: -10.661818504333496

Token 961: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0516339540481567
    2. '
' → logprob: -1.9266339540481567
    3. 'positions' → logprob: -2.051633834838867
    4. 'for' → logprob: -2.301633834838867
    5. 'indices' → logprob: -2.676633834838867
    6. 'output' → logprob: -3.051633834838867
    7. 'labels' → logprob: -3.551633834838867
    8. '[i' → logprob: -4.176633834838867
    9. '[' → logprob: -4.426633834838867
    10. '```' → logprob: -4.676633834838867

Token 962: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5949059128761292
    2. 'positions' → logprob: -1.2199058532714844
    3. '
' → logprob: -3.3449058532714844
    4. ')' → logprob: -4.219905853271484
    5. 'position' → logprob: -4.219905853271484
    6. 'range' → logprob: -4.219905853271484
    7. 'i' → logprob: -4.594905853271484
    8. 'pos' → logprob: -4.719905853271484
    9. '[' → logprob: -5.094905853271484
    10. 'ans' → logprob: -5.094905853271484

Token 963: '..' (ID: 485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4282352924346924
    2. '...' → logprob: -2.3032352924346924
    3. ' to' → logprob: -2.8032352924346924
    4. 'to' → logprob: -3.8032352924346924
    5. 'positions' → logprob: -3.8032352924346924
    6. 'for' → logprob: -3.9282352924346924
    7. ',' → logprob: -4.303235054016113
    8. '..' → logprob: -4.553235054016113
    9. ')+' → logprob: -4.678235054016113
    10. ')]' → logprob: -4.928235054016113

Token 964: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04053064435720444
    2. ')' → logprob: -3.9155306816101074
    3. '...' → logprob: -4.540530681610107
    4. ' to' → logprob: -5.165530681610107
    5. 'to' → logprob: -6.040530681610107
    6. ' N' → logprob: -7.790530681610107
    7. '..' → logprob: -9.04053020477295
    8. ' )' → logprob: -9.04053020477295
    9. '
' → logprob: -9.66553020477295
    10. ')
' → logprob: -10.16553020477295

Token 965: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7465671300888062
    2. ')
' → logprob: -0.8715671300888062
    3. '),' → logprob: -3.3715672492980957
    4. 'positions' → logprob: -3.6215672492980957
    5. '):
' → logprob: -3.7465672492980957
    6. '):' → logprob: -5.371567249298096
    7. 'labels' → logprob: -5.746567249298096
    8. '
' → logprob: -5.746567249298096
    9. ',' → logprob: -5.996567249298096
    10. 'to' → logprob: -6.121567249298096

Token 966: ' mapped' (ID: 47205)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -1.3398308753967285
    2. 'pos' → logprob: -1.5898308753967285
    3. 'output' → logprob: -1.9648308753967285
    4. 'res' → logprob: -2.0898308753967285
    5. 'out' → logprob: -2.2148308753967285
    6. 'positions' → logprob: -3.3398308753967285
    7. 'print' → logprob: -3.5898308753967285
    8. 'result' → logprob: -3.5898308753967285
    9. 'bottom' → logprob: -4.3398308753967285
    10. 'for' → logprob: -4.3398308753967285

Token 967: ' according' (ID: 7065)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3364046812057495
    2. '[' → logprob: -1.9614046812057495
    3. 'to' → logprob: -1.9614046812057495
    4. '=[' → logprob: -2.086404800415039
    5. ' =' → logprob: -2.711404800415039
    6. 'positions' → logprob: -2.711404800415039
    7. '```' → logprob: -2.961404800415039
    8. '[i' → logprob: -3.711404800415039
    9. 'by' → logprob: -3.711404800415039
    10. 'inv' → logprob: -4.586404800415039

Token 968: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0019637243822216988
    2. ' to' → logprob: -6.3769636154174805
    3. '_to' → logprob: -8.75196361541748
    4. '
' → logprob: -9.75196361541748
    5. 'ans' → logprob: -11.12696361541748
    6. '```' → logprob: -11.50196361541748
    7. '=' → logprob: -11.87696361541748
    8. '_ans' → logprob: -12.25196361541748
    9. 'To' → logprob: -13.25196361541748
    10. '`' → logprob: -13.50196361541748

Token 969: ' am' (ID: 939)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.005755526013672352
    2. '[' → logprob: -5.255755424499512
    3. 'range' → logprob: -8.255755424499512
    4. '(ans' → logprob: -9.255755424499512
    5. ' ans' → logprob: -9.630755424499512
    6. 'inv' → logprob: -10.005755424499512
    7. '{' → logprob: -11.255755424499512
    8. '	ans' → logprob: -11.505755424499512
    9. 'answer' → logprob: -12.255755424499512
    10. '`' → logprob: -12.255755424499512

Token 970: 'ida' (ID: 2261)
  Prédit: 'ida'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ida' → logprob: -0.10095512121915817
    2. 'da' → logprob: -2.475955009460449
    3. '   ' → logprob: -4.725955009460449
    4. 'd' → logprob: -8.10095500946045
    5. 'i' → logprob: -8.22595500946045
    6. '```' → logprob: -8.22595500946045
    7. '
' → logprob: -8.35095500946045
    8. 'ada' → logprob: -8.35095500946045
    9. 'id' → logprob: -8.60095500946045
    10. '=' → logprob: -8.60095500946045

Token 971: ':' (ID: 25)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9732546806335449
    2. 'res' → logprob: -1.473254680633545
    3. 'out' → logprob: -1.848254680633545
    4. 'output' → logprob: -2.348254680633545
    5. 'result' → logprob: -2.598254680633545
    6. 'for' → logprob: -3.348254680633545
    7. 'inv' → logprob: -4.723254680633545
    8. 'pos' → logprob: -4.973254680633545
    9. 'bottom' → logprob: -5.223254680633545
    10. 'labels' → logprob: -5.723254680633545

Token 972: ' for' (ID: 395)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -1.3460246324539185
    2. 'res' → logprob: -1.5960246324539185
    3. 'result' → logprob: -1.9710246324539185
    4. 'for' → logprob: -2.096024513244629
    5. 'print' → logprob: -2.471024513244629
    6. 'bottom' → logprob: -2.596024513244629
    7. 'out' → logprob: -2.596024513244629
    8. 'labels' → logprob: -3.721024513244629
    9. 'positions' → logprob: -5.221024513244629
    10. 'pos' → logprob: -5.846024513244629

Token 973: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009116863831877708
    2. 'pos' → logprob: -5.6341166496276855
    3. 'range' → logprob: -5.7591166496276855
    4. '
' → logprob: -7.2591166496276855
    5. ' i' → logprob: -7.5091166496276855
    6. 'out' → logprob: -7.6341166496276855
    7. 'val' → logprob: -9.259117126464844
    8. 'output' → logprob: -9.509117126464844
    9. 'position' → logprob: -9.634117126464844
    10. 'j' → logprob: -9.634117126464844

Token 974: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.435139898210764e-05
    2. ' i' → logprob: -10.375083923339844
    3. 'position' → logprob: -10.750083923339844
    4. '0' → logprob: -11.500083923339844
    5. '```' → logprob: -11.625083923339844
    6. 'range' → logprob: -12.250083923339844
    7. '`' → logprob: -13.000083923339844
    8. '
' → logprob: -13.875083923339844
    9. 'output' → logprob: -14.125083923339844
    10. 'index' → logprob: -14.500083923339844

Token 975: ' from' (ID: 591)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10167739540338516
    2. ' in' → logprob: -2.476677417755127
    3. ':' → logprob: -5.726677417755127
    4. ':
' → logprob: -5.851677417755127
    5. '   ' → logprob: -6.726677417755127
    6. ',' → logprob: -6.726677417755127
    7. 'i' → logprob: -6.976677417755127
    8. '=' → logprob: -7.226677417755127
    9. 'range' → logprob: -7.226677417755127
    10. 'for' → logprob: -7.601677417755127

Token 976: ' top' (ID: 2344)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004101908300071955
    2. 'range' → logprob: -5.504101753234863
    3. ' range' → logprob: -10.754101753234863
    4. ' ' → logprob: -13.629101753234863
    5. '```' → logprob: -14.879101753234863
    6. '
' → logprob: -15.504101753234863
    7. '1' → logprob: -15.504101753234863
    8. 'i' → logprob: -16.12910270690918
    9. '[' → logprob: -18.00410270690918
    10. '`' → logprob: -18.12910270690918

Token 977: ' ' (ID: 220)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3458269536495209
    2. ' in' → logprob: -1.4708269834518433
    3. 'to' → logprob: -3.9708268642425537
    4. 'range' → logprob: -4.095827102661133
    5. '   ' → logprob: -4.720827102661133
    6. ' to' → logprob: -5.595827102661133
    7. 'for' → logprob: -5.595827102661133
    8. 'i' → logprob: -6.220827102661133
    9. ',' → logprob: -6.470827102661133
    10. ':' → logprob: -6.720827102661133

Token 978: '1' (ID: 16)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6595341563224792
    2. 'range' → logprob: -0.9095341563224792
    3. 'to' → logprob: -3.034534215927124
    4. 'for' → logprob: -4.284533977508545
    5. ' in' → logprob: -5.784533977508545
    6. '1' → logprob: -6.034533977508545
    7. '0' → logprob: -6.034533977508545
    8. '   ' → logprob: -6.159533977508545
    9. ':' → logprob: -6.284533977508545
    10. '
' → logprob: -6.784533977508545

Token 979: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.32047373056411743
    2. ' to' → logprob: -1.3204736709594727
    3. ',' → logprob: -6.070473670959473
    4. 'for' → logprob: -6.820473670959473
    5. '...' → logprob: -7.570473670959473
    6. '   ' → logprob: -7.570473670959473
    7. ' ' → logprob: -7.820473670959473
    8. '
' → logprob: -7.820473670959473
    9. ' for' → logprob: -8.070473670959473
    10. '..' → logprob: -8.695473670959473

Token 980: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0020142868161201477
    2. 'range' → logprob: -6.25201416015625
    3. '```' → logprob: -10.62701416015625
    4. '0' → logprob: -10.62701416015625
    5. '1' → logprob: -11.00201416015625
    6. '
' → logprob: -11.75201416015625
    7. ' N' → logprob: -12.00201416015625
    8. ' range' → logprob: -13.12701416015625
    9. '`' → logprob: -14.00201416015625
    10. 'n' → logprob: -14.50201416015625

Token 981: ',
' (ID: 412)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.301260381937027
    2. ' for' → logprob: -2.926260471343994
    3. '   ' → logprob: -3.051260471343994
    4. ':
' → logprob: -3.176260471343994
    5. ':' → logprob: -3.551260471343994
    6. ',' → logprob: -3.801260471343994
    7. 'i' → logprob: -4.051260471343994
    8. 'output' → logprob: -4.176260471343994
    9. 'print' → logprob: -4.801260471343994
    10. '
' → logprob: -5.301260471343994

Token 982: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08249938488006592
    2. '   ' → logprob: -3.0824995040893555
    3. 'for' → logprob: -3.9574995040893555
    4. 'range' → logprob: -5.3324995040893555
    5. ' print' → logprob: -5.7074995040893555
    6. ' for' → logprob: -5.9574995040893555
    7. 'i' → logprob: -6.4574995040893555
    8. '[i' → logprob: -7.9574995040893555
    9. 'output' → logprob: -8.207499504089355
    10. 'ans' → logprob: -8.332499504089355

Token 983: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09768028557300568
    2. 'for' → logprob: -2.7226803302764893
    3. '   ' → logprob: -3.7226803302764893
    4. 'range' → logprob: -6.47268009185791
    5. ' for' → logprob: -7.22268009185791
    6. 'output' → logprob: -8.09768009185791
    7. 'i' → logprob: -8.59768009185791
    8. '```' → logprob: -8.84768009185791
    9. ' print' → logprob: -9.22268009185791
    10. '
' → logprob: -9.34768009185791

Token 984: ' we' (ID: 581)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20531050860881805
    2. 'for' → logprob: -2.330310583114624
    3. 'out' → logprob: -3.705310583114624
    4. '   ' → logprob: -4.080310344696045
    5. 'output' → logprob: -4.080310344696045
    6. 'res' → logprob: -4.330310344696045
    7. 'bottom' → logprob: -4.830310344696045
    8. 'result' → logprob: -6.205310344696045
    9. 'inv' → logprob: -6.330310344696045
    10. ' for' → logprob: -6.580310344696045

Token 985: ' follow' (ID: 2622)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09410160779953003
    2. 'for' → logprob: -2.594101667404175
    3. 'output' → logprob: -4.594101428985596
    4. 'i' → logprob: -6.469101428985596
    5. '#' → logprob: -6.969101428985596
    6. ' for' → logprob: -7.969101428985596
    7. 'write' → logprob: -7.969101428985596
    8. ' print' → logprob: -8.219101905822754
    9. '=' → logprob: -8.219101905822754
    10. '#print' → logprob: -8.594101905822754

Token 986: ' am' (ID: 939)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.115524172782898
    2. 'i' → logprob: -1.365524172782898
    3. 'ans' → logprob: -1.365524172782898
    4. 'the' → logprob: -2.1155242919921875
    5. '```' → logprob: -4.6155242919921875
    6. 'pos' → logprob: -5.2405242919921875
    7. ' ans' → logprob: -5.7405242919921875
    8. 'position' → logprob: -5.9905242919921875
    9. 'for' → logprob: -5.9905242919921875
    10. ' the' → logprob: -6.1155242919921875

Token 987: 'ida' (ID: 2261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8018136024475098
    2. 'i' → logprob: -1.0518136024475098
    3. 'positions' → logprob: -2.3018136024475098
    4. 'd' → logprob: -3.5518136024475098
    5. 'ida' → logprob: -3.8018136024475098
    6. 'pos' → logprob: -4.17681360244751
    7. 'da' → logprob: -4.92681360244751
    8. 'for' → logprob: -5.80181360244751
    9. 'p' → logprob: -5.80181360244751
    10. '[i' → logprob: -5.92681360244751

Token 988: ' down' (ID: 1917)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9996829628944397
    2. 'positions' → logprob: -1.499682903289795
    3. '
' → logprob: -2.124682903289795
    4. ',' → logprob: -3.124682903289795
    5. 'pos' → logprob: -3.499682903289795
    6. 'for' → logprob: -3.499682903289795
    7. 'bottom' → logprob: -3.624682903289795
    8. 'i' → logprob: -3.749682903289795
    9. 'inv' → logprob: -4.249682903289795
    10. 'position' → logprob: -4.374682903289795

Token 989: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038804770447313786
    2. 'print' → logprob: -5.878880500793457
    3. 'for' → logprob: -7.753880500793457
    4. 'output' → logprob: -8.378880500793457
    5. 'indices' → logprob: -9.253880500793457
    6. 'result' → logprob: -9.503880500793457
    7. 'ans' → logprob: -9.628880500793457
    8. 'i' → logprob: -10.003880500793457
    9. 'answer' → logprob: -10.753880500793457
    10. '
' → logprob: -10.753880500793457

Token 990: ' reach' (ID: 7627)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004200674593448639
    2. ' print' → logprob: -8.875419616699219
    3. 'output' → logprob: -9.375419616699219
    4. 'for' → logprob: -9.375419616699219
    5. 'write' → logprob: -9.500419616699219
    6. 'find' → logprob: -11.125419616699219
    7. '
' → logprob: -12.125419616699219
    8. '#print' → logprob: -12.625419616699219
    9. '#' → logprob: -12.875419616699219
    10. '```' → logprob: -13.000419616699219

Token 991: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10387860983610153
    2. '(ans' → logprob: -3.1038784980773926
    3. 'str' → logprob: -3.6038784980773926
    4. 'i' → logprob: -4.353878498077393
    5. 'range' → logprob: -5.478878498077393
    6. ' ans' → logprob: -5.853878498077393
    7. 'print' → logprob: -6.478878498077393
    8. '   ' → logprob: -6.728878498077393
    9. 'for' → logprob: -6.978878498077393
    10. '[i' → logprob: -7.353878498077393

Token 992: '[i' (ID: 1768)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6564244031906128
    2. 'for' → logprob: -1.4064244031906128
    3. 'positions' → logprob: -2.2814245223999023
    4. 'output' → logprob: -3.4064245223999023
    5. '```' → logprob: -3.7814245223999023
    6. 'i' → logprob: -4.156424522399902
    7. '
' → logprob: -4.531424522399902
    8. 'indices' → logprob: -4.656424522399902
    9. '[i' → logprob: -4.656424522399902
    10. '   ' → logprob: -4.906424522399902

Token 993: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4203316867351532
    2. ']
' → logprob: -1.4203317165374756
    3. ']+' → logprob: -2.5453317165374756
    4. '])' → logprob: -5.2953314781188965
    5. ')]' → logprob: -5.7953314781188965
    6. '])
' → logprob: -5.7953314781188965
    7. '],' → logprob: -5.7953314781188965
    8. '   ' → logprob: -6.1703314781188965
    9. ']:
' → logprob: -6.5453314781188965
    10. ')]
' → logprob: -6.7953314781188965

Token 994: ' (' (ID: 350)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -1.1510061025619507
    2. 'output' → logprob: -1.6510061025619507
    3. '   ' → logprob: -2.1510062217712402
    4. 'print' → logprob: -2.4010062217712402
    5. 'positions' → logprob: -2.7760062217712402
    6. 'pos' → logprob: -2.9010062217712402
    7. 'for' → logprob: -3.2760062217712402
    8. 'result' → logprob: -3.4010062217712402
    9. 'bottom' → logprob: -3.4010062217712402
    10. 'res' → logprob: -3.9010062217712402

Token 995: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13859923183918
    2. '+' → logprob: -3.138599157333374
    3. ')
' → logprob: -3.513599157333374
    4. 'for' → logprob: -4.513599395751953
    5. '#' → logprob: -4.888599395751953
    6. '
' → logprob: -5.388599395751953
    7. '   ' → logprob: -5.513599395751953
    8. ')+' → logprob: -5.638599395751953
    9. ']' → logprob: -5.763599395751953
    10. ' for' → logprob: -5.888599395751953

Token 996: '-based' (ID: 8235)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3592231571674347
    2. ']+' → logprob: -1.2342231273651123
    3. ']
' → logprob: -5.359223365783691
    4. '])' → logprob: -5.609223365783691
    5. ']-' → logprob: -7.234223365783691
    6. '])
' → logprob: -7.234223365783691
    7. ']+=' → logprob: -8.359223365783691
    8. 'based' → logprob: -9.609223365783691
    9. '])+' → logprob: -9.734223365783691
    10. ')' → logprob: -9.984223365783691

Token 997: ' index' (ID: 3472)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3225184381008148
    2. ')' → logprob: -1.4475184679031372
    3. '   ' → logprob: -3.6975183486938477
    4. 'for' → logprob: -5.322518348693848
    5. '
' → logprob: -5.572518348693848
    6. ']' → logprob: -6.197518348693848
    7. '#' → logprob: -7.322518348693848
    8. '])
' → logprob: -7.447518348693848
    9. '```' → logprob: -7.572518348693848
    10. ',' → logprob: -7.822518348693848

Token 998: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8365933895111084
    2. ')
' → logprob: -0.8365933895111084
    3. ']' → logprob: -3.4615933895111084
    4. '   ' → logprob: -3.5865933895111084
    5. '
' → logprob: -3.7115933895111084
    6. 'for' → logprob: -4.4615936279296875
    7. 'positions' → logprob: -5.2115936279296875
    8. '#' → logprob: -5.5865936279296875
    9. '])' → logprob: -5.7115936279296875
    10. ']
' → logprob: -5.7115936279296875

Token 999: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.4156124591827393
    2. 'out' → logprob: -1.6656124591827393
    3. 'inv' → logprob: -1.9156124591827393
    4. 'output' → logprob: -2.2906124591827393
    5. 'pos' → logprob: -2.5406124591827393
    6. 'result' → logprob: -2.6656124591827393
    7. 'bottom' → logprob: -3.2906124591827393
    8. 'positions' → logprob: -3.5406124591827393
    9. 'for' → logprob: -3.6656124591827393
    10. 'print' → logprob: -3.7906124591827393

Token 1000: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.748013973236084
    2. 'pos' → logprob: -1.998013973236084
    3. 'output' → logprob: -2.248013973236084
    4. 'out' → logprob: -2.373013973236084
    5. 'inv' → logprob: -2.373013973236084
    6. 'result' → logprob: -2.873013973236084
    7. 'bottom' → logprob: -3.498013973236084
    8. 'label' → logprob: -5.873013973236084
    9. 'labels' → logprob: -5.873013973236084
    10. 'rev' → logprob: -6.373013973236084

Token 1001: ' So' (ID: 2632)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -1.0959728956222534
    2. 'res' → logprob: -1.3459728956222534
    3. 'out' → logprob: -1.8459728956222534
    4. 'inv' → logprob: -2.095973014831543
    5. 'pos' → logprob: -2.345973014831543
    6. 'result' → logprob: -3.845973014831543
    7. 'bottom' → logprob: -6.095973014831543
    8. 'rev' → logprob: -6.595973014831543
    9. 'labels' → logprob: -7.095973014831543
    10. 'inverse' → logprob: -7.095973014831543

Token 1002: ' output' (ID: 4733)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6463181972503662
    2. 'pos' → logprob: -1.1463181972503662
    3. 'inv' → logprob: -2.396318197250366
    4. 'output' → logprob: -3.896318197250366
    5. 'result' → logprob: -4.146318435668945
    6. 'out' → logprob: -4.146318435668945
    7. 'bottom' → logprob: -4.771318435668945
    8. 'inverse' → logprob: -6.396318435668945
    9. 'labels' → logprob: -6.646318435668945
    10. 'positions' → logprob: -7.146318435668945

Token 1003: ' is' (ID: 382)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12595944106578827
    2. '[' → logprob: -2.5009593963623047
    3. '"' → logprob: -3.8759593963623047
    4. 'print' → logprob: -4.375959396362305
    5. 'ans' → logprob: -7.375959396362305
    6. '['' → logprob: -7.625959396362305
    7. '[i' → logprob: -7.750959396362305
    8. ' '' → logprob: -8.500959396362305
    9. '   ' → logprob: -9.000959396362305
    10. ' [' → logprob: -9.125959396362305

Token 1004: ' bottom' (ID: 8725)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06621305644512177
    2. '['' → logprob: -2.9412131309509277
    3. ''' → logprob: -6.191213130950928
    4. '["' → logprob: -6.191213130950928
    5. 'res' → logprob: -6.566213130950928
    6. '[out' → logprob: -6.691213130950928
    7. 'result' → logprob: -7.441213130950928
    8. 'out' → logprob: -7.441213130950928
    9. 'ans' → logprob: -7.691213130950928
    10. '[result' → logprob: -7.816213130950928

Token 1005: ' labels' (ID: 17125)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.6022115349769592
    2. '_labels' → logprob: -1.3522114753723145
    3. '_pos' → logprob: -2.4772114753723145
    4. ' =' → logprob: -3.3522114753723145
    5. 'labels' → logprob: -3.9772114753723145
    6. '_order' → logprob: -4.3522114753723145
    7. 'positions' → logprob: -4.3522114753723145
    8. '_indices' → logprob: -4.9772114753723145
    9. '_line' → logprob: -5.8522114753723145
    10. '=' → logprob: -5.9772114753723145

Token 1006: ' as' (ID: 472)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6240731477737427
    2. 'out' → logprob: -1.6240731477737427
    3. 'output' → logprob: -2.124073028564453
    4. 'bottom' → logprob: -2.749073028564453
    5. 'res' → logprob: -3.624073028564453
    6. 'inv' → logprob: -3.624073028564453
    7. 'result' → logprob: -4.499073028564453
    8. '```' → logprob: -4.749073028564453
    9. 'for' → logprob: -5.624073028564453
    10. 'pos' → logprob: -6.249073028564453

Token 1007: ' per' (ID: 777)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014931040816009045
    2. '['' → logprob: -4.3899312019348145
    3. '["' → logprob: -7.7649312019348145
    4. '[in' → logprob: -8.014930725097656
    5. ''' → logprob: -8.264930725097656
    6. '[a' → logprob: -8.389930725097656
    7. '[str' → logprob: -8.514930725097656
    8. '[result' → logprob: -8.764930725097656
    9. ' [' → logprob: -9.014930725097656
    10. '[out' → logprob: -9.264930725097656

Token 1008: ' ans' (ID: 3345)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4261353313922882
    2. 'ans' → logprob: -2.301135301589966
    3. ''' → logprob: -2.551135301589966
    4. 'inv' → logprob: -2.926135301589966
    5. '[i' → logprob: -3.801135301589966
    6. 'sorted' → logprob: -4.551135540008545
    7. 'out' → logprob: -4.801135540008545
    8. 'positions' → logprob: -4.926135540008545
    9. 'answer' → logprob: -5.051135540008545
    10. 'res' → logprob: -5.301135540008545

Token 1009: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6953595280647278
    2. 'out' → logprob: -1.445359468460083
    3. 'res' → logprob: -2.445359468460083
    4. 'inv' → logprob: -2.695359468460083
    5. 'output' → logprob: -2.945359468460083
    6. 'bottom' → logprob: -3.695359468460083
    7. 'result' → logprob: -4.945359706878662
    8. 'labels' → logprob: -5.070359706878662
    9. 'rev' → logprob: -5.445359706878662
    10. 'pos' → logprob: -5.445359706878662

Token 1010: '   ' (ID: 271)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.7176046371459961
    2. 'res' → logprob: -1.717604637145996
    3. 'out' → logprob: -1.717604637145996
    4. 'result' → logprob: -2.217604637145996
    5. 'inv' → logprob: -3.967604637145996
    6. 'bottom' → logprob: -3.967604637145996
    7. 'pos' → logprob: -6.092604637145996
    8. 'rev' → logprob: -6.592604637145996
    9. '```' → logprob: -6.717604637145996
    10. 'inverse' → logprob: -7.717604637145996

Token 1011: ' #' (ID: 1069)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -1.182084560394287
    2. 'output' → logprob: -1.432084560394287
    3. 'res' → logprob: -1.682084560394287
    4. 'out' → logprob: -1.932084560394287
    5. 'pos' → logprob: -2.682084560394287
    6. 'bottom' → logprob: -4.182084560394287
    7. 'rev' → logprob: -4.182084560394287
    8. '   ' → logprob: -4.682084560394287
    9. 'result' → logprob: -5.307084560394287
    10. 'inverse' → logprob: -5.432084560394287

Token 1012: ' output' (ID: 4733)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.5136232376098633
    2. 'output' → logprob: -2.1386232376098633
    3. 'print' → logprob: -2.2636232376098633
    4. 'res' → logprob: -2.3886232376098633
    5. 'inv' → logprob: -3.2636232376098633
    6. 'result' → logprob: -3.8886232376098633
    7. 'bottom' → logprob: -4.013623237609863
    8. 'rev' → logprob: -5.388623237609863
    9. 'pos' → logprob: -6.013623237609863
    10. 'inverse' → logprob: -6.888623237609863

Token 1013: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0037864195182919502
    2. ' print' → logprob: -6.003786563873291
    3. ''' → logprob: -7.378786563873291
    4. '('' → logprob: -8.253786087036133
    5. '   ' → logprob: -8.628786087036133
    6. '
' → logprob: -8.878786087036133
    7. 'for' → logprob: -9.753786087036133
    8. '"' → logprob: -10.753786087036133
    9. '("' → logprob: -11.878786087036133
    10. '```' → logprob: -12.253786087036133

Token 1014: ' but' (ID: 889)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007958084461279213
    2. ' =' → logprob: -8.375795364379883
    3. 'for' → logprob: -8.375795364379883
    4. '
' → logprob: -9.125795364379883
    5. '=' → logprob: -9.625795364379883
    6. '   ' → logprob: -10.250795364379883
    7. '[' → logprob: -10.375795364379883
    8. '```' → logprob: -10.500795364379883
    9. 'ans' → logprob: -11.250795364379883
    10. 'output' → logprob: -11.625795364379883

Token 1015: ' +' (ID: 659)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5058175921440125
    2. '=' → logprob: -1.7558176517486572
    3. '[' → logprob: -1.8808176517486572
    4. ' =' → logprob: -3.2558176517486572
    5. '"' → logprob: -4.630817413330078
    6. '['' → logprob: -5.505817413330078
    7. '=[' → logprob: -5.755817413330078
    8. 'sorted' → logprob: -6.130817413330078
    9. '[in' → logprob: -6.630817413330078
    10. ' '' → logprob: -6.755817413330078

Token 1016: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009676800691522658
    2. '[' → logprob: -7.375967502593994
    3. ' ' → logprob: -8.250967979431152
    4. '=' → logprob: -10.375967979431152
    5. '+' → logprob: -10.750967979431152
    6. '[
' → logprob: -11.375967979431152
    7. '`' → logprob: -12.000967979431152
    8. '[i' → logprob: -13.125967979431152
    9. '   ' → logprob: -13.250967979431152
    10. ' [' → logprob: -13.250967979431152

Token 1017: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.6789137084269896e-05
    2. '   ' → logprob: -10.62503719329834
    3. 'for' → logprob: -11.87503719329834
    4. ' print' → logprob: -12.37503719329834
    5. '```' → logprob: -14.37503719329834
    6. 'output' → logprob: -15.12503719329834
    7. '
' → logprob: -15.25003719329834
    8. '    
' → logprob: -17.625036239624023
    9. '``' → logprob: -18.000036239624023
    10. 'result' → logprob: -18.125036239624023

Token 1018: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007300666766241193
    2. 'out' → logprob: -8.500730514526367
    3. 'output' → logprob: -8.625730514526367
    4. 'result' → logprob: -8.875730514526367
    5. '```' → logprob: -9.250730514526367
    6. 'res' → logprob: -10.000730514526367
    7. 'bottom' → logprob: -11.125730514526367
    8. 'inv' → logprob: -11.375730514526367
    9. 'answer' → logprob: -11.625730514526367
    10. 'ans' → logprob: -12.125730514526367

Token 1019: ' print' (ID: 2123)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -1.043315052986145
    2. 'res' → logprob: -1.793315052986145
    3. 'out' → logprob: -1.918315052986145
    4. 'pos' → logprob: -2.0433149337768555
    5. 'inv' → logprob: -2.2933149337768555
    6. 'print' (adapté à ' print') → logprob: -2.7933149337768555
    7. 'result' → logprob: -3.7933149337768555
    8. 'bottom' → logprob: -5.1683149337768555
    9. 'rev' → logprob: -5.4183149337768555
    10. '   ' → logprob: -5.6683149337768555

Token 1020: '(*' (ID: 9000)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.014536837115883827
    2. '('' → logprob: -4.5145368576049805
    3. '"' → logprob: -5.7645368576049805
    4. '(*' → logprob: -8.63953685760498
    5. '*' → logprob: -8.88953685760498
    6. '("' → logprob: -11.51453685760498
    7. '   ' → logprob: -11.88953685760498
    8. ' '' → logprob: -12.13953685760498
    9. '(' → logprob: -13.13953685760498
    10. '(*(' → logprob: -13.26453685760498

Token 1021: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1802416890859604
    2. '(ans' → logprob: -1.9302417039871216
    3. '[i' → logprob: -3.930241584777832
    4. '(i' → logprob: -9.430241584777832
    5. '[a' → logprob: -9.805241584777832
    6. '[(' → logprob: -11.180241584777832
    7. 'ans' → logprob: -11.555241584777832
    8. '[x' → logprob: -12.680241584777832
    9. '[pos' → logprob: -12.680241584777832
    10. ' [' → logprob: -12.930241584777832

Token 1022: 'a' (ID: 64)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03051401488482952
    2. '(ans' → logprob: -4.030514240264893
    3. 'x' → logprob: -4.655514240264893
    4. 'a' → logprob: -6.655514240264893
    5. '[' → logprob: -6.780514240264893
    6. '[x' → logprob: -9.030513763427734
    7. '[a' → logprob: -9.530513763427734
    8. 'i' → logprob: -10.405513763427734
    9. ' ans' → logprob: -10.405513763427734
    10. '(x' → logprob: -10.905513763427734

Token 1023: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001893533393740654
    2. ' +' → logprob: -6.376893520355225
    3. 's' → logprob: -8.876893997192383
    4. '(ans' → logprob: -10.876893997192383
    5. 'a' → logprob: -11.001893997192383
    6. '+a' → logprob: -12.501893997192383
    7. 'ans' → logprob: -12.626893997192383
    8. '+s' → logprob: -13.376893997192383
    9. '[' → logprob: -13.501893997192383
    10. ' ans' → logprob: -13.626893997192383

Token 1024: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '0' → logprob: -16.875001907348633
    4. 'for' → logprob: -18.000001907348633
    5. '```' → logprob: -19.000001907348633
    6. '   ' → logprob: -20.000001907348633
    7. '+' → logprob: -20.250001907348633
    8. 'a' → logprob: -20.375001907348633
    9. 'int' → logprob: -20.750001907348633
    10. '=' → logprob: -20.875001907348633

Token 1025: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07891115546226501
    2. ' for' → logprob: -2.578911066055298
    3. ')' → logprob: -11.578910827636719
    4. '(ans' → logprob: -11.703910827636719
    5. '   ' → logprob: -13.703910827636719
    6. ']' → logprob: -14.078910827636719
    7. '	for' → logprob: -14.578910827636719
    8. 'ans' → logprob: -14.953910827636719
    9. '  ' → logprob: -15.328910827636719
    10. ' ' → logprob: -15.703910827636719

Token 1026: ' a' (ID: 261)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.1517960956552997e-05
    2. ' ans' → logprob: -11.500011444091797
    3. 'a' → logprob: -13.750011444091797
    4. '(ans' → logprob: -15.750011444091797
    5. 'range' → logprob: -17.750011444091797
    6. '	ans' → logprob: -17.875011444091797
    7. 'ann' → logprob: -20.375011444091797
    8. 'arr' → logprob: -20.500011444091797
    9. 'answer' → logprob: -20.750011444091797
    10. 'Ans' → logprob: -21.375011444091797

Token 1027: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.699027419090271
    2. 'ans' → logprob: -0.699027419090271
    3. ' in' → logprob: -5.3240275382995605
    4. ' ans' → logprob: -6.9490275382995605
    5. '(ans' → logprob: -11.199027061462402
    6. 'ins' → logprob: -11.699027061462402
    7. '	ans' → logprob: -12.574027061462402
    8. '_ans' → logprob: -12.699027061462402
    9. 'answer' → logprob: -14.449027061462402
    10. 'Ans' → logprob: -15.074027061462402

Token 1028: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0002615742268972099
    2. 'range' → logprob: -8.250261306762695
    3. ' ans' → logprob: -15.125261306762695
    4. '(ans' → logprob: -16.750261306762695
    5. 'answer' → logprob: -18.250261306762695
    6. ' range' → logprob: -19.000261306762695
    7. '	ans' → logprob: -20.250261306762695
    8. 'ANS' → logprob: -21.500261306762695
    9. '[' → logprob: -21.625261306762695
    10. 'sorted' → logprob: -21.750261306762695

Token 1029: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -2.8444881536415778e-05
    2. ')' → logprob: -10.625028610229492
    3. '])
' → logprob: -13.625028610229492
    4. ')])' → logprob: -13.625028610229492
    5. '],' → logprob: -14.375028610229492
    6. ' ])' → logprob: -14.500028610229492
    7. ']' → logprob: -14.875028610229492
    8. ')]' → logprob: -16.000028610229492
    9. '})' → logprob: -16.875028610229492
    10. '))' → logprob: -17.000028610229492


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1027
Tokens correctement prédits (1ère position, stricte): 311
Tokens correctement prédits (1ère position, avec adaptation): 351
Tokens correctement prédits (top 10): 703
Précision stricte (1ère position): 30.28%
Précision adaptée (1ère position): 34.18%
Précision (top 10): 68.45%
================================================================================
