================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    W,H=map(int,input().split())
    if W==0 and H==0:
        break
    grid=[list(input()) for _ in range(H)]
    for y in range(H):
        for x in range(W):
            if grid[y][x]=='@':
                start=(x,y)
    visited=set([start])
    stack=[start]
    while stack:
        x,y=stack.pop()
        for nx,ny in [(x-1,y),(x+1,y),(x,y-1),(x,y+1)]:
            if 0<=nx<W and 0<=ny<H and grid[ny][nx]!='#' and (nx,ny) not in visited:
                visited.add((nx,ny))
                stack.append((nx,ny))
    print(len(visited))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27421262860298157
    2. '\' → logprob: -2.774212598800659
    3. '```' → logprob: -3.024212598800659
    4. '    ' → logprob: -3.274212598800659
    5. '\n' → logprob: -3.649212598800659
    6. '    
' → logprob: -3.899212598800659
    7. ' ' → logprob: -4.024212837219238
    8. ' 
' → logprob: -5.649212837219238
    9. '  
' → logprob: -6.024212837219238
    10. '`' → logprob: -6.024212837219238

Token 4: ' W' (ID: 486)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4148074984550476
    2. '    ' → logprob: -1.9148075580596924
    3. ' ' → logprob: -2.0398075580596924
    4. '```' → logprob: -3.5398075580596924
    5. '       ' → logprob: -4.914807319641113
    6. '  ' → logprob: -5.289807319641113
    7. '    
' → logprob: -5.789807319641113
    8. 'i' → logprob: -6.414807319641113
    9. '`' → logprob: -6.414807319641113
    10. '        
' → logprob: -6.789807319641113

Token 5: ',H' (ID: 94400)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.024522019550204277
    2. 'hile' → logprob: -3.774522066116333
    3. 'i' → logprob: -8.149521827697754
    4. '=' → logprob: -8.149521827697754
    5. 'H' → logprob: -8.399521827697754
    6. 'a' → logprob: -8.899521827697754
    7. '   ' → logprob: -9.274521827697754
    8. ':' → logprob: -10.149521827697754
    9. '  ' → logprob: -10.649521827697754
    10. '.' → logprob: -10.649521827697754

Token 6: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2176906168460846
    2. ' =' → logprob: -1.9676905870437622
    3. ',' → logprob: -2.9676907062530518
    4. ')' → logprob: -6.467690467834473
    5. ' ,' → logprob: -7.092690467834473
    6. '[' → logprob: -7.467690467834473
    7. ' ' → logprob: -7.592690467834473
    8. '.' → logprob: -8.092690467834473
    9. '   ' → logprob: -8.592690467834473
    10. ' +=' → logprob: -9.467690467834473

Token 7: 'map' (ID: 3726)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.287089079618454
    2. 'map' → logprob: -1.4120891094207764
    3. ' input' → logprob: -6.037088871002197
    4. 'input' → logprob: -6.912088871002197
    5. ' W' → logprob: -7.662088871002197
    6. ' image' → logprob: -7.787088871002197
    7. ' ' → logprob: -7.787088871002197
    8. ' list' → logprob: -8.787089347839355
    9. 'image' → logprob: -9.162089347839355
    10. '0' → logprob: -9.162089347839355

Token 8: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03363439813256264
    2. '(' → logprob: -3.6586344242095947
    3. '(str' → logprob: -5.033634185791016
    4. '(input' → logprob: -7.783634185791016
    5. 'int' → logprob: -8.908634185791016
    6. '<int' → logprob: -9.158634185791016
    7. '[int' → logprob: -10.158634185791016
    8. '```' → logprob: -10.533634185791016
    9. '(lambda' → logprob: -10.658634185791016
    10. ' (' → logprob: -11.408634185791016

Token 9: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.22906064987182617
    2. '(' → logprob: -2.104060649871826
    3. ')' → logprob: -2.729060649871826
    4. 'input' → logprob: -5.229060649871826
    5. '(user' → logprob: -5.354060649871826
    6. '())' → logprob: -5.979060649871826
    7. '(str' → logprob: -7.104060649871826
    8. '(data' → logprob: -7.479060649871826
    9. '(stdin' → logprob: -7.729060649871826
    10. '```' → logprob: -8.104061126708984

Token 10: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.13471077382564545
    2. '())' → logprob: -2.5097107887268066
    3. '()' → logprob: -3.1347107887268066
    4. '());' → logprob: -7.634710788726807
    5. '()))' → logprob: -7.759710788726807
    6. '()));' → logprob: -9.009710311889648
    7. '()>' → logprob: -9.884710311889648
    8. ')' → logprob: -10.384710311889648
    9. '();)' → logprob: -11.009710311889648
    10. '()-' → logprob: -11.509710311889648

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.394135612528771e-05
    2. 'strip' → logprob: -10.125043869018555
    3. 'rstrip' → logprob: -12.750043869018555
    4. ' split' → logprob: -14.125043869018555
    5. '(split' → logprob: -15.625043869018555
    6. ')' → logprob: -16.875043869018555
    7. 'replace' → logprob: -18.125043869018555
    8. 'spl' → logprob: -18.500043869018555
    9. 'startswith' → logprob: -19.375043869018555
    10. '```' → logprob: -19.500043869018555

Token 12: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1317404806613922
    2. ')' → logprob: -2.5067405700683594
    3. '()))' → logprob: -3.6317405700683594
    4. '()' → logprob: -4.756740570068359
    5. '))' → logprob: -5.006740570068359
    6. '(' → logprob: -9.38174057006836
    7. '('' → logprob: -11.25674057006836
    8. ' ())' → logprob: -11.50674057006836
    9. '()),' → logprob: -12.25674057006836
    10. '()));' → logprob: -12.50674057006836

Token 13: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22607626020908356
    2. '   ' → logprob: -1.7260762453079224
    3. '\n' → logprob: -5.226076126098633
    4. '```' → logprob: -5.226076126098633
    5. ':' → logprob: -5.601076126098633
    6. 'if' → logprob: -5.976076126098633
    7. ')' → logprob: -6.101076126098633
    8. '    
' → logprob: -6.851076126098633
    9. '<|end|>' → logprob: -7.476076126098633
    10. ' ' → logprob: -7.601076126098633

Token 14: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.29226431250572205
    2. '   ' → logprob: -1.6672643423080444
    3. 'if' (adapté à ' if') → logprob: -3.792264223098755
    4. '```' → logprob: -4.292264461517334
    5. '\n' → logprob: -4.917264461517334
    6. '    ' → logprob: -5.417264461517334
    7. '    
' → logprob: -5.542264461517334
    8. ' ' → logprob: -5.667264461517334
    9. '<|end|>' → logprob: -6.167264461517334
    10. ')' → logprob: -6.792264461517334

Token 15: ' W' (ID: 486)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5339393019676208
    2. ' W' → logprob: -0.9089393019676208
    3. ' ' → logprob: -4.908939361572266
    4. 'not' → logprob: -6.158939361572266
    5. 'W' → logprob: -7.033939361572266
    6. ' H' → logprob: -8.283939361572266
    7. ' ' → logprob: -9.408939361572266
    8. ' (' → logprob: -10.908939361572266
    9. '  ' → logprob: -11.908939361572266
    10. ')' → logprob: -12.408939361572266

Token 16: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12106890976428986
    2. '==' → logprob: -2.4960689544677734
    3. ' <=' → logprob: -3.9960689544677734
    4. ' <' → logprob: -4.621068954467773
    5. '<' → logprob: -6.496068954467773
    6. '<=' → logprob: -7.121068954467773
    7. ' >' → logprob: -8.246068954467773
    8. ' ' → logprob: -8.871068954467773
    9. '>' → logprob: -8.996068954467773
    10. '=' → logprob: -9.121068954467773

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011740362970158458
    2. ' ' → logprob: -6.751173973083496
    3. 'H' → logprob: -12.876173973083496
    4. ' H' → logprob: -14.501173973083496
    5. '```' → logprob: -15.376173973083496
    6. '   ' → logprob: -16.188674926757812
    7. '00' → logprob: -16.626174926757812
    8. '۰' → logprob: -16.688674926757812
    9. '０' → logprob: -16.813674926757812
    10. '``' → logprob: -16.938674926757812

Token 18: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011884801089763641
    2. 'and' → logprob: -4.511884689331055
    3. ' or' → logprob: -7.261884689331055
    4. ':' → logprob: -9.261884689331055
    5. ' ' → logprob: -10.386884689331055
    6. '   ' → logprob: -12.136884689331055
    7. '	and' → logprob: -13.761884689331055
    8. ' a' → logprob: -14.511884689331055
    9. '  ' → logprob: -14.761884689331055
    10. ',' → logprob: -15.011884689331055

Token 19: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.2519342005252838
    2. 'H' → logprob: -1.5019341707229614
    3. ' ' → logprob: -12.251934051513672
    4. '   ' → logprob: -15.876934051513672
    5. '<|end|>' → logprob: -16.501934051513672
    6. '	H' → logprob: -16.626934051513672
    7. '    ' → logprob: -18.251934051513672
    8. '  ' → logprob: -18.751934051513672
    9. ' ' → logprob: -19.001934051513672
    10. '&H' → logprob: -19.126934051513672

Token 20: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5831145644187927
    2. '==' → logprob: -0.8331145644187927
    3. '=' → logprob: -5.3331146240234375
    4. '<|end|>' → logprob: -6.8331146240234375
    5. ' ' → logprob: -7.5831146240234375
    6. ' ' → logprob: -8.708114624023438
    7. ')' → logprob: -9.208114624023438
    8. ' =' → logprob: -9.208114624023438
    9. '<|end|>' → logprob: -9.333114624023438
    10. '  ' → logprob: -9.833114624023438

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010329303331673145
    2. ' ' → logprob: -6.876032829284668
    3. '   ' → logprob: -17.001033782958984
    4. '  ' → logprob: -17.501033782958984
    5. '۰' → logprob: -18.001033782958984
    6. '```' → logprob: -18.188533782958984
    7. ' ' → logprob: -18.313533782958984
    8. '<|end|>' → logprob: -18.938533782958984
    9. '０' → logprob: -19.501033782958984
    10. '1' → logprob: -19.876033782958984

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001394161517964676
    2. '   ' → logprob: -9.375139236450195
    3. ':
' → logprob: -10.375139236450195
    4. ' :' → logprob: -11.000139236450195
    5. '       ' → logprob: -12.750139236450195
    6. ':return' → logprob: -13.000139236450195
    7. '):' → logprob: -15.125139236450195
    8. '	break' → logprob: -15.625139236450195
    9. '.' → logprob: -15.750139236450195
    10. ',' → logprob: -16.125139236450195

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010997301433235407
    2. '   ' → logprob: -7.001099586486816
    3. ':' → logprob: -9.626099586486816
    4. '\n' → logprob: -10.001099586486816
    5. '	break' → logprob: -11.126099586486816
    6. '     ' → logprob: -11.501099586486816
    7. '    ' → logprob: -11.501099586486816
    8. '	' → logprob: -11.626099586486816
    9. ' break' → logprob: -12.126099586486816
    10. '      ' → logprob: -12.251099586486816

Token 24: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.0531514473259449
    2. 'break' (adapté à ' break') → logprob: -3.1781513690948486
    3. '       ' → logprob: -4.678151607513428
    4. '   ' → logprob: -7.303151607513428
    5. '	break' → logprob: -9.05315113067627
    6. '_break' → logprob: -12.67815113067627
    7. '```' → logprob: -12.92815113067627
    8. 'Break' → logprob: -13.17815113067627
    9. ' ' → logprob: -13.80315113067627
    10. '           ' → logprob: -13.92815113067627

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047988299280405045
    2. '<|end|>' → logprob: -4.047988414764404
    3. '\n' → logprob: -4.672988414764404
    4. '#' → logprob: -5.047988414764404
    5. ':' → logprob: -5.547988414764404
    6. '    
' → logprob: -5.922988414764404
    7. 'print' → logprob: -6.547988414764404
    8. ')' → logprob: -6.672988414764404
    9. '```' → logprob: -7.922988414764404
    10. '  ' → logprob: -7.922988414764404

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025287369266152382
    2. '    
' → logprob: -3.900287389755249
    3. '\n' → logprob: -6.15028715133667
    4. '```' → logprob: -6.40028715133667
    5. '\' → logprob: -8.650287628173828
    6. '  
' → logprob: -9.650287628173828
    7. '<|end|>' → logprob: -9.650287628173828
    8. '
' → logprob: -9.775287628173828
    9. '``' → logprob: -9.900287628173828
    10. ' for' → logprob: -9.900287628173828

Token 27: ' grid' (ID: 10586)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14030282199382782
    2. '[' → logprob: -3.265302896499634
    3. '    ' → logprob: -4.140302658081055
    4. ' ' → logprob: -4.515302658081055
    5. '#' → logprob: -4.640302658081055
    6. '.' → logprob: -4.890302658081055
    7. '```' → logprob: -4.890302658081055
    8. ':' → logprob: -5.140302658081055
    9. 'for' → logprob: -5.140302658081055
    10. ' for' → logprob: -5.640302658081055

Token 28: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13985751569271088
    2. ' =' → logprob: -2.639857530593872
    3. '=' → logprob: -3.014857530593872
    4. '   ' → logprob: -6.139857292175293
    5. '<|end|>' → logprob: -6.514857292175293
    6. '[:]' → logprob: -6.639857292175293
    7. '[]' → logprob: -6.764857292175293
    8. '=[]' → logprob: -7.514857292175293
    9. '[row' → logprob: -7.514857292175293
    10. '[][]' → logprob: -7.889857292175293

Token 29: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8030925989151001
    2. '[input' → logprob: -0.8030925989151001
    3. '[list' → logprob: -2.5530924797058105
    4. 'input' → logprob: -3.8030924797058105
    5. '[' → logprob: -5.8030924797058105
    6. ' list' → logprob: -7.6780924797058105
    7. '[]' → logprob: -8.553092956542969
    8. ' [' → logprob: -9.303092956542969
    9. '[str' → logprob: -9.678092956542969
    10. ' input' → logprob: -10.053092956542969

Token 30: '(input' (ID: 10054)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.014805715531110764
    2. '(input' → logprob: -4.264805793762207
    3. '(' → logprob: -7.389805793762207
    4. 'map' → logprob: -10.889805793762207
    5. '()' → logprob: -13.014805793762207
    6. 'input' → logprob: -13.639805793762207
    7. '(
' → logprob: -14.264805793762207
    8. ' map' → logprob: -15.264805793762207
    9. ' (' → logprob: -15.389805793762207
    10. '(str' → logprob: -15.514805793762207

Token 31: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004702464677393436
    2. '()' → logprob: -5.629702568054199
    3. '().' → logprob: -6.879702568054199
    4. '()]' → logprob: -10.3797025680542
    5. '()))' → logprob: -10.5047025680542
    6. ' ())' → logprob: -12.3797025680542
    7. '())
' → logprob: -13.2547025680542
    8. '(' → logprob: -13.5047025680542
    9. '()),' → logprob: -13.5047025680542
    10. '());' → logprob: -13.5047025680542

Token 32: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002993035828694701
    2. ')' → logprob: -6.377993106842041
    3. 'for' → logprob: -7.377993106842041
    4. ' for' → logprob: -8.377992630004883
    5. '().' → logprob: -8.377992630004883
    6. '())' → logprob: -8.627992630004883
    7. '(' → logprob: -12.252992630004883
    8. '()]' → logprob: -12.377992630004883
    9. '.strip' → logprob: -12.502992630004883
    10. ' ()' → logprob: -12.502992630004883

Token 33: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5250065922737122
    2. ' range' → logprob: -1.0250065326690674
    3. '_' → logprob: -3.0250065326690674
    4. ' i' → logprob: -7.6500067710876465
    5. 'range' → logprob: -8.525006294250488
    6. ' ' → logprob: -8.525006294250488
    7. '_range' → logprob: -9.025006294250488
    8. ' in' → logprob: -9.775006294250488
    9. '(range' → logprob: -10.650006294250488
    10. '(' → logprob: -12.150006294250488

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05057013779878616
    2. 'in' → logprob: -3.050570249557495
    3. 'range' → logprob: -6.425570011138916
    4. ' range' → logprob: -8.300570487976074
    5. ' ' → logprob: -9.550570487976074
    6. '_' → logprob: -11.925570487976074
    7. '  ' → logprob: -12.300570487976074
    8. ')' → logprob: -12.675570487976074
    9. 'In' → logprob: -12.675570487976074
    10. 'i' → logprob: -13.050570487976074

Token 35: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029751762747764587
    2. ' range' → logprob: -3.529751777648926
    3. '(range' → logprob: -14.404751777648926
    4. 'H' → logprob: -14.904751777648926
    5. '[' → logprob: -15.654751777648926
    6. '	range' → logprob: -15.779751777648926
    7. '.range' → logprob: -16.52975082397461
    8. '   ' → logprob: -17.02975082397461
    9. ' ' → logprob: -17.52975082397461
    10. ')' → logprob: -18.77975082397461

Token 36: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.00010449681576574221
    2. '(' → logprob: -9.250104904174805
    3. ' (' → logprob: -12.000104904174805
    4. 'H' → logprob: -13.500104904174805
    5. ' H' → logprob: -14.875104904174805
    6. '(h' → logprob: -15.875104904174805
    7. '(W' → logprob: -16.000104904174805
    8. '   ' → logprob: -16.750104904174805
    9. ')' → logprob: -17.125104904174805
    10. '	H' → logprob: -17.375104904174805

Token 37: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001907855912577361
    2. ')' → logprob: -8.625190734863281
    3. ']' → logprob: -12.375190734863281
    4. ' )' → logprob: -13.375190734863281
    5. ')])' → logprob: -13.500190734863281
    6. ')]
' → logprob: -13.500190734863281
    7. '))' → logprob: -14.375190734863281
    8. '   ' → logprob: -14.750190734863281
    9. '')]' → logprob: -14.875190734863281
    10. ')][' → logprob: -15.125190734863281

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15634699165821075
    2. '
' → logprob: -2.0313470363616943
    3. '    
' → logprob: -4.656346797943115
    4. ' for' → logprob: -7.031346797943115
    5. '\n' → logprob: -7.531346797943115
    6. 'for' → logprob: -7.656346797943115
    7. '#' → logprob: -8.281347274780273
    8. '```' → logprob: -8.281347274780273
    9. '   
' → logprob: -8.406347274780273
    10. '  
' → logprob: -8.531347274780273

Token 39: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5877634286880493
    2. 'for' (adapté à ' for') → logprob: -1.7127634286880493
    3. '
' → logprob: -2.2127633094787598
    4. ' for' → logprob: -3.2127633094787598
    5. '    
' → logprob: -3.4627633094787598
    6. '\n' → logprob: -4.46276330947876
    7. 'n' → logprob: -5.08776330947876
    8. ')' → logprob: -5.08776330947876
    9. '    ' → logprob: -5.08776330947876
    10. 'result' → logprob: -5.33776330947876

Token 40: ' y' (ID: 342)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18308795988559723
    2. ' h' → logprob: -2.5580880641937256
    3. ' ' → logprob: -2.9330880641937256
    4. ' _' → logprob: -4.0580878257751465
    5. ' r' → logprob: -4.5580878257751465
    6. ' y' → logprob: -5.8080878257751465
    7. 'i' → logprob: -6.1830878257751465
    8. '_' → logprob: -6.6830878257751465
    9. ' row' → logprob: -6.6830878257751465
    10. ' H' → logprob: -7.4330878257751465

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04873940721154213
    2. 'in' → logprob: -3.048739433288574
    3. ' ' → logprob: -9.423739433288574
    4. '	in' → logprob: -10.798739433288574
    5. '<|end|>' → logprob: -11.548739433288574
    6. ',' → logprob: -11.923739433288574
    7. '   ' → logprob: -12.298739433288574
    8. 'In' → logprob: -12.423739433288574
    9. '_in' → logprob: -12.548739433288574
    10. '+' → logprob: -12.673739433288574

Token 42: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011047935113310814
    2. 'range' → logprob: -4.511047840118408
    3. '	range' → logprob: -16.63604736328125
    4. ' ' → logprob: -18.51104736328125
    5. '_range' → logprob: -18.63604736328125
    6. '(range' → logprob: -18.88604736328125
    7. 'Range' → logprob: -19.01104736328125
    8. 'r' → logprob: -19.13604736328125
    9. '.range' → logprob: -19.51104736328125
    10. ' xrange' → logprob: -19.63604736328125

Token 43: '(H' (ID: 20904)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.28503188490867615
    2. '(H' → logprob: -1.7850319147109985
    3. '(' → logprob: -2.785031795501709
    4. ' (' → logprob: -4.035031795501709
    5. 'H' → logprob: -7.660031795501709
    6. ' ' → logprob: -8.160032272338867
    7. ' range' → logprob: -10.910032272338867
    8. ')' → logprob: -11.410032272338867
    9. ' W' → logprob: -12.035032272338867
    10. ' )' → logprob: -12.910032272338867

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00036037206882610917
    2. '):
' → logprob: -8.250360488891602
    3. ':' → logprob: -10.125360488891602
    4. ' ):' → logprob: -10.250360488891602
    5. '   ' → logprob: -11.625360488891602
    6. ')' → logprob: -11.750360488891602
    7. '+' → logprob: -12.375360488891602
    8. '-' → logprob: -14.000360488891602
    9. ' ' → logprob: -14.375360488891602
    10. ']:' → logprob: -15.500360488891602

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3394470810890198
    2. '   ' → logprob: -1.339447021484375
    3. ' for' → logprob: -4.839447021484375
    4. '<|end|>' → logprob: -5.089447021484375
    5. ':' → logprob: -5.339447021484375
    6. '    ' → logprob: -5.589447021484375
    7. ' ' → logprob: -5.964447021484375
    8. '<|end|>' → logprob: -8.464447021484375
    9. '	   ' → logprob: -9.589447021484375
    10. '     ' → logprob: -9.714447021484375

Token 46: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.015568895265460014
    2. '   ' → logprob: -4.890568733215332
    3. 'for' (adapté à ' for') → logprob: -4.890568733215332
    4. ' ' → logprob: -7.890568733215332
    5. '    ' → logprob: -11.515568733215332
    6. '	for' → logprob: -11.765568733215332
    7. '       ' → logprob: -11.765568733215332
    8. ' range' → logprob: -12.015568733215332
    9. '<|end|>' → logprob: -12.140568733215332
    10. '  ' → logprob: -13.640568733215332

Token 47: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2812120020389557
    2. 'x' → logprob: -1.4062119722366333
    3. ' W' → logprob: -11.156211853027344
    4. ' ' → logprob: -11.281211853027344
    5. '(x' → logprob: -11.906211853027344
    6. ' range' → logprob: -11.906211853027344
    7. ' xrange' → logprob: -12.031211853027344
    8. '<|end|>' → logprob: -13.031211853027344
    9. 'W' → logprob: -13.156211853027344
    10. ' (' → logprob: -13.156211853027344

Token 48: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02681642211973667
    2. 'in' → logprob: -3.6518163681030273
    3. '   ' → logprob: -8.401816368103027
    4. '<|end|>' → logprob: -8.776816368103027
    5. ' ' → logprob: -9.776816368103027
    6. '+' → logprob: -10.401816368103027
    7. '    ' → logprob: -11.401816368103027
    8. '	in' → logprob: -11.401816368103027
    9. '(' → logprob: -11.901816368103027
    10. '       ' → logprob: -12.651816368103027

Token 49: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0789802297949791
    2. 'range' → logprob: -2.5789802074432373
    3. '(range' → logprob: -9.453980445861816
    4. ' W' → logprob: -12.078980445861816
    5. ' xrange' → logprob: -13.328980445861816
    6. 'W' → logprob: -13.703980445861816
    7. '	range' → logprob: -14.078980445861816
    8. '(' → logprob: -14.078980445861816
    9. 'Range' → logprob: -14.453980445861816
    10. ' ' → logprob: -14.578980445861816

Token 50: '(W' (ID: 26031)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.11454863846302032
    2. '(' → logprob: -2.739548683166504
    3. '(W' → logprob: -3.239548683166504
    4. ' (' → logprob: -5.489548683166504
    5. '(range' → logprob: -8.614548683166504
    6. '((' → logprob: -10.239548683166504
    7. ' ' → logprob: -11.239548683166504
    8. '(I' → logprob: -11.614548683166504
    9. ' range' → logprob: -11.739548683166504
    10. '(len' → logprob: -11.864548683166504

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013068932108581066
    2. ')' → logprob: -4.888069152832031
    3. ' ):' → logprob: -5.888069152832031
    4. '):
' → logprob: -7.013069152832031
    5. ':' → logprob: -7.138069152832031
    6. '+' → logprob: -7.263069152832031
    7. '   ' → logprob: -9.763069152832031
    8. 'if' → logprob: -9.763069152832031
    9. ' )' → logprob: -10.013069152832031
    10. '       ' → logprob: -10.388069152832031

Token 52: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6674383282661438
    2. '           ' → logprob: -1.042438268661499
    3. ':' → logprob: -2.417438268661499
    4. ' if' → logprob: -3.542438268661499
    5. '   ' → logprob: -5.042438507080078
    6. '<|end|>' → logprob: -6.167438507080078
    7. ' :' → logprob: -6.292438507080078
    8. 'if' → logprob: -6.542438507080078
    9. '               ' → logprob: -7.292438507080078
    10. '        ' → logprob: -7.542438507080078

Token 53: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1573248952627182
    2. 'if' (adapté à ' if') → logprob: -2.40732479095459
    3. '       ' → logprob: -3.90732479095459
    4. ' ' → logprob: -4.03232479095459
    5. '    ' → logprob: -4.90732479095459
    6. '        ' → logprob: -5.03232479095459
    7. '   ' → logprob: -6.28232479095459
    8. ':' → logprob: -8.15732479095459
    9. '<|end|>' → logprob: -8.53232479095459
    10. '           ' → logprob: -8.65732479095459

Token 54: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.0028923710342496634
    2. 'grid' → logprob: -5.87789249420166
    3. ' ' → logprob: -9.75289249420166
    4. '(grid' → logprob: -11.12789249420166
    5. '	grid' → logprob: -12.00289249420166
    6. '<|end|>' → logprob: -13.00289249420166
    7. '.grid' → logprob: -13.25289249420166
    8. ' x' → logprob: -14.37789249420166
    9. ' not' → logprob: -14.37789249420166
    10. ' grids' → logprob: -14.87789249420166

Token 55: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -2.4272752852994017e-05
    2. '[x' → logprob: -11.50002384185791
    3. '[Y' → logprob: -11.62502384185791
    4. '[' → logprob: -12.75002384185791
    5. '][' → logprob: -14.00002384185791
    6. '```' → logprob: -15.25002384185791
    7. ' [' → logprob: -15.37502384185791
    8. '[user' → logprob: -16.250024795532227
    9. '\[' → logprob: -16.375024795532227
    10. '[h' → logprob: -16.375024795532227

Token 56: '][' (ID: 2696)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.3524028956890106
    2. '[y' → logprob: -1.852402925491333
    3. '][' → logprob: -1.977402925491333
    4. ']' → logprob: -7.852402687072754
    5. '==' → logprob: -7.852402687072754
    6. '[' → logprob: -8.352402687072754
    7. ']==' → logprob: -8.477402687072754
    8. '   ' → logprob: -9.227402687072754
    9. '```' → logprob: -9.977402687072754
    10. '[z' → logprob: -10.102402687072754

Token 57: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001099968678317964
    2. ''x' → logprob: -6.876100063323975
    3. '"x' → logprob: -10.251099586486816
    4. ' x' → logprob: -11.126099586486816
    5. ']' → logprob: -12.001099586486816
    6. '0' → logprob: -12.001099586486816
    7. ' ' → logprob: -13.001099586486816
    8. '	x' → logprob: -14.626099586486816
    9. '[x' → logprob: -14.876099586486816
    10. '   ' → logprob: -15.126099586486816

Token 58: ']=='' (ID: 71177)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25300633907318115
    2. ']=='' → logprob: -2.2530064582824707
    3. ']==' → logprob: -2.2530064582824707
    4. '==' → logprob: -4.753006458282471
    5. '=='' → logprob: -5.753006458282471
    6. ' ==' → logprob: -6.753006458282471
    7. ' ]' → logprob: -8.878005981445312
    8. ']=="' → logprob: -9.753005981445312
    9. ')' → logprob: -9.878005981445312
    10. '']=='' → logprob: -10.628005981445312

Token 59: '@' (ID: 31)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1132577583193779
    2. '@' → logprob: -2.488257646560669
    3. '*' → logprob: -4.363257884979248
    4. ''#' → logprob: -5.113257884979248
    5. '.' → logprob: -5.613257884979248
    6. ''' → logprob: -7.238257884979248
    7. ''*' → logprob: -8.11325740814209
    8. 'W' → logprob: -9.36325740814209
    9. ''.' → logprob: -9.61325740814209
    10. 'o' → logprob: -9.86325740814209

Token 60: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.02854332886636257
    2. ''' → logprob: -4.028543472290039
    3. ':' → logprob: -5.153543472290039
    4. ' ':' → logprob: -5.653543472290039
    5. '':
' → logprob: -7.528543472290039
    6. '':'' → logprob: -9.153543472290039
    7. ' '' → logprob: -9.778543472290039
    8. '':
' → logprob: -9.903543472290039
    9. ''):' → logprob: -10.028543472290039
    10. '":' → logprob: -10.403543472290039

Token 61: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9214128851890564
    2. 'grid' → logprob: -1.6714129447937012
    3. 'print' → logprob: -1.9214129447937012
    4. ' grid' → logprob: -2.421412944793701
    5. '<|end|>' → logprob: -3.421412944793701
    6. '   ' → logprob: -3.421412944793701
    7. ' print' → logprob: -3.796412944793701
    8. '           ' → logprob: -4.296412944793701
    9. '              ' → logprob: -4.796412944793701
    10. '       ' → logprob: -5.296412944793701

Token 62: ' start' (ID: 1604)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6795861721038818
    2. 'grid' → logprob: -2.804586172103882
    3. ' grid' → logprob: -3.054586172103882
    4. ' print' → logprob: -3.054586172103882
    5. 'start' (adapté à ' start') → logprob: -3.179586172103882
    6. 'queue' → logprob: -3.679586172103882
    7. 'ans' → logprob: -3.679586172103882
    8. 'count' → logprob: -3.929586172103882
    9. 'stack' → logprob: -3.929586172103882
    10. '#' → logprob: -4.054586410522461

Token 63: '=(' (ID: 9893)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.42569029331207275
    2. '_y' → logprob: -1.1756902933120728
    3. '=' → logprob: -3.800690174102783
    4. 'x' → logprob: -5.300690174102783
    5. '_' → logprob: -5.425690174102783
    6. ' =' → logprob: -6.175690174102783
    7. 'Y' → logprob: -6.175690174102783
    8. 'X' → logprob: -7.050690174102783
    9. 'y' → logprob: -7.175690174102783
    10. '_pos' → logprob: -7.925690174102783

Token 64: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.14277653396129608
    2. 'x' → logprob: -2.0177764892578125
    3. ' y' → logprob: -9.267776489257812
    4. ' x' → logprob: -13.267776489257812
    5. ')y' → logprob: -13.517776489257812
    6. ')' → logprob: -13.892776489257812
    7. '(y' → logprob: -14.517776489257812
    8. '	y' → logprob: -14.517776489257812
    9. ''y' → logprob: -14.642776489257812
    10. 'Y' → logprob: -15.267776489257812

Token 65: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25203341245651245
    2. ',y' → logprob: -1.5020334720611572
    3. ' ,' → logprob: -9.252033233642578
    4. ',Y' → logprob: -12.377033233642578
    5. ',
' → logprob: -13.752033233642578
    6. 'y' → logprob: -14.127033233642578
    7. '<|end|>' → logprob: -14.127033233642578
    8. ',user' → logprob: -14.627033233642578
    9. ')' → logprob: -15.502033233642578
    10. '‌,' → logprob: -15.752033233642578

Token 66: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.73052782076411e-05
    2. ')
' → logprob: -9.750067710876465
    3. ' )' → logprob: -11.875067710876465
    4. '<|end|>' → logprob: -15.000067710876465
    5. ')#' → logprob: -15.250067710876465
    6. '),' → logprob: -15.500067710876465
    7. '))' → logprob: -15.500067710876465
    8. ')return' → logprob: -15.500067710876465
    9. ')
' → logprob: -15.625067710876465
    10. ')

' → logprob: -15.750067710876465

Token 67: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' visited' (ID: 18416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: '=set' (ID: 166509)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29663702845573425
    2. '=' → logprob: -1.4216370582580566
    3. '[' → logprob: -4.296637058258057
    4. ' =[' → logprob: -7.421637058258057
    5. '=[' → logprob: -7.796637058258057
    6. '=[[' → logprob: -8.171636581420898
    7. ' ' → logprob: -8.421636581420898
    8. '=set' → logprob: -9.921636581420898
    9. '=[]' → logprob: -10.046636581420898
    10. '  ' → logprob: -10.796636581420898

Token 70: '([' (ID: 5194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12733836472034454
    2. '(' → logprob: -2.127338409423828
    3. '((' → logprob: -9.002338409423828
    4. '([(' → logprob: -9.752338409423828
    5. '(()' → logprob: -10.252338409423828
    6. '([' → logprob: -10.627338409423828
    7. '(),' → logprob: -10.752338409423828
    8. ' ()' → logprob: -11.002338409423828
    9. '([]' → logprob: -11.002338409423828
    10. '()

' → logprob: -11.252338409423828

Token 71: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.004104642663151026
    2. ' start' → logprob: -5.5041046142578125
    3. '(start' → logprob: -10.629104614257812
    4. '   ' → logprob: -14.004104614257812
    5. '(' → logprob: -14.879104614257812
    6. ' ' → logprob: -15.254104614257812
    7. ')' → logprob: -15.254104614257812
    8. '  ' → logprob: -16.129104614257812
    9. ',start' → logprob: -16.879104614257812
    10. '	start' → logprob: -17.004104614257812

Token 72: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.22624236345291138
    2. ')' → logprob: -1.6012423038482666
    3. ')])' → logprob: -7.601242542266846
    4. ')]' → logprob: -9.226242065429688
    5. '))' → logprob: -9.226242065429688
    6. ')
' → logprob: -10.101242065429688
    7. ' ])' → logprob: -10.351242065429688
    8. '])
' → logprob: -10.601242065429688
    9. ' )' → logprob: -11.476242065429688
    10. ''])' → logprob: -12.101242065429688

Token 73: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.5464261770248413
    2. 'from' → logprob: -1.6714261770248413
    3. 'queue' → logprob: -1.9214261770248413
    4. '   ' → logprob: -3.796426296234131
    5. ' from' → logprob: -3.796426296234131
    6. ' stack' → logprob: -3.921426296234131
    7. ' queue' → logprob: -4.921426296234131
    8. 'while' → logprob: -5.046426296234131
    9. ' while' → logprob: -6.421426296234131
    10. 'q' → logprob: -6.546426296234131

Token 75: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2144581377506256
    2. '=' → logprob: -1.8394581079483032
    3. '=[]' → logprob: -3.5894582271575928
    4. '.append' → logprob: -5.589457988739014
    5. '=[' → logprob: -6.214457988739014
    6. '   ' → logprob: -8.089458465576172
    7. '[:]' → logprob: -9.589458465576172
    8. '=[]
' → logprob: -9.839458465576172
    9. '    ' → logprob: -9.839458465576172
    10. ' =[' → logprob: -9.964458465576172

Token 76: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0003023345780093223
    2. ' start' → logprob: -8.2503023147583
    3. '(start' → logprob: -10.1253023147583
    4. '[start' → logprob: -14.2503023147583
    5. '(' → logprob: -15.2503023147583
    6. '   ' → logprob: -16.375303268432617
    7. ',start' → logprob: -18.125303268432617
    8. ' (' → logprob: -18.250303268432617
    9. ':start' → logprob: -18.500303268432617
    10. '=start' → logprob: -18.625303268432617

Token 77: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009874607436358929
    2. ')]' → logprob: -5.2598748207092285
    3. ')' → logprob: -5.7598748207092285
    4. '])' → logprob: -6.6348748207092285
    5. ' ]' → logprob: -9.38487434387207
    6. ']
' → logprob: -9.75987434387207
    7. '   ' → logprob: -12.00987434387207
    8. '])]' → logprob: -12.38487434387207
    9. ')])' → logprob: -12.75987434387207
    10. '<|end|>' → logprob: -13.63487434387207

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09079146385192871
    2. '    
' → logprob: -3.4657914638519287
    3. '
' → logprob: -4.340791702270508
    4. 'while' → logprob: -4.465791702270508
    5. ' while' → logprob: -4.590791702270508
    6. '<|end|>' → logprob: -5.215791702270508
    7. '\n' → logprob: -5.340791702270508
    8. '  
' → logprob: -6.340791702270508
    9. '	while' → logprob: -7.090791702270508
    10. ' ' → logprob: -7.090791702270508

Token 79: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.07392284274101257
    2. ' while' → logprob: -2.698922872543335
    3. '   ' → logprob: -5.573922634124756
    4. ')' → logprob: -9.823923110961914
    5. '```' → logprob: -9.823923110961914
    6. '	while' → logprob: -10.448923110961914
    7. '    
' → logprob: -11.698923110961914
    8. 'While' → logprob: -11.823923110961914
    9. '
' → logprob: -12.198923110961914
    10. '<|end|>' → logprob: -12.448923110961914

Token 80: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.3132622241973877
    2. 'stack' → logprob: -1.3132622241973877
    3. '	stack' → logprob: -15.438261985778809
    4. '(stack' → logprob: -15.688261985778809
    5. ' ' → logprob: -17.063262939453125
    6. '   ' → logprob: -17.438262939453125
    7. ' len' → logprob: -17.563262939453125
    8. 'len' → logprob: -19.063262939453125
    9. 'Stack' → logprob: -20.063262939453125
    10. '    ' → logprob: -20.438262939453125

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030036956071853638
    2. '.pop' → logprob: -3.5300369262695312
    3. ':
' → logprob: -8.780036926269531
    4. '):' → logprob: -10.030036926269531
    5. 'pop' → logprob: -10.530036926269531
    6. '[-' → logprob: -10.905036926269531
    7. '>:' → logprob: -11.030036926269531
    8. '-' → logprob: -12.405036926269531
    9. '-pop' → logprob: -13.030036926269531
    10. ' :' → logprob: -13.155036926269531

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28932008147239685
    2. 'x' → logprob: -1.4143201112747192
    3. ' x' → logprob: -5.41431999206543
    4. '   ' → logprob: -6.66431999206543
    5. '```' → logprob: -6.66431999206543
    6. ',' → logprob: -7.78931999206543
    7. '(x' → logprob: -8.91431999206543
    8. 'y' → logprob: -9.16431999206543
    9. ',x' → logprob: -9.16431999206543
    10. '	x' → logprob: -9.91431999206543

Token 83: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.00037895687273703516
    2. ' x' → logprob: -8.625378608703613
    3. '   ' → logprob: -8.625378608703613
    4. 'cx' → logprob: -11.375378608703613
    5. '```' → logprob: -12.000378608703613
    6. '       ' → logprob: -14.250378608703613
    7. '	x' → logprob: -14.875378608703613
    8. 'current' → logprob: -14.875378608703613
    9. 'cur' → logprob: -15.500378608703613
    10. ''x' → logprob: -16.00037956237793

Token 84: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0032134840730577707
    2. ',' → logprob: -5.753213405609131
    3. 'y' → logprob: -10.503213882446289
    4. ' ,' → logprob: -13.003213882446289
    5. '-' → logprob: -13.253213882446289
    6. ',n' → logprob: -14.503213882446289
    7. '_,' → logprob: -14.628213882446289
    8. ',x' → logprob: -15.003213882446289
    9. '-,' → logprob: -15.003213882446289
    10. ',Y' → logprob: -15.003213882446289

Token 85: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20533467829227448
    2. ' =' → logprob: -1.7053346633911133
    3. '   ' → logprob: -6.830334663391113
    4. '+' → logprob: -7.455334663391113
    5. ')' → logprob: -7.580334663391113
    6. '       ' → logprob: -7.580334663391113
    7. ',' → logprob: -8.455334663391113
    8. '-' → logprob: -8.580334663391113
    9. ')=' → logprob: -9.205334663391113
    10. '+=' → logprob: -9.330334663391113

Token 86: 'stack' (ID: 15145)
  Prédit: 'stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.06197138875722885
    2. ' stack' → logprob: -2.811971426010132
    3. '   ' → logprob: -13.311971664428711
    4. '	stack' → logprob: -13.311971664428711
    5. '(stack' → logprob: -15.311971664428711
    6. ' ' → logprob: -16.68697166442871
    7. 'Stack' → logprob: -16.93697166442871
    8. '.stack' → logprob: -16.93697166442871
    9. '_stack' → logprob: -17.18697166442871
    10. 'st' → logprob: -18.43697166442871

Token 87: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0004931025905534625
    2. 'pop' → logprob: -7.875493049621582
    3. '[-' → logprob: -9.125493049621582
    4. '-pop' → logprob: -13.500493049621582
    5. '   ' → logprob: -14.125493049621582
    6. ' pop' → logprob: -14.250493049621582
    7. 'Pop' → logprob: -14.875493049621582
    8. '	pop' → logprob: -15.000493049621582
    9. '.' → logprob: -15.250493049621582
    10. '.Pop' → logprob: -15.875493049621582

Token 88: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.4868770196917467e-05
    2. '(' → logprob: -11.375024795532227
    3. '()
' → logprob: -11.375024795532227
    4. ' ()' → logprob: -14.500024795532227
    5. '()

' → logprob: -15.125024795532227
    6. '()`' → logprob: -15.500024795532227
    7. '()]' → logprob: -15.750024795532227
    8. '()
' → logprob: -15.875024795532227
    9. '()\' → logprob: -16.000024795532227
    10. '())' → logprob: -16.125024795532227

Token 89: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5672114491462708
    2. '       ' → logprob: -1.192211389541626
    3. '<|end|>' → logprob: -2.817211389541626
    4. ' for' → logprob: -3.567211389541626
    5. ' if' → logprob: -3.692211389541626
    6. '    
' → logprob: -5.192211627960205
    7. '    ' → logprob: -6.067211627960205
    8. ',' → logprob: -6.567211627960205
    9. '           ' → logprob: -6.817211627960205
    10. '  ' → logprob: -7.317211627960205

Token 90: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5778871774673462
    2. ' for' → logprob: -0.8278871774673462
    3. 'if' → logprob: -6.952887058258057
    4. '   ' → logprob: -7.327887058258057
    5. 'dx' → logprob: -8.577887535095215
    6. ' if' → logprob: -10.327887535095215
    7. 'dire' → logprob: -10.327887535095215
    8. ' directions' → logprob: -10.952887535095215
    9. '	for' → logprob: -10.952887535095215
    10. '       ' → logprob: -11.077887535095215

Token 91: ' nx' (ID: 50118)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.19894176721572876
    2. ' nx' → logprob: -2.198941707611084
    3. 'dx' → logprob: -2.823941707611084
    4. 'nx' → logprob: -4.698941707611084
    5. '   ' → logprob: -7.698941707611084
    6. '```' → logprob: -8.198942184448242
    7. '(nx' → logprob: -8.698942184448242
    8. '_dx' → logprob: -10.573942184448242
    9. '(dx' → logprob: -10.823942184448242
    10. ' ' → logprob: -10.823942184448242

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0964086726307869
    2. ',n' → logprob: -2.8464086055755615
    3. ' in' → logprob: -4.096408843994141
    4. ',y' → logprob: -4.221408843994141
    5. ',d' → logprob: -6.596408843994141
    6. ' ,' → logprob: -7.346408843994141
    7. ',x' → logprob: -8.09640884399414
    8. ',user' → logprob: -10.59640884399414
    9. ',next' → logprob: -10.72140884399414
    10. ',v' → logprob: -10.97140884399414

Token 93: 'ny' (ID: 3008)
  Prédit: ' ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.028740039095282555
    2. 'ny' → logprob: -4.153739929199219
    3. 'y' → logprob: -4.903739929199219
    4. ',' → logprob: -5.653739929199219
    5. ' y' → logprob: -6.903739929199219
    6. ',y' → logprob: -7.653739929199219
    7. ' ' → logprob: -9.153739929199219
    8. '<|end|>' → logprob: -10.028739929199219
    9. '    ' → logprob: -10.903739929199219
    10. ' ,' → logprob: -11.778739929199219

Token 94: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0382753424346447
    2. 'in' → logprob: -3.2882752418518066
    3. ' ' → logprob: -8.663275718688965
    4. '<|end|>' → logprob: -10.288275718688965
    5. ',' → logprob: -11.788275718688965
    6. ')' → logprob: -12.413275718688965
    7. ' ,' → logprob: -13.038275718688965
    8. '```' → logprob: -13.413275718688965
    9. '    ' → logprob: -13.538275718688965
    10. '=' → logprob: -13.663275718688965

Token 95: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.011123746633529663
    2. ' [(' → logprob: -4.5111236572265625
    3. '[
' → logprob: -9.886123657226562
    4. '((' → logprob: -11.636123657226562
    5. '[' → logprob: -11.761123657226562
    6. '[((' → logprob: -12.886123657226562
    7. '[x' → logprob: -13.761123657226562
    8. ' ((' → logprob: -13.761123657226562
    9. ' [
' → logprob: -13.886123657226562
    10. '[[' → logprob: -13.886123657226562

Token 96: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005032312474213541
    2. ' x' → logprob: -7.625503063201904
    3. '(x' → logprob: -11.625503540039062
    4. ')x' → logprob: -12.500503540039062
    5. '   ' → logprob: -14.375503540039062
    6. ',x' → logprob: -14.750503540039062
    7. ',' → logprob: -15.375503540039062
    8. ')' → logprob: -15.500503540039062
    9. ' ' → logprob: -15.875503540039062
    10. '	x' → logprob: -15.875503540039062

Token 97: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06239527091383934
    2. '+' → logprob: -3.5623953342437744
    3. ',y' → logprob: -3.5623953342437744
    4. ' -' → logprob: -6.187395095825195
    5. '   ' → logprob: -7.187395095825195
    6. ',' → logprob: -7.562395095825195
    7. ' ' → logprob: -8.312395095825195
    8. ' ,' → logprob: -9.562395095825195
    9. ' +' → logprob: -9.687395095825195
    10. '1' → logprob: -11.187395095825195

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.750024795532227
    3. '   ' → logprob: -14.000024795532227
    4. '0' → logprob: -14.000024795532227
    5. ',' → logprob: -14.125024795532227
    6. '```' → logprob: -16.312524795532227
    7. ')' → logprob: -16.500024795532227
    8. '  ' → logprob: -16.500024795532227
    9. '-' → logprob: -16.687524795532227
    10. '<|end|>' → logprob: -17.125024795532227

Token 99: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0011408114805817604
    2. ' ,' → logprob: -7.251140594482422
    3. ',' → logprob: -7.751140594482422
    4. 'y' → logprob: -15.501140594482422
    5. ',x' → logprob: -16.126140594482422
    6. '   ' → logprob: -16.501140594482422
    7. ' y' → logprob: -17.251140594482422
    8. '```' → logprob: -17.751140594482422
    9. ',n' → logprob: -18.251140594482422
    10. ' ' → logprob: -18.251140594482422

Token 100: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.038660429418087006
    2. '),' → logprob: -3.2886605262756348
    3. ' ),' → logprob: -7.413660526275635
    4. '       ' → logprob: -12.163660049438477
    5. '   ' → logprob: -12.538660049438477
    6. '),
' → logprob: -13.163660049438477
    7. ')' → logprob: -14.038660049438477
    8. '  ' → logprob: -14.288660049438477
    9. ' ' → logprob: -14.538660049438477
    10. ',' → logprob: -14.788660049438477

Token 101: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.05761724337935448
    2. 'x' → logprob: -2.9326171875
    3. ' y' → logprob: -5.9326171875
    4. '   ' → logprob: -10.3076171875
    5. ' x' → logprob: -10.8076171875
    6. ' ' → logprob: -11.5576171875
    7. '    ' → logprob: -12.4326171875
    8. ')y' → logprob: -12.4326171875
    9. '  ' → logprob: -13.4326171875
    10. '       ' → logprob: -13.5576171875

Token 102: '+' (ID: 10)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.024908840656280518
    2. '-' → logprob: -4.024909019470215
    3. '+' → logprob: -5.024909019470215
    4. ' ' → logprob: -9.899909019470215
    5. ',' → logprob: -10.274909019470215
    6. '+y' → logprob: -10.524909019470215
    7. '   ' → logprob: -11.024909019470215
    8. ' ,' → logprob: -11.649909019470215
    9. 'y' → logprob: -11.899909019470215
    10. ',n' → logprob: -12.524909019470215

Token 103: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02086043916642666
    2. ',y' → logprob: -3.895860433578491
    3. ' y' → logprob: -8.77086067199707
    4. ',' → logprob: -8.77086067199707
    5. '0' → logprob: -13.02086067199707
    6. ' ,' → logprob: -13.64586067199707
    7. '<|end|>' → logprob: -13.77086067199707
    8. '(y' → logprob: -14.02086067199707
    9. ' ' → logprob: -14.14586067199707
    10. '1' → logprob: -14.27086067199707

Token 104: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.000297685619443655
    2. ' ,' → logprob: -8.250297546386719
    3. ',' → logprob: -10.250297546386719
    4. '),(' → logprob: -14.625297546386719
    5. 'y' → logprob: -15.250297546386719
    6. ',n' → logprob: -16.00029754638672
    7. ',(' → logprob: -16.50029754638672
    8. ',x' → logprob: -17.62529754638672
    9. ' y' → logprob: -17.75029754638672
    10. ',user' → logprob: -17.87529754638672

Token 105: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0031850787345319986
    2. ',(' → logprob: -5.878185272216797
    3. ',y' → logprob: -8.003185272216797
    4. '),' → logprob: -10.628185272216797
    5. ',' → logprob: -11.378185272216797
    6. ',n' → logprob: -12.503185272216797
    7. ' ),' → logprob: -13.628185272216797
    8. '(y' → logprob: -13.628185272216797
    9. ' ,' → logprob: -13.878185272216797
    10. '   ' → logprob: -13.878185272216797

Token 106: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05018892511725426
    2. 'y' → logprob: -3.0501890182495117
    3. ' x' → logprob: -6.925189018249512
    4. ' y' → logprob: -7.550189018249512
    5. '(x' → logprob: -9.800189018249512
    6. ' ' → logprob: -11.550189018249512
    7. '   ' → logprob: -11.550189018249512
    8. ')' → logprob: -12.925189018249512
    9. '  ' → logprob: -13.050189018249512
    10. '       ' → logprob: -13.300189018249512

Token 107: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9164071679115295
    2. '),(' → logprob: -1.0414071083068848
    3. ',n' → logprob: -2.1664071083068848
    4. '-' → logprob: -2.5414071083068848
    5. ',y' → logprob: -4.041407108306885
    6. ',(' → logprob: -4.291407108306885
    7. '0' → logprob: -5.416407108306885
    8. ')' → logprob: -5.541407108306885
    9. ' ' → logprob: -5.666407108306885
    10. ')]' → logprob: -6.041407108306885

Token 108: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.318681188422488e-05
    2. ' -' → logprob: -11.25001335144043
    3. '+' → logprob: -15.87501335144043
    4. '-)' → logprob: -18.37501335144043
    5. '   ' → logprob: -19.25001335144043
    6. ' ' → logprob: -20.00001335144043
    7. '1' → logprob: -20.12501335144043
    8. '<|end|>' → logprob: -20.37501335144043
    9. '–' → logprob: -20.75001335144043
    10. '()-' → logprob: -20.87501335144043

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00462510297074914
    2. '-' → logprob: -5.37962532043457
    3. ' ' → logprob: -13.12962532043457
    4. '   ' → logprob: -13.12962532043457
    5. ' -' → logprob: -14.75462532043457
    6. '+' → logprob: -14.87962532043457
    7. '```' → logprob: -16.37962532043457
    8. ')' → logprob: -17.12962532043457
    9. '  ' → logprob: -17.25462532043457
    10. '    ' → logprob: -18.00462532043457

Token 110: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -7.32654589228332e-05
    2. '),' → logprob: -9.625073432922363
    3. ' ),' → logprob: -12.250073432922363
    4. ',(' → logprob: -13.625073432922363
    5. '),
' → logprob: -15.000073432922363
    6. '   ' → logprob: -15.250073432922363
    7. '       ' → logprob: -15.875073432922363
    8. ' ' → logprob: -16.000072479248047
    9. ',y' → logprob: -16.250072479248047
    10. '           ' → logprob: -17.250072479248047

Token 111: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008839694783091545
    2. 'x' → logprob: -5.2588396072387695
    3. ' y' → logprob: -5.6338396072387695
    4. '   ' → logprob: -11.75883960723877
    5. '(y' → logprob: -12.38383960723877
    6. ')y' → logprob: -12.88383960723877
    7. ' ' → logprob: -13.63383960723877
    8. ' x' → logprob: -13.63383960723877
    9. '```' → logprob: -13.63383960723877
    10. '+' → logprob: -13.63383960723877

Token 112: ',y' (ID: 16103)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.435139898210764e-05
    2. '+y' → logprob: -9.875083923339844
    3. ',y' → logprob: -10.500083923339844
    4. ' +' → logprob: -12.625083923339844
    5. '-' → logprob: -14.500083923339844
    6. ',' → logprob: -14.875083923339844
    7. '+x' → logprob: -15.250083923339844
    8. '+n' → logprob: -15.375083923339844
    9. '+
' → logprob: -15.875083923339844
    10. '1' → logprob: -15.875083923339844

Token 113: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.652451464906335e-05
    2. '-' → logprob: -11.250016212463379
    3. ')]' → logprob: -13.500016212463379
    4. ' +' → logprob: -14.125016212463379
    5. '1' → logprob: -14.250016212463379
    6. ')' → logprob: -16.000017166137695
    7. '+)' → logprob: -16.000017166137695
    8. '+
' → logprob: -16.375017166137695
    9. ')][' → logprob: -16.375017166137695
    10. ')])' → logprob: -16.875017166137695

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004801240866072476
    2. '0' → logprob: -8.375479698181152
    3. '+' → logprob: -8.500479698181152
    4. ')]' → logprob: -10.875479698181152
    5. ' ' → logprob: -11.250479698181152
    6. 'y' → logprob: -11.875479698181152
    7. ')' → logprob: -12.875479698181152
    8. ')][' → logprob: -12.875479698181152
    9. ')]
' → logprob: -15.125479698181152
    10. '   ' → logprob: -15.375479698181152

Token 115: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.26344576478004456
    2. ')' → logprob: -1.8884457349777222
    3. '):
' → logprob: -3.2634458541870117
    4. '):' → logprob: -3.6384458541870117
    5. '       ' → logprob: -4.263445854187012
    6. '           ' → logprob: -7.638445854187012
    7. ' )' → logprob: -7.638445854187012
    8. '   ' → logprob: -7.888445854187012
    9. '）' → logprob: -10.013445854187012
    10. ']' → logprob: -10.013445854187012

Token 116: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49491265416145325
    2. '       ' → logprob: -0.9949126243591309
    3. ':
' → logprob: -4.119912624359131
    4. ',' → logprob: -6.244912624359131
    5. '<|end|>' → logprob: -6.869912624359131
    6. '           ' → logprob: -7.619912624359131
    7. '   ' → logprob: -7.869912624359131
    8. '):
' → logprob: -8.369913101196289
    9. '):' → logprob: -9.494913101196289
    10. '<|end|>' → logprob: -9.494913101196289

Token 117: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00861729308962822
    2. '           ' → logprob: -5.133617401123047
    3. '<|end|>' → logprob: -6.133617401123047
    4. ' if' → logprob: -8.633617401123047
    5. '               ' → logprob: -9.258617401123047
    6. '        ' → logprob: -9.383617401123047
    7. '   ' → logprob: -9.758617401123047
    8. '    ' → logprob: -10.758617401123047
    9. '      ' → logprob: -11.008617401123047
    10. ' ' → logprob: -11.383617401123047

Token 118: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09440113604068756
    2. '           ' → logprob: -2.4694011211395264
    3. 'if' (adapté à ' if') → logprob: -5.4694013595581055
    4. '            ' → logprob: -6.9694013595581055
    5. '               ' → logprob: -8.969401359558105
    6. '       ' → logprob: -10.094401359558105
    7. '   ' → logprob: -10.594401359558105
    8. ' ' → logprob: -10.719401359558105
    9. '    ' → logprob: -10.969401359558105
    10. '<|end|>' → logprob: -11.219401359558105

Token 119: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01618299074470997
    2. ' ' → logprob: -4.141182899475098
    3. '(nx' → logprob: -9.766182899475098
    4. ' nx' → logprob: -10.516182899475098
    5. ' (' → logprob: -10.891182899475098
    6. '   ' → logprob: -11.016182899475098
    7. '(' → logprob: -11.266182899475098
    8. 'nx' → logprob: -11.641182899475098
    9. '           ' → logprob: -13.141182899475098
    10. '  ' → logprob: -14.328682899475098

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002907718007918447
    2. ' ' → logprob: -8.625290870666504
    3. '(nx' → logprob: -9.625290870666504
    4. '(' → logprob: -10.250290870666504
    5. 'nx' → logprob: -12.125290870666504
    6. '   ' → logprob: -13.000290870666504
    7. ' (' → logprob: -13.750290870666504
    8. '(x' → logprob: -15.125290870666504
    9. ' nx' → logprob: -15.125290870666504
    10. '(n' → logprob: -16.125289916992188

Token 121: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.03804263845086098
    2. ' <=' → logprob: -3.2880425453186035
    3. '<' → logprob: -14.163043022155762
    4. ')<=' → logprob: -16.413042068481445
    5. ']<=' → logprob: -16.663042068481445
    6. '0' → logprob: -16.913042068481445
    7. '<len' → logprob: -17.038042068481445
    8. '&lt' → logprob: -17.413042068481445
    9. '...' → logprob: -17.413042068481445
    10. ' ' → logprob: -17.663042068481445

Token 122: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.006776707712560892
    2. ' nx' → logprob: -5.006776809692383
    3. 'ny' → logprob: -10.006776809692383
    4. '(nx' → logprob: -11.256776809692383
    5. 'x' → logprob: -13.506776809692383
    6. '   ' → logprob: -14.131776809692383
    7. ' ny' → logprob: -14.506776809692383
    8. 'n' → logprob: -15.256776809692383
    9. 'Nx' → logprob: -15.881776809692383
    10. 'xn' → logprob: -16.006776809692383

Token 123: '<W' (ID: 180273)
  Prédit: '<W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<W' → logprob: -0.10078614205121994
    2. '<' → logprob: -2.3507862091064453
    3. ' <' → logprob: -8.475786209106445
    4. '<H' → logprob: -8.725786209106445
    5. '<x' → logprob: -8.725786209106445
    6. '<w' → logprob: -10.975786209106445
    7. 'W' → logprob: -11.725786209106445
    8. ' and' → logprob: -11.975786209106445
    9. 'and' → logprob: -12.475786209106445
    10. '<N' → logprob: -12.600786209106445

Token 124: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16022524237632751
    2. 'and' → logprob: -1.91022527217865
    3. '           ' → logprob: -14.035224914550781
    4. ' ' → logprob: -15.785224914550781
    5. '   ' → logprob: -16.91022491455078
    6. '0' → logprob: -17.41022491455078
    7. '               ' → logprob: -17.53522491455078
    8. '	and' → logprob: -18.16022491455078
    9. '            ' → logprob: -18.53522491455078
    10. '       ' → logprob: -18.78522491455078

Token 125: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.8751802444458
    4. '           ' → logprob: -17.250179290771484
    5. '  ' → logprob: -18.750179290771484
    6. '               ' → logprob: -19.000179290771484
    7. '    ' → logprob: -19.375179290771484
    8. '       ' → logprob: -19.500179290771484
    9. '                   ' → logprob: -20.000179290771484
    10. '     ' → logprob: -21.000179290771484

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.75002098083496
    4. '
' → logprob: -20.37502098083496
    5. '  ' → logprob: -20.50002098083496
    6. '۰' → logprob: -21.43752098083496
    7. ' ' → logprob: -21.68752098083496
    8. '           ' → logprob: -21.87502098083496
    9. '    ' → logprob: -22.25002098083496
    10. '               ' → logprob: -22.62502098083496

Token 127: '<=' (ID: 16672)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6620158553123474
    2. '<H' → logprob: -0.9120158553123474
    3. ' <' → logprob: -2.787015914916992
    4. '<W' → logprob: -4.287015914916992
    5. '<n' → logprob: -5.912015914916992
    6. '0' → logprob: -6.412015914916992
    7. '<N' → logprob: -7.287015914916992
    8. '<len' → logprob: -7.412015914916992
    9. '<size' → logprob: -8.287015914916992
    10. '<num' → logprob: -8.287015914916992

Token 128: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.3497539162635803
    2. 'H' → logprob: -1.2247538566589355
    3. ' ny' → logprob: -7.3497538566589355
    4. 'nh' → logprob: -7.5997538566589355
    5. ' H' → logprob: -8.849754333496094
    6. '   ' → logprob: -12.224754333496094
    7. 'n' → logprob: -12.599754333496094
    8. 'y' → logprob: -13.224754333496094
    9. '	H' → logprob: -13.224754333496094
    10. 'hy' → logprob: -13.349754333496094

Token 129: '<H' (ID: 104212)
  Prédit: '<H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<H' → logprob: -1.1875571544806007e-05
    2. '<' → logprob: -11.875011444091797
    3. '<W' → logprob: -13.125011444091797
    4. ' <' → logprob: -13.250011444091797
    5. '<len' → logprob: -15.500011444091797
    6. 'H' → logprob: -16.000011444091797
    7. '<h' → logprob: -16.375011444091797
    8. 'and' → logprob: -16.750011444091797
    9. '&H' → logprob: -16.750011444091797
    10. '<size' → logprob: -17.000011444091797

Token 130: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007899629883468151
    2. 'and' → logprob: -4.882899761199951
    3. '           ' → logprob: -8.257899284362793
    4. '               ' → logprob: -10.882899284362793
    5. '       ' → logprob: -12.382899284362793
    6. ':
' → logprob: -13.007899284362793
    7. '          ' → logprob: -13.007899284362793
    8. '            ' → logprob: -13.132899284362793
    9. '   ' → logprob: -13.632899284362793
    10. '              ' → logprob: -14.132899284362793

Token 131: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.001622695242986083
    2. ' grid' → logprob: -7.001622676849365
    3. '(grid' → logprob: -7.251622676849365
    4. '   ' → logprob: -14.251623153686523
    5. ' (' → logprob: -14.751623153686523
    6. '(' → logprob: -14.876623153686523
    7. '           ' → logprob: -15.376623153686523
    8. 'not' → logprob: -16.751623153686523
    9. '	grid' → logprob: -16.876623153686523
    10. '               ' → logprob: -17.001623153686523

Token 132: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.630610641877865e-06
    2. 'ny' → logprob: -12.625006675720215
    3. '[y' → logprob: -14.375006675720215
    4. '[n' → logprob: -14.625006675720215
    5. ' [' → logprob: -14.625006675720215
    6. '```' → logprob: -14.875006675720215
    7. '][' → logprob: -15.125006675720215
    8. ' ny' → logprob: -15.375006675720215
    9. '   ' → logprob: -15.500006675720215
    10. '       ' → logprob: -15.500006675720215

Token 133: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.06212542578577995
    2. '[' → logprob: -2.8121254444122314
    3. ' ny' → logprob: -9.687125205993652
    4. '][' → logprob: -9.812125205993652
    5. 'y' → logprob: -10.562125205993652
    6. '   ' → logprob: -12.187125205993652
    7. '[y' → logprob: -12.437125205993652
    8. ']' → logprob: -13.062125205993652
    9. 'n' → logprob: -13.937125205993652
    10. '```' → logprob: -14.562125205993652

Token 134: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.16040781140327454
    2. '][' → logprob: -1.9104077816009521
    3. '[' → logprob: -8.660408020019531
    4. '"][' → logprob: -12.660408020019531
    5. ']' → logprob: -13.035408020019531
    6. '(nx' → logprob: -13.785408020019531
    7. ''][' → logprob: -14.160408020019531
    8. '}[' → logprob: -14.410408020019531
    9. ' [' → logprob: -14.910408020019531
    10. ' ][' → logprob: -14.910408020019531

Token 135: 'nx' (ID: 45103)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014475150033831596
    2. 'nx' → logprob: -4.264475345611572
    3. ''x' → logprob: -8.139474868774414
    4. ' nx' → logprob: -11.889474868774414
    5. '[x' → logprob: -12.389474868774414
    6. ' x' → logprob: -12.764474868774414
    7. '(nx' → logprob: -13.014474868774414
    8. '"x' → logprob: -13.014474868774414
    9. '[' → logprob: -15.514474868774414
    10. '   ' → logprob: -15.764474868774414

Token 136: ']!='' (ID: 187656)
  Prédit: ']==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=='' → logprob: -0.04104519262909889
    2. '=='' → logprob: -3.2910451889038086
    3. ']==' → logprob: -6.041045188903809
    4. ']!='' → logprob: -8.166045188903809
    5. ']' → logprob: -8.416045188903809
    6. '']=='' → logprob: -9.416045188903809
    7. ')=='' → logprob: -11.041045188903809
    8. '!='' → logprob: -12.041045188903809
    9. ' =='' → logprob: -12.416045188903809
    10. ']=="' → logprob: -12.791045188903809

Token 137: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -7.600714161526412e-05
    2. '.' → logprob: -9.875076293945312
    3. ''#' → logprob: -10.750076293945312
    4. '.#' → logprob: -13.750076293945312
    5. '#w' → logprob: -14.125076293945312
    6. '*' → logprob: -15.375076293945312
    7. '.')' → logprob: -15.625076293945312
    8. ' '#'' → logprob: -15.750076293945312
    9. '#
' → logprob: -15.875076293945312
    10. 'x' → logprob: -15.875076293945312

Token 138: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016038356348872185
    2. 'and' → logprob: -4.141038417816162
    3. ' ' → logprob: -13.516037940979004
    4. '    ' → logprob: -13.766037940979004
    5. '   ' → logprob: -14.391037940979004
    6. '           ' → logprob: -14.641037940979004
    7. '            ' → logprob: -15.266037940979004
    8. '        ' → logprob: -16.01603889465332
    9. '	and' → logprob: -16.39103889465332
    10. '               ' → logprob: -16.64103889465332

Token 139: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023246875032782555
    2. 'and' → logprob: -3.7732467651367188
    3. ' ' → logprob: -14.398246765136719
    4. '    ' → logprob: -14.648246765136719
    5. '   ' → logprob: -15.648246765136719
    6. '            ' → logprob: -16.14824676513672
    7. '           ' → logprob: -16.39824676513672
    8. '        ' → logprob: -17.52324676513672
    9. '	and' → logprob: -17.77324676513672
    10. '          ' → logprob: -18.27324676513672

Token 140: ' (' (ID: 350)
  Prédit: '(grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.5667086243629456
    2. '(nx' → logprob: -1.8167085647583008
    3. ' (' → logprob: -1.9417085647583008
    4. '(start' → logprob: -2.316708564758301
    5. '(n' → logprob: -4.566708564758301
    6. '(x' → logprob: -5.066708564758301
    7. '(' → logprob: -5.316708564758301
    8. 'grid' → logprob: -5.941708564758301
    9. '(not' → logprob: -6.566708564758301
    10. '   ' → logprob: -6.691708564758301

Token 141: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0025283375289291143
    2. '(nx' → logprob: -6.002528190612793
    3. ' nx' → logprob: -9.877528190612793
    4. '   ' → logprob: -14.752528190612793
    5. '(n' → logprob: -14.877528190612793
    6. ' (' → logprob: -15.127528190612793
    7. '
' → logprob: -15.877528190612793
    8. 'ny' → logprob: -16.62752914428711
    9. 'n' → logprob: -17.75252914428711
    10. '(' → logprob: -17.87752914428711

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2127087504486553e-05
    2. ' ,' → logprob: -11.250021934509277
    3. ',y' → logprob: -11.750021934509277
    4. ',
' → logprob: -14.000021934509277
    5. ',(' → logprob: -16.000022888183594
    6. ',n' → logprob: -17.000022888183594
    7. ',

' → logprob: -18.000022888183594
    8. ',None' → logprob: -18.375022888183594
    9. ',#' → logprob: -18.750022888183594
    10. ',new' → logprob: -19.250022888183594

Token 143: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -7.600714161526412e-05
    2. ' ny' → logprob: -9.500076293945312
    3. ',' → logprob: -14.250076293945312
    4. '
' → logprob: -16.000076293945312
    5. 'nyi' → logprob: -16.500076293945312
    6. '   ' → logprob: -16.625076293945312
    7. '```' → logprob: -17.375076293945312
    8. ''ny' → logprob: -17.375076293945312
    9. 'ney' → logprob: -17.750076293945312
    10. ' ' → logprob: -17.875076293945312

Token 144: ')' (ID: 8)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2057921439409256
    2. ')' → logprob: -2.205792188644409
    3. 'not' → logprob: -2.580792188644409
    4. ' )' → logprob: -9.080792427062988
    5. '	not' → logprob: -13.080792427062988
    6. '   ' → logprob: -13.205792427062988
    7. '
' → logprob: -14.705792427062988
    8. ':not' → logprob: -14.955792427062988
    9. '```' → logprob: -14.955792427062988
    10. ' ' → logprob: -15.205792427062988

Token 145: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3132636249065399
    2. 'not' → logprob: -1.3132636547088623
    3. '
' → logprob: -14.313263893127441
    4. ')' → logprob: -14.688263893127441
    5. '	not' → logprob: -14.813263893127441
    6. 'in' → logprob: -15.813263893127441
    7. ':not' → logprob: -15.813263893127441
    8. ' in' → logprob: -17.063262939453125
    9. '_not' → logprob: -17.438262939453125
    10. 'and' → logprob: -17.563262939453125

Token 146: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.42633795738220215
    2. ' in' → logprob: -1.1763379573822021
    3. 'visited' → logprob: -3.301337957382202
    4. ' visited' → logprob: -7.676338195800781
    5. '   ' → logprob: -7.801338195800781
    6. '<|end|>' → logprob: -7.801338195800781
    7. ')' → logprob: -8.051338195800781
    8. '[' → logprob: -10.051338195800781
    9. 'to' → logprob: -10.426338195800781
    10. ',' → logprob: -10.426338195800781

Token 147: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.003187339985743165
    2. ' visited' → logprob: -5.75318717956543
    3. '   ' → logprob: -11.62818717956543
    4. 'visit' → logprob: -14.50318717956543
    5. ' ' → logprob: -16.87818717956543
    6. '  ' → logprob: -17.62818717956543
    7. '       ' → logprob: -18.00318717956543
    8. 'vis' → logprob: -18.12818717956543
    9. '
' → logprob: -18.50318717956543
    10. '           ' → logprob: -18.50318717956543

Token 148: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5364072322845459
    2. ':' → logprob: -1.911407232284546
    3. ' and' → logprob: -2.036407232284546
    4. '               ' → logprob: -2.161407232284546
    5. '           ' → logprob: -4.036407470703125
    6. '):
' → logprob: -6.411407470703125
    7. 'and' → logprob: -6.536407470703125
    8. '                   ' → logprob: -8.786407470703125
    9. '              ' → logprob: -9.161407470703125
    10. '   ' → logprob: -9.286407470703125

Token 149: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00013464801304508
    2. ' visited' → logprob: -10.125134468078613
    3. 'visited' → logprob: -10.625134468078613
    4. ':' → logprob: -11.500134468078613
    5. ' and' → logprob: -11.500134468078613
    6. '                
' → logprob: -11.500134468078613
    7. '<|end|>' → logprob: -11.500134468078613
    8. '```' → logprob: -12.125134468078613
    9. '              ' → logprob: -12.375134468078613
    10. '           ' → logprob: -12.500134468078613

Token 150: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.7879062294960022
    2. 'visited' (adapté à ' visited') → logprob: -0.9129062294960022
    3. '                   ' → logprob: -2.9129061698913574
    4. '               ' → logprob: -3.1629061698913574
    5. ' if' → logprob: -3.1629061698913574
    6. 'if' → logprob: -5.662906169891357
    7. '                ' → logprob: -7.662906169891357
    8. 'stack' → logprob: -8.162906646728516
    9. '   ' → logprob: -8.287906646728516
    10. ' stack' → logprob: -8.912906646728516

Token 151: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -6.630610641877865e-06
    2. '.' → logprob: -12.000006675720215
    3. ' .' → logprob: -14.875006675720215
    4. '.append' → logprob: -17.3750057220459
    5. '   ' → logprob: -17.5000057220459
    6. ').' → logprob: -18.5000057220459
    7. '.Add' → logprob: -18.8750057220459
    8. 'add' → logprob: -19.1250057220459
    9. '].' → logprob: -19.2500057220459
    10. '           ' → logprob: -19.8750057220459

Token 152: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -8.061054359131958e-06
    2. '(' → logprob: -12.375007629394531
    3. '(nx' → logprob: -12.750007629394531
    4. ' ((' → logprob: -14.375007629394531
    5. '(
' → logprob: -16.12500762939453
    6. '(n' → logprob: -16.75000762939453
    7. ' (' → logprob: -17.62500762939453
    8. '   ' → logprob: -17.75000762939453
    9. ' ' → logprob: -18.50000762939453
    10. '  ' → logprob: -19.37500762939453

Token 153: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -9.13388703338569e-06
    2. ' nx' → logprob: -12.250009536743164
    3. '(nx' → logprob: -12.375009536743164
    4. '   ' → logprob: -16.250009536743164
    5. '
' → logprob: -18.750009536743164
    6. '```' → logprob: -19.625009536743164
    7. 'n' → logprob: -20.125009536743164
    8. 'x' → logprob: -20.250009536743164
    9. 'xn' → logprob: -20.500009536743164
    10. '           ' → logprob: -20.875009536743164

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007425126153975725
    2. ',n' → logprob: -5.007425308227539
    3. '))' → logprob: -8.007425308227539
    4. '(nx' → logprob: -8.632425308227539
    5. ' ,' → logprob: -9.757425308227539
    6. 'x' → logprob: -10.132425308227539
    7. ',x' → logprob: -10.382425308227539
    8. '[' → logprob: -10.632425308227539
    9. ',y' → logprob: -11.632425308227539
    10. 'nx' → logprob: -11.757425308227539

Token 155: 'ny' (ID: 3008)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0038184872828423977
    2. 'ny' → logprob: -5.628818511962891
    3. ' nx' → logprob: -8.87881851196289
    4. '(nx' → logprob: -9.50381851196289
    5. 'x' → logprob: -13.37881851196289
    6. ' ny' → logprob: -13.87881851196289
    7. '
' → logprob: -14.25381851196289
    8. 'n' → logprob: -14.62881851196289
    9. '```' → logprob: -15.62881851196289
    10. 'nz' → logprob: -15.75381851196289

Token 156: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3140473961830139
    2. ')' → logprob: -1.3140473365783691
    3. '               ' → logprob: -7.189047336578369
    4. ')
' → logprob: -10.564047813415527
    5. 'stack' → logprob: -13.814047813415527
    6. ')

' → logprob: -14.064047813415527
    7. '                   ' → logprob: -14.689047813415527
    8. '           ' → logprob: -14.939047813415527
    9. ' )
' → logprob: -15.189047813415527
    10. '),' → logprob: -15.314047813415527

Token 157: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08108840137720108
    2. 'stack' → logprob: -2.5810883045196533
    3. ' stack' → logprob: -6.206088542938232
    4. '	stack' → logprob: -9.456088066101074
    5. '           ' → logprob: -10.581088066101074
    6. '   ' → logprob: -10.706088066101074
    7. '```' → logprob: -11.081088066101074
    8. '                   ' → logprob: -11.706088066101074
    9. '       ' → logprob: -11.831088066101074
    10. '			' → logprob: -12.331088066101074

Token 158: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -7.941850526549388e-06
    2. ' stack' → logprob: -11.750007629394531
    3. '               ' → logprob: -18.37500762939453
    4. '	stack' → logprob: -19.37500762939453
    5. '   ' → logprob: -20.75000762939453
    6. '                   ' → logprob: -21.12500762939453
    7. '.stack' → logprob: -22.00000762939453
    8. 'Stack' → logprob: -22.37500762939453
    9. '           ' → logprob: -22.50000762939453
    10. 'stackoverflow' → logprob: -23.00000762939453

Token 159: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.320199877838604e-07
    2. '.app' → logprob: -15.625
    3. '.' → logprob: -15.75
    4. '.extend' → logprob: -16.75
    5. '.push' → logprob: -18.5
    6. ' .' → logprob: -18.625
    7. '.Append' → logprob: -18.875
    8. '.ap' → logprob: -18.875
    9. 'append' → logprob: -19.75
    10. '.add' → logprob: -20.875

Token 160: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -15.000000953674316
    3. '(((' → logprob: -15.000000953674316
    4. ' ((' → logprob: -17.125
    5. '(
' → logprob: -18.625
    6. '(nx' → logprob: -19.125
    7. '```' → logprob: -19.5
    8. '([(' → logprob: -20.125
    9. '[(' → logprob: -20.375
    10. ')((' → logprob: -20.5

Token 161: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -4.704065213445574e-05
    2. '(nx' → logprob: -10.000046730041504
    3. ' nx' → logprob: -13.375046730041504
    4. '   ' → logprob: -17.87504768371582
    5. '(n' → logprob: -19.25004768371582
    6. '
' → logprob: -19.37504768371582
    7. 'n' → logprob: -19.37504768371582
    8. '```' → logprob: -19.50004768371582
    9. 'ny' → logprob: -20.62504768371582
    10. '(' → logprob: -20.87504768371582

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056527312844991684
    2. ',n' → logprob: -2.9315273761749268
    3. ',y' → logprob: -6.806527137756348
    4. 'ny' → logprob: -8.431527137756348
    5. '))' → logprob: -8.806527137756348
    6. '(nx' → logprob: -9.681527137756348
    7. 'nx' → logprob: -10.681527137756348
    8. ' ,' → logprob: -10.806527137756348
    9. 'x' → logprob: -10.931527137756348
    10. 'y' → logprob: -11.431527137756348

Token 163: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00017064384883269668
    2. 'nx' → logprob: -8.750170707702637
    3. ' ny' → logprob: -11.625170707702637
    4. 'y' → logprob: -13.375170707702637
    5. '
' → logprob: -14.500170707702637
    6. 'nyi' → logprob: -15.000170707702637
    7. '```' → logprob: -15.750170707702637
    8. 'n' → logprob: -15.875170707702637
    9. ')' → logprob: -16.25016975402832
    10. 'ni' → logprob: -16.87516975402832

Token 164: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47408872842788696
    2. '))' → logprob: -0.974088728427887
    3. ')))' → logprob: -12.099088668823242
    4. '))
' → logprob: -12.724088668823242
    5. ')
' → logprob: -12.849088668823242
    6. ' )' → logprob: -15.974088668823242
    7. ')}' → logprob: -16.349088668823242
    8. '])' → logprob: -16.974088668823242
    9. ' ))' → logprob: -17.349088668823242
    10. '   ' → logprob: -17.599088668823242

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38719624280929565
    2. 'print' → logprob: -1.1371963024139404
    3. ' print' → logprob: -8.63719654083252
    4. '```' → logprob: -8.88719654083252
    5. '
' → logprob: -12.76219654083252
    6. '``' → logprob: -13.38719654083252
    7. '       ' → logprob: -13.63719654083252
    8. '    
' → logprob: -13.63719654083252
    9. 'count' → logprob: -14.01219654083252
    10. '           ' → logprob: -14.76219654083252

Token 166: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0015068859793245792
    2. '   ' → logprob: -6.501506805419922
    3. ' print' → logprob: -12.626506805419922
    4. '```' → logprob: -13.751506805419922
    5. '    
' → logprob: -15.876506805419922
    6. '#print' → logprob: -17.626506805419922
    7. '
' → logprob: -18.251506805419922
    8. '``' → logprob: -18.376506805419922
    9. '	print' → logprob: -18.751506805419922
    10. '       ' → logprob: -19.126506805419922

Token 167: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -4.0484450437361374e-05
    2. 'len' → logprob: -10.125040054321289
    3. '(' → logprob: -15.500040054321289
    4. ' len' → logprob: -15.750040054321289
    5. '[len' → logprob: -18.12504005432129
    6. ' (' → logprob: -18.37504005432129
    7. ',len' → logprob: -18.50004005432129
    8. '=len' → logprob: -18.62504005432129
    9. '<len' → logprob: -18.75004005432129
    10. '	len' → logprob: -19.00004005432129

Token 168: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.749814019713085e-06
    2. 'visited' → logprob: -12.125006675720215
    3. ' (' → logprob: -14.125006675720215
    4. ')' → logprob: -14.750006675720215
    5. ' visited' → logprob: -16.25000762939453
    6. '(vis' → logprob: -17.00000762939453
    7. '(visitor' → logprob: -18.12500762939453
    8. '(
' → logprob: -18.12500762939453
    9. ')(' → logprob: -18.62500762939453
    10. '`' → logprob: -18.62500762939453

Token 169: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -4.842555426876061e-06
    2. ' visited' → logprob: -12.250004768371582
    3. '(' → logprob: -19.6250057220459
    4. '   ' → logprob: -20.2500057220459
    5. 'visible' → logprob: -21.5000057220459
    6. ')' → logprob: -21.8750057220459
    7. 'vis' → logprob: -21.8750057220459
    8. 'visit' → logprob: -22.0000057220459
    9. 'Visited' → logprob: -23.1250057220459
    10. 'visitor' → logprob: -23.5000057220459

Token 170: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007112398743629456
    2. '))' → logprob: -7.250711441040039
    3. ' )' → logprob: -15.000711441040039
    4. ')}' → logprob: -15.000711441040039
    5. ')`' → logprob: -15.500711441040039
    6. '())' → logprob: -15.625711441040039
    7. ')
' → logprob: -16.00071144104004
    8. ')))' → logprob: -16.12571144104004
    9. '})' → logprob: -16.87571144104004
    10. '`)' → logprob: -18.75071144104004


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 168
Tokens correctement prédits (1ère position, stricte): 91
Tokens correctement prédits (1ère position, avec adaptation): 97
Tokens correctement prédits (top 10): 154
Précision stricte (1ère position): 54.17%
Précision adaptée (1ère position): 57.74%
Précision (top 10): 91.67%
================================================================================
