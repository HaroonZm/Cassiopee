================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:31:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)
input = sys.stdin.readline

N, K = map(int, input().split())
C = [0]*(N+1)
R = [0]*(N+1)
for i in range(1, N+1):
    c, r = map(int, input().split())
    C[i] = c
    R[i] = r

graph = [[] for _ in range(N+1)]
for _ in range(K):
    a, b = map(int, input().split())
    graph[a].append(b)
    graph[b].append(a)

INF = 10**15
dp = [INF]*(N+1)
dp[1] = 0

from collections import deque

for i in range(1, N+1):
    # BFS from i to find towns reachable with R[i] or less edges
    dist = [-1]*(N+1)
    dist[i] = 0
    que = deque()
    que.append(i)
    reachable = []
    while que:
        v = que.popleft()
        if dist[v] == R[i]:
            continue
        for nv in graph[v]:
            if dist[nv] == -1:
                dist[nv] = dist[v] + 1
                que.append(nv)
    # For all reachable towns from i within R[i] edges, update dp
    for j in range(1, N+1):
        if dist[j] != -1 and dp[i] + C[i] < dp[j]:
            dp[j] = dp[i] + C[i]

print(dp[N])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6405937671661377
    2. '.' → logprob: -0.8905937671661377
    3. 'import' → logprob: -4.015593528747559
    4. 'newline' → logprob: -4.265593528747559
    5. '\' → logprob: -4.765593528747559
    6. '<|end|>' → logprob: -5.015593528747559
    7. '```' → logprob: -5.390593528747559
    8. '
' → logprob: -5.765593528747559
    9. '<|end|>' → logprob: -6.515593528747559
    10. '' → logprob: -6.515593528747559

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.1689596148207784e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5775434374809265
    2. '_trace' → logprob: -1.3275434970855713
    3. ' _' → logprob: -2.7025434970855713
    4. '_version' → logprob: -3.5775434970855713
    5. '_soft' → logprob: -4.577543258666992
    6. '_exc' → logprob: -4.702543258666992
    7. '_encoding' → logprob: -5.702543258666992
    8. '_ex' → logprob: -5.702543258666992
    9. '_exception' → logprob: -5.702543258666992
    10. '_default' → logprob: -5.827543258666992

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0014520210679620504
    2. 'ursive' → logprob: -6.7514519691467285
    3. 'ur' → logprob: -9.376452445983887
    4. 'urs' → logprob: -10.001452445983887
    5. '_' → logprob: -10.126452445983887
    6. 'limit' → logprob: -10.376452445983887
    7. '_limit' → logprob: -11.001452445983887
    8. 'urf' → logprob: -11.251452445983887
    9. 't' → logprob: -11.626452445983887
    10. 'ursor' → logprob: -11.876452445983887

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.018685251474380493
    2. '_limit' → logprob: -4.143685340881348
    3. 'depth' → logprob: -6.518685340881348
    4. '_depth' → logprob: -7.393685340881348
    5. '(' → logprob: -8.268685340881348
    6. ' limit' → logprob: -9.143685340881348
    7. 'error' → logprob: -10.268685340881348
    8. '(limit' → logprob: -10.518685340881348
    9. 'lim' → logprob: -11.143685340881348
    10. '('' → logprob: -11.268685340881348

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5928495486150496e-05
    2. '(
' → logprob: -11.750016212463379
    3. ' (' → logprob: -12.375016212463379
    4. '(

' → logprob: -13.000016212463379
    5. '((' → logprob: -14.750016212463379
    6. '("("' → logprob: -15.250016212463379
    7. '```' → logprob: -15.500016212463379
    8. '('' → logprob: -15.875016212463379
    9. '(None' → logprob: -16.375015258789062
    10. '()' → logprob: -16.625015258789062

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6933095455169678
    2. '100' → logprob: -0.6933095455169678
    3. ' ' → logprob: -9.443309783935547
    4. '500' → logprob: -9.818309783935547
    5. '300' → logprob: -11.443309783935547
    6. '999' → logprob: -12.568309783935547
    7. '1' → logprob: -12.818309783935547
    8. '250' → logprob: -12.818309783935547
    9. '150' → logprob: -12.943309783935547
    10. '200' → logprob: -13.318309783935547

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006857931148260832
    2. '000' → logprob: -5.756857872009277
    3. '00' → logprob: -5.881857872009277
    4. '4' → logprob: -7.256857872009277
    5. '6' → logprob: -8.881857872009277
    6. '5' → logprob: -11.506857872009277
    7. '```' → logprob: -12.006857872009277
    8. ')' → logprob: -12.256857872009277
    9. '3' → logprob: -12.381857872009277
    10. '**' → logprob: -12.381857872009277

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00714417127892375
    2. '9' → logprob: -5.632143974304199
    3. '6' → logprob: -5.757143974304199
    4. '8' → logprob: -7.882143974304199
    5. '```' → logprob: -15.7571439743042
    6. ' ' → logprob: -16.507144927978516
    7. '(' → logprob: -17.132144927978516
    8. '5' → logprob: -17.757144927978516
    9. '``' → logprob: -18.257144927978516
    10. '999' → logprob: -18.382144927978516

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.37501335144043

Token 13: 'input' (ID: 2586)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2842516005039215
    2. ')' → logprob: -2.9092516899108887
    3. '\n' → logprob: -3.0342516899108887
    4. 'def' → logprob: -3.5342516899108887
    5. '
' → logprob: -3.7842516899108887
    6. '(' → logprob: -4.034251689910889
    7. '
' → logprob: -4.284251689910889
    8. '' → logprob: -4.534251689910889
    9. 'sys' → logprob: -4.534251689910889
    10. '#' → logprob: -4.909251689910889

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.054386552423238754
    2. '()' → logprob: -3.054386615753174
    3. '.' → logprob: -6.054386615753174
    4. ')' → logprob: -6.554386615753174
    5. '().' → logprob: -7.679386615753174
    6. '('' → logprob: -7.929386615753174
    7. '40' → logprob: -8.304386138916016
    8. '```' → logprob: -8.554386138916016
    9. '("("' → logprob: -8.929386138916016
    10. ''' → logprob: -9.429386138916016

Token 15: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2547602355480194
    2. ' input' → logprob: -1.5047602653503418
    3. ' sys' → logprob: -6.629760265350342
    4. 'sys' → logprob: -6.629760265350342
    5. 'lambda' → logprob: -10.254759788513184
    6. '=input' → logprob: -10.629759788513184
    7. ' lambda' → logprob: -10.754759788513184
    8. '```' → logprob: -10.879759788513184
    9. 'open' → logprob: -11.129759788513184
    10. ' ' → logprob: -11.379759788513184

Token 16: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005268189124763012
    2. '.readline' → logprob: -8.125526428222656
    3. ' .' → logprob: -8.875526428222656
    4. '.stdin' → logprob: -10.125526428222656
    5. '.)' → logprob: -12.000526428222656
    6. '.
' → logprob: -12.375526428222656
    7. '.​' → logprob: -12.500526428222656
    8. '.

' → logprob: -12.625526428222656
    9. '[' → logprob: -12.750526428222656
    10. '.`' → logprob: -12.750526428222656

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008816298097372055
    2. '.read' → logprob: -4.883816242218018
    3. '.' → logprob: -6.758816242218018
    4. '.buffer' → logprob: -10.258816719055176
    5. '.readlines' → logprob: -11.508816719055176
    6. '.Read' → logprob: -13.383816719055176
    7. 'read' → logprob: -13.883816719055176
    8. '.stdin' → logprob: -14.883816719055176
    9. ' .' → logprob: -15.383816719055176
    10. ').' → logprob: -16.00881576538086

Token 18: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5706433057785034
    2. '(' → logprob: -2.070643424987793
    3. 'def' → logprob: -2.070643424987793
    4. '\n' → logprob: -2.695643424987793
    5. '
' → logprob: -3.445643424987793
    6. '()
' → logprob: -3.695643424987793
    7. '(
' → logprob: -4.195643424987793
    8. '()

' → logprob: -4.695643424987793
    9. '\' → logprob: -4.820643424987793
    10. '

' → logprob: -5.195643424987793

Token 19: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20186437666416168
    2. 'n' → logprob: -1.7018643617630005
    3. 'N' → logprob: -8.076864242553711
    4. 'd' → logprob: -9.951864242553711
    5. 't' → logprob: -10.576864242553711
    6. 'class' → logprob: -11.076864242553711
    7. 'from' → logprob: -11.576864242553711
    8. '\' → logprob: -11.826864242553711
    9. '```' → logprob: -11.826864242553711
    10. 'a' → logprob: -11.951864242553711

Token 20: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6140350699424744
    2. '=' → logprob: -1.2390351295471191
    3. ' ' → logprob: -2.239035129547119
    4. ')' → logprob: -3.739035129547119
    5. '<|end|>' → logprob: -3.739035129547119
    6. ',' → logprob: -4.614035129547119
    7. '>' → logprob: -6.989035129547119
    8. '[' → logprob: -7.114035129547119
    9. '.' → logprob: -7.864035129547119
    10. ' )' → logprob: -7.989035129547119

Token 21: ' K' (ID: 658)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.39443036913871765
    2. 'M' → logprob: -1.39443039894104
    3. ' K' → logprob: -3.01943039894104
    4. 'K' → logprob: -4.144430160522461
    5. ' ' → logprob: -4.644430160522461
    6. 'input' → logprob: -7.269430160522461
    7. 'Q' → logprob: -7.644430160522461
    8. 'm' → logprob: -8.269430160522461
    9. 'space' → logprob: -8.269430160522461
    10. 'x' → logprob: -8.394430160522461

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3491956889629364
    2. '=' → logprob: -1.2241957187652588
    3. ',' → logprob: -7.22419548034668
    4. '=input' → logprob: -11.72419548034668
    5. ' ' → logprob: -12.22419548034668
    6. ' ,' → logprob: -12.47419548034668
    7. ')' → logprob: -13.59919548034668
    8. '=int' → logprob: -14.72419548034668
    9. '[' → logprob: -14.91169548034668
    10. '=line' → logprob: -14.91169548034668

Token 23: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2014184147119522
    2. 'map' → logprob: -1.701418399810791
    3. ' input' → logprob: -12.82641887664795
    4. 'input' → logprob: -13.20141887664795
    5. '	map' → logprob: -15.32641887664795
    6. ' ' → logprob: -15.82641887664795
    7. ' list' → logprob: -16.076417922973633
    8. 'list' → logprob: -16.701417922973633
    9. 'int' → logprob: -17.701417922973633
    10. '(map' → logprob: -17.701417922973633

Token 24: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24348334968090057
    2. '(int' → logprob: -2.118483304977417
    3. '(lambda' → logprob: -2.493483304977417
    4. '(input' → logprob: -4.868483543395996
    5. '(str' → logprob: -5.243483543395996
    6. '(len' → logprob: -9.743483543395996
    7. '(list' → logprob: -10.118483543395996
    8. '(tuple' → logprob: -10.243483543395996
    9. '(eval' → logprob: -10.243483543395996
    10. '(
' → logprob: -10.868483543395996

Token 25: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0179626941680908
    2. ',' → logprob: -1.0179626941680908
    3. '(input' → logprob: -1.5179626941680908
    4. ',input' → logprob: -3.017962694168091
    5. '(int' → logprob: -5.767962455749512
    6. '(sys' → logprob: -5.767962455749512
    7. ')' → logprob: -6.642962455749512
    8. ',int' → logprob: -7.267962455749512
    9. ' ,' → logprob: -8.517962455749512
    10. '(str' → logprob: -8.892962455749512

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.061970487236976624
    2. ' input' → logprob: -2.8119704723358154
    3. ')' → logprob: -13.561970710754395
    4. ' ' → logprob: -14.811970710754395
    5. '(input' → logprob: -14.811970710754395
    6. ',input' → logprob: -15.061970710754395
    7. 'str' → logprob: -15.311970710754395
    8. 'sys' → logprob: -16.436969757080078
    9. 'int' → logprob: -16.561969757080078
    10. '=input' → logprob: -16.936969757080078

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01612117327749729
    2. '())' → logprob: -4.3911213874816895
    3. '()' → logprob: -5.6411213874816895
    4. ')' → logprob: -10.391120910644531
    5. '()))' → logprob: -11.266120910644531
    6. '(' → logprob: -12.141120910644531
    7. '()
' → logprob: -13.391120910644531
    8. '('' → logprob: -14.016120910644531
    9. ' ().' → logprob: -14.516120910644531
    10. '()),' → logprob: -14.516120910644531

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.25865381956100464
    2. 'strip' → logprob: -1.5086538791656494
    3. 'rstrip' → logprob: -5.00865364074707
    4. 'read' → logprob: -11.25865364074707
    5. ')' → logprob: -11.88365364074707
    6. ' split' → logprob: -13.63365364074707
    7. '(split' → logprob: -14.63365364074707
    8. ' strip' → logprob: -15.75865364074707
    9. '_split' → logprob: -16.25865364074707
    10. '())' → logprob: -16.38365364074707

Token 29: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.265633419388905e-05
    2. '))' → logprob: -9.750062942504883
    3. '`)' → logprob: -13.250062942504883
    4. '())' → logprob: -14.750062942504883
    5. '()' → logprob: -15.000062942504883
    6. '')' → logprob: -15.000062942504883
    7. '),' → logprob: -15.250062942504883
    8. ')
' → logprob: -15.250062942504883
    9. ')`' → logprob: -15.500062942504883
    10. '(' → logprob: -15.750062942504883

Token 30: 'C' (ID: 34)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3789807856082916
    2. 'A' → logprob: -2.253980875015259
    3. 'dp' → logprob: -3.378980875015259
    4. 'def' → logprob: -3.503980875015259
    5. 'd' → logprob: -3.878980875015259
    6. '
' → logprob: -4.12898063659668
    7. 'arr' → logprob: -4.37898063659668
    8. ' 
' → logprob: -4.37898063659668
    9. ')' → logprob: -4.50398063659668
    10. 's' → logprob: -4.62898063659668

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1105024516582489
    2. '=' → logprob: -2.3605024814605713
    3. '[' → logprob: -4.985502243041992
    4. '[]' → logprob: -7.360502243041992
    5. ',' → logprob: -7.485502243041992
    6. 'ount' → logprob: -7.485502243041992
    7. '[:]' → logprob: -8.110502243041992
    8. '=[]' → logprob: -8.235502243041992
    9. '_' → logprob: -8.485502243041992
    10. 'ost' → logprob: -8.735502243041992

Token 32: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5504821538925171
    2. 'list' → logprob: -0.9254821538925171
    3. ' [' → logprob: -4.300482273101807
    4. '[' → logprob: -4.925482273101807
    5. '[list' → logprob: -5.175482273101807
    6. '[int' → logprob: -8.425481796264648
    7. '[input' → logprob: -9.050481796264648
    8. ' []' → logprob: -9.550481796264648
    9. '[]' → logprob: -9.800481796264648
    10. 'input' → logprob: -11.675481796264648

Token 33: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00010711929644457996
    2. ']int' → logprob: -9.625106811523438
    3. '0' → logprob: -10.500106811523438
    4. '(int' → logprob: -11.750106811523438
    5. ']' → logprob: -13.375106811523438
    6. ' int' → logprob: -13.375106811523438
    7. '[int' → logprob: -14.000106811523438
    8. ',int' → logprob: -14.625106811523438
    9. ':int' → logprob: -15.000106811523438
    10. '<int' → logprob: -15.125106811523438

Token 34: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027913933619856834
    2. '()]' → logprob: -4.402914047241211
    3. '(' → logprob: -4.902914047241211
    4. ']*' → logprob: -5.152914047241211
    5. ']*(' → logprob: -6.652914047241211
    6. '()' → logprob: -7.902914047241211
    7. ' for' → logprob: -8.777914047241211
    8. ',' → logprob: -9.152914047241211
    9. ' ]' → logprob: -9.152914047241211
    10. 'for' → logprob: -11.152914047241211

Token 35: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0007099286303855479
    2. '10' → logprob: -8.375709533691406
    3. 'K' → logprob: -8.500709533691406
    4. '100' → logprob: -8.625709533691406
    5. ' N' → logprob: -11.500709533691406
    6. '9' → logprob: -11.500709533691406
    7. '101' → logprob: -11.500709533691406
    8. '2' → logprob: -12.000709533691406
    9. '6' → logprob: -12.000709533691406
    10. '3' → logprob: -12.000709533691406

Token 36: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019740730058401823
    2. '+' → logprob: -6.251974105834961
    3. ' )' → logprob: -10.501974105834961
    4. '*' → logprob: -11.626974105834961
    5. ')
' → logprob: -12.501974105834961
    6. '))' → logprob: -14.126974105834961
    7. ' +' → logprob: -14.126974105834961
    8. '-' → logprob: -14.376974105834961
    9. '+)' → logprob: -14.376974105834961
    10. ')

' → logprob: -14.876974105834961

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. '2' → logprob: -10.625027656555176
    3. ' ' → logprob: -12.750027656555176
    4. '10' → logprob: -16.250028610229492
    5. '```' → logprob: -16.250028610229492
    6. '3' → logprob: -16.500028610229492
    7. '5' → logprob: -17.125028610229492
    8. '0' → logprob: -17.250028610229492
    9. '１' → logprob: -17.312528610229492
    10. '7' → logprob: -17.437528610229492

Token 38: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.130576806142926e-05
    2. ')
' → logprob: -11.000031471252441
    3. ' )' → logprob: -11.250031471252441
    4. ')

' → logprob: -14.375031471252441
    5. ')
' → logprob: -14.750031471252441
    6. ']' → logprob: -15.750031471252441
    7. '),' → logprob: -16.125030517578125
    8. '}' → logprob: -16.125030517578125
    9. '```' → logprob: -16.375030517578125
    10. '))' → logprob: -17.125030517578125

Token 39: 'R' (ID: 49)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3857633173465729
    2. 'd' → logprob: -2.76076340675354
    3. 'a' → logprob: -3.13576340675354
    4. 'i' → logprob: -3.26076340675354
    5. 'dp' → logprob: -3.51076340675354
    6. 'c' → logprob: -3.63576340675354
    7. ' for' → logprob: -3.88576340675354
    8. 'A' → logprob: -3.88576340675354
    9. 'C' → logprob: -4.135763168334961
    10. 'f' → logprob: -4.760763168334961

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16566765308380127
    2. 'C' → logprob: -3.5406675338745117
    3. '[' → logprob: -3.6656675338745117
    4. 'ange' → logprob: -3.6656675338745117
    5. '=' → logprob: -3.9156675338745117
    6. 'a' → logprob: -4.040667533874512
    7. 'ANGE' → logprob: -5.040667533874512
    8. '=[' → logprob: -5.415667533874512
    9. 'E' → logprob: -5.665667533874512
    10. 'ef' → logprob: -6.040667533874512

Token 41: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.024024955928325653
    2. ' [' → logprob: -4.774024963378906
    3. '[]' → logprob: -4.899024963378906
    4. '0' → logprob: -5.399024963378906
    5. '[N' → logprob: -6.274024963378906
    6. '[int' → logprob: -7.649024963378906
    7. '[C' → logprob: -7.899024963378906
    8. '[-' → logprob: -9.024024963378906
    9. '[K' → logprob: -9.524024963378906
    10. '1' → logprob: -9.524024963378906

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011202610097825527
    2. '[' → logprob: -4.761202812194824
    3. '[]' → logprob: -6.886202812194824
    4. '[N' → logprob: -7.011202812194824
    5. '(' → logprob: -8.511202812194824
    6. ']' → logprob: -8.511202812194824
    7. '(N' → logprob: -9.136202812194824
    8. '[int' → logprob: -10.261202812194824
    9. ')' → logprob: -11.011202812194824
    10. '][' → logprob: -11.261202812194824

Token 43: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.10811269283294678
    2. ')*(' → logprob: -2.6081128120422363
    3. '*(' → logprob: -3.6081128120422363
    4. ')' → logprob: -7.108112812042236
    5. ']*' → logprob: -8.233112335205078
    6. ']' → logprob: -8.358112335205078
    7. ')*' → logprob: -8.483112335205078
    8. '*' → logprob: -9.358112335205078
    9. '(N' → logprob: -9.858112335205078
    10. '](' → logprob: -10.608112335205078

Token 44: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00038264848990365863
    2. '(N' → logprob: -8.000382423400879
    3. 'K' → logprob: -10.375382423400879
    4. ' N' → logprob: -12.000382423400879
    5. '2' → logprob: -13.375382423400879
    6. '10' → logprob: -13.625382423400879
    7. '1' → logprob: -14.000382423400879
    8. '(' → logprob: -14.000382423400879
    9. ')' → logprob: -14.375382423400879
    10. '100' → logprob: -14.625382423400879

Token 45: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.392202976712724e-06
    2. ' +' → logprob: -13.000006675720215
    3. '+
' → logprob: -13.500006675720215
    4. '+)' → logprob: -13.500006675720215
    5. ')' → logprob: -14.250006675720215
    6. ')+' → logprob: -15.125006675720215
    7. '＋' → logprob: -15.625006675720215
    8. '1' → logprob: -16.6250057220459
    9. '+B' → logprob: -17.3750057220459
    10. '+C' → logprob: -17.6250057220459

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.203409844194539e-05
    2. '2' → logprob: -10.750041961669922
    3. ' ' → logprob: -11.125041961669922
    4. '```' → logprob: -14.125041961669922
    5. ')' → logprob: -14.187541961669922
    6. '+' → logprob: -14.375041961669922
    7. '   ' → logprob: -14.562541961669922
    8. '7' → logprob: -14.750041961669922
    9. '6' → logprob: -15.062541961669922
    10. '-' → logprob: -15.500041961669922

Token 47: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ')
' → logprob: -12.75000286102295
    3. ' )' → logprob: -16.750003814697266
    4. ')

' → logprob: -17.125003814697266
    5. '```' → logprob: -17.125003814697266
    6. '`)' → logprob: -17.375003814697266
    7. '),' → logprob: -17.625003814697266
    8. '))' → logprob: -17.750003814697266
    9. ')`' → logprob: -18.125003814697266
    10. '}' → logprob: -18.250003814697266

Token 48: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013096477836370468
    2. ' for' → logprob: -4.513096332550049
    3. 'i' → logprob: -7.013096332550049
    4. 'd' → logprob: -8.888096809387207
    5. 'dp' → logprob: -9.263096809387207
    6. 'a' → logprob: -9.513096809387207
    7. 'def' → logprob: -9.513096809387207
    8. 'C' → logprob: -9.763096809387207
    9. 'A' → logprob: -9.763096809387207
    10. 'max' → logprob: -10.013096809387207

Token 49: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07862062007188797
    2. ' ' → logprob: -2.953620672225952
    3. ' _' → logprob: -3.953620672225952
    4. '_' → logprob: -5.953620433807373
    5. 'i' → logprob: -6.453620433807373
    6. ' ‌' → logprob: -9.703620910644531
    7. ' ' → logprob: -11.328620910644531
    8. '  ' → logprob: -11.828620910644531
    9. ' ​' → logprob: -12.328620910644531
    10. ' ▁' → logprob: -12.703620910644531

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014478559605777264
    2. 'in' → logprob: -4.26447868347168
    3. ' ' → logprob: -8.26447868347168
    4. 'n' → logprob: -10.38947868347168
    5. '1' → logprob: -12.51447868347168
    6. '+' → logprob: -12.51447868347168
    7. '	in' → logprob: -12.51447868347168
    8. ' i' → logprob: -12.76447868347168
    9. '  ' → logprob: -13.13947868347168
    10. 'range' → logprob: -13.38947868347168

Token 51: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868783116340637
    2. 'range' → logprob: -1.136878252029419
    3. '(range' → logprob: -12.38687801361084
    4. ' ' → logprob: -13.88687801361084
    5. 'in' → logprob: -14.01187801361084
    6. '	range' → logprob: -14.13687801361084
    7. ' in' → logprob: -15.01187801361084
    8. ' xrange' → logprob: -16.011878967285156
    9. '1' → logprob: -16.261878967285156
    10. '```' → logprob: -16.511878967285156

Token 52: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005474337958730757
    2. '(N' → logprob: -8.000547409057617
    3. ' (' → logprob: -8.500547409057617
    4. ' ' → logprob: -12.500547409057617
    5. '1' → logprob: -12.625547409057617
    6. '(
' → logprob: -13.875547409057617
    7. '(i' → logprob: -15.125547409057617
    8. ' N' → logprob: -15.375547409057617
    9. '(n' → logprob: -15.750547409057617
    10. '(I' → logprob: -17.875547409057617

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043610829859972
    2. 'N' → logprob: -3.1686108112335205
    3. ' N' → logprob: -8.043610572814941
    4. ' ' → logprob: -8.168610572814941
    5. '   ' → logprob: -12.918610572814941
    6. '2' → logprob: -13.918610572814941
    7. ')' → logprob: -13.918610572814941
    8. 'K' → logprob: -14.793610572814941
    9. '	N' → logprob: -14.793610572814941
    10. 'i' → logprob: -14.918610572814941

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011398635804653168
    2. ' ,' → logprob: -4.761398792266846
    3. ',N' → logprob: -5.886398792266846
    4. ',n' → logprob: -14.136398315429688
    5. ' ' → logprob: -14.261398315429688
    6. ',len' → logprob: -14.386398315429688
    7. ',i' → logprob: -14.886398315429688
    8. ',
' → logprob: -15.261398315429688
    9. '，' → logprob: -15.386398315429688
    10. ',int' → logprob: -16.386398315429688

Token 55: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.001170225441455841
    2. ' N' → logprob: -6.7511701583862305
    3. 'n' → logprob: -18.126171112060547
    4. '	N' → logprob: -18.626171112060547
    5. ' ' → logprob: -19.126171112060547
    6. ')' → logprob: -19.126171112060547
    7. '   ' → logprob: -19.751171112060547
    8. 'K' → logprob: -20.251171112060547
    9. '>N' → logprob: -20.876171112060547
    10. '```' → logprob: -21.001171112060547

Token 56: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.147740689106286e-05
    2. ' +' → logprob: -9.62507152557373
    3. '+
' → logprob: -12.25007152557373
    4. '＋' → logprob: -15.87507152557373
    5. ')+' → logprob: -16.375070571899414
    6. '+i' → logprob: -16.750070571899414
    7. '1' → logprob: -16.875070571899414
    8. ' +
' → logprob: -18.000070571899414
    9. '```' → logprob: -18.000070571899414
    10. '<|end|>' → logprob: -18.000070571899414

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.096126576769166e-05
    2. ' ' → logprob: -10.125041007995605
    3. '+' → logprob: -15.250041007995605
    4. '```' → logprob: -15.375041007995605
    5. ')' → logprob: -15.500041007995605
    6. '2' → logprob: -16.25004005432129
    7. '   ' → logprob: -17.25004005432129
    8. '１' → logprob: -18.12504005432129
    9. '``' → logprob: -18.37504005432129
    10. '`' → logprob: -18.50004005432129

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009281373349949718
    2. ' ):' → logprob: -7.750927925109863
    3. ':' → logprob: -8.250927925109863
    4. ')' → logprob: -8.625927925109863
    5. '):
' → logprob: -10.000927925109863
    6. ',' → logprob: -11.625927925109863
    7. ']:' → logprob: -14.875927925109863
    8. ' :' → logprob: -15.000927925109863
    9. '):
' → logprob: -15.000927925109863
    10. '+' → logprob: -15.250927925109863

Token 59: '   ' (ID: 271)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.1185101792216301
    2. 'C' → logprob: -3.2435102462768555
    3. ' ' → logprob: -3.2435102462768555
    4. ' 
' → logprob: -3.8685102462768555
    5. ' R' → logprob: -4.7435102462768555
    6. '   ' → logprob: -6.4935102462768555
    7. '<|end|>' → logprob: -6.4935102462768555
    8. '```' → logprob: -8.618510246276855
    9. ' ,' → logprob: -8.993510246276855
    10. ' ```' → logprob: -9.368510246276855

Token 60: ' c' (ID: 274)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.40094369649887085
    2. 'c' (adapté à ' c') → logprob: -2.0259437561035156
    3. ' C' → logprob: -2.0259437561035156
    4. ' c' → logprob: -3.6509437561035156
    5. 'a' → logprob: -4.400943756103516
    6. 'x' → logprob: -4.900943756103516
    7. 'v' → logprob: -5.275943756103516
    8. 'R' → logprob: -5.900943756103516
    9. ' a' → logprob: -6.525943756103516
    10. ' R' → logprob: -6.650943756103516

Token 61: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.017404675483703613
    2. ' =' → logprob: -4.767404556274414
    3. '[int' → logprob: -5.517404556274414
    4. '=' → logprob: -6.267404556274414
    5. '[' → logprob: -6.767404556274414
    6. ',' → logprob: -8.017404556274414
    7. '[input' → logprob: -8.142404556274414
    8. '[:]' → logprob: -9.142404556274414
    9. 's' → logprob: -9.267404556274414
    10. 'i' → logprob: -9.267404556274414

Token 62: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.021072430536150932
    2. ' r' → logprob: -3.8960723876953125
    3. 'k' → logprob: -7.8960723876953125
    4. 'd' → logprob: -9.271072387695312
    5. 's' → logprob: -10.646072387695312
    6. 'p' → logprob: -11.021072387695312
    7. ' k' → logprob: -11.646072387695312
    8. ' d' → logprob: -12.521072387695312
    9. 't' → logprob: -13.021072387695312
    10. ' s' → logprob: -13.146072387695312

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3484710156917572
    2. ' =' → logprob: -1.2234710454940796
    3. ',' → logprob: -11.223470687866211
    4. '=int' → logprob: -12.598470687866211
    5. ' ' → logprob: -12.973470687866211
    6. '=input' → logprob: -13.223470687866211
    7. '=line' → logprob: -14.098470687866211
    8. '<|end|>' → logprob: -14.223470687866211
    9. ')' → logprob: -14.473470687866211
    10. '＝' → logprob: -14.723470687866211

Token 64: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.16022726893424988
    2. 'map' → logprob: -1.9102272987365723
    3. 'input' → logprob: -13.785226821899414
    4. ' input' → logprob: -13.910226821899414
    5. '	map' → logprob: -14.160226821899414
    6. 'm' → logprob: -15.285226821899414
    7. ' ' → logprob: -16.160226821899414
    8. ' mapa' → logprob: -17.410226821899414
    9. '   ' → logprob: -17.535226821899414
    10. '  ' → logprob: -17.785226821899414

Token 65: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.493430894101039e-05
    2. '(' → logprob: -9.625075340270996
    3. '(lambda' → logprob: -12.625075340270996
    4. '(input' → logprob: -12.875075340270996
    5. '[int' → logprob: -13.375075340270996
    6. '<int' → logprob: -14.375075340270996
    7. '(str' → logprob: -15.000075340270996
    8. '=int' → logprob: -16.00007438659668
    9. ' (' → logprob: -16.12507438659668
    10. 'int' → logprob: -16.50007438659668

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012529667466878891
    2. ',input' → logprob: -4.3875298500061035
    3. ',int' → logprob: -11.762529373168945
    4. ' ,' → logprob: -12.137529373168945
    5. '(' → logprob: -13.012529373168945
    6. ',(' → logprob: -13.137529373168945
    7. '(),' → logprob: -13.637529373168945
    8. '(input' → logprob: -15.012529373168945
    9. 'input' → logprob: -15.512529373168945
    10. ',line' → logprob: -15.887529373168945

Token 67: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07889111340045929
    2. ' input' → logprob: -2.5788910388946533
    3. '(input' → logprob: -14.078890800476074
    4. ')' → logprob: -15.328890800476074
    5. '=input' → logprob: -16.20389175415039
    6. ',input' → logprob: -16.32889175415039
    7. '	input' → logprob: -16.45389175415039
    8. '_input' → logprob: -17.20389175415039
    9. '[input' → logprob: -17.20389175415039
    10. '<input' → logprob: -18.57889175415039

Token 68: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001266613689949736
    2. '()' → logprob: -9.000126838684082
    3. ')' → logprob: -13.375126838684082
    4. ' ().' → logprob: -14.000126838684082
    5. '.readline' → logprob: -14.875126838684082
    6. '())' → logprob: -15.750126838684082
    7. '.' → logprob: -16.375125885009766
    8. '()
' → logprob: -16.375125885009766
    9. '(' → logprob: -16.625125885009766
    10. '().__' → logprob: -16.625125885009766

Token 69: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.60414821645827e-06
    2. ' split' → logprob: -13.000004768371582
    3. 'spl' → logprob: -13.750004768371582
    4. 'strip' → logprob: -14.250004768371582
    5. 'rstrip' → logprob: -15.000004768371582
    6. '(split' → logprob: -15.000004768371582
    7. 'plit' → logprob: -17.875003814697266
    8. ')' → logprob: -18.125003814697266
    9. 's' → logprob: -19.125003814697266
    10. '```' → logprob: -19.875003814697266

Token 70: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.40284082293510437
    2. ')' → logprob: -1.1528408527374268
    3. '()' → logprob: -4.152840614318848
    4. '())
' → logprob: -9.652840614318848
    5. '(' → logprob: -10.902840614318848
    6. '))' → logprob: -11.777840614318848
    7. ')
' → logprob: -12.152840614318848
    8. ' )' → logprob: -12.277840614318848
    9. '());' → logprob: -12.277840614318848
    10. '()
' → logprob: -12.527840614318848

Token 71: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.3229977786540985
    2. '<|end|>' → logprob: -1.947997808456421
    3. ' C' → logprob: -2.572997808456421
    4. '   ' → logprob: -3.822997808456421
    5. '	C' → logprob: -3.947997808456421
    6. ' ' → logprob: -4.697997570037842
    7. ' 
' → logprob: -6.197997570037842
    8. '  ' → logprob: -6.572997570037842
    9. '
' → logprob: -7.197997570037842
    10. '<|end|>' → logprob: -7.822997570037842

Token 73: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20169876515865326
    2. '[' → logprob: -1.7016987800598145
    3. '[c' → logprob: -9.201698303222656
    4. '[I' → logprob: -9.201698303222656
    5. '[C' → logprob: -10.076698303222656
    6. '```' → logprob: -11.201698303222656
    7. ' [' → logprob: -12.201698303222656
    8. '[s' → logprob: -12.951698303222656
    9. '[in' → logprob: -13.076698303222656
    10. '[user' → logprob: -13.201698303222656

Token 74: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02478417567908764
    2. '=' → logprob: -4.274784088134766
    3. ')' → logprob: -5.149784088134766
    4. ']=' → logprob: -5.399784088134766
    5. ' =' → logprob: -9.649784088134766
    6. ')=' → logprob: -9.649784088134766
    7. ',' → logprob: -9.899784088134766
    8. ' ]' → logprob: -10.024784088134766
    9. '],' → logprob: -11.774784088134766
    10. '])' → logprob: -11.774784088134766

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20147961378097534
    2. '=' → logprob: -1.7014796733856201
    3. ',' → logprob: -9.9514799118042
    4. '=c' → logprob: -11.7014799118042
    5. '=C' → logprob: -12.7014799118042
    6. '=i' → logprob: -13.0764799118042
    7. ' ' → logprob: -13.7014799118042
    8. ' =
' → logprob: -14.2014799118042
    9. ' +=' → logprob: -14.3264799118042
    10. '=int' → logprob: -14.4514799118042

Token 76: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06197306513786316
    2. ' c' → logprob: -2.8119730949401855
    3. '	c' → logprob: -12.311972618103027
    4. ' ' → logprob: -14.811972618103027
    5. ' ' → logprob: -15.561972618103027
    6. '<|end|>' → logprob: -15.811972618103027
    7. ')c' → logprob: -15.936972618103027
    8. '‌' → logprob: -16.936973571777344
    9. '%c' → logprob: -18.061973571777344
    10. ' ‌' → logprob: -18.311973571777344

Token 77: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21882176399230957
    2. '
' → logprob: -2.0938217639923096
    3. ' R' → logprob: -3.9688217639923096
    4. 'R' → logprob: -4.0938215255737305
    5. '    
' → logprob: -4.5938215255737305
    6. '<|end|>' → logprob: -4.5938215255737305
    7. '  
' → logprob: -5.2188215255737305
    8. ' 
' → logprob: -5.4688215255737305
    9. '   
' → logprob: -6.0938215255737305
    10. '	R' → logprob: -6.2188215255737305

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028898822143673897
    2. 'R' → logprob: -3.9038987159729004
    3. ' R' → logprob: -4.9038987159729
    4. '    ' → logprob: -8.403899192810059
    5. '    
' → logprob: -8.528899192810059
    6. '	R' → logprob: -8.903899192810059
    7. '  ' → logprob: -9.153899192810059
    8. ' ' → logprob: -9.653899192810059
    9. '<|end|>' → logprob: -10.153899192810059
    10. '   
' → logprob: -10.528899192810059

Token 79: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.023795073851943016
    2. 'r' → logprob: -3.7737951278686523
    3. ' R' → logprob: -7.523795127868652
    4. ' r' → logprob: -11.773795127868652
    5. '   ' → logprob: -13.523795127868652
    6. ' ' → logprob: -15.773795127868652
    7. '```' → logprob: -17.273794174194336
    8. '  ' → logprob: -17.523794174194336
    9. '_r' → logprob: -17.648794174194336
    10. '	R' → logprob: -17.648794174194336

Token 80: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.7729658540920354e-05
    2. '[' → logprob: -10.500027656555176
    3. '[I' → logprob: -16.125028610229492
    4. ')[' → logprob: -17.375028610229492
    5. '```' → logprob: -17.875028610229492
    6. ' [' → logprob: -18.000028610229492
    7. '[int' → logprob: -18.375028610229492
    8. '[user' → logprob: -19.250028610229492
    9. '[
' → logprob: -19.625028610229492
    10. '[...]' → logprob: -20.000028610229492

Token 81: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0032808599062263966
    2. ')' → logprob: -6.6282806396484375
    3. ']=' → logprob: -7.0032806396484375
    4. '=' → logprob: -7.6282806396484375
    5. ' ]' → logprob: -7.7532806396484375
    6. '[i' → logprob: -9.378280639648438
    7. ' =' → logprob: -11.378280639648438
    8. '=i' → logprob: -11.628280639648438
    9. '])' → logprob: -11.753280639648438
    10. ')]' → logprob: -12.378280639648438

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869529664516449
    2. '=' → logprob: -1.1369529962539673
    3. ' +=' → logprob: -9.636953353881836
    4. ' =
' → logprob: -12.011953353881836
    5. ' ' → logprob: -12.636953353881836
    6. ' |=' → logprob: -13.511953353881836
    7. '+=' → logprob: -13.511953353881836
    8. '[' → logprob: -14.011953353881836
    9. ' =)' → logprob: -14.261953353881836
    10. ' ' → logprob: -14.386953353881836

Token 83: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.061972059309482574
    2. ' r' → logprob: -2.811972141265869
    3. ' ' → logprob: -12.686971664428711
    4. ' ' → logprob: -14.936971664428711
    5. '	r' → logprob: -15.061971664428711
    6. 's' → logprob: -16.43697166442871
    7. 'c' → logprob: -16.62447166442871
    8. '(r' → logprob: -16.81197166442871
    9. 'i' → logprob: -16.99947166442871
    10. '+r' → logprob: -17.31197166442871

Token 84: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.532226026058197
    2. 'd' → logprob: -2.032226085662842
    3. ' 
' → logprob: -2.282226085662842
    4. '#' → logprob: -3.407226085662842
    5. '\n' → logprob: -3.782226085662842
    6. 'dp' → logprob: -4.032226085662842
    7. '[' → logprob: -4.157226085662842
    8. '\' → logprob: -4.407226085662842
    9. ' ' → logprob: -4.532226085662842
    10. 'n' → logprob: -4.907226085662842

Token 85: 'graph' (ID: 7978)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.25514456629753113
    2. 'd' → logprob: -2.0051445960998535
    3. 'l' → logprob: -4.3801445960998535
    4. '#' → logprob: -4.8801445960998535
    5. 'for' → logprob: -5.0051445960998535
    6. 'max' → logprob: -5.0051445960998535
    7. 'def' → logprob: -5.1301445960998535
    8. 'f' → logprob: -5.2551445960998535
    9. 'visited' → logprob: -5.3801445960998535
    10. 'D' → logprob: -5.3801445960998535

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03942351043224335
    2. '=' → logprob: -3.2894234657287598
    3. '[' → logprob: -6.66442346572876
    4. ',' → logprob: -10.289423942565918
    5. ' ' → logprob: -10.414423942565918
    6. '_' → logprob: -11.914423942565918
    7. '.' → logprob: -12.164423942565918
    8. '[]' → logprob: -12.164423942565918
    9. 's' → logprob: -12.289423942565918
    10. ')' → logprob: -12.914423942565918

Token 87: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1605803221464157
    2. ' [[]' → logprob: -1.9105802774429321
    3. '[]' → logprob: -8.4105806350708
    4. '{}' → logprob: -9.2855806350708
    5. ' [' → logprob: -10.5355806350708
    6. '{' → logprob: -11.4105806350708
    7. '[[' → logprob: -13.2855806350708
    8. ' []' → logprob: -14.7855806350708
    9. '[
' → logprob: -15.5355806350708
    10. ' defaultdict' → logprob: -15.6605806350708

Token 88: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5897011756896973
    2. ']' → logprob: -1.7147011756896973
    3. ')' → logprob: -1.8397011756896973
    4. ' for' → logprob: -2.3397011756896973
    5. ',' → logprob: -4.964701175689697
    6. '[' → logprob: -6.589701175689697
    7. '(' → logprob: -6.839701175689697
    8. '(N' → logprob: -8.839700698852539
    9. ')]' → logprob: -9.089700698852539
    10. '<|end|>' → logprob: -9.214700698852539

Token 89: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13336411118507385
    2. '(' → logprob: -2.383364200592041
    3. ' range' → logprob: -4.008364200592041
    4. ' _' → logprob: -5.133364200592041
    5. 'range' → logprob: -6.258364200592041
    6. ' (' → logprob: -6.383364200592041
    7. '(range' → logprob: -6.383364200592041
    8. ' i' → logprob: -6.633364200592041
    9. ' ' → logprob: -7.008364200592041
    10. '(i' → logprob: -7.633364200592041

Token 90: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6933698058128357
    2. ' in' → logprob: -0.6933698058128357
    3. 'range' → logprob: -8.56836986541748
    4. 'i' → logprob: -11.19336986541748
    5. ' range' → logprob: -11.94336986541748
    6. ' ' → logprob: -12.44336986541748
    7. ' i' → logprob: -13.06836986541748
    8. 'n' → logprob: -13.56836986541748
    9. '(' → logprob: -13.94336986541748
    10. '(range' → logprob: -14.19336986541748

Token 91: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008633595891296864
    2. ' range' → logprob: -4.758633613586426
    3. '(range' → logprob: -10.883633613586426
    4. ' ' → logprob: -16.38363265991211
    5. '	range' → logprob: -16.88363265991211
    6. '```' → logprob: -17.00863265991211
    7. 'r' → logprob: -17.38363265991211
    8. '`' → logprob: -17.50863265991211
    9. '   ' → logprob: -17.88363265991211
    10. 'rang' → logprob: -17.88363265991211

Token 92: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -4.1557283111615106e-05
    2. '(' → logprob: -10.125041961669922
    3. '(n' → logprob: -14.250041961669922
    4. '((' → logprob: -14.500041961669922
    5. ' (' → logprob: -15.125041961669922
    6. '```' → logprob: -18.000041961669922
    7. '(
' → logprob: -18.125041961669922
    8. '(range' → logprob: -18.250041961669922
    9. '(i' → logprob: -18.500041961669922
    10. ')(' → logprob: -18.750041961669922

Token 93: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.11996734328568e-05
    2. ' +' → logprob: -10.125041007995605
    3. ')]' → logprob: -14.125041007995605
    4. ')' → logprob: -16.000041961669922
    5. '+)' → logprob: -16.250041961669922
    6. '+
' → logprob: -16.750041961669922
    7. '+]' → logprob: -17.250041961669922
    8. '＋' → logprob: -17.750041961669922
    9. '+i' → logprob: -17.875041961669922
    10. '+

' → logprob: -19.250041961669922

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4736459888808895e-05
    2. '2' → logprob: -11.375014305114746
    3. ' ' → logprob: -12.750014305114746
    4. ')' → logprob: -15.875014305114746
    5. '+' → logprob: -16.625015258789062
    6. '```' → logprob: -17.125015258789062
    7. '])' → logprob: -17.500015258789062
    8. '   ' → logprob: -17.625015258789062
    9. ')]' → logprob: -17.625015258789062
    10. '１' → logprob: -17.750015258789062

Token 95: ')]
' (ID: 11587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.257331907749176
    2. ']' → logprob: -2.0073318481445312
    3. ')]' → logprob: -2.3823318481445312
    4. '])' → logprob: -8.882331848144531
    5. ')
' → logprob: -10.382331848144531
    6. ']
' → logprob: -11.382331848144531
    7. ')])' → logprob: -11.632331848144531
    8. '）' → logprob: -12.382331848144531
    9. ' ]' → logprob: -13.007331848144531
    10. ' )' → logprob: -13.257331848144531

Token 96: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03045029751956463
    2. ' for' → logprob: -3.5304503440856934
    3. 'i' → logprob: -8.030449867248535
    4. ')' → logprob: -9.530449867248535
    5. ' 
' → logprob: -9.530449867248535
    6. ' ' → logprob: -9.655449867248535
    7. '<|end|>' → logprob: -9.655449867248535
    8. '[' → logprob: -10.905449867248535
    9. '
' → logprob: -11.405449867248535
    10. 'n' → logprob: -11.405449867248535

Token 97: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3897032141685486
    2. '_' → logprob: -1.5147032737731934
    3. ' _' → logprob: -2.7647032737731934
    4. 'i' → logprob: -3.2647032737731934
    5. ' ' → logprob: -7.014703273773193
    6. '_i' → logprob: -7.264703273773193
    7. ' range' → logprob: -10.264702796936035
    8. ' in' → logprob: -12.139702796936035
    9. 'range' → logprob: -12.514702796936035
    10. '(' → logprob: -13.139702796936035

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18142539262771606
    2. 'in' → logprob: -1.8064253330230713
    3. ' i' → logprob: -7.43142557144165
    4. 'i' → logprob: -7.55642557144165
    5. ' ' → logprob: -7.68142557144165
    6. 'range' → logprob: -9.431425094604492
    7. ' range' → logprob: -11.806425094604492
    8. '_' → logprob: -12.056425094604492
    9. '  ' → logprob: -13.306425094604492
    10. 'n' → logprob: -13.431425094604492

Token 99: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003261679667048156
    2. ' range' → logprob: -8.125326156616211
    3. '(range' → logprob: -10.500326156616211
    4. 'ange' → logprob: -14.000326156616211
    5. '(' → logprob: -14.625326156616211
    6. 'in' → logprob: -15.500326156616211
    7. '```' → logprob: -15.500326156616211
    8. '	range' → logprob: -15.500326156616211
    9. ' ' → logprob: -15.750326156616211
    10. 'r' → logprob: -16.25032615661621

Token 100: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.0085538225248456
    2. '(N' → logprob: -4.883553981781006
    3. '(M' → logprob: -7.508553981781006
    4. '(' → logprob: -7.883553981781006
    5. 'K' → logprob: -11.383553504943848
    6. ' (' → logprob: -12.508553504943848
    7. '(Q' → logprob: -13.508553504943848
    8. '((' → logprob: -13.633553504943848
    9. '(int' → logprob: -14.133553504943848
    10. '(k' → logprob: -14.258553504943848

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019565867260098457
    2. ' ):' → logprob: -6.251956462860107
    3. ')' → logprob: -11.126956939697266
    4. '):
' → logprob: -11.376956939697266
    5. ',' → logprob: -14.001956939697266
    6. ':' → logprob: -15.001956939697266
    7. ' )' → logprob: -15.626956939697266
    8. '():' → logprob: -15.751956939697266
    9. '):
' → logprob: -16.001956939697266
    10. ' ' → logprob: -16.876956939697266

Token 102: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25607627630233765
    2. 'u' → logprob: -1.8810763359069824
    3. ' u' → logprob: -3.2560763359069824
    4. ' a' → logprob: -3.3810763359069824
    5. 'A' → logprob: -7.131076335906982
    6. '   ' → logprob: -10.006075859069824
    7. ' A' → logprob: -10.131075859069824
    8. 'U' → logprob: -11.506075859069824
    9. '```' → logprob: -11.506075859069824
    10. 'x' → logprob: -11.881075859069824

Token 103: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.18137261271476746
    2. 'u' → logprob: -1.8063726425170898
    3. 'A' → logprob: -6.93137264251709
    4. 'x' → logprob: -8.05637264251709
    5. ' a' → logprob: -8.80637264251709
    6. ' u' → logprob: -8.80637264251709
    7. 'U' → logprob: -11.68137264251709
    8. 'f' → logprob: -12.18137264251709
    9. '```' → logprob: -12.18137264251709
    10. 's' → logprob: -12.43137264251709

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016513756709173322
    2. ',b' → logprob: -6.501651287078857
    3. ' ,' → logprob: -8.876651763916016
    4. 'b' → logprob: -11.626651763916016
    5. ' b' → logprob: -15.126651763916016
    6. ',v' → logprob: -17.001651763916016
    7. ',a' → logprob: -17.251651763916016
    8. '_,' → logprob: -17.376651763916016
    9. ',B' → logprob: -17.751651763916016
    10. '‌,' → logprob: -18.001651763916016

Token 105: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16022737324237823
    2. ' b' → logprob: -1.9102274179458618
    3. ' ' → logprob: -12.78522777557373
    4. '<|end|>' → logprob: -16.035226821899414
    5. ',b' → logprob: -16.785226821899414
    6. '_' → logprob: -17.410226821899414
    7. ' 
' → logprob: -18.160226821899414
    8. '_b' → logprob: -18.285226821899414
    9. 'c' → logprob: -18.285226821899414
    10. '	b' → logprob: -18.410226821899414

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759404897689819
    2. '=' → logprob: -0.8259404897689819
    3. '=input' → logprob: -14.700940132141113
    4. ' ' → logprob: -14.825940132141113
    5. '=int' → logprob: -16.57594108581543
    6. '＝' → logprob: -16.57594108581543
    7. '=line' → logprob: -16.95094108581543
    8. ',' → logprob: -17.07594108581543
    9. ')' → logprob: -17.07594108581543
    10. ' =
' → logprob: -17.82594108581543

Token 107: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.00861528143286705
    2. 'map' → logprob: -4.758615493774414
    3. '	map' → logprob: -15.008615493774414
    4. ' list' → logprob: -15.508615493774414
    5. ' input' → logprob: -15.883615493774414
    6. ' ' → logprob: -16.633615493774414
    7. '(map' → logprob: -16.883615493774414
    8. ' ' → logprob: -17.508615493774414
    9. ',map' → logprob: -17.758615493774414
    10. 'input' → logprob: -18.383615493774414

Token 108: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005816269549541175
    2. '(' → logprob: -7.500581741333008
    3. '(in' → logprob: -11.375581741333008
    4. ' (' → logprob: -12.250581741333008
    5. '(lambda' → logprob: -12.750581741333008
    6. '<int' → logprob: -13.000581741333008
    7. '[int' → logprob: -13.125581741333008
    8. '(input' → logprob: -13.250581741333008
    9. '=int' → logprob: -14.375581741333008
    10. ']int' → logprob: -14.375581741333008

Token 109: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.39610448479652405
    2. '(int' → logprob: -1.1461044549942017
    3. '(' → logprob: -5.396104335784912
    4. ' (' → logprob: -6.271104335784912
    5. ',' → logprob: -6.771104335784912
    6. ',input' → logprob: -7.271104335784912
    7. ')(' → logprob: -8.14610481262207
    8. '```' → logprob: -8.64610481262207
    9. ')' → logprob: -9.27110481262207
    10. ',int' → logprob: -9.52110481262207

Token 110: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759519934654236
    2. 'input' → logprob: -0.8259519934654236
    3. '(input' → logprob: -11.32595157623291
    4. ',input' → logprob: -15.70095157623291
    5. '=input' → logprob: -15.70095157623291
    6. 'int' → logprob: -16.950952529907227
    7. '	input' → logprob: -17.075952529907227
    8. '[input' → logprob: -17.325952529907227
    9. ' ' → logprob: -17.700952529907227
    10. ' sys' → logprob: -18.200952529907227

Token 111: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.0391463193809614e-05
    2. '()' → logprob: -10.375060081481934
    3. '.' → logprob: -10.500060081481934
    4. ' ().' → logprob: -14.000060081481934
    5. '.split' → logprob: -15.125060081481934
    6. '(' → logprob: -15.750060081481934
    7. ')' → logprob: -16.12506103515625
    8. '.readline' → logprob: -16.75006103515625
    9. ' .' → logprob: -17.37506103515625
    10. '()
' → logprob: -17.37506103515625

Token 112: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. 'spl' → logprob: -15.75
    3. ' split' → logprob: -16.0
    4. '(split' → logprob: -16.875
    5. ')' → logprob: -18.125
    6. 'strip' → logprob: -18.75
    7. '.split' → logprob: -18.875
    8. 'plit' → logprob: -19.125
    9. 's' → logprob: -20.375
    10. 'sp' → logprob: -20.75

Token 113: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.22871728241443634
    2. ')' → logprob: -1.97871732711792
    3. '()' → logprob: -2.72871732711792
    4. '())
' → logprob: -7.22871732711792
    5. '()
' → logprob: -9.353716850280762
    6. ')
' → logprob: -9.853716850280762
    7. '(' → logprob: -11.353716850280762
    8. ' )' → logprob: -12.228716850280762
    9. ' ())' → logprob: -12.478716850280762
    10. '())
' → logprob: -12.728716850280762

Token 114: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6512051224708557
    2. '   ' → logprob: -0.9012051224708557
    3. '	graph' → logprob: -3.276205062866211
    4. ' graph' → logprob: -3.401205062866211
    5. '
' → logprob: -7.026205062866211
    6. '(graph' → logprob: -8.276205062866211
    7. '    
' → logprob: -9.901205062866211
    8. '```' → logprob: -10.151205062866211
    9. '[' → logprob: -10.401205062866211
    10. ' ' → logprob: -10.401205062866211

Token 115: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.003178071230649948
    2. ' graph' → logprob: -5.753178119659424
    3. '	graph' → logprob: -15.128177642822266
    4. '(graph' → logprob: -16.628177642822266
    5. '
' → logprob: -17.003177642822266
    6. 'graphql' → logprob: -18.753177642822266
    7. '_graph' → logprob: -18.753177642822266
    8. '.graph' → logprob: -19.003177642822266
    9. ' 
' → logprob: -19.378177642822266
    10. 'Graph' → logprob: -19.628177642822266

Token 116: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0002258277963846922
    2. '[b' → logprob: -8.625226020812988
    3. '[' → logprob: -10.000226020812988
    4. 'a' → logprob: -14.375226020812988
    5. ' [' → logprob: -15.125226020812988
    6. '```' → logprob: -17.875225067138672
    7. '[A' → logprob: -17.875225067138672
    8. '[int' → logprob: -19.500225067138672
    9. '[c' → logprob: -19.625225067138672
    10. '[g' → logprob: -19.875225067138672

Token 117: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.003092631697654724
    2. ').' → logprob: -6.1280927658081055
    3. '.append' → logprob: -7.1280927658081055
    4. '.' → logprob: -9.628092765808105
    5. ']' → logprob: -10.753092765808105
    6. '[' → logprob: -11.503092765808105
    7. ' ].' → logprob: -12.503092765808105
    8. '[a' → logprob: -14.253092765808105
    9. '}.' → logprob: -14.378092765808105
    10. ')' → logprob: -14.378092765808105

Token 118: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.981667537620524e-06
    2. ' append' → logprob: -13.500001907348633
    3. 'appen' → logprob: -15.125001907348633
    4. '.append' → logprob: -15.375001907348633
    5. '_append' → logprob: -18.875001907348633
    6. 'Append' → logprob: -19.000001907348633
    7. '	append' → logprob: -19.000001907348633
    8. 'app' → logprob: -20.000001907348633
    9. 'push' → logprob: -20.375001907348633
    10. ' ' → logprob: -20.625001907348633

Token 119: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -6.511406809295295e-06
    2. '(' → logprob: -12.000006675720215
    3. 'b' → logprob: -15.250006675720215
    4. ' (' → logprob: -18.3750057220459
    5. '(
' → logprob: -18.7500057220459
    6. ')b' → logprob: -19.7500057220459
    7. '((' → logprob: -20.3750057220459
    8. ' b' → logprob: -20.7500057220459
    9. '(a' → logprob: -21.0000057220459
    10. '	b' → logprob: -21.1250057220459

Token 120: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.259079363080673e-05
    2. ')
' → logprob: -11.875012397766113
    3. ' )' → logprob: -12.125012397766113
    4. '),' → logprob: -17.62501335144043
    5. '))' → logprob: -19.00001335144043
    6. ')`' → logprob: -19.00001335144043
    7. ')#' → logprob: -19.25001335144043
    8. ' ' → logprob: -19.25001335144043
    9. ')a' → logprob: -19.50001335144043
    10. '   ' → logprob: -19.50001335144043

Token 121: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.0003100791363976896
    2. ' graph' → logprob: -8.125309944152832
    3. '	graph' → logprob: -11.500309944152832
    4. '(graph' → logprob: -13.250309944152832
    5. '<|end|>' → logprob: -14.000309944152832
    6. '_graph' → logprob: -14.750309944152832
    7. '
' → logprob: -15.125309944152832
    8. '.graph' → logprob: -15.250309944152832
    9. '   ' → logprob: -16.25031089782715
    10. 'graf' → logprob: -16.75031089782715

Token 123: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -9.372294698550832e-06
    2. '[a' → logprob: -11.875009536743164
    3. '[' → logprob: -13.000009536743164
    4. 'b' → logprob: -16.875009536743164
    5. '```' → logprob: -18.375009536743164
    6. ' [' → logprob: -19.375009536743164
    7. '[c' → logprob: -19.625009536743164
    8. '[B' → logprob: -20.000009536743164
    9. '[s' → logprob: -20.125009536743164
    10. '	b' → logprob: -20.125009536743164

Token 124: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.06449627131223679
    2. ').' → logprob: -3.0644962787628174
    3. '.append' → logprob: -4.939496040344238
    4. '.' → logprob: -5.064496040344238
    5. ')' → logprob: -6.689496040344238
    6. ']' → logprob: -6.939496040344238
    7. ' ].' → logprob: -10.564496040344238
    8. '])' → logprob: -10.939496040344238
    9. ' .' → logprob: -11.064496040344238
    10. '}.' → logprob: -11.939496040344238

Token 125: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. 'appen' → logprob: -15.5
    3. ' append' → logprob: -17.25
    4. '	append' → logprob: -18.0
    5. 'app' → logprob: -18.75
    6. '.append' → logprob: -19.0
    7. 'a' → logprob: -20.5
    8. 'add' → logprob: -21.0
    9. '_append' → logprob: -21.625
    10. 'appe' → logprob: -21.75

Token 126: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0031781906727701426
    2. '(' → logprob: -5.753178119659424
    3. '(
' → logprob: -14.628178596496582
    4. '(A' → logprob: -18.003177642822266
    5. ' (' → logprob: -18.628177642822266
    6. '((' → logprob: -18.753177642822266
    7. 'a' → logprob: -18.753177642822266
    8. '('' → logprob: -20.003177642822266
    9. '(

' → logprob: -20.003177642822266
    10. '(ai' → logprob: -20.003177642822266

Token 127: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ')
' → logprob: -12.87500286102295
    3. ' )' → logprob: -15.12500286102295
    4. '```' → logprob: -18.250003814697266
    5. ')`' → logprob: -18.625003814697266
    6. '}' → logprob: -19.000003814697266
    7. '))' → logprob: -19.250003814697266
    8. ')

' → logprob: -19.375003814697266
    9. '`)' → logprob: -19.500003814697266
    10. '
' → logprob: -19.500003814697266

Token 128: 'INF' (ID: 64358)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7113495469093323
    2. 'dp' → logprob: -1.2113494873046875
    3. 'dist' → logprob: -1.8363494873046875
    4. 'from' → logprob: -3.9613494873046875
    5. 'def' → logprob: -4.7113494873046875
    6. 'distance' → logprob: -5.3363494873046875
    7. 'depth' → logprob: -5.4613494873046875
    8. 'import' → logprob: -5.4613494873046875
    9. 'color' → logprob: -6.0863494873046875
    10. 'stack' → logprob: -6.5863494873046875

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021831095218658
    2. '=' → logprob: -2.3502182960510254
    3. '=int' → logprob: -12.475218772888184
    4. ',' → logprob: -13.100218772888184
    5. ')' → logprob: -13.600218772888184
    6. ' ' → logprob: -13.725218772888184
    7. ' =
' → logprob: -13.975218772888184
    8. '＝' → logprob: -14.100218772888184
    9. '.' → logprob: -14.975218772888184
    10. '_' → logprob: -15.225218772888184

Token 130: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.009865166619420052
    2. 'float' → logprob: -4.6348652839660645
    3. ' ' → logprob: -9.509864807128906
    4. 'int' → logprob: -11.009864807128906
    5. ' float' → logprob: -11.384864807128906
    6. '1' → logprob: -12.259864807128906
    7. '100' → logprob: -13.384864807128906
    8. 'pow' → logprob: -15.384864807128906
    9. '999' → logprob: -15.634864807128906
    10. '-' → logprob: -16.134864807128906

Token 131: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02638900652527809
    2. 'float' → logprob: -3.6513891220092773
    3. 'int' → logprob: -9.651389122009277
    4. '1' → logprob: -11.276389122009277
    5. '100' → logprob: -11.901389122009277
    6. ' float' → logprob: -13.401389122009277
    7. 'pow' → logprob: -13.901389122009277
    8. '999' → logprob: -14.276389122009277
    9. ' ' → logprob: -14.276389122009277
    10. '2' → logprob: -15.276389122009277

Token 132: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.014813347719609737
    2. '10' → logprob: -4.639813423156738
    3. '18' → logprob: -6.014813423156738
    4. '15' → logprob: -6.264813423156738
    5. '12' → logprob: -7.639813423156738
    6. '**' → logprob: -8.764813423156738
    7. '7' → logprob: -10.514813423156738
    8. '14' → logprob: -11.014813423156738
    9. '13' → logprob: -11.889813423156738
    10. '16' → logprob: -12.514813423156738

Token 133: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.5423592329025269
    2. '9' → logprob: -1.0423592329025269
    3. '10' → logprob: -3.2923593521118164
    4. '18' → logprob: -3.6673593521118164
    5. '12' → logprob: -5.917359352111816
    6. '14' → logprob: -8.417359352111816
    7. '16' → logprob: -8.417359352111816
    8. '13' → logprob: -9.542359352111816
    9. '11' → logprob: -9.792359352111816
    10. '17' → logprob: -11.042359352111816

Token 134: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.43777117133140564
    2. 'dp' → logprob: -1.062771201133728
    3. 'distance' → logprob: -5.062771320343018
    4. '
' → logprob: -7.062771320343018
    5. 'from' → logprob: -7.312771320343018
    6. 'cost' → logprob: -7.562771320343018
    7. 'visited' → logprob: -8.68777084350586
    8. 'DP' → logprob: -8.93777084350586
    9. 'import' → logprob: -9.56277084350586
    10. 'DIST' → logprob: -9.93777084350586

Token 135: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6985116004943848
    2. 'dist' → logprob: -0.6985116004943848
    3. 'cost' → logprob: -5.823511600494385
    4. 'distance' → logprob: -7.573511600494385
    5. 'from' → logprob: -7.698511600494385
    6. 'DP' → logprob: -7.823511600494385
    7. 'def' → logprob: -8.448511123657227
    8. 'import' → logprob: -8.698511123657227
    9. 'time' → logprob: -9.448511123657227
    10. 'ans' → logprob: -9.448511123657227

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0029855482280254364
    2. '=' → logprob: -6.62798547744751
    3. '[' → logprob: -6.62798547744751
    4. ' ' → logprob: -9.127985954284668
    5. '1' → logprob: -9.877985954284668
    6. ' =[' → logprob: -9.877985954284668
    7. '_' → logprob: -10.002985954284668
    8. '2' → logprob: -10.627985954284668
    9. '=[' → logprob: -11.627985954284668
    10. '0' → logprob: -11.627985954284668

Token 137: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.321444034576416
    2. '[' → logprob: -1.321444034576416
    3. '[-' → logprob: -4.821444034576416
    4. ' [[' → logprob: -10.196443557739258
    5. '[(' → logprob: -10.446443557739258
    6. ' [' → logprob: -12.321443557739258
    7. '[int' → logprob: -12.321443557739258
    8. '[n' → logprob: -13.071443557739258
    9. '[{' → logprob: -13.196443557739258
    10. '[N' → logprob: -13.321443557739258

Token 138: 'INF' (ID: 64358)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6665207147598267
    2. 'INF' → logprob: -0.7915207147598267
    3. '0' → logprob: -4.416520595550537
    4. '[-' → logprob: -4.791520595550537
    5. '-' → logprob: -5.291520595550537
    6. '-INF' → logprob: -5.291520595550537
    7. '(' → logprob: -7.041520595550537
    8. '(IN' → logprob: -7.166520595550537
    9. '[[' → logprob: -8.041521072387695
    10. '(-' → logprob: -8.291521072387695

Token 139: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11783886700868607
    2. ']*(' → logprob: -2.2428388595581055
    3. ']*' → logprob: -5.4928388595581055
    4. ' for' → logprob: -7.3678388595581055
    5. ' ]' → logprob: -8.992838859558105
    6. 'for' → logprob: -9.117838859558105
    7. ']+' → logprob: -11.117838859558105
    8. '*(' → logprob: -13.367838859558105
    9. ',' → logprob: -13.492838859558105
    10. '][' → logprob: -13.617838859558105

Token 140: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.023341447114944458
    2. '(N' → logprob: -3.773341417312622
    3. ' N' → logprob: -9.898341178894043
    4. '(' → logprob: -10.523341178894043
    5. ' (' → logprob: -12.023341178894043
    6. '1' → logprob: -12.648341178894043
    7. ')' → logprob: -13.398341178894043
    8. ',N' → logprob: -13.398341178894043
    9. '   ' → logprob: -13.523341178894043
    10. '0' → logprob: -14.148341178894043

Token 141: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.2994620242971e-06
    2. '+
' → logprob: -12.000008583068848
    3. ' +' → logprob: -13.750008583068848
    4. '1' → logprob: -14.125008583068848
    5. '+)' → logprob: -15.375008583068848
    6. '＋' → logprob: -16.75000762939453
    7. '```' → logprob: -17.37500762939453
    8. ')+' → logprob: -18.12500762939453
    9. '+

' → logprob: -18.25000762939453
    10. ')' → logprob: -18.75000762939453

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. '2' → logprob: -11.625009536743164
    3. ' ' → logprob: -14.875009536743164
    4. '+' → logprob: -16.125009536743164
    5. '１' → logprob: -16.750009536743164
    6. '7' → logprob: -17.000009536743164
    7. '6' → logprob: -17.250009536743164
    8. '```' → logprob: -17.250009536743164
    9. '5' → logprob: -18.312509536743164
    10. '3' → logprob: -18.437509536743164

Token 143: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.870950215263292e-05
    2. ' )' → logprob: -10.125048637390137
    3. ')
' → logprob: -11.750048637390137
    4. '
' → logprob: -15.500048637390137
    5. ']' → logprob: -16.000049591064453
    6. '[' → logprob: -16.750049591064453
    7. ')

' → logprob: -16.750049591064453
    8. '),' → logprob: -16.875049591064453
    9. '))' → logprob: -17.125049591064453
    10. ')`' → logprob: -17.125049591064453

Token 144: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0013827363727614284
    2. 'from' → logprob: -7.001382827758789
    3. 'import' → logprob: -8.126382827758789
    4. 'def' → logprob: -9.626382827758789
    5. '0' → logprob: -9.626382827758789
    6. 'visited' → logprob: -10.751382827758789
    7. 'for' → logprob: -11.501382827758789
    8. 'dist' → logprob: -12.751382827758789
    9. 'queue' → logprob: -13.501382827758789
    10. 'dq' → logprob: -13.876382827758789

Token 145: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.771655115589965e-05
    2. '<|end|>' → logprob: -11.375018119812012
    3. '[
' → logprob: -13.375018119812012
    4. '\[' → logprob: -13.500018119812012
    5. '```' → logprob: -14.125018119812012
    6. '0' → logprob: -14.375018119812012
    7. '[:]' → logprob: -14.500018119812012
    8. ' [' → logprob: -15.250018119812012
    9. '[...]' → logprob: -15.750018119812012
    10. '
' → logprob: -16.000017166137695

Token 146: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005258779972791672
    2. '1' → logprob: -5.255258560180664
    3. ' ' → logprob: -10.755258560180664
    4. '[' → logprob: -13.942758560180664
    5. ')' → logprob: -14.192758560180664
    6. '2' → logprob: -14.755258560180664
    7. '(' → logprob: -14.942758560180664
    8. ']' → logprob: -15.005258560180664
    9. '-' → logprob: -15.442758560180664
    10. '```' → logprob: -16.317758560180664

Token 147: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003583456273190677
    2. ' ]' → logprob: -8.250358581542969
    3. ']=' → logprob: -9.625358581542969
    4. ')' → logprob: -11.000358581542969
    5. '=' → logprob: -12.000358581542969
    6. ')]' → logprob: -12.375358581542969
    7. ' =' → logprob: -13.375358581542969
    8. '[' → logprob: -14.250358581542969
    9. '])' → logprob: -15.000358581542969
    10. ']
' → logprob: -15.625358581542969

Token 148: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42871400713920593
    2. ' =' → logprob: -1.0537140369415283
    3. ',' → logprob: -12.30371379852295
    4. '[' → logprob: -13.30371379852295
    5. ' =
' → logprob: -13.67871379852295
    6. ')' → logprob: -13.92871379852295
    7. '=
' → logprob: -13.92871379852295
    8. '=

' → logprob: -14.55371379852295
    9. '=int' → logprob: -14.80371379852295
    10. '<|end|>' → logprob: -14.80371379852295

Token 149: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0033465633168816566
    2. 'C' → logprob: -6.2533464431762695
    3. 'R' → logprob: -6.7533464431762695
    4. ' ' → logprob: -8.37834644317627
    5. ' C' → logprob: -12.37834644317627
    6. ' R' → logprob: -12.62834644317627
    7. '100' → logprob: -13.00334644317627
    8. '-' → logprob: -13.25334644317627
    9. '1' → logprob: -13.56584644317627
    10. '(' → logprob: -13.62834644317627

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012916665291413665
    2. 'R' → logprob: -7.001291751861572
    3. 'C' → logprob: -8.001291275024414
    4. ' ' → logprob: -10.376291275024414
    5. '(' → logprob: -12.376291275024414
    6. '-' → logprob: -12.751291275024414
    7. '1' → logprob: -13.813791275024414
    8. ' R' → logprob: -14.063791275024414
    9. '100' → logprob: -14.126291275024414
    10. '[' → logprob: -14.813791275024414

Token 151: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3334648311138153
    2. ' for' → logprob: -1.3334648609161377
    3. '
' → logprob: -4.083464622497559
    4. 'from' → logprob: -7.083464622497559
    5. ')' → logprob: -7.333464622497559
    6. 'import' → logprob: -7.958464622497559
    7. '\n' → logprob: -8.333464622497559
    8. ' 
' → logprob: -8.333464622497559
    9. '<|end|>' → logprob: -8.333464622497559
    10. ' from' → logprob: -8.958464622497559

Token 152: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4329051375389099
    2. 'from' → logprob: -1.4329051971435547
    3. 'for' → logprob: -2.1829051971435547
    4. 'stack' → logprob: -10.932905197143555
    5. 'queue' → logprob: -11.057905197143555
    6. 'heap' → logprob: -12.307905197143555
    7. 'deque' → logprob: -12.307905197143555
    8. 'pq' → logprob: -13.932905197143555
    9. 'q' → logprob: -14.057905197143555
    10. ' from' → logprob: -14.182905197143555

Token 153: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.10088250041007996
    2. 'heap' → logprob: -2.3508825302124023
    3. 'queue' → logprob: -7.850882530212402
    4. ' collections' → logprob: -8.225882530212402
    5. ' heap' → logprob: -10.975882530212402
    6. 'deque' → logprob: -13.975882530212402
    7. '_' → logprob: -15.850882530212402
    8. '_heap' → logprob: -15.850882530212402
    9. 'collection' → logprob: -16.100881576538086
    10. ' ' → logprob: -16.225881576538086

Token 154: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.002714999485760927
    2. ' import' → logprob: -6.252715110778809
    3. 'from' → logprob: -8.127715110778809
    4. '.import' → logprob: -8.752715110778809
    5. '.' → logprob: -9.002715110778809
    6. 'port' → logprob: -9.252715110778809
    7. '```' → logprob: -11.752715110778809
    8. 'module' → logprob: -11.877715110778809
    9. 'ort' → logprob: -11.877715110778809
    10. 'def' → logprob: -12.002715110778809

Token 155: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0015080781886354089
    2. ' deque' → logprob: -6.5015082359313965
    3. 'collections' → logprob: -12.501507759094238
    4. 'de' → logprob: -13.751507759094238
    5. 'heap' → logprob: -14.251507759094238
    6. 'queue' → logprob: -14.751507759094238
    7. 'd' → logprob: -19.376508712768555
    8. ' ' → logprob: -20.626508712768555
    9. '```' → logprob: -21.126508712768555
    10. '.de' → logprob: -21.626508712768555

Token 156: '

' (ID: 279)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.6135320067405701
    2. '
' → logprob: -0.8635320067405701
    3. 'q' → logprob: -4.238532066345215
    4. 'dq' → logprob: -4.238532066345215
    5. 'deque' → logprob: -5.488532066345215
    6. 'que' → logprob: -6.363532066345215
    7. ' 
' → logprob: -6.988532066345215
    8. ' queue' → logprob: -7.488532066345215
    9. '

' → logprob: -8.488532066345215
    10. '```' → logprob: -8.863532066345215

Token 157: 'for' (ID: 1938)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.13833299279212952
    2. 'q' → logprob: -2.1383330821990967
    3. 'que' → logprob: -4.888332843780518
    4. 'dq' → logprob: -5.638332843780518
    5. 'deque' → logprob: -8.763333320617676
    6. '```' → logprob: -9.888333320617676
    7. 'Q' → logprob: -10.638333320617676
    8. 'qu' → logprob: -12.388333320617676
    9. 'for' → logprob: -12.638333320617676
    10. 'de' → logprob: -12.763333320617676

Token 158: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09877479076385498
    2. ' node' → logprob: -3.4737749099731445
    3. ' u' → logprob: -3.7237749099731445
    4. 'i' → logprob: -4.5987749099731445
    5. ' _' → logprob: -4.5987749099731445
    6. ' v' → logprob: -4.8487749099731445
    7. '_' → logprob: -5.8487749099731445
    8. 'u' → logprob: -6.8487749099731445
    9. ' queue' → logprob: -6.8487749099731445
    10. ' start' → logprob: -6.9737749099731445

Token 159: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06348184496164322
    2. 'in' → logprob: -2.8134818077087402
    3. ' ' → logprob: -6.56348180770874
    4. ',' → logprob: -10.063482284545898
    5. 'n' → logprob: -11.438482284545898
    6. ' i' → logprob: -11.563482284545898
    7. '1' → logprob: -11.563482284545898
    8. 'range' → logprob: -12.063482284545898
    9. '	in' → logprob: -12.188482284545898
    10. ' ' → logprob: -12.813482284545898

Token 160: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.043005481362342834
    2. ' range' → logprob: -3.1680054664611816
    3. '(range' → logprob: -13.41800594329834
    4. ' ' → logprob: -13.66800594329834
    5. 'graph' → logprob: -13.79300594329834
    6. '	range' → logprob: -14.54300594329834
    7. 'rang' → logprob: -14.79300594329834
    8. '1' → logprob: -15.41800594329834
    9. 'r' → logprob: -15.41800594329834
    10. '[' → logprob: -15.54300594329834

Token 161: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3544423381972592e-05
    2. '1' → logprob: -11.62501335144043
    3. '(N' → logprob: -13.00001335144043
    4. '(
' → logprob: -13.37501335144043
    5. ' (' → logprob: -14.25001335144043
    6. '(n' → logprob: -17.25001335144043
    7. '(i' → logprob: -17.75001335144043
    8. ',' → logprob: -18.00001335144043
    9. '((' → logprob: -18.12501335144043
    10. '2' → logprob: -18.25001335144043

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03340166062116623
    2. 'N' → logprob: -3.5334017276763916
    3. '2' → logprob: -5.7834014892578125
    4. ' ' → logprob: -7.7834014892578125
    5. ' N' → logprob: -9.033401489257812
    6. '   ' → logprob: -11.283401489257812
    7. '0' → logprob: -12.533401489257812
    8. '(' → logprob: -12.533401489257812
    9. 'i' → logprob: -13.408401489257812
    10. 'n' → logprob: -13.470901489257812

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003790696384385228
    2. ' ,' → logprob: -5.878790855407715
    3. ',N' → logprob: -7.003790855407715
    4. '   ' → logprob: -10.128790855407715
    5. '1' → logprob: -11.378790855407715
    6. ' N' → logprob: -11.628790855407715
    7. ' ' → logprob: -12.378790855407715
    8. '+' → logprob: -12.753790855407715
    9. 'N' → logprob: -12.878790855407715
    10. '(N' → logprob: -13.003790855407715

Token 164: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0011708177626132965
    2. ' N' → logprob: -6.751170635223389
    3. ' ' → logprob: -14.751171112060547
    4. '	N' → logprob: -16.251171112060547
    5. '(N' → logprob: -16.751171112060547
    6. '   ' → logprob: -16.751171112060547
    7. 'n' → logprob: -17.626171112060547
    8. 'i' → logprob: -17.876171112060547
    9. '1' → logprob: -18.126171112060547
    10. ')' → logprob: -18.126171112060547

Token 165: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.440506407059729e-05
    2. ' +' → logprob: -10.37503433227539
    3. '+
' → logprob: -13.62503433227539
    4. ')+' → logprob: -14.25003433227539
    5. '):' → logprob: -14.75003433227539
    6. '):
' → logprob: -15.37503433227539
    7. ')' → logprob: -15.62503433227539
    8. '+)' → logprob: -15.75003433227539
    9. '
' → logprob: -16.12503433227539
    10. '```' → logprob: -16.37503433227539

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.976922744186595e-05
    2. ' ' → logprob: -10.625040054321289
    3. '2' → logprob: -11.875040054321289
    4. '+' → logprob: -12.000040054321289
    5. 'i' → logprob: -13.875040054321289
    6. '   ' → logprob: -14.375040054321289
    7. '```' → logprob: -14.875040054321289
    8. ')' → logprob: -15.750040054321289
    9. '
' → logprob: -16.37504005432129
    10. '  ' → logprob: -16.62504005432129

Token 167: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05325690284371376
    2. ':' → logprob: -3.0532569885253906
    3. ')' → logprob: -5.428256988525391
    4. '):
' → logprob: -8.67825698852539
    5. ' ):' → logprob: -10.42825698852539
    6. ':)' → logprob: -10.42825698852539
    7. ',' → logprob: -11.80325698852539
    8. ':
' → logprob: -11.92825698852539
    9. '   ' → logprob: -11.92825698852539
    10. ' :' → logprob: -12.17825698852539

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040525492280721664
    2. ' q' → logprob: -4.540525436401367
    3. ' for' → logprob: -4.540525436401367
    4. ' queue' → logprob: -5.415525436401367
    5. 'for' → logprob: -5.540525436401367
    6. 'q' → logprob: -5.540525436401367
    7. ' if' → logprob: -6.415525436401367
    8. 'queue' → logprob: -7.040525436401367
    9. ' visited' → logprob: -7.165525436401367
    10. '    
' → logprob: -8.165525436401367

Token 169: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2923617362976074
    2. 'q' → logprob: -2.1673617362976074
    3. 'queue' → logprob: -2.1673617362976074
    4. 'dq' → logprob: -4.417361736297607
    5. 'que' → logprob: -5.167361736297607
    6. 'if' → logprob: -6.292361736297607
    7. 'de' → logprob: -6.667361736297607
    8. 'dist' → logprob: -7.292361736297607
    9. 'visited' → logprob: -7.292361736297607
    10. '   ' → logprob: -7.292361736297607

Token 170: ' BFS' (ID: 190016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6813356280326843
    2. 'queue' → logprob: -1.306335687637329
    3. 'q' → logprob: -2.056335687637329
    4. 'dq' → logprob: -3.181335687637329
    5. 'que' → logprob: -3.681335687637329
    6. 'dist' → logprob: -5.18133544921875
    7. 'de' → logprob: -5.30633544921875
    8. 'visited' → logprob: -5.55633544921875
    9. 'from' → logprob: -5.68133544921875
    10. 'deque' → logprob: -5.80633544921875

Token 171: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4810183346271515
    2. '
' → logprob: -2.606018304824829
    3. '(queue' → logprob: -2.606018304824829
    4. ':' → logprob: -2.731018304824829
    5. ' queue' → logprob: -2.856018304824829
    6. ' for' → logprob: -3.106018304824829
    7. 'queue' → logprob: -3.606018304824829
    8. 'for' → logprob: -4.481018543243408
    9. '(' → logprob: -5.481018543243408
    10. '	queue' → logprob: -5.606018543243408

Token 172: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003815756645053625
    2. ' i' → logprob: -7.8753814697265625
    3. '   ' → logprob: -14.375381469726562
    4. '
' → logprob: -15.250381469726562
    5. '[i' → logprob: -15.250381469726562
    6. '(i' → logprob: -15.750381469726562
    7. 'graph' → logprob: -16.625381469726562
    8. '1' → logprob: -17.000381469726562
    9. ' ' → logprob: -17.000381469726562
    10. '`' → logprob: -17.250381469726562

Token 173: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40814241766929626
    2. '   ' → logprob: -1.7831424474716187
    3. ' queue' → logprob: -2.408142328262329
    4. 'queue' → logprob: -3.408142328262329
    5. 'q' → logprob: -3.658142328262329
    6. ' q' → logprob: -4.908142566680908
    7. '    
' → logprob: -6.158142566680908
    8. ':' → logprob: -6.283142566680908
    9. '	queue' → logprob: -7.283142566680908
    10. ',' → logprob: -7.408142566680908

Token 174: ' find' (ID: 1646)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.43225783109664917
    2. 'find' → logprob: -1.682257890701294
    3. 'all' → logprob: -2.432257890701294
    4. 'range' → logprob: -4.182257652282715
    5. ' i' → logprob: -4.307257652282715
    6. ' find' → logprob: -4.557257652282715
    7. '[]' → logprob: -4.682257652282715
    8. ' all' → logprob: -4.682257652282715
    9. 'for' → logprob: -5.182257652282715
    10. '[i' → logprob: -5.807257652282715

Token 175: ' towns' (ID: 39847)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5995241403579712
    2. ' all' → logprob: -1.4745241403579712
    3. 'the' → logprob: -2.7245240211486816
    4. 'all' → logprob: -2.9745240211486816
    5. ' distances' → logprob: -3.5995240211486816
    6. ' shortest' → logprob: -3.7245240211486816
    7. ' nodes' → logprob: -3.8495240211486816
    8. 'j' → logprob: -5.599524021148682
    9. 'short' → logprob: -5.849524021148682
    10. 'dist' → logprob: -5.974524021148682

Token 176: ' reachable' (ID: 143580)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3605090379714966
    2. '   ' → logprob: -1.4855090379714966
    3. ' j' → logprob: -1.7355090379714966
    4. 'that' → logprob: -2.360508918762207
    5. 'j' → logprob: -2.735508918762207
    6. ' that' → logprob: -2.985508918762207
    7. 'with' → logprob: -3.235508918762207
    8. 'reachable' → logprob: -3.485508918762207
    9. 'in' → logprob: -4.860508918762207
    10. '    ' → logprob: -5.110508918762207

Token 177: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02712147682905197
    2. ' in' → logprob: -5.152121543884277
    3. ' =' → logprob: -5.402121543884277
    4. 'from' → logprob: -5.652121543884277
    5. ',' → logprob: -5.777121543884277
    6. 'queue' → logprob: -6.152121543884277
    7. 'with' → logprob: -6.402121543884277
    8. 'in' → logprob: -6.652121543884277
    9. ' with' → logprob: -6.902121543884277
    10. '  ' → logprob: -7.652121543884277

Token 178: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.859756588935852
    2. 'in' → logprob: -1.359756588935852
    3. ' R' → logprob: -2.2347564697265625
    4. 'range' → logprob: -3.7347564697265625
    5. ' range' → logprob: -3.9847564697265625
    6. 'radius' → logprob: -3.9847564697265625
    7. ' cost' → logprob: -4.1097564697265625
    8. ' radius' → logprob: -4.2347564697265625
    9. 'C' → logprob: -4.4847564697265625
    10. 'a' → logprob: -4.7347564697265625

Token 179: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002930366899818182
    2. '[' → logprob: -8.875292778015137
    3. '[R' → logprob: -10.000292778015137
    4. ')' → logprob: -11.000292778015137
    5. '
' → logprob: -11.375292778015137
    6. 'range' → logprob: -12.000292778015137
    7. 'i' → logprob: -12.000292778015137
    8. ' =' → logprob: -12.000292778015137
    9. 'ange' → logprob: -12.250292778015137
    10. 's' → logprob: -12.375292778015137

Token 180: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14726372063159943
    2. '[i' → logprob: -2.147263765335083
    3. '])' → logprob: -4.022263526916504
    4. ')' → logprob: -7.647263526916504
    5. ']+' → logprob: -7.647263526916504
    6. ']-' → logprob: -8.897263526916504
    7. ' ]' → logprob: -9.272263526916504
    8. '[' → logprob: -9.397263526916504
    9. 'i' → logprob: -9.522263526916504
    10. ']<=' → logprob: -9.647263526916504

Token 181: ' or' (ID: 503)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.6842791438102722
    2. '   ' → logprob: -1.309279203414917
    3. ' queue' → logprob: -2.434279203414917
    4. '
' → logprob: -2.934279203414917
    5. 'q' → logprob: -3.309279203414917
    6. 'visited' → logprob: -4.059278964996338
    7. ',' → logprob: -4.684278964996338
    8. ' visited' → logprob: -5.934278964996338
    9. ':' → logprob: -6.059278964996338
    10. ' =' → logprob: -6.184278964996338

Token 182: ' less' (ID: 3760)
  Prédit: 'without'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'without' → logprob: -0.9902557134628296
    2. ' without' → logprob: -1.7402557134628296
    3. 'equal' → logprob: -1.9902557134628296
    4. ' equal' → logprob: -2.115255832672119
    5. 'less' → logprob: -2.490255832672119
    6. '=' → logprob: -3.240255832672119
    7. ' less' → logprob: -4.365255832672119
    8. 'distance' → logprob: -4.615255832672119
    9. 'graph' → logprob: -5.240255832672119
    10. 'i' → logprob: -5.240255832672119

Token 183: ' edges' (ID: 22569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09992171078920364
    2. '
' → logprob: -2.474921703338623
    3. ' queue' → logprob: -5.849921703338623
    4. 'queue' → logprob: -5.974921703338623
    5. '    
' → logprob: -5.974921703338623
    6. 'q' → logprob: -7.349921703338623
    7. ':' → logprob: -7.724921703338623
    8. '
' → logprob: -7.974921703338623
    9. '  ' → logprob: -8.474922180175781
    10. '  
' → logprob: -8.599922180175781

Token 184: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015835627913475037
    2. '
' → logprob: -4.265835762023926
    3. 'queue' → logprob: -7.640835762023926
    4. ' queue' → logprob: -7.765835762023926
    5. '    
' → logprob: -8.390835762023926
    6. 'q' → logprob: -8.640835762023926
    7. ',' → logprob: -9.515835762023926
    8. '```' → logprob: -10.140835762023926
    9. '  ' → logprob: -10.265835762023926
    10. '
' → logprob: -10.890835762023926

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034372040536254644
    2. ' queue' → logprob: -6.128437042236328
    3. 'queue' → logprob: -7.378437042236328
    4. '
' → logprob: -8.753437042236328
    5. ' for' → logprob: -9.253437042236328
    6. '    
' → logprob: -9.503437042236328
    7. 'for' → logprob: -9.878437042236328
    8. '  ' → logprob: -10.128437042236328
    9. 'q' → logprob: -10.128437042236328
    10. ' ' → logprob: -10.253437042236328

Token 186: ' dist' (ID: 3601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6672767400741577
    2. ' queue' → logprob: -1.2922767400741577
    3. 'queue' → logprob: -1.6672767400741577
    4. 'q' → logprob: -4.167276859283447
    5. ' q' → logprob: -5.917276859283447
    6. ' for' → logprob: -7.042276859283447
    7. 'for' → logprob: -7.167276859283447
    8. 'dq' → logprob: -7.167276859283447
    9. ' ' → logprob: -7.292276859283447
    10. 'que' → logprob: -7.542276859283447

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2811991274356842
    2. '=' → logprob: -1.4061990976333618
    3. '=[' → logprob: -10.78119945526123
    4. '[' → logprob: -11.53119945526123
    5. '=[]' → logprob: -11.90619945526123
    6. ',' → logprob: -12.53119945526123
    7. '[i' → logprob: -13.15619945526123
    8. '＝' → logprob: -13.53119945526123
    9. ' =[' → logprob: -13.78119945526123
    10. '   ' → logprob: -14.03119945526123

Token 188: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.018352219834923744
    2. '[' → logprob: -4.018352031707764
    3. 'deque' → logprob: -8.768352508544922
    4. ' [-' → logprob: -10.268352508544922
    5. ' [' → logprob: -11.768352508544922
    6. '[int' → logprob: -14.018352508544922
    7. '[d' → logprob: -14.518352508544922
    8. '{' → logprob: -14.518352508544922
    9. '[b' → logprob: -14.643352508544922
    10. '[a' → logprob: -14.768352508544922

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '-' → logprob: -17.75
    3. 'INF' → logprob: -17.75
    4. ' ' → logprob: -17.875
    5. '2' → logprob: -18.5
    6. '１' → logprob: -19.25
    7. '(' → logprob: -20.125
    8. '۱' → logprob: -20.25
    9. '```' → logprob: -21.0
    10. '
' → logprob: -21.125

Token 190: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.24659423530101776
    2. ']' → logprob: -1.6215941905975342
    3. ' for' → logprob: -4.121594429016113
    4. 'for' → logprob: -5.621594429016113
    5. ']*' → logprob: -6.871594429016113
    6. '*(' → logprob: -9.746594429016113
    7. ']+' → logprob: -11.246594429016113
    8. '   ' → logprob: -12.621594429016113
    9. '(N' → logprob: -12.746594429016113
    10. ',' → logprob: -12.996594429016113

Token 191: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00038241007132455707
    2. '(N' → logprob: -7.875382423400879
    3. ' N' → logprob: -13.000382423400879
    4. '   ' → logprob: -16.750381469726562
    5. '	N' → logprob: -17.375381469726562
    6. 'len' → logprob: -17.500381469726562
    7. '
' → logprob: -17.750381469726562
    8. 'n' → logprob: -18.125381469726562
    9. '[N' → logprob: -18.250381469726562
    10. ' ' → logprob: -18.375381469726562

Token 192: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.842555426876061e-06
    2. ' +' → logprob: -12.750004768371582
    3. '+
' → logprob: -13.500004768371582
    4. '
' → logprob: -15.625004768371582
    5. '1' → logprob: -16.0000057220459
    6. '```' → logprob: -17.0000057220459
    7. '＋' → logprob: -17.2500057220459
    8. '[' → logprob: -17.2500057220459
    9. ')+' → logprob: -17.3750057220459
    10. '+i' → logprob: -17.7500057220459

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.750000953674316
    3. '```' → logprob: -16.125
    4. '+' → logprob: -16.5
    5. '2' → logprob: -17.875
    6. 'i' → logprob: -18.5
    7. ')' → logprob: -19.375
    8. '6' → logprob: -20.0
    9. '１' → logprob: -20.25
    10. '7' → logprob: -20.375

Token 194: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07897339761257172
    2. ')
' → logprob: -2.5789732933044434
    3. '   ' → logprob: -9.828973770141602
    4. '
' → logprob: -10.828973770141602
    5. ')
' → logprob: -12.078973770141602
    6. ')d' → logprob: -13.828973770141602
    7. ' )' → logprob: -14.078973770141602
    8. ' ' → logprob: -14.703973770141602
    9. ' )
' → logprob: -15.078973770141602
    10. '```' → logprob: -15.203973770141602

Token 195: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01530195027589798
    2. '   ' → logprob: -4.2653021812438965
    3. ' dist' → logprob: -7.0153021812438965
    4. '	dist' → logprob: -9.140301704406738
    5. 'queue' → logprob: -9.265301704406738
    6. 'deque' → logprob: -11.640301704406738
    7. '
' → logprob: -11.640301704406738
    8. 'dq' → logprob: -12.140301704406738
    9. '    
' → logprob: -12.640301704406738
    10. 'q' → logprob: -13.140301704406738

Token 196: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.01951364055275917
    2. 'queue' → logprob: -4.0195136070251465
    3. 'q' → logprob: -7.5195136070251465
    4. 'deque' → logprob: -7.7695136070251465
    5. 'que' → logprob: -8.519514083862305
    6. 'dq' → logprob: -8.644514083862305
    7. ' dist' → logprob: -11.144514083862305
    8. ' queue' → logprob: -12.769514083862305
    9. 'de' → logprob: -13.019514083862305
    10. '```' → logprob: -13.769514083862305

Token 197: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -12.87500286102295
    3. 'i' → logprob: -15.37500286102295
    4. '```' → logprob: -15.50000286102295
    5. ' [' → logprob: -16.625003814697266
    6. '[I' → logprob: -16.750003814697266
    7. ')[' → logprob: -17.250003814697266
    8. '][' → logprob: -17.750003814697266
    9. '[
' → logprob: -17.750003814697266
    10. '[start' → logprob: -18.125003814697266

Token 198: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004143456753809005
    2. ']=' → logprob: -7.8754143714904785
    3. ' ]' → logprob: -11.12541389465332
    4. ')' → logprob: -11.25041389465332
    5. '=' → logprob: -12.37541389465332
    6. ' =' → logprob: -13.50041389465332
    7. ']
' → logprob: -15.62541389465332
    8. '[i' → logprob: -15.75041389465332
    9. '   ' → logprob: -15.87541389465332
    10. ')]' → logprob: -16.37541389465332

Token 199: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197037547826767
    2. ' =' → logprob: -2.8119704723358154
    3. '0' → logprob: -13.561970710754395
    4. ']=' → logprob: -15.061970710754395
    5. ')=' → logprob: -15.561970710754395
    6. '=i' → logprob: -15.561970710754395
    7. ',' → logprob: -15.686970710754395
    8. '=True' → logprob: -16.186969757080078
    9. ']' → logprob: -16.311969757080078
    10. ')' → logprob: -16.436969757080078

Token 200: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۰' → logprob: -18.875001907348633
    4. '00' → logprob: -19.250001907348633
    5. '０' → logprob: -19.625001907348633
    6. '   ' → logprob: -19.625001907348633
    7. '```' → logprob: -20.000001907348633
    8. '000' → logprob: -20.187501907348633
    9. '
' → logprob: -20.500001907348633
    10. '০' → logprob: -20.937501907348633

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.00000286102295
    3. '۰' → logprob: -16.187503814697266
    4. '00' → logprob: -16.750003814697266
    5. '012' → logprob: -17.000003814697266
    6. '０' → logprob: -17.000003814697266
    7. '000' → logprob: -17.062503814697266
    8. '```' → logprob: -17.562503814697266
    9. '०' → logprob: -17.750003814697266
    10. '০' → logprob: -17.812503814697266

Token 202: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41267648339271545
    2. '
' → logprob: -1.162676453590393
    3. 'queue' → logprob: -3.9126765727996826
    4. ' queue' → logprob: -6.4126763343811035
    5. '    
' → logprob: -6.9126763343811035
    6. 'dq' → logprob: -6.9126763343811035
    7. '```' → logprob: -7.2876763343811035
    8. 'deque' → logprob: -7.6626763343811035
    9. '	queue' → logprob: -8.162676811218262
    10. 'q' → logprob: -8.537676811218262

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007227851077914238
    2. 'queue' → logprob: -5.132227897644043
    3. ' queue' → logprob: -6.882227897644043
    4. 'q' → logprob: -8.882227897644043
    5. 'dq' → logprob: -10.007227897644043
    6. 'que' → logprob: -10.257227897644043
    7. '```' → logprob: -10.882227897644043
    8. 'deque' → logprob: -11.632227897644043
    9. ' que' → logprob: -11.757227897644043
    10. ' ' → logprob: -12.132227897644043

Token 204: ' que' (ID: 661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.1657084822654724
    2. 'q' → logprob: -1.9157085418701172
    3. 'que' (adapté à ' que') → logprob: -5.915708541870117
    4. 'dq' → logprob: -5.915708541870117
    5. 'deque' → logprob: -9.915708541870117
    6. ' queue' → logprob: -10.915708541870117
    7. 'Q' → logprob: -12.415708541870117
    8. 'de' → logprob: -13.540708541870117
    9. 'd' → logprob: -13.665708541870117
    10. '   ' → logprob: -14.290708541870117

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04539039731025696
    2. '=' → logprob: -3.1703903675079346
    3. 'ue' → logprob: -6.045390605926514
    4. 'u' → logprob: -10.920390129089355
    5. 'uer' → logprob: -15.295390129089355
    6. 'e' → logprob: -15.420390129089355
    7. '＝' → logprob: -15.670390129089355
    8. '.' → logprob: -15.670390129089355
    9. ' ' → logprob: -15.795390129089355
    10. 'ues' → logprob: -16.295391082763672

Token 206: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0004306692280806601
    2. ' deque' → logprob: -7.750430583953857
    3. 'de' → logprob: -18.000431060791016
    4. 'Deque' → logprob: -18.625431060791016
    5. 'collections' → logprob: -18.750431060791016
    6. '```' → logprob: -20.875431060791016
    7. '	de' → logprob: -22.875431060791016
    8. '   ' → logprob: -22.875431060791016
    9. 'dq' → logprob: -23.875431060791016
    10. 'd' → logprob: -24.125431060791016

Token 207: '()
' (ID: 1234)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.4197748005390167
    2. '()' → logprob: -1.4197747707366943
    3. '([(' → logprob: -2.4197747707366943
    4. '()
' → logprob: -4.419775009155273
    5. '[(' → logprob: -10.544775009155273
    6. '(' → logprob: -11.669775009155273
    7. '()\' → logprob: -12.294775009155273
    8. '()

' → logprob: -12.919775009155273
    9. '([
' → logprob: -13.169775009155273
    10. '(i' → logprob: -13.169775009155273

Token 208: '   ' (ID: 271)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.023337023332715034
    2. ' que' → logprob: -4.023336887359619
    3. '   ' → logprob: -5.273336887359619
    4. '	' → logprob: -11.148337364196777
    5. 'deque' → logprob: -12.273337364196777
    6. 'i' → logprob: -12.398337364196777
    7. 'ques' → logprob: -12.398337364196777
    8. '(' → logprob: -12.523337364196777
    9. '```' → logprob: -12.648337364196777
    10. '  ' → logprob: -13.148337364196777

Token 209: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' (adapté à ' que') → logprob: -4.4849443838757e-06
    2. ' que' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.250004768371582
    4. 'qu' → logprob: -16.625003814697266
    5. 'ques' → logprob: -17.375003814697266
    6. 'deque' → logprob: -17.500003814697266
    7. '	' → logprob: -18.250003814697266
    8. 'qui' → logprob: -19.000003814697266
    9. '```' → logprob: -19.125003814697266
    10. ' ' → logprob: -19.875003814697266

Token 210: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.750436007976532e-05
    2. '.' → logprob: -10.50003719329834
    3. '.enqueue' → logprob: -12.37503719329834
    4. 'append' → logprob: -13.50003719329834
    5. '.put' → logprob: -13.75003719329834
    6. '.push' → logprob: -14.25003719329834
    7. '.extend' → logprob: -14.25003719329834
    8. ' .' → logprob: -14.62503719329834
    9. '.Append' → logprob: -14.87503719329834
    10. ').' → logprob: -15.25003719329834

Token 211: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.4849443838757e-06
    2. '(' → logprob: -12.500004768371582
    3. '((' → logprob: -14.125004768371582
    4. '(
' → logprob: -18.125003814697266
    5. ' (' → logprob: -18.875003814697266
    6. 'i' → logprob: -19.250003814697266
    7. '(I' → logprob: -21.250003814697266
    8. '[i' → logprob: -21.500003814697266
    9. 'left' → logprob: -21.500003814697266
    10. '```' → logprob: -21.750003814697266

Token 212: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.727905979962088e-05
    2. ')
' → logprob: -10.00004768371582
    3. ' )' → logprob: -13.37504768371582
    4. ')
' → logprob: -16.12504768371582
    5. '))' → logprob: -17.37504768371582
    6. ')

' → logprob: -17.50004768371582
    7. '   ' → logprob: -17.50004768371582
    8. '```' → logprob: -18.37504768371582
    9. ')`' → logprob: -18.37504768371582
    10. '),' → logprob: -18.62504768371582

Token 213: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.35133516788482666
    2. '   ' → logprob: -1.8513351678848267
    3. '	while' → logprob: -2.851335048675537
    4. ' while' → logprob: -2.976335048675537
    5. '
' → logprob: -3.601335048675537
    6. '```' → logprob: -6.476335048675537
    7. '    
' → logprob: -7.226335048675537
    8. '	
' → logprob: -7.601335048675537
    9. ' 
' → logprob: -8.851335525512695
    10. '  
' → logprob: -9.351335525512695

Token 214: ' reachable' (ID: 143580)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0007853295537643135
    2. ' while' → logprob: -7.2507853507995605
    3. '   ' → logprob: -9.500784873962402
    4. '	while' → logprob: -15.000784873962402
    5. 'While' → logprob: -16.00078582763672
    6. '```' → logprob: -16.00078582763672
    7. ' ' → logprob: -20.00078582763672
    8. '  ' → logprob: -20.37578582763672
    9. ' While' → logprob: -20.75078582763672
    10. '``' → logprob: -21.00078582763672

Token 215: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31354087591171265
    2. '=' → logprob: -1.3135409355163574
    3. '=[]' → logprob: -8.6885404586792
    4. '_nodes' → logprob: -10.0635404586792
    5. 's' → logprob: -10.8135404586792
    6. ')' → logprob: -11.8135404586792
    7. '```' → logprob: -12.1885404586792
    8. '.' → logprob: -12.5635404586792
    9. ',' → logprob: -12.8135404586792
    10. '=[]
' → logprob: -13.0635404586792

Token 216: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.019642112776637077
    2. 'set' → logprob: -4.269641876220703
    3. '[' → logprob: -5.269641876220703
    4. '{' → logprob: -8.894641876220703
    5. '[i' → logprob: -9.144641876220703
    6. ' []' → logprob: -10.769641876220703
    7. '[]}' → logprob: -10.769641876220703
    8. '[]
' → logprob: -11.394641876220703
    9. ' set' → logprob: -12.394641876220703
    10. '{}' → logprob: -12.519641876220703

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1737637519836426
    2. '	while' → logprob: -1.1737637519836426
    3. 'while' → logprob: -1.2987637519836426
    4. ' while' → logprob: -2.2987637519836426
    5. '
' → logprob: -5.673763751983643
    6. '    
' → logprob: -6.548763751983643
    7. '	
' → logprob: -6.673763751983643
    8. '' → logprob: -7.673763751983643
    9. ' 
' → logprob: -7.798763751983643
    10. '```' → logprob: -8.423763275146484

Token 218: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.030444754287600517
    2. ' while' → logprob: -3.530444860458374
    3. '   ' → logprob: -7.530444622039795
    4. '	while' → logprob: -8.780445098876953
    5. '```' → logprob: -13.530445098876953
    6. 'While' → logprob: -14.155445098876953
    7. '
' → logprob: -14.405445098876953
    8. ' ' → logprob: -14.530445098876953
    9. '    
' → logprob: -15.655445098876953
    10. '  ' → logprob: -15.905445098876953

Token 219: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.005390868987888098
    2. ' que' → logprob: -5.255390644073486
    3. 'len' → logprob: -8.880391120910645
    4. 'qu' → logprob: -12.005391120910645
    5. ' len' → logprob: -12.005391120910645
    6. 'ques' → logprob: -12.505391120910645
    7. 'deque' → logprob: -14.505391120910645
    8. 'quee' → logprob: -15.505391120910645
    9. 'quer' → logprob: -15.630391120910645
    10. ' ' → logprob: -15.755391120910645

Token 220: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009134583175182343
    2. ':
' → logprob: -4.884134769439697
    3. '):' → logprob: -6.634134769439697
    4. '):
' → logprob: -9.634134292602539
    5. '():' → logprob: -10.259134292602539
    6. '>:' → logprob: -10.509134292602539
    7. '```' → logprob: -10.759134292602539
    8. '.pop' → logprob: -11.259134292602539
    9. '():
' → logprob: -11.384134292602539
    10. '[' → logprob: -12.259134292602539

Token 221: '       ' (ID: 309)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.6944618225097656
    2. 'v' → logprob: -1.0694618225097656
    3. '   ' → logprob: -2.6944618225097656
    4. ' u' → logprob: -3.3194618225097656
    5. 'u' → logprob: -3.4444618225097656
    6. '       ' → logprob: -4.569461822509766
    7. 'node' → logprob: -5.194461822509766
    8. ' node' → logprob: -5.569461822509766
    9. ' x' → logprob: -7.444461822509766
    10. '	v' → logprob: -7.694461822509766

Token 222: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.5798908472061157
    2. 'u' → logprob: -0.8298908472061157
    3. ' u' → logprob: -6.454890727996826
    4. ' v' → logprob: -6.579890727996826
    5. 'node' → logprob: -7.954890727996826
    6. 'x' → logprob: -8.454891204833984
    7. '   ' → logprob: -8.704891204833984
    8. 'cur' → logprob: -8.954891204833984
    9. 'current' → logprob: -9.579891204833984
    10. 'curr' → logprob: -11.079891204833984

Token 223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038190215826034546
    2. '=' → logprob: -3.2881901264190674
    3. ',' → logprob: -8.913189888000488
    4. ')' → logprob: -12.038189888000488
    5. '=v' → logprob: -13.288189888000488
    6. ' ' → logprob: -14.163189888000488
    7. ' ,' → logprob: -14.288189888000488
    8. '.pop' → logprob: -14.288189888000488
    9. '.append' → logprob: -14.538189888000488
    10. '```' → logprob: -14.663189888000488

Token 224: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0022072356659919024
    2. ' que' → logprob: -6.127207279205322
    3. 'qu' → logprob: -10.877206802368164
    4. 'ques' → logprob: -13.752206802368164
    5. 'deque' → logprob: -14.627206802368164
    6. 'quee' → logprob: -14.877206802368164
    7. ' ' → logprob: -15.127206802368164
    8. ' ' → logprob: -15.127206802368164
    9. 'qui' → logprob: -15.627206802368164
    10. 'q' → logprob: -15.627206802368164

Token 225: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.2233183042553719e-05
    2. '.pop' → logprob: -11.500012397766113
    3. '.' → logprob: -13.250012397766113
    4. 'p' → logprob: -16.375011444091797
    5. '   ' → logprob: -16.875011444091797
    6. '=' → logprob: -17.000011444091797
    7. ' .' → logprob: -17.125011444091797
    8. '.append' → logprob: -18.375011444091797
    9. ')p' → logprob: -19.000011444091797
    10. ').' → logprob: -19.000011444091797

Token 226: 'opleft' (ID: 182170)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.16025438904762268
    2. 'opleft' → logprob: -1.9102543592453003
    3. 'ople' → logprob: -11.78525447845459
    4. 'p' → logprob: -11.91025447845459
    5. 'opup' → logprob: -12.28525447845459
    6. 'opl' → logprob: -12.53525447845459
    7. 'o' → logprob: -12.78525447845459
    8. 'oplevel' → logprob: -14.03525447845459
    9. 'opt' → logprob: -14.28525447845459
    10. '```' → logprob: -14.41025447845459

Token 227: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11915851384401321
    2. '()
' → logprob: -2.2441585063934326
    3. ')' → logprob: -5.119158744812012
    4. ')
' → logprob: -8.369158744812012
    5. '()
' → logprob: -9.619158744812012
    6. '
' → logprob: -11.369158744812012
    7. '(' → logprob: -11.869158744812012
    8. '   ' → logprob: -12.244158744812012
    9. '```' → logprob: -12.619158744812012
    10. '()\' → logprob: -13.369158744812012

Token 228: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3965230882167816
    2. ' for' → logprob: -1.521523118019104
    3. '       ' → logprob: -2.7715229988098145
    4. 'for' → logprob: -3.2715229988098145
    5. ' if' → logprob: -5.3965229988098145
    6. 'if' → logprob: -7.0215229988098145
    7. '
' → logprob: -7.0215229988098145
    8. '    ' → logprob: -7.3965229988098145
    9. '    
' → logprob: -7.6465229988098145
    10. ' 
' → logprob: -8.396523475646973

Token 229: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16331793367862701
    2. 'if' (adapté à ' if') → logprob: -1.9133179187774658
    3. ' for' → logprob: -5.913318157196045
    4. ' if' → logprob: -7.913318157196045
    5. '   ' → logprob: -11.163317680358887
    6. 'd' → logprob: -12.788317680358887
    7. '```' → logprob: -13.163317680358887
    8. 'distance' → logprob: -15.163317680358887
    9. 'dist' → logprob: -15.288317680358887
    10. 'depth' → logprob: -16.038318634033203

Token 230: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -4.56102097814437e-05
    2. ' dist' → logprob: -10.000045776367188
    3. 'dp' → logprob: -16.375045776367188
    4. '   ' → logprob: -17.625045776367188
    5. '	dist' → logprob: -18.500045776367188
    6. 'd' → logprob: -20.250045776367188
    7. '(dist' → logprob: -20.250045776367188
    8. 'v' → logprob: -22.125045776367188
    9. '
' → logprob: -22.375045776367188
    10. ' ' → logprob: -22.625045776367188

Token 231: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.1041145626222715e-05
    2. 'v' → logprob: -11.500011444091797
    3. '[' → logprob: -14.000011444091797
    4. '<v' → logprob: -17.375011444091797
    5. ' v' → logprob: -17.625011444091797
    6. '[u' → logprob: -19.375011444091797
    7. '```' → logprob: -19.625011444091797
    8. ' [' → logprob: -19.875011444091797
    9. ')v' → logprob: -20.625011444091797
    10. '(v' → logprob: -20.750011444091797

Token 232: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1530735492706299
    2. ' <' → logprob: -1.7780735492706299
    3. ' <=' → logprob: -1.7780735492706299
    4. '<=' → logprob: -1.9030735492706299
    5. ')' → logprob: -3.02807354927063
    6. '>' → logprob: -3.02807354927063
    7. '<' → logprob: -3.52807354927063
    8. '+' → logprob: -4.278073310852051
    9. ' >' → logprob: -4.528073310852051
    10. '<v' → logprob: -4.653073310852051

Token 233: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5690350532531738
    2. '<' → logprob: -1.0690350532531738
    3. ' <=' → logprob: -3.069035053253174
    4. '<=' → logprob: -3.694035053253174
    5. ' >=' → logprob: -4.819035053253174
    6. '>=' → logprob: -5.319035053253174
    7. ' >' → logprob: -5.944035053253174
    8. '>' → logprob: -6.319035053253174
    9. '+' → logprob: -7.319035053253174
    10. '<v' → logprob: -8.194034576416016

Token 234: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -9.865583706414327e-05
    2. ' R' → logprob: -9.25009822845459
    3. ' ' → logprob: -14.00009822845459
    4. '=' → logprob: -14.37509822845459
    5. '0' → logprob: -14.75009822845459
    6. 'r' → logprob: -14.87509822845459
    7. '   ' → logprob: -16.250099182128906
    8. '	R' → logprob: -16.250099182128906
    9. '<R' → logprob: -17.125099182128906
    10. '
' → logprob: -17.875099182128906

Token 235: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[I' → logprob: -14.000000953674316
    3. '[v' → logprob: -15.125000953674316
    4. '[' → logprob: -16.000001907348633
    5. 'i' → logprob: -18.250001907348633
    6. '```' → logprob: -18.500001907348633
    7. '[u' → logprob: -19.250001907348633
    8. '[
' → logprob: -19.750001907348633
    9. ' [' → logprob: -20.125001907348633
    10. '
' → logprob: -20.750001907348633

Token 236: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5898717641830444
    2. ']:' → logprob: -0.8398717641830444
    3. ']):' → logprob: -5.339871883392334
    4. '[i' → logprob: -5.464871883392334
    5. '):
' → logprob: -6.339871883392334
    6. ']' → logprob: -6.964871883392334
    7. '[v' → logprob: -7.714871883392334
    8. ':' → logprob: -7.964871883392334
    9. ' ):' → logprob: -8.089871406555176
    10. ')' → logprob: -8.339871406555176

Token 237: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7435175776481628
    2. 'continue' → logprob: -0.7435175776481628
    3. ' continue' → logprob: -3.3685176372528076
    4. '   ' → logprob: -4.3685173988342285
    5. '	continue' → logprob: -6.4935173988342285
    6. '           ' → logprob: -7.8685173988342285
    7. '_continue' → logprob: -9.493517875671387
    8. '	   ' → logprob: -11.868517875671387
    9. 'contin' → logprob: -11.993517875671387
    10. 'Continue' → logprob: -11.993517875671387

Token 238: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.014255768619477749
    2. ' continue' → logprob: -4.514256000518799
    3. '   ' → logprob: -5.764256000518799
    4. '       ' → logprob: -10.01425552368164
    5. '	continue' → logprob: -11.01425552368164
    6. '           ' → logprob: -13.01425552368164
    7. 'contin' → logprob: -14.13925552368164
    8. '```' → logprob: -14.88925552368164
    9. '_continue' → logprob: -15.38925552368164
    10. ' ' → logprob: -15.76425552368164

Token 239: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2879595160484314
    2. '       ' → logprob: -1.4129595756530762
    3. 'for' → logprob: -5.662959575653076
    4. ' for' → logprob: -5.912959575653076
    5. '
' → logprob: -8.037959098815918
    6. '        
' → logprob: -9.412959098815918
    7. '    
' → logprob: -9.412959098815918
    8. ',' → logprob: -10.037959098815918
    9. '<|end|>' → logprob: -11.037959098815918
    10. '	for' → logprob: -11.287959098815918

Token 240: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03795977681875229
    2. 'for' → logprob: -3.5379598140716553
    3. '       ' → logprob: -5.287959575653076
    4. ' for' → logprob: -5.787959575653076
    5. '    
' → logprob: -10.787960052490234
    6. '	for' → logprob: -11.037960052490234
    7. '
' → logprob: -11.537960052490234
    8. '        
' → logprob: -12.037960052490234
    9. '   ' → logprob: -12.662960052490234
    10. '    ' → logprob: -14.537960052490234

Token 241: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00137404166162014
    2. ' for' → logprob: -6.751374244689941
    3. '   ' → logprob: -8.501374244689941
    4. '	for' → logprob: -14.501374244689941
    5. '       ' → logprob: -16.501373291015625
    6. '    
' → logprob: -17.251373291015625
    7. '```' → logprob: -18.251373291015625
    8. ' ' → logprob: -18.626373291015625
    9. '        
' → logprob: -20.001373291015625
    10. '
' → logprob: -20.126373291015625

Token 242: ' nv' (ID: 68641)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -1.0244219303131104
    2. 'u' → logprob: -1.2744219303131104
    3. 'w' → logprob: -1.2744219303131104
    4. 'nx' → logprob: -2.5244219303131104
    5. 'n' → logprob: -7.274421691894531
    6. 'to' → logprob: -7.274421691894531
    7. 'e' → logprob: -9.149421691894531
    8. ' nxt' → logprob: -9.774421691894531
    9. 'x' → logprob: -9.899421691894531
    10. ' nv' → logprob: -10.024421691894531

Token 243: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6326401829719543
    2. ' in' → logprob: -0.7576401829719543
    3. '	in' → logprob: -10.38263988494873
    4. ' ' → logprob: -12.63263988494873
    5. ',' → logprob: -13.75763988494873
    6. 'In' → logprob: -13.88263988494873
    7. 'n' → logprob: -14.25763988494873
    8. ',in' → logprob: -14.50763988494873
    9. '_in' → logprob: -14.63263988494873
    10. ')' → logprob: -14.63263988494873

Token 244: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0004309076175559312
    2. ' graph' → logprob: -7.750431060791016
    3. '	graph' → logprob: -16.000431060791016
    4. '(graph' → logprob: -16.625431060791016
    5. 'graphql' → logprob: -20.500431060791016
    6. '   ' → logprob: -20.750431060791016
    7. '_graph' → logprob: -21.250431060791016
    8. 'Graph' → logprob: -21.750431060791016
    9. 'range' → logprob: -22.125431060791016
    10. 'raph' → logprob: -22.250431060791016

Token 245: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.128163257315464e-07
    2. 'v' → logprob: -15.375
    3. '[' → logprob: -17.5
    4. ' [' → logprob: -21.0
    5. '```' → logprob: -21.625
    6. '<v' → logprob: -21.75
    7. '
' → logprob: -21.75
    8. '[
' → logprob: -21.875
    9. '	v' → logprob: -22.0
    10. '[i' → logprob: -22.125

Token 246: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0005444537382572889
    2. ']:
' → logprob: -7.750544548034668
    3. ']' → logprob: -9.750544548034668
    4. '):' → logprob: -10.875544548034668
    5. ':' → logprob: -10.875544548034668
    6. ']:
' → logprob: -11.500544548034668
    7. '}:' → logprob: -13.125544548034668
    8. '>:' → logprob: -13.375544548034668
    9. ']):' → logprob: -13.500544548034668
    10. '']:' → logprob: -14.625544548034668

Token 247: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01065537054091692
    2. '       ' → logprob: -4.885655403137207
    3. 'if' → logprob: -6.885655403137207
    4. '	       ' → logprob: -7.385655403137207
    5. ' if' → logprob: -7.385655403137207
    6. '```' → logprob: -7.635655403137207
    7. '<|end|>' → logprob: -9.010655403137207
    8. '        
' → logprob: -10.010655403137207
    9. '               ' → logprob: -10.760655403137207
    10. '        ' → logprob: -10.885655403137207

Token 248: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16251248121261597
    2. '               ' → logprob: -2.1625125408172607
    3. 'if' (adapté à ' if') → logprob: -3.4125125408172607
    4. '           ' → logprob: -6.912512302398682
    5. '	if' → logprob: -8.16251277923584
    6. '	           ' → logprob: -8.28751277923584
    7. '            ' → logprob: -9.03751277923584
    8. ' ' → logprob: -9.28751277923584
    9. '	       ' → logprob: -10.16251277923584
    10. '       ' → logprob: -10.28751277923584

Token 249: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.12692968547344208
    2. ' dist' → logprob: -2.126929759979248
    3. '(dist' → logprob: -13.87692928314209
    4. '	dist' → logprob: -14.50192928314209
    5. '_dist' → logprob: -16.751930236816406
    6. '.dist' → logprob: -18.001930236816406
    7. 'Dist' → logprob: -18.126930236816406
    8. ' ' → logprob: -19.251930236816406
    9. '   ' → logprob: -19.376930236816406
    10. '-dist' → logprob: -20.126930236816406

Token 250: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -9.491498531133402e-06
    2. 'nv' → logprob: -12.250009536743164
    3. '[v' → logprob: -13.000009536743164
    4. '[' → logprob: -13.625009536743164
    5. ' [' → logprob: -14.625009536743164
    6. ' nv' → logprob: -15.500009536743164
    7. '[
' → logprob: -16.000009536743164
    8. '```' → logprob: -16.125009536743164
    9. '_nv' → logprob: -17.375009536743164
    10. '[[' → logprob: -17.750009536743164

Token 251: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.531315314830863e-06
    2. '[v' → logprob: -12.625003814697266
    3. '[n' → logprob: -16.375003814697266
    4. '[' → logprob: -18.000003814697266
    5. ']' → logprob: -19.625003814697266
    6. '```' → logprob: -20.375003814697266
    7. 'в' → logprob: -21.125003814697266
    8. 'w' → logprob: -21.500003814697266
    9. 'nv' → logprob: -21.500003814697266
    10. 'V' → logprob: -22.375003814697266

Token 252: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2896327078342438
    2. ' ==' → logprob: -1.6646326780319214
    3. '==-' → logprob: -2.914632797241211
    4. ']==' → logprob: -5.539632797241211
    5. ')' → logprob: -6.164632797241211
    6. ']' → logprob: -6.539632797241211
    7. '<' → logprob: -8.164632797241211
    8. ')==' → logprob: -9.039632797241211
    9. '==
' → logprob: -10.289632797241211
    10. '=' → logprob: -10.664632797241211

Token 253: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5459870100021362
    2. '==' → logprob: -1.0459870100021362
    3. '==-' → logprob: -2.670987129211426
    4. '<' → logprob: -9.795987129211426
    5. ']==' → logprob: -10.295987129211426
    6. '[' → logprob: -10.795987129211426
    7. '===' → logprob: -10.920987129211426
    8. '==
' → logprob: -10.920987129211426
    9. ')==' → logprob: -10.920987129211426
    10. '=' → logprob: -11.170987129211426

Token 254: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002613358374219388
    2. ' -' → logprob: -8.250261306762695
    3. ' ' → logprob: -19.750261306762695
    4. '−' → logprob: -20.250261306762695
    5. '   ' → logprob: -20.375261306762695
    6. '‌' → logprob: -20.625261306762695
    7. '```' → logprob: -20.625261306762695
    8. '<|end|>' → logprob: -20.625261306762695
    9. '	' → logprob: -21.250261306762695
    10. '-answer' → logprob: -21.875261306762695

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -17.75
    4. '

' → logprob: -18.75
    5. '
' → logprob: -19.0625
    6. '１' → logprob: -19.6875
    7. '<|end|>' → logprob: -19.75
    8. '১' → logprob: -20.375
    9. ')' → logprob: -20.375
    10. '۱' → logprob: -20.375

Token 256: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6135066151618958
    2. ':
' → logprob: -0.8635066151618958
    3. '               ' → logprob: -3.613506555557251
    4. '<|end|>' → logprob: -5.73850679397583
    5. '):
' → logprob: -6.11350679397583
    6. ')' → logprob: -6.73850679397583
    7. '           ' → logprob: -7.36350679397583
    8. ',' → logprob: -7.73850679397583
    9. ' and' → logprob: -7.73850679397583
    10. ' :
' → logprob: -8.238506317138672

Token 257: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0024219141341745853
    2. ' dist' → logprob: -6.252421855926514
    3. '```' → logprob: -9.002422332763672
    4. 'dist' → logprob: -9.377422332763672
    5. '<|end|>' → logprob: -9.627422332763672
    6. ' ' → logprob: -9.627422332763672
    7. '	           ' → logprob: -9.877422332763672
    8. '	dist' → logprob: -10.877422332763672
    9. '           ' → logprob: -11.377422332763672
    10. '                
' → logprob: -11.627422332763672

Token 258: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.20142795145511627
    2. 'dist' (adapté à ' dist') → logprob: -1.701427936553955
    3. '               ' → logprob: -12.201428413391113
    4. '	dist' → logprob: -12.326428413391113
    5. '                   ' → logprob: -12.576428413391113
    6. '_dist' → logprob: -14.201428413391113
    7. '.dist' → logprob: -15.076428413391113
    8. '(dist' → logprob: -15.326428413391113
    9. '```' → logprob: -15.326428413391113
    10. '                       ' → logprob: -15.826428413391113

Token 259: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -7.231182826217264e-05
    2. '[v' → logprob: -10.000072479248047
    3. '[' → logprob: -11.375072479248047
    4. 'nv' → logprob: -11.500072479248047
    5. ' [' → logprob: -13.625072479248047
    6. '```' → logprob: -13.625072479248047
    7. 'v' → logprob: -13.875072479248047
    8. ' nv' → logprob: -14.250072479248047
    9. '_nv' → logprob: -15.875072479248047
    10. '\[' → logprob: -16.125072479248047

Token 260: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0003309361054562032
    2. ' nv' → logprob: -8.625330924987793
    3. 'nv' → logprob: -9.625330924987793
    4. 'w' → logprob: -10.875330924987793
    5. '[n' → logprob: -11.250330924987793
    6. '                   ' → logprob: -11.500330924987793
    7. '```' → logprob: -12.000330924987793
    8. '               ' → logprob: -12.250330924987793
    9. '
' → logprob: -12.250330924987793
    10. '_nv' → logprob: -13.000330924987793

Token 261: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0055625480599701405
    2. '=' → logprob: -6.130562782287598
    3. ' =' → logprob: -6.130562782287598
    4. ']=' → logprob: -7.380562782287598
    5. ')' → logprob: -7.505562782287598
    6. ' ]' → logprob: -11.505562782287598
    7. '=v' → logprob: -12.630562782287598
    8. '[' → logprob: -13.255562782287598
    9. '[v' → logprob: -13.255562782287598
    10. 'v' → logprob: -13.380562782287598

Token 262: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014143168926239
    2. ' =' → logprob: -1.7014143466949463
    3. '=v' → logprob: -14.326414108276367
    4. '＝' → logprob: -15.826414108276367
    5. ')' → logprob: -15.951414108276367
    6. '=
' → logprob: -16.326414108276367
    7. ']' → logprob: -17.201414108276367
    8. ')=' → logprob: -17.826414108276367
    9. ']=' → logprob: -17.826414108276367
    10. '=int' → logprob: -17.951414108276367

Token 263: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0019287518225610256
    2. ' dist' → logprob: -6.251928806304932
    3. '	dist' → logprob: -16.251928329467773
    4. '(dist' → logprob: -19.126928329467773
    5. 'd' → logprob: -19.376928329467773
    6. '   ' → logprob: -19.376928329467773
    7. '                   ' → logprob: -20.501928329467773
    8. 'Dist' → logprob: -20.751928329467773
    9. '               ' → logprob: -20.751928329467773
    10. '_dist' → logprob: -21.001928329467773

Token 264: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.676292231422849e-05
    2. 'v' → logprob: -11.000017166137695
    3. '[' → logprob: -17.750017166137695
    4. ' v' → logprob: -18.875017166137695
    5. '<v' → logprob: -19.125017166137695
    6. '	v' → logprob: -19.250017166137695
    7. '```' → logprob: -19.250017166137695
    8. ')v' → logprob: -20.875017166137695
    9. '(v' → logprob: -21.500017166137695
    10. '[
' → logprob: -22.500017166137695

Token 265: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016338979825377464
    2. ' +' → logprob: -4.39133882522583
    3. ']+' → logprob: -5.64133882522583
    4. ']' → logprob: -8.266339302062988
    5. '[' → logprob: -11.641339302062988
    6. '}+' → logprob: -13.016339302062988
    7. '```' → logprob: -13.266339302062988
    8. ')+' → logprob: -13.766339302062988
    9. ' plus' → logprob: -14.016339302062988
    10. '1' → logprob: -14.766339302062988

Token 266: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0031796174589544535
    2. ' +' → logprob: -5.753179550170898
    3. '1' → logprob: -13.628179550170898
    4. '＋' → logprob: -15.503179550170898
    5. '+
' → logprob: -15.503179550170898
    6. '+[' → logprob: -16.5031795501709
    7. '```' → logprob: -16.6281795501709
    8. '0' → logprob: -16.8781795501709
    9. '()+' → logprob: -17.1281795501709
    10. ' plus' → logprob: -18.1281795501709

Token 267: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -20.125001907348633
    4. '<|end|>' → logprob: -20.500001907348633
    5. '
' → logprob: -21.375001907348633
    6. '   ' → logprob: -21.625001907348633
    7. '１' → logprob: -22.875001907348633
    8. '۱' → logprob: -23.625001907348633
    9. ' ' → logprob: -23.750001907348633
    10. ')' → logprob: -23.812501907348633

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -18.625001907348633
    4. '   ' → logprob: -19.375001907348633
    5. '<|end|>' → logprob: -19.750001907348633
    6. '
' → logprob: -21.000001907348633
    7. '=' → logprob: -21.312501907348633
    8. '１' → logprob: -21.625001907348633
    9. '۱' → logprob: -21.875001907348633
    10. '  ' → logprob: -22.375001907348633

Token 269: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001435589394532144
    2. '<|end|>' → logprob: -7.25143575668335
    3. ',' → logprob: -8.876435279846191
    4. '                
' → logprob: -9.126435279846191
    5. '			' → logprob: -9.126435279846191
    6. '
' → logprob: -9.126435279846191
    7. '```' → logprob: -9.501435279846191
    8. '                   ' → logprob: -9.876435279846191
    9. '              ' → logprob: -10.251435279846191
    10. '                ' → logprob: -10.876435279846191

Token 270: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004299540014471859
    2. ' que' → logprob: -9.3754301071167
    3. '```' → logprob: -9.3754301071167
    4. ',' → logprob: -9.8754301071167
    5. '			' → logprob: -10.0004301071167
    6. '                
' → logprob: -10.1254301071167
    7. '                ' → logprob: -10.1254301071167
    8. '              ' → logprob: -10.5004301071167
    9. '                   ' → logprob: -10.8754301071167
    10. 'que' → logprob: -11.2504301071167

Token 271: ' que' (ID: 661)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.28269341588020325
    2. 'que' (adapté à ' que') → logprob: -1.4076933860778809
    3. 'if' → logprob: -7.657693386077881
    4. 'queue' → logprob: -7.657693386077881
    5. '   ' → logprob: -8.532693862915039
    6. 'deque' → logprob: -9.282693862915039
    7. ' reachable' → logprob: -9.532693862915039
    8. 'queued' → logprob: -9.532693862915039
    9. '```' → logprob: -9.782693862915039
    10. ' que' → logprob: -10.282693862915039

Token 272: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.842555426876061e-06
    2. 'append' → logprob: -12.625004768371582
    3. '.' → logprob: -13.625004768371582
    4. '.p' → logprob: -16.6250057220459
    5. '.extend' → logprob: -16.8750057220459
    6. '.Append' → logprob: -17.0000057220459
    7. '```' → logprob: -17.3750057220459
    8. '.app' → logprob: -17.5000057220459
    9. '.enqueue' → logprob: -18.0000057220459
    10. ' .' → logprob: -18.0000057220459

Token 273: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.723973582556937e-05
    2. '(' → logprob: -11.000017166137695
    3. '(nx' → logprob: -15.500017166137695
    4. 'n' → logprob: -16.125017166137695
    5. '(
' → logprob: -16.875017166137695
    6. 'nv' → logprob: -17.250017166137695
    7. '(nd' → logprob: -17.750017166137695
    8. ' (' → logprob: -17.875017166137695
    9. '(nn' → logprob: -18.125017166137695
    10. '(nb' → logprob: -18.750017166137695

Token 274: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.3856492842023727e-06
    2. 'nv' → logprob: -14.000000953674316
    3. 'w' → logprob: -15.125000953674316
    4. '```' → logprob: -16.875001907348633
    5. 'av' → logprob: -17.000001907348633
    6. 'в' → logprob: -17.125001907348633
    7. '[v' → logprob: -17.375001907348633
    8. ' nv' → logprob: -17.875001907348633
    9. '_nv' → logprob: -18.000001907348633
    10. '
' → logprob: -18.250001907348633

Token 275: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.491498531133402e-06
    2. ')
' → logprob: -11.875009536743164
    3. '               ' → logprob: -13.125009536743164
    4. ' )' → logprob: -15.875009536743164
    5. '           ' → logprob: -16.750009536743164
    6. '                   ' → logprob: -16.875009536743164
    7. '）' → logprob: -17.000009536743164
    8. ')n' → logprob: -17.125009536743164
    9. '),' → logprob: -17.500009536743164
    10. '       ' → logprob: -17.500009536743164

Token 276: '   ' (ID: 271)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0035812994465231895
    2. ',' → logprob: -6.878581523895264
    3. '                ' → logprob: -7.253581523895264
    4. '   ' → logprob: -7.753581523895264
    5. '                   ' → logprob: -7.878581523895264
    6. 'for' → logprob: -8.378581047058105
    7. '```' → logprob: -8.503581047058105
    8. '                
' → logprob: -8.628581047058105
    9. ' for' → logprob: -9.128581047058105
    10. 'reachable' → logprob: -9.503581047058105

Token 277: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3850441575050354
    2. '   ' → logprob: -1.3850440979003906
    3. ' for' → logprob: -3.0100440979003906
    4. '               ' → logprob: -4.385044097900391
    5. 'reachable' → logprob: -5.135044097900391
    6. '       ' → logprob: -7.510044097900391
    7. '           ' → logprob: -8.38504409790039
    8. ' ' → logprob: -9.13504409790039
    9. '```' → logprob: -9.13504409790039
    10. ' reachable' → logprob: -9.38504409790039

Token 278: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6372707486152649
    2. '   ' → logprob: -1.0122706890106201
    3. ' for' → logprob: -3.01227068901062
    4. 'reachable' → logprob: -3.01227068901062
    5. ' reachable' → logprob: -5.012270927429199
    6. '#' → logprob: -6.762270927429199
    7. '       ' → logprob: -7.762270927429199
    8. '  ' → logprob: -8.7622709274292
    9. ' ' → logprob: -8.8872709274292
    10. 'reach' → logprob: -9.1372709274292

Token 279: ' all' (ID: 722)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nv' → logprob: -1.0053106546401978
    2. 'v' → logprob: -1.2553106546401978
    3. 'j' → logprob: -1.3803106546401978
    4. ' v' → logprob: -3.255310535430908
    5. ' nv' → logprob: -3.505310535430908
    6. ' j' → logprob: -4.005310535430908
    7. 'reachable' → logprob: -5.755310535430908
    8. ' reachable' → logprob: -6.505310535430908
    9. 'x' → logprob: -6.880310535430908
    10. 'w' → logprob: -7.005310535430908

Token 280: ' reachable' (ID: 143580)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.24223899841308594
    2. 'v' → logprob: -2.242238998413086
    3. ' j' → logprob: -2.367238998413086
    4. ' v' → logprob: -4.242238998413086
    5. 'reachable' → logprob: -8.742238998413086
    6. ' range' → logprob: -8.992238998413086
    7. 'range' → logprob: -8.992238998413086
    8. ' reachable' → logprob: -9.367238998413086
    9. 'nv' → logprob: -9.867238998413086
    10. 'u' → logprob: -9.992238998413086

Token 281: ' towns' (ID: 39847)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.32900428771972656
    2. 'j' → logprob: -1.5790042877197266
    3. ' v' → logprob: -3.9540042877197266
    4. 'nodes' → logprob: -3.9540042877197266
    5. ' in' → logprob: -4.079004287719727
    6. ' towns' → logprob: -4.954004287719727
    7. ' j' → logprob: -5.454004287719727
    8. 'town' → logprob: -6.079004287719727
    9. 'in' → logprob: -6.204004287719727
    10. ' nodes' → logprob: -6.579004287719727

Token 282: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01628069020807743
    2. ',' → logprob: -4.641280651092529
    3. ':' → logprob: -5.391280651092529
    4. '<|end|>' → logprob: -7.141280651092529
    5. ' for' → logprob: -7.891280651092529
    6. '       ' → logprob: -8.016281127929688
    7. '[' → logprob: -9.516281127929688
    8. 'for' → logprob: -9.516281127929688
    9. '[i' → logprob: -9.766281127929688
    10. '    ' → logprob: -10.266281127929688

Token 283: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10250221192836761
    2. ' i' → logprob: -2.9775021076202393
    3. '1' → logprob: -3.7275021076202393
    4. 'range' → logprob: -4.102502346038818
    5. ' range' → logprob: -5.477502346038818
    6. ' ' → logprob: -6.852502346038818
    7. 'v' → logprob: -8.47750186920166
    8. 'reachable' → logprob: -8.85250186920166
    9. '0' → logprob: -9.35250186920166
    10. '[i' → logprob: -9.85250186920166

Token 284: ' within' (ID: 3518)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7573156356811523
    2. '   ' → logprob: -1.1323156356811523
    3. ':' → logprob: -2.0073156356811523
    4. ':
' → logprob: -3.1323156356811523
    5. ' for' → logprob: -4.007315635681152
    6. 'for' → logprob: -5.507315635681152
    7. '
' → logprob: -5.757315635681152
    8. ' ,' → logprob: -6.882315635681152
    9. '       ' → logprob: -7.007315635681152
    10. ',
' → logprob: -7.132315635681152

Token 285: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.4241752326488495
    2. ' R' → logprob: -1.9241752624511719
    3. ' range' → logprob: -2.174175262451172
    4. 'range' → logprob: -2.549175262451172
    5. 'dist' → logprob: -5.299175262451172
    6. ' dist' → logprob: -6.799175262451172
    7. '   ' → logprob: -6.799175262451172
    8. ' ' → logprob: -8.924175262451172
    9. '[R' → logprob: -9.174175262451172
    10. 'r' → logprob: -9.799175262451172

Token 286: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.13388703338569e-06
    2. 'i' → logprob: -13.125009536743164
    3. '[' → logprob: -13.250009536743164
    4. '   ' → logprob: -13.375009536743164
    5. '```' → logprob: -13.500009536743164
    6. '(i' → logprob: -14.625009536743164
    7. '`' → logprob: -14.875009536743164
    8. 'range' → logprob: -14.875009536743164
    9. '+' → logprob: -15.250009536743164
    10. '
' → logprob: -15.375009536743164

Token 287: ']' (ID: 60)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -1.1388574838638306
    2. '):' → logprob: -1.7638574838638306
    3. ':' → logprob: -2.013857364654541
    4. '):
' → logprob: -2.013857364654541
    5. ']:
' → logprob: -2.388857364654541
    6. '],' → logprob: -3.013857364654541
    7. ':
' → logprob: -3.263857364654541
    8. '   ' → logprob: -3.388857364654541
    9. ']' → logprob: -4.263857364654541
    10. ',' → logprob: -5.388857364654541

Token 288: ' edges' (ID: 22569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009238526225090027
    2. ' for' → logprob: -5.7592387199401855
    3. 'for' → logprob: -5.8842387199401855
    4. ',' → logprob: -5.8842387199401855
    5. ':' → logprob: -8.509238243103027
    6. '       ' → logprob: -9.884238243103027
    7. '[' → logprob: -10.384238243103027
    8. '    
' → logprob: -10.509238243103027
    9. ':
' → logprob: -10.509238243103027
    10. '  ' → logprob: -10.759238243103027

Token 289: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000799384550191462
    2. '<|end|>' → logprob: -8.500799179077148
    3. ' for' → logprob: -8.625799179077148
    4. ',' → logprob: -8.625799179077148
    5. '
' → logprob: -9.625799179077148
    6. 'for' → logprob: -9.750799179077148
    7. '    
' → logprob: -9.750799179077148
    8. '       ' → logprob: -10.750799179077148
    9. '<|end|>' → logprob: -11.875799179077148
    10. '    ' → logprob: -12.000799179077148

Token 290: ' update' (ID: 4027)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6973371505737305
    2. 'for' → logprob: -1.3223371505737305
    3. '   ' → logprob: -1.4473371505737305
    4. '       ' → logprob: -8.32233715057373
    5. '	for' → logprob: -9.57233715057373
    6. ' if' → logprob: -10.94733715057373
    7. '    ' → logprob: -11.44733715057373
    8. 'if' → logprob: -11.69733715057373
    9. '```' → logprob: -11.94733715057373
    10. ' ' → logprob: -12.07233715057373

Token 291: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5099838972091675
    2. 'dp' → logprob: -1.1349838972091675
    3. ' for' → logprob: -2.884984016418457
    4. ' dp' → logprob: -4.009984016418457
    5. '   ' → logprob: -5.634984016418457
    6. 'if' → logprob: -8.009984016418457
    7. 'cost' → logprob: -10.134984016418457
    8. ' if' → logprob: -10.259984016418457
    9. '       ' → logprob: -11.134984016418457
    10. '(dp' → logprob: -11.134984016418457

Token 292: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012638057814911008
    2. ' for' → logprob: -7.751263618469238
    3. 'for' → logprob: -8.001263618469238
    4. '
' → logprob: -8.376263618469238
    5. '    
' → logprob: -9.001263618469238
    6. '	for' → logprob: -9.626263618469238
    7. '       ' → logprob: -10.126263618469238
    8. '    ' → logprob: -12.251263618469238
    9. '<|end|>' → logprob: -12.251263618469238
    10. '[' → logprob: -12.376263618469238

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007322167046368122
    2. 'for' → logprob: -5.632322311401367
    3. ' for' → logprob: -5.632322311401367
    4. '       ' → logprob: -9.132322311401367
    5. '	for' → logprob: -11.257322311401367
    6. ',' → logprob: -13.007322311401367
    7. '
' → logprob: -13.132322311401367
    8. '    
' → logprob: -13.382322311401367
    9. '    ' → logprob: -13.757322311401367
    10. '           ' → logprob: -14.007322311401367

Token 294: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2084757536649704
    2. '   ' → logprob: -1.7084757089614868
    3. ' for' → logprob: -4.958475589752197
    4. '	for' → logprob: -12.333476066589355
    5. '
' → logprob: -12.583476066589355
    6. '    
' → logprob: -13.208476066589355
    7. '       ' → logprob: -13.708476066589355
    8. '  ' → logprob: -13.833476066589355
    9. '```' → logprob: -14.208476066589355
    10. ' ' → logprob: -14.333476066589355

Token 295: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05233157053589821
    2. 'v' → logprob: -3.3023316860198975
    3. 'nv' → logprob: -4.302331447601318
    4. ' j' → logprob: -8.302331924438477
    5. 'nj' → logprob: -9.427331924438477
    6. 'to' → logprob: -9.677331924438477
    7. 'u' → logprob: -10.177331924438477
    8. 'town' → logprob: -10.302331924438477
    9. 'x' → logprob: -10.427331924438477
    10. 'reachable' → logprob: -10.677331924438477

Token 296: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1798156201839447
    2. 'in' → logprob: -1.804815649986267
    3. ' ' → logprob: -9.929815292358398
    4. ',' → logprob: -11.679815292358398
    5. '   ' → logprob: -12.429815292358398
    6. '	in' → logprob: -13.179815292358398
    7. 'range' → logprob: -13.304815292358398
    8. '  ' → logprob: -13.554815292358398
    9. '```' → logprob: -14.054815292358398
    10. ')' → logprob: -14.179815292358398

Token 297: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00043162284418940544
    2. ' range' → logprob: -7.750431537628174
    3. '(range' → logprob: -14.000432014465332
    4. '[' → logprob: -17.125431060791016
    5. 'reachable' → logprob: -17.250431060791016
    6. 'i' → logprob: -18.000431060791016
    7. '	range' → logprob: -18.250431060791016
    8. '```' → logprob: -18.250431060791016
    9. 'r' → logprob: -18.375431060791016
    10. ' ' → logprob: -18.375431060791016

Token 298: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.961759259458631e-06
    2. '(N' → logprob: -12.875004768371582
    3. '1' → logprob: -13.000004768371582
    4. '(
' → logprob: -19.6250057220459
    5. '(len' → logprob: -19.6250057220459
    6. ' (' → logprob: -19.7500057220459
    7. '(i' → logprob: -20.1250057220459
    8. '   ' → logprob: -20.5000057220459
    9. ' ' → logprob: -20.7500057220459
    10. '(n' → logprob: -20.8750057220459

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. 'N' → logprob: -12.375006675720215
    3. ' ' → logprob: -13.125006675720215
    4. 'i' → logprob: -15.125006675720215
    5. '   ' → logprob: -15.250006675720215
    6. '0' → logprob: -16.50000762939453
    7. '(' → logprob: -16.62500762939453
    8. '2' → logprob: -17.00000762939453
    9. '(N' → logprob: -17.37500762939453
    10. '
' → logprob: -17.50000762939453

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024037064576987177
    2. ' ,' → logprob: -8.500240325927734
    3. ',N' → logprob: -10.375240325927734
    4. '1' → logprob: -12.375240325927734
    5. '   ' → logprob: -14.875240325927734
    6. ',i' → logprob: -15.250240325927734
    7. '(N' → logprob: -15.500240325927734
    8. '(' → logprob: -15.750240325927734
    9. '+' → logprob: -15.750240325927734
    10. '+,' → logprob: -16.125240325927734

Token 301: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.6087021473795176e-05
    2. ' N' → logprob: -10.000045776367188
    3. '   ' → logprob: -14.250045776367188
    4. '(N' → logprob: -18.000045776367188
    5. '	N' → logprob: -18.375045776367188
    6. ' ' → logprob: -19.000045776367188
    7. '```' → logprob: -20.250045776367188
    8. '
' → logprob: -21.000045776367188
    9. ',N' → logprob: -21.250045776367188
    10. '  ' → logprob: -21.375045776367188

Token 302: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1756367712223437e-05
    2. '+i' → logprob: -12.125011444091797
    3. ' +' → logprob: -12.250011444091797
    4. '+
' → logprob: -14.375011444091797
    5. ')+' → logprob: -14.750011444091797
    6. '```' → logprob: -15.125011444091797
    7. '+j' → logprob: -15.875011444091797
    8. '1' → logprob: -16.750011444091797
    9. '()+' → logprob: -16.750011444091797
    10. '
' → logprob: -17.000011444091797

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6602523922920227
    2. 'N' → logprob: -1.160252332687378
    3. 'i' → logprob: -2.035252332687378
    4. '+' → logprob: -3.285252332687378
    5. '(N' → logprob: -7.035252571105957
    6. ' N' → logprob: -7.785252571105957
    7. '```' → logprob: -8.910252571105957
    8. '   ' → logprob: -8.910252571105957
    9. ' ' → logprob: -9.910252571105957
    10. ')' → logprob: -10.285252571105957

Token 304: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.029772823676466942
    2. '):' → logprob: -3.5297727584838867
    3. '):
' → logprob: -11.654772758483887
    4. ':' → logprob: -12.404772758483887
    5. ':
' → logprob: -12.404772758483887
    6. ')' → logprob: -13.529772758483887
    7. '   ' → logprob: -13.529772758483887
    8. '():
' → logprob: -13.904772758483887
    9. ' ):
' → logprob: -14.029772758483887
    10. '):

' → logprob: -14.279772758483887

Token 305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05020332336425781
    2. ':' → logprob: -3.800203323364258
    3. '<|end|>' → logprob: -4.300203323364258
    4. '   ' → logprob: -5.050203323364258
    5. ' if' → logprob: -5.550203323364258
    6. ' ' → logprob: -6.925203323364258
    7. ':
' → logprob: -8.300203323364258
    8. ',' → logprob: -8.300203323364258
    9. '    ' → logprob: -8.300203323364258
    10. '[' → logprob: -8.675203323364258

Token 306: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01816539652645588
    2. ' if' → logprob: -4.268165588378906
    3. 'if' (adapté à ' if') → logprob: -5.643165588378906
    4. '           ' → logprob: -7.768165588378906
    5. '   ' → logprob: -11.643165588378906
    6. ',' → logprob: -12.393165588378906
    7. '	if' → logprob: -12.768165588378906
    8. ' ' → logprob: -13.018165588378906
    9. '```' → logprob: -13.268165588378906
    10. ' ' → logprob: -13.393165588378906

Token 307: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04640087112784386
    2. ' dist' → logprob: -3.421400785446167
    3. 'dp' → logprob: -4.421401023864746
    4. ' dp' → logprob: -7.921401023864746
    5. '0' → logprob: -8.421401023864746
    6. '   ' → logprob: -10.421401023864746
    7. ' ' → logprob: -11.296401023864746
    8. 'C' → logprob: -11.921401023864746
    9. 'j' → logprob: -12.296401023864746
    10. 'i' → logprob: -12.546401023864746

Token 308: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00011367550177965313
    2. 'j' → logprob: -9.125113487243652
    3. '[' → logprob: -13.500113487243652
    4. '
' → logprob: -13.875113487243652
    5. '[n' → logprob: -14.000113487243652
    6. '```' → logprob: -14.875113487243652
    7. '[
' → logprob: -15.125113487243652
    8. ' [' → logprob: -15.125113487243652
    9. '[i' → logprob: -15.375113487243652
    10. '[v' → logprob: -16.37511444091797

Token 309: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.04760372266173363
    2. '!=-' → logprob: -3.2976036071777344
    3. ' !=' → logprob: -4.672603607177734
    4. '>=' → logprob: -10.047603607177734
    5. ']!=' → logprob: -10.172603607177734
    6. ')!=' → logprob: -10.172603607177734
    7. '<=' → logprob: -10.672603607177734
    8. '()!=' → logprob: -11.297603607177734
    9. '!==' → logprob: -12.297603607177734
    10. '```' → logprob: -12.422603607177734

Token 310: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.009683020412921906
    2. ' !=' → logprob: -5.134683132171631
    3. '!=-' → logprob: -5.634683132171631
    4. '<=' → logprob: -9.384682655334473
    5. '>=' → logprob: -9.384682655334473
    6. '```' → logprob: -13.009682655334473
    7. '()!=' → logprob: -13.384682655334473
    8. '==' → logprob: -13.509682655334473
    9. '!==' → logprob: -14.384682655334473
    10. ']!=' → logprob: -14.384682655334473

Token 311: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.615255839889869e-05
    2. ' -' → logprob: -9.250096321105957
    3. ' ' → logprob: -18.37509536743164
    4. '   ' → logprob: -18.75009536743164
    5. '−' → logprob: -20.62509536743164
    6. '```' → logprob: -20.75009536743164
    7. '	' → logprob: -21.75009536743164
    8. '0' → logprob: -21.87509536743164
    9. '-​' → logprob: -22.00009536743164
    10. '
' → logprob: -22.12509536743164

Token 312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004090035799890757
    2. '-' → logprob: -5.504089832305908
    3. ' -' → logprob: -11.379090309143066
    4. ' ' → logprob: -15.379090309143066
    5. '```' → logprob: -17.75408935546875
    6. '   ' → logprob: -18.56658935546875
    7. '2' → logprob: -18.62908935546875
    8. '=-' → logprob: -19.62908935546875
    9. '=' → logprob: -19.81658935546875
    10. '  ' → logprob: -20.19158935546875

Token 313: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6939095854759216
    2. 'and' → logprob: -0.6939095854759216
    3. ':' → logprob: -7.193909645080566
    4. ' ' → logprob: -12.193909645080566
    5. ':
' → logprob: -13.193909645080566
    6. '	and' → logprob: -13.943909645080566
    7. ')' → logprob: -14.068909645080566
    8. ' :' → logprob: -14.318909645080566
    9. '   ' → logprob: -14.318909645080566
    10. '):' → logprob: -15.193909645080566

Token 314: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.19095416367053986
    2. 'j' → logprob: -2.0659542083740234
    3. 'C' → logprob: -3.5659542083740234
    4. 'i' → logprob: -4.440954208374023
    5. 'dist' → logprob: -5.190954208374023
    6. ' dp' → logprob: -7.190954208374023
    7. '   ' → logprob: -8.440954208374023
    8. ' j' → logprob: -8.440954208374023
    9. ' C' → logprob: -8.940954208374023
    10. ' i' → logprob: -9.690954208374023

Token 315: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008806487545371056
    2. '[j' → logprob: -4.7588067054748535
    3. '[v' → logprob: -8.758806228637695
    4. '[' → logprob: -10.633806228637695
    5. 'i' → logprob: -12.133806228637695
    6. ')' → logprob: -13.758806228637695
    7. 'j' → logprob: -14.383806228637695
    8. ' [' → logprob: -14.633806228637695
    9. '   ' → logprob: -14.883806228637695
    10. 'v' → logprob: -15.258806228637695

Token 316: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0528741292655468
    2. ' +' → logprob: -3.5528740882873535
    3. ']' → logprob: -4.1778740882873535
    4. ']+' → logprob: -5.0528740882873535
    5. '!=' → logprob: -7.1778740882873535
    6. ']!=' → logprob: -8.177874565124512
    7. ' !=' → logprob: -10.552874565124512
    8. '+j' → logprob: -10.802874565124512
    9. ')' → logprob: -11.677874565124512
    10. '[' → logprob: -11.802874565124512

Token 317: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.057653918862342834
    2. ' +' → logprob: -2.9326539039611816
    3. '!=' → logprob: -5.932653903961182
    4. ' !=' → logprob: -9.43265438079834
    5. '<' → logprob: -11.30765438079834
    6. '+j' → logprob: -11.68265438079834
    7. '+C' → logprob: -12.43265438079834
    8. '+
' → logprob: -12.80765438079834
    9. '```' → logprob: -13.18265438079834
    10. '＋' → logprob: -13.80765438079834

Token 318: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -2.5822400857578032e-05
    2. ' C' → logprob: -10.625025749206543
    3. '   ' → logprob: -14.125025749206543
    4. ' ' → logprob: -15.500025749206543
    5. '
' → logprob: -16.00002670288086
    6. '  ' → logprob: -16.12502670288086
    7. '(C' → logprob: -17.00002670288086
    8. 'c' → logprob: -17.37502670288086
    9. 'dp' → logprob: -17.37502670288086
    10. '	C' → logprob: -17.50002670288086

Token 319: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0024744702968746424
    2. '[C' → logprob: -6.627474308013916
    3. '[i' → logprob: -7.127474308013916
    4. 'j' → logprob: -8.377474784851074
    5. '[' → logprob: -9.252474784851074
    6. 'C' → logprob: -11.252474784851074
    7. '[J' → logprob: -13.877474784851074
    8. ' [' → logprob: -14.002474784851074
    9. '[c' → logprob: -14.252474784851074
    10. '[
' → logprob: -14.377474784851074

Token 320: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.32017743587493896
    2. ' <' → logprob: -1.320177435874939
    3. ')' → logprob: -5.5701775550842285
    4. '<C' → logprob: -6.8201775550842285
    5. '[j' → logprob: -7.5701775550842285
    6. ')<' → logprob: -8.32017707824707
    7. '[' → logprob: -8.44517707824707
    8. ']' → logprob: -8.82017707824707
    9. '<n' → logprob: -9.57017707824707
    10. '<c' → logprob: -9.82017707824707

Token 321: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08894316852092743
    2. ' <' → logprob: -2.4639432430267334
    3. '<int' → logprob: -14.088943481445312
    4. '[' → logprob: -14.713943481445312
    5. '<C' → logprob: -15.463943481445312
    6. '<th' → logprob: -15.713943481445312
    7. '<
' → logprob: -15.838943481445312
    8. ' ' → logprob: -15.838943481445312
    9. '<num' → logprob: -15.838943481445312
    10. ')' → logprob: -15.963943481445312

Token 322: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00317783304490149
    2. ' dp' → logprob: -5.753177642822266
    3. '	dp' → logprob: -16.253177642822266
    4. '
' → logprob: -18.378177642822266
    5. '(dp' → logprob: -18.753177642822266
    6. '   ' → logprob: -20.003177642822266
    7. '_dp' → logprob: -20.378177642822266
    8. '           ' → logprob: -20.753177642822266
    9. '       ' → logprob: -21.378177642822266
    10. '=' → logprob: -21.628177642822266

Token 323: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.128163257315464e-07
    2. 'j' → logprob: -15.5
    3. '[' → logprob: -16.75
    4. '[i' → logprob: -19.0
    5. '[
' → logprob: -19.625
    6. '```' → logprob: -19.75
    7. '
' → logprob: -21.375
    8. ' [' → logprob: -23.875
    9. '(j' → logprob: -24.125
    10. '	j' → logprob: -24.25

Token 324: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.4616519808769226
    2. '):' → logprob: -1.2116520404815674
    3. ':' → logprob: -2.7116520404815674
    4. ']' → logprob: -5.461651802062988
    5. '):
' → logprob: -7.836651802062988
    6. '[' → logprob: -8.086651802062988
    7. ']:
' → logprob: -8.211651802062988
    8. ')' → logprob: -9.086651802062988
    9. ']):' → logprob: -9.586651802062988
    10. '[j' → logprob: -9.836651802062988

Token 325: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23145882785320282
    2. ':' → logprob: -1.8564587831497192
    3. '       ' → logprob: -3.606458902359009
    4. ':
' → logprob: -4.35645866394043
    5. ' dp' → logprob: -6.23145866394043
    6. '               ' → logprob: -6.35645866394043
    7. ',' → logprob: -6.85645866394043
    8. 'dp' → logprob: -6.85645866394043
    9. ')' → logprob: -7.23145866394043
    10. '):' → logprob: -7.60645866394043

Token 326: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.10063189268112183
    2. ' dp' → logprob: -2.3506319522857666
    3. '           ' → logprob: -7.9756317138671875
    4. '               ' → logprob: -9.600631713867188
    5. '	dp' → logprob: -11.475631713867188
    6. '_dp' → logprob: -13.600631713867188
    7. '(dp' → logprob: -13.975631713867188
    8. '   ' → logprob: -14.225631713867188
    9. '       ' → logprob: -15.850631713867188
    10. '                   ' → logprob: -16.100631713867188

Token 327: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.0
    3. 'j' → logprob: -18.375
    4. '[i' → logprob: -19.5
    5. '```' → logprob: -20.0
    6. '[js' → logprob: -21.0
    7. '[
' → logprob: -22.0
    8. ' [' → logprob: -22.625
    9. ',j' → logprob: -23.0
    10. '	j' → logprob: -23.0

Token 328: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.599403423024341e-05
    2. ']=' → logprob: -10.000065803527832
    3. ' ]' → logprob: -11.875065803527832
    4. '[j' → logprob: -12.250065803527832
    5. '=' → logprob: -12.875065803527832
    6. '[' → logprob: -13.250065803527832
    7. '[i' → logprob: -13.250065803527832
    8. ')' → logprob: -13.500065803527832
    9. ' =' → logprob: -13.750065803527832
    10. '   ' → logprob: -17.62506675720215

Token 329: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0485873706638813
    2. '=' → logprob: -3.0485873222351074
    3. '＝' → logprob: -18.048587799072266
    4. ' =
' → logprob: -18.048587799072266
    5. ')' → logprob: -18.548587799072266
    6. ',' → logprob: -20.048587799072266
    7. '=C' → logprob: -20.048587799072266
    8. ']' → logprob: -20.298587799072266
    9. '.=' → logprob: -20.298587799072266
    10. ' =)' → logprob: -20.298587799072266

Token 330: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00033546582562848926
    2. ' dp' → logprob: -8.000335693359375
    3. '	dp' → logprob: -17.375335693359375
    4. '(dp' → logprob: -20.750335693359375
    5. 'dc' → logprob: -20.750335693359375
    6. 'd' → logprob: -21.000335693359375
    7. '_dp' → logprob: -21.125335693359375
    8. '   ' → logprob: -22.500335693359375
    9. '           ' → logprob: -22.750335693359375
    10. 'df' → logprob: -22.750335693359375

Token 331: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.016087394207715988
    2. '[j' → logprob: -4.141087532043457
    3. 'i' → logprob: -10.766087532043457
    4. 'j' → logprob: -11.016087532043457
    5. '[' → logprob: -11.266087532043457
    6. ' [' → logprob: -13.391087532043457
    7. ' i' → logprob: -16.01608657836914
    8. '[I' → logprob: -16.01608657836914
    9. '```' → logprob: -16.14108657836914
    10. '{i' → logprob: -16.26608657836914

Token 332: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0028778647538274527
    2. ']+' → logprob: -6.127877712249756
    3. '+' → logprob: -7.502877712249756
    4. ' +' → logprob: -9.252878189086914
    5. ')' → logprob: -10.627878189086914
    6. ' ]' → logprob: -11.627878189086914
    7. '[' → logprob: -11.627878189086914
    8. '}' → logprob: -14.127878189086914
    9. '   ' → logprob: -14.252878189086914
    10. '+]' → logprob: -15.377878189086914

Token 333: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5760692954063416
    2. '+' → logprob: -0.8260692954063416
    3. '+C' → logprob: -9.076068878173828
    4. ' ' → logprob: -12.576068878173828
    5. 'C' → logprob: -12.576068878173828
    6. '[' → logprob: -12.951068878173828
    7. ']+' → logprob: -13.576068878173828
    8. '```' → logprob: -13.951068878173828
    9. ']' → logprob: -14.451068878173828
    10. ' ' → logprob: -14.701068878173828

Token 334: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0031777136027812958
    2. ' C' → logprob: -5.753177642822266
    3. ' ' → logprob: -18.628177642822266
    4. '	C' → logprob: -19.753177642822266
    5. ' ' → logprob: -19.878177642822266
    6. '```' → logprob: -20.378177642822266
    7. '(C' → logprob: -20.878177642822266
    8. '
' → logprob: -21.003177642822266
    9. '   ' → logprob: -21.128177642822266
    10. 'c' → logprob: -21.253177642822266

Token 335: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003167545364703983
    2. '[' → logprob: -8.375316619873047
    3. '[j' → logprob: -9.375316619873047
    4. 'i' → logprob: -14.125316619873047
    5. '[
' → logprob: -15.750316619873047
    6. '```' → logprob: -15.750316619873047
    7. ' [' → logprob: -16.125316619873047
    8. '[C' → logprob: -16.250316619873047
    9. '[I' → logprob: -17.125316619873047
    10. ']' → logprob: -17.250316619873047

Token 336: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001317871210630983
    2. '<|end|>' → logprob: -9.125131607055664
    3. ']' → logprob: -11.375131607055664
    4. '}' → logprob: -12.250131607055664
    5. ')
' → logprob: -12.625131607055664
    6. '```' → logprob: -14.125131607055664
    7. '）' → logprob: -14.250131607055664
    8. ' )' → logprob: -14.500131607055664
    9. '[' → logprob: -15.250131607055664
    10. '')' → logprob: -15.750131607055664

Token 337: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003227740991860628
    2. 'for' → logprob: -5.753227710723877
    3. ')' → logprob: -10.378228187561035
    4. ' print' → logprob: -11.878228187561035
    5. ' for' → logprob: -12.503228187561035
    6. ']' → logprob: -12.628228187561035
    7. '```' → logprob: -13.753228187561035
    8. 'if' → logprob: -14.253228187561035
    9. 'return' → logprob: -14.378228187561035
    10. '
' → logprob: -14.503228187561035

Token 338: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -9.73446003627032e-05
    2. '(min' → logprob: -10.125097274780273
    3. '(' → logprob: -10.375097274780273
    4. 'dp' → logprob: -10.625097274780273
    5. '(max' → logprob: -14.375097274780273
    6. ' (' → logprob: -14.625097274780273
    7. ' dp' → logprob: -16.000097274780273
    8. '(int' → logprob: -16.125097274780273
    9. '(
' → logprob: -16.250097274780273
    10. 'min' → logprob: -16.625097274780273

Token 339: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -1.1637164789135568e-05
    2. '[' → logprob: -12.125011444091797
    3. '[-' → logprob: -12.250011444091797
    4. '(N' → logprob: -13.875011444091797
    5. '[n' → logprob: -14.875011444091797
    6. ')' → logprob: -16.250011444091797
    7. 'N' → logprob: -17.750011444091797
    8. '[j' → logprob: -17.875011444091797
    9. '```' → logprob: -18.125011444091797
    10. ' [' → logprob: -19.500011444091797

Token 340: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0003434488025959581
    2. ')' → logprob: -8.000343322753906
    3. ']' → logprob: -12.875343322753906
    4. '})' → logprob: -13.125343322753906
    5. ' ])' → logprob: -13.875343322753906
    6. '])
' → logprob: -14.500343322753906
    7. '))' → logprob: -14.625343322753906
    8. '-' → logprob: -14.750343322753906
    9. '[' → logprob: -14.875343322753906
    10. ')])' → logprob: -15.125343322753906


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 338
Tokens correctement prédits (1ère position, stricte): 150
Tokens correctement prédits (1ère position, avec adaptation): 163
Tokens correctement prédits (top 10): 301
Précision stricte (1ère position): 44.38%
Précision adaptée (1ère position): 48.22%
Précision (top 10): 89.05%
================================================================================
