================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:45:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class SenbeiState:
    def __init__(self, R: int, C: int, grid: list[list[int]]):
        self.R = R
        self.C = C
        self.grid = grid  # grid[row][col], 0-based indexing

    def flipped_rows(self, flip_mask: int) -> 'SenbeiState':
        """Return a new state with rows flipped according to flip_mask bits."""
        new_grid = []
        for r in range(self.R):
            flip = (flip_mask >> r) & 1
            if flip:
                # Flip the entire row: 0 -> 1, 1 -> 0
                new_row = [1 - cell for cell in self.grid[r]]
            else:
                new_row = self.grid[r][:]
            new_grid.append(new_row)
        return SenbeiState(self.R, self.C, new_grid)

    def flipped_cols(self, flip_mask: int) -> 'SenbeiState':
        """Return a new state with columns flipped according to flip_mask bits."""
        new_grid = [row[:] for row in self.grid]
        for c in range(self.C):
            flip = (flip_mask >> c) & 1
            if flip:
                for r in range(self.R):
                    new_grid[r][c] = 1 - new_grid[r][c]
        return SenbeiState(self.R, self.C, new_grid)

    def count_face_up(self) -> int:
        """Count number of senbei showing front (1)."""
        return sum(sum(row) for row in self.grid)


class FlipOperation:
    """Abstract flip operation for rows or columns."""
    def __init__(self, dimension: int, flip_mask: int):
        self.dimension = dimension
        self.flip_mask = flip_mask

    def apply_to_state(self, state: SenbeiState, axis: str) -> SenbeiState:
        if axis == 'row':
            return state.flipped_rows(self.flip_mask)
        elif axis == 'col':
            return state.flipped_cols(self.flip_mask)
        else:
            raise ValueError("Axis must be 'row' or 'col'.")


class SenbeiFlipper:
    def __init__(self, state: SenbeiState):
        self.initial_state = state
        self.R = state.R
        self.C = state.C

    def _column_pattern_for_row_flips(self, row_flip_mask: int) -> tuple[int, ...]:
        """
        For given row flips, compute the pattern of each column after row flips.
        Represents each column as an integer bitmask of length R.
        """
        patterns = []
        for c in range(self.C):
            col_pattern = 0
            for r in range(self.R):
                cell = self.initial_state.grid[r][c]
                # if row flipped, cell is flipped
                if (row_flip_mask >> r) & 1:
                    cell = 1 - cell
                col_pattern |= (cell << r)
            patterns.append(col_pattern)
        return tuple(patterns)

    def maximize_shipment(self) -> int:
        """
        Implements the solution:
        - enumerate all possible row flip states (2^R)
        - for each, compute column bit patterns after row flips
        - count frequencies of each pattern (= number of columns with that pattern)
        - We can flip columns with pattern p to pattern p ^ (2^R -1) (invert all bits)
        - For each unique pattern count, decide to flip columns or not for max count
        - Sum max counts => max number of shipment senbei in this row flip configuration
        - Track global maximum over all row flip configurations
        """
        max_shipment = 0
        full_mask = (1 << self.R) - 1
        # To avoid double counting pairs, we use a dictionary and process pairs carefully
        from collections import Counter

        for row_flip_mask in range(1 << self.R):
            column_patterns = self._column_pattern_for_row_flips(row_flip_mask)
            freq = Counter(column_patterns)
            visited = set()
            shipment_count = 0

            for p, cnt_p in freq.items():
                p_inv = p ^ full_mask
                if p in visited:
                    continue
                visited.add(p)
                visited.add(p_inv)
                cnt_inv = freq.get(p_inv, 0)
                shipment_count += max(cnt_p, cnt_inv)

            if shipment_count > max_shipment:
                max_shipment = shipment_count

        return max_shipment


class SenbeiProblemSolver:
    def __init__(self):
        self.datasets = []

    def add_dataset(self, R: int, C: int, grid: list[list[int]]):
        self.datasets.append(SenbeiState(R, C, grid))

    def solve_all(self) -> list[int]:
        results = []
        for state in self.datasets:
            flipper = SenbeiFlipper(state)
            result = flipper.maximize_shipment()
            results.append(result)
        return results


def main():
    import sys

    solver = SenbeiProblemSolver()
    lines = iter(sys.stdin.read().strip().split('\n'))
    while True:
        try:
            line = next(lines)
            if not line.strip():
                continue
            R, C = map(int, line.split())
            if R == 0 and C == 0:
                break
            grid = []
            for _ in range(R):
                row = list(map(int, next(lines).split()))
                grid.append(row)
            solver.add_dataset(R, C, grid)
        except StopIteration:
            break

    results = solver.solve_all()
    print('\n'.join(str(r) for r in results))


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Sen' (ID: 8675)
  → Token d'amorce (pas de prédiction)

Token 2: 'bei' (ID: 36127)
  → Token d'amorce (pas de prédiction)

Token 3: 'State' (ID: 1881)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8211597204208374
    2. '(' → logprob: -1.3211597204208374
    3. '{' → logprob: -1.3211597204208374
    4. ' {' → logprob: -3.696159839630127
    5. ' :' → logprob: -7.321159839630127
    6. ' ' → logprob: -7.821159839630127
    7. '.' → logprob: -8.571159362792969
    8. '```' → logprob: -8.821159362792969
    9. 's' → logprob: -9.946159362792969
    10. '(:' → logprob: -10.321159362792969

Token 4: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30119290947914124
    2. '(' → logprob: -1.5511928796768188
    3. '{' → logprob: -3.0511929988861084
    4. '.' → logprob: -8.176193237304688
    5. ' {' → logprob: -8.426193237304688
    6. '(:' → logprob: -8.926193237304688
    7. ' :' → logprob: -9.801193237304688
    8. '(
' → logprob: -11.301193237304688
    9. '```' → logprob: -11.426193237304688
    10. '({' → logprob: -11.551193237304688

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14074315130710602
    2. '(' → logprob: -2.7657432556152344
    3. '   ' → logprob: -3.1407432556152344
    4. '```' → logprob: -4.640743255615234
    5. ':
' → logprob: -5.765743255615234
    6. '.' → logprob: -6.140743255615234
    7. '\' → logprob: -6.390743255615234
    8. '(
' → logprob: -6.515743255615234
    9. '<|end|>' → logprob: -6.765743255615234
    10. '():' → logprob: -7.015743255615234

Token 6: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12692055106163025
    2. '```' → logprob: -3.126920461654663
    3. '_' → logprob: -3.876920461654663
    4. '    ' → logprob: -4.501920700073242
    5. '\n' → logprob: -4.751920700073242
    6. ' ' → logprob: -5.126920700073242
    7. 'def' (adapté à ' def') → logprob: -5.751920700073242
    8. '<|end|>' → logprob: -5.751920700073242
    9. '\' → logprob: -5.876920700073242
    10. '[' → logprob: -6.001920700073242

Token 7: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.351994127035141
    2. ' __' → logprob: -1.4769941568374634
    3. '__' → logprob: -3.601994037628174
    4. ' process' → logprob: -4.601994037628174
    5. '_' → logprob: -4.851994037628174
    6. ' init' → logprob: -5.226994037628174
    7. ' def' → logprob: -5.226994037628174
    8. ' calculate' → logprob: -6.101994037628174
    9. ' ' → logprob: -6.101994037628174
    10. '<|end|>' → logprob: -6.976994037628174

Token 8: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. ' init' → logprob: -16.25
    3. 'ini' → logprob: -16.5
    4. '_init' → logprob: -17.25
    5. 'i' → logprob: -17.5
    6. 'in' → logprob: -17.875
    7. 'int' → logprob: -19.25
    8. '	init' → logprob: -20.25
    9. 'new' → logprob: -20.75
    10. 'inite' → logprob: -21.0

Token 9: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07708761841058731
    2. '__' → logprob: -3.327087640762329
    3. '(' → logprob: -3.452087640762329
    4. '__(
' → logprob: -5.32708740234375
    5. '_' → logprob: -6.95208740234375
    6. '(self' → logprob: -8.32708740234375
    7. '__((' → logprob: -8.70208740234375
    8. '_(' → logprob: -8.82708740234375
    9. ' (' → logprob: -9.32708740234375
    10. '__('' → logprob: -10.32708740234375

Token 10: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001732775242999196
    2. ' self' → logprob: -6.37673282623291
    3. ')' → logprob: -10.50173282623291
    4. '(self' → logprob: -13.62673282623291
    5. ''s' → logprob: -15.25173282623291
    6. ' ' → logprob: -15.25173282623291
    7. '	self' → logprob: -16.001731872558594
    8. '   ' → logprob: -16.126731872558594
    9. '       ' → logprob: -16.126731872558594
    10. '_self' → logprob: -16.251731872558594

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07358279079198837
    2. 'self' → logprob: -2.948582887649536
    3. ')' → logprob: -5.323582649230957
    4. '_' → logprob: -5.573582649230957
    5. '(self' → logprob: -6.073582649230957
    6. '):' → logprob: -6.448582649230957
    7. ' ,' → logprob: -6.573582649230957
    8. '(' → logprob: -6.573582649230957
    9. '_self' → logprob: -6.948582649230957
    10. ' self' → logprob: -7.698582649230957

Token 12: ' R' (ID: 460)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5233071446418762
    2. ' self' → logprob: -0.8983071446418762
    3. 'state' → logprob: -9.398306846618652
    4. ' state' → logprob: -10.398306846618652
    5. ')' → logprob: -10.523306846618652
    6. '       ' → logprob: -11.523306846618652
    7. '	self' → logprob: -12.523306846618652
    8. '_self' → logprob: -12.773306846618652
    9. '):' → logprob: -13.023306846618652
    10. '```' → logprob: -13.148306846618652

Token 13: ':' (ID: 25)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8421801924705505
    2. 'adius' → logprob: -1.4671802520751953
    3. ',' → logprob: -2.3421802520751953
    4. '):' → logprob: -2.4671802520751953
    5. ')' → logprob: -2.8421802520751953
    6. 'a' → logprob: -3.4671802520751953
    7. ':' → logprob: -4.217180252075195
    8. '=' → logprob: -4.717180252075195
    9. '_' → logprob: -4.842180252075195
    10. 'andom' → logprob: -5.342180252075195

Token 14: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.43120893836021423
    2. 'int' → logprob: -1.1812089681625366
    3. ' float' → logprob: -3.931208848953247
    4. 'float' → logprob: -4.431209087371826
    5. 'adius' → logprob: -6.556209087371826
    6. 'e' → logprob: -6.681209087371826
    7. ' str' → logprob: -6.931209087371826
    8. 'dict' → logprob: -7.181209087371826
    9. ' Dict' → logprob: -7.243709087371826
    10. ' np' → logprob: -7.243709087371826

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12095250189304352
    2. ')' → logprob: -2.870952606201172
    3. '):' → logprob: -2.870952606201172
    4. ' ,' → logprob: -7.995952606201172
    5. '   ' → logprob: -9.745952606201172
    6. ':' → logprob: -9.870952606201172
    7. '=' → logprob: -10.120952606201172
    8. ' ' → logprob: -10.745952606201172
    9. '):
' → logprob: -10.745952606201172
    10. ',int' → logprob: -10.995952606201172

Token 16: ' C' (ID: 363)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9212068319320679
    2. ' C' → logprob: -1.7962068319320679
    3. ' S' → logprob: -2.0462069511413574
    4. ',' → logprob: -2.4212069511413574
    5. '    ' → logprob: -3.4212069511413574
    6. ')' → logprob: -3.4212069511413574
    7. ' )' → logprob: -3.5462069511413574
    8. ' L' → logprob: -4.296206951141357
    9. 'C' → logprob: -4.671206951141357
    10. ' ,' → logprob: -4.921206951141357

Token 17: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14082765579223633
    2. ')' → logprob: -2.7658276557922363
    3. ',' → logprob: -2.7658276557922363
    4. ':' → logprob: -5.265827655792236
    5. '):
' → logprob: -8.890827178955078
    6. '=' → logprob: -9.515827178955078
    7. ' ):' → logprob: -10.140827178955078
    8. ' ' → logprob: -11.640827178955078
    9. ''):' → logprob: -11.640827178955078
    10. ' ,' → logprob: -11.640827178955078

Token 18: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.42874523997306824
    2. ' int' → logprob: -1.0537452697753906
    3. ')' → logprob: -11.55374526977539
    4. '[int' → logprob: -11.67874526977539
    5. ':int' → logprob: -11.80374526977539
    6. '=int' → logprob: -12.67874526977539
    7. '(int' → logprob: -12.67874526977539
    8. '	int' → logprob: -12.67874526977539
    9. ']int' → logprob: -13.05374526977539
    10. ' ' → logprob: -13.55374526977539

Token 19: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03216946870088577
    2. ',' → logprob: -3.5321695804595947
    3. ')' → logprob: -6.157169342041016
    4. ':' → logprob: -8.532169342041016
    5. '   ' → logprob: -10.032169342041016
    6. '):
' → logprob: -10.532169342041016
    7. ' ):' → logprob: -12.032169342041016
    8. '```' → logprob: -12.407169342041016
    9. '<|end|>' → logprob: -12.657169342041016
    10. ''):' → logprob: -12.907169342041016

Token 20: ' grid' (ID: 10586)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -1.9645123481750488
    2. ' S' → logprob: -2.089512348175049
    3. ' grid' → logprob: -2.214512348175049
    4. ' M' → logprob: -2.339512348175049
    5. ' H' → logprob: -2.464512348175049
    6. ' s' → logprob: -2.464512348175049
    7. ' K' → logprob: -2.964512348175049
    8. ' T' → logprob: -3.464512348175049
    9. ' N' → logprob: -3.714512348175049
    10. ' sen' → logprob: -3.714512348175049

Token 21: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038278333842754364
    2. '):' → logprob: -3.288278341293335
    3. ')' → logprob: -9.038278579711914
    4. ',' → logprob: -10.038278579711914
    5. ' :' → logprob: -10.163278579711914
    6. ' ):' → logprob: -11.038278579711914
    7. '):
' → logprob: -12.288278579711914
    8. '_:' → logprob: -12.913278579711914
    9. '_size' → logprob: -13.163278579711914
    10. '   ' → logprob: -13.663278579711914

Token 22: ' list' (ID: 1562)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.1594579666852951
    2. ' List' → logprob: -2.1594579219818115
    3. 'list' → logprob: -3.9094579219818115
    4. ')' → logprob: -5.659458160400391
    5. ' list' → logprob: -5.659458160400391
    6. 'int' → logprob: -6.284458160400391
    7. '[List' → logprob: -7.034458160400391
    8. '   ' → logprob: -7.409458160400391
    9. ' str' → logprob: -8.53445816040039
    10. ' ' → logprob: -8.53445816040039

Token 23: '[list' (ID: 141696)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029447749257087708
    2. ')' → logprob: -6.1279449462890625
    3. ',' → logprob: -8.252944946289062
    4. '):
' → logprob: -8.377944946289062
    5. ':' → logprob: -8.627944946289062
    6. '[' → logprob: -10.002944946289062
    7. '[int' → logprob: -11.127944946289062
    8. '   ' → logprob: -11.627944946289062
    9. ']:' → logprob: -12.002944946289062
    10. ' ):' → logprob: -12.127944946289062

Token 24: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -4.3464544432936236e-05
    2. '[' → logprob: -10.750043869018555
    3. '[str' → logprob: -10.875043869018555
    4. 'int' → logprob: -12.875043869018555
    5. ' [' → logprob: -16.000043869018555
    6. '<int' → logprob: -16.000043869018555
    7. ']int' → logprob: -16.500043869018555
    8. '[Int' → logprob: -16.625043869018555
    9. '[list' → logprob: -16.750043869018555
    10. ']])' → logprob: -17.750043869018555

Token 25: ']]' (ID: 8928)
  Prédit: ']])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']])' → logprob: -0.43322861194610596
    2. ']]' → logprob: -1.308228611946106
    3. ']):' → logprob: -3.1832284927368164
    4. ']' → logprob: -3.8082284927368164
    5. '])' → logprob: -4.183228492736816
    6. '],' → logprob: -6.683228492736816
    7. ']],' → logprob: -7.558228492736816
    8. ']:' → logprob: -8.058228492736816
    9. ' ]' → logprob: -9.558228492736816
    10. ']]]' → logprob: -10.058228492736816

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009332789108157158
    2. ')' → logprob: -4.759332656860352
    3. ',' → logprob: -7.384332656860352
    4. ':' → logprob: -10.009332656860352
    5. '   ' → logprob: -10.509332656860352
    6. '):
' → logprob: -11.009332656860352
    7. ' ):' → logprob: -13.509332656860352
    8. '```' → logprob: -13.759332656860352
    9. '[' → logprob: -14.259332656860352
    10. '):
' → logprob: -14.509332656860352

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18310603499412537
    2. ':' → logprob: -1.9331060647964478
    3. '   ' → logprob: -4.183105945587158
    4. '```' → logprob: -6.558105945587158
    5. '    ' → logprob: -6.933105945587158
    6. '\' → logprob: -6.933105945587158
    7. '):' → logprob: -7.558105945587158
    8. '<|end|>' → logprob: -7.683105945587158
    9. 'self' → logprob: -7.933105945587158
    10. '	' → logprob: -8.058106422424316

Token 28: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40672317147254944
    2. 'self' (adapté à ' self') → logprob: -1.156723141670227
    3. ' self' → logprob: -4.5317230224609375
    4. '        ' → logprob: -6.0317230224609375
    5. '```' → logprob: -6.2817230224609375
    6. '   ' → logprob: -6.6567230224609375
    7. '\' → logprob: -6.9067230224609375
    8. 's' → logprob: -7.5317230224609375
    9. ' ' → logprob: -8.281723022460938
    10. ' ' → logprob: -8.406723022460938

Token 29: '.R' (ID: 3395)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002699781907722354
    2. ' .' → logprob: -6.252699851989746
    3. '.grid' → logprob: -7.377699851989746
    4. ' ' → logprob: -9.627699851989746
    5. '   ' → logprob: -11.127699851989746
    6. '.is' → logprob: -11.877699851989746
    7. '       ' → logprob: -11.877699851989746
    8. '.R' → logprob: -12.377699851989746
    9. 'self' → logprob: -12.502699851989746
    10. '._' → logprob: -12.877699851989746

Token 30: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37467843294143677
    2. ' =' → logprob: -2.124678373336792
    3. ' ,' → logprob: -2.624678373336792
    4. '=' → logprob: -3.124678373336792
    5. '<|end|>' → logprob: -3.749678373336792
    6. ' ' → logprob: -4.624678611755371
    7. ')' → logprob: -4.749678611755371
    8. '.' → logprob: -4.874678611755371
    9. ' ==' → logprob: -5.499678611755371
    10. '   ' → logprob: -5.499678611755371

Token 31: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.026305755600333214
    2. 'R' → logprob: -3.651305675506592
    3. ' ' → logprob: -12.77630615234375
    4. ' ' → logprob: -13.02630615234375
    5. ' C' → logprob: -15.90130615234375
    6. '	R' → logprob: -16.27630615234375
    7. 'C' → logprob: -16.52630615234375
    8. '_R' → logprob: -17.02630615234375
    9. '    ' → logprob: -17.40130615234375
    10. '`' → logprob: -17.65130615234375

Token 32: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042381227016448975
    2. '<|end|>' → logprob: -3.5423812866210938
    3. '        
' → logprob: -5.292381286621094
    4. '   ' → logprob: -6.042381286621094
    5. '
' → logprob: -6.792381286621094
    6. '```' → logprob: -7.292381286621094
    7. '    
' → logprob: -7.417381286621094
    8. 'newline' → logprob: -7.792381286621094
    9. '\' → logprob: -7.917381286621094
    10. '<|end|>' → logprob: -8.042381286621094

Token 33: '       ' (ID: 309)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7698178291320801
    2. '       ' → logprob: -0.7698178291320801
    3. '<|end|>' → logprob: -3.64481782913208
    4. '```' → logprob: -3.76981782913208
    5. '   ' → logprob: -5.26981782913208
    6. ')' → logprob: -5.26981782913208
    7. ',' → logprob: -5.64481782913208
    8. '\' → logprob: -6.14481782913208
    9. '        
' → logprob: -6.39481782913208
    10. '
' → logprob: -7.01981782913208

Token 34: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10264110565185547
    2. 'self' (adapté à ' self') → logprob: -2.4776411056518555
    3. ' self' → logprob: -4.3526411056518555
    4. '        ' → logprob: -7.6026411056518555
    5. '   ' → logprob: -9.102641105651855
    6. ' ' → logprob: -9.977641105651855
    7. 'C' → logprob: -10.977641105651855
    8. '    ' → logprob: -11.477641105651855
    9. '      ' → logprob: -11.602641105651855
    10. '     ' → logprob: -11.727641105651855

Token 35: '.C' (ID: 2010)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002148953964933753
    2. '.C' → logprob: -6.2521491050720215
    3. '.R' → logprob: -9.127148628234863
    4. ' .' → logprob: -9.752148628234863
    5. '   ' → logprob: -11.877148628234863
    6. ')' → logprob: -11.877148628234863
    7. ' ' → logprob: -12.127148628234863
    8. '<|end|>' → logprob: -12.252148628234863
    9. 'C' → logprob: -12.377148628234863
    10. '.)' → logprob: -12.502148628234863

Token 36: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22257988154888153
    2. ' =' → logprob: -2.5975799560546875
    3. '       ' → logprob: -2.7225799560546875
    4. '<|end|>' → logprob: -3.4725799560546875
    5. ' ' → logprob: -4.3475799560546875
    6. ')' → logprob: -5.4725799560546875
    7. '   ' → logprob: -5.7225799560546875
    8. '.' → logprob: -5.8475799560546875
    9. '<|end|>' → logprob: -6.4725799560546875
    10. '        ' → logprob: -7.0975799560546875

Token 37: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.25194504857063293
    2. 'C' → logprob: -1.5019450187683105
    3. ' ' → logprob: -11.751945495605469
    4. ' ' → logprob: -12.126945495605469
    5. '	C' → logprob: -14.001945495605469
    6. '>C' → logprob: -15.126945495605469
    7. '    ' → logprob: -15.626945495605469
    8. '_C' → logprob: -15.751945495605469
    9. ' grid' → logprob: -15.939445495605469
    10. '=C' → logprob: -16.18944549560547

Token 38: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08098945766687393
    2. '<|end|>' → logprob: -3.580989360809326
    3. '```' → logprob: -3.580989360809326
    4. '   ' → logprob: -4.830989360809326
    5. '\' → logprob: -5.580989360809326
    6. '        
' → logprob: -5.580989360809326
    7. '`' → logprob: -6.580989360809326
    8. 'newline' → logprob: -6.955989360809326
    9. '    ' → logprob: -7.205989360809326
    10. '        ' → logprob: -7.330989360809326

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024986622855067253
    2. '```' → logprob: -4.899986743927002
    3. '   ' → logprob: -5.649986743927002
    4. '        
' → logprob: -5.649986743927002
    5. '\' → logprob: -5.774986743927002
    6. 'newline' → logprob: -6.524986743927002
    7. '<|end|>' → logprob: -6.649986743927002
    8. 'self' → logprob: -6.649986743927002
    9. '`' → logprob: -6.899986743927002
    10. '\n' → logprob: -7.524986743927002

Token 40: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006815423723310232
    2. 'self' (adapté à ' self') → logprob: -5.006815433502197
    3. ' self' → logprob: -9.506814956665039
    4. '```' → logprob: -10.881814956665039
    5. '   ' → logprob: -12.756814956665039
    6. '           ' → logprob: -14.006814956665039
    7. '\' → logprob: -14.381814956665039
    8. '	' → logprob: -14.506814956665039
    9. '	self' → logprob: -14.881814956665039
    10. '      ' → logprob: -14.881814956665039

Token 41: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.16034649312496185
    2. '.' → logprob: -1.910346508026123
    3. '.Grid' → logprob: -9.410346031188965
    4. ' .' → logprob: -10.410346031188965
    5. '.g' → logprob: -12.660346031188965
    6. '.gr' → logprob: -13.410346031188965
    7. 'grid' → logprob: -13.910346031188965
    8. '.r' → logprob: -15.410346031188965
    9. '.columns' → logprob: -15.535346031188965
    10. '.s' → logprob: -15.535346031188965

Token 42: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8757714629173279
    2. '[' → logprob: -1.0007715225219727
    3. ' =' → logprob: -1.6257715225219727
    4. '[:]' → logprob: -4.875771522521973
    5. '.' → logprob: -5.250771522521973
    6. '<|end|>' → logprob: -5.750771522521973
    7. ')' → logprob: -7.125771522521973
    8. ']' → logprob: -8.250771522521973
    9. '<|end|>' → logprob: -8.375771522521973
    10. '   ' → logprob: -8.750771522521973

Token 43: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.09596581012010574
    2. ' grid' → logprob: -2.59596586227417
    3. '[' → logprob: -4.47096586227417
    4. ' [' → logprob: -5.22096586227417
    5. '[
' → logprob: -10.595965385437012
    6. '(grid' → logprob: -10.720965385437012
    7. '	grid' → logprob: -11.345965385437012
    8. '[[' → logprob: -12.095965385437012
    9. '.grid' → logprob: -12.470965385437012
    10. '[list' → logprob: -12.595965385437012

Token 44: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8483696579933167
    2. '<|end|>' → logprob: -1.7233695983886719
    3. '.' → logprob: -1.8483695983886719
    4. '
' → logprob: -2.473369598388672
    5. '\' → logprob: -2.973369598388672
    6. '    
' → logprob: -3.973369598388672
    7. ':' → logprob: -4.348369598388672
    8. '```' → logprob: -4.473369598388672
    9. '_' → logprob: -4.473369598388672
    10. '\n' → logprob: -4.973369598388672

Token 45: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7376899719238281
    2. '<|end|>' → logprob: -1.1126899719238281
    3. '
' → logprob: -2.237689971923828
    4. '    
' → logprob: -3.987689971923828
    5. '\' → logprob: -4.237689971923828
    6. '\n' → logprob: -4.487689971923828
    7. ':' → logprob: -4.737689971923828
    8. '```' → logprob: -4.987689971923828
    9. ',' → logprob: -5.737689971923828
    10. ')' → logprob: -5.737689971923828

Token 46: ' grid' (ID: 10586)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6073882579803467
    2. '[' → logprob: -0.8573882579803467
    3. '[List' → logprob: -4.732388496398926
    4. '[row' → logprob: -5.607388496398926
    5. '[int' → logprob: -5.857388496398926
    6. '[list' → logprob: -5.982388496398926
    7. ' copy' → logprob: -5.982388496398926
    8. '[cell' → logprob: -6.482388496398926
    9. '[class' → logprob: -6.607388496398926
    10. '[current' → logprob: -6.982388496398926

Token 47: '[row' (ID: 35899)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1974714696407318
    2. '<|end|>' → logprob: -2.6974713802337646
    3. '.' → logprob: -3.3224713802337646
    4. '   ' → logprob: -3.4474713802337646
    5. ')' → logprob: -4.447471618652344
    6. ' ' → logprob: -5.197471618652344
    7. '<|end|>' → logprob: -5.697471618652344
    8. '\' → logprob: -5.697471618652344
    9. '[:]' → logprob: -5.822471618652344
    10. '[n' → logprob: -5.947471618652344

Token 48: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02045919932425022
    2. ']' → logprob: -4.020459175109863
    3. '[row' → logprob: -6.895459175109863
    4. ' ][' → logprob: -6.895459175109863
    5. '][]' → logprob: -9.020459175109863
    6. '])' → logprob: -9.270459175109863
    7. '   ' → logprob: -11.895459175109863
    8. '_size' → logprob: -12.020459175109863
    9. ' ]' → logprob: -12.020459175109863
    10. ' ' → logprob: -12.270459175109863

Token 49: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.00530645065009594
    2. 'column' → logprob: -5.380306243896484
    3. ' col' → logprob: -7.380306243896484
    4. 'c' → logprob: -10.255306243896484
    5. 'colm' → logprob: -11.130306243896484
    6. 'coli' → logprob: -12.130306243896484
    7. 'coln' → logprob: -12.880306243896484
    8. ' column' → logprob: -13.505306243896484
    9. '	col' → logprob: -13.505306243896484
    10. ']' → logprob: -14.880306243896484

Token 50: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015364045975729823
    2. ' ]' → logprob: -6.5015363693237305
    3. '])' → logprob: -10.87653636932373
    4. '][' → logprob: -11.62653636932373
    5. ')' → logprob: -13.00153636932373
    6. '[' → logprob: -14.12653636932373
    7. '][]' → logprob: -14.25153636932373
    8. '],' → logprob: -15.00153636932373
    9. ']
' → logprob: -15.12653636932373
    10. ')]' → logprob: -15.50153636932373

Token 51: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1841529607772827
    2. ' with' → logprob: -1.8091529607772827
    3. ' where' → logprob: -2.5591530799865723
    4. '       ' → logprob: -2.8091530799865723
    5. ')' → logprob: -3.4341530799865723
    6. '    ' → logprob: -3.5591530799865723
    7. ' and' → logprob: -3.9341530799865723
    8. ' so' → logprob: -4.184153079986572
    9. '<|end|>' → logprob: -4.184153079986572
    10. '        ' → logprob: -4.309153079986572

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9264122843742371
    2. ' where' → logprob: -0.9264122843742371
    3. ' each' → logprob: -3.301412343978882
    4. ' ' → logprob: -3.551412343978882
    5. ' #' → logprob: -3.801412343978882
    6. 'where' → logprob: -3.926412343978882
    7. '#' → logprob: -3.926412343978882
    8. ' True' → logprob: -3.926412343978882
    9. ' with' → logprob: -4.176412105560303
    10. '1' → logprob: -4.676412105560303

Token 53: '-based' (ID: 8235)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' indexing' (ID: 105989)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1446937620639801
    2. '
' → logprob: -2.6446938514709473
    3. '    
' → logprob: -3.2696938514709473
    4. '<|end|>' → logprob: -4.644693851470947
    5. ' ' → logprob: -5.769693851470947
    6. ' 
' → logprob: -6.019693851470947
    7. '       ' → logprob: -6.644693851470947
    8. ')' → logprob: -6.894693851470947
    9. '```' → logprob: -7.019693851470947
    10. '\n' → logprob: -7.019693851470947

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026153750717639923
    2. '    
' → logprob: -4.276153564453125
    3. 'def' → logprob: -6.151153564453125
    4. '
' → logprob: -6.651153564453125
    5. ' ' → logprob: -6.651153564453125
    6. '```' → logprob: -6.651153564453125
    7. ' def' → logprob: -6.776153564453125
    8. ' 
' → logprob: -7.151153564453125
    9. '       ' → logprob: -7.151153564453125
    10. '\' → logprob: -7.901153564453125

Token 57: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39884597063064575
    2. 'def' (adapté à ' def') → logprob: -1.273845911026001
    3. ' def' → logprob: -3.398845911026001
    4. 'd' → logprob: -4.64884614944458
    5. ' ' → logprob: -5.64884614944458
    6. '    ' → logprob: -6.52384614944458
    7. '    
' → logprob: -7.89884614944458
    8. ' 
' → logprob: -8.523845672607422
    9. '  ' → logprob: -9.398845672607422
    10. '       ' → logprob: -9.648845672607422

Token 58: ' flipped' (ID: 96664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.034850530326366425
    2. '_' → logprob: -3.659850597381592
    3. ' space' → logprob: -5.784850597381592
    4. '_space' → logprob: -6.534850597381592
    5. ' deepcopy' → logprob: -7.159850597381592
    6. ' is' → logprob: -7.659850597381592
    7. ' ‌' → logprob: -8.034850120544434
    8. ' ' → logprob: -8.034850120544434
    9. 'space' → logprob: -8.159850120544434
    10. ' _' → logprob: -8.159850120544434

Token 59: '_rows' (ID: 26013)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6419409513473511
    2. '(' → logprob: -0.7669409513473511
    3. '_flip' → logprob: -5.891941070556641
    4. '(self' → logprob: -6.266941070556641
    5. 's' → logprob: -7.016941070556641
    6. '_(' → logprob: -7.516941070556641
    7. '_space' → logprob: -7.641941070556641
    8. '()' → logprob: -7.641941070556641
    9. '```' → logprob: -8.01694107055664
    10. '_s' → logprob: -8.39194107055664

Token 60: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6351383328437805
    2. '(' → logprob: -0.7601383328437805
    3. '_' → logprob: -6.885138511657715
    4. ' (' → logprob: -7.260138511657715
    5. 's' → logprob: -8.510138511657715
    6. '(
' → logprob: -8.760138511657715
    7. '(s' → logprob: -9.010138511657715
    8. 'self' → logprob: -10.010138511657715
    9. '_count' → logprob: -10.260138511657715
    10. ' =' → logprob: -10.260138511657715

Token 61: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038133636116981506
    2. ')' → logprob: -3.4131336212158203
    3. 'self' → logprob: -6.41313362121582
    4. ',' → logprob: -6.53813362121582
    5. ' ):' → logprob: -6.91313362121582
    6. '(self' → logprob: -8.53813362121582
    7. ' )' → logprob: -9.91313362121582
    8. '):
' → logprob: -10.03813362121582
    9. ':' → logprob: -11.03813362121582
    10. '():' → logprob: -11.16313362121582

Token 62: ' flip' (ID: 29130)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7721397280693054
    2. ' rows' → logprob: -2.14713978767395
    3. '):' → logprob: -2.14713978767395
    4. 'rows' → logprob: -2.27213978767395
    5. 'self' → logprob: -3.14713978767395
    6. ' )' → logprob: -3.64713978767395
    7. ' self' → logprob: -3.64713978767395
    8. ' ):' → logprob: -3.89713978767395
    9. ' flip' → logprob: -4.647139549255371
    10. 'flip' → logprob: -4.772139549255371

Token 63: '_mask' (ID: 21732)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9890285730361938
    2. 'ed' → logprob: -1.2390285730361938
    3. ':' → logprob: -1.9890285730361938
    4. '_rows' → logprob: -1.9890285730361938
    5. '_mask' → logprob: -2.9890284538269043
    6. 'd' → logprob: -4.989028453826904
    7. 'mask' → logprob: -6.489028453826904
    8. 's' → logprob: -6.614028453826904
    9. ')' → logprob: -7.614028453826904
    10. 'rows' → logprob: -7.739028453826904

Token 64: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0667298436164856
    2. ':' → logprob: -2.816729784011841
    3. ')' → logprob: -5.44173002243042
    4. ' ):' → logprob: -7.94173002243042
    5. '):
' → logprob: -11.066729545593262
    6. ':int' → logprob: -11.316729545593262
    7. ' )' → logprob: -11.566729545593262
    8. ' :' → logprob: -11.941729545593262
    9. '   ' → logprob: -12.191729545593262
    10. ' ' → logprob: -12.441729545593262

Token 65: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.17915703356266022
    2. ' int' → logprob: -2.054157018661499
    3. ')' → logprob: -3.429157018661499
    4. 'self' → logprob: -6.554157257080078
    5. ' )' → logprob: -7.429157257080078
    6. '):' → logprob: -7.929157257080078
    7. '   ' → logprob: -7.929157257080078
    8. ' self' → logprob: -8.179157257080078
    9. '):
' → logprob: -8.804157257080078
    10. ':int' → logprob: -9.554157257080078

Token 66: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47420641779899597
    2. '):' → logprob: -0.9742064476013184
    3. ')->' → logprob: -9.47420597076416
    4. ':' → logprob: -10.97420597076416
    5. '   ' → logprob: -10.97420597076416
    6. ' ):' → logprob: -11.97420597076416
    7. ' )' → logprob: -12.34920597076416
    8. '):
' → logprob: -12.34920597076416
    9. ',' → logprob: -14.22420597076416
    10. ' ' → logprob: -14.22420597076416

Token 67: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007282786536961794
    2. '):' → logprob: -8.000728607177734
    3. '():' → logprob: -8.375728607177734
    4. ' :' → logprob: -9.500728607177734
    5. '->' → logprob: -10.750728607177734
    6. ' ->' → logprob: -10.750728607177734
    7. ':return' → logprob: -10.750728607177734
    8. ':**' → logprob: -12.000728607177734
    9. '   ' → logprob: -12.375728607177734
    10. '>:' → logprob: -12.500728607177734

Token 68: ' '' (ID: 461)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.18078398704528809
    2. 'list' → logprob: -1.805783987045288
    3. '   ' → logprob: -7.930784225463867
    4. ' ' → logprob: -8.430784225463867
    5. '[list' → logprob: -9.555784225463867
    6. 'set' → logprob: -9.930784225463867
    7. ' '' → logprob: -10.055784225463867
    8. 'int' → logprob: -10.305784225463867
    9. ' "' → logprob: -10.305784225463867
    10. '  ' → logprob: -10.430784225463867

Token 69: 'Sen' (ID: 28315)
  Prédit: 'Sen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sen' → logprob: -0.021254045888781548
    2. 'list' → logprob: -3.896254062652588
    3. 'set' → logprob: -7.396254062652588
    4. ' Sen' → logprob: -10.27125358581543
    5. 'sen' → logprob: -10.64625358581543
    6. 'List' → logprob: -11.02125358581543
    7. 'Set' → logprob: -11.77125358581543
    8. ' list' → logprob: -12.77125358581543
    9. '[list' → logprob: -13.39625358581543
    10. 'S' → logprob: -13.52125358581543

Token 70: 'bei' (ID: 36127)
  Prédit: 'bei'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bei' → logprob: -0.00027432903880253434
    2. 'be' → logprob: -8.625274658203125
    3. 'b' → logprob: -10.750274658203125
    4. 'Bei' → logprob: -10.875274658203125
    5. 'beit' → logprob: -10.875274658203125
    6. '```' → logprob: -11.875274658203125
    7. ' bei' → logprob: -12.000274658203125
    8. 'obei' → logprob: -12.000274658203125
    9. 'abei' → logprob: -12.875274658203125
    10. 'бей' → logprob: -13.875274658203125

Token 71: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -3.6312321753939614e-05
    2. 'St' → logprob: -11.000036239624023
    3. 'Stat' → logprob: -11.375036239624023
    4. 'Sta' → logprob: -12.000036239624023
    5. 'S' → logprob: -14.375036239624023
    6. '	State' → logprob: -14.750036239624023
    7. '_State' → logprob: -15.750036239624023
    8. ' State' → logprob: -15.875036239624023
    9. 'state' → logprob: -16.000036239624023
    10. '<State' → logprob: -16.000036239624023

Token 72: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.7768652439117432
    2. ':' → logprob: -1.1518652439117432
    3. '):' → logprob: -1.5268652439117432
    4. ''):' → logprob: -5.526865005493164
    5. ')' → logprob: -6.526865005493164
    6. ']:' → logprob: -7.526865005493164
    7. ''' → logprob: -8.151865005493164
    8. '   ' → logprob: -9.401865005493164
    9. '':'' → logprob: -9.776865005493164
    10. '')' → logprob: -10.026865005493164

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10123752802610397
    2. ':' → logprob: -2.3512375354766846
    3. ':
' → logprob: -8.101237297058105
    4. ',' → logprob: -8.726237297058105
    5. ' :' → logprob: -8.726237297058105
    6. '   ' → logprob: -8.976237297058105
    7. '):' → logprob: -9.476237297058105
    8. '    ' → logprob: -9.976237297058105
    9. '```' → logprob: -10.101237297058105
    10. '      ' → logprob: -10.851237297058105

Token 74: ' """' (ID: 9280)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.1471104919910431
    2. 'new' → logprob: -2.5221104621887207
    3. '       ' → logprob: -3.5221104621887207
    4. 'result' → logprob: -4.647110462188721
    5. '        ' → logprob: -5.272110462188721
    6. ' flipped' → logprob: -5.522110462188721
    7. ' result' → logprob: -5.897110462188721
    8. ' grid' → logprob: -6.647110462188721
    9. 'grid' → logprob: -7.022110462188721
    10. ' rows' → logprob: -7.522110462188721

Token 75: 'Return' (ID: 8191)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5921435356140137
    2. ' new' → logprob: -1.3421435356140137
    3. 'new' → logprob: -2.5921435356140137
    4. '```' → logprob: -3.3421435356140137
    5. ' flipped' → logprob: -3.9671435356140137
    6. 'result' → logprob: -4.217143535614014
    7. 'grid' → logprob: -4.967143535614014
    8. ' grid' → logprob: -5.217143535614014
    9. '
' → logprob: -5.217143535614014
    10. '        ' → logprob: -5.717143535614014

Token 76: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17262569069862366
    2. ' a' → logprob: -1.9226256608963013
    3. '<|end|>' → logprob: -4.797625541687012
    4. ' new' → logprob: -6.547625541687012
    5. '<|end|>' → logprob: -7.297625541687012
    6. '  ' → logprob: -7.297625541687012
    7. ' Sen' → logprob: -7.422625541687012
    8. ' an' → logprob: -8.547625541687012
    9. 'a' → logprob: -9.047625541687012
    10. ' the' → logprob: -9.672625541687012

Token 77: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.001467249938286841
    2. 'new' → logprob: -7.126467227935791
    3. ' copy' → logprob: -7.626467227935791
    4. ' ' → logprob: -9.00146770477295
    5. 'n' → logprob: -10.25146770477295
    6. ' n' → logprob: -11.37646770477295
    7. ' deepcopy' → logprob: -13.12646770477295
    8. ' Sen' → logprob: -14.12646770477295
    9. ' list' → logprob: -14.25146770477295
    10. ' copied' → logprob: -14.75146770477295

Token 78: ' state' (ID: 2608)
  Prédit: ' Sen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Sen' → logprob: -0.13236264884471893
    2. ' ' → logprob: -2.8823626041412354
    3. 'Sen' → logprob: -3.1323626041412354
    4. '<|end|>' → logprob: -3.7573626041412354
    5. '<|end|>' → logprob: -8.007362365722656
    6. ' sen' → logprob: -8.132362365722656
    7. ' ' → logprob: -9.007362365722656
    8. '_' → logprob: -9.257362365722656
    9. ' space' → logprob: -10.257362365722656
    10. ' `' → logprob: -10.632362365722656

Token 79: ' with' (ID: 483)
  Prédit: ' where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' where' → logprob: -0.43476155400276184
    2. ' with' → logprob: -1.0597615242004395
    3. '       ' → logprob: -6.5597615242004395
    4. '        ' → logprob: -7.1847615242004395
    5. '<|end|>' → logprob: -7.1847615242004395
    6. 'where' → logprob: -7.4347615242004395
    7. ' that' → logprob: -7.8097615242004395
    8. '    ' → logprob: -7.9347615242004395
    9. 'with' → logprob: -7.9347615242004395
    10. '   ' → logprob: -8.059762001037598

Token 80: ' rows' (ID: 13585)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0754307508468628
    2. ' rows' → logprob: -1.0754307508468628
    3. ' all' → logprob: -1.4504307508468628
    4. ' a' → logprob: -3.7004308700561523
    5. ' flipped' → logprob: -3.9504308700561523
    6. ' ' → logprob: -3.9504308700561523
    7. ' grid' → logprob: -4.950430870056152
    8. ' each' → logprob: -5.700430870056152
    9. '   ' → logprob: -5.825430870056152
    10. 'rows' → logprob: -6.950430870056152

Token 81: ' flipped' (ID: 96664)
  Prédit: ' flipped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flipped' → logprob: -0.025245286524295807
    2. 'fl' → logprob: -3.900245189666748
    3. '<|end|>' → logprob: -6.775245189666748
    4. '_fl' → logprob: -6.900245189666748
    5. '   ' → logprob: -7.025245189666748
    6. '	fl' → logprob: -8.275245666503906
    7. ' togg' → logprob: -8.400245666503906
    8. ' fl' → logprob: -8.775245666503906
    9. ' with' → logprob: -9.150245666503906
    10. ' that' → logprob: -9.150245666503906

Token 82: ' according' (ID: 7065)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3070160150527954
    2. ',' → logprob: -2.057015895843506
    3. ' according' → logprob: -2.057015895843506
    4. '   ' → logprob: -2.307015895843506
    5. '       ' → logprob: -2.307015895843506
    6. ')' → logprob: -2.682015895843506
    7. ' as' → logprob: -3.057015895843506
    8. ' at' → logprob: -3.557015895843506
    9. '<|end|>' → logprob: -4.182015895843506
    10. '```' → logprob: -4.307015895843506

Token 83: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.05370406433939934
    2. 'to' → logprob: -3.053704023361206
    3. '<|end|>' → logprob: -5.303704261779785
    4. 'ly' → logprob: -9.803704261779785
    5. ' ' → logprob: -10.553704261779785
    6. '_to' → logprob: -11.053704261779785
    7. '<|end|>' → logprob: -11.428704261779785
    8. 'To' → logprob: -11.928704261779785
    9. ')' → logprob: -12.553704261779785
    10. 't' → logprob: -12.928704261779785

Token 84: ' flip' (ID: 29130)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4859127998352051
    2. ' flip' → logprob: -0.9859127998352051
    3. 'flip' → logprob: -4.860912799835205
    4. 'the' → logprob: -5.985912799835205
    5. ' which' → logprob: -7.485912799835205
    6. ' this' → logprob: -8.110912322998047
    7. ' ' → logprob: -9.110912322998047
    8. ' flipped' → logprob: -9.235912322998047
    9. ' `' → logprob: -9.610912322998047
    10. '_flip' → logprob: -9.860912322998047

Token 85: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.0074125854298472404
    2. '_' → logprob: -5.007412433624268
    3. '_m' → logprob: -7.507412433624268
    4. ' _' → logprob: -9.382412910461426
    5. '_masks' → logprob: -10.882412910461426
    6. '   ' → logprob: -11.882412910461426
    7. '_MASK' → logprob: -11.882412910461426
    8. '_
' → logprob: -12.507412910461426
    9. 's' → logprob: -12.507412910461426
    10. '_map' → logprob: -12.757412910461426

Token 86: ' bits' (ID: 18189)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4920021891593933
    2. ':' → logprob: -0.9920021891593933
    3. '       ' → logprob: -4.742002010345459
    4. ' :' → logprob: -5.492002010345459
    5. ')' → logprob: -6.242002010345459
    6. '.' → logprob: -7.867002010345459
    7. ',' → logprob: -7.867002010345459
    8. '   ' → logprob: -7.867002010345459
    9. '```' → logprob: -7.867002010345459
    10. ' ):' → logprob: -8.117002487182617

Token 87: '."""
' (ID: 33044)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.36174389719963074
    2. ':' → logprob: -1.2367439270019531
    3. ')' → logprob: -5.736743927001953
    4. '       ' → logprob: -5.861743927001953
    5. ' :' → logprob: -6.111743927001953
    6. ' ):' → logprob: -6.486743927001953
    7. ',' → logprob: -6.986743927001953
    8. '.' → logprob: -6.986743927001953
    9. '```' → logprob: -8.111743927001953
    10. '):
' → logprob: -8.736743927001953

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004353217780590057
    2. '
' → logprob: -7.129353046417236
    3. ' new' → logprob: -7.379353046417236
    4. 'new' → logprob: -7.629353046417236
    5. '```' → logprob: -7.629353046417236
    6. '        
' → logprob: -8.004353523254395
    7. 'n' → logprob: -8.129353523254395
    8. '        ' → logprob: -8.254353523254395
    9. ',' → logprob: -8.379353523254395
    10. ':' → logprob: -8.504353523254395

Token 89: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.09118666499853134
    2. 'new' (adapté à ' new') → logprob: -3.091186761856079
    3. '       ' → logprob: -3.466186761856079
    4. ' n' → logprob: -6.2161865234375
    5. '        ' → logprob: -6.4661865234375
    6. ' flipped' → logprob: -6.5911865234375
    7. 'n' → logprob: -6.7161865234375
    8. 'fl' → logprob: -7.0911865234375
    9. ' result' → logprob: -7.7161865234375
    10. '
' → logprob: -7.7161865234375

Token 90: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.2559029459953308
    2. '_' → logprob: -1.5059030055999756
    3. 'grid' → logprob: -6.3809027671813965
    4. ' _' → logprob: -6.8809027671813965
    5. ' =' → logprob: -7.0059027671813965
    6. '_rows' → logprob: -8.880903244018555
    7. '_gr' → logprob: -9.755903244018555
    8. ' grid' → logprob: -11.005903244018555
    9. '_g' → logprob: -11.130903244018555
    10. 'Grid' → logprob: -11.255903244018555

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029754308983683586
    2. '=' → logprob: -3.529754400253296
    3. '=[]' → logprob: -13.154754638671875
    4. '[:]' → logprob: -14.654754638671875
    5. ' =
' → logprob: -15.029754638671875
    6. ' ' → logprob: -15.029754638671875
    7. ' =[' → logprob: -15.029754638671875
    8. '[' → logprob: -15.529754638671875
    9. '   ' → logprob: -16.404754638671875
    10. '[]' → logprob: -16.904754638671875

Token 92: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.9921636581420898
    2. '[' → logprob: -1.3671636581420898
    3. ' [' → logprob: -1.3671636581420898
    4. '[self' → logprob: -2.74216365814209
    5. '[
' → logprob: -3.11716365814209
    6. ' []' → logprob: -4.99216365814209
    7. '[[' → logprob: -6.86716365814209
    8. '[]
' → logprob: -7.86716365814209
    9. '[len' → logprob: -7.99216365814209
    10. '[row' → logprob: -8.11716365814209

Token 93: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6625367999076843
    2. '       ' → logprob: -0.7875367999076843
    3. 'for' → logprob: -3.912536859512329
    4. ' ' → logprob: -5.03753662109375
    5. '   ' → logprob: -6.66253662109375
    6. ')' → logprob: -7.78753662109375
    7. '    ' → logprob: -8.03753662109375
    8. '	for' → logprob: -8.28753662109375
    9. '        ' → logprob: -9.03753662109375
    10. '  ' → logprob: -9.16253662109375

Token 94: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2533542215824127
    2. 'for' (adapté à ' for') → logprob: -1.5033541917800903
    3. '       ' → logprob: -6.753354072570801
    4. ' ' → logprob: -8.6283540725708
    5. '    ' → logprob: -10.6283540725708
    6. '        ' → logprob: -10.7533540725708
    7. '   ' → logprob: -11.5033540725708
    8. '	for' → logprob: -11.6283540725708
    9. ' ' → logprob: -11.7533540725708
    10. '  ' → logprob: -13.0033540725708

Token 95: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.43482500314712524
    2. 'r' → logprob: -1.0598249435424805
    3. ' i' → logprob: -5.8098249435424805
    4. ' row' → logprob: -6.5598249435424805
    5. 'i' → logprob: -6.6848249435424805
    6. 'row' → logprob: -7.8098249435424805
    7. '	r' → logprob: -11.30982494354248
    8. '   ' → logprob: -11.43482494354248
    9. ' ' → logprob: -12.55982494354248
    10. '```' → logprob: -13.05982494354248

Token 96: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018690871074795723
    2. 'in' → logprob: -4.143691062927246
    3. ' ' → logprob: -6.018691062927246
    4. '	in' → logprob: -9.643691062927246
    5. ' i' → logprob: -9.768691062927246
    6. ',' → logprob: -11.018691062927246
    7. '  ' → logprob: -11.268691062927246
    8. '0' → logprob: -11.518691062927246
    9. 'n' → logprob: -11.643691062927246
    10. '	' → logprob: -11.893691062927246

Token 97: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20143437385559082
    2. ' range' → logprob: -1.7014343738555908
    3. 'ange' → logprob: -11.201434135437012
    4. '   ' → logprob: -12.951434135437012
    5. ' ' → logprob: -13.451434135437012
    6. 'self' → logprob: -13.826434135437012
    7. '	range' → logprob: -13.951434135437012
    8. '(range' → logprob: -14.701434135437012
    9. '  ' → logprob: -15.201434135437012
    10. 'rang' → logprob: -15.326434135437012

Token 98: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.939851037808694e-05
    2. '(' → logprob: -10.500029563903809
    3. 'self' → logprob: -13.500029563903809
    4. '(s' → logprob: -15.500029563903809
    5. ' self' → logprob: -16.125028610229492
    6. '(
' → logprob: -17.125028610229492
    7. '(len' → logprob: -17.750028610229492
    8. '(sel' → logprob: -19.000028610229492
    9. '	self' → logprob: -19.500028610229492
    10. ' (' → logprob: -19.625028610229492

Token 99: '.R' (ID: 3395)
  Prédit: '.R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.R' → logprob: -0.013932538218796253
    2. '.' → logprob: -4.388932704925537
    3. 'R' → logprob: -7.763932704925537
    4. ' .' → logprob: -8.013932228088379
    5. ')' → logprob: -8.388932228088379
    6. ').' → logprob: -9.138932228088379
    7. '.r' → logprob: -9.763932228088379
    8. 'self' → logprob: -9.763932228088379
    9. '   ' → logprob: -10.013932228088379
    10. ' ' → logprob: -10.263932228088379

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12777067720890045
    2. '):
' → logprob: -2.1277706623077393
    3. ' ):' → logprob: -7.627770900726318
    4. ')' → logprob: -8.25277042388916
    5. ' ):
' → logprob: -10.00277042388916
    6. ':' → logprob: -10.75277042388916
    7. '       ' → logprob: -11.50277042388916
    8. '):
' → logprob: -11.50277042388916
    9. '   ' → logprob: -13.00277042388916
    10. ',' → logprob: -13.25277042388916

Token 101: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9657887816429138
    2. ':' → logprob: -1.3407888412475586
    3. '       ' → logprob: -1.3407888412475586
    4. '        ' → logprob: -3.3407888412475586
    5. ' if' → logprob: -3.4657888412475586
    6. ' ' → logprob: -4.715788841247559
    7. ':
' → logprob: -5.215788841247559
    8. '   ' → logprob: -5.840788841247559
    9. ' :' → logprob: -5.965788841247559
    10. ',' → logprob: -6.215788841247559

Token 102: ' flip' (ID: 29130)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.37275460362434387
    2. '           ' → logprob: -1.8727545738220215
    3. 'if' → logprob: -1.8727545738220215
    4. ' new' → logprob: -6.6227545738220215
    5. 'new' → logprob: -7.1227545738220215
    6. ' row' → logprob: -7.3727545738220215
    7. 'row' → logprob: -7.6227545738220215
    8. '       ' → logprob: -8.37275505065918
    9. '               ' → logprob: -8.99775505065918
    10. '   ' → logprob: -10.24775505065918

Token 103: ' =' (ID: 314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5340442061424255
    2. 'ped' → logprob: -2.1590442657470703
    3. ' =' → logprob: -2.2840442657470703
    4. '_mask' → logprob: -2.4090442657470703
    5. '_row' → logprob: -3.2840442657470703
    6. 'ed' → logprob: -3.6590442657470703
    7. '_bit' → logprob: -4.40904426574707
    8. '_' → logprob: -4.65904426574707
    9. '       ' → logprob: -4.78404426574707
    10. '=' → logprob: -5.78404426574707

Token 104: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.31611689925193787
    2. '(f' → logprob: -1.3161169290542603
    3. ' ((' → logprob: -7.066116809844971
    4. ' flip' → logprob: -7.191116809844971
    5. '           ' → logprob: -7.941116809844971
    6. ' bool' → logprob: -8.316117286682129
    7. '((' → logprob: -8.566117286682129
    8. 'flip' → logprob: -8.816117286682129
    9. '   ' → logprob: -9.066117286682129
    10. 'bool' → logprob: -9.441117286682129

Token 105: 'flip' (ID: 78091)
  Prédit: 'flip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flip' → logprob: -0.018510080873966217
    2. '(f' → logprob: -4.143509864807129
    3. ' flip' → logprob: -6.018509864807129
    4. ' (' → logprob: -10.768509864807129
    5. 'f' → logprob: -11.518509864807129
    6. '(fl' → logprob: -13.268509864807129
    7. '.flip' → logprob: -13.643509864807129
    8. '   ' → logprob: -13.893509864807129
    9. '_flip' → logprob: -13.893509864807129
    10. 'fl' → logprob: -13.893509864807129

Token 106: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -5.512236498361744e-07
    2. 'mask' → logprob: -15.125000953674316
    3. '_MASK' → logprob: -15.750000953674316
    4. ' mask' → logprob: -18.375
    5. 'Mask' → logprob: -18.375
    6. '_m' → logprob: -18.375
    7. '_masks' → logprob: -18.5
    8. '_' → logprob: -18.625
    9. '(mask' → logprob: -19.0
    10. '```' → logprob: -19.375

Token 107: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.6368717551231384
    2. ' &' → logprob: -1.3868718147277832
    3. ' >>' → logprob: -1.5118718147277832
    4. '&' → logprob: -7.511871814727783
    5. ' ' → logprob: -9.261871337890625
    6. ' ' → logprob: -10.261871337890625
    7. '>' → logprob: -12.011871337890625
    8. '>>&' → logprob: -12.386871337890625
    9. '	' → logprob: -13.011871337890625
    10. '>>(' → logprob: -13.136871337890625

Token 108: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.011047935113310814
    2. ' r' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.76104736328125
    4. '```' → logprob: -17.51104736328125
    5. '   ' → logprob: -17.63604736328125
    6. '	r' → logprob: -17.76104736328125
    7. ')' → logprob: -18.13604736328125
    8. '_r' → logprob: -18.13604736328125
    9. '(r' → logprob: -19.51104736328125
    10. '
' → logprob: -20.38604736328125

Token 109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.6789137084269896e-05
    2. ')&' → logprob: -10.87503719329834
    3. ' )' → logprob: -11.12503719329834
    4. '&' → logprob: -13.62503719329834
    5. '1' → logprob: -14.00003719329834
    6. '')' → logprob: -15.75003719329834
    7. '")' → logprob: -15.87503719329834
    8. '

' → logprob: -16.250036239624023
    9. '           ' → logprob: -16.250036239624023
    10. ' &' → logprob: -16.500036239624023

Token 110: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00801222026348114
    2. '&' → logprob: -5.508012294769287
    3. ')&' → logprob: -6.133012294769287
    4. ' &' → logprob: -6.508012294769287
    5. ' )' → logprob: -8.258011817932129
    6. '&)' → logprob: -12.883011817932129
    7. ' &)' → logprob: -13.758011817932129
    8. '&amp' → logprob: -14.258011817932129
    9. '1' → logprob: -15.258011817932129
    10. '")' → logprob: -15.758011817932129

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01814994215965271
    2. ' ' → logprob: -4.0181498527526855
    3. '   ' → logprob: -17.268150329589844
    4. '0' → logprob: -18.393150329589844
    5. ' ' → logprob: -19.268150329589844
    6. '  ' → logprob: -19.768150329589844
    7. '
' → logprob: -20.268150329589844
    8. '' → logprob: -20.518150329589844
    9. '`' → logprob: -20.768150329589844
    10. '	' → logprob: -21.143150329589844

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -18.000024795532227
    4. '0' → logprob: -18.625024795532227
    5. '
' → logprob: -19.500024795532227
    6. '

' → logprob: -19.875024795532227
    7. '```' → logprob: -19.875024795532227
    8. '`' → logprob: -20.187524795532227
    9. '01' → logprob: -20.437524795532227
    10. '  ' → logprob: -20.750024795532227

Token 113: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01961533911526203
    2. '           ' → logprob: -4.394615173339844
    3. '       ' → logprob: -5.394615173339844
    4. '<|end|>' → logprob: -7.269615173339844
    5. ' ==' → logprob: -7.769615173339844
    6. ' 
' → logprob: -8.019615173339844
    7. '
' → logprob: -8.269615173339844
    8. ' if' → logprob: -9.019615173339844
    9. '  
' → logprob: -9.019615173339844
    10. '            
' → logprob: -9.269615173339844

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10059169679880142
    2. '
' → logprob: -2.6005916595458984
    3. '       ' → logprob: -3.9755916595458984
    4. '            
' → logprob: -6.975591659545898
    5. ' if' → logprob: -7.850591659545898
    6. '  
' → logprob: -8.100591659545898
    7. ' 
' → logprob: -8.350591659545898
    8. '   ' → logprob: -8.600591659545898
    9. '    
' → logprob: -9.100591659545898
    10. '<|end|>' → logprob: -9.225591659545898

Token 115: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19795380532741547
    2. 'if' (adapté à ' if') → logprob: -2.322953701019287
    3. ' row' → logprob: -3.197953701019287
    4. ' new' → logprob: -3.697953701019287
    5. 'row' → logprob: -5.072953701019287
    6. '           ' → logprob: -5.072953701019287
    7. 'new' → logprob: -6.072953701019287
    8. '       ' → logprob: -6.822953701019287
    9. ' current' → logprob: -10.822954177856445
    10. '   ' → logprob: -11.947954177856445

Token 116: ' flip' (ID: 29130)
  Prédit: ' flip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flip' → logprob: -0.05538295954465866
    2. 'flip' → logprob: -2.9303829669952393
    3. ' not' → logprob: -7.68038272857666
    4. 'not' → logprob: -10.68038272857666
    5. ' self' → logprob: -12.43038272857666
    6. '   ' → logprob: -12.55538272857666
    7. 'self' → logprob: -12.93038272857666
    8. ' ' → logprob: -13.55538272857666
    9. '    ' → logprob: -13.80538272857666
    10. '.flip' → logprob: -14.18038272857666

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.056338146328926086
    2. ':
' → logprob: -3.05633807182312
    3. ' ==' → logprob: -5.306338310241699
    4. '==' → logprob: -5.931338310241699
    5. ':

' → logprob: -10.4313383102417
    6. ' :' → logprob: -11.0563383102417
    7. '=' → logprob: -11.1813383102417
    8. ' else' → logprob: -11.3063383102417
    9. 'else' → logprob: -11.9313383102417
    10. '           ' → logprob: -12.0563383102417

Token 118: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1077183485031128
    2. ' new' → logprob: -1.1077183485031128
    3. '               ' → logprob: -1.4827183485031128
    4. 'new' → logprob: -3.2327184677124023
    5. ':
' → logprob: -3.2327184677124023
    6. ':' → logprob: -3.9827184677124023
    7. '):
' → logprob: -5.357718467712402
    8. ',' → logprob: -5.857718467712402
    9. ')' → logprob: -6.107718467712402
    10. ' row' → logprob: -6.857718467712402

Token 119: ' #' (ID: 1069)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.35410863161087036
    2. 'new' → logprob: -1.2291085720062256
    3. '           ' → logprob: -5.354108810424805
    4. 'row' → logprob: -7.979108810424805
    5. ' row' → logprob: -8.354108810424805
    6. '               ' → logprob: -8.979108810424805
    7. '   ' → logprob: -9.479108810424805
    8. ' reversed' → logprob: -10.229108810424805
    9. ')new' → logprob: -10.854108810424805
    10. '	new' → logprob: -10.979108810424805

Token 120: ' Flip' (ID: 61962)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.44310691952705383
    2. 'new' → logprob: -1.0681068897247314
    3. 'row' → logprob: -4.9431071281433105
    4. ' row' → logprob: -5.4431071281433105
    5. '           ' → logprob: -6.8181071281433105
    6. 're' → logprob: -7.9431071281433105
    7. ' reversed' → logprob: -7.9431071281433105
    8. '   ' → logprob: -8.443106651306152
    9. ' flipped' → logprob: -8.443106651306152
    10. 'fl' → logprob: -8.568106651306152

Token 121: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6653940081596375
    2. ' self' → logprob: -2.1653940677642822
    3. ' the' → logprob: -2.4153940677642822
    4. ' new' → logprob: -2.4153940677642822
    5. 'row' → logprob: -2.6653940677642822
    6. 'new' → logprob: -3.1653940677642822
    7. '           ' → logprob: -3.1653940677642822
    8. ' row' → logprob: -3.6653940677642822
    9. 'the' → logprob: -5.165393829345703
    10. '               ' → logprob: -5.665393829345703

Token 122: ' entire' (ID: 6508)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3038327693939209
    2. 'row' → logprob: -2.928832769393921
    3. ' grid' → logprob: -2.928832769393921
    4. ' self' → logprob: -2.928832769393921
    5. 'grid' → logprob: -3.053832769393921
    6. ' row' → logprob: -3.553832769393921
    7. 'r' → logprob: -4.3038330078125
    8. ' entire' → logprob: -5.8038330078125
    9. '   ' → logprob: -6.5538330078125
    10. '[self' → logprob: -6.5538330078125

Token 123: ' row' (ID: 5225)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06673017144203186
    2. ' self' → logprob: -3.066730260848999
    3. 'row' → logprob: -4.44173002243042
    4. '[self' → logprob: -5.94173002243042
    5. ' row' → logprob: -6.56673002243042
    6. 'grid' → logprob: -6.56673002243042
    7. ' grid' → logprob: -8.566730499267578
    8. 'C' → logprob: -9.316730499267578
    9. '[' → logprob: -9.816730499267578
    10. 'list' → logprob: -9.941730499267578

Token 124: ':' (ID: 25)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.049451377242803574
    2. ' =' → logprob: -3.2994513511657715
    3. '[:]' → logprob: -5.1744513511657715
    4. '[' → logprob: -6.1744513511657715
    5. ' [' → logprob: -6.9244513511657715
    6. 'new' → logprob: -7.5494513511657715
    7. 're' → logprob: -8.29945182800293
    8. '       ' → logprob: -8.54945182800293
    9. 'row' → logprob: -8.67445182800293
    10. '           ' → logprob: -8.79945182800293

Token 125: ' ' (ID: 220)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5007739663124084
    2. 'self' → logprob: -1.0007739067077637
    3. ' new' → logprob: -5.000773906707764
    4. ' list' → logprob: -5.750773906707764
    5. ' [' → logprob: -5.750773906707764
    6. '[self' → logprob: -5.750773906707764
    7. 'list' → logprob: -5.875773906707764
    8. '           ' → logprob: -6.000773906707764
    9. 'new' → logprob: -6.125773906707764
    10. '[' → logprob: -6.375773906707764

Token 126: '0' (ID: 15)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06216183677315712
    2. '[self' → logprob: -3.187161922454834
    3. ' self' → logprob: -4.312161922454834
    4. 'list' → logprob: -5.437161922454834
    5. '[' → logprob: -7.437161922454834
    6. ' [' → logprob: -8.187161445617676
    7. ' list' → logprob: -9.312161445617676
    8. 'new' → logprob: -9.687161445617676
    9. '[list' → logprob: -10.062161445617676
    10. '1' → logprob: -10.437161445617676

Token 127: ' ->' (ID: 2747)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.36748945713043213
    2. '[::-' → logprob: -2.3674893379211426
    3. '               ' → logprob: -3.3674893379211426
    4. ' for' → logprob: -3.3674893379211426
    5. '           ' → logprob: -3.7424893379211426
    6. '][' → logprob: -3.8674893379211426
    7. ',' → logprob: -3.9924893379211426
    8. 'if' → logprob: -4.367489337921143
    9. ']' → logprob: -4.367489337921143
    10. '[' → logprob: -4.742489337921143

Token 128: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02324605919420719
    2. ' ' → logprob: -3.7732460498809814
    3. '
' → logprob: -15.273245811462402
    4. '   ' → logprob: -15.273245811462402
    5. '           ' → logprob: -17.27324676513672
    6. '  ' → logprob: -17.39824676513672
    7. ' ' → logprob: -17.39824676513672
    8. '

' → logprob: -18.08574676513672
    9. '0' → logprob: -18.08574676513672
    10. '```' → logprob: -18.33574676513672

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '
' → logprob: -18.750024795532227
    4. '255' → logprob: -19.375024795532227
    5. '   ' → logprob: -19.500024795532227
    6. '0' → logprob: -19.500024795532227
    7. '<|end|>' → logprob: -19.500024795532227
    8. '  ' → logprob: -19.937524795532227
    9. '9' → logprob: -20.437524795532227
    10. '

' → logprob: -20.500024795532227

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015423336997628212
    2. '               ' → logprob: -4.64042329788208
    3. '           ' → logprob: -6.01542329788208
    4. ' and' → logprob: -6.76542329788208
    5. ' else' → logprob: -7.26542329788208
    6. ',
' → logprob: -7.51542329788208
    7. ' ,' → logprob: -8.390423774719238
    8. '
' → logprob: -8.640423774719238
    9. 'else' → logprob: -8.640423774719238
    10. ',new' → logprob: -10.390423774719238

Token 131: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2392493486404419
    2. '1' → logprob: -1.739249348640442
    3. '               ' → logprob: -3.7392492294311523
    4. '0' → logprob: -5.114249229431152
    5. ' new' → logprob: -6.364249229431152
    6. ' [' → logprob: -6.489249229431152
    7. '[' → logprob: -6.989249229431152
    8. ' for' → logprob: -7.364249229431152
    9. '                ' → logprob: -7.364249229431152
    10. 'new' → logprob: -7.739249229431152

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8219583075260743e-05
    2. ' ' → logprob: -10.500038146972656
    3. '               ' → logprob: -11.625038146972656
    4. '           ' → logprob: -14.750038146972656
    5. '                   ' → logprob: -14.750038146972656
    6. '                ' → logprob: -15.500038146972656
    7. '   ' → logprob: -15.625038146972656
    8. '              ' → logprob: -16.000038146972656
    9. '                 ' → logprob: -16.250038146972656
    10. '0' → logprob: -16.625038146972656

Token 133: ' ->' (ID: 2747)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.1130186319351196
    2. '-' → logprob: -1.6130186319351196
    3. '->' → logprob: -1.8630186319351196
    4. ')' → logprob: -2.11301851272583
    5. ',' → logprob: -2.86301851272583
    6. ' ->' → logprob: -2.98801851272583
    7. '           ' → logprob: -3.98801851272583
    8. 'else' → logprob: -4.36301851272583
    9. '
' → logprob: -5.11301851272583
    10. ']' → logprob: -5.11301851272583

Token 134: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0059290360659360886
    2. ' ' → logprob: -5.130928993225098
    3. '   ' → logprob: -15.255928993225098
    4. '  ' → logprob: -16.130929946899414
    5. '```' → logprob: -17.255929946899414
    6. ' ' → logprob: -17.693429946899414
    7. '1' → logprob: -18.068429946899414
    8. '    ' → logprob: -18.443429946899414
    9. '۰' → logprob: -18.755929946899414
    10. '
' → logprob: -19.130929946899414

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.125045776367188
    4. '```' → logprob: -19.125045776367188
    5. '۰' → logprob: -19.375045776367188
    6. '  ' → logprob: -19.500045776367188
    7. '1' → logprob: -20.000045776367188
    8. '-' → logprob: -20.250045776367188
    9. ')' → logprob: -21.000045776367188
    10. '０' → logprob: -21.937545776367188

Token 136: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39173927903175354
    2. '           ' → logprob: -1.2667392492294312
    3. '
' → logprob: -3.7667393684387207
    4. '[::-' → logprob: -4.766739368438721
    5. 'new' → logprob: -5.641739368438721
    6. ',' → logprob: -6.391739368438721
    7. ')' → logprob: -6.641739368438721
    8. ' new' → logprob: -7.391739368438721
    9. '[' → logprob: -7.641739368438721
    10. 'row' → logprob: -7.891739368438721

Token 137: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.44649481773376465
    2. ' new' → logprob: -1.5714948177337646
    3. '           ' → logprob: -2.0714948177337646
    4. 'new' → logprob: -3.6964948177337646
    5. ',' → logprob: -7.571495056152344
    6. ')' → logprob: -8.196495056152344
    7. ',new' → logprob: -8.696495056152344
    8. '[new' → logprob: -8.696495056152344
    9. ' row' → logprob: -9.071495056152344
    10. '[::-' → logprob: -9.821495056152344

Token 138: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.25642573833465576
    2. ' new' → logprob: -1.5064257383346558
    3. '           ' → logprob: -6.006425857543945
    4. 'row' → logprob: -7.006425857543945
    5. '               ' → logprob: -7.631425857543945
    6. '   ' → logprob: -8.506425857543945
    7. ' row' → logprob: -8.631425857543945
    8. '[new' → logprob: -9.131425857543945
    9. '       ' → logprob: -9.756425857543945
    10. '[' → logprob: -11.006425857543945

Token 139: '_row' (ID: 19157)
  Prédit: '_grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.22687344253063202
    2. '_row' → logprob: -1.6018733978271484
    3. 'row' → logprob: -7.726873397827148
    4. 'new' → logprob: -7.851873397827148
    5. '_' → logprob: -8.226873397827148
    6. 'grid' → logprob: -8.601873397827148
    7. ' ' → logprob: -10.101873397827148
    8. '_line' → logprob: -10.226873397827148
    9. '
' → logprob: -11.351873397827148
    10. ' _' → logprob: -11.476873397827148

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014171624556183815
    2. '=' → logprob: -4.264171600341797
    3. '           ' → logprob: -12.764171600341797
    4. '.append' → logprob: -13.389171600341797
    5. ' =[' → logprob: -14.014171600341797
    6. '[' → logprob: -14.514171600341797
    7. '=[' → logprob: -14.514171600341797
    8. ' ' → logprob: -14.764171600341797
    9. ' [' → logprob: -15.639171600341797
    10. '        ' → logprob: -15.764171600341797

Token 141: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.038178738206624985
    2. ' [' → logprob: -3.2881786823272705
    3. '[self' → logprob: -9.663178443908691
    4. '[(' → logprob: -9.788178443908691
    5. '[int' → logprob: -12.538178443908691
    6. '   ' → logprob: -12.913178443908691
    7. '[len' → logprob: -12.913178443908691
    8. '[row' → logprob: -13.538178443908691
    9. ' [(' → logprob: -13.663178443908691
    10. '[
' → logprob: -13.913178443908691

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006444069440476596
    2. ' ' → logprob: -7.625644207000732
    3. '(' → logprob: -9.87564468383789
    4. '           ' → logprob: -10.00064468383789
    5. '0' → logprob: -11.00064468383789
    6. '   ' → logprob: -11.50064468383789
    7. '               ' → logprob: -11.50064468383789
    8. ' (' → logprob: -12.12564468383789
    9. '
' → logprob: -12.62564468383789
    10. '                   ' → logprob: -12.62564468383789

Token 143: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07900997251272202
    2. '-' → logprob: -2.579010009765625
    3. '-x' → logprob: -9.829010009765625
    4. '-v' → logprob: -10.579010009765625
    5. ' ^' → logprob: -10.954010009765625
    6. '-c' → logprob: -11.204010009765625
    7. '-val' → logprob: -12.579010009765625
    8. '-g' → logprob: -13.454010009765625
    9. '^' → logprob: -13.579010009765625
    10. ' ' → logprob: -14.079010009765625

Token 144: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.29424983263015747
    2. 'self' → logprob: -1.4192497730255127
    3. ' cell' → logprob: -5.294250011444092
    4. 'val' → logprob: -5.919250011444092
    5. 'v' → logprob: -6.169250011444092
    6. 'x' → logprob: -6.169250011444092
    7. ' self' → logprob: -7.669250011444092
    8. 'c' → logprob: -8.294249534606934
    9. 'bit' → logprob: -8.294249534606934
    10. 'value' → logprob: -10.169249534606934

Token 145: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.001516768941655755
    2. 'for' → logprob: -6.501516819000244
    3. ' ' → logprob: -11.626516342163086
    4. ' if' → logprob: -12.626516342163086
    5. '[cell' → logprob: -14.376516342163086
    6. '	for' → logprob: -14.751516342163086
    7. ']' → logprob: -14.876516342163086
    8. '           ' → logprob: -15.001516342163086
    9. ' cell' → logprob: -15.626516342163086
    10. ' in' → logprob: -16.376516342163086

Token 146: ' cell' (ID: 4206)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.22551479935646057
    2. 'self' → logprob: -1.6005147695541382
    3. ' row' → logprob: -10.10051441192627
    4. ' cell' → logprob: -10.97551441192627
    5. '	self' → logprob: -11.10051441192627
    6. 'row' → logprob: -11.10051441192627
    7. ' ' → logprob: -12.35051441192627
    8. '(self' → logprob: -12.60051441192627
    9. 'cell' → logprob: -13.22551441192627
    10. '  ' → logprob: -14.60051441192627

Token 147: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02653389796614647
    2. 'in' → logprob: -3.651533842086792
    3. 'self' → logprob: -8.401534080505371
    4. ' self' → logprob: -12.651534080505371
    5. ' ' → logprob: -13.776534080505371
    6. 'row' → logprob: -13.901534080505371
    7. 'new' → logprob: -14.526534080505371
    8. ']' → logprob: -14.651534080505371
    9. 's' → logprob: -14.651534080505371
    10. 'In' → logprob: -14.776534080505371

Token 148: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12695561349391937
    2. ' self' → logprob: -2.126955509185791
    3. '(self' → logprob: -11.12695598602295
    4. '	self' → logprob: -12.87695598602295
    5. '[self' → logprob: -13.12695598602295
    6. 'new' → logprob: -13.50195598602295
    7. ']' → logprob: -13.75195598602295
    8. ' ' → logprob: -13.75195598602295
    9. '   ' → logprob: -14.25195598602295
    10. 'row' → logprob: -14.25195598602295

Token 149: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.0008195152622647583
    2. 'grid' → logprob: -7.125819683074951
    3. '.' → logprob: -11.250819206237793
    4. '	grid' → logprob: -14.625819206237793
    5. ' grid' → logprob: -14.750819206237793
    6. ' .' → logprob: -14.875819206237793
    7. '.g' → logprob: -15.625819206237793
    8. '.row' → logprob: -15.875819206237793
    9. ':grid' → logprob: -16.00082015991211
    10. '(grid' → logprob: -16.37582015991211

Token 150: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -5.200166469876422e-06
    2. 'r' → logprob: -12.750004768371582
    3. '[' → logprob: -13.375004768371582
    4. ' [' → logprob: -15.125004768371582
    5. '][' → logprob: -15.875004768371582
    6. ']' → logprob: -16.0000057220459
    7. '[
' → logprob: -16.3750057220459
    8. '[row' → logprob: -16.7500057220459
    9. '```' → logprob: -17.6250057220459
    10. '[s' → logprob: -18.2500057220459

Token 151: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.023615792393684387
    2. ']' → logprob: -3.898615837097168
    3. ']]
' → logprob: -6.023615837097168
    4. ')]' → logprob: -7.648615837097168
    5. ' ]]' → logprob: -9.773615837097168
    6. '])]' → logprob: -10.773615837097168
    7. ']
' → logprob: -11.148615837097168
    8. '']]' → logprob: -11.148615837097168
    9. ']]]' → logprob: -11.148615837097168
    10. '])' → logprob: -11.398615837097168

Token 152: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006721630343236029
    2. ' else' → logprob: -7.750672340393066
    3. 'else' → logprob: -8.500672340393066
    4. ']' → logprob: -11.125672340393066
    5. '            
' → logprob: -12.000672340393066
    6. '          ' → logprob: -12.625672340393066
    7. ')' → logprob: -12.750672340393066
    8. ',' → logprob: -12.750672340393066
    9. '<|end|>' → logprob: -12.875672340393066
    10. '	       ' → logprob: -13.625672340393066

Token 153: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5131659507751465
    2. '           ' → logprob: -1.0131659507751465
    3. ' else' → logprob: -3.2631659507751465
    4. '       ' → logprob: -10.388166427612305
    5. '          ' → logprob: -11.513166427612305
    6. '	else' → logprob: -11.888166427612305
    7. '		' → logprob: -12.138166427612305
    8. '	       ' → logprob: -12.638166427612305
    9. '               ' → logprob: -13.138166427612305
    10. ')' → logprob: -13.638166427612305

Token 154: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3003411591053009
    2. ':
' → logprob: -1.4253411293029785
    3. '               ' → logprob: -4.0503411293029785
    4. '           ' → logprob: -6.6753411293029785
    5. 'new' → logprob: -8.800341606140137
    6. ',' → logprob: -10.050341606140137
    7. ' new' → logprob: -10.300341606140137
    8. ':new' → logprob: -10.300341606140137
    9. ':

' → logprob: -10.925341606140137
    10. '            ' → logprob: -12.050341606140137

Token 155: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08441315591335297
    2. 'new' → logprob: -2.8344130516052246
    3. ' new' → logprob: -3.8344130516052246
    4. '           ' → logprob: -7.459413051605225
    5. '	new' → logprob: -14.209413528442383
    6. '	           ' → logprob: -14.209413528442383
    7. '              ' → logprob: -14.334413528442383
    8. '   ' → logprob: -14.459413528442383
    9. '                   ' → logprob: -14.709413528442383
    10. ' ' → logprob: -14.709413528442383

Token 156: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.048976220190525055
    2. 'new' (adapté à ' new') → logprob: -3.048976182937622
    3. '           ' → logprob: -8.173975944519043
    4. '               ' → logprob: -9.173975944519043
    5. '            ' → logprob: -13.423975944519043
    6. '	new' → logprob: -14.923975944519043
    7. ' ' → logprob: -14.923975944519043
    8. '   ' → logprob: -15.048975944519043
    9. ' ' → logprob: -15.548975944519043
    10. '[new' → logprob: -16.17397689819336

Token 157: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.009765060618519783
    2. '_grid' → logprob: -4.759765148162842
    3. '_' → logprob: -7.009765148162842
    4. 'row' → logprob: -8.634764671325684
    5. ' _' → logprob: -11.134764671325684
    6. '_rows' → logprob: -11.134764671325684
    7. 'self' → logprob: -11.634764671325684
    8. '_cell' → logprob: -11.759764671325684
    9. '_r' → logprob: -12.634764671325684
    10. '_line' → logprob: -12.634764671325684

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25211650133132935
    2. '=' → logprob: -1.5021164417266846
    3. '.append' → logprob: -8.627116203308105
    4. ')' → logprob: -13.252116203308105
    5. '            ' → logprob: -13.377116203308105
    6. '           ' → logprob: -13.877116203308105
    7. ' ' → logprob: -14.127116203308105
    8. '=self' → logprob: -14.127116203308105
    9. '               ' → logprob: -14.627116203308105
    10. '[:]' → logprob: -14.877116203308105

Token 159: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04862552136182785
    2. ' self' → logprob: -3.0486254692077637
    3. 'list' → logprob: -10.548625946044922
    4. ' list' → logprob: -12.048625946044922
    5. '[self' → logprob: -12.048625946044922
    6. '[' → logprob: -16.798625946044922
    7. '	self' → logprob: -17.048625946044922
    8. '(self' → logprob: -17.173625946044922
    9. ' ' → logprob: -17.923625946044922
    10. '   ' → logprob: -18.298625946044922

Token 160: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.0004960790392942727
    2. '.' → logprob: -7.625495910644531
    3. ' .' → logprob: -12.500495910644531
    4. 'grid' → logprob: -13.000495910644531
    5. '.gr' → logprob: -14.375495910644531
    6. '.r' → logprob: -14.750495910644531
    7. '.g' → logprob: -15.125495910644531
    8. '	grid' → logprob: -15.125495910644531
    9. '._' → logprob: -16.00049591064453
    10. '.row' → logprob: -16.25049591064453

Token 161: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.875001907348633
    3. 'r' → logprob: -15.250001907348633
    4. '[s' → logprob: -16.125001907348633
    5. ' [' → logprob: -17.000001907348633
    6. '[
' → logprob: -17.250001907348633
    7. '   ' → logprob: -17.250001907348633
    8. '[row' → logprob: -17.500001907348633
    9. '```' → logprob: -18.625001907348633
    10. '[u' → logprob: -18.875001907348633

Token 162: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28873735666275024
    2. '[:]' → logprob: -1.6637372970581055
    3. '][:' → logprob: -3.1637372970581055
    4. '[:' → logprob: -4.0387372970581055
    5. '.copy' → logprob: -6.7887372970581055
    6. '][' → logprob: -8.788737297058105
    7. '<|end|>' → logprob: -9.288737297058105
    8. '].' → logprob: -10.663737297058105
    9. '[r' → logprob: -10.913737297058105
    10. ' ]' → logprob: -10.913737297058105

Token 163: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.004051209893077612
    2. ':' → logprob: -6.004051208496094
    3. '[:]' → logprob: -7.254051208496094
    4. ':].' → logprob: -7.879051208496094
    5. '::' → logprob: -8.629051208496094
    6. ' :]' → logprob: -9.004051208496094
    7. ':]
' → logprob: -9.004051208496094
    8. ']' → logprob: -10.129051208496094
    9. ':]

' → logprob: -11.254051208496094
    10. '[:' → logprob: -12.379051208496094

Token 164: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020253544207662344
    2. 'new' → logprob: -6.752025127410889
    3. ' new' → logprob: -7.127025127410889
    4. '       ' → logprob: -11.002025604248047
    5. '<|end|>' → logprob: -11.377025604248047
    6. ')new' → logprob: -12.127025604248047
    7. '		' → logprob: -12.502025604248047
    8. '	       ' → logprob: -13.252025604248047
    9. '          ' → logprob: -13.377025604248047
    10. ')' → logprob: -13.377025604248047

Token 165: ' new' (ID: 620)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.376372754573822
    2. 'new' (adapté à ' new') → logprob: -1.3763728141784668
    3. ' new' → logprob: -3.376372814178467
    4. '       ' → logprob: -3.626372814178467
    5. '   ' → logprob: -9.251372337341309
    6. '	new' → logprob: -9.501372337341309
    7. ')new' → logprob: -9.876372337341309
    8. '	       ' → logprob: -10.751372337341309
    9. '```' → logprob: -11.126372337341309
    10. '<|end|>' → logprob: -11.126372337341309

Token 166: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.001049242913722992
    2. '_row' → logprob: -7.001049041748047
    3. 'grid' → logprob: -9.751049041748047
    4. 'new' → logprob: -10.126049041748047
    5. 'row' → logprob: -11.001049041748047
    6. '_' → logprob: -11.626049041748047
    7. '_rows' → logprob: -12.126049041748047
    8. '.append' → logprob: -13.376049041748047
    9. '_new' → logprob: -13.501049041748047
    10. 'append' → logprob: -13.876049041748047

Token 167: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008635488338768482
    2. '.' → logprob: -4.758635520935059
    3. '.ap' → logprob: -11.508635520935059
    4. '.app' → logprob: -12.008635520935059
    5. ' .' → logprob: -12.758635520935059
    6. '.Append' → logprob: -14.508635520935059
    7. '.extend' → logprob: -15.008635520935059
    8. '.add' → logprob: -15.258635520935059
    9. 'append' → logprob: -15.633635520935059
    10. '.py' → logprob: -15.633635520935059

Token 168: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -1.9981420336989686e-05
    2. '(' → logprob: -11.250020027160645
    3. 'new' → logprob: -11.875020027160645
    4. ' new' → logprob: -16.875019073486328
    5. '(
' → logprob: -17.250019073486328
    6. ')new' → logprob: -18.500019073486328
    7. ' (' → logprob: -19.500019073486328
    8. ',new' → logprob: -19.625019073486328
    9. '(n' → logprob: -19.750019073486328
    10. '(copy' → logprob: -20.500019073486328

Token 169: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.21622464060783386
    2. 'w' → logprob: -1.7162246704101562
    3. 'row' → logprob: -4.341224670410156
    4. 'ow' → logprob: -7.091224670410156
    5. '_w' → logprob: -8.341224670410156
    6. '_grid' → logprob: -8.466224670410156
    7. 'ew' → logprob: -8.591224670410156
    8. 'new' → logprob: -8.841224670410156
    9. 'ws' → logprob: -10.841224670410156
    10. '_' → logprob: -11.966224670410156

Token 170: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006194099318236113
    2. ')
' → logprob: -5.631194114685059
    3. '       ' → logprob: -6.006194114685059
    4. ')return' → logprob: -9.131194114685059
    5. ' )' → logprob: -12.381194114685059
    6. '<|end|>' → logprob: -12.756194114685059
    7. '
' → logprob: -12.881194114685059
    8. 'return' → logprob: -12.881194114685059
    9. ')new' → logprob: -13.381194114685059
    10. ')\
' → logprob: -14.006194114685059

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013663170859217644
    2. '
' → logprob: -5.388663291931152
    3. 'return' → logprob: -5.388663291931152
    4. ' return' → logprob: -6.513663291931152
    5. '   ' → logprob: -7.138663291931152
    6. '        
' → logprob: -7.388663291931152
    7. '<|end|>' → logprob: -7.513663291931152
    8. '	' → logprob: -8.388663291931152
    9. '	return' → logprob: -8.763663291931152
    10. ')' → logprob: -9.263663291931152

Token 172: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.23206734657287598
    2. '       ' → logprob: -2.107067346572876
    3. ' return' → logprob: -2.482067346572876
    4. '	return' → logprob: -6.982067108154297
    5. '<|end|>' → logprob: -7.857067108154297
    6. '
' → logprob: -8.482067108154297
    7. '	' → logprob: -8.857067108154297
    8. '   ' → logprob: -9.732067108154297
    9. ')return' → logprob: -10.107067108154297
    10. ')' → logprob: -10.232067108154297

Token 173: ' Sen' (ID: 8675)
  Prédit: 'Sen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sen' → logprob: -0.061971161514520645
    2. ' Sen' → logprob: -2.8119711875915527
    3. 'self' → logprob: -13.311970710754395
    4. '   ' → logprob: -14.311970710754395
    5. 'Sent' → logprob: -14.436970710754395
    6. ' ' → logprob: -16.31197166442871
    7. 'Self' → logprob: -16.56197166442871
    8. ' self' → logprob: -16.68697166442871
    9. 'sen' → logprob: -16.93697166442871
    10. '  ' → logprob: -17.06197166442871

Token 174: 'bei' (ID: 36127)
  Prédit: 'bei'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bei' → logprob: -1.4855663721391466e-05
    2. 'Bei' → logprob: -11.500015258789062
    3. 'obei' → logprob: -13.625015258789062
    4. 'be' → logprob: -14.000015258789062
    5. '   ' → logprob: -14.500015258789062
    6. ' bei' → logprob: -14.625015258789062
    7. 'abei' → logprob: -14.875015258789062
    8. '```' → logprob: -15.875015258789062
    9. '       ' → logprob: -16.000015258789062
    10. 'beit' → logprob: -16.500015258789062

Token 175: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -4.320199877838604e-07
    2. 'state' → logprob: -15.0
    3. '	State' → logprob: -17.5
    4. 'ate' → logprob: -18.0
    5. '_state' → logprob: -18.375
    6. '_State' → logprob: -18.375
    7. 'e' → logprob: -18.625
    8. ' State' → logprob: -18.625
    9. '<State' → logprob: -18.75
    10. 'Sen' → logprob: -18.875

Token 176: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03063887730240822
    2. '(' → logprob: -3.5306389331817627
    3. '(
' → logprob: -7.030638694763184
    4. '(

' → logprob: -12.905638694763184
    5. ' (' → logprob: -15.155638694763184
    6. '(`' → logprob: -15.405638694763184
    7. 'self' → logprob: -15.655638694763184
    8. '       ' → logprob: -15.655638694763184
    9. '(Self' → logprob: -16.1556396484375
    10. '(s' → logprob: -16.1556396484375

Token 177: '.R' (ID: 3395)
  Prédit: '.R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.R' → logprob: -1.4736459888808895e-05
    2. 'R' → logprob: -11.500014305114746
    3. '.' → logprob: -13.000014305114746
    4. '.C' → logprob: -14.000014305114746
    5. '.r' → logprob: -14.625014305114746
    6. ' .' → logprob: -14.750014305114746
    7. 'self' → logprob: -14.875014305114746
    8. '.S' → logprob: -15.750014305114746
    9. ').' → logprob: -16.250015258789062
    10. '.B' → logprob: -18.250015258789062

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.034592388459714e-06
    2. ',
' → logprob: -13.125005722045898
    3. ' ,' → logprob: -13.125005722045898
    4. ',self' → logprob: -13.125005722045898
    5. ',

' → logprob: -18.0000057220459
    6. 'self' → logprob: -18.6250057220459
    7. '   ' → logprob: -19.6250057220459
    8. '       ' → logprob: -19.7500057220459
    9. ',
' → logprob: -21.1250057220459
    10. '‌,' → logprob: -21.2500057220459

Token 179: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006721059791743755
    2. ' self' → logprob: -5.006721019744873
    3. '       ' → logprob: -12.506721496582031
    4. 'new' → logprob: -14.381721496582031
    5. '	self' → logprob: -15.381721496582031
    6. '   ' → logprob: -15.631721496582031
    7. '(self' → logprob: -15.881721496582031
    8. ' ' → logprob: -16.13172149658203
    9. '
' → logprob: -16.25672149658203
    10. '<|end|>' → logprob: -16.25672149658203

Token 180: '.C' (ID: 2010)
  Prédit: '.C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.C' → logprob: -0.11284945160150528
    2. 'C' → logprob: -2.237849473953247
    3. ' C' → logprob: -11.487849235534668
    4. '.' → logprob: -12.487849235534668
    5. ',C' → logprob: -12.487849235534668
    6. '_C' → logprob: -13.362849235534668
    7. ')' → logprob: -14.112849235534668
    8. '	C' → logprob: -14.112849235534668
    9. ' .' → logprob: -14.112849235534668
    10. '```' → logprob: -14.237849235534668

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003656960790976882
    2. ',new' → logprob: -5.62865686416626
    3. 'new' → logprob: -10.128657341003418
    4. ' ,' → logprob: -11.878657341003418
    5. ' new' → logprob: -12.128657341003418
    6. ',
' → logprob: -12.378657341003418
    7. '[new' → logprob: -15.253657341003418
    8. ',

' → logprob: -16.5036563873291
    9. ')' → logprob: -17.1286563873291
    10. '   ' → logprob: -17.3786563873291

Token 182: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.10020667314529419
    2. ' new' → logprob: -2.3502066135406494
    3. '[new' → logprob: -17.35020637512207
    4. '	new' → logprob: -18.10020637512207
    5. ')new' → logprob: -19.35020637512207
    6. '   ' → logprob: -21.10020637512207
    7. '_new' → logprob: -21.60020637512207
    8. '```' → logprob: -21.72520637512207
    9. '$new' → logprob: -22.47520637512207
    10. '
' → logprob: -22.72520637512207

Token 183: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -8.85235276655294e-05
    2. 'grid' → logprob: -9.375088691711426
    3. 'new' → logprob: -13.250088691711426
    4. '_' → logprob: -13.750088691711426
    5. '_row' → logprob: -15.375088691711426
    6. ' _' → logprob: -16.25008773803711
    7. '_GRID' → logprob: -16.25008773803711
    8. 'w' → logprob: -16.75008773803711
    9. '_g' → logprob: -16.87508773803711
    10. '.grid' → logprob: -17.12508773803711

Token 184: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -13.625001907348633
    3. '   ' → logprob: -15.250001907348633
    4. '       ' → logprob: -15.625001907348633
    5. ' )' → logprob: -15.750001907348633
    6. ')return' → logprob: -18.500001907348633
    7. '<|end|>' → logprob: -18.500001907348633
    8. ')#' → logprob: -19.000001907348633
    9. ')`' → logprob: -19.000001907348633
    10. '))' → logprob: -19.250001907348633

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018080053851008415
    2. '    
' → logprob: -5.393080234527588
    3. 'def' → logprob: -5.518080234527588
    4. '
' → logprob: -5.893080234527588
    5. ' ' → logprob: -6.268080234527588
    6. '<|end|>' → logprob: -6.518080234527588
    7. ' 
' → logprob: -6.643080234527588
    8. '```' → logprob: -6.893080234527588
    9. '  ' → logprob: -8.89307975769043
    10. '    ' → logprob: -9.01807975769043

Token 186: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.05427669361233711
    2. '   ' → logprob: -3.054276704788208
    3. ' def' → logprob: -5.179276466369629
    4. '```' → logprob: -11.179276466369629
    5. ' ' → logprob: -11.429276466369629
    6. '    
' → logprob: -11.554276466369629
    7. '	def' → logprob: -12.554276466369629
    8. '  ' → logprob: -13.804276466369629
    9. '
' → logprob: -14.429276466369629
    10. '<|end|>' → logprob: -14.929276466369629

Token 187: ' flipped' (ID: 96664)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -1.2643139362335205
    2. 'count' → logprob: -1.7643139362335205
    3. ' flipped' → logprob: -2.0143139362335205
    4. 'fl' → logprob: -2.1393139362335205
    5. 'column' → logprob: -2.2643139362335205
    6. ' column' → logprob: -2.3893139362335205
    7. ' col' → logprob: -3.0143139362335205
    8. ' count' → logprob: -3.7643139362335205
    9. ' columns' → logprob: -5.764313697814941
    10. ' trans' → logprob: -6.514313697814941

Token 188: '_cols' (ID: 60927)
  Prédit: '_columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_columns' → logprob: -0.6935967803001404
    2. '_cols' → logprob: -0.6935967803001404
    3. '_rows' → logprob: -8.443596839904785
    4. '_mask' → logprob: -9.693596839904785
    5. '_bits' → logprob: -9.818596839904785
    6. '_col' → logprob: -9.943596839904785
    7. '_cells' → logprob: -10.193596839904785
    8. '_' → logprob: -11.443596839904785
    9. '\' → logprob: -12.443596839904785
    10. '```' → logprob: -12.568596839904785

Token 189: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.4498052223643754e-05
    2. '(' → logprob: -11.875014305114746
    3. 'self' → logprob: -12.000014305114746
    4. ' (' → logprob: -14.625014305114746
    5. '   ' → logprob: -15.375014305114746
    6. '(s' → logprob: -15.625014305114746
    7. 'elf' → logprob: -16.125015258789062
    8. 'def' → logprob: -16.750015258789062
    9. ' ' → logprob: -16.875015258789062
    10. '_(' → logprob: -17.125015258789062

Token 190: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0352143831551075
    2. ',' → logprob: -3.410214424133301
    3. 'self' → logprob: -6.660214424133301
    4. '   ' → logprob: -9.7852144241333
    5. ')' → logprob: -9.7852144241333
    6. ' (' → logprob: -9.9102144241333
    7. ',self' → logprob: -9.9102144241333
    8. '(' → logprob: -10.4102144241333
    9. ' self' → logprob: -10.7852144241333
    10. 'elf' → logprob: -11.7852144241333

Token 191: ' flip' (ID: 29130)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.265832781791687
    2. ' self' → logprob: -1.390832781791687
    3. 'flip' → logprob: -1.390832781791687
    4. ' flip' → logprob: -1.515832781791687
    5. ' col' → logprob: -8.390832901000977
    6. '   ' → logprob: -8.640832901000977
    7. 'col' → logprob: -9.140832901000977
    8. ' ' → logprob: -10.515832901000977
    9. 'fl' → logprob: -10.765832901000977
    10. '       ' → logprob: -11.265832901000977

Token 192: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -1.0564331205387134e-05
    2. '_masks' → logprob: -12.50001049041748
    3. ' _' → logprob: -12.75001049041748
    4. '_m' → logprob: -13.37501049041748
    5. '_' → logprob: -13.75001049041748
    6. '_MASK' → logprob: -14.62501049041748
    7. ')_' → logprob: -14.75001049041748
    8. '_bits' → logprob: -15.87501049041748
    9. 'mask' → logprob: -15.87501049041748
    10. '_map' → logprob: -17.125011444091797

Token 193: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.7491250875755213e-05
    2. ' :' → logprob: -11.375027656555176
    3. ',' → logprob: -11.875027656555176
    4. 'self' → logprob: -12.125027656555176
    5. '):' → logprob: -13.750027656555176
    6. ':self' → logprob: -13.875027656555176
    7. ':int' → logprob: -14.750027656555176
    8. ' self' → logprob: -14.875027656555176
    9. ')' → logprob: -15.000027656555176
    10. '   ' → logprob: -15.750027656555176

Token 194: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07889672368764877
    2. ' int' → logprob: -2.5788967609405518
    3. ')' → logprob: -13.078896522521973
    4. 'self' → logprob: -13.078896522521973
    5. '   ' → logprob: -13.828896522521973
    6. ' self' → logprob: -14.328896522521973
    7. '(int' → logprob: -14.953896522521973
    8. ' ' → logprob: -15.828896522521973
    9. ':int' → logprob: -15.828896522521973
    10. 'def' → logprob: -16.07889747619629

Token 195: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001382241171086207
    2. '):' → logprob: -9.875138282775879
    3. 'self' → logprob: -10.125138282775879
    4. ' )' → logprob: -10.500138282775879
    5. '   ' → logprob: -11.125138282775879
    6. ':' → logprob: -13.750138282775879
    7. ',' → logprob: -14.125138282775879
    8. ' self' → logprob: -14.250138282775879
    9. ' ' → logprob: -14.500138282775879
    10. '):
' → logprob: -14.625138282775879

Token 196: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43661776185035706
    2. '(self' → logprob: -1.8116177320480347
    3. ')' → logprob: -2.061617851257324
    4. 'self' → logprob: -3.811617851257324
    5. ' ->' → logprob: -4.436617851257324
    6. ' self' → logprob: -4.811617851257324
    7. '   ' → logprob: -4.936617851257324
    8. '->' → logprob: -5.186617851257324
    9. 'def' → logprob: -5.811617851257324
    10. ',' → logprob: -5.936617851257324

Token 197: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.6871565580368042
    2. ''' → logprob: -0.8121565580368042
    3. ''S' → logprob: -2.9371566772460938
    4. ''s' → logprob: -10.562156677246094
    5. ''T' → logprob: -11.312156677246094
    6. ' ' → logprob: -11.562156677246094
    7. ''C' → logprob: -12.187156677246094
    8. ''M' → logprob: -12.562156677246094
    9. ''D' → logprob: -12.687156677246094
    10. ''A' → logprob: -12.937156677246094

Token 198: 'Sen' (ID: 28315)
  Prédit: 'Sen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sen' → logprob: -0.0017064863350242376
    2. ' Sen' → logprob: -6.376706600189209
    3. 'S' → logprob: -13.37670612335205
    4. 'sen' → logprob: -13.62670612335205
    5. ''S' → logprob: -15.12670612335205
    6. ' ' → logprob: -15.25170612335205
    7. ''' → logprob: -15.37670612335205
    8. 'def' → logprob: -16.126707077026367
    9. 'Ser' → logprob: -16.251707077026367
    10. 'Sent' → logprob: -16.376707077026367

Token 199: 'bei' (ID: 36127)
  Prédit: 'bei'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bei' → logprob: -0.00015598179015796632
    2. 'Bei' → logprob: -9.12515640258789
    3. 'obei' → logprob: -10.87515640258789
    4. 'abei' → logprob: -10.87515640258789
    5. 'be' → logprob: -12.75015640258789
    6. 'b' → logprob: -13.37515640258789
    7. ' bei' → logprob: -13.37515640258789
    8. '`' → logprob: -14.62515640258789
    9. '```' → logprob: -14.75015640258789
    10. '_' → logprob: -14.87515640258789

Token 200: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -1.2664456789934775e-06
    2. 'St' → logprob: -15.125000953674316
    3. '_State' → logprob: -15.375000953674316
    4. 'state' → logprob: -15.625000953674316
    5. '	State' → logprob: -16.125001907348633
    6. 'Sta' → logprob: -16.250001907348633
    7. 'S' → logprob: -16.500001907348633
    8. ' State' → logprob: -16.625001907348633
    9. '_STATE' → logprob: -16.750001907348633
    10. '_state' → logprob: -17.125001907348633

Token 201: '':
' (ID: 7669)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.32494667172431946
    2. 'self' → logprob: -1.949946641921997
    3. ':' → logprob: -3.074946641921997
    4. '       ' → logprob: -3.199946641921997
    5. '   ' → logprob: -3.574946641921997
    6. '):' → logprob: -5.449946880340576
    7. ':
' → logprob: -5.449946880340576
    8. '):
' → logprob: -5.574946880340576
    9. 'def' → logprob: -5.824946880340576
    10. ' self' → logprob: -6.074946880340576

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003706126008182764
    2. '   ' → logprob: -8.750370979309082
    3. 'new' → logprob: -9.375370979309082
    4. ' new' → logprob: -9.500370979309082
    5. '(' → logprob: -10.875370979309082
    6. ':' → logprob: -12.125370979309082
    7. 'def' → logprob: -12.500370979309082
    8. ',' → logprob: -12.625370979309082
    9. ')' → logprob: -12.625370979309082
    10. '	' → logprob: -12.875370979309082

Token 203: ' """' (ID: 9280)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2756291925907135
    2. ' new' → logprob: -1.6506291627883911
    3. '   ' → logprob: -3.7756292819976807
    4. 'new' → logprob: -4.025629043579102
    5. 'def' → logprob: -4.900629043579102
    6. ' def' → logprob: -7.400629043579102
    7. '    ' → logprob: -9.150629043579102
    8. '   ' → logprob: -11.900629043579102
    9. '    ' → logprob: -12.400629043579102
    10. '```' → logprob: -12.400629043579102

Token 204: 'Return' (ID: 8191)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18418052792549133
    2. 'new' → logprob: -1.809180498123169
    3. 'Return' → logprob: -5.809180736541748
    4. '   ' → logprob: -7.934180736541748
    5. '"""' → logprob: -8.30918025970459
    6. 'return' → logprob: -8.30918025970459
    7. ' new' → logprob: -8.55918025970459
    8. '#' → logprob: -9.05918025970459
    9. '       ' → logprob: -9.93418025970459
    10. 'for' → logprob: -9.93418025970459

Token 205: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.006716436706483364
    2. 'a' → logprob: -5.006716251373291
    3. ' ' → logprob: -14.63171672821045
    4. 'def' → logprob: -14.63171672821045
    5. 'A' → logprob: -16.631715774536133
    6. '   ' → logprob: -17.006715774536133
    7. ' ' → logprob: -17.631715774536133
    8. 's' → logprob: -18.381715774536133
    9. '	a' → logprob: -18.756715774536133
    10. '  ' → logprob: -18.881715774536133

Token 206: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00523612555116415
    2. ' new' → logprob: -5.2552361488342285
    3. 'def' → logprob: -13.13023567199707
    4. ' ' → logprob: -15.63023567199707
    5. '   ' → logprob: -16.00523567199707
    6. 'return' → logprob: -17.25523567199707
    7. 'class' → logprob: -17.63023567199707
    8. '```' → logprob: -17.88023567199707
    9. '	new' → logprob: -18.38023567199707
    10. 'n' → logprob: -18.63023567199707

Token 207: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.6699762940406799
    2. ' state' → logprob: -0.7949762940406799
    3. 'Sen' → logprob: -3.419976234436035
    4. 'def' → logprob: -5.919976234436035
    5. ' Sen' → logprob: -7.294976234436035
    6. 'State' → logprob: -8.544976234436035
    7. ' def' → logprob: -9.169976234436035
    8. ' new' → logprob: -9.294976234436035
    9. '_state' → logprob: -9.544976234436035
    10. ' ' → logprob: -10.044976234436035

Token 208: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.2519908845424652
    2. 'with' → logprob: -1.5019909143447876
    3. '   ' → logprob: -9.876991271972656
    4. '	with' → logprob: -12.251991271972656
    5. 'With' → logprob: -13.376991271972656
    6. 'def' → logprob: -13.501991271972656
    7. '       ' → logprob: -13.626991271972656
    8. ' ' → logprob: -14.251991271972656
    9. '_with' → logprob: -15.626991271972656
    10. ',' → logprob: -15.626991271972656

Token 209: ' columns' (ID: 15697)
  Prédit: 'cols'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cols' → logprob: -0.1738586127758026
    2. ' cols' → logprob: -1.923858642578125
    3. ' columns' → logprob: -4.798858642578125
    4. 'columns' → logprob: -5.298858642578125
    5. '_cols' → logprob: -8.548858642578125
    6. 'col' → logprob: -9.923858642578125
    7. ' the' → logprob: -10.923858642578125
    8. '(cols' → logprob: -11.048858642578125
    9. 'Cols' → logprob: -11.548858642578125
    10. ' col' → logprob: -12.173858642578125

Token 210: ' flipped' (ID: 96664)
  Prédit: ' flipped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flipped' → logprob: -0.03816244378685951
    2. 'fl' → logprob: -3.2881624698638916
    3. '   ' → logprob: -9.413162231445312
    4. 'flip' → logprob: -10.913162231445312
    5. '_fl' → logprob: -12.288162231445312
    6. '       ' → logprob: -12.288162231445312
    7. 'f' → logprob: -12.913162231445312
    8. 'def' → logprob: -12.913162231445312
    9. ' ' → logprob: -13.913162231445312
    10. '	fl' → logprob: -13.913162231445312

Token 211: ' according' (ID: 7065)
  Prédit: ' according'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' according' → logprob: -0.3890038728713989
    2. 'according' → logprob: -1.139003872871399
    3. '(self' → logprob: -6.764003753662109
    4. '       ' → logprob: -7.514003753662109
    5. '   ' → logprob: -8.51400375366211
    6. 'def' → logprob: -8.88900375366211
    7. 'self' → logprob: -10.26400375366211
    8. ',' → logprob: -11.01400375366211
    9. '```' → logprob: -11.38900375366211
    10. 'According' → logprob: -12.38900375366211

Token 212: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.01106221228837967
    2. ' to' → logprob: -4.511062145233154
    3. 'def' → logprob: -11.511062622070312
    4. '   ' → logprob: -13.511062622070312
    5. '_to' → logprob: -13.511062622070312
    6. ' ' → logprob: -14.136062622070312
    7. '  ' → logprob: -15.886062622070312
    8. 'rightarrow' → logprob: -16.136062622070312
    9. 'To' → logprob: -16.261062622070312
    10. '	to' → logprob: -16.636062622070312

Token 213: ' flip' (ID: 29130)
  Prédit: ' flip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flip' → logprob: -0.03811848908662796
    2. 'flip' → logprob: -3.288118600845337
    3. 'self' → logprob: -9.788118362426758
    4. ' self' → logprob: -11.288118362426758
    5. 'def' → logprob: -12.663118362426758
    6. ' def' → logprob: -14.163118362426758
    7. '.flip' → logprob: -14.288118362426758
    8. ' flipped' → logprob: -14.663118362426758
    9. 'the' → logprob: -14.788118362426758
    10. ' ' → logprob: -14.788118362426758

Token 214: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -5.438573680294212e-06
    2. '_MASK' → logprob: -12.625005722045898
    3. '_m' → logprob: -14.625005722045898
    4. ' _' → logprob: -14.625005722045898
    5. '_masks' → logprob: -14.750005722045898
    6. '_' → logprob: -14.750005722045898
    7. ''_' → logprob: -15.375005722045898
    8. 'mask' → logprob: -16.1250057220459
    9. '"_' → logprob: -16.5000057220459
    10. '_bits' → logprob: -17.6250057220459

Token 215: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.1419001668691635
    2. ':' → logprob: -2.141900062561035
    3. 'bits' → logprob: -4.516900062561035
    4. '):' → logprob: -6.141900062561035
    5. '_bits' → logprob: -7.641900062561035
    6. '):
' → logprob: -8.016900062561035
    7. '   ' → logprob: -8.391900062561035
    8. '(bits' → logprob: -8.641900062561035
    9. '       ' → logprob: -9.141900062561035
    10. ' tokens' → logprob: -9.266900062561035

Token 216: '."""
' (ID: 33044)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06812058389186859
    2. ':' → logprob: -3.1931204795837402
    3. '):
' → logprob: -4.56812047958374
    4. ':
' → logprob: -5.19312047958374
    5. '.' → logprob: -5.44312047958374
    6. '   ' → logprob: -6.44312047958374
    7. '):' → logprob: -6.56812047958374
    8. '```' → logprob: -7.06812047958374
    9. '():
' → logprob: -8.568120956420898
    10. ',' → logprob: -8.818120956420898

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3267681896686554
    2. 'new' → logprob: -1.326768159866333
    3. ' new' → logprob: -4.326768398284912
    4. '   ' → logprob: -8.576767921447754
    5. 'def' → logprob: -11.451767921447754
    6. '	new' → logprob: -12.951767921447754
    7. '```' → logprob: -13.326767921447754
    8. '(new' → logprob: -14.201767921447754
    9. '	' → logprob: -14.701767921447754
    10. '[new' → logprob: -15.201767921447754

Token 218: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.00011594036914175376
    2. ' new' → logprob: -9.500116348266602
    3. '       ' → logprob: -10.125116348266602
    4. '   ' → logprob: -14.000116348266602
    5. 'def' → logprob: -15.750116348266602
    6. '```' → logprob: -16.8751163482666
    7. '	new' → logprob: -18.1251163482666
    8. '
' → logprob: -19.5001163482666
    9. ' ' → logprob: -19.8751163482666
    10. 'n' → logprob: -19.8751163482666

Token 219: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.0015496177366003394
    2. '_' → logprob: -6.50154972076416
    3. 'grid' → logprob: -11.25154972076416
    4. ' _' → logprob: -11.87654972076416
    5. 'Grid' → logprob: -12.25154972076416
    6. '_
' → logprob: -12.37654972076416
    7. ' grid' → logprob: -12.50154972076416
    8. '_gr' → logprob: -12.62654972076416
    9. '_code' → logprob: -12.75154972076416
    10. '_GRID' → logprob: -13.25154972076416

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021518170833588
    2. '=' → logprob: -2.350215196609497
    3. '=[]' → logprob: -11.975214958190918
    4. '   ' → logprob: -13.350214958190918
    5. '=[]
' → logprob: -14.725214958190918
    6. ' =
' → logprob: -16.725215911865234
    7. '       ' → logprob: -16.975215911865234
    8. ' ' → logprob: -17.600215911865234
    9. '  ' → logprob: -17.725215911865234
    10. '[]' → logprob: -17.850215911865234

Token 221: ' [' (ID: 723)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.0005041812546551228
    2. '[]' → logprob: -8.250504493713379
    3. '[[' → logprob: -9.250504493713379
    4. '[
' → logprob: -9.250504493713379
    5. '[' → logprob: -10.000504493713379
    6. '[self' → logprob: -13.000504493713379
    7. ' []
' → logprob: -13.000504493713379
    8. '[]

' → logprob: -14.625504493713379
    9. '[row' → logprob: -15.250504493713379
    10. ' [' → logprob: -17.375503540039062

Token 222: 'row' (ID: 843)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.8016095161437988
    2. '[row' → logprob: -0.8016095161437988
    3. '[' → logprob: -2.926609516143799
    4. '[
' → logprob: -3.176609516143799
    5. 'row' → logprob: -5.551609516143799
    6. 'self' → logprob: -7.176609516143799
    7. '[]' → logprob: -7.301609516143799
    8. '[cell' → logprob: -7.301609516143799
    9. '[[' → logprob: -7.551609516143799
    10. '[r' → logprob: -7.926609516143799

Token 223: '[:]' (ID: 194237)
  Prédit: '[:]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -5.676981345459353e-06
    2. '[:' → logprob: -12.875005722045898
    3. '.copy' → logprob: -13.375005722045898
    4. '[::-' → logprob: -13.625005722045898
    5. '[' → logprob: -15.000005722045898
    6. '[]' → logprob: -18.0000057220459
    7. ' for' → logprob: -18.6250057220459
    8. '[...]' → logprob: -20.0000057220459
    9. 'for' → logprob: -20.8750057220459
    10. ':' → logprob: -21.0000057220459

Token 224: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38706645369529724
    2. 'for' → logprob: -1.1370664834976196
    3. '       ' → logprob: -8.637066841125488
    4. '   ' → logprob: -12.012066841125488
    5. '           ' → logprob: -12.387066841125488
    6. ')' → logprob: -12.512066841125488
    7. '	for' → logprob: -13.762066841125488
    8. '        ' → logprob: -14.387066841125488
    9. '[:]' → logprob: -14.387066841125488
    10. '          ' → logprob: -14.762066841125488

Token 225: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.018242301419377327
    2. 'self' → logprob: -4.268242359161377
    3. ' row' → logprob: -5.518242359161377
    4. ' self' → logprob: -9.768241882324219
    5. '(row' → logprob: -16.14324188232422
    6. '_' → logprob: -16.14324188232422
    7. '	row' → logprob: -16.51824188232422
    8. 'r' → logprob: -16.64324188232422
    9. '_row' → logprob: -17.64324188232422
    10. '$row' → logprob: -18.01824188232422

Token 226: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023286130279302597
    2. 'in' → logprob: -3.7732861042022705
    3. 'self' → logprob: -10.148285865783691
    4. 's' → logprob: -14.648285865783691
    5. ' ' → logprob: -15.273285865783691
    6. 'import' → logprob: -15.773285865783691
    7. '       ' → logprob: -16.023286819458008
    8. ' self' → logprob: -16.398286819458008
    9. '        ' → logprob: -16.773286819458008
    10. 'n' → logprob: -17.023286819458008

Token 227: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00033546582562848926
    2. ' self' → logprob: -8.000335693359375
    3. '(self' → logprob: -17.250335693359375
    4. '[self' → logprob: -18.750335693359375
    5. '   ' → logprob: -18.875335693359375
    6. '
' → logprob: -19.000335693359375
    7. ' ' → logprob: -19.750335693359375
    8. '	self' → logprob: -19.875335693359375
    9. 'new' → logprob: -20.500335693359375
    10. '       ' → logprob: -20.500335693359375

Token 228: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.0010627019219100475
    2. 'grid' → logprob: -7.126062870025635
    3. 'new' → logprob: -8.501062393188477
    4. '.new' → logprob: -10.376062393188477
    5. '.' → logprob: -11.251062393188477
    6. ' .' → logprob: -12.376062393188477
    7. 'self' → logprob: -12.376062393188477
    8. ' grid' → logprob: -14.126062393188477
    9. '	grid' → logprob: -14.626062393188477
    10. '.g' → logprob: -15.251062393188477

Token 229: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.20205345749855042
    2. ']' → logprob: -1.702053427696228
    3. '       ' → logprob: -7.577053546905518
    4. ']
' → logprob: -9.32705307006836
    5. ']

' → logprob: -10.20205307006836
    6. ' ]
' → logprob: -14.07705307006836
    7. '   ' → logprob: -14.20205307006836
    8. ' ]' → logprob: -15.82705307006836
    9. '
' → logprob: -16.82705307006836
    10. ']

' → logprob: -17.07705307006836

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4264446794986725
    2. 'for' → logprob: -1.17644464969635
    3. ' for' → logprob: -3.3014447689056396
    4. '   ' → logprob: -6.3014445304870605
    5. '	for' → logprob: -9.176445007324219
    6. '	' → logprob: -11.551445007324219
    7. '
' → logprob: -11.551445007324219
    8. '	   ' → logprob: -11.676445007324219
    9. '           ' → logprob: -13.051445007324219
    10. '```' → logprob: -14.176445007324219

Token 231: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004459792748093605
    2. ' for' → logprob: -5.504459857940674
    3. '       ' → logprob: -7.879459857940674
    4. '   ' → logprob: -13.004459381103516
    5. '	for' → logprob: -14.254459381103516
    6. '
' → logprob: -17.254459381103516
    7. '        
' → logprob: -18.379459381103516
    8. '```' → logprob: -18.879459381103516
    9. 'col' → logprob: -19.004459381103516
    10. '           ' → logprob: -19.004459381103516

Token 232: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5786493420600891
    2. 'c' → logprob: -0.8286493420600891
    3. 'r' → logprob: -7.078649520874023
    4. 'col' → logprob: -7.078649520874023
    5. ' col' → logprob: -7.328649520874023
    6. ' r' → logprob: -7.953649520874023
    7. 'j' → logprob: -11.953649520874023
    8. ' j' → logprob: -12.578649520874023
    9. '	c' → logprob: -14.328649520874023
    10. 'row' → logprob: -14.703649520874023

Token 233: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005946809891611338
    2. 'in' → logprob: -5.130946636199951
    3. ' ' → logprob: -11.00594711303711
    4. 'range' → logprob: -15.13094711303711
    5. 'n' → logprob: -15.38094711303711
    6. '  ' → logprob: -15.63094711303711
    7. ',' → logprob: -15.75594711303711
    8. 'In' → logprob: -15.75594711303711
    9. '	in' → logprob: -15.88094711303711
    10. '   ' → logprob: -16.25594711303711

Token 234: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47407835721969604
    2. 'range' → logprob: -0.974078357219696
    3. '(range' → logprob: -14.474078178405762
    4. '	range' → logprob: -15.724078178405762
    5. ' ' → logprob: -15.849078178405762
    6. '   ' → logprob: -16.224079132080078
    7. ' in' → logprob: -16.224079132080078
    8. '0' → logprob: -16.224079132080078
    9. 'in' → logprob: -17.474079132080078
    10. '  ' → logprob: -17.474079132080078

Token 235: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000133098365040496
    2. 'self' → logprob: -9.000133514404297
    3. '(' → logprob: -11.625133514404297
    4. ' self' → logprob: -14.875133514404297
    5. '       ' → logprob: -16.000133514404297
    6. ' (' → logprob: -17.000133514404297
    7. '   ' → logprob: -17.500133514404297
    8. '(new' → logprob: -17.750133514404297
    9. 'new' → logprob: -18.000133514404297
    10. '(
' → logprob: -18.250133514404297

Token 236: '.C' (ID: 2010)
  Prédit: '.C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.C' → logprob: -1.0802738870552275e-05
    2. 'C' → logprob: -11.50001049041748
    3. '.' → logprob: -14.87501049041748
    4. ' .' → logprob: -16.250011444091797
    5. ' C' → logprob: -17.500011444091797
    6. '   ' → logprob: -18.000011444091797
    7. ').' → logprob: -18.250011444091797
    8. 'user' → logprob: -18.500011444091797
    9. ',C' → logprob: -18.875011444091797
    10. ' ' → logprob: -19.000011444091797

Token 237: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002879176288843155
    2. '):' → logprob: -5.8778791427612305
    3. ' ):
' → logprob: -10.12787914276123
    4. '):
' → logprob: -11.12787914276123
    5. '       ' → logprob: -11.50287914276123
    6. '   ' → logprob: -12.00287914276123
    7. ':
' → logprob: -13.50287914276123
    8. ':' → logprob: -13.87787914276123
    9. '):

' → logprob: -14.75287914276123
    10. '():
' → logprob: -15.50287914276123

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05145237222313881
    2. ' if' → logprob: -3.051452398300171
    3. 'if' → logprob: -6.551452159881592
    4. ' flip' → logprob: -7.051452159881592
    5. 'flip' → logprob: -7.676452159881592
    6. '       ' → logprob: -10.17645263671875
    7. '        ' → logprob: -10.30145263671875
    8. '            ' → logprob: -12.05145263671875
    9. '	       ' → logprob: -12.42645263671875
    10. '		' → logprob: -12.55145263671875

Token 239: ' flip' (ID: 29130)
  Prédit: 'flip'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flip' (adapté à ' flip') → logprob: -0.05474596098065376
    2. 'if' → logprob: -3.17974591255188
    3. ' flip' → logprob: -4.929746150970459
    4. '           ' → logprob: -5.679746150970459
    5. ' if' → logprob: -7.179746150970459
    6. '       ' → logprob: -8.3047456741333
    7. '               ' → logprob: -11.3047456741333
    8. '   ' → logprob: -11.8047456741333
    9. '```' → logprob: -13.5547456741333
    10. 'fl' → logprob: -13.8047456741333

Token 240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061972059309482574
    2. '=' → logprob: -2.811972141265869
    3. 'if' → logprob: -12.811971664428711
    4. ' if' → logprob: -13.936971664428711
    5. ' ' → logprob: -14.811971664428711
    6. '=
' → logprob: -16.56197166442871
    7. ' =
' → logprob: -16.68697166442871
    8. '           ' → logprob: -16.93697166442871
    9. '    ' → logprob: -17.06197166442871
    10. '   ' → logprob: -17.06197166442871

Token 241: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.001502598519437015
    2. '(f' → logprob: -6.501502513885498
    3. '(fl' → logprob: -15.376502990722656
    4. '(' → logprob: -16.876502990722656
    5. ' ' → logprob: -18.376502990722656
    6. ' ((' → logprob: -18.501502990722656
    7. '(flat' → logprob: -18.751502990722656
    8. ' flip' → logprob: -20.501502990722656
    9. '((' → logprob: -21.001502990722656
    10. ' ' → logprob: -21.626502990722656

Token 242: 'flip' (ID: 78091)
  Prédit: 'flip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flip' → logprob: -0.000508591765537858
    2. ' flip' → logprob: -7.750508785247803
    3. '(f' → logprob: -9.500508308410645
    4. 'f' → logprob: -13.000508308410645
    5. 'fl' → logprob: -15.125508308410645
    6. 'fly' → logprob: -15.625508308410645
    7. '_flip' → logprob: -16.00050926208496
    8. '.flip' → logprob: -16.50050926208496
    9. 'flash' → logprob: -17.37550926208496
    10. 'flex' → logprob: -17.75050926208496

Token 243: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.0002457238151691854
    2. 'flip' → logprob: -9.625246047973633
    3. '_flip' → logprob: -9.625246047973633
    4. 'mask' → logprob: -10.625246047973633
    5. '_MASK' → logprob: -10.625246047973633
    6. ' flip' → logprob: -10.750246047973633
    7. '_masks' → logprob: -11.000246047973633
    8. '>>' → logprob: -11.375246047973633
    9. ' >>' → logprob: -12.625246047973633
    10. ' _' → logprob: -13.000246047973633

Token 244: ' >>' (ID: 6832)
  Prédit: ' >>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>' → logprob: -0.018159663304686546
    2. '>>' → logprob: -4.018159866333008
    3. ' ' → logprob: -12.268159866333008
    4. ' ' → logprob: -12.893159866333008
    5. ' >' → logprob: -13.518159866333008
    6. ' >>>' → logprob: -15.018159866333008
    7. ' >>=' → logprob: -15.143159866333008
    8. '>>>' → logprob: -15.643159866333008
    9. '	' → logprob: -16.018159866333008
    10. ')' → logprob: -16.268159866333008

Token 245: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0040785204619169235
    2. ' c' → logprob: -5.504078388214111
    3. ')c' → logprob: -18.004077911376953
    4. '   ' → logprob: -18.879077911376953
    5. '	c' → logprob: -19.129077911376953
    6. ' ' → logprob: -19.254077911376953
    7. '(c' → logprob: -19.504077911376953
    8. '```' → logprob: -20.129077911376953
    9. '_c' → logprob: -20.754077911376953
    10. '       ' → logprob: -21.379077911376953

Token 246: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.988221684878226e-06
    2. ' )' → logprob: -12.250006675720215
    3. ')&' → logprob: -13.125006675720215
    4. '       ' → logprob: -17.37500762939453
    5. '`)' → logprob: -18.00000762939453
    6. ')
' → logprob: -18.50000762939453
    7. '           ' → logprob: -18.62500762939453
    8. '}' → logprob: -18.62500762939453
    9. '&' → logprob: -18.75000762939453
    10. '        ' → logprob: -18.75000762939453

Token 247: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.5831660628318787
    2. '&' → logprob: -0.8331660628318787
    3. ')' → logprob: -5.458166122436523
    4. ')&' → logprob: -5.833166122436523
    5. '&amp' → logprob: -12.583166122436523
    6. ' )' → logprob: -12.708166122436523
    7. '&)' → logprob: -13.833166122436523
    8. '&
' → logprob: -14.083166122436523
    9. ' &)' → logprob: -14.458166122436523
    10. ' &
' → logprob: -14.958166122436523

Token 248: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012509774416685104
    2. ' ' → logprob: -4.387509822845459
    3. '   ' → logprob: -16.262510299682617
    4. '
' → logprob: -17.387510299682617
    5. ' ' → logprob: -19.012510299682617
    6. '0' → logprob: -19.075010299682617
    7. '  ' → logprob: -19.200010299682617
    8. '```' → logprob: -19.262510299682617
    9. '' → logprob: -19.700010299682617
    10. '１' → logprob: -19.700010299682617

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -19.3750057220459
    4. '   ' → logprob: -19.6250057220459
    5. '
' → logprob: -20.0625057220459
    6. '0' → logprob: -20.3750057220459
    7. '' → logprob: -20.5625057220459
    8. '`' → logprob: -20.7500057220459
    9. 'int' → logprob: -21.6250057220459
    10. '  ' → logprob: -21.6250057220459

Token 250: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014715301804244518
    2. ' if' → logprob: -7.376471519470215
    3. '<|end|>' → logprob: -7.876471519470215
    4. '       ' → logprob: -8.001471519470215
    5. '
' → logprob: -10.376471519470215
    6. ',' → logprob: -11.001471519470215
    7. 'if' → logprob: -11.251471519470215
    8. '               ' → logprob: -11.376471519470215
    9. '            
' → logprob: -11.501471519470215
    10. '<|end|>' → logprob: -11.626471519470215

Token 251: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03900971636176109
    2. '       ' → logprob: -3.7890098094940186
    3. ' if' → logprob: -4.4140095710754395
    4. '<|end|>' → logprob: -6.2890095710754395
    5. 'if' → logprob: -7.9140095710754395
    6. '   ' → logprob: -7.9140095710754395
    7. '
' → logprob: -8.039010047912598
    8. ' ' → logprob: -8.539010047912598
    9. ' 
' → logprob: -9.289010047912598
    10. '  
' → logprob: -9.664010047912598

Token 252: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.48550617694854736
    2. ' if' → logprob: -0.9855061769485474
    3. '           ' → logprob: -4.485506057739258
    4. '       ' → logprob: -9.485506057739258
    5. '   ' → logprob: -11.485506057739258
    6. ' ' → logprob: -12.860506057739258
    7. '	if' → logprob: -13.610506057739258
    8. 'for' → logprob: -14.235506057739258
    9. '
' → logprob: -14.485506057739258
    10. '               ' → logprob: -14.860506057739258

Token 253: ' flip' (ID: 29130)
  Prédit: ' flip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flip' → logprob: -0.20141421258449554
    2. 'flip' → logprob: -1.7014142274856567
    3. '.flip' → logprob: -15.076414108276367
    4. 'fl' → logprob: -15.701414108276367
    5. '_flip' → logprob: -15.826414108276367
    6. '   ' → logprob: -15.826414108276367
    7. '           ' → logprob: -16.326414108276367
    8. ' ' → logprob: -16.451414108276367
    9. ' flop' → logprob: -17.576414108276367
    10. 'Flip' → logprob: -18.076414108276367

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10087106376886368
    2. ':
' → logprob: -2.3508710861206055
    3. ' ==' → logprob: -8.100871086120605
    4. '==' → logprob: -8.600871086120605
    5. '           ' → logprob: -8.850871086120605
    6. '=' → logprob: -11.100871086120605
    7. '               ' → logprob: -11.850871086120605
    8. ':

' → logprob: -12.850871086120605
    9. ' :' → logprob: -13.475871086120605
    10. ' =' → logprob: -13.600871086120605

Token 255: '               ' (ID: 506)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.26608315110206604
    2. '               ' → logprob: -1.6410831212997437
    3. '           ' → logprob: -3.641083240509033
    4. 'for' → logprob: -4.391083240509033
    5. ' new' → logprob: -6.766083240509033
    6. '       ' → logprob: -10.391082763671875
    7. 'new' → logprob: -11.391082763671875
    8. ' ' → logprob: -11.766082763671875
    9. '   ' → logprob: -12.016082763671875
    10. '            
' → logprob: -12.141082763671875

Token 256: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1610565483570099
    2. 'for' (adapté à ' for') → logprob: -1.9110565185546875
    3. '           ' → logprob: -7.2860565185546875
    4. '               ' → logprob: -9.036056518554688
    5. '   ' → logprob: -11.411056518554688
    6. ' new' → logprob: -12.036056518554688
    7. '	for' → logprob: -12.161056518554688
    8. ' ' → logprob: -12.536056518554688
    9. '       ' → logprob: -13.661056518554688
    10. '                   ' → logprob: -15.161056518554688

Token 257: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01416350994259119
    2. ' r' → logprob: -4.264163494110107
    3. '	r' → logprob: -18.889163970947266
    4. 'row' → logprob: -20.014163970947266
    5. '```' → logprob: -21.264163970947266
    6. ' ' → logprob: -21.264163970947266
    7. '   ' → logprob: -21.389163970947266
    8. '_r' → logprob: -22.014163970947266
    9. 'i' → logprob: -22.139163970947266
    10. ' row' → logprob: -22.639163970947266

Token 258: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0059310514479875565
    2. 'in' → logprob: -5.1309309005737305
    3. ' ' → logprob: -13.63093090057373
    4. '<|end|>' → logprob: -14.38093090057373
    5. '	in' → logprob: -14.63093090057373
    6. 'range' → logprob: -16.505931854248047
    7. 'In' → logprob: -16.505931854248047
    8. '<|end|>' → logprob: -17.255931854248047
    9. '    ' → logprob: -17.630931854248047
    10. ',' → logprob: -17.630931854248047

Token 259: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011047814972698689
    2. ' range' → logprob: -4.511047840118408
    3. '(range' → logprob: -19.13604736328125
    4. ' ' → logprob: -21.76104736328125
    5. 'new' → logprob: -21.76104736328125
    6. '	range' → logprob: -21.76104736328125
    7. '   ' → logprob: -21.88604736328125
    8. 'Range' → logprob: -22.88604736328125
    9. '  ' → logprob: -23.26104736328125
    10. '    ' → logprob: -23.51104736328125

Token 260: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000217006730963476
    2. 'self' → logprob: -8.50021743774414
    3. '(' → logprob: -11.37521743774414
    4. ' self' → logprob: -14.62521743774414
    5. '(
' → logprob: -14.62521743774414
    6. '(len' → logprob: -14.75021743774414
    7. '(s' → logprob: -15.00021743774414
    8. '0' → logprob: -16.37521743774414
    9. 's' → logprob: -16.62521743774414
    10. '   ' → logprob: -17.00021743774414

Token 261: '.R' (ID: 3395)
  Prédit: '.R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.R' → logprob: -0.21448960900306702
    2. 'R' → logprob: -1.9644895792007446
    3. 'self' → logprob: -3.339489698410034
    4. '.S' → logprob: -4.339489459991455
    5. ' self' → logprob: -6.964489459991455
    6. '   ' → logprob: -7.339489459991455
    7. '.' → logprob: -7.464489459991455
    8. ')' → logprob: -7.839489459991455
    9. '       ' → logprob: -8.339489936828613
    10. '.state' → logprob: -8.339489936828613

Token 262: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.012893603183329105
    2. '):' → logprob: -4.6378936767578125
    3. ':
' → logprob: -6.6378936767578125
    4. ':' → logprob: -6.7628936767578125
    5. '                   ' → logprob: -8.137893676757812
    6. '               ' → logprob: -9.012893676757812
    7. ')' → logprob: -9.387893676757812
    8. '           ' → logprob: -9.637893676757812
    9. '):
' → logprob: -10.512893676757812
    10. '       ' → logprob: -11.137893676757812

Token 263: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.28195130825042725
    2. ' new' → logprob: -1.5319513082504272
    3. 'new' → logprob: -3.531951427459717
    4. '           ' → logprob: -9.156950950622559
    5. '                       ' → logprob: -9.281950950622559
    6. '   ' → logprob: -10.031950950622559
    7. '               ' → logprob: -10.156950950622559
    8. '       ' → logprob: -11.906950950622559
    9. '		           ' → logprob: -11.906950950622559
    10. '```' → logprob: -12.031950950622559

Token 264: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.006716555915772915
    2. ' new' → logprob: -5.006716728210449
    3. '                   ' → logprob: -13.75671672821045
    4. '	new' → logprob: -15.63171672821045
    5. '   ' → logprob: -17.006715774536133
    6. '                       ' → logprob: -17.131715774536133
    7. '[new' → logprob: -18.506715774536133
    8. '           ' → logprob: -19.256715774536133
    9. '               ' → logprob: -19.631715774536133
    10. '```' → logprob: -19.756715774536133

Token 265: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -1.1472419600977446e-06
    2. 'grid' → logprob: -14.250000953674316
    3. '_GRID' → logprob: -15.375000953674316
    4. 'Grid' → logprob: -16.250001907348633
    5. '	grid' → logprob: -17.375001907348633
    6. '.grid' → logprob: -17.500001907348633
    7. ' grid' → logprob: -17.500001907348633
    8. '_gr' → logprob: -17.625001907348633
    9. '_' → logprob: -17.750001907348633
    10. '<Grid' → logprob: -17.750001907348633

Token 266: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.320199877838604e-07
    2. 'r' → logprob: -16.0
    3. ' [' → logprob: -16.375
    4. '[row' → logprob: -17.0
    5. '[' → logprob: -17.125
    6. '][' → logprob: -17.25
    7. '```' → logprob: -17.25
    8. '[c' → logprob: -17.375
    9. '[R' → logprob: -18.375
    10. '                   ' → logprob: -18.5

Token 267: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1605413407087326
    2. '[c' → logprob: -1.910541296005249
    3. '[' → logprob: -8.410541534423828
    4. ')[' → logprob: -10.410541534423828
    5. ']' → logprob: -10.785541534423828
    6. '[C' → logprob: -11.160541534423828
    7. ' ][' → logprob: -11.410541534423828
    8. ' [' → logprob: -12.035541534423828
    9. '[
' → logprob: -12.285541534423828
    10. '[col' → logprob: -12.785541534423828

Token 268: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.7610454708337784e-05
    2. ' c' → logprob: -10.500027656555176
    3. ')c' → logprob: -18.25002670288086
    4. '	c' → logprob: -19.75002670288086
    5. '   ' → logprob: -20.00002670288086
    6. '                   ' → logprob: -20.37502670288086
    7. '               ' → logprob: -20.50002670288086
    8. '           ' → logprob: -21.50002670288086
    9. '[c' → logprob: -21.50002670288086
    10. ']' → logprob: -21.62502670288086

Token 269: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02674597129225731
    2. ']=' → logprob: -4.026745796203613
    3. '=' → logprob: -4.776745796203613
    4. ' =' → logprob: -9.776745796203613
    5. ' ]' → logprob: -10.026745796203613
    6. ' ^=' → logprob: -10.901745796203613
    7. ')' → logprob: -11.401745796203613
    8. '^' → logprob: -13.526745796203613
    9. ']^' → logprob: -13.776745796203613
    10. ']+=' → logprob: -14.026745796203613

Token 270: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011709370883181691
    2. ' =' → logprob: -6.751171112060547
    3. ' ^=' → logprob: -14.251171112060547
    4. '^' → logprob: -17.126171112060547
    5. '.=' → logprob: -19.751171112060547
    6. '＝' → logprob: -19.751171112060547
    7. ' ' → logprob: -21.501171112060547
    8. '=

' → logprob: -21.501171112060547
    9. ']=' → logprob: -22.626171112060547
    10. ')=' → logprob: -23.001171112060547

Token 271: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -16.000179290771484
    4. '```' → logprob: -18.125179290771484
    5. '                   ' → logprob: -18.250179290771484
    6. '0' → logprob: -18.750179290771484
    7. '`' → logprob: -19.000179290771484
    8. '           ' → logprob: -19.375179290771484
    9. '               ' → logprob: -19.750179290771484
    10. '(' → logprob: -19.875179290771484

Token 272: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.50000762939453
    4. '                   ' → logprob: -18.00000762939453
    5. '0' → logprob: -18.12500762939453
    6. '```' → logprob: -18.25000762939453
    7. '`' → logprob: -19.00000762939453
    8. '(' → logprob: -19.37500762939453
    9. '           ' → logprob: -19.50000762939453
    10. '               ' → logprob: -19.62500762939453

Token 273: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2519298195838928
    2. '-' → logprob: -1.501929759979248
    3. '-new' → logprob: -15.001930236816406
    4. ' ' → logprob: -15.751930236816406
    5. ' ' → logprob: -15.751930236816406
    6. '   ' → logprob: -17.751930236816406
    7. '-
' → logprob: -17.876930236816406
    8. ' -
' → logprob: -18.126930236816406
    9. '    ' → logprob: -19.251930236816406
    10. '1' → logprob: -19.251930236816406

Token 274: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0008045066497288644
    2. ' new' → logprob: -7.125804424285889
    3. '	new' → logprob: -19.000804901123047
    4. 'self' → logprob: -19.000804901123047
    5. ')new' → logprob: -19.875804901123047
    6. '[new' → logprob: -20.000804901123047
    7. '   ' → logprob: -20.125804901123047
    8. ' ' → logprob: -20.500804901123047
    9. '_new' → logprob: -20.875804901123047
    10. '(new' → logprob: -20.875804901123047

Token 275: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -5.1689596148207784e-05
    2. 'grid' → logprob: -9.875051498413086
    3. 'Grid' → logprob: -16.000051498413086
    4. ' grid' → logprob: -17.625051498413086
    5. '_GRID' → logprob: -17.625051498413086
    6. '_' → logprob: -17.875051498413086
    7. '_g' → logprob: -17.875051498413086
    8. '_gr' → logprob: -19.000051498413086
    9. 'GRID' → logprob: -19.000051498413086
    10. '-grid' → logprob: -19.125051498413086

Token 276: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -3.531315314830863e-06
    2. 'r' → logprob: -12.625003814697266
    3. '[' → logprob: -16.250003814697266
    4. '_r' → logprob: -17.625003814697266
    5. '_grid' → logprob: -18.750003814697266
    6. '[row' → logprob: -19.125003814697266
    7. '[g' → logprob: -19.500003814697266
    8. ' [' → logprob: -19.500003814697266
    9. '	r' → logprob: -19.750003814697266
    10. 'grid' → logprob: -20.000003814697266

Token 277: '][' (ID: 2696)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.6060808522743173e-05
    2. 'r' → logprob: -11.000025749206543
    3. '][' → logprob: -11.625025749206543
    4. '[' → logprob: -15.875025749206543
    5. ']' → logprob: -16.75002670288086
    6. '[row' → logprob: -17.25002670288086
    7. '[c' → logprob: -17.50002670288086
    8. '[
' → logprob: -17.50002670288086
    9. ' [' → logprob: -17.87502670288086
    10. '	r' → logprob: -18.12502670288086

Token 278: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.4855663721391466e-05
    2. 'r' → logprob: -11.250015258789062
    3. '[c' → logprob: -13.750015258789062
    4. ' c' → logprob: -14.375015258789062
    5. '
' → logprob: -17.125015258789062
    6. '```' → logprob: -17.375015258789062
    7. ')c' → logprob: -17.375015258789062
    8. '[r' → logprob: -17.625015258789062
    9. '   ' → logprob: -18.000015258789062
    10. ']' → logprob: -18.625015258789062

Token 279: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0077584111131727695
    2. ']' → logprob: -5.507758617401123
    3. '<|end|>' → logprob: -5.632758617401123
    4. '}' → logprob: -9.757758140563965
    5. '<|end|>' → logprob: -11.382758140563965
    6. ' )' → logprob: -11.382758140563965
    7. ')
' → logprob: -13.257758140563965
    8. '       ' → logprob: -13.257758140563965
    9. '                   ' → logprob: -13.382758140563965
    10. '```' → logprob: -13.757758140563965

Token 280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030703043565154076
    2. '
' → logprob: -4.405703067779541
    3. '<|end|>' → logprob: -4.655703067779541
    4. 'return' → logprob: -5.155703067779541
    5. ' return' → logprob: -6.530703067779541
    6. '	return' → logprob: -7.780703067779541
    7. '   ' → logprob: -8.655702590942383
    8. '        
' → logprob: -8.780702590942383
    9. '        ' → logprob: -9.530702590942383
    10. '<|end|>' → logprob: -9.655702590942383

Token 281: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06608809530735016
    2. ' return' → logprob: -3.0660881996154785
    3. '       ' → logprob: -4.0660881996154785
    4. '   ' → logprob: -8.56608772277832
    5. '
' → logprob: -12.19108772277832
    6. '	return' → logprob: -12.19108772277832
    7. ' ' → logprob: -13.94108772277832
    8. '        
' → logprob: -14.44108772277832
    9. '```' → logprob: -14.56608772277832
    10. ')return' → logprob: -14.81608772277832

Token 282: ' Sen' (ID: 8675)
  Prédit: 'Sen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sen' → logprob: -0.2014141082763672
    2. ' Sen' → logprob: -1.7014141082763672
    3. 'Sent' → logprob: -14.576414108276367
    4. ' ' → logprob: -16.576414108276367
    5. 'San' → logprob: -16.701414108276367
    6. '_S' → logprob: -16.701414108276367
    7. 'sen' → logprob: -17.076414108276367
    8. 'Ser' → logprob: -17.201414108276367
    9. 'self' → logprob: -17.201414108276367
    10. 'S' → logprob: -17.326414108276367

Token 283: 'bei' (ID: 36127)
  Prédit: 'bei'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bei' → logprob: -1.1994775377388578e-05
    2. 'be' → logprob: -12.125012397766113
    3. 'b' → logprob: -12.625012397766113
    4. 'obei' → logprob: -13.875012397766113
    5. 'Bei' → logprob: -14.000012397766113
    6. ' bei' → logprob: -15.250012397766113
    7. '"' → logprob: -15.500012397766113
    8. '`' → logprob: -15.875012397766113
    9. 'abei' → logprob: -15.875012397766113
    10. 'bel' → logprob: -16.125011444091797

Token 284: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: 0.0
    2. 'state' → logprob: -18.75
    3. 'Sta' → logprob: -19.125
    4. 'S' → logprob: -19.375
    5. 'St' → logprob: -19.625
    6. ' State' → logprob: -20.125
    7. 'Stat' → logprob: -20.625
    8. '	State' → logprob: -21.125
    9. '_State' → logprob: -21.5
    10. '_STATE' → logprob: -21.625

Token 285: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002545339521020651
    2. '(' → logprob: -6.002545356750488
    3. '(
' → logprob: -9.752545356750488
    4. ' (' → logprob: -12.127545356750488
    5. 'self' → logprob: -12.627545356750488
    6. '(this' → logprob: -13.877545356750488
    7. '(Self' → logprob: -14.377545356750488
    8. '(s' → logprob: -15.252545356750488
    9. '(

' → logprob: -15.752545356750488
    10. '       ' → logprob: -15.752545356750488

Token 286: '.R' (ID: 3395)
  Prédit: '.R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.R' → logprob: -9.782141569303349e-05
    2. '.S' → logprob: -9.62509822845459
    3. 'R' → logprob: -11.25009822845459
    4. 'self' → logprob: -11.50009822845459
    5. '.' → logprob: -11.87509822845459
    6. '.C' → logprob: -13.75009822845459
    7. ' .' → logprob: -15.37509822845459
    8. '   ' → logprob: -15.87509822845459
    9. ' self' → logprob: -16.875097274780273
    10. '.T' → logprob: -17.000097274780273

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3856492842023727e-06
    2. ' ,' → logprob: -14.375000953674316
    3. ',
' → logprob: -14.500000953674316
    4. ',self' → logprob: -15.750000953674316
    5. '<|end|>' → logprob: -18.250001907348633
    6. '   ' → logprob: -18.625001907348633
    7. 'self' → logprob: -18.875001907348633
    8. '‌,' → logprob: -19.000001907348633
    9. ',

' → logprob: -19.625001907348633
    10. ')' → logprob: -19.875001907348633

Token 288: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007119550718925893
    2. ' self' → logprob: -7.250711917877197
    3. '       ' → logprob: -13.250712394714355
    4. '   ' → logprob: -15.250712394714355
    5. '(self' → logprob: -17.50071144104004
    6. '           ' → logprob: -18.00071144104004
    7. '	self' → logprob: -18.12571144104004
    8. ' ' → logprob: -18.37571144104004
    9. '[self' → logprob: -18.75071144104004
    10. '```' → logprob: -19.00071144104004

Token 289: '.C' (ID: 2010)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.006105354521423578
    2. '.C' → logprob: -5.256105422973633
    3. ',' → logprob: -7.131105422973633
    4. ',C' → logprob: -9.756105422973633
    5. ' C' → logprob: -12.381105422973633
    6. ')' → logprob: -13.256105422973633
    7. ',
' → logprob: -13.506105422973633
    8. '   ' → logprob: -13.631105422973633
    9. '.' → logprob: -14.006105422973633
    10. ' ,' → logprob: -14.131105422973633

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001454955490771681
    2. ',new' → logprob: -9.00014591217041
    3. 'new' → logprob: -11.00014591217041
    4. ' ,' → logprob: -12.50014591217041
    5. ' new' → logprob: -13.37514591217041
    6. ',
' → logprob: -17.625144958496094
    7. ')' → logprob: -19.000144958496094
    8. ')new' → logprob: -19.125144958496094
    9. '[new' → logprob: -20.000144958496094
    10. '‌,' → logprob: -20.750144958496094

Token 291: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.005233882926404476
    2. ' new' → logprob: -5.2552337646484375
    3. '   ' → logprob: -17.380233764648438
    4. '	new' → logprob: -17.630233764648438
    5. '[new' → logprob: -17.630233764648438
    6. '       ' → logprob: -18.380233764648438
    7. '```' → logprob: -19.130233764648438
    8. 'flip' → logprob: -19.255233764648438
    9. ' ' → logprob: -19.255233764648438
    10. ')new' → logprob: -19.755233764648438

Token 292: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.0010355490958318114
    2. 'grid' → logprob: -6.876035690307617
    3. 'Grid' → logprob: -13.501035690307617
    4. '_g' → logprob: -14.626035690307617
    5. ' grid' → logprob: -15.126035690307617
    6. 'new' → logprob: -16.251035690307617
    7. '(grid' → logprob: -16.376035690307617
    8. '_gr' → logprob: -16.376035690307617
    9. '_state' → logprob: -16.626035690307617
    10. '_GRID' → logprob: -17.001035690307617

Token 293: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. '   ' → logprob: -14.125001907348633
    3. ')
' → logprob: -14.375001907348633
    4. ' )' → logprob: -16.250001907348633
    5. '       ' → logprob: -16.750001907348633
    6. '<|end|>' → logprob: -17.875001907348633
    7. ')`' → logprob: -18.000001907348633
    8. '))' → logprob: -18.125001907348633
    9. ')}' → logprob: -18.250001907348633
    10. '}' → logprob: -18.750001907348633

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009908369742333889
    2. 'def' → logprob: -4.884908199310303
    3. '    
' → logprob: -6.509908199310303
    4. '
' → logprob: -8.009908676147461
    5. '<|end|>' → logprob: -8.009908676147461
    6. '        
' → logprob: -9.759908676147461
    7. '```' → logprob: -10.259908676147461
    8. ' def' → logprob: -11.009908676147461
    9. ' 
' → logprob: -11.384908676147461
    10. '<|end|>' → logprob: -11.634908676147461

Token 295: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.1756367712223437e-05
    2. '   ' → logprob: -11.500011444091797
    3. ' def' → logprob: -13.375011444091797
    4. '	def' → logprob: -19.125011444091797
    5. '```' → logprob: -19.125011444091797
    6. 'class' → logprob: -19.375011444091797
    7. '#' → logprob: -19.500011444091797
    8. 'from' → logprob: -20.250011444091797
    9. '    
' → logprob: -22.000011444091797
    10. '@' → logprob: -22.125011444091797

Token 296: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2561238706111908
    2. 'score' → logprob: -2.5061237812042236
    3. 'max' → logprob: -2.6311237812042236
    4. ' count' → logprob: -3.3811237812042236
    5. ' max' → logprob: -4.631124019622803
    6. 'all' → logprob: -4.881124019622803
    7. 'row' → logprob: -5.256124019622803
    8. 'maximize' → logprob: -5.881124019622803
    9. ' score' → logprob: -6.256124019622803
    10. 'get' → logprob: -6.256124019622803

Token 297: '_face' (ID: 75619)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2896493971347809
    2. '_cells' → logprob: -1.9146493673324585
    3. '_rows' → logprob: -3.289649486541748
    4. '_unique' → logprob: -3.664649486541748
    5. '_bits' → logprob: -4.789649486541748
    6. '_black' → logprob: -5.289649486541748
    7. '_on' → logprob: -5.414649486541748
    8. '_white' → logprob: -6.039649486541748
    9. '_remaining' → logprob: -6.414649486541748
    10. '()' → logprob: -6.414649486541748

Token 298: '_up' (ID: 18721)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6414159536361694
    2. 'd' → logprob: -1.3914159536361694
    3. '_down' → logprob: -1.8914159536361694
    4. '_up' → logprob: -3.016416072845459
    5. 'down' → logprob: -4.891416072845459
    6. 'up' → logprob: -5.266416072845459
    7. '_' → logprob: -5.516416072845459
    8. '_cells' → logprob: -6.391416072845459
    9. '_value' → logprob: -7.266416072845459
    10. '_s' → logprob: -7.391416072845459

Token 299: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005050521343946457
    2. '_cells' → logprob: -5.7550506591796875
    3. '(' → logprob: -6.3800506591796875
    4. '_rows' → logprob: -10.130050659179688
    5. '()' → logprob: -10.255050659179688
    6. 'self' → logprob: -10.755050659179688
    7. '_' → logprob: -10.755050659179688
    8. '```' → logprob: -10.880050659179688
    9. 's' → logprob: -11.255050659179688
    10. ' (' → logprob: -12.505050659179688

Token 300: ')' (ID: 8)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8580421209335327
    2. '):' → logprob: -0.8580421209335327
    3. '(self' → logprob: -2.4830422401428223
    4. ')' → logprob: -2.9830422401428223
    5. '):
' → logprob: -4.733042240142822
    6. 's' → logprob: -5.108042240142822
    7. '_cells' → logprob: -7.358042240142822
    8. ',' → logprob: -7.483042240142822
    9. '(' → logprob: -7.608042240142822
    10. '_rows' → logprob: -7.733042240142822

Token 301: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006307095172815025
    2. 'self' → logprob: -7.750630855560303
    3. '(' → logprob: -8.625630378723145
    4. '   ' → logprob: -11.500630378723145
    5. '(
' → logprob: -12.625630378723145
    6. 'def' → logprob: -13.125630378723145
    7. 's' → logprob: -13.500630378723145
    8. '       ' → logprob: -13.875630378723145
    9. ' self' → logprob: -14.125630378723145
    10. '(s' → logprob: -14.250630378723145

Token 302: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02994474396109581
    2. ' int' → logprob: -3.529944658279419
    3. 'self' → logprob: -9.52994441986084
    4. '   ' → logprob: -9.52994441986084
    5. '(int' → logprob: -10.15494441986084
    6. 'def' → logprob: -13.02994441986084
    7. ' self' → logprob: -13.15494441986084
    8. ' ' → logprob: -13.40494441986084
    9. 'sum' → logprob: -13.65494441986084
    10. 'return' → logprob: -13.77994441986084

Token 303: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08646441251039505
    2. '(' → logprob: -3.4614644050598145
    3. ':' → logprob: -4.0864644050598145
    4. '(
' → logprob: -4.2114644050598145
    5. '       ' → logprob: -4.3364644050598145
    6. '   ' → logprob: -5.7114644050598145
    7. ':
' → logprob: -5.8364644050598145
    8. 'self' → logprob: -8.336464881896973
    9. '<|end|>' → logprob: -9.836464881896973
    10. ' self' → logprob: -10.461464881896973

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007142199319787323
    2. '   ' → logprob: -7.750714302062988
    3. '<|end|>' → logprob: -9.000714302062988
    4. ' total' → logprob: -9.875714302062988
    5. 'count' → logprob: -10.000714302062988
    6. ' count' → logprob: -10.875714302062988
    7. '    ' → logprob: -11.875714302062988
    8. 'total' → logprob: -12.125714302062988
    9. ' ' → logprob: -12.250714302062988
    10. '      ' → logprob: -12.625714302062988

Token 305: ' """' (ID: 9280)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06877939403057098
    2. 'count' → logprob: -3.068779468536377
    3. 'total' → logprob: -4.318779468536377
    4. '       ' → logprob: -5.068779468536377
    5. ' return' → logprob: -8.193778991699219
    6. 'result' → logprob: -9.818778991699219
    7. 'cnt' → logprob: -10.193778991699219
    8. '   ' → logprob: -11.943778991699219
    9. ' total' → logprob: -12.568778991699219
    10. 'sum' → logprob: -13.318778991699219

Token 306: 'Count' (ID: 3417)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.39964959025382996
    2. 'count' → logprob: -1.1496496200561523
    3. 'Return' → logprob: -5.399649620056152
    4. 'total' → logprob: -5.524649620056152
    5. '   ' → logprob: -6.274649620056152
    6. ' return' → logprob: -6.774649620056152
    7. '"""' → logprob: -7.399649620056152
    8. '       ' → logprob: -8.899649620056152
    9. 'cnt' → logprob: -8.899649620056152
    10. ' count' → logprob: -9.649649620056152

Token 307: ' number' (ID: 2086)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.14718468487262726
    2. 'sum' → logprob: -2.8971846103668213
    3. 'the' → logprob: -3.2721846103668213
    4. '   ' → logprob: -3.5221846103668213
    5. ' sum' → logprob: -4.6471848487854
    6. ' all' → logprob: -6.8971848487854
    7. 'return' → logprob: -7.1471848487854
    8. ' return' → logprob: -7.1471848487854
    9. '       ' → logprob: -7.1471848487854
    10. 'self' → logprob: -8.147184371948242

Token 308: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.028274407610297203
    2. ' of' → logprob: -4.4032745361328125
    3. '_of' → logprob: -4.7782745361328125
    4. '       ' → logprob: -5.9032745361328125
    5. '   ' → logprob: -6.2782745361328125
    6. '=' → logprob: -6.4032745361328125
    7. '_' → logprob: -7.9032745361328125
    8. '           ' → logprob: -9.028274536132812
    9. ' =' → logprob: -9.403274536132812
    10. '[' → logprob: -10.153274536132812

Token 309: ' sen' (ID: 6385)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.5072669982910156
    2. ' cells' → logprob: -1.2572669982910156
    3. 'face' → logprob: -2.7572669982910156
    4. '1' → logprob: -3.5072669982910156
    5. ' face' → logprob: -4.882266998291016
    6. ' ' → logprob: -5.257266998291016
    7. 'rows' → logprob: -5.757266998291016
    8. 'faces' → logprob: -6.382266998291016
    9. ' rows' → logprob: -7.132266998291016
    10. 'sum' → logprob: -7.757266998291016

Token 310: 'bei' (ID: 36127)
  Prédit: 'bei'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bei' → logprob: -0.0010816368740051985
    2. 'be' → logprob: -7.376081466674805
    3. 'b' → logprob: -7.751081466674805
    4. '   ' → logprob: -12.001081466674805
    5. '_' → logprob: -12.376081466674805
    6. '    ' → logprob: -13.376081466674805
    7. ' bei' → logprob: -13.626081466674805
    8. '1' → logprob: -13.751081466674805
    9. '```' → logprob: -14.001081466674805
    10. 'sei' → logprob: -14.376081466674805

Token 311: ' showing' (ID: 14253)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3519723117351532
    2. ' that' → logprob: -1.8519723415374756
    3. '_face' → logprob: -2.8519723415374756
    4. 'that' → logprob: -3.7269723415374756
    5. ' with' → logprob: -4.2269721031188965
    6. ' in' → logprob: -5.3519721031188965
    7. '_' → logprob: -5.4769721031188965
    8. '_that' → logprob: -5.4769721031188965
    9. ' cells' → logprob: -5.7269721031188965
    10. '_cells' → logprob: -5.8519721031188965

Token 312: ' front' (ID: 5567)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.3564930260181427
    2. '1' → logprob: -1.7314929962158203
    3. ' face' → logprob: -2.2314929962158203
    4. 'up' → logprob: -4.73149299621582
    5. ' up' → logprob: -5.48149299621582
    6. ' ' → logprob: -6.60649299621582
    7. 'faces' → logprob: -7.23149299621582
    8. '0' → logprob: -8.48149299621582
    9. '   ' → logprob: -9.23149299621582
    10. '_face' → logprob: -10.60649299621582

Token 313: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.30192652344703674
    2. '_face' → logprob: -2.051926612854004
    3. '_up' → logprob: -2.301926612854004
    4. 'face' → logprob: -4.926926612854004
    5. '_side' → logprob: -5.051926612854004
    6. 'side' → logprob: -5.676926612854004
    7. '   ' → logprob: -5.801926612854004
    8. ' _' → logprob: -6.051926612854004
    9. '_f' → logprob: -6.176926612854004
    10. 'up' → logprob: -6.426926612854004

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.049437083303928375
    2. ')' → logprob: -3.9244370460510254
    3. '=' → logprob: -4.674437046051025
    4. 'face' → logprob: -4.674437046051025
    5. ' face' → logprob: -6.049437046051025
    6. 'up' → logprob: -6.049437046051025
    7. ' ' → logprob: -6.299437046051025
    8. ' up' → logprob: -7.299437046051025
    9. '==' → logprob: -7.549437046051025
    10. '```' → logprob: -7.799437046051025

Token 315: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010857868939638138
    2. ').' → logprob: -4.635858058929443
    3. ')
' → logprob: -7.510858058929443
    4. '):' → logprob: -8.010857582092285
    5. '):
' → logprob: -9.760857582092285
    6. ')`' → logprob: -9.760857582092285
    7. '   ' → logprob: -11.010857582092285
    8. '"""
' → logprob: -11.010857582092285
    9. ' )' → logprob: -11.385857582092285
    10. '):

' → logprob: -11.510857582092285

Token 316: '"""
' (ID: 15611)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03432092443108559
    2. '
' → logprob: -3.409320831298828
    3. 'count' → logprob: -8.284320831298828
    4. 'return' → logprob: -8.784320831298828
    5. '```' → logprob: -9.284320831298828
    6. '   ' → logprob: -9.659320831298828
    7. ')' → logprob: -10.409320831298828
    8. '<|end|>' → logprob: -11.284320831298828
    9. '"""' → logprob: -11.409320831298828
    10. '        
' → logprob: -11.909320831298828

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01923653669655323
    2. 'count' → logprob: -4.0192365646362305
    3. 'total' → logprob: -7.8942365646362305
    4. ' count' → logprob: -7.8942365646362305
    5. 'return' → logprob: -8.26923656463623
    6. ' total' → logprob: -10.26923656463623
    7. ' return' → logprob: -10.64423656463623
    8. 'result' → logprob: -11.26923656463623
    9. '   ' → logprob: -12.26923656463623
    10. '```' → logprob: -12.89423656463623

Token 318: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.015100954100489616
    2. 'count' → logprob: -4.515100955963135
    3. 'total' → logprob: -5.515100955963135
    4. '   ' → logprob: -11.890100479125977
    5. 'result' → logprob: -12.015100479125977
    6. ' return' → logprob: -12.765100479125977
    7. 'cnt' → logprob: -13.015100479125977
    8. '       ' → logprob: -13.515100479125977
    9. 'sum' → logprob: -17.390100479125977
    10. '```' → logprob: -17.890100479125977

Token 319: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.005233763717114925
    2. ' sum' → logprob: -5.2552337646484375
    3. '   ' → logprob: -17.880233764648438
    4. '	sum' → logprob: -19.755233764648438
    5. '=sum' → logprob: -20.630233764648438
    6. '(sum' → logprob: -21.005233764648438
    7. ' ' → logprob: -22.505233764648438
    8. '```' → logprob: -22.755233764648438
    9. '.sum' → logprob: -22.880233764648438
    10. ' ' → logprob: -23.630233764648438

Token 320: '(sum' (ID: 45528)
  Prédit: '(cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cell' → logprob: -0.030663153156638145
    2. '(sum' → logprob: -3.530663251876831
    3. '(row' → logprob: -7.280663013458252
    4. '(' → logprob: -8.65566349029541
    5. '(
' → logprob: -10.40566349029541
    6. 'cell' → logprob: -11.40566349029541
    7. '([' → logprob: -12.53066349029541
    8. 'sum' → logprob: -13.40566349029541
    9. '(self' → logprob: -13.65566349029541
    10. '(new' → logprob: -14.40566349029541

Token 321: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.38737189769744873
    2. 'row' → logprob: -1.1373718976974487
    3. '(cell' → logprob: -8.637372016906738
    4. 'new' → logprob: -9.262372016906738
    5. ' row' → logprob: -9.512372016906738
    6. 'cell' → logprob: -9.762372016906738
    7. '(' → logprob: -9.887372016906738
    8. ')' → logprob: -10.387372016906738
    9. '	row' → logprob: -11.887372016906738
    10. '(new' → logprob: -13.262372016906738

Token 322: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006082852836698294
    2. ' for' → logprob: -5.381083011627197
    3. 'for' → logprob: -6.631083011627197
    4. '))' → logprob: -9.256082534790039
    5. '   ' → logprob: -10.506082534790039
    6. ')
' → logprob: -11.756082534790039
    7. ')==' → logprob: -13.131082534790039
    8. '       ' → logprob: -13.256082534790039
    9. ' )' → logprob: -13.506082534790039
    10. ')))' → logprob: -13.631082534790039

Token 323: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01710342988371849
    2. ' for' → logprob: -4.39210319519043
    3. 'for' → logprob: -5.39210319519043
    4. ' )' → logprob: -11.89210319519043
    5. '<|end|>' → logprob: -11.89210319519043
    6. '))' → logprob: -12.01710319519043
    7. '	for' → logprob: -13.01710319519043
    8. ')
' → logprob: -13.14210319519043
    9. '()' → logprob: -13.51710319519043
    10. '   ' → logprob: -14.14210319519043

Token 324: ' row' (ID: 5225)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02340584434568882
    2. ' self' → logprob: -3.7734057903289795
    3. 'row' → logprob: -8.773406028747559
    4. ' row' → logprob: -12.273406028747559
    5. '(self' → logprob: -14.523406028747559
    6. '	self' → logprob: -14.898406028747559
    7. '
' → logprob: -18.398405075073242
    8. '[self' → logprob: -18.523405075073242
    9. ' ' → logprob: -18.773405075073242
    10. '(row' → logprob: -19.148405075073242

Token 325: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.27157118916511536
    2. 'self' → logprob: -1.646571159362793
    3. 'in' → logprob: -3.146571159362793
    4. ' self' → logprob: -6.396571159362793
    5. ')' → logprob: -7.896571159362793
    6. '(self' → logprob: -10.521571159362793
    7. 'row' → logprob: -10.646571159362793
    8. '   ' → logprob: -12.521571159362793
    9. '```' → logprob: -12.646571159362793
    10. '[self' → logprob: -13.271571159362793

Token 326: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.639096970204264e-05
    2. ' self' → logprob: -9.250096321105957
    3. '(self' → logprob: -15.375096321105957
    4. 'new' → logprob: -17.250097274780273
    5. '   ' → logprob: -18.125097274780273
    6. '
' → logprob: -18.750097274780273
    7. '       ' → logprob: -19.000097274780273
    8. '	self' → logprob: -19.125097274780273
    9. ')' → logprob: -19.375097274780273
    10. '[self' → logprob: -19.750097274780273

Token 327: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.0017376589821651578
    2. 'grid' → logprob: -7.251737594604492
    3. 'self' → logprob: -7.626737594604492
    4. ')' → logprob: -7.751737594604492
    5. '.' → logprob: -9.751737594604492
    6. ' grid' → logprob: -11.001737594604492
    7. ' .' → logprob: -11.251737594604492
    8. '.new' → logprob: -12.876737594604492
    9. 'new' → logprob: -13.001737594604492
    10. ' self' → logprob: -13.001737594604492

Token 328: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2948405128554441e-05
    2. '())' → logprob: -12.12501335144043
    3. ')
' → logprob: -12.62501335144043
    4. ' )' → logprob: -13.25001335144043
    5. '))' → logprob: -14.25001335144043
    6. '<|end|>' → logprob: -14.75001335144043
    7. '       ' → logprob: -15.00001335144043
    8. '   ' → logprob: -15.00001335144043
    9. '])' → logprob: -15.37501335144043
    10. '[])' → logprob: -16.12501335144043

Token 329: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009899380384013057
    2. '   ' → logprob: -7.50098991394043
    3. ' def' → logprob: -7.75098991394043
    4. 'class' → logprob: -13.37598991394043
    5. '```' → logprob: -13.37598991394043
    6. 'd' → logprob: -13.87598991394043
    7. '<|end|>' → logprob: -14.37598991394043
    8. '	def' → logprob: -15.12598991394043
    9. ' ' → logprob: -15.25098991394043
    10. '
' → logprob: -15.37598991394043

Token 330: ' Flip' (ID: 61962)
  Prédit: ' Sen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Sen' → logprob: -0.113068588078022
    2. ' Solution' → logprob: -2.4880685806274414
    3. ' Solver' → logprob: -3.8630685806274414
    4. 'Sen' → logprob: -7.238068580627441
    5. 'Solution' → logprob: -7.738068580627441
    6. ' Sol' → logprob: -7.863068580627441
    7. ' Flip' → logprob: -8.613068580627441
    8. ' Sens' → logprob: -8.613068580627441
    9. ' Sent' → logprob: -8.863068580627441
    10. ' Puzzle' → logprob: -9.488068580627441

Token 331: 'Operation' (ID: 10671)
  Prédit: 'Mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mask' → logprob: -0.7210042476654053
    2. 'Optimizer' → logprob: -1.4710042476654053
    3. 'Solver' → logprob: -1.8460042476654053
    4. 'Strategy' → logprob: -2.9710042476654053
    5. 'Manager' → logprob: -4.096004486083984
    6. 'Counter' → logprob: -4.596004486083984
    7. 'Puzzle' → logprob: -5.221004486083984
    8. 'Operator' → logprob: -5.471004486083984
    9. 'Chooser' → logprob: -5.471004486083984
    10. 'Analyzer' → logprob: -5.471004486083984

Token 332: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000397422380046919
    2. ':
' → logprob: -7.875397205352783
    3. '():' → logprob: -12.000397682189941
    4. ' :' → logprob: -12.625397682189941
    5. '):' → logprob: -13.250397682189941
    6. '(' → logprob: -13.625397682189941
    7. '>:' → logprob: -13.625397682189941
    8. ':

' → logprob: -13.750397682189941
    9. ':**' → logprob: -14.500397682189941
    10. '(object' → logprob: -14.625397682189941

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0770290195941925
    2. ':' → logprob: -2.95202898979187
    3. ':
' → logprob: -4.077029228210449
    4. '<|end|>' → logprob: -5.577029228210449
    5. 'class' → logprob: -8.20202922821045
    6. ' def' → logprob: -8.32702922821045
    7. '(' → logprob: -8.95202922821045
    8. 'def' → logprob: -9.32702922821045
    9. '    
' → logprob: -9.57702922821045
    10. '):
' → logprob: -9.70202922821045

Token 334: ' """' (ID: 9280)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05406235530972481
    2. ' def' → logprob: -3.3040623664855957
    3. '   ' → logprob: -4.179062366485596
    4. 'class' → logprob: -7.679062366485596
    5. '__' → logprob: -9.429061889648438
    6. 'from' → logprob: -11.304061889648438
    7. '@dat' → logprob: -12.179061889648438
    8. ':' → logprob: -12.679061889648438
    9. 'classmethod' → logprob: -12.679061889648438
    10. ' ' → logprob: -12.929061889648438

Token 335: 'Abstract' (ID: 16996)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.017927028238773346
    2. 'def' → logprob: -4.267927169799805
    3. '"""' → logprob: -6.642927169799805
    4. 'Class' → logprob: -7.392927169799805
    5. 'Rep' → logprob: -7.517927169799805
    6. '@dat' → logprob: -8.017927169799805
    7. 'A' → logprob: -8.267927169799805
    8. 'Operation' → logprob: -9.267927169799805
    9. ' def' → logprob: -9.392927169799805
    10. ' class' → logprob: -9.642927169799805

Token 336: ' flip' (ID: 29130)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.22202257812023163
    2. 'class' → logprob: -1.722022533416748
    3. ' base' → logprob: -3.972022533416748
    4. 'Base' → logprob: -7.597022533416748
    5. 'Flip' → logprob: -8.222023010253906
    6. 'classmethod' → logprob: -8.597023010253906
    7. 'Class' → logprob: -8.722023010253906
    8. 'Operation' → logprob: -9.222023010253906
    9. '
' → logprob: -9.347023010253906
    10. '<class' → logprob: -9.847023010253906

Token 337: ' operation' (ID: 9506)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.5388470888137817
    2. 'class' → logprob: -1.0388470888137817
    3. 'Operation' → logprob: -3.413846969604492
    4. ' operation' → logprob: -3.663846969604492
    5. 'operation' → logprob: -5.788846969604492
    6. ':
' → logprob: -8.413846969604492
    7. '_operation' → logprob: -8.538846969604492
    8. '"""' → logprob: -9.038846969604492
    9. '   ' → logprob: -9.288846969604492
    10. ':' → logprob: -9.288846969604492

Token 338: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1511312872171402
    2. ':
' → logprob: -2.0261313915252686
    3. '<|end|>' → logprob: -5.4011311531066895
    4. '):
' → logprob: -6.4011311531066895
    5. '):' → logprob: -6.9011311531066895
    6. '<|end|>' → logprob: -8.401131629943848
    7. '
' → logprob: -8.526131629943848
    8. '```' → logprob: -8.651131629943848
    9. 'class' → logprob: -8.776131629943848
    10. ' class' → logprob: -9.276131629943848

Token 339: ' rows' (ID: 13585)
  Prédit: 'Sen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sen' → logprob: -0.31286755204200745
    2. 'sen' → logprob: -2.0628676414489746
    3. ' sen' → logprob: -3.0628676414489746
    4. ' Sen' → logprob: -3.9378676414489746
    5. 'a' → logprob: -4.312867641448975
    6. 'the' → logprob: -4.312867641448975
    7. 'rows' → logprob: -4.562867641448975
    8. ' a' → logprob: -4.812867641448975
    9. ' rows' → logprob: -4.812867641448975
    10. ' flipping' → logprob: -5.187867641448975

Token 340: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.021129632368683815
    2. ' and' → logprob: -4.146129608154297
    3. 'or' → logprob: -5.396129608154297
    4. 'and' → logprob: -8.896129608154297
    5. ',' → logprob: -9.146129608154297
    6. '"""' → logprob: -9.146129608154297
    7. '.' → logprob: -9.396129608154297
    8. '   ' → logprob: -10.271129608154297
    9. '<|end|>' → logprob: -10.396129608154297
    10. '."""' → logprob: -11.521129608154297

Token 341: ' columns' (ID: 15697)
  Prédit: 'columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'columns' → logprob: -0.12491943687200546
    2. 'cols' → logprob: -2.6249194145202637
    3. ' columns' → logprob: -3.1249194145202637
    4. ' cols' → logprob: -6.874919414520264
    5. 'col' → logprob: -12.124919891357422
    6. '.columns' → logprob: -12.874919891357422
    7. '   ' → logprob: -13.374919891357422
    8. 'cells' → logprob: -13.999919891357422
    9. '_cols' → logprob: -15.374919891357422
    10. 'class' → logprob: -15.624919891357422

Token 342: '."""
' (ID: 33044)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1823204606771469
    2. ':' → logprob: -2.0573203563690186
    3. '):
' → logprob: -4.682320594787598
    4. '.' → logprob: -5.182320594787598
    5. '"""' → logprob: -5.182320594787598
    6. '"""
' → logprob: -5.307320594787598
    7. '."""' → logprob: -5.432320594787598
    8. '."""
' → logprob: -5.807320594787598
    9. 'class' → logprob: -6.307320594787598
    10. '```' → logprob: -6.682320594787598

Token 343: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012134380638599396
    2. ' def' → logprob: -4.637134552001953
    3. '    ' → logprob: -6.762134552001953
    4. 'def' → logprob: -7.512134552001953
    5. '    
' → logprob: -8.012134552001953
    6. 'class' → logprob: -9.012134552001953
    7. ' 
' → logprob: -9.512134552001953
    8. '
' → logprob: -9.887134552001953
    9. ' pass' → logprob: -10.137134552001953
    10. ' ' → logprob: -11.387134552001953

Token 344: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0213918536901474
    2. ' def' → logprob: -3.8963918685913086
    3. 'from' → logprob: -7.271391868591309
    4. 'class' → logprob: -9.146391868591309
    5. '   ' → logprob: -10.646391868591309
    6. '__' → logprob: -11.646391868591309
    7. 'pass' → logprob: -11.771391868591309
    8. 'import' → logprob: -13.146391868591309
    9. '...' → logprob: -13.646391868591309
    10. ' from' → logprob: -13.896391868591309

Token 345: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.009278333745896816
    2. '__' → logprob: -5.384278297424316
    3. ' __' → logprob: -6.009278297424316
    4. ' init' → logprob: -6.384278297424316
    5. '_init' → logprob: -8.009278297424316
    6. 'call' → logprob: -9.509278297424316
    7. 'abstract' → logprob: -10.009278297424316
    8. 'apply' → logprob: -12.009278297424316
    9. 'flip' → logprob: -12.009278297424316
    10. '_' → logprob: -12.009278297424316

Token 346: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.080963092041202e-06
    2. 'nit' → logprob: -12.500004768371582
    3. 'class' → logprob: -14.625004768371582
    4. 'int' → logprob: -14.750004768371582
    5. ' init' → logprob: -15.500004768371582
    6. 'new' → logprob: -16.2500057220459
    7. 'abstract' → logprob: -16.6250057220459
    8. 'abs' → logprob: -17.6250057220459
    9. 'sub' → logprob: -18.3750057220459
    10. 'call' → logprob: -18.3750057220459

Token 347: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0007796077989041805
    2. '__' → logprob: -7.500779628753662
    3. '(self' → logprob: -8.625779151916504
    4. '__(
' → logprob: -10.125779151916504
    5. '_(' → logprob: -12.375779151916504
    6. '__((' → logprob: -13.625779151916504
    7. '(' → logprob: -14.125779151916504
    8. ' (' → logprob: -14.875779151916504
    9. '___' → logprob: -15.250779151916504
    10. '__('' → logprob: -15.625779151916504

Token 348: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002076386474072933
    2. ' self' → logprob: -6.377076148986816
    3. ')' → logprob: -8.252076148986816
    4. 'R' → logprob: -10.127076148986816
    5. '(self' → logprob: -10.502076148986816
    6. '   ' → logprob: -10.877076148986816
    7. '):
' → logprob: -11.502076148986816
    8. ',' → logprob: -12.377076148986816
    9. '
' → logprob: -12.752076148986816
    10. ')(' → logprob: -13.752076148986816

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016202464699745178
    2. 'self' → logprob: -4.516202449798584
    3. ' ,' → logprob: -5.766202449798584
    4. ' self' → logprob: -6.891202449798584
    5. '(self' → logprob: -8.141202926635742
    6. '):' → logprob: -8.641202926635742
    7. '):
' → logprob: -8.891202926635742
    8. ',self' → logprob: -9.016202926635742
    9. ' (' → logprob: -9.766202926635742
    10. ',R' → logprob: -10.016202926635742

Token 350: ' dimension' (ID: 21959)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -1.3777508735656738
    2. 'R' → logprob: -2.127750873565674
    3. 'size' → logprob: -2.377750873565674
    4. ' mask' → logprob: -2.502750873565674
    5. 'indices' → logprob: -2.752750873565674
    6. 'flip' → logprob: -3.002750873565674
    7. ' indices' → logprob: -3.127750873565674
    8. ' size' → logprob: -3.252750873565674
    9. 'is' → logprob: -3.627750873565674
    10. 'num' → logprob: -3.627750873565674

Token 351: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0759941041469574
    2. ':' → logprob: -2.7009940147399902
    3. '):' → logprob: -5.45099401473999
    4. ' ,' → logprob: -7.70099401473999
    5. '   ' → logprob: -7.95099401473999
    6. '=' → logprob: -8.075994491577148
    7. '=None' → logprob: -8.450994491577148
    8. '):
' → logprob: -8.575994491577148
    9. 'self' → logprob: -9.950994491577148
    10. '_,' → logprob: -10.450994491577148

Token 352: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02101687528192997
    2. 'str' → logprob: -4.646017074584961
    3. ' int' → logprob: -4.771017074584961
    4. ')' → logprob: -7.021017074584961
    5. ' str' → logprob: -7.396017074584961
    6. '   ' → logprob: -7.521017074584961
    7. 'self' → logprob: -8.146017074584961
    8. '):
' → logprob: -9.146017074584961
    9. ''' → logprob: -9.896017074584961
    10. '):' → logprob: -10.271017074584961

Token 353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5718438625335693
    2. '):' → logprob: -0.9468438625335693
    3. '):
' → logprob: -3.0718438625335693
    4. ')' → logprob: -7.071844100952148
    5. ' ,' → logprob: -8.696844100952148
    6. ' ):' → logprob: -9.071844100952148
    7. '):
' → logprob: -10.446844100952148
    8. ':' → logprob: -10.571844100952148
    9. ' ):
' → logprob: -11.446844100952148
    10. '   ' → logprob: -11.696844100952148

Token 354: ' flip' (ID: 29130)
  Prédit: 'flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flip' → logprob: -0.3729889988899231
    2. 'mask' → logprob: -2.2479889392852783
    3. 'is' → logprob: -2.8729889392852783
    4. ' flip' → logprob: -3.2479889392852783
    5. 'size' → logprob: -3.6229889392852783
    6. 'name' → logprob: -3.7479889392852783
    7. 'bit' → logprob: -4.747989177703857
    8. 'length' → logprob: -4.872989177703857
    9. ' is' → logprob: -4.872989177703857
    10. 'grid' → logprob: -4.997989177703857

Token 355: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.0020767441019415855
    2. '_masks' → logprob: -7.002076625823975
    3. '_bits' → logprob: -7.252076625823975
    4. 's' → logprob: -8.377077102661133
    5. 'mask' → logprob: -9.002077102661133
    6. '_bit' → logprob: -10.752077102661133
    7. '_count' → logprob: -10.877077102661133
    8. '_type' → logprob: -11.377077102661133
    9. '_MASK' → logprob: -12.127077102661133
    10. '_m' → logprob: -12.252077102661133

Token 356: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5058333277702332
    2. ':' → logprob: -1.005833387374878
    3. '=' → logprob: -3.755833387374878
    4. '):
' → logprob: -5.380833148956299
    5. ')' → logprob: -6.005833148956299
    6. ' ):' → logprob: -7.880833148956299
    7. '=None' → logprob: -8.255833625793457
    8. ':int' → logprob: -9.630833625793457
    9. ' :' → logprob: -10.380833625793457
    10. ' =' → logprob: -10.880833625793457

Token 357: ' int' (ID: 677)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2724924683570862
    2. 'int' → logprob: -1.5224924087524414
    3. ' int' → logprob: -4.022492408752441
    4. ' ' → logprob: -6.147492408752441
    5. ')' → logprob: -9.147492408752441
    6. '   ' → logprob: -9.522492408752441
    7. 'None' → logprob: -10.147492408752441
    8. '):
' → logprob: -10.772492408752441
    9. ' None' → logprob: -11.647492408752441
    10. '(int' → logprob: -11.772492408752441

Token 358: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0052912733517587185
    2. '):
' → logprob: -5.50529146194458
    3. ')' → logprob: -6.75529146194458
    4. ',' → logprob: -10.255290985107422
    5. ' ):' → logprob: -12.005290985107422
    6. '):
' → logprob: -13.005290985107422
    7. ':' → logprob: -13.255290985107422
    8. '   ' → logprob: -13.630290985107422
    9. '):

' → logprob: -15.130290985107422
    10. ' )' → logprob: -15.880290985107422

Token 359: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000510260637383908
    2. ' self' → logprob: -8.125510215759277
    3. 'self' → logprob: -8.500510215759277
    4. '   ' → logprob: -11.875510215759277
    5. '<|end|>' → logprob: -13.750510215759277
    6. '      ' → logprob: -14.375510215759277
    7. ')' → logprob: -15.000510215759277
    8. ',' → logprob: -15.250510215759277
    9. '```' → logprob: -15.375510215759277
    10. '        
' → logprob: -15.500510215759277

Token 360: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5779696106910706
    2. 'self' (adapté à ' self') → logprob: -0.8279696106910706
    3. '       ' → logprob: -6.202969551086426
    4. '   ' → logprob: -13.327969551086426
    5. '	self' → logprob: -13.452969551086426
    6. '        ' → logprob: -13.952969551086426
    7. '    ' → logprob: -15.827969551086426
    8. ' ' → logprob: -15.827969551086426
    9. '     ' → logprob: -16.202970504760742
    10. '      ' → logprob: -16.327970504760742

Token 361: '.dimension' (ID: 173502)
  Prédit: '.dimension'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dimension' → logprob: -0.06266536563634872
    2. '.' → logprob: -2.8126654624938965
    3. ' .' → logprob: -7.6876654624938965
    4. '.dim' → logprob: -8.562664985656738
    5. '.d' → logprob: -10.187664985656738
    6. 'dimension' → logprob: -12.187664985656738
    7. '.Dimension' → logprob: -13.062664985656738
    8. '.dem' → logprob: -14.437664985656738
    9. ' dimension' → logprob: -14.562664985656738
    10. ' =' → logprob: -15.187664985656738

Token 362: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741024076938629
    2. '=' → logprob: -0.9741023778915405
    3. ',' → logprob: -11.224102020263672
    4. '<|end|>' → logprob: -12.349102020263672
    5. ' ' → logprob: -12.474102020263672
    6. '   ' → logprob: -13.724102020263672
    7. ')' → logprob: -13.974102020263672
    8. '=self' → logprob: -13.974102020263672
    9. ':' → logprob: -15.099102020263672
    10. ' ,' → logprob: -15.724102020263672

Token 363: ' dimension' (ID: 21959)
  Prédit: 'dimension'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dimension' → logprob: -0.5759395956993103
    2. ' dimension' → logprob: -0.8259395956993103
    3. 'dim' → logprob: -16.575939178466797
    4. 'd' → logprob: -17.200939178466797
    5. '.dimension' → logprob: -17.200939178466797
    6. '_dimension' → logprob: -18.700939178466797
    7. ' ' → logprob: -19.075939178466797
    8. 'Dimension' → logprob: -19.825939178466797
    9. 'int' → logprob: -19.825939178466797
    10. 'dimensions' → logprob: -19.950939178466797

Token 364: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4015611708164215
    2. '
' → logprob: -2.0265612602233887
    3. ',' → logprob: -2.4015612602233887
    4. ' ' → logprob: -3.7765612602233887
    5. '        ' → logprob: -3.9015612602233887
    6. '        
' → logprob: -4.026561260223389
    7. ' 
' → logprob: -4.151561260223389
    8. 'self' → logprob: -4.526561260223389
    9. '<|end|>' → logprob: -4.776561260223389
    10. '=' → logprob: -5.151561260223389

Token 366: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10264584422111511
    2. ' self' → logprob: -2.3526458740234375
    3. 'flip' → logprob: -6.6026458740234375
    4. '       ' → logprob: -6.9776458740234375
    5. ' flip' → logprob: -8.977645874023438
    6. '        ' → logprob: -12.602645874023438
    7. '   ' → logprob: -12.852645874023438
    8. '
' → logprob: -12.977645874023438
    9. ' ' → logprob: -13.227645874023438
    10. '        
' → logprob: -13.352645874023438

Token 367: '.flip' (ID: 100559)
  Prédit: '.flip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flip' → logprob: -0.8436356782913208
    2. ' =' → logprob: -1.2186356782913208
    3. 'flip' → logprob: -2.4686355590820312
    4. '_flip' → logprob: -2.8436355590820312
    5. ' flip' → logprob: -3.3436355590820312
    6. '=' → logprob: -3.3436355590820312
    7. ' .' → logprob: -3.7186355590820312
    8. '_mask' → logprob: -4.343635559082031
    9. '.' → logprob: -4.968635559082031
    10. 'dimension' → logprob: -5.843635559082031

Token 368: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -1.747814349073451e-05
    2. '_masks' → logprob: -11.750017166137695
    3. 'mask' → logprob: -12.125017166137695
    4. '_' → logprob: -13.375017166137695
    5. '_MASK' → logprob: -14.375017166137695
    6. '_bits' → logprob: -14.625017166137695
    7. '_bit' → logprob: -15.125017166137695
    8. '_m' → logprob: -15.250017166137695
    9. '_type' → logprob: -15.500017166137695
    10. ' _' → logprob: -15.625017166137695

Token 369: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.387304425239563
    2. '=' → logprob: -1.137304425239563
    3. ' ' → logprob: -7.762304306030273
    4. '<|end|>' → logprob: -12.137304306030273
    5. ' =
' → logprob: -14.012304306030273
    6. ',' → logprob: -14.512304306030273
    7. ' ' → logprob: -15.512304306030273
    8. ')' → logprob: -15.762304306030273
    9. ' ,' → logprob: -16.137304306030273
    10. '=
' → logprob: -16.262304306030273

Token 370: ' flip' (ID: 29130)
  Prédit: 'flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flip' → logprob: -0.20141392946243286
    2. ' flip' → logprob: -1.701413869857788
    3. 'fl' → logprob: -14.951414108276367
    4. ' ' → logprob: -16.576414108276367
    5. '.flip' → logprob: -16.576414108276367
    6. '_flip' → logprob: -16.701414108276367
    7. 'int' → logprob: -17.951414108276367
    8. 'f' → logprob: -18.326414108276367
    9. '0' → logprob: -18.326414108276367
    10. 'Flip' → logprob: -18.576414108276367

Token 371: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.00029756641015410423
    2. '_' → logprob: -8.250297546386719
    3. '_MASK' → logprob: -10.750297546386719
    4. ' _' → logprob: -11.625297546386719
    5. '_m' → logprob: -12.875297546386719
    6. '_masks' → logprob: -13.125297546386719
    7. '_
' → logprob: -15.750297546386719
    8. 'mask' → logprob: -15.750297546386719
    9. '_map' → logprob: -15.750297546386719
    10. '_token' → logprob: -16.25029754638672

Token 372: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1774161010980606
    2. '<|end|>' → logprob: -2.0524160861968994
    3. '
' → logprob: -3.5524160861968994
    4. 'def' → logprob: -6.0524163246154785
    5. ' def' → logprob: -6.3024163246154785
    6. '<|end|>' → logprob: -7.6774163246154785
    7. ' ' → logprob: -8.42741584777832
    8. '       ' → logprob: -8.55241584777832
    9. '    
' → logprob: -9.42741584777832
    10. 'class' → logprob: -9.42741584777832

Token 374: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00012749579036608338
    2. ' def' → logprob: -9.000127792358398
    3. '   ' → logprob: -12.625127792358398
    4. '    
' → logprob: -15.125127792358398
    5. '@' → logprob: -15.500127792358398
    6. '@property' → logprob: -15.625127792358398
    7. '	def' → logprob: -17.2501277923584
    8. '
' → logprob: -17.3751277923584
    9. '        
' → logprob: -17.8751277923584
    10. 'de' → logprob: -17.8751277923584

Token 375: ' apply' (ID: 6096)
  Prédit: ' apply'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' apply' → logprob: -0.10135085135698318
    2. 'apply' → logprob: -2.351350784301758
    3. ' applies' → logprob: -8.476350784301758
    4. '_apply' → logprob: -8.476350784301758
    5. '__' → logprob: -8.601350784301758
    6. ' is' → logprob: -8.726350784301758
    7. ' __' → logprob: -8.726350784301758
    8. ' execute' → logprob: -10.101350784301758
    9. ' perform' → logprob: -10.726350784301758
    10. '   ' → logprob: -10.726350784301758

Token 376: '_to' (ID: 5089)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00020592445798683912
    2. '(' → logprob: -8.500205993652344
    3. 'self' → logprob: -14.125205993652344
    4. '(
' → logprob: -14.375205993652344
    5. '(s' → logprob: -14.500205993652344
    6. ' (' → logprob: -15.125205993652344
    7. '(state' → logprob: -16.500205993652344
    8. '(sel' → logprob: -16.500205993652344
    9. '(Self' → logprob: -17.125205993652344
    10. '(se' → logprob: -17.500205993652344

Token 377: '_state' (ID: 9479)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015821128617972136
    2. 'self' → logprob: -6.626582145690918
    3. 'state' → logprob: -8.876582145690918
    4. '_state' → logprob: -9.376582145690918
    5. '(' → logprob: -11.251582145690918
    6. ' self' → logprob: -11.876582145690918
    7. '(state' → logprob: -12.376582145690918
    8. '(s' → logprob: -13.376582145690918
    9. '(
' → logprob: -13.626582145690918
    10. ' (' → logprob: -13.876582145690918

Token 378: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.922563963802531e-05
    2. '(' → logprob: -9.750079154968262
    3. ' (' → logprob: -10.875079154968262
    4. '(s' → logprob: -14.000079154968262
    5. '(
' → logprob: -14.250079154968262
    6. 'self' → logprob: -15.375079154968262
    7. '(state' → logprob: -16.000080108642578
    8. ' self' → logprob: -17.250080108642578
    9. '   ' → logprob: -18.000080108642578
    10. ',' → logprob: -18.000080108642578

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.028536492725834e-05
    2. ' ,' → logprob: -10.125070571899414
    3. 'self' → logprob: -11.125070571899414
    4. ',state' → logprob: -11.250070571899414
    5. '(self' → logprob: -14.000070571899414
    6. ')' → logprob: -14.625070571899414
    7. '',' → logprob: -14.875070571899414
    8. ',self' → logprob: -15.500070571899414
    9. 'state' → logprob: -15.750070571899414
    10. ',
' → logprob: -15.750070571899414

Token 380: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.3887064456939697
    2. ' state' → logprob: -1.1387064456939697
    3. 'self' → logprob: -6.513706207275391
    4. ' self' → logprob: -8.01370620727539
    5. '   ' → logprob: -12.13870620727539
    6. ' ' → logprob: -12.51370620727539
    7. ')' → logprob: -12.76370620727539
    8. '	state' → logprob: -13.26370620727539
    9. 'State' → logprob: -13.38870620727539
    10. '_state' → logprob: -13.76370620727539

Token 381: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07868111878633499
    2. ':' → logprob: -2.828681230545044
    3. '):
' → logprob: -4.203680992126465
    4. ')' → logprob: -7.328680992126465
    5. ',' → logprob: -7.703680992126465
    6. ' ):' → logprob: -7.703680992126465
    7. '):
' → logprob: -11.203680992126465
    8. '   ' → logprob: -11.328680992126465
    9. ' :' → logprob: -11.703680992126465
    10. '):

' → logprob: -11.703680992126465

Token 382: ' Sen' (ID: 8675)
  Prédit: ' Sen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Sen' → logprob: -0.32230624556541443
    2. 'Sen' → logprob: -1.3223062753677368
    3. ')' → logprob: -4.947306156158447
    4. ' )' → logprob: -7.322306156158447
    5. ' '' → logprob: -7.947306156158447
    6. ''S' → logprob: -8.572306632995605
    7. ' state' → logprob: -8.947306632995605
    8. ' ' → logprob: -9.072306632995605
    9. ''' → logprob: -9.322306632995605
    10. 'state' → logprob: -9.697306632995605

Token 383: 'bei' (ID: 36127)
  Prédit: 'bei'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bei' → logprob: -9.960946772480384e-05
    2. 'Bei' → logprob: -9.375099182128906
    3. 'be' → logprob: -12.625099182128906
    4. 'obei' → logprob: -12.750099182128906
    5. ' bei' → logprob: -12.875099182128906
    6. 'abei' → logprob: -13.125099182128906
    7. ')' → logprob: -13.625099182128906
    8. '_' → logprob: -15.125099182128906
    9. '```' → logprob: -15.125099182128906
    10. ' ' → logprob: -15.750099182128906

Token 384: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -1.7432603272027336e-06
    2. ')' → logprob: -13.625001907348633
    3. 'S' → logprob: -15.875001907348633
    4. ' State' → logprob: -16.375001907348633
    5. '):
' → logprob: -16.875001907348633
    6. 'States' → logprob: -17.250001907348633
    7. '	State' → logprob: -17.250001907348633
    8. '_State' → logprob: -17.375001907348633
    9. '):' → logprob: -17.500001907348633
    10. 'state' → logprob: -17.625001907348633

Token 385: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12867134809494019
    2. '):' → logprob: -2.128671407699585
    3. '):
' → logprob: -6.378671169281006
    4. ')->' → logprob: -10.753671646118164
    5. ' )' → logprob: -11.503671646118164
    6. '   ' → logprob: -12.378671646118164
    7. '):
' → logprob: -12.503671646118164
    8. ':' → logprob: -13.378671646118164
    9. ' ):' → logprob: -13.628671646118164
    10. ',' → logprob: -13.878671646118164

Token 386: ' axis' (ID: 16300)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.8356834053993225
    2. ')' → logprob: -1.7106833457946777
    3. 'flip' → logprob: -1.8356833457946777
    4. ' is' → logprob: -2.5856833457946777
    5. ' flip' → logprob: -2.9606833457946777
    6. '):
' → logprob: -3.9606833457946777
    7. ' )' → logprob: -3.9606833457946777
    8. 'axis' → logprob: -4.585683345794678
    9. ' axis' → logprob: -4.710683345794678
    10. '):

' → logprob: -5.335683345794678

Token 387: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23240065574645996
    2. ':' → logprob: -1.60740065574646
    3. ')' → logprob: -5.107400894165039
    4. ' ):' → logprob: -7.482400894165039
    5. '):
' → logprob: -8.232400894165039
    6. ' :' → logprob: -9.982400894165039
    7. ' )' → logprob: -11.482400894165039
    8. '=' → logprob: -11.982400894165039
    9. '='' → logprob: -12.607400894165039
    10. ' ' → logprob: -12.982400894165039

Token 388: ' str' (ID: 989)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1500933170318604
    2. '):' → logprob: -1.1500933170318604
    3. ':' → logprob: -1.4000933170318604
    4. '):
' → logprob: -2.5250933170318604
    5. ''' → logprob: -3.7750933170318604
    6. '')' → logprob: -4.900093078613281
    7. '='' → logprob: -6.400093078613281
    8. '   ' → logprob: -6.525093078613281
    9. ''):' → logprob: -6.775093078613281
    10. ''s' → logprob: -6.900093078613281

Token 389: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22572723031044006
    2. '):' → logprob: -1.6007272005081177
    3. '):
' → logprob: -8.225727081298828
    4. ' )' → logprob: -10.725727081298828
    5. ')->' → logprob: -11.600727081298828
    6. ' ):' → logprob: -11.975727081298828
    7. ':' → logprob: -12.850727081298828
    8. '   ' → logprob: -13.100727081298828
    9. ')=' → logprob: -14.100727081298828
    10. '):
' → logprob: -14.100727081298828

Token 390: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005573204252868891
    2. '):' → logprob: -7.8755574226379395
    3. ':
' → logprob: -9.500556945800781
    4. ' :' → logprob: -9.875556945800781
    5. '():' → logprob: -11.000556945800781
    6. ':return' → logprob: -11.875556945800781
    7. '<|end|>' → logprob: -12.125556945800781
    8. '->' → logprob: -12.250556945800781
    9. '       ' → logprob: -12.250556945800781
    10. ')' → logprob: -12.875556945800781

Token 391: ' Sen' (ID: 8675)
  Prédit: ' Sen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Sen' → logprob: -0.6615390777587891
    2. ' '' → logprob: -1.661539077758789
    3. 'Sen' → logprob: -1.661539077758789
    4. ''' → logprob: -2.411539077758789
    5. ''S' → logprob: -4.286539077758789
    6. ''s' → logprob: -7.411539077758789
    7. ' ' → logprob: -10.161539077758789
    8. '   ' → logprob: -10.661539077758789
    9. ' None' → logprob: -10.911539077758789
    10. 'None' → logprob: -11.161539077758789

Token 392: 'bei' (ID: 36127)
  Prédit: 'bei'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bei' → logprob: -8.339776832144707e-05
    2. 'b' → logprob: -9.875082969665527
    3. 'be' → logprob: -11.750082969665527
    4. ' bei' → logprob: -12.250082969665527
    5. 'obei' → logprob: -12.250082969665527
    6. '   ' → logprob: -12.500082969665527
    7. 'abei' → logprob: -12.875082969665527
    8. '```' → logprob: -13.875082969665527
    9. '`' → logprob: -14.000082969665527
    10. '_' → logprob: -14.250082969665527

Token 393: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -1.1472419600977446e-06
    2. 'Stat' → logprob: -15.000000953674316
    3. 'St' → logprob: -15.750000953674316
    4. 'Sta' → logprob: -16.000001907348633
    5. 'state' → logprob: -16.125001907348633
    6. ' State' → logprob: -16.375001907348633
    7. 'S' → logprob: -16.375001907348633
    8. '	State' → logprob: -16.625001907348633
    9. '_STATE' → logprob: -16.875001907348633
    10. '_State' → logprob: -17.250001907348633

Token 394: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01877404749393463
    2. '       ' → logprob: -4.518774032592773
    3. ':
' → logprob: -5.768774032592773
    4. '<|end|>' → logprob: -5.768774032592773
    5. '):' → logprob: -6.893774032592773
    6. '):
' → logprob: -8.893774032592773
    7. ')' → logprob: -9.518774032592773
    8. '   ' → logprob: -9.518774032592773
    9. '():' → logprob: -10.143774032592773
    10. ',' → logprob: -10.143774032592773

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00045807508286088705
    2. ':' → logprob: -8.375457763671875
    3. '<|end|>' → logprob: -9.875457763671875
    4. '   ' → logprob: -10.125457763671875
    5. '        
' → logprob: -10.625457763671875
    6. '    ' → logprob: -10.625457763671875
    7. ' 
' → logprob: -10.875457763671875
    8. ' if' → logprob: -11.000457763671875
    9. '      ' → logprob: -11.750457763671875
    10. ',' → logprob: -12.000457763671875

Token 396: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011341462843120098
    2. ' if' → logprob: -5.011341571807861
    3. 'if' (adapté à ' if') → logprob: -5.386341571807861
    4. 'return' → logprob: -10.886341094970703
    5. 'assert' → logprob: -12.261341094970703
    6. '   ' → logprob: -12.636341094970703
    7. ' return' → logprob: -13.261341094970703
    8. ',' → logprob: -13.511341094970703
    9. ':' → logprob: -13.886341094970703
    10. '	' → logprob: -14.261341094970703

Token 397: ' axis' (ID: 16300)
  Prédit: ' axis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' axis' → logprob: -0.0007117166533134878
    2. 'axis' → logprob: -7.250711917877197
    3. '(axis' → logprob: -14.000711441040039
    4. ' ' → logprob: -14.250711441040039
    5. ' ' → logprob: -15.625711441040039
    6. '.axis' → logprob: -17.12571144104004
    7. '_axis' → logprob: -17.87571144104004
    8. ' not' → logprob: -18.00071144104004
    9. 'space' → logprob: -18.37571144104004
    10. '   ' → logprob: -19.25071144104004

Token 398: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07010260224342346
    2. '==' → logprob: -2.6951026916503906
    3. ')' → logprob: -9.44510269165039
    4. '=' → logprob: -9.69510269165039
    5. ' =' → logprob: -11.32010269165039
    6. ')==' → logprob: -12.57010269165039
    7. ' =="' → logprob: -13.44510269165039
    8. '=='' → logprob: -13.57010269165039
    9. '[' → logprob: -13.57010269165039
    10. '=="' → logprob: -13.94510269165039

Token 399: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.016663776710629463
    2. ' '' → logprob: -4.266663551330566
    3. '"' → logprob: -6.016663551330566
    4. ''r' → logprob: -10.391663551330566
    5. ' "' → logprob: -11.016663551330566
    6. ' ' → logprob: -12.266663551330566
    7. '   ' → logprob: -13.141663551330566
    8. ''re' → logprob: -13.391663551330566
    9. ''s' → logprob: -14.641663551330566
    10. 'rows' → logprob: -14.766663551330566

Token 400: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.20273318886756897
    2. 'rows' → logprob: -1.7027331590652466
    3. 'r' → logprob: -6.827733039855957
    4. ' rows' → logprob: -9.202733039855957
    5. ' row' → logprob: -9.202733039855957
    6. '_rows' → logprob: -10.827733039855957
    7. '_row' → logprob: -11.577733039855957
    8. ''' → logprob: -13.827733039855957
    9. '')' → logprob: -14.327733039855957
    10. '_r' → logprob: -14.452733039855957

Token 401: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.844739556312561
    2. 's' → logprob: -1.219739556312561
    3. ''):
' → logprob: -1.844739556312561
    4. '):
' → logprob: -2.8447394371032715
    5. '':' → logprob: -3.0947394371032715
    6. ''):' → logprob: -5.4697394371032715
    7. '):' → logprob: -5.5947394371032715
    8. ')' → logprob: -5.9697394371032715
    9. ''' → logprob: -6.7197394371032715
    10. ':
' → logprob: -7.2197394371032715

Token 402: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5139000415802002
    2. ':
' → logprob: -1.5139000415802002
    3. ':' → logprob: -2.0139000415802
    4. 'return' → logprob: -3.5139000415802
    5. ' return' → logprob: -4.763899803161621
    6. '       ' → logprob: -4.888899803161621
    7. ':return' → logprob: -6.263899803161621
    8. ' :
' → logprob: -9.013899803161621
    9. ' :' → logprob: -9.263899803161621
    10. '):
' → logprob: -9.888899803161621

Token 403: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014948531053960323
    2. ' return' → logprob: -4.26494836807251
    3. '       ' → logprob: -7.26494836807251
    4. '           ' → logprob: -9.389948844909668
    5. '	return' → logprob: -13.764948844909668
    6. '   ' → logprob: -14.889948844909668
    7. ':return' → logprob: -16.51494789123535
    8. '{return' → logprob: -17.26494789123535
    9. '	       ' → logprob: -18.26494789123535
    10. '	   ' → logprob: -18.63994789123535

Token 404: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.10020667314529419
    2. ' state' → logprob: -2.3502066135406494
    3. '	state' → logprob: -17.60020637512207
    4. '   ' → logprob: -17.97520637512207
    5. 'self' → logprob: -18.72520637512207
    6. 'State' → logprob: -19.72520637512207
    7. '(state' → logprob: -20.10020637512207
    8. '_state' → logprob: -20.97520637512207
    9. '.state' → logprob: -21.10020637512207
    10. ' ' → logprob: -21.22520637512207

Token 405: '.fl' (ID: 18931)
  Prédit: '.fl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fl' → logprob: -2.4034345187828876e-05
    2. '.' → logprob: -11.12502384185791
    3. ' .' → logprob: -11.87502384185791
    4. '.flip' → logprob: -13.25002384185791
    5. '   ' → logprob: -15.87502384185791
    6. '	fl' → logprob: -16.000024795532227
    7. '.Fl' → logprob: -16.500024795532227
    8. '.fre' → logprob: -17.375024795532227
    9. 'fl' → logprob: -17.625024795532227
    10. '\.' → logprob: -17.750024795532227

Token 406: 'ipped' (ID: 8193)
  Prédit: 'ipped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipped' → logprob: -8.180258191714529e-06
    2. 'ip' → logprob: -11.750008583068848
    3. 'ippe' → logprob: -16.37500762939453
    4. 'iped' → logprob: -16.50000762939453
    5. 'ipping' → logprob: -18.37500762939453
    6. 'ips' → logprob: -18.75000762939453
    7. 'ipp' → logprob: -18.87500762939453
    8. 'i' → logprob: -19.12500762939453
    9. 'icked' → logprob: -19.62500762939453
    10. 'ipper' → logprob: -19.87500762939453

Token 407: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -1.1472419600977446e-06
    2. '_cols' → logprob: -13.750000953674316
    3. '_' → logprob: -17.000001907348633
    4. 'rows' → logprob: -18.500001907348633
    5. '_ROWS' → logprob: -19.500001907348633
    6. '_lines' → logprob: -19.750001907348633
    7. '_r' → logprob: -20.000001907348633
    8. '_row' → logprob: -20.250001907348633
    9. '_columns' → logprob: -21.250001907348633
    10. 'Rows' → logprob: -21.500001907348633

Token 408: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.968312951968983e-06
    2. '(' → logprob: -11.750009536743164
    3. ' (' → logprob: -13.250009536743164
    4. '(
' → logprob: -15.500009536743164
    5. 'self' → logprob: -17.000009536743164
    6. ' self' → logprob: -18.000009536743164
    7. '((' → logprob: -18.375009536743164
    8. '(this' → logprob: -18.375009536743164
    9. ',self' → logprob: -19.125009536743164
    10. '[self' → logprob: -19.625009536743164

Token 409: '.flip' (ID: 100559)
  Prédit: '.flip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flip' → logprob: -2.7848862373502925e-05
    2. '.' → logprob: -10.500027656555176
    3. ' .' → logprob: -16.250028610229492
    4. 'flip' → logprob: -16.625028610229492
    5. '.fl' → logprob: -16.750028610229492
    6. '.
' → logprob: -19.000028610229492
    7. '.flush' → logprob: -19.500028610229492
    8. '.flash' → logprob: -19.625028610229492
    9. ').' → logprob: -21.250028610229492
    10. '
' → logprob: -21.500028610229492

Token 410: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -4.320199877838604e-07
    2. 'mask' → logprob: -16.125
    3. ' _' → logprob: -16.25
    4. '_' → logprob: -16.5
    5. '_MASK' → logprob: -17.5
    6. '_m' → logprob: -18.625
    7. '_
' → logprob: -18.875
    8. '_masks' → logprob: -19.5
    9. ' mask' → logprob: -20.25
    10. '
' → logprob: -20.25

Token 411: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06338942050933838
    2. ')' → logprob: -2.813389301300049
    3. '       ' → logprob: -6.563389301300049
    4. ' )
' → logprob: -11.938389778137207
    5. '   ' → logprob: -13.938389778137207
    6. ')
' → logprob: -14.063389778137207
    7. '           ' → logprob: -14.313389778137207
    8. ' )' → logprob: -14.813389778137207
    9. ')

' → logprob: -14.813389778137207
    10. ')`
' → logprob: -16.68838882446289

Token 412: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001907855912577361
    2. 'elif' → logprob: -9.250190734863281
    3. 'else' → logprob: -9.750190734863281
    4. '
' → logprob: -10.750190734863281
    5. ' else' → logprob: -12.250190734863281
    6. ' elif' → logprob: -12.750190734863281
    7. 'return' → logprob: -13.500190734863281
    8. '        
' → logprob: -13.500190734863281
    9. '```' → logprob: -13.875190734863281
    10. '   ' → logprob: -14.000190734863281

Token 413: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07942339777946472
    2. 'elif' (adapté à ' elif') → logprob: -2.704423427581787
    3. ' elif' → logprob: -4.954423427581787
    4. 'else' → logprob: -6.829423427581787
    5. 'if' → logprob: -7.079423427581787
    6. ' else' → logprob: -8.454422950744629
    7. ' if' → logprob: -8.704422950744629
    8. '   ' → logprob: -10.079422950744629
    9. '
' → logprob: -10.204422950744629
    10. 'return' → logprob: -12.704422950744629

Token 414: ' axis' (ID: 16300)
  Prédit: ' axis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' axis' → logprob: -0.0052456180565059185
    2. 'axis' → logprob: -5.255245685577393
    3. '(axis' → logprob: -11.505245208740234
    4. ' '' → logprob: -14.255245208740234
    5. ''' → logprob: -14.505245208740234
    6. ' ' → logprob: -15.505245208740234
    7. ' axes' → logprob: -15.755245208740234
    8. '-axis' → logprob: -16.505245208740234
    9. ' ' → logprob: -16.630245208740234
    10. '.axis' → logprob: -16.755245208740234

Token 415: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0788961797952652
    2. '==' → logprob: -2.5788962841033936
    3. '=='' → logprob: -12.578896522521973
    4. '===' → logprob: -13.953896522521973
    5. '=' → logprob: -14.578896522521973
    6. '=="' → logprob: -15.078896522521973
    7. ' =' → logprob: -15.203896522521973
    8. ')' → logprob: -15.203896522521973
    9. ' =='' → logprob: -15.328896522521973
    10. '==
' → logprob: -15.828896522521973

Token 416: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03804459050297737
    2. ' '' → logprob: -3.2880446910858154
    3. ' col' → logprob: -13.288044929504395
    4. '"' → logprob: -14.413044929504395
    5. ''s' → logprob: -15.288044929504395
    6. ' ' → logprob: -15.788044929504395
    7. 'col' → logprob: -15.788044929504395
    8. ''user' → logprob: -16.288043975830078
    9. ''post' → logprob: -16.538043975830078
    10. '('' → logprob: -16.663043975830078

Token 417: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.000634639582131058
    2. ''' → logprob: -7.750634670257568
    3. 'column' → logprob: -8.50063419342041
    4. ' col' → logprob: -14.62563419342041
    5. 'colm' → logprob: -17.250635147094727
    6. '	col' → logprob: -19.500635147094727
    7. 'coln' → logprob: -19.750635147094727
    8. ''s' → logprob: -20.125635147094727
    9. ' column' → logprob: -20.250635147094727
    10. 'cols' → logprob: -20.375635147094727

Token 418: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.33467531204223633
    2. ''):
' → logprob: -2.2096753120422363
    3. ':
' → logprob: -2.4596753120422363
    4. '):
' → logprob: -3.4596753120422363
    5. '':' → logprob: -3.8346753120422363
    6. ':' → logprob: -4.334675312042236
    7. ''' → logprob: -4.584675312042236
    8. ')' → logprob: -5.709675312042236
    9. '           ' → logprob: -5.709675312042236
    10. '')' → logprob: -6.459675312042236

Token 419: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14707891643047333
    2. ' return' → logprob: -2.3970789909362793
    3. 'return' → logprob: -3.1470789909362793
    4. ':
' → logprob: -6.397078990936279
    5. ':' → logprob: -7.772078990936279
    6. ':return' → logprob: -8.022078514099121
    7. '       ' → logprob: -8.522078514099121
    8. '	       ' → logprob: -10.022078514099121
    9. '	return' → logprob: -10.647078514099121
    10. '          ' → logprob: -10.647078514099121

Token 420: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5761491656303406
    2. ' return' → logprob: -0.8261491656303406
    3. '           ' → logprob: -8.576148986816406
    4. 'state' → logprob: -11.076148986816406
    5. ' state' → logprob: -12.951148986816406
    6. '       ' → logprob: -13.576148986816406
    7. '   ' → logprob: -14.076148986816406
    8. ' ' → logprob: -14.826148986816406
    9. ':return' → logprob: -14.826148986816406
    10. '	return' → logprob: -15.326148986816406

Token 421: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.47407814860343933
    2. ' state' → logprob: -0.9740781784057617
    3. '       ' → logprob: -14.724078178405762
    4. '	state' → logprob: -15.349078178405762
    5. '(state' → logprob: -15.849078178405762
    6. '   ' → logprob: -15.849078178405762
    7. '           ' → logprob: -16.474077224731445
    8. ' ' → logprob: -16.724077224731445
    9. 'self' → logprob: -17.599077224731445
    10. '.state' → logprob: -17.849077224731445

Token 422: '.fl' (ID: 18931)
  Prédit: '.fl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fl' → logprob: -4.620622712536715e-05
    2. '.' → logprob: -10.000045776367188
    3. ' .' → logprob: -14.625045776367188
    4. '.flip' → logprob: -15.625045776367188
    5. '	fl' → logprob: -17.250045776367188
    6. '.f' → logprob: -17.500045776367188
    7. '.fre' → logprob: -18.125045776367188
    8. '.Fl' → logprob: -18.500045776367188
    9. '\.' → logprob: -18.500045776367188
    10. '.fo' → logprob: -19.000045776367188

Token 423: 'ipped' (ID: 8193)
  Prédit: 'ipped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipped' → logprob: -0.19822652637958527
    2. 'ip' → logprob: -1.8232265710830688
    3. 'iped' → logprob: -4.073226451873779
    4. 'ped' → logprob: -7.198226451873779
    5. 'p' → logprob: -8.323226928710938
    6. 'ips' → logprob: -9.698226928710938
    7. 'pped' → logprob: -10.323226928710938
    8. '
' → logprob: -10.448226928710938
    9. 'icked' → logprob: -10.448226928710938
    10. 'ed' → logprob: -10.823226928710938

Token 424: '_cols' (ID: 60927)
  Prédit: '_cols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cols' → logprob: -9.372294698550832e-06
    2. '_columns' → logprob: -12.250009536743164
    3. 's' → logprob: -13.500009536743164
    4. 'cols' → logprob: -13.500009536743164
    5. '_mask' → logprob: -14.125009536743164
    6. 'Cols' → logprob: -15.125009536743164
    7. '_rows' → logprob: -15.375009536743164
    8. '_chars' → logprob: -16.250009536743164
    9. '-cols' → logprob: -16.500009536743164
    10. '(self' → logprob: -16.625009536743164

Token 425: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00039706481038592756
    2. '(' → logprob: -7.875397205352783
    3. '(
' → logprob: -11.625396728515625
    4. ' (' → logprob: -11.875396728515625
    5. 'self' → logprob: -14.500396728515625
    6. '(this' → logprob: -14.625396728515625
    7. '(

' → logprob: -17.625396728515625
    8. '((' → logprob: -18.750396728515625
    9. ' self' → logprob: -18.875396728515625
    10. '   ' → logprob: -18.875396728515625

Token 426: '.flip' (ID: 100559)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6765835285186768
    2. '(self' → logprob: -1.1765835285186768
    3. '.flip' → logprob: -1.9265835285186768
    4. ' self' → logprob: -3.3015835285186768
    5. 'flip' → logprob: -8.301583290100098
    6. '.self' → logprob: -8.551583290100098
    7. '[self' → logprob: -8.801583290100098
    8. ')' → logprob: -9.301583290100098
    9. '.' → logprob: -9.926583290100098
    10. ' (' → logprob: -10.426583290100098

Token 427: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -2.816093228830141e-06
    2. 'mask' → logprob: -12.87500286102295
    3. '_MASK' → logprob: -16.125001907348633
    4. 'Mask' → logprob: -17.500001907348633
    5. ' mask' → logprob: -18.375001907348633
    6. '_' → logprob: -18.750001907348633
    7. ' _' → logprob: -19.250001907348633
    8. '_masks' → logprob: -19.250001907348633
    9. ')' → logprob: -19.500001907348633
    10. '_m' → logprob: -19.625001907348633

Token 428: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.203409844194539e-05
    2. ')
' → logprob: -10.125041961669922
    3. ' )' → logprob: -13.875041961669922
    4. '<|end|>' → logprob: -14.125041961669922
    5. '   ' → logprob: -16.125041961669922
    6. '       ' → logprob: -16.375041961669922
    7. '')' → logprob: -16.875041961669922
    8. ')

' → logprob: -17.125041961669922
    9. ')return' → logprob: -17.625041961669922
    10. '<|end|>' → logprob: -18.125041961669922

Token 429: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002497767563909292
    2. '<|end|>' → logprob: -8.625249862670898
    3. 'return' → logprob: -11.125249862670898
    4. '               ' → logprob: -11.250249862670898
    5. '      ' → logprob: -11.500249862670898
    6. 'else' → logprob: -11.875249862670898
    7. '        
' → logprob: -12.125249862670898
    8. '	' → logprob: -12.500249862670898
    9. '           ' → logprob: -12.750249862670898
    10. '
' → logprob: -12.875249862670898

Token 430: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.17285186052322388
    2. '       ' → logprob: -2.047851800918579
    3. ' else' → logprob: -4.172852039337158
    4. 'return' → logprob: -4.297852039337158
    5. '
' → logprob: -7.797852039337158
    6. 'None' → logprob: -9.2978515625
    7. '<|end|>' → logprob: -9.6728515625
    8. ' return' → logprob: -10.1728515625
    9. '   ' → logprob: -10.4228515625
    10. '	else' → logprob: -11.0478515625

Token 431: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017557413084432483
    2. ':
' → logprob: -6.376755714416504
    3. ' :' → logprob: -10.376755714416504
    4. ' raise' → logprob: -12.001755714416504
    5. 'raise' → logprob: -12.501755714416504
    6. '       ' → logprob: -12.751755714416504
    7. '<|end|>' → logprob: -13.251755714416504
    8. ':return' → logprob: -13.501755714416504
    9. '	raise' → logprob: -13.626755714416504
    10. '           ' → logprob: -14.001755714416504

Token 432: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004730110988020897
    2. ' raise' → logprob: -6.004730224609375
    3. 'raise' → logprob: -6.129730224609375
    4. '	raise' → logprob: -10.879730224609375
    5. 'Raise' → logprob: -11.004730224609375
    6. '               ' → logprob: -11.254730224609375
    7. '       ' → logprob: -12.129730224609375
    8. '   ' → logprob: -12.254730224609375
    9. 'Value' → logprob: -12.504730224609375
    10. ' ' → logprob: -12.504730224609375

Token 433: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.014206168241798878
    2. ' raise' → logprob: -4.2642059326171875
    3. '           ' → logprob: -10.264205932617188
    4. 'return' → logprob: -12.514205932617188
    5. '               ' → logprob: -13.264205932617188
    6. '	raise' → logprob: -13.389205932617188
    7. 'Raise' → logprob: -15.389205932617188
    8. '_raise' → logprob: -15.889205932617188
    9. '   ' → logprob: -16.014205932617188
    10. '            ' → logprob: -16.264205932617188

Token 434: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -9.615255839889869e-05
    2. ' Value' → logprob: -9.250096321105957
    3. 'value' → logprob: -19.87509536743164
    4. 'Val' → logprob: -20.00009536743164
    5. '_value' → logprob: -20.12509536743164
    6. 'Runtime' → logprob: -20.25009536743164
    7. 'Assertion' → logprob: -20.50009536743164
    8. 'Type' → logprob: -20.62509536743164
    9. '(Value' → logprob: -20.75009536743164
    10. 'Name' → logprob: -21.00009536743164

Token 435: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.001930420519784093
    2. 'rror' → logprob: -6.251930236816406
    3. 'Value' → logprob: -13.751930236816406
    4. 'ror' → logprob: -14.626930236816406
    5. 'SError' → logprob: -15.876930236816406
    6. 'r' → logprob: -16.751930236816406
    7. 'error' → logprob: -17.126930236816406
    8. '           ' → logprob: -17.376930236816406
    9. 'LError' → logprob: -17.501930236816406
    10. 'Argument' → logprob: -18.376930236816406

Token 436: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.006759425159543753
    2. '(' → logprob: -5.2567596435546875
    3. '('' → logprob: -6.5067596435546875
    4. '()' → logprob: -10.631759643554688
    5. '(f' → logprob: -12.006759643554688
    6. '(
' → logprob: -15.131759643554688
    7. '("'' → logprob: -15.131759643554688
    8. '("")' → logprob: -15.756759643554688
    9. '()"' → logprob: -18.506759643554688
    10. '"' → logprob: -18.506759643554688

Token 437: 'Axis' (ID: 12293)
  Prédit: ' axis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' axis' → logprob: -0.4683264195919037
    2. 'axis' → logprob: -1.468326449394226
    3. 'Invalid' → logprob: -2.5933263301849365
    4. '"' → logprob: -2.9683263301849365
    5. 'Axis' → logprob: -4.843326568603516
    6. ''' → logprob: -5.593326568603516
    7. ' Invalid' → logprob: -6.218326568603516
    8. 'Unknown' → logprob: -6.593326568603516
    9. ' Axis' → logprob: -7.093326568603516
    10. ' invalid' → logprob: -8.343326568603516

Token 438: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.0009273029863834381
    2. 'must' → logprob: -7.625927448272705
    3. ' should' → logprob: -7.750927448272705
    4. 'Must' → logprob: -13.125926971435547
    5. ' '' → logprob: -13.250926971435547
    6. ' not' → logprob: -13.500926971435547
    7. ')' → logprob: -13.875926971435547
    8. ''' → logprob: -14.375926971435547
    9. '')' → logprob: -14.750926971435547
    10. 'should' → logprob: -14.750926971435547

Token 439: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -3.833878508885391e-05
    2. 'be' → logprob: -10.375038146972656
    3. '<|end|>' → logprob: -12.750038146972656
    4. 'either' → logprob: -13.375038146972656
    5. ' either' → logprob: -13.625038146972656
    6. '	be' → logprob: -15.250038146972656
    7. ' ' → logprob: -15.375038146972656
    8. ')' → logprob: -15.375038146972656
    9. 'in' → logprob: -15.750038146972656
    10. ' only' → logprob: -15.875038146972656

Token 440: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6947401762008667
    2. ' '' → logprob: -0.6947401762008667
    3. ' either' → logprob: -6.569740295410156
    4. 'either' → logprob: -8.694740295410156
    5. ' row' → logprob: -11.944740295410156
    6. ''r' → logprob: -12.444740295410156
    7. ''e' → logprob: -13.069740295410156
    8. '=row' → logprob: -13.194740295410156
    9. ''value' → logprob: -13.569740295410156
    10. 'row' → logprob: -13.569740295410156

Token 441: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.9361264946837764e-07
    2. ' row' → logprob: -15.625
    3. 'col' → logprob: -19.0
    4. ''' → logprob: -19.875
    5. 'axis' → logprob: -20.625
    6. 'ro' → logprob: -21.0
    7. '	row' → logprob: -21.375
    8. 'r' → logprob: -21.875
    9. '(row' → logprob: -22.0
    10. 'rows' → logprob: -22.0

Token 442: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002259687054902315
    2. ''or' → logprob: -6.127259731292725
    3. ''"' → logprob: -10.252259254455566
    4. 'or' → logprob: -10.377259254455566
    5. ' or' → logprob: -12.502259254455566
    6. ''''' → logprob: -14.002259254455566
    7. '"' → logprob: -14.252259254455566
    8. '"'' → logprob: -14.377259254455566
    9. ''")
' → logprob: -14.377259254455566
    10. '')' → logprob: -15.502259254455566

Token 443: ' or' (ID: 503)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.5257903933525085
    2. ' or' → logprob: -1.0257904529571533
    3. ''or' → logprob: -3.1507904529571533
    4. ''' → logprob: -4.900790214538574
    5. '"' → logprob: -9.775790214538574
    6. ')' → logprob: -9.775790214538574
    7. ' '' → logprob: -11.775790214538574
    8. '')' → logprob: -12.650790214538574
    9. ',' → logprob: -12.900790214538574
    10. '	or' → logprob: -13.275790214538574

Token 444: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1709689348936081
    2. ' '' → logprob: -2.170969009399414
    3. 'col' → logprob: -3.170969009399414
    4. ' col' → logprob: -6.795969009399414
    5. ' ' → logprob: -13.045969009399414
    6. 'column' → logprob: -14.795969009399414
    7. '   ' → logprob: -15.045969009399414
    8. '	col' → logprob: -15.170969009399414
    9. ''s' → logprob: -15.420969009399414
    10. ' ' → logprob: -15.920969009399414

Token 445: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -7.896309739408025e-07
    2. 'column' → logprob: -14.500000953674316
    3. ' col' → logprob: -15.750000953674316
    4. 'axis' → logprob: -16.125
    5. 'cell' → logprob: -18.25
    6. 'row' → logprob: -20.0
    7. ''' → logprob: -20.375
    8. 'c' → logprob: -21.75
    9. 'co' → logprob: -22.0
    10. 'colm' → logprob: -22.875

Token 446: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0007494711899198592
    2. '')' → logprob: -7.250749588012695
    3. ''.' → logprob: -10.750749588012695
    4. ''")
' → logprob: -11.125749588012695
    5. '")' → logprob: -12.875749588012695
    6. ''"' → logprob: -15.250749588012695
    7. '')")
' → logprob: -15.875749588012695
    8. '')"' → logprob: -16.375749588012695
    9. '"' → logprob: -16.375749588012695
    10. ')")' → logprob: -16.625749588012695

Token 447: '."' (ID: 3692)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0272006057202816
    2. '')' → logprob: -4.027200698852539
    3. ')")' → logprob: -5.652200698852539
    4. ')' → logprob: -6.277200698852539
    5. '.")' → logprob: -6.277200698852539
    6. ''' → logprob: -6.402200698852539
    7. '}")' → logprob: -10.402200698852539
    8. '"' → logprob: -10.777200698852539
    9. ''.' → logprob: -11.777200698852539
    10. '')"' → logprob: -12.277200698852539

Token 448: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004683357197791338
    2. '<|end|>' → logprob: -5.629683494567871
    3. ')
' → logprob: -7.379683494567871
    4. '       ' → logprob: -8.629683494567871
    5. '')' → logprob: -9.504683494567871
    6. '   ' → logprob: -9.629683494567871
    7. '
' → logprob: -9.754683494567871
    8. '<|end|>' → logprob: -11.004683494567871
    9. '")' → logprob: -11.129683494567871
    10. '}' → logprob: -11.254683494567871

Token 449: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0006713286275044084
    2. 'def' → logprob: -7.37567138671875
    3. ' class' → logprob: -11.12567138671875
    4. '
' → logprob: -11.37567138671875
    5. '```' → logprob: -11.37567138671875
    6. '<|end|>' → logprob: -12.87567138671875
    7. '#' → logprob: -13.50067138671875
    8. 'from' → logprob: -13.75067138671875
    9. 'import' → logprob: -14.25067138671875
    10. '"class' → logprob: -15.12567138671875

Token 450: ' Sen' (ID: 8675)
  Prédit: 'Sen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sen' → logprob: -0.39287060499191284
    2. 'Solution' → logprob: -2.2678706645965576
    3. 'Flip' → logprob: -2.3928706645965576
    4. 'Solver' → logprob: -3.0178706645965576
    5. ' Solver' → logprob: -3.8928706645965576
    6. ' Sen' → logprob: -4.1428704261779785
    7. ' Solution' → logprob: -4.5178704261779785
    8. 'State' → logprob: -4.6428704261779785
    9. ' Flip' → logprob: -4.6428704261779785
    10. 'Puzzle' → logprob: -5.5178704261779785

Token 451: 'bei' (ID: 36127)
  Prédit: 'bei'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bei' → logprob: -0.0002614550176076591
    2. 'be' → logprob: -8.500261306762695
    3. 'b' → logprob: -11.750261306762695
    4. '```' → logprob: -12.250261306762695
    5. ' bei' → logprob: -12.750261306762695
    6. '`' → logprob: -12.750261306762695
    7. 'ben' → logprob: -12.750261306762695
    8. 'Bei' → logprob: -12.875261306762695
    9. 'sei' → logprob: -13.125261306762695
    10. 'obei' → logprob: -13.125261306762695

Token 452: 'Fl' (ID: 4245)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.7219452261924744
    2. 'Puzzle' → logprob: -0.9719452261924744
    3. 'Game' → logprob: -2.346945285797119
    4. 'Fl' → logprob: -3.596945285797119
    5. 'Problem' → logprob: -4.596945285797119
    6. 'Flip' → logprob: -6.721945285797119
    7. 'State' → logprob: -7.846945285797119
    8. 'Grid' → logprob: -8.221944808959961
    9. 'Simulator' → logprob: -9.221944808959961
    10. 'Manager' → logprob: -9.346944808959961

Token 453: 'ipper' (ID: 27779)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.27708497643470764
    2. 'ipper' → logprob: -1.5270849466323853
    3. 'ips' → logprob: -3.777085065841675
    4. 'ipping' → logprob: -6.402084827423096
    5. 'iper' → logprob: -9.027085304260254
    6. 'ippers' → logprob: -9.902085304260254
    7. 'ipped' → logprob: -9.902085304260254
    8. ' ip' → logprob: -11.027085304260254
    9. 'ipp' → logprob: -11.402085304260254
    10. 'IP' → logprob: -12.027085304260254

Token 454: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019394654082134366
    2. ':
' → logprob: -6.251939296722412
    3. ':def' → logprob: -11.62693977355957
    4. ':

' → logprob: -14.37693977355957
    5. 'def' → logprob: -15.12693977355957
    6. ' :' → logprob: -15.75193977355957
    7. '():' → logprob: -15.75193977355957
    8. ':**' → logprob: -15.87693977355957
    9. '):' → logprob: -16.00193977355957
    10. '<|end|>' → logprob: -16.50193977355957

Token 455: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036638490855693817
    2. ':
' → logprob: -5.753664016723633
    3. ':' → logprob: -8.128664016723633
    4. ' def' → logprob: -9.253664016723633
    5. 'def' → logprob: -9.378664016723633
    6. '):
' → logprob: -12.628664016723633
    7. '(' → logprob: -13.003664016723633
    8. 'class' → logprob: -13.753664016723633
    9. ':def' → logprob: -13.878664016723633
    10. '():
' → logprob: -14.378664016723633

Token 456: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18314939737319946
    2. ' def' → logprob: -1.9331493377685547
    3. 'def' (adapté à ' def') → logprob: -3.8081493377685547
    4. 'class' → logprob: -7.683149337768555
    5. '```' → logprob: -12.058149337768555
    6. ' class' → logprob: -12.308149337768555
    7. '    ' → logprob: -13.433149337768555
    8. ':' → logprob: -14.308149337768555
    9. ' ' → logprob: -14.308149337768555
    10. '	def' → logprob: -14.683149337768555

Token 457: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.1014552116394043
    2. ' ' → logprob: -1.6014552116394043
    3. ' __' → logprob: -1.9764552116394043
    4. 'def' → logprob: -2.3514552116394043
    5. '   ' → logprob: -2.9764552116394043
    6. 'class' → logprob: -3.1014552116394043
    7. '  ' → logprob: -3.2264552116394043
    8. '__' → logprob: -3.2264552116394043
    9. '...' → logprob: -4.601455211639404
    10. 'classmethod' → logprob: -4.601455211639404

Token 458: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. ' init' → logprob: -16.375
    3. '(init' → logprob: -20.0
    4. '_init' → logprob: -20.5
    5. '```' → logprob: -20.625
    6. 'int' → logprob: -21.0
    7. 'def' → logprob: -21.125
    8. '	init' → logprob: -22.375
    9. 'inite' → logprob: -22.375
    10. 'ini' → logprob: -22.5

Token 459: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0005888947052881122
    2. '(self' → logprob: -7.625588893890381
    3. '__' → logprob: -9.375589370727539
    4. ' (' → logprob: -11.750589370727539
    5. '_(' → logprob: -12.375589370727539
    6. '__(
' → logprob: -12.625589370727539
    7. '   ' → logprob: -14.875589370727539
    8. 'self' → logprob: -16.00058937072754
    9. '__((' → logprob: -17.25058937072754
    10. ' ' → logprob: -17.37558937072754

Token 460: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00013274075172375888
    2. ' self' → logprob: -9.00013256072998
    3. '   ' → logprob: -12.37513256072998
    4. '
' → logprob: -13.00013256072998
    5. '       ' → logprob: -13.62513256072998
    6. ',' → logprob: -14.50013256072998
    7. '(self' → logprob: -14.62513256072998
    8. 'R' → logprob: -14.87513256072998
    9. '0' → logprob: -16.375133514404297
    10. ')' → logprob: -16.750133514404297

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009334942442364991
    2. 'self' → logprob: -7.750933647155762
    3. ' ,' → logprob: -7.875933647155762
    4. '(self' → logprob: -9.875933647155762
    5. ' (' → logprob: -10.375933647155762
    6. '(' → logprob: -11.500933647155762
    7. '   ' → logprob: -11.625933647155762
    8. '       ' → logprob: -12.250933647155762
    9. ',self' → logprob: -12.250933647155762
    10. ' self' → logprob: -12.375933647155762

Token 462: ' state' (ID: 2608)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.18276292085647583
    2. ' R' → logprob: -1.807762861251831
    3. '   ' → logprob: -6.05776309967041
    4. 'self' → logprob: -8.30776309967041
    5. ' ' → logprob: -9.43276309967041
    6. 'state' → logprob: -9.68276309967041
    7. '       ' → logprob: -10.05776309967041
    8. 'initial' → logprob: -10.18276309967041
    9. 'grid' → logprob: -10.55776309967041
    10. 'sen' → logprob: -10.68276309967041

Token 463: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010341187007725239
    2. '):' → logprob: -7.126034259796143
    3. ',' → logprob: -8.626033782958984
    4. '):
' → logprob: -10.626033782958984
    5. ')' → logprob: -11.001033782958984
    6. ' :' → logprob: -12.001033782958984
    7. '=' → logprob: -13.626033782958984
    8. ' ):' → logprob: -14.126033782958984
    9. '=None' → logprob: -14.876033782958984
    10. '<|end|>' → logprob: -15.126033782958984

Token 464: ' Sen' (ID: 8675)
  Prédit: 'Sen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sen' → logprob: -0.048601794987916946
    2. ' Sen' → logprob: -3.0486018657684326
    3. ')' → logprob: -11.923602104187012
    4. ' ' → logprob: -13.173602104187012
    5. '   ' → logprob: -13.298602104187012
    6. 'State' → logprob: -13.923602104187012
    7. '_S' → logprob: -14.173602104187012
    8. 'Sent' → logprob: -14.423602104187012
    9. ',' → logprob: -14.923602104187012
    10. '...' → logprob: -15.048602104187012

Token 465: 'bei' (ID: 36127)
  Prédit: 'bei'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bei' → logprob: -7.52919222577475e-05
    2. 'be' → logprob: -10.500075340270996
    3. '```' → logprob: -11.625075340270996
    4. 'b' → logprob: -11.625075340270996
    5. '`' → logprob: -12.125075340270996
    6. 'obei' → logprob: -12.250075340270996
    7. 'abei' → logprob: -12.750075340270996
    8. ' bei' → logprob: -12.875075340270996
    9. 'Bei' → logprob: -13.000075340270996
    10. '_' → logprob: -13.125075340270996

Token 466: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -4.2987729102605954e-05
    2. ',' → logprob: -10.875042915344238
    3. 't' → logprob: -10.875042915344238
    4. 'state' → logprob: -13.750042915344238
    5. '   ' → logprob: -14.000042915344238
    6. ')' → logprob: -14.125042915344238
    7. ' State' → logprob: -14.250042915344238
    8. 'S' → logprob: -15.000042915344238
    9. ' ,' → logprob: -15.125042915344238
    10. '
' → logprob: -15.750042915344238

Token 467: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029503878206014633
    2. '):' → logprob: -3.65450382232666
    3. '):
' → logprob: -5.77950382232666
    4. '       ' → logprob: -9.77950382232666
    5. '   ' → logprob: -10.77950382232666
    6. ')' → logprob: -11.27950382232666
    7. ' ,' → logprob: -11.40450382232666
    8. ',
' → logprob: -12.90450382232666
    9. '):
' → logprob: -13.65450382232666
    10. '):

' → logprob: -13.90450382232666

Token 468: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015169414109550416
    2. 'self' → logprob: -9.250151634216309
    3. ' self' → logprob: -10.375151634216309
    4. '   ' → logprob: -11.125151634216309
    5. ',' → logprob: -12.125151634216309
    6. ':' → logprob: -13.375151634216309
    7. 'def' → logprob: -14.375151634216309
    8. '(self' → logprob: -14.875151634216309
    9. '<|end|>' → logprob: -14.875151634216309
    10. '):
' → logprob: -15.250151634216309

Token 469: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.029001658782362938
    2. ' self' → logprob: -4.029001712799072
    3. '       ' → logprob: -4.529001712799072
    4. '   ' → logprob: -13.529001235961914
    5. '	self' → logprob: -16.154001235961914
    6. 'class' → logprob: -17.654001235961914
    7. '(self' → logprob: -18.154001235961914
    8. '```' → logprob: -18.279001235961914
    9. '
' → logprob: -18.529001235961914
    10. 'def' → logprob: -18.529001235961914

Token 470: '.initial' (ID: 58290)
  Prédit: '.state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.state' → logprob: -0.08050958812236786
    2. '.' → logprob: -2.580509662628174
    3. '.current' → logprob: -7.455509662628174
    4. 'state' → logprob: -7.580509662628174
    5. '.initial' → logprob: -7.830509662628174
    6. ' .' → logprob: -9.705509185791016
    7. '.s' → logprob: -10.955509185791016
    8. '.original' → logprob: -11.455509185791016
    9. '   ' → logprob: -11.705509185791016
    10. '.states' → logprob: -11.705509185791016

Token 471: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0004994167247787118
    2. '_' → logprob: -8.500499725341797
    3. 'state' → logprob: -8.750499725341797
    4. 'State' → logprob: -9.125499725341797
    5. ' _' → logprob: -10.875499725341797
    6. ' state' → logprob: -12.125499725341797
    7. '_State' → logprob: -13.375499725341797
    8. '_states' → logprob: -13.625499725341797
    9. ' =' → logprob: -14.125499725341797
    10. '=' → logprob: -15.500499725341797

Token 472: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269282102584839
    2. ' =' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.251928329467773
    4. ':' → logprob: -17.751928329467773
    5. '   ' → logprob: -18.126928329467773
    6. '=
' → logprob: -18.751928329467773
    7. '=

' → logprob: -19.251928329467773
    8. '    ' → logprob: -19.876928329467773
    9. ',' → logprob: -19.876928329467773
    10. ' =
' → logprob: -20.001928329467773

Token 473: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.01416350994259119
    2. ' state' → logprob: -4.264163494110107
    3. '	state' → logprob: -18.889163970947266
    4. 'initial' → logprob: -19.764163970947266
    5. '(state' → logprob: -19.889163970947266
    6. '   ' → logprob: -20.639163970947266
    7. ' ' → logprob: -21.014163970947266
    8. 'sta' → logprob: -21.139163970947266
    9. '_state' → logprob: -21.389163970947266
    10. '       ' → logprob: -21.514163970947266

Token 474: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.781102180480957
    2. '       ' → logprob: -0.781102180480957
    3. '   ' → logprob: -2.906102180480957
    4. '<|end|>' → logprob: -3.656102180480957
    5. ',' → logprob: -6.281102180480957
    6. '<|end|>' → logprob: -7.781102180480957
    7. 'def' → logprob: -7.906102180480957
    8. '    
' → logprob: -8.031102180480957
    9. '        
' → logprob: -8.281102180480957
    10. '```' → logprob: -9.531102180480957

Token 475: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5489627122879028
    2. '       ' → logprob: -1.5489627122879028
    3. '
' → logprob: -1.7989627122879028
    4. '<|end|>' → logprob: -3.6739625930786133
    5. 'def' → logprob: -4.423962593078613
    6. ' def' → logprob: -5.298962593078613
    7. ',' → logprob: -7.548962593078613
    8. '    
' → logprob: -7.798962593078613
    9. '<|end|>' → logprob: -8.173962593078613
    10. '```' → logprob: -8.298962593078613

Token 476: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014711630530655384
    2. 'def' → logprob: -4.639711856842041
    3. '       ' → logprob: -5.764711856842041
    4. '
' → logprob: -7.264711856842041
    5. ' self' → logprob: -7.264711856842041
    6. '   ' → logprob: -8.014711380004883
    7. 'from' → logprob: -10.264711380004883
    8. 'import' → logprob: -10.639711380004883
    9. '        
' → logprob: -12.389711380004883
    10. '

' → logprob: -12.764711380004883

Token 477: '.R' (ID: 3395)
  Prédit: '.best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.best' → logprob: -0.05310669541358948
    2. '.vis' → logprob: -3.9281067848205566
    3. '.current' → logprob: -4.178106784820557
    4. '.R' → logprob: -5.053106784820557
    5. '.memo' → logprob: -6.428106784820557
    6. '.pos' → logprob: -6.553106784820557
    7. '.states' → logprob: -6.803106784820557
    8. '.min' → logprob: -6.928106784820557
    9. 'best' → logprob: -7.053106784820557
    10. '.rows' → logprob: -7.178106784820557

Token 478: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03843263164162636
    2. '=' → logprob: -3.2884325981140137
    3. ',' → logprob: -8.913433074951172
    4. '       ' → logprob: -9.288433074951172
    5. ' ' → logprob: -9.663433074951172
    6. '   ' → logprob: -9.788433074951172
    7. '    ' → logprob: -11.038433074951172
    8. '        ' → logprob: -11.163433074951172
    9. '=self' → logprob: -12.663433074951172
    10. ' =
' → logprob: -12.788433074951172

Token 479: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.020589066669344902
    2. ' state' → logprob: -3.8955891132354736
    3. 'self' → logprob: -10.145588874816895
    4. '   ' → logprob: -12.020588874816895
    5. ' self' → logprob: -13.770588874816895
    6. '       ' → logprob: -15.270588874816895
    7. '	state' → logprob: -15.270588874816895
    8. ' ' → logprob: -16.14558982849121
    9. 'len' → logprob: -16.39558982849121
    10. '    ' → logprob: -16.39558982849121

Token 480: '.R' (ID: 3395)
  Prédit: '.R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.R' → logprob: -8.41866585687967e-06
    2. '.' → logprob: -12.125008583068848
    3. ' .' → logprob: -13.250008583068848
    4. 'R' → logprob: -14.000008583068848
    5. '   ' → logprob: -15.625008583068848
    6. '.r' → logprob: -17.12500762939453
    7. '`.' → logprob: -17.50000762939453
    8. '.S' → logprob: -17.75000762939453
    9. '	R' → logprob: -18.75000762939453
    10. '```' → logprob: -19.12500762939453

Token 481: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000748994410969317
    2. 'self' → logprob: -7.250749111175537
    3. ' self' → logprob: -10.625748634338379
    4. '        
' → logprob: -12.375748634338379
    5. ',' → logprob: -12.875748634338379
    6. '   ' → logprob: -13.125748634338379
    7. '<|end|>' → logprob: -13.375748634338379
    8. '
' → logprob: -13.750748634338379
    9. '      ' → logprob: -14.250748634338379
    10. '        ' → logprob: -14.750748634338379

Token 482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01735980436205864
    2. 'self' → logprob: -4.142359733581543
    3. ' self' → logprob: -6.642359733581543
    4. '
' → logprob: -11.642359733581543
    5. '   ' → logprob: -12.642359733581543
    6. '	self' → logprob: -13.392359733581543
    7. '        
' → logprob: -13.642359733581543
    8. '           ' → logprob: -13.767359733581543
    9. '      ' → logprob: -13.892359733581543
    10. '```' → logprob: -14.517359733581543

Token 483: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00012439649435691535
    2. ' self' → logprob: -9.000123977661133
    3. 'state' → logprob: -14.375123977661133
    4. '       ' → logprob: -15.000123977661133
    5. 'C' → logprob: -17.750123977661133
    6. '```' → logprob: -17.750123977661133
    7. '   ' → logprob: -17.875123977661133
    8. '(self' → logprob: -18.500123977661133
    9. '
' → logprob: -18.500123977661133
    10. '           ' → logprob: -19.000123977661133

Token 484: '.C' (ID: 2010)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.22584091126918793
    2. '.C' → logprob: -1.6008409261703491
    3. ' C' → logprob: -8.10084056854248
    4. '
' → logprob: -10.60084056854248
    5. 'initial' → logprob: -10.72584056854248
    6. '   ' → logprob: -10.72584056854248
    7. '.' → logprob: -11.35084056854248
    8. 'state' → logprob: -11.47584056854248
    9. ' .' → logprob: -11.85084056854248
    10. '=C' → logprob: -12.72584056854248

Token 485: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5764247179031372
    2. '=' → logprob: -0.8264247179031372
    3. '<|end|>' → logprob: -7.951424598693848
    4. '   ' → logprob: -10.076424598693848
    5. ' ' → logprob: -10.826424598693848
    6. ',' → logprob: -11.201424598693848
    7. '<|end|>' → logprob: -11.451424598693848
    8. '       ' → logprob: -11.451424598693848
    9. '=self' → logprob: -11.576424598693848
    10. 'state' → logprob: -12.201424598693848

Token 486: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.033693306148052216
    2. ' state' → logprob: -3.408693313598633
    3. '   ' → logprob: -10.908693313598633
    4. 'self' → logprob: -11.533693313598633
    5. 'C' → logprob: -11.658693313598633
    6. ' ' → logprob: -13.158693313598633
    7. '	state' → logprob: -13.283693313598633
    8. '       ' → logprob: -13.408693313598633
    9. ' C' → logprob: -13.658693313598633
    10. '    ' → logprob: -14.033693313598633

Token 487: '.C' (ID: 2010)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 488: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2750818431377411
    2. '
' → logprob: -2.1500818729400635
    3. '<|end|>' → logprob: -2.1500818729400635
    4. '   ' → logprob: -5.525081634521484
    5. '<|end|>' → logprob: -7.025081634521484
    6. ',' → logprob: -7.025081634521484
    7. 'self' → logprob: -7.650081634521484
    8. 'def' → logprob: -8.025081634521484
    9. ' self' → logprob: -8.275081634521484
    10. '```' → logprob: -8.400081634521484

Token 489: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4223737120628357
    2. 'def' → logprob: -1.1723737716674805
    3. ' def' → logprob: -4.1723737716674805
    4. '       ' → logprob: -4.5473737716674805
    5. '
' → logprob: -5.4223737716674805
    6. '<|end|>' → logprob: -6.0473737716674805
    7. 'from' → logprob: -6.9223737716674805
    8. 'self' → logprob: -7.7973737716674805
    9. '```' → logprob: -8.17237377166748
    10. '<|end|>' → logprob: -9.29737377166748

Token 490: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00045914790825918317
    2. ' def' → logprob: -8.000458717346191
    3. '   ' → logprob: -9.000458717346191
    4. 'from' → logprob: -16.250459671020508
    5. '	def' → logprob: -16.250459671020508
    6. '
' → logprob: -17.000459671020508
    7. '```' → logprob: -17.125459671020508
    8. 'de' → logprob: -18.250459671020508
    9. 'class' → logprob: -18.875459671020508
    10. ' ' → logprob: -19.000459671020508

Token 491: ' _' (ID: 1175)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0753281116485596
    2. 'maximize' → logprob: -1.3253281116485596
    3. ' max' → logprob: -2.4503281116485596
    4. 'flip' → logprob: -2.5753281116485596
    5. ' maximize' → logprob: -2.8253281116485596
    6. ' find' → logprob: -3.5753281116485596
    7. 'find' → logprob: -3.7003281116485596
    8. 'def' → logprob: -4.0753278732299805
    9. ' def' → logprob: -4.0753278732299805
    10. ' flip' → logprob: -4.3253278732299805

Token 492: 'column' (ID: 9380)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9614995718002319
    2. 'maximize' → logprob: -1.711499571800232
    3. 'best' → logprob: -2.2114996910095215
    4. 'generate' → logprob: -2.4614996910095215
    5. 'count' → logprob: -2.5864996910095215
    6. 'enumer' → logprob: -3.2114996910095215
    7. 'flip' → logprob: -3.3364996910095215
    8. 'all' → logprob: -3.9614996910095215
    9. 'try' → logprob: -4.4614996910095215
    10. 'search' → logprob: -4.7114996910095215

Token 493: '_pattern' (ID: 50002)
  Prédit: '_flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_flip' → logprob: -0.6732615232467651
    2. '_counts' → logprob: -2.2982616424560547
    3. '_com' → logprob: -2.5482616424560547
    4. '_fl' → logprob: -2.7982616424560547
    5. '_masks' → logprob: -3.0482616424560547
    6. '_s' → logprob: -3.9232616424560547
    7. 's' → logprob: -3.9232616424560547
    8. '_patterns' → logprob: -4.048261642456055
    9. '_mask' → logprob: -4.173261642456055
    10. '_count' → logprob: -4.173261642456055

Token 494: '_for' (ID: 11903)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5520418882369995
    2. '(self' → logprob: -1.0520418882369995
    3. '_counts' → logprob: -2.677042007446289
    4. '_count' → logprob: -5.802042007446289
    5. '_mask' → logprob: -6.802042007446289
    6. '(' → logprob: -7.677042007446289
    7. 'self' → logprob: -7.677042007446289
    8. '_to' → logprob: -7.927042007446289
    9. '_s' → logprob: -8.802042007446289
    10. '_bits' → logprob: -9.677042007446289

Token 495: '_row' (ID: 19157)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7163881659507751
    2. 'row' → logprob: -1.59138822555542
    3. '(self' → logprob: -1.71638822555542
    4. '_row' → logprob: -2.21638822555542
    5. ' self' → logprob: -4.84138822555542
    6. ' row' → logprob: -5.46638822555542
    7. 'def' → logprob: -5.71638822555542
    8. 'col' → logprob: -6.71638822555542
    9. 'column' → logprob: -7.84138822555542
    10. 'r' → logprob: -8.341387748718262

Token 496: '_fl' (ID: 18192)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008707226254045963
    2. '(' → logprob: -4.758707046508789
    3. 'self' → logprob: -10.508707046508789
    4. '_count' → logprob: -10.758707046508789
    5. 's' → logprob: -11.633707046508789
    6. '(s' → logprob: -11.883707046508789
    7. '_index' → logprob: -12.133707046508789
    8. '_(' → logprob: -12.258707046508789
    9. 'def' → logprob: -12.758707046508789
    10. '(row' → logprob: -12.883707046508789

Token 497: 'ips' (ID: 3200)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.011691223829984665
    2. 'ips' → logprob: -4.511691093444824
    3. 'ipped' → logprob: -7.386691093444824
    4. 'ipping' → logprob: -11.261691093444824
    5. 'ipper' → logprob: -13.386691093444824
    6. '_ip' → logprob: -13.386691093444824
    7. ' ip' → logprob: -13.386691093444824
    8. 'iped' → logprob: -14.136691093444824
    9. 'i' → logprob: -14.261691093444824
    10. 'ipl' → logprob: -14.886691093444824

Token 498: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00026288547087460756
    2. '(' → logprob: -8.250263214111328
    3. ' (' → logprob: -14.000263214111328
    4. '(
' → logprob: -15.250263214111328
    5. '(s' → logprob: -15.250263214111328
    6. 'self' → logprob: -15.500263214111328
    7. '(row' → logprob: -17.125263214111328
    8. '(sel' → logprob: -17.375263214111328
    9. '   ' → logprob: -18.500263214111328
    10. '(se' → logprob: -19.125263214111328

Token 499: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08528114855289459
    2. '(self' → logprob: -2.9602811336517334
    3. 'self' → logprob: -3.5852811336517334
    4. ')(' → logprob: -6.7102813720703125
    5. 'def' → logprob: -8.210281372070312
    6. ' (' → logprob: -8.585281372070312
    7. ')' → logprob: -8.710281372070312
    8. '   ' → logprob: -9.210281372070312
    9. ' ,' → logprob: -10.085281372070312
    10. '(' → logprob: -10.210281372070312

Token 500: ' row' (ID: 5225)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8599953055381775
    2. 'row' → logprob: -1.2349953651428223
    3. ' row' → logprob: -2.1099953651428223
    4. ' self' → logprob: -2.3599953651428223
    5. 'flip' → logprob: -3.9849953651428223
    6. '       ' → logprob: -4.484995365142822
    7. ' col' → logprob: -4.734995365142822
    8. 'col' → logprob: -4.859995365142822
    9. ' flip' → logprob: -4.984995365142822
    10. '   ' → logprob: -5.359995365142822

Token 501: '_flip' (ID: 150878)
  Prédit: '_fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fl' → logprob: -0.5653997659683228
    2. 's' → logprob: -1.5653997659683228
    3. '):' → logprob: -2.815399646759033
    4. '_mask' → logprob: -3.190399646759033
    5. '_flip' → logprob: -3.440399646759033
    6. '_index' → logprob: -3.940399646759033
    7. ':' → logprob: -4.190399646759033
    8. ')' → logprob: -4.190399646759033
    9. '_idx' → logprob: -4.190399646759033
    10. ',' → logprob: -4.940399646759033

Token 502: '_mask' (ID: 21732)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8013464212417603
    2. '_mask' → logprob: -0.8013464212417603
    3. 'mask' → logprob: -2.3013463020324707
    4. ')' → logprob: -6.926346302032471
    5. '_masks' → logprob: -7.551346302032471
    6. '):
' → logprob: -8.551346778869629
    7. 'ed' → logprob: -8.676346778869629
    8. 'm' → logprob: -9.301346778869629
    9. ',' → logprob: -9.426346778869629
    10. 'set' → logprob: -9.801346778869629

Token 503: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01347348652780056
    2. ',' → logprob: -4.3884735107421875
    3. '):' → logprob: -7.3884735107421875
    4. ':int' → logprob: -8.388473510742188
    5. ' :' → logprob: -9.388473510742188
    6. ' ,' → logprob: -11.388473510742188
    7. ')' → logprob: -11.638473510742188
    8. '):
' → logprob: -12.388473510742188
    9. '   ' → logprob: -12.513473510742188
    10. ' ):' → logprob: -12.888473510742188

Token 504: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008634188212454319
    2. ' int' → logprob: -4.758634090423584
    3. '(int' → logprob: -11.508634567260742
    4. ')' → logprob: -11.633634567260742
    5. '   ' → logprob: -14.758634567260742
    6. '[int' → logprob: -15.883634567260742
    7. '
' → logprob: -16.133634567260742
    8. ':int' → logprob: -16.508634567260742
    9. ',' → logprob: -17.258634567260742
    10. '```' → logprob: -17.383634567260742

Token 505: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06300445646047592
    2. ')' → logprob: -2.813004493713379
    3. '):' → logprob: -8.063004493713379
    4. '):
' → logprob: -8.313004493713379
    5. '   ' → logprob: -8.688004493713379
    6. ' ,' → logprob: -8.813004493713379
    7. '       ' → logprob: -9.688004493713379
    8. 'self' → logprob: -10.313004493713379
    9. ',row' → logprob: -10.438004493713379
    10. ' )' → logprob: -11.438004493713379

Token 506: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3855559527873993
    2. '(self' → logprob: -1.2605559825897217
    3. '       ' → logprob: -4.010555744171143
    4. ' ->' → logprob: -5.260555744171143
    5. '->' → logprob: -5.510555744171143
    6. ':
' → logprob: -5.635555744171143
    7. '(' → logprob: -5.885555744171143
    8. '   ' → logprob: -7.010555744171143
    9. ')' → logprob: -7.760555744171143
    10. 'self' → logprob: -7.885555744171143

Token 507: ' tuple' (ID: 31311)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3279404640197754
    2. ' list' → logprob: -1.9529404640197754
    3. 'int' → logprob: -2.0779404640197754
    4. ' int' → logprob: -4.577940464019775
    5. '[int' → logprob: -6.702940464019775
    6. '[list' → logprob: -8.202939987182617
    7. 'List' → logprob: -8.827939987182617
    8. '   ' → logprob: -8.952939987182617
    9. 'set' → logprob: -9.202939987182617
    10. 'tuple' → logprob: -9.827939987182617

Token 508: '[int' (ID: 40124)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.25462883710861206
    2. ':' → logprob: -2.254628896713257
    3. ':
' → logprob: -3.504628896713257
    4. '       ' → logprob: -3.629628896713257
    5. '[' → logprob: -3.629628896713257
    6. '[self' → logprob: -3.754628896713257
    7. '[int' → logprob: -5.379628658294678
    8. '   ' → logprob: -5.879628658294678
    9. '[
' → logprob: -6.379628658294678
    10. '[]' → logprob: -7.004628658294678

Token 509: ',' (ID: 11)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.35037553310394287
    2. ',' → logprob: -1.2253755331039429
    3. ']' → logprob: -6.725375652313232
    4. ']:
' → logprob: -7.850375652313232
    5. ',int' → logprob: -9.100375175476074
    6. '[int' → logprob: -9.475375175476074
    7. ']:
' → logprob: -9.600375175476074
    8. ']int' → logprob: -11.225375175476074
    9. '):' → logprob: -11.475375175476074
    10. '[' → logprob: -11.475375175476074

Token 510: ' ...' (ID: 2550)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...' → logprob: -0.6828001141548157
    2. 'int' → logprob: -1.057800054550171
    3. '...]' → logprob: -1.932800054550171
    4. ' ...' → logprob: -6.80780029296875
    5. ']' → logprob: -6.93280029296875
    6. 'bool' → logprob: -7.80780029296875
    7. ']int' → logprob: -9.30780029296875
    8. ' int' → logprob: -9.55780029296875
    9. '[int' → logprob: -9.68280029296875
    10. 'list' → logprob: -10.43280029296875

Token 511: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.8936028480529785
    2. ']:
' → logprob: -1.0186028480529785
    3. '):
' → logprob: -2.0186028480529785
    4. '):' → logprob: -3.1436028480529785
    5. '   ' → logprob: -3.6436028480529785
    6. ']' → logprob: -3.8936028480529785
    7. ',' → logprob: -5.7686028480529785
    8. '       ' → logprob: -6.6436028480529785
    9. ':' → logprob: -7.0186028480529785
    10. ']:
' → logprob: -7.7686028480529785

Token 512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011033779446734115
    2. 'result' → logprob: -9.875110626220703
    3. 'cols' → logprob: -11.500110626220703
    4. 'columns' → logprob: -11.875110626220703
    5. '[]' → logprob: -12.125110626220703
    6. ',' → logprob: -12.125110626220703
    7. 'pattern' → logprob: -12.625110626220703
    8. 'new' → logprob: -13.125110626220703
    9. 'col' → logprob: -13.250110626220703
    10. '   ' → logprob: -13.375110626220703

Token 513: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23231694102287292
    2. 'pattern' → logprob: -1.9823169708251953
    3. 'columns' → logprob: -3.8573169708251953
    4. 'column' → logprob: -4.482316970825195
    5. 'cols' → logprob: -4.482316970825195
    6. 'result' → logprob: -4.732316970825195
    7. 'col' → logprob: -4.982316970825195
    8. 'patterns' → logprob: -5.107316970825195
    9. 'counts' → logprob: -5.732316970825195
    10. 'pat' → logprob: -7.982316970825195

Token 514: '       ' (ID: 309)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -1.1238348484039307
    2. 'pattern' → logprob: -1.3738348484039307
    3. ' patterns' → logprob: -1.8738348484039307
    4. 'column' → logprob: -2.2488348484039307
    5. '       ' → logprob: -2.7488348484039307
    6. ' column' → logprob: -3.7488348484039307
    7. 'result' → logprob: -3.8738348484039307
    8. ' result' → logprob: -4.498834609985352
    9. 'col' → logprob: -4.498834609985352
    10. 'columns' → logprob: -4.623834609985352

Token 515: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10185947269201279
    2. ' result' → logprob: -3.3518595695495605
    3. ' columns' → logprob: -4.2268595695495605
    4. ' new' → logprob: -5.2268595695495605
    5. ' column' → logprob: -5.2268595695495605
    6. ' col' → logprob: -5.2268595695495605
    7. ' counts' → logprob: -5.2268595695495605
    8. '"""' → logprob: -5.2268595695495605
    9. 'result' → logprob: -5.4768595695495605
    10. ' patterns' → logprob: -5.6018595695495605

Token 516: ' given' (ID: 4335)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.6158691644668579
    2. ' col' → logprob: -1.615869164466858
    3. ' c' → logprob: -2.1158690452575684
    4. 'col' → logprob: -2.7408690452575684
    5. 'c' → logprob: -3.2408690452575684
    6. ' a' → logprob: -4.615869045257568
    7. 'each' → logprob: -4.615869045257568
    8. ' r' → logprob: -5.115869045257568
    9. ' row' → logprob: -5.365869045257568
    10. 'r' → logprob: -5.990869045257568

Token 517: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -1.5733582973480225
    2. ' each' → logprob: -1.6983582973480225
    3. 'row' → logprob: -1.8233582973480225
    4. 'col' → logprob: -2.0733582973480225
    5. ' col' → logprob: -2.3233582973480225
    6. 'c' → logprob: -2.9483582973480225
    7. 'r' → logprob: -3.1983582973480225
    8. 'each' → logprob: -3.4483582973480225
    9. ' a' → logprob: -3.9483582973480225
    10. ' c' → logprob: -4.073358535766602

Token 518: ' flips' (ID: 169694)
  Prédit: '_fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fl' → logprob: -0.7733898162841797
    2. '_flip' → logprob: -0.8983898162841797
    3. 'fl' → logprob: -2.3983898162841797
    4. ' flips' → logprob: -4.02338981628418
    5. 'flip' → logprob: -4.14838981628418
    6. 's' → logprob: -5.52338981628418
    7. '_mask' → logprob: -7.02338981628418
    8. ' flip' → logprob: -7.27338981628418
    9. 'mask' → logprob: -7.77338981628418
    10. '-fl' → logprob: -9.52338981628418

Token 519: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001787513610906899
    2. '       ' → logprob: -6.6267876625061035
    3. ',
' → logprob: -8.376787185668945
    4. ' ,' → logprob: -9.001787185668945
    5. '   ' → logprob: -9.626787185668945
    6. ':' → logprob: -11.001787185668945
    7. ' (' → logprob: -12.376787185668945
    8. 'def' → logprob: -12.501787185668945
    9. ':
' → logprob: -12.876787185668945
    10. '"""
' → logprob: -13.251787185668945

Token 520: ' compute' (ID: 23864)
  Prédit: ' patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' patterns' → logprob: -0.4007386863231659
    2. 'patterns' → logprob: -1.9007387161254883
    3. 'pattern' → logprob: -2.6507387161254883
    4. '       ' → logprob: -3.4007387161254883
    5. ' column' → logprob: -4.150738716125488
    6. ' col' → logprob: -4.275738716125488
    7. 'column' → logprob: -4.525738716125488
    8. ' pattern' → logprob: -4.525738716125488
    9. 'col' → logprob: -4.525738716125488
    10. ' result' → logprob: -5.025738716125488

Token 521: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7043503522872925
    2. ' a' → logprob: -1.5793503522872925
    3. 'the' → logprob: -1.9543503522872925
    4. 'column' → logprob: -2.829350471496582
    5. ' column' → logprob: -3.204350471496582
    6. 'a' → logprob: -3.829350471496582
    7. ' tuple' → logprob: -4.204350471496582
    8. 'tuple' → logprob: -4.579350471496582
    9. 'pattern' → logprob: -5.579350471496582
    10. ' patterns' → logprob: -6.454350471496582

Token 522: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.7055967450141907
    2. 'column' → logprob: -1.580596685409546
    3. ' pattern' → logprob: -2.455596685409546
    4. 'result' → logprob: -2.830596685409546
    5. ' column' → logprob: -3.205596685409546
    6. 'patterns' → logprob: -3.455596685409546
    7. 'tuple' → logprob: -3.455596685409546
    8. ' tuple' → logprob: -4.205596923828125
    9. ' patterns' → logprob: -4.330596923828125
    10. ' result' → logprob: -4.830596923828125

Token 523: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6196660399436951
    2. '       ' → logprob: -1.2446660995483398
    3. 'of' → logprob: -2.11966609954834
    4. ' for' → logprob: -3.99466609954834
    5. '(' → logprob: -4.11966609954834
    6. 'for' → logprob: -5.36966609954834
    7. ' that' → logprob: -5.74466609954834
    8. '   ' → logprob: -6.24466609954834
    9. ' (' → logprob: -6.74466609954834
    10. 'that' → logprob: -6.86966609954834

Token 524: ' each' (ID: 2454)
  Prédit: 'columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'columns' → logprob: -0.8821455240249634
    2. 'column' → logprob: -1.0071455240249634
    3. 'fl' → logprob: -2.507145404815674
    4. 'col' → logprob: -3.132145404815674
    5. ' columns' → logprob: -3.507145404815674
    6. 'each' → logprob: -3.882145404815674
    7. 'the' → logprob: -5.007145404815674
    8. ' column' → logprob: -5.257145404815674
    9. '1' → logprob: -5.257145404815674
    10. 'cells' → logprob: -5.757145404815674

Token 525: ' column' (ID: 6000)
  Prédit: 'column'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'column' → logprob: -0.24698038399219513
    2. 'col' → logprob: -1.6219804286956787
    3. ' column' → logprob: -3.8719804286956787
    4. 'cell' → logprob: -8.246980667114258
    5. ' col' → logprob: -8.496980667114258
    6. 'columns' → logprob: -11.246980667114258
    7. '   ' → logprob: -11.746980667114258
    8. ' cell' → logprob: -11.871980667114258
    9. 'c' → logprob: -11.996980667114258
    10. ' ' → logprob: -12.871980667114258

Token 526: ' after' (ID: 1934)
  Prédit: ' after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' after' → logprob: -0.5215657949447632
    2. ' as' → logprob: -1.2715657949447632
    3. '       ' → logprob: -3.3965659141540527
    4. ',' → logprob: -4.021565914154053
    5. ' in' → logprob: -4.021565914154053
    6. ' by' → logprob: -4.521565914154053
    7. ' based' → logprob: -4.646565914154053
    8. ':' → logprob: -5.271565914154053
    9. ' at' → logprob: -5.521565914154053
    10. ' when' → logprob: -5.646565914154053

Token 527: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6976316571235657
    2. ' row' → logprob: -1.572631597518921
    3. ' flipping' → logprob: -2.447631597518921
    4. ' flips' → logprob: -2.447631597518921
    5. '   ' → logprob: -3.197631597518921
    6. 'fl' → logprob: -3.572631597518921
    7. ' applying' → logprob: -3.822631597518921
    8. 'app' → logprob: -4.3226318359375
    9. ' the' → logprob: -4.9476318359375
    10. ' all' → logprob: -5.8226318359375

Token 528: ' flips' (ID: 169694)
  Prédit: '_fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fl' → logprob: -0.3727167248725891
    2. '_flip' → logprob: -1.7477166652679443
    3. ' flips' → logprob: -2.1227166652679443
    4. '   ' → logprob: -4.997716903686523
    5. 'fl' → logprob: -5.497716903686523
    6. '       ' → logprob: -5.872716903686523
    7. ' flip' → logprob: -6.747716903686523
    8. 'flip' → logprob: -6.997716903686523
    9. ' flipping' → logprob: -7.622716903686523
    10. '_' → logprob: -8.372716903686523

Token 529: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.904676079750061
    2. '       ' → logprob: -1.279676079750061
    3. ',' → logprob: -2.0296759605407715
    4. ' in' → logprob: -2.6546759605407715
    5. ':' → logprob: -3.1546759605407715
    6. ' applied' → logprob: -4.4046759605407715
    7. ' as' → logprob: -5.0296759605407715
    8. ' and' → logprob: -5.0296759605407715
    9. ' by' → logprob: -5.4046759605407715
    10. ' at' → logprob: -5.4046759605407715

Token 530: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005480298423208296
    2. '        
' → logprob: -8.000548362731934
    3. '
' → logprob: -9.375548362731934
    4. '"""' → logprob: -9.500548362731934
    5. '"""
' → logprob: -11.500548362731934
    6. ',' → logprob: -11.750548362731934
    7. '```' → logprob: -12.375548362731934
    8. ' lines' → logprob: -12.750548362731934
    9. '`' → logprob: -12.875548362731934
    10. ')' → logprob: -13.125548362731934

Token 531: ' Represents' (ID: 84592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009437421103939414
    2. ' result' → logprob: -8.625944137573242
    3. 'result' → logprob: -8.875944137573242
    4. '"""' → logprob: -8.875944137573242
    5. '
' → logprob: -9.250944137573242
    6. '):
' → logprob: -9.750944137573242
    7. '```' → logprob: -9.750944137573242
    8. ':' → logprob: -10.125944137573242
    9. ' new' → logprob: -10.500944137573242
    10. ',' → logprob: -10.750944137573242

Token 532: ' each' (ID: 2454)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.39681893587112427
    2. 'the' → logprob: -2.1468188762664795
    3. ' a' → logprob: -3.1468188762664795
    4. ' tuple' → logprob: -3.3968188762664795
    5. ' each' → logprob: -3.5218188762664795
    6. ' columns' → logprob: -3.8968188762664795
    7. ' how' → logprob: -4.271819114685059
    8. 'columns' → logprob: -4.396819114685059
    9. 'tuple' → logprob: -4.396819114685059
    10. '(
' → logprob: -4.771819114685059

Token 533: ' column' (ID: 6000)
  Prédit: 'column'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'column' → logprob: -0.6832824349403381
    2. ' column' → logprob: -1.3082823753356934
    3. 'col' → logprob: -1.5582823753356934
    4. ' col' → logprob: -4.558282375335693
    5. 'c' → logprob: -5.683282375335693
    6. ' c' → logprob: -8.933282852172852
    7. 'pattern' → logprob: -9.183282852172852
    8. ')' → logprob: -11.058282852172852
    9. '   ' → logprob: -11.308282852172852
    10. 'cell' → logprob: -11.308282852172852

Token 534: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.316113144159317
    2. 'as' → logprob: -1.3161131143569946
    3. '=' → logprob: -6.941112995147705
    4. 'by' → logprob: -7.441112995147705
    5. ')' → logprob: -7.691112995147705
    6. ' by' → logprob: -8.066113471984863
    7. ' =' → logprob: -8.816113471984863
    8. 'after' → logprob: -9.441113471984863
    9. 'in' → logprob: -9.566113471984863
    10. ' after' → logprob: -9.691113471984863

Token 535: ' an' (ID: 448)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2194701433181763
    2. ' a' → logprob: -1.4694701433181763
    3. ' an' → logprob: -1.7194701433181763
    4. 'tuple' → logprob: -1.7194701433181763
    5. 'an' → logprob: -2.7194700241088867
    6. ' tuple' → logprob: -3.0944700241088867
    7. '0' → logprob: -6.344470024108887
    8. 'integer' → logprob: -7.219470024108887
    9. 'bits' → logprob: -7.844470024108887
    10. 'int' → logprob: -8.094470024108887

Token 536: ' integer' (ID: 16336)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8683621287345886
    2. 'integer' → logprob: -0.8683621287345886
    3. ' integer' → logprob: -1.8683621883392334
    4. 'tuple' → logprob: -5.743361949920654
    5. ' int' → logprob: -5.868361949920654
    6. ' tuple' → logprob: -8.243362426757812
    7. '   ' → logprob: -11.243362426757812
    8. 't' → logprob: -11.993362426757812
    9. '           ' → logprob: -12.368362426757812
    10. 'C' → logprob: -12.618362426757812

Token 537: ' bit' (ID: 3546)
  Prédit: ' where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' where' → logprob: -0.2528587877750397
    2. ',' → logprob: -2.002858877182007
    3. ' with' → logprob: -3.502858877182007
    4. ' by' → logprob: -3.877858877182007
    5. ' (' → logprob: -4.877858638763428
    6. ' encoding' → logprob: -5.127858638763428
    7. ' of' → logprob: -5.752858638763428
    8. ')' → logprob: -6.002858638763428
    9. '       ' → logprob: -6.002858638763428
    10. 'where' → logprob: -6.127858638763428

Token 538: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.5714427828788757
    2. 'pattern' → logprob: -1.9464428424835205
    3. ' pattern' → logprob: -2.1964428424835205
    4. 's' → logprob: -2.6964428424835205
    5. ')' → logprob: -3.1964428424835205
    6. ' ' → logprob: -4.446442604064941
    7. '       ' → logprob: -5.071442604064941
    8. 'wise' → logprob: -5.071442604064941
    9. '```' → logprob: -5.071442604064941
    10. ',' → logprob: -5.196442604064941

Token 539: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0101474523544312
    2. '       ' → logprob: -1.0101474523544312
    3. ' with' → logprob: -2.8851475715637207
    4. ' where' → logprob: -3.2601475715637207
    5. ' representing' → logprob: -3.3851475715637207
    6. ' of' → logprob: -3.5101475715637207
    7. ' for' → logprob: -3.8851475715637207
    8. ' (' → logprob: -4.010147571563721
    9. '(' → logprob: -4.385147571563721
    10. '(row' → logprob: -4.635147571563721

Token 540: ' length' (ID: 5517)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0720399618148804
    2. 'the' → logprob: -1.9470399618148804
    3. ' the' → logprob: -2.19704008102417
    4. 'fl' → logprob: -2.32204008102417
    5. 'rows' → logprob: -2.57204008102417
    6. ' bits' → logprob: -2.69704008102417
    7. 'bits' → logprob: -2.94704008102417
    8. ' self' → logprob: -3.82204008102417
    9. ' flipped' → logprob: -4.32204008102417
    10. 'cells' → logprob: -4.57204008102417

Token 541: ' R' (ID: 460)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.043759409338235855
    2. ' self' → logprob: -3.168759346008301
    3. '(self' → logprob: -7.293759346008301
    4. '       ' → logprob: -9.7937593460083
    5. '=self' → logprob: -11.2937593460083
    6. '```' → logprob: -12.6687593460083
    7. '[self' → logprob: -12.6687593460083
    8. '`' → logprob: -13.9187593460083
    9. '
' → logprob: -14.0437593460083
    10. ' (' → logprob: -14.6687593460083

Token 542: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5910595059394836
    2. ',' → logprob: -1.5910594463348389
    3. ')' → logprob: -2.466059446334839
    4. '.' → logprob: -2.591059446334839
    5. ' representing' → logprob: -4.341059684753418
    6. ' for' → logprob: -4.841059684753418
    7. ' with' → logprob: -4.841059684753418
    8. ':' → logprob: -4.841059684753418
    9. ' (' → logprob: -5.091059684753418
    10. ',
' → logprob: -5.216059684753418

Token 543: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00820614118129015
    2. '"""' → logprob: -5.758206367492676
    3. '"""
' → logprob: -6.258206367492676
    4. '
' → logprob: -6.883206367492676
    5. ')' → logprob: -7.383206367492676
    6. '        
' → logprob: -7.383206367492676
    7. '):
' → logprob: -8.883206367492676
    8. '```' → logprob: -9.008206367492676
    9. '<|end|>' → logprob: -9.383206367492676
    10. ',' → logprob: -9.383206367492676

Token 544: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026382848620414734
    2. '"""' → logprob: -4.276382923126221
    3. '"""
' (adapté à ' """
') → logprob: -5.026382923126221
    4. '```' → logprob: -6.151382923126221
    5. '
' → logprob: -6.526382923126221
    6. ')' → logprob: -7.776382923126221
    7. '):
' → logprob: -7.776382923126221
    8. ':' → logprob: -8.651382446289062
    9. ',' → logprob: -8.776382446289062
    10. '        
' → logprob: -8.901382446289062

Token 545: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0041789524257183075
    2. 'pattern' → logprob: -7.129179000854492
    3. 'columns' → logprob: -7.379179000854492
    4. 'cols' → logprob: -7.379179000854492
    5. 'col' → logprob: -7.504179000854492
    6. 'column' → logprob: -7.754179000854492
    7. 'bits' → logprob: -8.379179000854492
    8. ' col' → logprob: -9.004179000854492
    9. 'pat' → logprob: -9.004179000854492
    10. 'result' → logprob: -9.129179000854492

Token 546: ' patterns' (ID: 18587)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.5236888527870178
    2. 'column' → logprob: -1.898688793182373
    3. 'col' → logprob: -2.023688793182373
    4. 'patterns' (adapté à ' patterns') → logprob: -3.023688793182373
    5. 'columns' → logprob: -3.523688793182373
    6. 'cols' → logprob: -3.648688793182373
    7. '       ' → logprob: -4.398688793182373
    8. 'result' → logprob: -5.273688793182373
    9. 'pat' → logprob: -6.023688793182373
    10. 'bits' → logprob: -6.773688793182373

Token 547: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141743123531342
    2. '=' → logprob: -1.7014174461364746
    3. '=[]' → logprob: -12.576416969299316
    4. '=[]
' → logprob: -15.076416969299316
    5. '   ' → logprob: -15.451416969299316
    6. '[]' → logprob: -16.826417922973633
    7. ':' → logprob: -16.951417922973633
    8. '=[' → logprob: -17.326417922973633
    9. '       ' → logprob: -17.326417922973633
    10. ' ' → logprob: -17.326417922973633

Token 548: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10358291864395142
    2. '[' → logprob: -2.9785828590393066
    3. '[]
' → logprob: -3.1035828590393066
    4. '()' → logprob: -6.978582859039307
    5. ' []' → logprob: -7.103582859039307
    6. 'tuple' → logprob: -7.478582859039307
    7. ' [' → logprob: -8.603583335876465
    8. ' []
' → logprob: -9.728583335876465
    9. '(' → logprob: -10.978583335876465
    10. '[
' → logprob: -11.353583335876465

Token 549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009616193361580372
    2. ' for' → logprob: -5.009616374969482
    3. 'for' → logprob: -5.884616374969482
    4. '   ' → logprob: -9.509615898132324
    5. '           ' → logprob: -10.509615898132324
    6. ',' → logprob: -12.884615898132324
    7. '	' → logprob: -13.384615898132324
    8. '        
' → logprob: -13.384615898132324
    9. ')' → logprob: -13.509615898132324
    10. '	for' → logprob: -13.509615898132324

Token 550: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001757696009008214
    2. '       ' → logprob: -8.750175476074219
    3. ' for' → logprob: -11.000175476074219
    4. '
' → logprob: -14.875175476074219
    5. '   ' → logprob: -15.750175476074219
    6. '	for' → logprob: -17.87517547607422
    7. '```' → logprob: -17.87517547607422
    8. '           ' → logprob: -18.37517547607422
    9. 'mask' → logprob: -19.00017547607422
    10. 'def' → logprob: -19.75017547607422

Token 551: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0033865992445498705
    2. 'r' → logprob: -5.753386497497559
    3. ' c' → logprob: -8.878386497497559
    4. 'col' → logprob: -9.628386497497559
    5. '   ' → logprob: -13.753386497497559
    6. ' r' → logprob: -14.628386497497559
    7. 'self' → logprob: -14.878386497497559
    8. 'row' → logprob: -15.003386497497559
    9. '_c' → logprob: -15.128386497497559
    10. ' col' → logprob: -15.378386497497559

Token 552: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004623679909855127
    2. 'in' → logprob: -5.379623889923096
    3. ' ' → logprob: -13.629623413085938
    4. '   ' → logprob: -14.504623413085938
    5. '_in' → logprob: -15.129623413085938
    6. 'In' → logprob: -15.379623413085938
    7. '	in' → logprob: -15.754623413085938
    8. '=' → logprob: -15.754623413085938
    9. ')' → logprob: -16.129623413085938
    10. 'int' → logprob: -16.254623413085938

Token 553: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00861456897109747
    2. ' range' → logprob: -4.758614540100098
    3. '0' → logprob: -18.133615493774414
    4. ' ' → logprob: -19.383615493774414
    5. '   ' → logprob: -19.508615493774414
    6. 'self' → logprob: -20.133615493774414
    7. '(range' → logprob: -20.133615493774414
    8. '	range' → logprob: -20.258615493774414
    9. 'r' → logprob: -21.008615493774414
    10. '[' → logprob: -21.133615493774414

Token 554: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20180876553058624
    2. 'self' → logprob: -1.7018088102340698
    3. '       ' → logprob: -8.95180892944336
    4. ' self' → logprob: -8.95180892944336
    5. '(' → logprob: -9.45180892944336
    6. '0' → logprob: -10.32680892944336
    7. '   ' → logprob: -11.57680892944336
    8. '(
' → logprob: -12.70180892944336
    9. '
' → logprob: -12.82680892944336
    10. '           ' → logprob: -12.82680892944336

Token 555: '.C' (ID: 2010)
  Prédit: '.C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.C' → logprob: -0.31367844343185425
    2. '.R' → logprob: -1.313678503036499
    3. 'C' → logprob: -8.313678741455078
    4. '.state' → logprob: -9.938678741455078
    5. 'state' → logprob: -10.188678741455078
    6. 'self' → logprob: -10.438678741455078
    7. 'R' → logprob: -10.563678741455078
    8. '.S' → logprob: -11.063678741455078
    9. '.r' → logprob: -13.063678741455078
    10. '.' → logprob: -13.188678741455078

Token 556: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14285703003406525
    2. '):' → logprob: -2.017857074737549
    3. '       ' → logprob: -9.51785659790039
    4. '):
' → logprob: -10.14285659790039
    5. ')' → logprob: -10.26785659790039
    6. '   ' → logprob: -11.51785659790039
    7. ' ):
' → logprob: -11.64285659790039
    8. '):

' → logprob: -12.14285659790039
    9. ':' → logprob: -12.39285659790039
    10. ':
' → logprob: -13.39285659790039

Token 557: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04039933159947395
    2. 'pattern' → logprob: -4.165399551391602
    3. 'bit' → logprob: -4.665399551391602
    4. 'pat' → logprob: -5.040399551391602
    5. 'mask' → logprob: -6.415399551391602
    6. 'bits' → logprob: -6.415399551391602
    7. 'p' → logprob: -6.540399551391602
    8. ' bit' → logprob: -7.415399551391602
    9. ' pattern' → logprob: -7.665399551391602
    10. 'column' → logprob: -7.665399551391602

Token 558: ' col' (ID: 996)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.041981812566518784
    2. 'col' (adapté à ' col') → logprob: -3.6669816970825195
    3. 'pat' → logprob: -4.4169816970825195
    4. 'p' → logprob: -6.2919816970825195
    5. 'bit' → logprob: -7.5419816970825195
    6. 'column' → logprob: -7.6669816970825195
    7. 'bits' → logprob: -8.16698169708252
    8. 'mask' → logprob: -8.41698169708252
    9. ' pattern' → logprob: -9.66698169708252
    10. '   ' → logprob: -9.91698169708252

Token 559: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.008860140107572079
    2. '_pat' → logprob: -5.508860111236572
    3. '_mask' → logprob: -5.883860111236572
    4. '_bits' → logprob: -6.758860111236572
    5. 'pattern' → logprob: -7.758860111236572
    6. '_bit' → logprob: -8.50886058807373
    7. '_value' → logprob: -9.13386058807373
    8. '_val' → logprob: -10.88386058807373
    9. 'pat' → logprob: -11.13386058807373
    10. ' pattern' → logprob: -11.38386058807373

Token 560: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868725895881653
    2. ' =' → logprob: -1.1368725299835205
    3. '           ' → logprob: -14.386872291564941
    4. ' ' → logprob: -15.386872291564941
    5. ',' → logprob: -15.511872291564941
    6. '=
' → logprob: -15.886872291564941
    7. '   ' → logprob: -15.886872291564941
    8. 'int' → logprob: -16.511873245239258
    9. '       ' → logprob: -16.886873245239258
    10. ':' → logprob: -17.011873245239258

Token 561: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.125009536743164
    4. '(' → logprob: -17.625009536743164
    5. '           ' → logprob: -18.625009536743164
    6. '       ' → logprob: -19.750009536743164
    7. '۰' → logprob: -20.125009536743164
    8. '000' → logprob: -20.375009536743164
    9. 'sum' → logprob: -20.500009536743164
    10. 's' → logprob: -20.875009536743164

Token 562: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '(' → logprob: -16.000001907348633
    4. 'sum' → logprob: -16.750001907348633
    5. '   ' → logprob: -18.500001907348633
    6. '
' → logprob: -19.875001907348633
    7. '           ' → logprob: -20.125001907348633
    8. '       ' → logprob: -20.375001907348633
    9. '000' → logprob: -20.500001907348633
    10. '(
' → logprob: -20.625001907348633

Token 563: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00968692172318697
    2. '
' → logprob: -4.7596869468688965
    3. ' for' → logprob: -7.3846869468688965
    4. '       ' → logprob: -8.134686470031738
    5. 'for' → logprob: -10.259686470031738
    6. '   ' → logprob: -10.509686470031738
    7. '               ' → logprob: -10.759686470031738
    8. '            
' → logprob: -10.759686470031738
    9. '    
' → logprob: -11.134686470031738
    10. '  
' → logprob: -11.759686470031738

Token 564: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003660938236862421
    2. ' for' → logprob: -8.2503662109375
    3. '       ' → logprob: -10.2503662109375
    4. '
' → logprob: -11.1253662109375
    5. '<|end|>' → logprob: -11.7503662109375
    6. '   ' → logprob: -12.0003662109375
    7. 'for' → logprob: -12.0003662109375
    8. ',' → logprob: -12.0003662109375
    9. '            
' → logprob: -12.0003662109375
    10. '	       ' → logprob: -12.5003662109375

Token 565: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004209343809634447
    2. '           ' → logprob: -5.754209518432617
    3. ' for' → logprob: -6.879209518432617
    4. '       ' → logprob: -13.754209518432617
    5. '   ' → logprob: -14.254209518432617
    6. '               ' → logprob: -16.004209518432617
    7. '	for' → logprob: -16.629209518432617
    8. ' ' → logprob: -16.754209518432617
    9. '```' → logprob: -17.254209518432617
    10. '         ' → logprob: -17.254209518432617

Token 566: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00360019039362669
    2. ' r' → logprob: -5.628600120544434
    3. '```' → logprob: -16.87860107421875
    4. '	r' → logprob: -17.00360107421875
    5. '_r' → logprob: -17.62860107421875
    6. '   ' → logprob: -17.62860107421875
    7. '(r' → logprob: -18.25360107421875
    8. 'row' → logprob: -18.62860107421875
    9. '`' → logprob: -18.87860107421875
    10. 's' → logprob: -19.44110107421875

Token 567: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03005732223391533
    2. 'in' → logprob: -3.530057430267334
    3. '<|end|>' → logprob: -8.405056953430176
    4. ' ' → logprob: -9.905056953430176
    5. '<|end|>' → logprob: -11.405056953430176
    6. '            ' → logprob: -12.280056953430176
    7. '        ' → logprob: -12.655056953430176
    8. '	in' → logprob: -13.155056953430176
    9. ')' → logprob: -13.530056953430176
    10. '    ' → logprob: -13.780056953430176

Token 568: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022545099258423
    2. ' range' → logprob: -1.9102253913879395
    3. 'self' → logprob: -14.285225868225098
    4. '(range' → logprob: -14.660225868225098
    5. '	range' → logprob: -16.28522491455078
    6. ' ' → logprob: -16.66022491455078
    7. '
' → logprob: -16.78522491455078
    8. ' in' → logprob: -16.91022491455078
    9. '   ' → logprob: -17.28522491455078
    10. 'in' → logprob: -18.53522491455078

Token 569: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.040795955806970596
    2. '(self' → logprob: -3.2907960414886475
    3. 'range' → logprob: -6.165795803070068
    4. ' self' → logprob: -7.540795803070068
    5. ' range' → logprob: -10.290796279907227
    6. '0' → logprob: -10.540796279907227
    7. '           ' → logprob: -10.915796279907227
    8. '
' → logprob: -11.665796279907227
    9. '(' → logprob: -11.915796279907227
    10. '       ' → logprob: -12.665796279907227

Token 570: '.R' (ID: 3395)
  Prédit: '.R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.R' → logprob: -0.30175745487213135
    2. 'self' → logprob: -1.5517574548721313
    3. '.S' → logprob: -3.801757335662842
    4. 'R' → logprob: -3.926757335662842
    5. ')' → logprob: -6.426757335662842
    6. '.C' → logprob: -6.801757335662842
    7. 'C' → logprob: -7.551757335662842
    8. '       ' → logprob: -7.551757335662842
    9. '   ' → logprob: -7.676757335662842
    10. '.state' → logprob: -7.926757335662842

Token 571: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.022671928629279137
    2. '):' → logprob: -3.897671937942505
    3. '           ' → logprob: -6.897671699523926
    4. '               ' → logprob: -7.897671699523926
    5. ':' → logprob: -8.397671699523926
    6. '       ' → logprob: -8.897671699523926
    7. ':
' → logprob: -9.272671699523926
    8. '<|end|>' → logprob: -9.647671699523926
    9. ')' → logprob: -9.897671699523926
    10. '):
' → logprob: -10.022671699523926

Token 572: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00013929695705883205
    2. '<|end|>' → logprob: -9.625139236450195
    3. '                
' → logprob: -10.750139236450195
    4. '                ' → logprob: -10.750139236450195
    5. '              ' → logprob: -12.375139236450195
    6. '           ' → logprob: -12.500139236450195
    7. ' if' → logprob: -12.750139236450195
    8. '                   ' → logprob: -12.750139236450195
    9. '                       ' → logprob: -12.875139236450195
    10. ' ' → logprob: -13.000139236450195

Token 573: ' cell' (ID: 4206)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.7142956256866455
    2. 'col' → logprob: -0.8392956256866455
    3. 'if' → logprob: -4.214295387268066
    4. ' if' → logprob: -4.214295387268066
    5. 'cell' (adapté à ' cell') → logprob: -4.339295387268066
    6. '                   ' → logprob: -4.464295387268066
    7. 'bit' → logprob: -4.714295387268066
    8. '               ' → logprob: -4.839295387268066
    9. ' cell' → logprob: -5.339295387268066
    10. ' bit' → logprob: -6.589295387268066

Token 574: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015785759314894676
    2. '=' → logprob: -4.7657856941223145
    3. '_val' → logprob: -5.5157856941223145
    4. '_value' → logprob: -6.0157856941223145
    5. '_bit' → logprob: -7.6407856941223145
    6. 'value' → logprob: -9.515786170959473
    7. 'val' → logprob: -9.640786170959473
    8. 'bit' → logprob: -10.265786170959473
    9. ' <<=' → logprob: -12.515786170959473
    10. '_' → logprob: -12.515786170959473

Token 575: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0048142229206860065
    2. '(self' → logprob: -6.004814147949219
    3. ' self' → logprob: -7.004814147949219
    4. '               ' → logprob: -7.379814147949219
    5. '1' → logprob: -8.129814147949219
    6. 'state' → logprob: -8.504814147949219
    7. ' (' → logprob: -9.004814147949219
    8. '(' → logprob: -9.379814147949219
    9. '((' → logprob: -9.879814147949219
    10. '0' → logprob: -10.754814147949219

Token 576: '.initial' (ID: 58290)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.36022987961769104
    2. '.initial' → logprob: -1.2352298498153687
    3. '.grid' → logprob: -4.735229969024658
    4. 'grid' → logprob: -5.860229969024658
    5. '.state' → logprob: -10.6102294921875
    6. 'state' → logprob: -10.9852294921875
    7. ' initial' → logprob: -11.3602294921875
    8. '   ' → logprob: -11.8602294921875
    9. '.' → logprob: -12.2352294921875
    10. '           ' → logprob: -12.6102294921875

Token 577: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0005685218493454158
    2. 'State' → logprob: -7.500568389892578
    3. 'state' → logprob: -11.500568389892578
    4. '_states' → logprob: -13.000568389892578
    5. '_grid' → logprob: -13.625568389892578
    6. 'grid' → logprob: -14.250568389892578
    7. '_State' → logprob: -15.000568389892578
    8. '_' → logprob: -15.125568389892578
    9. 's' → logprob: -16.125568389892578
    10. '_s' → logprob: -16.375568389892578

Token 578: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.0006722823018208146
    2. '.fl' → logprob: -7.750672340393066
    3. 'grid' → logprob: -9.125672340393066
    4. '.' → logprob: -9.500672340393066
    5. '.flip' → logprob: -10.375672340393066
    6. ' .' → logprob: -11.625672340393066
    7. '.cell' → logprob: -12.750672340393066
    8. '.gr' → logprob: -13.000672340393066
    9. '```' → logprob: -13.125672340393066
    10. '   ' → logprob: -13.250672340393066

Token 579: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -6.337155355140567e-05
    2. 'r' → logprob: -10.375062942504883
    3. '[row' → logprob: -11.750062942504883
    4. '[' → logprob: -11.875062942504883
    5. '               ' → logprob: -12.125062942504883
    6. ' [' → logprob: -12.875062942504883
    7. '][' → logprob: -13.000062942504883
    8. '                   ' → logprob: -13.250062942504883
    9. '[c' → logprob: -14.375062942504883
    10. '           ' → logprob: -14.375062942504883

Token 580: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03833625838160515
    2. '[c' → logprob: -3.2883362770080566
    3. ']' → logprob: -8.788335800170898
    4. '[r' → logprob: -9.663335800170898
    5. ')[' → logprob: -9.913335800170898
    6. '[' → logprob: -11.538335800170898
    7. ' ][' → logprob: -12.038335800170898
    8. '[
' → logprob: -12.913335800170898
    9. '           ' → logprob: -13.288335800170898
    10. '[C' → logprob: -13.413335800170898

Token 581: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.822646693966817e-06
    2. ' c' → logprob: -11.875007629394531
    3. '[c' → logprob: -15.125007629394531
    4. '][' → logprob: -15.500007629394531
    5. ')c' → logprob: -15.625007629394531
    6. '(c' → logprob: -16.62500762939453
    7. '[' → logprob: -16.75000762939453
    8. '   ' → logprob: -17.00000762939453
    9. ']' → logprob: -17.25000762939453
    10. '
' → logprob: -17.62500762939453

Token 582: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25317859649658203
    2. ']
' → logprob: -1.503178596496582
    3. ']^' → logprob: -6.753178596496582
    4. '])' → logprob: -11.253178596496582
    5. '           ' → logprob: -11.253178596496582
    6. '               ' → logprob: -11.378178596496582
    7. ']

' → logprob: -11.378178596496582
    8. ']
' → logprob: -12.003178596496582
    9. ' ]' → logprob: -12.128178596496582
    10. '])
' → logprob: -12.503178596496582

Token 583: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07090458273887634
    2. ' if' → logprob: -2.820904493331909
    3. ' ^' → logprob: -5.445904731750488
    4. '^' → logprob: -6.320904731750488
    5. 'if' → logprob: -6.820904731750488
    6. '                   ' → logprob: -7.820904731750488
    7. '
' → logprob: -7.945904731750488
    8. ' xor' → logprob: -8.070904731750488
    9. '           ' → logprob: -8.320904731750488
    10. ' cell' → logprob: -9.945904731750488

Token 584: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.662297785282135
    2. ' if' → logprob: -0.912297785282135
    3. '               ' → logprob: -2.6622977256774902
    4. ' cell' → logprob: -5.28729772567749
    5. 'cell' → logprob: -5.41229772567749
    6. 'flip' → logprob: -7.16229772567749
    7. 'bit' → logprob: -7.66229772567749
    8. '^' → logprob: -7.91229772567749
    9. 'xor' → logprob: -8.037298202514648
    10. '                   ' → logprob: -8.162298202514648

Token 585: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4125271737575531
    2. 'fl' → logprob: -1.7875272035598755
    3. 'bit' → logprob: -2.537527084350586
    4. 'cell' → logprob: -2.912527084350586
    5. '               ' → logprob: -4.037527084350586
    6. 'flip' → logprob: -4.287527084350586
    7. 'val' → logprob: -5.537527084350586
    8. '                   ' → logprob: -7.412527084350586
    9. 'xor' → logprob: -8.162527084350586
    10. 'value' → logprob: -8.287527084350586

Token 586: ' row' (ID: 5225)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.4750680923461914
    2. '((' → logprob: -0.9750680923461914
    3. ' ((' → logprob: -7.850068092346191
    4. ' (' → logprob: -8.225068092346191
    5. '(((' → logprob: -8.850068092346191
    6. 'row' → logprob: -9.475068092346191
    7. '(r' → logprob: -9.600068092346191
    8. '(cell' → logprob: -10.975068092346191
    9. '(' → logprob: -11.600068092346191
    10. '   ' → logprob: -12.975068092346191

Token 587: ' flipped' (ID: 96664)
  Prédit: '_flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_flip' → logprob: -0.0022831226233392954
    2. 'flip' → logprob: -6.752283096313477
    3. '_fl' → logprob: -7.252283096313477
    4. 'fl' → logprob: -9.252283096313477
    5. 's' → logprob: -10.002283096313477
    6. 'Flip' → logprob: -10.127283096313477
    7. ' flip' → logprob: -10.377283096313477
    8. '_mask' → logprob: -11.314783096313477
    9. ')' → logprob: -11.502283096313477
    10. ' flips' → logprob: -11.564783096313477

Token 588: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9685951471328735
    2. 'if' → logprob: -1.2185951471328735
    3. ':' → logprob: -2.593595027923584
    4. '^' → logprob: -2.968595027923584
    5. ' ^' → logprob: -3.093595027923584
    6. ' if' → logprob: -3.718595027923584
    7. '==' → logprob: -3.718595027923584
    8. ',' → logprob: -3.843595027923584
    9. ' ^=' → logprob: -3.843595027923584
    10. '1' → logprob: -4.343595027923584

Token 589: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.48889943957328796
    2. ' cell' → logprob: -0.9888994693756104
    3. ' if' → logprob: -5.113899230957031
    4. 'if' → logprob: -5.488899230957031
    5. 'col' → logprob: -6.238899230957031
    6. ' col' → logprob: -6.488899230957031
    7. '               ' → logprob: -7.113899230957031
    8. '	cell' → logprob: -9.488899230957031
    9. '                   ' → logprob: -9.738899230957031
    10. 'row' → logprob: -10.738899230957031

Token 590: ' is' (ID: 382)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.14381402730941772
    2. '^' → logprob: -2.3938140869140625
    3. ' ^' → logprob: -3.7688140869140625
    4. '=' → logprob: -4.1438140869140625
    5. ' =' → logprob: -5.7688140869140625
    6. ')' → logprob: -8.518814086914062
    7. ')^' → logprob: -9.143814086914062
    8. '^^' → logprob: -9.518814086914062
    9. ' ' → logprob: -10.393814086914062
    10. '==' → logprob: -10.518814086914062

Token 591: ' flipped' (ID: 96664)
  Prédit: ' cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cell' → logprob: -0.7285670042037964
    2. 'cell' → logprob: -1.1035670042037964
    3. '1' → logprob: -1.9785670042037964
    4. ' ' → logprob: -3.603567123413086
    5. ' (' → logprob: -4.103567123413086
    6. '(' → logprob: -6.353567123413086
    7. '(cell' → logprob: -6.478567123413086
    8. '               ' → logprob: -8.853567123413086
    9. '	cell' → logprob: -10.228567123413086
    10. ' not' → logprob: -10.603567123413086

Token 592: '
' (ID: 198)
  Prédit: ' ^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.5710195899009705
    2. ' ^=' → logprob: -1.0710196495056152
    3. '^' → logprob: -2.8210196495056152
    4. '               ' → logprob: -3.5710196495056152
    5. ' ^
' → logprob: -6.946019649505615
    6. ' xor' → logprob: -7.071019649505615
    7. '1' → logprob: -7.321019649505615
    8. ' if' → logprob: -7.446019649505615
    9. '
' → logprob: -7.946019649505615
    10. 'if' → logprob: -8.071019172668457

Token 593: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.034267593175172806
    2. ' if' → logprob: -3.9092676639556885
    3. ' ^' → logprob: -5.284267425537109
    4. ' ^=' → logprob: -5.534267425537109
    5. '                   ' → logprob: -6.534267425537109
    6. '^' → logprob: -6.659267425537109
    7. 'if' → logprob: -7.409267425537109
    8. ' xor' → logprob: -8.03426742553711
    9. '           ' → logprob: -8.15926742553711
    10. ',' → logprob: -9.03426742553711

Token 594: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.14783990383148193
    2. ' if' → logprob: -2.1478400230407715
    3. '               ' → logprob: -4.1478400230407715
    4. 'cell' → logprob: -5.7728400230407715
    5. ' cell' → logprob: -6.8978400230407715
    6. 'fl' → logprob: -8.522839546203613
    7. '                   ' → logprob: -8.522839546203613
    8. 'flip' → logprob: -8.647839546203613
    9. 'bit' → logprob: -9.772839546203613
    10. 'new' → logprob: -11.272839546203613

Token 595: ' (' (ID: 350)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.020194627344608307
    2. '((' → logprob: -4.0201945304870605
    3. ' (' → logprob: -6.2701945304870605
    4. '   ' → logprob: -9.895195007324219
    5. '(f' → logprob: -10.145195007324219
    6. ' ((' → logprob: -10.395195007324219
    7. '(r' → logprob: -11.270195007324219
    8. ' ' → logprob: -12.145195007324219
    9. '(fl' → logprob: -13.395195007324219
    10. '(bit' → logprob: -13.645195007324219

Token 596: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.08071007579565048
    2. '(row' → logprob: -2.5807101726531982
    3. ' row' → logprob: -6.330709934234619
    4. ' (' → logprob: -10.705710411071777
    5. '[row' → logprob: -12.580710411071777
    6. '(' → logprob: -12.580710411071777
    7. '1' → logprob: -12.830710411071777
    8. '   ' → logprob: -13.205710411071777
    9. '	row' → logprob: -14.205710411071777
    10. '$row' → logprob: -14.455710411071777

Token 597: '_flip' (ID: 150878)
  Prédit: '_flip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flip' → logprob: -3.173704271830502e-06
    2. 'flip' → logprob: -13.62500286102295
    3. '_fl' → logprob: -14.75000286102295
    4. '_flush' → logprob: -15.12500286102295
    5. '_mask' → logprob: -15.12500286102295
    6. '_' → logprob: -15.75000286102295
    7. 'Flip' → logprob: -15.75000286102295
    8. '_flash' → logprob: -16.000003814697266
    9. 's' → logprob: -16.500003814697266
    10. ')' → logprob: -17.000003814697266

Token 598: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -7.3458322731312364e-06
    2. '_masks' → logprob: -12.250007629394531
    3. 'mask' → logprob: -14.000007629394531
    4. '_MASK' → logprob: -14.375007629394531
    5. 's' → logprob: -14.500007629394531
    6. '_' → logprob: -14.875007629394531
    7. ' _' → logprob: -16.12500762939453
    8. '_m' → logprob: -16.25000762939453
    9. '```' → logprob: -17.25000762939453
    10. ' mask' → logprob: -18.62500762939453

Token 599: ' >>' (ID: 6832)
  Prédit: ' >>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>' → logprob: -0.07023672759532928
    2. '>>' → logprob: -2.6952366828918457
    3. ' &' → logprob: -8.320237159729004
    4. ' ' → logprob: -10.570237159729004
    5. ' ' → logprob: -10.695237159729004
    6. ' >' → logprob: -12.945237159729004
    7. ')' → logprob: -13.320237159729004
    8. '>' → logprob: -13.570237159729004
    9. '	' → logprob: -13.820237159729004
    10. '&' → logprob: -14.445237159729004

Token 600: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.623244553338736e-05
    2. ' r' → logprob: -9.625065803527832
    3. '	r' → logprob: -17.62506675720215
    4. '(r' → logprob: -17.62506675720215
    5. ' ' → logprob: -18.12506675720215
    6. '```' → logprob: -18.37506675720215
    7. '[r' → logprob: -18.50006675720215
    8. '_r' → logprob: -18.50006675720215
    9. '   ' → logprob: -18.75006675720215
    10. ')' → logprob: -18.81256675720215

Token 601: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.0020742492051795e-05
    2. ')&' → logprob: -10.000049591064453
    3. ' )' → logprob: -12.500049591064453
    4. '&' → logprob: -14.875049591064453
    5. '           ' → logprob: -15.750049591064453
    6. '       ' → logprob: -16.375049591064453
    7. '')' → logprob: -16.625049591064453
    8. '   ' → logprob: -16.750049591064453
    9. '1' → logprob: -17.250049591064453
    10. '）' → logprob: -17.625049591064453

Token 602: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1162959411740303
    2. ')&' → logprob: -2.8662960529327393
    3. '&' → logprob: -3.1162960529327393
    4. ' &' → logprob: -4.86629581451416
    5. ' )' → logprob: -7.74129581451416
    6. '           ' → logprob: -8.24129581451416
    7. '&amp' → logprob: -10.24129581451416
    8. '               ' → logprob: -10.49129581451416
    9. '&)' → logprob: -11.24129581451416
    10. '                   ' → logprob: -11.61629581451416

Token 603: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.500019073486328
    4. '```' → logprob: -17.500019073486328
    5. '0' → logprob: -18.500019073486328
    6. '`' → logprob: -19.062519073486328
    7. '
' → logprob: -20.125019073486328
    8. '  ' → logprob: -20.187519073486328
    9. '' → logprob: -20.250019073486328
    10. '=' → logprob: -20.250019073486328

Token 604: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.250017166137695
    4. '```' → logprob: -17.000017166137695
    5. '0' → logprob: -18.000017166137695
    6. '' → logprob: -18.437517166137695
    7. '`' → logprob: -18.875017166137695
    8. '  ' → logprob: -19.125017166137695
    9. '
' → logprob: -19.500017166137695
    10. '=' → logprob: -19.500017166137695

Token 605: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.30278176069259644
    2. ':' → logprob: -1.4277818202972412
    3. '==' → logprob: -4.677781581878662
    4. ' ==' → logprob: -4.802781581878662
    5. '):
' → logprob: -5.802781581878662
    6. '1' → logprob: -7.927781581878662
    7. '           ' → logprob: -9.05278205871582
    8. '               ' → logprob: -9.30278205871582
    9. ')==' → logprob: -9.42778205871582
    10. ')' → logprob: -9.55278205871582

Token 606: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2685362696647644
    2. '               ' → logprob: -1.6435363292694092
    3. ' cell' → logprob: -3.518536329269409
    4. 'cell' → logprob: -4.76853609085083
    5. '[cell' → logprob: -7.14353609085083
    6. '(cell' → logprob: -7.51853609085083
    7. '	cell' → logprob: -7.64353609085083
    8. '                       ' → logprob: -7.76853609085083
    9. ':' → logprob: -7.89353609085083
    10. ':
' → logprob: -8.018536567687988

Token 607: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' (adapté à ' cell') → logprob: -0.0004664193547796458
    2. ' cell' → logprob: -7.750466346740723
    3. '               ' → logprob: -10.750466346740723
    4. '1' → logprob: -11.750466346740723
    5. '	cell' → logprob: -12.875466346740723
    6. '                   ' → logprob: -13.375466346740723
    7. '0' → logprob: -14.125466346740723
    8. '(cell' → logprob: -14.500466346740723
    9. '[cell' → logprob: -15.000466346740723
    10. '```' → logprob: -15.750466346740723

Token 608: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11433088779449463
    2. ' =' → logprob: -2.614330768585205
    3. ' ^=' → logprob: -3.364330768585205
    4. '^' → logprob: -8.364331245422363
    5. ' ^' → logprob: -13.864331245422363
    6. ' ' → logprob: -14.489331245422363
    7. '   ' → logprob: -15.364331245422363
    8. ')' → logprob: -16.364330291748047
    9. '.=' → logprob: -16.864330291748047
    10. '=

' → logprob: -16.864330291748047

Token 609: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -16.75006675720215
    4. '```' → logprob: -18.25006675720215
    5. '0' → logprob: -18.75006675720215
    6. '`' → logprob: -19.12506675720215
    7. '(' → logprob: -19.62506675720215
    8. '           ' → logprob: -19.87506675720215
    9. '
' → logprob: -20.37506675720215
    10. ' ' → logprob: -20.75006675720215

Token 610: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '(' → logprob: -17.250003814697266
    4. '   ' → logprob: -17.750003814697266
    5. '0' → logprob: -18.125003814697266
    6. '```' → logprob: -19.000003814697266
    7. '
' → logprob: -19.250003814697266
    8. '`' → logprob: -19.500003814697266
    9. '           ' → logprob: -20.125003814697266
    10. '[' → logprob: -20.625003814697266

Token 611: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759395956993103
    2. ' -' → logprob: -0.8259395956993103
    3. ' ' → logprob: -15.950939178466797
    4. '^' → logprob: -17.075939178466797
    5. '   ' → logprob: -17.325939178466797
    6. '-cell' → logprob: -17.700939178466797
    7. ' ^' → logprob: -18.950939178466797
    8. ' ' → logprob: -19.200939178466797
    9. '1' → logprob: -19.825939178466797
    10. '−' → logprob: -20.825939178466797

Token 612: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -2.15310683415737e-05
    2. ' cell' → logprob: -10.750021934509277
    3. '(cell' → logprob: -18.00002098083496
    4. 'cel' → logprob: -18.00002098083496
    5. '[cell' → logprob: -18.25002098083496
    6. '	cell' → logprob: -18.37502098083496
    7. '.cell' → logprob: -20.25002098083496
    8. 'c' → logprob: -21.00002098083496
    9. ' ' → logprob: -21.12502098083496
    10. 'col' → logprob: -21.25002098083496

Token 613: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009249189170077443
    2. '<|end|>' → logprob: -8.000925064086914
    3. '                
' → logprob: -8.250925064086914
    4. '
' → logprob: -9.250925064086914
    5. '                   ' → logprob: -10.000925064086914
    6. '           ' → logprob: -10.625925064086914
    7. '  
' → logprob: -10.625925064086914
    8. ',' → logprob: -10.625925064086914
    9. ' ' → logprob: -10.875925064086914
    10. '                ' → logprob: -11.375925064086914

Token 614: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001114106344175525
    2. '                   ' → logprob: -9.87511157989502
    3. '           ' → logprob: -11.25011157989502
    4. '```' → logprob: -11.50011157989502
    5. ' col' → logprob: -12.00011157989502
    6. '                
' → logprob: -12.25011157989502
    7. '<|end|>' → logprob: -12.37511157989502
    8. 'cell' → logprob: -12.50011157989502
    9. '              ' → logprob: -12.87511157989502
    10. ',' → logprob: -12.87511157989502

Token 615: ' col' (ID: 996)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23417727649211884
    2. ' col' → logprob: -1.7341772317886353
    3. 'col' (adapté à ' col') → logprob: -3.734177350997925
    4. '               ' → logprob: -4.859177112579346
    5. '                   ' → logprob: -7.984177112579346
    6. '```' → logprob: -9.484177589416504
    7. '
' → logprob: -10.359177589416504
    8. '            
' → logprob: -10.359177589416504
    9. '       ' → logprob: -10.609177589416504
    10. ' ' → logprob: -11.109177589416504

Token 616: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.00031377444975078106
    2. 'pattern' → logprob: -9.000313758850098
    3. ' <<=' → logprob: -9.125313758850098
    4. '=' → logprob: -11.375313758850098
    5. '_bit' → logprob: -11.500313758850098
    6. '<<' → logprob: -11.625313758850098
    7. '_patterns' → logprob: -11.750313758850098
    8. '_pat' → logprob: -11.875313758850098
    9. '_value' → logprob: -12.000313758850098
    10. '_mask' → logprob: -12.125313758850098

Token 617: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.005316769704222679
    2. ' |=' → logprob: -5.255316734313965
    3. '=' → logprob: -9.880316734313965
    4. '<<' → logprob: -10.505316734313965
    5. ' <<=' → logprob: -12.755316734313965
    6. ' =' → logprob: -14.130316734313965
    7. ' |' → logprob: -15.505316734313965
    8. '           ' → logprob: -16.00531768798828
    9. '│' → logprob: -16.25531768798828
    10. '   ' → logprob: -16.50531768798828

Token 618: ' (' (ID: 350)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.746464729309082
    2. '(cell' → logprob: -0.746464729309082
    3. ' (' → logprob: -3.121464729309082
    4. ' cell' → logprob: -4.871464729309082
    5. '[cell' → logprob: -9.246464729309082
    6. '((' → logprob: -10.371464729309082
    7. '   ' → logprob: -11.621464729309082
    8. '(c' → logprob: -12.121464729309082
    9. '	cell' → logprob: -12.496464729309082
    10. '               ' → logprob: -12.496464729309082

Token 619: 'cell' (ID: 10936)
  Prédit: 'cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.005628343205899
    2. '(cell' → logprob: -5.2556281089782715
    3. ' cell' → logprob: -7.8806281089782715
    4. '[cell' → logprob: -11.75562858581543
    5. ' (' → logprob: -12.00562858581543
    6. '   ' → logprob: -14.63062858581543
    7. '	cell' → logprob: -14.63062858581543
    8. '((' → logprob: -15.75562858581543
    9. '(' → logprob: -15.88062858581543
    10. 'cel' → logprob: -15.88062858581543

Token 620: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.10328269004821777
    2. ' <<' → logprob: -2.3532826900482178
    3. ')' → logprob: -5.978282928466797
    4. ')<<' → logprob: -7.603282928466797
    5. '1' → logprob: -10.603282928466797
    6. ' ' → logprob: -12.228282928466797
    7. '<<(' → logprob: -12.728282928466797
    8. ' )' → logprob: -13.728282928466797
    9. '()<<' → logprob: -13.728282928466797
    10. '   ' → logprob: -13.978282928466797

Token 621: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.0339031834737398e-05
    2. ' r' → logprob: -11.125020027160645
    3. '(r' → logprob: -12.375020027160645
    4. '(' → logprob: -13.875020027160645
    5. '```' → logprob: -16.50002098083496
    6. ' (' → logprob: -16.75002098083496
    7. '   ' → logprob: -16.87502098083496
    8. '_r' → logprob: -17.62502098083496
    9. '	r' → logprob: -17.75002098083496
    10. '
' → logprob: -18.06252098083496

Token 622: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005300374468788505
    2. ')
' → logprob: -7.625530242919922
    3. '           ' → logprob: -10.500530242919922
    4. ' )' → logprob: -11.375530242919922
    5. '       ' → logprob: -13.625530242919922
    6. ')
' → logprob: -14.000530242919922
    7. ')c' → logprob: -15.500530242919922
    8. '               ' → logprob: -15.625530242919922
    9. ')#' → logprob: -16.500530242919922
    10. ')\
' → logprob: -16.500530242919922

Token 623: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028765633702278137
    2. '       ' → logprob: -3.6537656784057617
    3. '<|end|>' → logprob: -6.278765678405762
    4. '   ' → logprob: -9.403765678405762
    5. '        
' → logprob: -9.653765678405762
    6. ')' → logprob: -9.653765678405762
    7. '<|end|>' → logprob: -9.778765678405762
    8. '
' → logprob: -10.153765678405762
    9. '[' → logprob: -10.278765678405762
    10. '```' → logprob: -10.653765678405762

Token 624: ' patterns' (ID: 18587)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020900946110486984
    2. '           ' → logprob: -4.395900726318359
    3. '   ' → logprob: -5.770900726318359
    4. ' patterns' → logprob: -5.895900726318359
    5. 'patterns' (adapté à ' patterns') → logprob: -6.770900726318359
    6. ')' → logprob: -7.395900726318359
    7. '<|end|>' → logprob: -8.52090072631836
    8. ' ' → logprob: -9.02090072631836
    9. '	   ' → logprob: -9.39590072631836
    10. '	' → logprob: -10.14590072631836

Token 625: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014216157607734203
    2. '.' → logprob: -4.26421594619751
    3. ' .' → logprob: -9.889216423034668
    4. '.app' → logprob: -14.639216423034668
    5. '.
' → logprob: -15.014216423034668
    6. '.ap' → logprob: -15.389216423034668
    7. '           ' → logprob: -15.389216423034668
    8. '       ' → logprob: -15.514216423034668
    9. 'append' → logprob: -15.639216423034668
    10. ').' → logprob: -15.764216423034668

Token 626: '(col' (ID: 37070)
  Prédit: '(col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(col' → logprob: -6.480199954239652e-05
    2. 'col' → logprob: -9.750064849853516
    3. '(c' → logprob: -12.500064849853516
    4. '(' → logprob: -13.250064849853516
    5. ' col' → logprob: -14.500064849853516
    6. '(
' → logprob: -14.875064849853516
    7. '(column' → logprob: -17.500064849853516
    8. ' (' → logprob: -18.125064849853516
    9. '(cols' → logprob: -18.375064849853516
    10. '[col' → logprob: -18.875064849853516

Token 627: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.03274531289935112
    2. 'attern' → logprob: -3.657745361328125
    3. '_patterns' → logprob: -5.407745361328125
    4. 'pattern' → logprob: -6.657745361328125
    5. ')' → logprob: -8.157745361328125
    6. 'c' → logprob: -9.532745361328125
    7. 'atter' → logprob: -10.282745361328125
    8. 'patterns' → logprob: -10.407745361328125
    9. '_pat' → logprob: -10.782745361328125
    10. '-pattern' → logprob: -10.907745361328125

Token 628: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34581294655799866
    2. '       ' → logprob: -1.3458129167556763
    3. ')
' → logprob: -3.470813035964966
    4. 'return' → logprob: -7.845812797546387
    5. ')return' → logprob: -8.095812797546387
    6. '
' → logprob: -8.720812797546387
    7. ' return' → logprob: -10.595812797546387
    8. '<|end|>' → logprob: -10.970812797546387
    9. ')
' → logprob: -11.720812797546387
    10. '   ' → logprob: -12.220812797546387

Token 629: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009038381977006793
    2. 'return' → logprob: -7.125903606414795
    3. ' return' → logprob: -9.750904083251953
    4. '   ' → logprob: -11.000904083251953
    5. '	return' → logprob: -11.500904083251953
    6. '	' → logprob: -11.750904083251953
    7. '<|end|>' → logprob: -13.375904083251953
    8. '           ' → logprob: -13.625904083251953
    9. '```' → logprob: -13.625904083251953
    10. '
' → logprob: -14.250904083251953

Token 630: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08089698851108551
    2. 'return' (adapté à ' return') → logprob: -2.580897092819214
    3. ' return' → logprob: -6.705896854400635
    4. '   ' → logprob: -7.205896854400635
    5. '	return' → logprob: -10.580897331237793
    6. '
' → logprob: -12.205897331237793
    7. '           ' → logprob: -12.705897331237793
    8. '	' → logprob: -13.080897331237793
    9. '```' → logprob: -13.830897331237793
    10. ' ' → logprob: -14.455897331237793

Token 631: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0011779663618654013
    2. ' tuple' → logprob: -6.751177787780762
    3. '(tuple' → logprob: -12.376177787780762
    4. 'tu' → logprob: -13.001177787780762
    5. 'patterns' → logprob: -13.751177787780762
    6. 'pattern' → logprob: -15.751177787780762
    7. '   ' → logprob: -18.251178741455078
    8. 'Tuple' → logprob: -18.501178741455078
    9. 't' → logprob: -18.876178741455078
    10. '(' → logprob: -20.126178741455078

Token 632: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -8.41866585687967e-06
    2. 'patterns' → logprob: -11.750008583068848
    3. '(tuple' → logprob: -15.500008583068848
    4. '(p' → logprob: -15.625008583068848
    5. 'pattern' → logprob: -16.37500762939453
    6. '([' → logprob: -17.37500762939453
    7. '(sorted' → logprob: -18.00000762939453
    8. '(' → logprob: -18.75000762939453
    9. '(
' → logprob: -19.00000762939453
    10. ' patterns' → logprob: -19.75000762939453

Token 633: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00041494169272482395
    2. 'patterns' → logprob: -7.875414848327637
    3. ')' → logprob: -11.125414848327637
    4. '(pattern' → logprob: -12.250414848327637
    5. ')s' → logprob: -12.625414848327637
    6. '[' → logprob: -13.375414848327637
    7. '[s' → logprob: -13.375414848327637
    8. ' patterns' → logprob: -13.500414848327637
    9. 'sp' → logprob: -13.875414848327637
    10. 'ss' → logprob: -14.125414848327637

Token 634: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. '<|end|>' → logprob: -12.875004768371582
    3. ')
' → logprob: -13.375004768371582
    4. '   ' → logprob: -14.500004768371582
    5. '[' → logprob: -16.1250057220459
    6. '       ' → logprob: -16.1250057220459
    7. '}' → logprob: -16.3750057220459
    8. '())' → logprob: -16.6250057220459
    9. ' )' → logprob: -17.1250057220459
    10. ')return' → logprob: -17.5000057220459

Token 635: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22234483063220978
    2. '
' → logprob: -1.9723448753356934
    3. 'def' → logprob: -2.8473448753356934
    4. '    
' → logprob: -6.597344875335693
    5. '<|end|>' → logprob: -8.097344398498535
    6. '```' → logprob: -8.472344398498535
    7. '

' → logprob: -8.847344398498535
    8. ' def' → logprob: -9.222344398498535
    9. '        
' → logprob: -9.972344398498535
    10. '<|end|>' → logprob: -10.722344398498535

Token 636: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.055203042924404144
    2. '   ' → logprob: -3.1802029609680176
    3. '
' → logprob: -4.555202960968018
    4. ' def' → logprob: -6.555202960968018
    5. '    
' → logprob: -8.930203437805176
    6. 'from' → logprob: -11.180203437805176
    7. '        
' → logprob: -11.305203437805176
    8. '	def' → logprob: -11.680203437805176
    9. '```' → logprob: -11.930203437805176
    10. '

' → logprob: -12.055203437805176

Token 637: ' maximize' (ID: 44207)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.197097897529602
    2. ' maximize' → logprob: -2.3220977783203125
    3. ' count' → logprob: -2.4470977783203125
    4. ' min' → logprob: -2.4470977783203125
    5. 'max' → logprob: -2.4470977783203125
    6. ' best' → logprob: -2.6970977783203125
    7. ' minimal' → logprob: -2.6970977783203125
    8. ' find' → logprob: -2.6970977783203125
    9. 'min' → logprob: -3.5720977783203125
    10. 'count' → logprob: -3.6970977783203125

Token 638: '_sh' (ID: 8823)
  Prédit: '_face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_face' → logprob: -0.1611480861902237
    2. '_count' → logprob: -3.0361480712890625
    3. '(self' → logprob: -3.2861480712890625
    4. '_flip' → logprob: -3.6611480712890625
    5. '_' → logprob: -4.1611480712890625
    6. '_front' → logprob: -4.7861480712890625
    7. '_self' → logprob: -5.0361480712890625
    8. '_fl' → logprob: -5.9111480712890625
    9. '_score' → logprob: -6.5361480712890625
    10. '_faces' → logprob: -7.0361480712890625

Token 639: 'ipment' (ID: 6219)
  Prédit: 'ow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ow' → logprob: -0.19075842201709747
    2. 'ows' → logprob: -2.565758466720581
    3. 'own' → logprob: -3.440758466720581
    4. 'owing' → logprob: -4.190758228302002
    5. 'owed' → logprob: -4.315758228302002
    6. 'e' → logprob: -4.815758228302002
    7. 'arp' → logprob: -5.065758228302002
    8. 'are' → logprob: -5.565758228302002
    9. 'ared' → logprob: -5.815758228302002
    10. 'ould' → logprob: -6.065758228302002

Token 640: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.14245600998401642
    2. '(' → logprob: -2.1424560546875
    3. '_count' → logprob: -4.3924560546875
    4. '_' → logprob: -6.1424560546875
    5. '_face' → logprob: -8.3924560546875
    6. '(
' → logprob: -9.0174560546875
    7. 'count' → logprob: -9.2674560546875
    8. 'self' → logprob: -9.2674560546875
    9. '_(' → logprob: -9.3924560546875
    10. '   ' → logprob: -9.7674560546875

Token 641: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0775327682495117
    2. ')_' → logprob: -1.7025327682495117
    3. '):' → logprob: -1.9525327682495117
    4. ')' → logprob: -2.3275327682495117
    5. '_count' → logprob: -2.3275327682495117
    6. 'self' → logprob: -3.4525327682495117
    7. '):
' → logprob: -3.4525327682495117
    8. '_' → logprob: -3.5775327682495117
    9. '   ' → logprob: -3.9525327682495117
    10. 's' → logprob: -4.952532768249512

Token 642: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0023136918898671865
    2. '(' → logprob: -6.377313613891602
    3. 'self' → logprob: -7.627313613891602
    4. '   ' → logprob: -9.627313613891602
    5. '       ' → logprob: -10.377313613891602
    6. '(
' → logprob: -11.752313613891602
    7. 'def' → logprob: -11.877313613891602
    8. 's' → logprob: -12.877313613891602
    9. ':' → logprob: -13.377313613891602
    10. '```' → logprob: -13.377313613891602

Token 643: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.062334343791007996
    2. ' int' → logprob: -2.8123342990875244
    3. '   ' → logprob: -8.562334060668945
    4. '(int' → logprob: -8.812334060668945
    5. '[int' → logprob: -11.937334060668945
    6. '	int' → logprob: -13.187334060668945
    7. 'None' → logprob: -13.187334060668945
    8. 'self' → logprob: -13.187334060668945
    9. 'tuple' → logprob: -13.312334060668945
    10. ' (' → logprob: -13.437334060668945

Token 644: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0625620186328888
    2. '       ' → logprob: -2.9375619888305664
    3. '   ' → logprob: -5.687561988830566
    4. '(' → logprob: -6.312561988830566
    5. '(
' → logprob: -6.812561988830566
    6. 'self' → logprob: -7.062561988830566
    7. ':' → logprob: -8.312561988830566
    8. ':
' → logprob: -8.562561988830566
    9. 'def' → logprob: -11.312561988830566
    10. '
' → logprob: -11.812561988830566

Token 645: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.41866585687967e-06
    2. '```' → logprob: -13.000008583068848
    3. '   ' → logprob: -13.250008583068848
    4. ',' → logprob: -13.500008583068848
    5. '        
' → logprob: -14.250008583068848
    6. ':' → logprob: -14.250008583068848
    7. '
' → logprob: -14.625008583068848
    8. ':
' → logprob: -15.000008583068848
    9. '#' → logprob: -15.625008583068848
    10. '           ' → logprob: -16.50000762939453

Token 646: ' """
' (ID: 7037)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.28413593769073486
    2. '       ' → logprob: -1.5341359376907349
    3. 'best' → logprob: -3.7841358184814453
    4. ' max' → logprob: -4.784135818481445
    5. ' best' → logprob: -7.784135818481445
    6. 'result' → logprob: -9.284135818481445
    7. '   ' → logprob: -9.409135818481445
    8. '```' → logprob: -12.534135818481445
    9. ' result' → logprob: -13.034135818481445
    10. 'maximum' → logprob: -13.534135818481445

Token 647: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7123984098434448
    2. 'max' → logprob: -0.7123984098434448
    3. ' max' → logprob: -4.587398529052734
    4. 'best' → logprob: -4.962398529052734
    5. 'result' → logprob: -6.462398529052734
    6. ' best' → logprob: -8.587398529052734
    7. ' result' → logprob: -10.087398529052734
    8. '   ' → logprob: -10.212398529052734
    9. 'maximum' → logprob: -10.587398529052734
    10. 'optimal' → logprob: -11.712398529052734

Token 648: ' Implements' (ID: 123308)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10115618258714676
    2. 'best' → logprob: -2.351156234741211
    3. ' max' → logprob: -7.851156234741211
    4. 'result' → logprob: -8.101156234741211
    5. '       ' → logprob: -8.851156234741211
    6. ' best' → logprob: -9.601156234741211
    7. 'ans' → logprob: -10.976156234741211
    8. 'answer' → logprob: -11.601156234741211
    9. 'min' → logprob: -11.851156234741211
    10. 'res' → logprob: -11.851156234741211

Token 649: ' the' (ID: 290)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.7886848449707031
    2. ' self' → logprob: -1.5386848449707031
    3. ' max' → logprob: -2.413684844970703
    4. 'self' → logprob: -2.663684844970703
    5. '       ' → logprob: -3.038684844970703
    6. 'best' → logprob: -3.038684844970703
    7. 'max' → logprob: -3.288684844970703
    8. ' result' → logprob: -4.288684844970703
    9. ' a' → logprob: -5.038684844970703
    10. '```' → logprob: -5.538684844970703

Token 650: ' solution' (ID: 7578)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8248746991157532
    2. 'best' → logprob: -0.9498746991157532
    3. 'maximum' → logprob: -2.0748746395111084
    4. 'result' → logprob: -3.9498746395111084
    5. ' best' → logprob: -4.9498748779296875
    6. ' maximum' → logprob: -5.3248748779296875
    7. '   ' → logprob: -5.5748748779296875
    8. 'from' → logprob: -5.9498748779296875
    9. ' max' → logprob: -5.9498748779296875
    10. '"""
' → logprob: -6.0748748779296875

Token 651: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09116696566343307
    2. ' by' → logprob: -2.5911669731140137
    3. '```' → logprob: -5.841166973114014
    4. ' using' → logprob: -5.966166973114014
    5. ' to' → logprob: -6.091166973114014
    6. ' that' → logprob: -7.091166973114014
    7. ':' → logprob: -7.341166973114014
    8. ' for' → logprob: -7.341166973114014
    9. '   ' → logprob: -7.716166973114014
    10. ' here' → logprob: -7.841166973114014

Token 652: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010324534960091114
    2. ' max' → logprob: -7.75103235244751
    3. 'max' → logprob: -7.87603235244751
    4. ' result' → logprob: -9.126032829284668
    5. 'result' → logprob: -9.876032829284668
    6. '```' → logprob: -9.876032829284668
    7. ' total' → logprob: -13.126032829284668
    8. '   ' → logprob: -13.376032829284668
    9. 'total' → logprob: -13.876032829284668
    10. ' best' → logprob: -14.126032829284668

Token 653: ' -' (ID: 533)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.21205547451972961
    2. '       ' → logprob: -2.0870554447174072
    3. ' max' → logprob: -2.8370554447174072
    4. 'result' → logprob: -5.212055683135986
    5. ' result' → logprob: -7.087055683135986
    6. 'best' → logprob: -7.212055683135986
    7. '```' → logprob: -7.587055683135986
    8. 'res' → logprob: -8.337055206298828
    9. ' best' → logprob: -8.837055206298828
    10. ' res' → logprob: -8.837055206298828

Token 654: ' enumerate' (ID: 29671)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6206968426704407
    2. ' Iterate' → logprob: -1.870696783065796
    3. '       ' → logprob: -2.245696783065796
    4. 'For' → logprob: -3.370696783065796
    5. 'Iter' → logprob: -3.495696783065796
    6. ' result' → logprob: -3.620696783065796
    7. ' max' → logprob: -4.120697021484375
    8. ' For' → logprob: -4.245697021484375
    9. 'for' → logprob: -4.370697021484375
    10. ' Initialize' → logprob: -4.620697021484375

Token 655: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.3664955496788025
    2. 'all' → logprob: -1.4914956092834473
    3. 'row' → logprob: -3.2414956092834473
    4. ' row' → logprob: -3.3664956092834473
    5. ' over' → logprob: -5.116495609283447
    6. '       ' → logprob: -6.866495609283447
    7. 'over' → logprob: -7.616495609283447
    8. '   ' → logprob: -8.366495132446289
    9. 'rows' → logprob: -9.616495132446289
    10. '(row' → logprob: -9.741495132446289

Token 656: ' possible' (ID: 4149)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.49229705333709717
    2. ' row' → logprob: -1.1172970533370972
    3. ' possible' → logprob: -3.2422971725463867
    4. 'possible' → logprob: -3.8672971725463867
    5. '   ' → logprob: -6.867297172546387
    6. ' ' → logprob: -8.992297172546387
    7. '_row' → logprob: -9.742297172546387
    8. '(row' → logprob: -9.867297172546387
    9. ' subsets' → logprob: -10.117297172546387
    10. 'poss' → logprob: -10.242297172546387

Token 657: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.3489459156990051
    2. ' row' → logprob: -1.2239458560943604
    3. '   ' → logprob: -7.8489460945129395
    4. '```' → logprob: -10.223945617675781
    5. ' ' → logprob: -10.973945617675781
    6. '_row' → logprob: -11.473945617675781
    7. '(row' → logprob: -11.848945617675781
    8. '       ' → logprob: -12.223945617675781
    9. '`' → logprob: -12.348945617675781
    10. 'r' → logprob: -12.598945617675781

Token 658: ' flip' (ID: 29130)
  Prédit: '_flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flip' → logprob: -0.003709219628944993
    2. '_fl' → logprob: -6.503709316253662
    3. ' flip' → logprob: -7.128709316253662
    4. 's' → logprob: -7.628709316253662
    5. '_masks' → logprob: -8.378708839416504
    6. '```' → logprob: -8.753708839416504
    7. 'flip' → logprob: -8.753708839416504
    8. '_mask' → logprob: -9.128708839416504
    9. ' flips' → logprob: -9.378708839416504
    10. ' _' → logprob: -10.003708839416504

Token 659: ' states' (ID: 9407)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34316134452819824
    2. '_masks' → logprob: -1.4681613445281982
    3. '_mask' → logprob: -3.0931613445281982
    4. ' s' → logprob: -5.343161582946777
    5. '_s' → logprob: -5.468161582946777
    6. 'm' → logprob: -5.843161582946777
    7. ' masks' → logprob: -6.468161582946777
    8. '   ' → logprob: -7.218161582946777
    9. '_' → logprob: -8.843161582946777
    10. ' _' → logprob: -9.093161582946777

Token 660: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05429362505674362
    2. ' (' → logprob: -3.429293632507324
    3. ',' → logprob: -4.554293632507324
    4. '(' → logprob: -4.929293632507324
    5. ':' → logprob: -7.429293632507324
    6. ',
' → logprob: -7.679293632507324
    7. ' for' → logprob: -7.929293632507324
    8. '
' → logprob: -8.054293632507324
    9. ':
' → logprob: -9.054293632507324
    10. ' and' → logprob: -9.179293632507324

Token 661: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42297714948654175
    2. 'self' → logprob: -1.6729772090911865
    3. ' self' → logprob: -2.5479772090911865
    4. ')' → logprob: -3.5479772090911865
    5. ' ' → logprob: -5.047976970672607
    6. ' range' → logprob: -5.047976970672607
    7. '       ' → logprob: -5.047976970672607
    8. '(' → logprob: -5.422976970672607
    9. ' for' → logprob: -5.422976970672607
    10. '```' → logprob: -5.547976970672607

Token 662: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.04869444668292999
    2. ' **' → logprob: -3.048694372177124
    3. '^' → logprob: -10.173694610595703
    4. ')' → logprob: -10.548694610595703
    5. '**)' → logprob: -10.548694610595703
    6. '*self' → logprob: -12.173694610595703
    7. '**
' → logprob: -12.423694610595703
    8. ')**' → logprob: -12.548694610595703
    9. ' **)' → logprob: -13.548694610595703
    10. ' **
' → logprob: -14.673694610595703

Token 663: 'R' (ID: 49)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007013569120317698
    2. ' self' → logprob: -7.375701427459717
    3. '```' → logprob: -10.500700950622559
    4. '(self' → logprob: -10.625700950622559
    5. '
' → logprob: -11.500700950622559
    6. '       ' → logprob: -12.375700950622559
    7. '   ' → logprob: -12.875700950622559
    8. '`' → logprob: -13.625700950622559
    9. '``' → logprob: -13.750700950622559
    10. ' ' → logprob: -14.000700950622559

Token 664: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.09195592999458313
    2. ')' → logprob: -2.5919559001922607
    3. '):
' → logprob: -5.34195613861084
    4. ' )
' → logprob: -5.71695613861084
    5. '),
' → logprob: -5.84195613861084
    6. '),' → logprob: -6.71695613861084
    7. ').
' → logprob: -8.84195613861084
    8. ' -' → logprob: -8.96695613861084
    9. ' )' → logprob: -9.34195613861084
    10. ')

' → logprob: -9.59195613861084

Token 665: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014251177199184895
    2. '
' → logprob: -6.876425266265869
    3. ',' → logprob: -9.001424789428711
    4. '#' → logprob: -9.751424789428711
    5. '```' → logprob: -10.001424789428711
    6. '        
' → logprob: -10.126424789428711
    7. ' to' → logprob: -10.626424789428711
    8. ',
' → logprob: -10.751424789428711
    9. ' and' → logprob: -11.376424789428711
    10. ' for' → logprob: -11.751424789428711

Token 666: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026838488411158323
    2. '
' → logprob: -6.002683639526367
    3. '   ' → logprob: -9.502683639526367
    4. '#' → logprob: -9.627683639526367
    5. ',' → logprob: -11.127683639526367
    6. '        
' → logprob: -11.127683639526367
    7. '           ' → logprob: -11.752683639526367
    8. '        ' → logprob: -11.877683639526367
    9. '```' → logprob: -12.752683639526367
    10. '      ' → logprob: -12.877683639526367

Token 667: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9345088005065918
    2. ' for' → logprob: -1.5595088005065918
    3. 'max' → logprob: -2.059508800506592
    4. 'best' → logprob: -2.434508800506592
    5. ' best' → logprob: -2.809508800506592
    6. '       ' → logprob: -3.309508800506592
    7. 'maximize' → logprob: -3.559508800506592
    8. ' max' → logprob: -4.184508800506592
    9. 'result' → logprob: -4.309508800506592
    10. 'initialize' → logprob: -4.934508800506592

Token 668: ' each' (ID: 2454)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.9957898259162903
    2. 'col' → logprob: -1.3707897663116455
    3. ' each' → logprob: -1.6207897663116455
    4. ' row' → logprob: -2.6207897663116455
    5. 'each' → logprob: -2.8707897663116455
    6. 'row' → logprob: -3.2457897663116455
    7. ' c' → logprob: -5.620790004730225
    8. 'c' → logprob: -5.995790004730225
    9. '   ' → logprob: -6.245790004730225
    10. '       ' → logprob: -7.245790004730225

Token 669: ',' (ID: 11)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.16753320395946503
    2. 'row' → logprob: -1.9175331592559814
    3. ' possible' → logprob: -5.2925333976745605
    4. ' col' → logprob: -6.4175333976745605
    5. 'possible' → logprob: -8.542532920837402
    6. 'col' → logprob: -8.917532920837402
    7. ' column' → logprob: -9.292532920837402
    8. ' flip' → logprob: -10.417532920837402
    9. 'column' → logprob: -10.667532920837402
    10. '   ' → logprob: -10.792532920837402

Token 670: ' compute' (ID: 23864)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -1.5653690099716187
    2. 'compute' → logprob: -1.6903690099716187
    3. ' compute' → logprob: -1.8153690099716187
    4. 'maximize' → logprob: -2.440369129180908
    5. ' calculate' → logprob: -2.690369129180908
    6. 'column' → logprob: -3.065369129180908
    7. 'count' → logprob: -3.065369129180908
    8. 'det' → logprob: -3.065369129180908
    9. '       ' → logprob: -3.440369129180908
    10. ' column' → logprob: -3.815369129180908

Token 671: ' column' (ID: 6000)
  Prédit: 'column'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'column' → logprob: -1.3339245319366455
    2. 'col' → logprob: -1.5839245319366455
    3. 'max' → logprob: -1.7089245319366455
    4. 'the' → logprob: -1.9589245319366455
    5. ' the' → logprob: -2.9589245319366455
    6. 'patterns' → logprob: -3.0839245319366455
    7. ' column' → logprob: -3.2089245319366455
    8. ' max' → logprob: -3.8339245319366455
    9. ' patterns' → logprob: -3.9589245319366455
    10. 'total' → logprob: -5.083924293518066

Token 672: ' bit' (ID: 3546)
  Prédit: '_flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_flip' → logprob: -0.6571411490440369
    2. '_patterns' → logprob: -1.2821412086486816
    3. 'patterns' → logprob: -2.4071412086486816
    4. '_pattern' → logprob: -2.7821412086486816
    5. 'flip' → logprob: -3.2821412086486816
    6. ' patterns' → logprob: -5.157141208648682
    7. 'pattern' → logprob: -5.782141208648682
    8. ' flip' → logprob: -6.032141208648682
    9. '   ' → logprob: -6.782141208648682
    10. '_fl' → logprob: -7.407141208648682

Token 673: ' patterns' (ID: 18587)
  Prédit: ' patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' patterns' → logprob: -1.0275248289108276
    2. 'patterns' → logprob: -1.5275248289108276
    3. '   ' → logprob: -2.402524948120117
    4. 'm' → logprob: -2.402524948120117
    5. '_pattern' → logprob: -2.652524948120117
    6. '_patterns' → logprob: -2.777524948120117
    7. 'mask' → logprob: -3.527524948120117
    8. '_mask' → logprob: -3.652524948120117
    9. '_flip' → logprob: -4.277524948120117
    10. '_masks' → logprob: -4.402524948120117

Token 674: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010643698275089264
    2. ' and' → logprob: -5.260643482208252
    3. ',' → logprob: -6.260643482208252
    4. '
' → logprob: -6.385643482208252
    5. 'and' → logprob: -6.760643482208252
    6. '#' → logprob: -9.01064395904541
    7. ' to' → logprob: -9.51064395904541
    8. ' for' → logprob: -9.76064395904541
    9. '        
' → logprob: -9.88564395904541
    10. ',
' → logprob: -10.13564395904541

Token 675: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.054702505469322205
    2. ' row' → logprob: -3.1797025203704834
    3. 'fl' → logprob: -4.929702281951904
    4. ' flipping' → logprob: -6.304702281951904
    5. 'flip' → logprob: -7.304702281951904
    6. ' flips' → logprob: -7.304702281951904
    7. '   ' → logprob: -7.804702281951904
    8. 'rows' → logprob: -8.054702758789062
    9. '#' → logprob: -8.929702758789062
    10. 'app' → logprob: -9.179702758789062

Token 676: ' flips' (ID: 169694)
  Prédit: ' flips'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flips' → logprob: -0.389482319355011
    2. 'fl' → logprob: -1.3894822597503662
    3. 'flip' → logprob: -3.389482259750366
    4. '_flip' → logprob: -4.139482498168945
    5. '_fl' → logprob: -4.264482498168945
    6. ' flip' → logprob: -4.764482498168945
    7. '   ' → logprob: -7.514482498168945
    8. ' flipping' → logprob: -8.389482498168945
    9. '       ' → logprob: -8.639482498168945
    10. '-fl' → logprob: -9.014482498168945

Token 677: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01431534718722105
    2. '
' → logprob: -4.389315128326416
    3. '        
' → logprob: -7.139315128326416
    4. ',' → logprob: -7.764315128326416
    5. '```' → logprob: -8.139315605163574
    6. ' and' → logprob: -9.264315605163574
    7. 'and' → logprob: -10.389315605163574
    8. ',
' → logprob: -10.639315605163574
    9. '           ' → logprob: -11.139315605163574
    10. '#' → logprob: -11.264315605163574

Token 678: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004549865145236254
    2. '
' → logprob: -6.254549980163574
    3. ',' → logprob: -6.879549980163574
    4. '#' → logprob: -7.754549980163574
    5. '        
' → logprob: -7.879549980163574
    6. '<|end|>' → logprob: -8.254549980163574
    7. ' and' → logprob: -8.504549980163574
    8. '<|end|>' → logprob: -9.129549980163574
    9. ',
' → logprob: -9.879549980163574
    10. 'and' → logprob: -10.504549980163574

Token 679: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012198820477351546
    2. '#' → logprob: -7.001219749450684
    3. '
' → logprob: -8.626219749450684
    4. '   ' → logprob: -9.626219749450684
    5. '        
' → logprob: -10.626219749450684
    6. '           ' → logprob: -11.376219749450684
    7. '```' → logprob: -11.376219749450684
    8. 'from' → logprob: -12.876219749450684
    9. ' and' → logprob: -13.126219749450684
    10. '        ' → logprob: -13.501219749450684

Token 680: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38843098282814026
    2. '#' → logprob: -2.0134310722351074
    3. '       ' → logprob: -3.0134310722351074
    4. ' for' → logprob: -3.2634310722351074
    5. 'max' → logprob: -3.7634310722351074
    6. 'maximize' → logprob: -3.8884310722351074
    7. 'count' → logprob: -4.263431072235107
    8. 'from' → logprob: -4.638431072235107
    9. 'choose' → logprob: -5.138431072235107
    10. 'best' → logprob: -5.138431072235107

Token 681: ' frequencies' (ID: 64338)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.0849910974502563
    2. 'max' → logprob: -1.5849910974502563
    3. ' the' → logprob: -1.8349910974502563
    4. ' how' → logprob: -1.8349910974502563
    5. ' total' → logprob: -2.959990978240967
    6. ' =' → logprob: -4.584990978240967
    7. 'the' → logprob: -4.709990978240967
    8. ' maximum' → logprob: -5.084990978240967
    9. 'total' → logprob: -5.334990978240967
    10. ' ones' → logprob: -5.334990978240967

Token 682: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7397115230560303
    2. '       ' → logprob: -0.9897115230560303
    3. '=' → logprob: -2.2397115230560303
    4. ' of' → logprob: -3.8647115230560303
    5. 'of' → logprob: -4.114711761474609
    6. '_of' → logprob: -5.989711761474609
    7. '(' → logprob: -7.114711761474609
    8. ':' → logprob: -7.239711761474609
    9. 'for' → logprob: -7.989711761474609
    10. ',' → logprob: -7.989711761474609

Token 683: ' each' (ID: 2454)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.5114123821258545
    2. ' patterns' → logprob: -1.2614123821258545
    3. 'column' → logprob: -2.8864123821258545
    4. ' column' → logprob: -4.011412620544434
    5. 'each' → logprob: -4.511412620544434
    6. 'col' → logprob: -5.011412620544434
    7. ' each' → logprob: -5.136412620544434
    8. 'the' → logprob: -5.261412620544434
    9. 'pattern' → logprob: -5.636412620544434
    10. ' the' → logprob: -6.136412620544434

Token 684: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.008991175331175327
    2. 'column' → logprob: -5.008991241455078
    3. ' pattern' → logprob: -6.508991241455078
    4. 'col' → logprob: -7.258991241455078
    5. ' column' → logprob: -10.133991241455078
    6. 'patterns' → logprob: -11.133991241455078
    7. 'unique' → logprob: -11.758991241455078
    8. 'pat' → logprob: -12.008991241455078
    9. 'value' → logprob: -12.508991241455078
    10. '```' → logprob: -13.258991241455078

Token 685: ' (=' (ID: 72569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021237824112176895
    2. ' and' → logprob: -5.021237850189209
    3. ',' → logprob: -5.396237850189209
    4. '           ' → logprob: -5.896237850189209
    5. '```' → logprob: -6.146237850189209
    6. '
' → logprob: -6.646237850189209
    7. '        
' → logprob: -6.896237850189209
    8. ' =' → logprob: -7.521237850189209
    9. 'from' → logprob: -7.646237850189209
    10. 'and' → logprob: -8.39623737335205

Token 686: ' number' (ID: 2086)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.024073375388979912
    2. ' self' → logprob: -5.024073600769043
    3. '{}' → logprob: -5.399073600769043
    4. '{' → logprob: -5.649073600769043
    5. 'sum' → logprob: -6.524073600769043
    6. '{})' → logprob: -6.524073600769043
    7. '{}
' → logprob: -6.774073600769043
    8. 'max' → logprob: -7.649073600769043
    9. '
' → logprob: -7.649073600769043
    10. ')' → logprob: -7.774073600769043

Token 687: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.359517902135849
    2. 'of' → logprob: -2.359517812728882
    3. ' of' → logprob: -2.609517812728882
    4. '
' → logprob: -2.609517812728882
    5. '=' → logprob: -4.984518051147461
    6. '[
' → logprob: -4.984518051147461
    7. '[' → logprob: -4.984518051147461
    8. 's' → logprob: -5.234518051147461
    9. '       ' → logprob: -5.734518051147461
    10. '...' → logprob: -5.859518051147461

Token 688: ' columns' (ID: 15697)
  Prédit: 'columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'columns' → logprob: -0.07917860150337219
    2. ' columns' → logprob: -3.32917857170105
    3. 'cols' → logprob: -3.82917857170105
    4. 'occ' → logprob: -5.579178810119629
    5. 'self' → logprob: -5.579178810119629
    6. ')' → logprob: -6.079178810119629
    7. 'col' → logprob: -6.704178810119629
    8. '1' → logprob: -6.704178810119629
    9. '   ' → logprob: -7.204178810119629
    10. '```' → logprob: -7.204178810119629

Token 689: ' with' (ID: 483)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8876470327377319
    2. ')
' → logprob: -0.8876470327377319
    3. 'with' → logprob: -3.2626471519470215
    4. 'that' → logprob: -3.3876471519470215
    5. ' that' → logprob: -3.5126471519470215
    6. ' with' → logprob: -3.6376471519470215
    7. '),' → logprob: -4.6376471519470215
    8. '```' → logprob: -5.1376471519470215
    9. ' showing' → logprob: -5.2626471519470215
    10. '       ' → logprob: -5.8876471519470215

Token 690: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.038384098559617996
    2. ' that' → logprob: -3.288384199142456
    3. 'this' → logprob: -8.163384437561035
    4. 'the' → logprob: -10.163384437561035
    5. ' this' → logprob: -11.913384437561035
    6. '```' → logprob: -12.288384437561035
    7. 'pattern' → logprob: -12.788384437561035
    8. '   ' → logprob: -13.663384437561035
    9. '
' → logprob: -14.163384437561035
    10. ')' → logprob: -14.538384437561035

Token 691: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.16042326390743256
    2. ' pattern' → logprob: -1.9104232788085938
    3. ')' → logprob: -9.160423278808594
    4. '
' → logprob: -10.660423278808594
    5. ' exact' → logprob: -11.160423278808594
    6. 'pat' → logprob: -11.410423278808594
    7. '   ' → logprob: -11.910423278808594
    8. 'exact' → logprob: -12.035423278808594
    9. '_pattern' → logprob: -12.160423278808594
    10. '```' → logprob: -12.160423278808594

Token 692: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10175535827875137
    2. ')' → logprob: -2.351755380630493
    3. '       ' → logprob: -7.101755142211914
    4. '```' → logprob: -8.351755142211914
    5. ' )
' → logprob: -8.601755142211914
    6. '           ' → logprob: -9.851755142211914
    7. '``' → logprob: -9.976755142211914
    8. '
' → logprob: -10.226755142211914
    9. '`)
' → logprob: -10.226755142211914
    10. '#' → logprob: -10.601755142211914

Token 693: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10197854042053223
    2. '
' → logprob: -2.3519785404205322
    3. '        
' → logprob: -6.976978302001953
    4. ',' → logprob: -8.226978302001953
    5. '```' → logprob: -9.101978302001953
    6. ' and' → logprob: -9.226978302001953
    7. '#' → logprob: -9.351978302001953
    8. ')
' → logprob: -9.976978302001953
    9. ',
' → logprob: -10.476978302001953
    10. ')' → logprob: -10.476978302001953

Token 694: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056001294404268265
    2. '
' → logprob: -3.0560011863708496
    3. '#' → logprob: -5.30600118637085
    4. '#
' → logprob: -7.43100118637085
    5. '        
' → logprob: -7.55600118637085
    6. ')
' → logprob: -7.80600118637085
    7. '```' → logprob: -8.681001663208008
    8. ' and' → logprob: -8.806001663208008
    9. ')' → logprob: -9.056001663208008
    10. ',' → logprob: -9.306001663208008

Token 695: ' We' (ID: 1416)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.3926767110824585
    2. 'maximize' → logprob: -2.017676830291748
    3. ' total' → logprob: -2.392676830291748
    4. '       ' → logprob: -2.642676830291748
    5. ' max' → logprob: -2.642676830291748
    6. 'result' → logprob: -2.767676830291748
    7. '
' → logprob: -2.767676830291748
    8. 'total' → logprob: -2.892676830291748
    9. ' result' → logprob: -3.017676830291748
    10. ' for' → logprob: -3.642676830291748

Token 696: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.10521658509969711
    2. '       ' → logprob: -3.2302165031433105
    3. ' continue' → logprob: -3.8552165031433105
    4. 'can' → logprob: -4.7302165031433105
    5. '   ' → logprob: -4.8552165031433105
    6. ' try' → logprob: -5.3552165031433105
    7. ' maximize' → logprob: -5.7302165031433105
    8. 'maximize' → logprob: -6.1052165031433105
    9. 'continue' → logprob: -6.2302165031433105
    10. ' consider' → logprob: -6.2302165031433105

Token 697: ' flip' (ID: 29130)
  Prédit: ' flip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flip' → logprob: -0.19966967403888702
    2. 'flip' → logprob: -2.199669599533081
    3. ' choose' → logprob: -2.949669599533081
    4. 'choose' → logprob: -4.82466983795166
    5. '   ' → logprob: -6.19966983795166
    6. ' decide' → logprob: -6.57466983795166
    7. ' maximize' → logprob: -7.19966983795166
    8. ' try' → logprob: -7.19966983795166
    9. '       ' → logprob: -7.32466983795166
    10. ' then' → logprob: -7.57466983795166

Token 698: ' columns' (ID: 15697)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.1871823072433472
    2. ' each' → logprob: -1.4371823072433472
    3. ' columns' → logprob: -1.4371823072433472
    4. 'columns' → logprob: -2.5621824264526367
    5. ' any' → logprob: -2.9371824264526367
    6. 'any' → logprob: -3.6871824264526367
    7. ' the' → logprob: -3.8121824264526367
    8. 'the' → logprob: -4.687182426452637
    9. 'all' → logprob: -5.062182426452637
    10. ' either' → logprob: -5.062182426452637

Token 699: ' with' (ID: 483)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.12947160005569458
    2. 'to' → logprob: -3.12947154045105
    3. '_mask' → logprob: -4.254471778869629
    4. ' according' → logprob: -4.629471778869629
    5. '```' → logprob: -4.754471778869629
    6. '       ' → logprob: -4.879471778869629
    7. '           ' → logprob: -5.379471778869629
    8. ''s' → logprob: -5.629471778869629
    9. '[' → logprob: -5.629471778869629
    10. ' accordingly' → logprob: -5.879471778869629

Token 700: ' pattern' (ID: 8302)
  Prédit: ' pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -1.701578140258789
    2. ' patterns' → logprob: -1.951578140258789
    3. ' the' → logprob: -2.076578140258789
    4. 'pattern' → logprob: -2.201578140258789
    5. ' any' → logprob: -2.451578140258789
    6. 'the' → logprob: -2.826578140258789
    7. ' that' → logprob: -3.576578140258789
    8. ' certain' → logprob: -3.826578140258789
    9. ' a' → logprob: -3.951578140258789
    10. 'any' → logprob: -4.076578140258789

Token 701: ' p' (ID: 275)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -1.2897716760635376
    2. 's' → logprob: -1.5397716760635376
    3. ' bits' → logprob: -1.7897716760635376
    4. 'bits' → logprob: -2.914771556854248
    5. '```' → logprob: -3.164771556854248
    6. '_mask' → logprob: -3.539771556854248
    7. ' to' → logprob: -3.539771556854248
    8. '==' → logprob: -3.664771556854248
    9. ' in' → logprob: -3.664771556854248
    10. '_masks' → logprob: -4.039771556854248

Token 702: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2921963036060333
    2. ' for' → logprob: -2.167196273803711
    3. 'to' → logprob: -3.542196273803711
    4. ' in' → logprob: -3.792196273803711
    5. '```' → logprob: -4.167196273803711
    6. 'for' → logprob: -4.792196273803711
    7. '=' → logprob: -4.917196273803711
    8. ' exactly' → logprob: -4.917196273803711
    9. ''s' → logprob: -5.042196273803711
    10. ' if' → logprob: -5.042196273803711

Token 703: ' pattern' (ID: 8302)
  Prédit: 'maximize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maximize' → logprob: -0.6958136558532715
    2. 'match' → logprob: -1.8208136558532715
    3. '1' → logprob: -2.0708136558532715
    4. 'make' → logprob: -2.8208136558532715
    5. 'all' → logprob: -3.0708136558532715
    6. 'get' → logprob: -3.8208136558532715
    7. ' match' → logprob: -4.4458136558532715
    8. ' maximize' → logprob: -4.5708136558532715
    9. ' ' → logprob: -4.6958136558532715
    10. ' get' → logprob: -4.8208136558532715

Token 704: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.45229050517082214
    2. ' p' → logprob: -1.3272905349731445
    3. ' or' → logprob: -3.5772905349731445
    4. ' ' → logprob: -3.9522905349731445
    5. ' (' → logprob: -3.9522905349731445
    6. '0' → logprob: -4.9522905349731445
    7. '1' → logprob: -5.2022905349731445
    8. '(' → logprob: -5.8272905349731445
    9. '```' → logprob: -6.2022905349731445
    10. '`' → logprob: -6.5147905349731445

Token 705: ' ^' (ID: 7602)
  Prédit: ' ^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.9130892157554626
    2. ')' → logprob: -1.5380892753601074
    3. ' or' → logprob: -3.0380892753601074
    4. ',' → logprob: -3.0380892753601074
    5. '^' → logprob: -3.2880892753601074
    6. ' ' → logprob: -3.4130892753601074
    7. ' (' → logprob: -3.6630892753601074
    8. 's' → logprob: -4.038089275360107
    9. ''s' → logprob: -4.038089275360107
    10. ' to' → logprob: -4.288089275360107

Token 706: ' (' (ID: 350)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.027748608961701393
    2. '(' → logprob: -3.7777485847473145
    3. '(col' → logprob: -6.4027485847473145
    4. 'col' → logprob: -7.2777485847473145
    5. ' ((' → logprob: -7.4027485847473145
    6. '       ' → logprob: -7.7777485847473145
    7. '   ' → logprob: -7.7777485847473145
    8. '           ' → logprob: -9.152749061584473
    9. '0' → logprob: -9.277749061584473
    10. '(p' → logprob: -9.402749061584473

Token 707: '2' (ID: 17)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.22981765866279602
    2. '(' → logprob: -1.7298176288604736
    3. ' (' → logprob: -4.604817867279053
    4. ' ((' → logprob: -4.729817867279053
    5. '(col' → logprob: -5.604817867279053
    6. ' col' → logprob: -6.729817867279053
    7. 'col' → logprob: -6.729817867279053
    8. '(row' → logprob: -7.479817867279053
    9. '(pattern' → logprob: -7.979817867279053
    10. ')' → logprob: -8.354817390441895

Token 708: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.10097000747919083
    2. '^' → logprob: -2.3509700298309326
    3. '^{' → logprob: -8.225970268249512
    4. ' **' → logprob: -8.350970268249512
    5. '#' → logprob: -9.350970268249512
    6. '```' → logprob: -9.975970268249512
    7. '^\' → logprob: -10.850970268249512
    8. '
' → logprob: -10.975970268249512
    9. '_c' → logprob: -11.475970268249512
    10. '<|end|>' → logprob: -11.725970268249512

Token 709: 'R' (ID: 49)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.013804391026496887
    2. 'r' → logprob: -4.8888044357299805
    3. '(self' → logprob: -5.6388044357299805
    4. 'p' → logprob: -6.3888044357299805
    5. '(' → logprob: -8.51380443572998
    6. '
' → logprob: -8.51380443572998
    7. '(r' → logprob: -8.88880443572998
    8. ' self' → logprob: -9.01380443572998
    9. '((' → logprob: -9.76380443572998
    10. '{' → logprob: -9.88880443572998

Token 710: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.945834219455719
    2. ' -' → logprob: -0.945834219455719
    3. ')' → logprob: -1.8208341598510742
    4. ')-' → logprob: -2.820834159851074
    5. 'c' → logprob: -6.820834159851074
    6. 'p' → logprob: -8.695834159851074
    7. 'r' → logprob: -9.195834159851074
    8. ' )' → logprob: -9.695834159851074
    9. '),' → logprob: -9.820834159851074
    10. ' ' → logprob: -10.070834159851074

Token 711: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020401719666551799
    2. ' ' → logprob: -8.500204086303711
    3. '```' → logprob: -15.625204086303711
    4. '   ' → logprob: -16.18770408630371
    5. ')' → logprob: -16.93770408630371
    6. ' ' → logprob: -17.43770408630371
    7. '2' → logprob: -17.56270408630371
    8. 'p' → logprob: -17.62520408630371
    9. '
' → logprob: -17.68770408630371
    10. '`' → logprob: -17.81270408630371

Token 712: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005851408001035452
    2. ')
' → logprob: -6.0058512687683105
    3. ' )' → logprob: -6.2558512687683105
    4. ' -' → logprob: -8.130851745605469
    5. ')`' → logprob: -8.130851745605469
    6. '),' → logprob: -8.255851745605469
    7. ')**' → logprob: -9.630851745605469
    8. '-' → logprob: -9.630851745605469
    9. ')+' → logprob: -10.005851745605469
    10. '```' → logprob: -10.130851745605469

Token 713: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014795738272368908
    2. '
' → logprob: -5.139795780181885
    3. ',' → logprob: -5.764795780181885
    4. '        
' → logprob: -6.514795780181885
    5. ' to' → logprob: -6.639795780181885
    6. '```' → logprob: -7.264795780181885
    7. '<|end|>' → logprob: -8.389795303344727
    8. ' =' → logprob: -8.389795303344727
    9. '           ' → logprob: -8.514795303344727
    10. '(' → logprob: -8.514795303344727

Token 714: 'invert' (ID: 190492)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2476312518119812
    2. ')
' → logprob: -1.997631311416626
    3. '),' → logprob: -3.372631311416626
    4. ' )' → logprob: -3.997631311416626
    5. ' to' → logprob: -5.372631072998047
    6. ' )
' → logprob: -5.372631072998047
    7. ' -' → logprob: -6.247631072998047
    8. '1' → logprob: -6.247631072998047
    9. ').' → logprob: -6.372631072998047
    10. '+' → logprob: -6.372631072998047

Token 715: ' all' (ID: 722)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33779266476631165
    2. ' all' → logprob: -2.7127926349639893
    3. ' p' → logprob: -2.8377926349639893
    4. 'p' → logprob: -2.9627926349639893
    5. '_bits' → logprob: -3.4627926349639893
    6. ' bits' → logprob: -4.087792873382568
    7. ' )' → logprob: -4.837792873382568
    8. '(p' → logprob: -5.087792873382568
    9. 'all' → logprob: -5.087792873382568
    10. ')p' → logprob: -5.337792873382568

Token 716: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.7051541805267334
    2. 'bits' → logprob: -1.5801541805267334
    3. ')' → logprob: -2.2051541805267334
    4. '_bits' → logprob: -2.3301541805267334
    5. '1' → logprob: -2.5801541805267334
    6. '-' → logprob: -4.9551544189453125
    7. '_' → logprob: -6.0801544189453125
    8. ' -' → logprob: -6.8301544189453125
    9. ' ' → logprob: -6.9551544189453125
    10. ' ones' → logprob: -6.9551544189453125

Token 717: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21437637507915497
    2. ')
' → logprob: -1.7143763303756714
    3. '),' → logprob: -5.339376449584961
    4. ' to' → logprob: -5.464376449584961
    5. '+' → logprob: -7.589376449584961
    6. ')
' → logprob: -7.714376449584961
    7. '       ' → logprob: -7.839376449584961
    8. '   ' → logprob: -8.089376449584961
    9. 'to' → logprob: -8.589376449584961
    10. ').' → logprob: -8.714376449584961

Token 718: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011908221058547497
    2. '
' → logprob: -7.876190662384033
    3. ',' → logprob: -8.876191139221191
    4. '           ' → logprob: -9.126191139221191
    5. ')' → logprob: -9.251191139221191
    6. '```' → logprob: -9.376191139221191
    7. ' to' → logprob: -9.501191139221191
    8. '(' → logprob: -10.001191139221191
    9. '        
' → logprob: -10.001191139221191
    10. '   ' → logprob: -10.626191139221191

Token 719: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003852216759696603
    2. '#' → logprob: -6.878852367401123
    3. '
' → logprob: -6.878852367401123
    4. '           ' → logprob: -8.128851890563965
    5. ')' → logprob: -8.253851890563965
    6. ')
' → logprob: -8.378851890563965
    7. '`
' → logprob: -8.753851890563965
    8. ',' → logprob: -8.878851890563965
    9. ' to' → logprob: -9.253851890563965
    10. '        
' → logprob: -9.253851890563965

Token 720: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4519989490509033
    2. 'max' → logprob: -1.4519989490509033
    3. ' max' → logprob: -1.4519989490509033
    4. ' result' → logprob: -2.4519989490509033
    5. ' total' → logprob: -2.9519989490509033
    6. 'result' → logprob: -3.7019989490509033
    7. '#' → logprob: -3.7019989490509033
    8. 'For' → logprob: -3.7019989490509033
    9. 'total' → logprob: -3.9519989490509033
    10. '
' → logprob: -4.826998710632324

Token 721: ' each' (ID: 2454)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.9809636473655701
    2. ' pattern' → logprob: -1.8559637069702148
    3. ' col' → logprob: -2.105963706970215
    4. 'p' → logprob: -2.105963706970215
    5. 'pattern' → logprob: -2.230963706970215
    6. ' each' → logprob: -3.605963706970215
    7. ' c' → logprob: -3.605963706970215
    8. 'col' → logprob: -3.730963706970215
    9. ' patterns' → logprob: -4.855963706970215
    10. 'pat' → logprob: -5.105963706970215

Token 722: ' unique' (ID: 5746)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.4672985374927521
    2. 'p' → logprob: -1.4672985076904297
    3. ' pattern' → logprob: -2.2172985076904297
    4. ' p' → logprob: -4.34229850769043
    5. 'patterns' → logprob: -5.21729850769043
    6. 'col' → logprob: -5.71729850769043
    7. 'column' → logprob: -5.84229850769043
    8. ' column' → logprob: -6.21729850769043
    9. ' patterns' → logprob: -6.21729850769043
    10. '       ' → logprob: -7.09229850769043

Token 723: ' pattern' (ID: 8302)
  Prédit: ' pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.16403359174728394
    2. 'pattern' → logprob: -1.9140336513519287
    3. ' p' → logprob: -6.03903341293335
    4. 'p' → logprob: -7.53903341293335
    5. ' column' → logprob: -8.039033889770508
    6. ' patterns' → logprob: -8.914033889770508
    7. 'patterns' → logprob: -9.289033889770508
    8. '_pattern' → logprob: -9.539033889770508
    9. '```' → logprob: -9.539033889770508
    10. ' col' → logprob: -9.664033889770508

Token 724: ' count' (ID: 3605)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.047114159911870956
    2. ':
' → logprob: -4.422114372253418
    3. ':' → logprob: -4.547114372253418
    4. 'p' → logprob: -4.922114372253418
    5. ' in' → logprob: -5.172114372253418
    6. ' ,' → logprob: -5.672114372253418
    7. ',
' → logprob: -5.922114372253418
    8. ' p' → logprob: -6.172114372253418
    9. 'in' → logprob: -6.797114372253418
    10. ',p' → logprob: -7.672114372253418

Token 725: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19558046758174896
    2. ' in' → logprob: -1.9455804824829102
    3. ' ,' → logprob: -4.07058048248291
    4. 's' → logprob: -5.44558048248291
    5. 'in' → logprob: -5.57058048248291
    6. '       ' → logprob: -6.07058048248291
    7. '   ' → logprob: -6.44558048248291
    8. ' =' → logprob: -7.32058048248291
    9. ':' → logprob: -7.57058048248291
    10. 'p' → logprob: -7.69558048248291

Token 726: ' decide' (ID: 13001)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.760177493095398
    2. ' count' → logprob: -2.1351776123046875
    3. ' choose' → logprob: -2.2601776123046875
    4. ' max' → logprob: -2.3851776123046875
    5. ' maximize' → logprob: -2.5101776123046875
    6. ' calculate' → logprob: -2.7601776123046875
    7. 'max' → logprob: -3.1351776123046875
    8. '       ' → logprob: -3.3851776123046875
    9. ' we' → logprob: -3.3851776123046875
    10. 'maximize' → logprob: -3.3851776123046875

Token 727: ' to' (ID: 316)
  Prédit: ' whether'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' whether' → logprob: -0.29085758328437805
    2. ' how' → logprob: -1.5408575534820557
    3. ' if' → logprob: -4.790857791900635
    4. 'whether' → logprob: -4.790857791900635
    5. ' to' → logprob: -4.915857791900635
    6. ' max' → logprob: -5.540857791900635
    7. ' for' → logprob: -5.790857791900635
    8. ' which' → logprob: -6.165857791900635
    9. '```' → logprob: -6.790857791900635
    10. ' the' → logprob: -7.290857791900635

Token 728: ' flip' (ID: 29130)
  Prédit: 'flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flip' → logprob: -0.7913197875022888
    2. 'maximize' → logprob: -1.7913198471069336
    3. ' keep' → logprob: -2.4163198471069336
    4. ' flip' → logprob: -2.5413198471069336
    5. 'keep' → logprob: -2.6663198471069336
    6. ' maximize' → logprob: -3.1663198471069336
    7. 'sum' → logprob: -4.291319847106934
    8. ' use' → logprob: -4.291319847106934
    9. 'choose' → logprob: -4.291319847106934
    10. 'use' → logprob: -4.541319847106934

Token 729: ' columns' (ID: 15697)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.13493381440639496
    2. ' or' → logprob: -2.2599337100982666
    3. 'the' → logprob: -5.009933948516846
    4. '=' → logprob: -5.134933948516846
    5. 'all' → logprob: -6.259933948516846
    6. '_or' → logprob: -6.884933948516846
    7. '   ' → logprob: -7.009933948516846
    8. ' the' → logprob: -7.134933948516846
    9. ' =' → logprob: -7.509933948516846
    10. 'pattern' → logprob: -8.009933471679688

Token 730: ' or' (ID: 503)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.8809740543365479
    2. ' or' → logprob: -0.8809740543365479
    3. '       ' → logprob: -2.255974054336548
    4. '           ' → logprob: -3.755974054336548
    5. 'for' → logprob: -5.005973815917969
    6. 'with' → logprob: -5.005973815917969
    7. '=' → logprob: -5.255973815917969
    8. 'to' → logprob: -5.505973815917969
    9. ' to' → logprob: -5.505973815917969
    10. '#' → logprob: -5.755973815917969

Token 731: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.023253746330738068
    2. ' not' → logprob: -3.7732536792755127
    3. 'keep' → logprob: -12.273253440856934
    4. '_not' → logprob: -13.523253440856934
    5. 'leave' → logprob: -14.023253440856934
    6. '	not' → logprob: -14.898253440856934
    7. 'invert' → logprob: -15.148253440856934
    8. ' keep' → logprob: -15.398253440856934
    9. 'skip' → logprob: -15.898253440856934
    10. '```' → logprob: -16.02325439453125

Token 732: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005348789971321821
    2. ',' → logprob: -6.2553486824035645
    3. '
' → logprob: -6.7553486824035645
    4. ' to' → logprob: -7.5053486824035645
    5. '(' → logprob: -7.6303486824035645
    6. 'def' → logprob: -8.380349159240723
    7. ' (' → logprob: -9.255349159240723
    8. '           ' → logprob: -9.255349159240723
    9. '```' → logprob: -9.255349159240723
    10. 'to' → logprob: -9.380349159240723

Token 733: ' max' (ID: 2999)
  Prédit: ' maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.9901543259620667
    2. ' that' → logprob: -1.4901542663574219
    3. ' maximal' → logprob: -2.615154266357422
    4. ' each' → logprob: -2.615154266357422
    5. 'that' → logprob: -2.865154266357422
    6. 'max' → logprob: -2.990154266357422
    7. 'maximum' → logprob: -3.115154266357422
    8. 'each' → logprob: -3.365154266357422
    9. ' maximizing' → logprob: -3.740154266357422
    10. ' this' → logprob: -4.865154266357422

Token 734: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.49158841371536255
    2. ' count' → logprob: -1.9915883541107178
    3. 'faces' → logprob: -2.2415883541107178
    4. 'face' → logprob: -2.9915883541107178
    5. 'im' → logprob: -4.116588592529297
    6. '   ' → logprob: -4.241588592529297
    7. 'value' → logprob: -4.741588592529297
    8. 'result' → logprob: -4.866588592529297
    9. '       ' → logprob: -5.116588592529297
    10. 'imize' → logprob: -5.241588592529297

Token 735: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012061846209689975
    2. '
' → logprob: -7.501206398010254
    3. '```' → logprob: -8.251206398010254
    4. ',' → logprob: -9.501206398010254
    5. '(' → logprob: -10.001206398010254
    6. 'from' → logprob: -10.251206398010254
    7. '(max' → logprob: -10.751206398010254
    8. ' =' → logprob: -10.876206398010254
    9. '           ' → logprob: -11.001206398010254
    10. '        
' → logprob: -11.126206398010254

Token 736: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001576506474521011
    2. '```' → logprob: -10.000157356262207
    3. '
' → logprob: -10.875157356262207
    4. ',' → logprob: -10.875157356262207
    5. ')' → logprob: -11.250157356262207
    6. '<|end|>' → logprob: -11.375157356262207
    7. '        
' → logprob: -11.500157356262207
    8. '.' → logprob: -11.625157356262207
    9. '           ' → logprob: -12.000157356262207
    10. '#' → logprob: -12.375157356262207

Token 737: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032671953085809946
    2. '"""
' → logprob: -5.878267288208008
    3. '"""' → logprob: -8.003267288208008
    4. '```' → logprob: -9.378267288208008
    5. '
' → logprob: -11.503267288208008
    6. '``' → logprob: -12.378267288208008
    7. '""' → logprob: -12.503267288208008
    8. '"
' → logprob: -12.628267288208008
    9. '#' → logprob: -12.753267288208008
    10. '`
' → logprob: -12.878267288208008

Token 738: ' Sum' (ID: 34138)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21426273882389069
    2. ' total' → logprob: -2.4642627239227295
    3. 'Calculate' → logprob: -2.9642627239227295
    4. 'total' → logprob: -4.339262962341309
    5. ' result' → logprob: -4.339262962341309
    6. ' max' → logprob: -5.214262962341309
    7. ' Calculate' → logprob: -5.839262962341309
    8. 'result' → logprob: -6.339262962341309
    9. 'Returns' → logprob: -6.464262962341309
    10. '
' → logprob: -6.464262962341309

Token 739: ' max' (ID: 2999)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' up' → logprob: -1.074421763420105
    2. ' =' → logprob: -1.824421763420105
    3. ' of' → logprob: -2.0744218826293945
    4. '       ' → logprob: -2.3244218826293945
    5. ' counts' → logprob: -2.8244218826293945
    6. ' +=' → logprob: -2.9494218826293945
    7. ' the' → logprob: -3.3244218826293945
    8. ' over' → logprob: -3.8244218826293945
    9. 'max' → logprob: -3.8244218826293945
    10. '=' → logprob: -4.5744218826293945

Token 740: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -1.2714691162109375
    2. 'count' → logprob: -1.3964691162109375
    3. ' counts' → logprob: -1.8964691162109375
    4. '       ' → logprob: -2.3964691162109375
    5. '_count' → logprob: -2.7714691162109375
    6. '(' → logprob: -3.0214691162109375
    7. '(count' → logprob: -3.2714691162109375
    8. '           ' → logprob: -4.0214691162109375
    9. ' count' → logprob: -4.0214691162109375
    10. '_counts' → logprob: -4.3964691162109375

Token 741: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2859116196632385
    2. '(self' → logprob: -1.4109115600585938
    3. '(' → logprob: -6.535911560058594
    4. '
' → logprob: -6.910911560058594
    5. ':' → logprob: -7.160911560058594
    6. '   ' → logprob: -7.910911560058594
    7. ':
' → logprob: -8.660911560058594
    8. ',' → logprob: -8.785911560058594
    9. '(
' → logprob: -8.785911560058594
    10. '):
' → logprob: -9.160911560058594

Token 742: ' max' (ID: 2999)
  Prédit: ' maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.29116377234458923
    2. 'max' → logprob: -2.541163682937622
    3. ' max' → logprob: -2.916163682937622
    4. 'maximum' → logprob: -3.041163682937622
    5. ' total' → logprob: -3.416163682937622
    6. ' the' → logprob: -4.916163921356201
    7. ' return' → logprob: -5.166163921356201
    8. ' best' → logprob: -5.166163921356201
    9. ' result' → logprob: -5.291163921356201
    10. 'return' → logprob: -5.666163921356201

Token 743: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -1.3338451385498047
    2. 'face' → logprob: -2.0838451385498047
    3. 'count' → logprob: -2.0838451385498047
    4. 'number' → logprob: -2.0838451385498047
    5. ' count' → logprob: -2.8338451385498047
    6. 'possible' → logprob: -2.8338451385498047
    7. '_face' → logprob: -3.2088451385498047
    8. '   ' → logprob: -3.3338451385498047
    9. 'front' → logprob: -3.7088451385498047
    10. '_front' → logprob: -3.8338451385498047

Token 744: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5284481048583984
    2. '_of' → logprob: -2.1534481048583984
    3. '_result' → logprob: -2.9034481048583984
    4. ' of' → logprob: -3.0284481048583984
    5. ' =' → logprob: -3.1534481048583984
    6. '_rows' → logprob: -3.5284481048583984
    7. '_faces' → logprob: -3.6534481048583984
    8. '_flip' → logprob: -3.7784481048583984
    9. '_possible' → logprob: -4.403448104858398
    10. '        
' → logprob: -4.778448104858398

Token 745: ' shipment' (ID: 52286)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.2032170295715332
    2. '1' → logprob: -2.828217029571533
    3. 'front' → logprob: -2.953217029571533
    4. 'sen' → logprob: -3.328217029571533
    5. ' face' → logprob: -4.078217029571533
    6. 'ones' → logprob: -5.203217029571533
    7. '```' → logprob: -5.578217029571533
    8. 'columns' → logprob: -5.703217029571533
    9. ' ' → logprob: -6.453217029571533
    10. 'faces' → logprob: -6.578217029571533

Token 746: ' sen' (ID: 6385)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05614803731441498
    2. '
' → logprob: -3.056148052215576
    3. '```' → logprob: -6.431148052215576
    4. ' =' → logprob: -7.056148052215576
    5. '        
' → logprob: -7.181148052215576
    6. '   ' → logprob: -7.181148052215576
    7. '        ' → logprob: -7.931148052215576
    8. 'def' → logprob: -8.181147575378418
    9. ' (' → logprob: -8.181147575378418
    10. ',' → logprob: -8.306147575378418

Token 747: 'bei' (ID: 36127)
  Prédit: 'bei'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bei' → logprob: -0.014956403523683548
    2. 'be' → logprob: -4.514956474304199
    3. 'b' → logprob: -6.014956474304199
    4. '```' → logprob: -8.0149564743042
    5. '   ' → logprob: -8.3899564743042
    6. ' bei' → logprob: -9.1399564743042
    7. 'べ' → logprob: -9.5149564743042
    8. '1' → logprob: -9.7649564743042
    9. '``' → logprob: -9.7649564743042
    10. '
' → logprob: -9.7649564743042

Token 748: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023766089230775833
    2. '
' → logprob: -3.898766040802002
    3. ',' → logprob: -7.523766040802002
    4. 'def' → logprob: -7.648766040802002
    5. '        
' → logprob: -8.02376651763916
    6. '   ' → logprob: -8.14876651763916
    7. '<|end|>' → logprob: -8.27376651763916
    8. ' for' → logprob: -9.02376651763916
    9. ')' → logprob: -9.14876651763916
    10. '```' → logprob: -9.27376651763916

Token 749: ' this' (ID: 495)
  Prédit: 'front'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'front' → logprob: -0.7945301532745361
    2. 'the' → logprob: -1.2945301532745361
    3. 'total' → logprob: -2.294530153274536
    4. 'final' → logprob: -3.169530153274536
    5. 'this' → logprob: -3.669530153274536
    6. 'self' → logprob: -3.794530153274536
    7. 'face' → logprob: -4.169529914855957
    8. 'each' → logprob: -4.794529914855957
    9. 'that' → logprob: -5.044529914855957
    10. 'rows' → logprob: -5.169529914855957

Token 750: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.311455249786377
    2. 'batch' → logprob: -1.561455249786377
    3. '   ' → logprob: -2.311455249786377
    4. 'flip' → logprob: -2.311455249786377
    5. 'state' → logprob: -2.686455249786377
    6. 'line' → logprob: -2.936455249786377
    7. 'configuration' → logprob: -3.061455249786377
    8. ' line' → logprob: -3.936455249786377
    9. ' batch' → logprob: -4.311455249786377
    10. 'grid' → logprob: -4.311455249786377

Token 751: ' flip' (ID: 29130)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27603378891944885
    2. ':
' → logprob: -1.6510337591171265
    3. ':' → logprob: -3.276033878326416
    4. '
' → logprob: -5.151033878326416
    5. '):
' → logprob: -6.151033878326416
    6. '   ' → logprob: -7.276033878326416
    7. ',' → logprob: -8.026033401489258
    8. ')' → logprob: -8.276033401489258
    9. '```' → logprob: -8.276033401489258
    10. ':
' → logprob: -8.401033401489258

Token 752: ' configuration' (ID: 12282)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004635064862668514
    2. '
' → logprob: -5.879634857177734
    3. 'def' → logprob: -7.754634857177734
    4. '   ' → logprob: -8.004634857177734
    5. '```' → logprob: -8.504634857177734
    6. '        
' → logprob: -8.754634857177734
    7. ',' → logprob: -9.379634857177734
    8. ' =' → logprob: -9.629634857177734
    9. ':' → logprob: -9.629634857177734
    10. '    ' → logprob: -10.129634857177734

Token 753: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1173940971493721
    2. '
' → logprob: -2.242394208908081
    3. '        
' → logprob: -5.867393970489502
    4. '```' → logprob: -7.367393970489502
    5. ',' → logprob: -7.742393970489502
    6. '<|end|>' → logprob: -8.61739444732666
    7. '<|end|>' → logprob: -9.24239444732666
    8. ':
' → logprob: -9.36739444732666
    9. ':' → logprob: -9.61739444732666
    10. '#' → logprob: -9.99239444732666

Token 754: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030516237020492554
    2. '
' → logprob: -6.0030517578125
    3. '        
' → logprob: -8.5030517578125
    4. '```' → logprob: -8.5030517578125
    5. '<|end|>' → logprob: -9.5030517578125
    6. ',' → logprob: -9.8780517578125
    7. '<|end|>' → logprob: -11.1280517578125
    8. '#' → logprob: -12.5030517578125
    9. ')' → logprob: -12.6280517578125
    10. '           ' → logprob: -13.0030517578125

Token 755: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009417156688869
    2. '"""' → logprob: -7.500941753387451
    3. '```' → logprob: -8.625941276550293
    4. '
' → logprob: -9.250941276550293
    5. 'from' → logprob: -10.750941276550293
    6. '"""
' → logprob: -10.750941276550293
    7. ')' → logprob: -10.875941276550293
    8. '#' → logprob: -11.125941276550293
    9. '        
' → logprob: -11.250941276550293
    10. ',' → logprob: -12.250941276550293

Token 756: ' Track' (ID: 30844)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5065260529518127
    2. 'Return' → logprob: -1.631525993347168
    3. 'Returns' → logprob: -2.506525993347168
    4. 'return' → logprob: -3.131525993347168
    5. '#' → logprob: -3.631525993347168
    6. ' return' → logprob: -5.256525993347168
    7. '
' → logprob: -5.506525993347168
    8. 'Iter' → logprob: -5.756525993347168
    9. 'from' → logprob: -5.881525993347168
    10. 'Enumer' → logprob: -5.881525993347168

Token 757: ' global' (ID: 5466)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08603190630674362
    2. ' max' → logprob: -2.586031913757324
    3. 'best' → logprob: -5.961031913757324
    4. ' best' → logprob: -6.211031913757324
    5. '   ' → logprob: -6.586031913757324
    6. 'maximum' → logprob: -7.461031913757324
    7. ' maximum' → logprob: -8.211031913757324
    8. ' maximal' → logprob: -9.336031913757324
    9. 'result' → logprob: -10.086031913757324
    10. '       ' → logprob: -10.461031913757324

Token 758: ' maximum' (ID: 10562)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0626542866230011
    2. 'max' → logprob: -2.8126542568206787
    3. '_best' → logprob: -7.812654495239258
    4. ' max' → logprob: -8.937654495239258
    5. 'maximum' → logprob: -9.437654495239258
    6. ' maximum' → logprob: -11.062654495239258
    7. '_result' → logprob: -11.062654495239258
    8. 'best' → logprob: -11.312654495239258
    9. '   ' → logprob: -11.562654495239258
    10. '_count' → logprob: -12.437654495239258

Token 759: ' over' (ID: 1072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29467421770095825
    2. '
' → logprob: -1.4196741580963135
    3. 'max' → logprob: -4.919674396514893
    4. ' =' → logprob: -6.794674396514893
    5. '_max' → logprob: -7.169674396514893
    6. '        
' → logprob: -7.294674396514893
    7. '(max' → logprob: -7.294674396514893
    8. '
' → logprob: -7.919674396514893
    9. ':' → logprob: -8.044673919677734
    10. '```' → logprob: -8.294673919677734

Token 760: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.4177727699279785
    2. ' all' → logprob: -1.1677727699279785
    3. 'row' → logprob: -3.5427727699279785
    4. ' row' → logprob: -6.6677727699279785
    5. '   ' → logprob: -8.91777229309082
    6. '```' → logprob: -10.66777229309082
    7. '       ' → logprob: -10.91777229309082
    8. '_all' → logprob: -11.04277229309082
    9. 'r' → logprob: -12.16777229309082
    10. '           ' → logprob: -12.41777229309082

Token 761: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.7105587124824524
    2. 'row' → logprob: -1.3355586528778076
    3. '       ' → logprob: -1.5855586528778076
    4. '   ' → logprob: -4.210558891296387
    5. ' for' → logprob: -4.835558891296387
    6. ' possible' → logprob: -6.085558891296387
    7. ' flip' → logprob: -6.335558891296387
    8. '
' → logprob: -6.460558891296387
    9. ' states' → logprob: -6.460558891296387
    10. '_row' → logprob: -6.835558891296387

Token 762: ' flip' (ID: 29130)
  Prédit: '_flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flip' → logprob: -0.07137499004602432
    2. '_fl' → logprob: -2.9463748931884766
    3. 'flip' → logprob: -4.446374893188477
    4. 'fl' → logprob: -5.946374893188477
    5. ' flips' → logprob: -7.321374893188477
    6. ' flip' → logprob: -7.821374893188477
    7. '   ' → logprob: -8.321374893188477
    8. '_mask' → logprob: -9.071374893188477
    9. '_masks' → logprob: -9.071374893188477
    10. 's' → logprob: -9.571374893188477

Token 763: ' configurations' (ID: 56804)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0752779096364975
    2. '_mask' → logprob: -3.575277805328369
    3. '       ' → logprob: -4.575277805328369
    4. '_masks' → logprob: -4.700277805328369
    5. 'm' → logprob: -4.825277805328369
    6. '   ' → logprob: -5.450277805328369
    7. '_states' → logprob: -5.700277805328369
    8. 'max' → logprob: -6.325277805328369
    9. 'mask' → logprob: -6.325277805328369
    10. 'states' → logprob: -6.575277805328369

Token 764: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00801210105419159
    2. '
' → logprob: -5.008012294769287
    3. '        
' → logprob: -7.508012294769287
    4. '```' → logprob: -8.383011817932129
    5. ',' → logprob: -8.758011817932129
    6. '#' → logprob: -9.008011817932129
    7. '<|end|>' → logprob: -9.758011817932129
    8. 'from' → logprob: -10.258011817932129
    9. ':' → logprob: -10.383011817932129
    10. '<|end|>' → logprob: -10.633011817932129

Token 765: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021514499094337225
    2. '
' → logprob: -6.6271514892578125
    3. '```' → logprob: -7.7521514892578125
    4. '        
' → logprob: -8.252151489257812
    5. ',' → logprob: -10.377151489257812
    6. '<|end|>' → logprob: -10.502151489257812
    7. '   ' → logprob: -11.002151489257812
    8. ':' → logprob: -11.127151489257812
    9. ')' → logprob: -12.002151489257812
    10. '#' → logprob: -12.127151489257812

Token 766: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017066054278984666
    2. '```' → logprob: -7.126706600189209
    3. 'max' → logprob: -7.751706600189209
    4. '
' → logprob: -8.251707077026367
    5. '#' → logprob: -9.626707077026367
    6. ')' → logprob: -10.501707077026367
    7. '"""' → logprob: -10.626707077026367
    8. '        
' → logprob: -10.626707077026367
    9. ',' → logprob: -11.001707077026367
    10. '):
' → logprob: -11.751707077026367

Token 767: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007061177166178823
    2. 'max' → logprob: -7.625706195831299
    3. '```' → logprob: -8.75070571899414
    4. ' max' → logprob: -10.12570571899414
    5. '   ' → logprob: -11.25070571899414
    6. 'result' → logprob: -12.50070571899414
    7. ' result' → logprob: -14.00070571899414
    8. '
' → logprob: -14.25070571899414
    9. 'def' → logprob: -14.25070571899414
    10. '	' → logprob: -15.87570571899414

Token 768: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0010164948180317879
    2. 'best' → logprob: -7.001016616821289
    3. '       ' → logprob: -9.251016616821289
    4. 'result' → logprob: -11.876016616821289
    5. ' max' → logprob: -14.126016616821289
    6. 'ans' → logprob: -14.376016616821289
    7. 'answer' → logprob: -15.751016616821289
    8. 'maximum' → logprob: -15.876016616821289
    9. 'def' → logprob: -16.12601661682129
    10. 'from' → logprob: -16.12601661682129

Token 769: '_sh' (ID: 8823)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.023644661530852318
    2. '_' → logprob: -4.52364444732666
    3. '_sh' → logprob: -4.64864444732666
    4. '_result' → logprob: -7.27364444732666
    5. '_total' → logprob: -7.77364444732666
    6. '_face' → logprob: -7.77364444732666
    7. '_faces' → logprob: -8.02364444732666
    8. '_ship' → logprob: -8.14864444732666
    9. '_sum' → logprob: -8.64864444732666
    10. '_max' → logprob: -8.77364444732666

Token 770: 'ipment' (ID: 6219)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.021356500685214996
    2. 'ipped' → logprob: -4.521356582641602
    3. 'ipment' → logprob: -5.146356582641602
    4. 'ift' → logprob: -5.771356582641602
    5. 'e' → logprob: -8.021356582641602
    6. 'ipp' → logprob: -8.646356582641602
    7. '=' → logprob: -9.396356582641602
    8. '_ip' → logprob: -9.521356582641602
    9. 'i' → logprob: -9.771356582641602
    10. '_count' → logprob: -9.771356582641602

Token 771: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193706154823303
    2. '=' → logprob: -1.5019370317459106
    3. '_' → logprob: -12.126936912536621
    4. ' ' → logprob: -14.376936912536621
    5. '   ' → logprob: -14.626936912536621
    6. ':' → logprob: -14.876936912536621
    7. ',' → logprob: -15.001936912536621
    8. ')' → logprob: -15.126936912536621
    9. '_=' → logprob: -16.251937866210938
    10. 's' → logprob: -16.876937866210938

Token 772: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.500006675720215
    3. '-' → logprob: -13.000006675720215
    4. '   ' → logprob: -16.0000057220459
    5. 'float' → logprob: -16.8750057220459
    6. ' -' → logprob: -18.1250057220459
    7. '       ' → logprob: -18.5000057220459
    8. 'self' → logprob: -20.0000057220459
    9. 'max' → logprob: -20.5000057220459
    10. '  ' → logprob: -21.3750057220459

Token 773: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. '-' → logprob: -12.375005722045898
    3. ' ' → logprob: -13.875005722045898
    4. '   ' → logprob: -15.500005722045898
    5. 'float' → logprob: -16.1250057220459
    6. ' -' → logprob: -18.8750057220459
    7. '-s' → logprob: -19.0000057220459
    8. 'self' → logprob: -19.1250057220459
    9. '-(' → logprob: -19.1250057220459
    10. '       ' → logprob: -19.6250057220459

Token 774: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007168324198573828
    2. '
' → logprob: -5.007168292999268
    3. ' for' → logprob: -8.382168769836426
    4. 'for' → logprob: -9.382168769836426
    5. '        
' → logprob: -9.507168769836426
    6. ',' → logprob: -10.257168769836426
    7. '   ' → logprob: -11.257168769836426
    8. '  
' → logprob: -12.632168769836426
    9. '    
' → logprob: -13.007168769836426
    10. ',
' → logprob: -13.132168769836426

Token 775: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0043736291117966175
    2. ' for' → logprob: -5.879373550415039
    3. 'for' → logprob: -6.504373550415039
    4. '   ' → logprob: -10.379373550415039
    5. ',' → logprob: -11.129373550415039
    6. '```' → logprob: -11.254373550415039
    7. '
' → logprob: -11.879373550415039
    8. '        
' → logprob: -13.129373550415039
    9. '           ' → logprob: -13.629373550415039
    10. 'from' → logprob: -14.879373550415039

Token 776: ' full' (ID: 3149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00015955790877342224
    2. 'from' → logprob: -9.00015926361084
    3. '       ' → logprob: -10.25015926361084
    4. ' for' → logprob: -14.75015926361084
    5. '```' → logprob: -15.50015926361084
    6. 'max' → logprob: -16.375160217285156
    7. '   ' → logprob: -17.625160217285156
    8. 'all' → logprob: -18.125160217285156
    9. 'row' → logprob: -18.875160217285156
    10. '#' → logprob: -19.000160217285156

Token 777: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.012941972352564335
    2. '_flip' → logprob: -4.637941837310791
    3. 'mask' → logprob: -6.262941837310791
    4. '_bit' → logprob: -7.012941837310791
    5. '_bits' → logprob: -8.38794231414795
    6. '=' → logprob: -10.88794231414795
    7. '_row' → logprob: -10.88794231414795
    8. ' =' → logprob: -11.13794231414795
    9. '_fl' → logprob: -11.51294231414795
    10. '_MASK' → logprob: -11.63794231414795

Token 778: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889022678136826
    2. '=' → logprob: -2.578890323638916
    3. ' ' → logprob: -15.328889846801758
    4. ')' → logprob: -16.453889846801758
    5. ' =
' → logprob: -16.703889846801758
    6. '   ' → logprob: -17.328889846801758
    7. '-' → logprob: -18.078889846801758
    8. ' =)' → logprob: -18.078889846801758
    9. '<|end|>' → logprob: -18.328889846801758
    10. 's' → logprob: -18.453889846801758

Token 779: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00947649497538805
    2. ' (' → logprob: -4.759476661682129
    3. '(self' → logprob: -7.134476661682129
    4. '       ' → logprob: -10.134476661682129
    5. '   ' → logprob: -10.884476661682129
    6. '((' → logprob: -13.009476661682129
    7. 'self' → logprob: -13.509476661682129
    8. '           ' → logprob: -13.759476661682129
    9. ' ' → logprob: -15.134476661682129
    10. '     ' → logprob: -16.134475708007812

Token 780: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031777136027812958
    2. '(' → logprob: -5.753177642822266
    3. ' (' → logprob: -18.378177642822266
    4. '   ' → logprob: -19.628177642822266
    5. ' ' → logprob: -19.753177642822266
    6. '{' → logprob: -22.003177642822266
    7. '[' → logprob: -22.128177642822266
    8. '１' → logprob: -22.628177642822266
    9. '
' → logprob: -23.003177642822266
    10. '2' → logprob: -23.003177642822266

Token 781: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.061967913061380386
    2. '<<' → logprob: -2.8119678497314453
    3. '<<(' → logprob: -17.311967849731445
    4. ' ' → logprob: -17.561967849731445
    5. ' <<
' → logprob: -17.561967849731445
    6. '1' → logprob: -17.811967849731445
    7. '   ' → logprob: -17.936967849731445
    8. ' ' → logprob: -18.311967849731445
    9. '<<<' → logprob: -18.686967849731445
    10. 'self' → logprob: -18.811967849731445

Token 782: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.5649528298527e-05
    2. ' self' → logprob: -9.500075340270996
    3. '       ' → logprob: -14.375075340270996
    4. '(self' → logprob: -16.125076293945312
    5. '   ' → logprob: -18.875076293945312
    6. '           ' → logprob: -19.625076293945312
    7. '
' → logprob: -19.750076293945312
    8. '[self' → logprob: -19.875076293945312
    9. '	self' → logprob: -21.125076293945312
    10. '0' → logprob: -21.125076293945312

Token 783: '.R' (ID: 3395)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0072007509879767895
    2. '.R' → logprob: -5.132200717926025
    3. 'R' → logprob: -6.757200717926025
    4. ' self' → logprob: -9.507201194763184
    5. '   ' → logprob: -11.757201194763184
    6. '       ' → logprob: -11.757201194763184
    7. '
' → logprob: -11.882201194763184
    8. '.self' → logprob: -12.132201194763184
    9. '.S' → logprob: -13.007201194763184
    10. '`' → logprob: -14.257201194763184

Token 784: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0802738870552275e-05
    2. ' )' → logprob: -11.50001049041748
    3. '')' → logprob: -15.12501049041748
    4. ')-' → logprob: -15.12501049041748
    5. '")' → logprob: -18.125011444091797
    6. '}' → logprob: -18.250011444091797
    7. '`)' → logprob: -18.500011444091797
    8. '）' → logprob: -18.625011444091797
    9. '_)' → logprob: -18.875011444091797
    10. '())' → logprob: -19.000011444091797

Token 785: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3791068494319916
    2. '-' → logprob: -1.754106879234314
    3. ')' → logprob: -2.0041067600250244
    4. ')-' → logprob: -4.8791069984436035
    5. '       ' → logprob: -10.754106521606445
    6. ' )' → logprob: -11.379106521606445
    7. '
' → logprob: -11.629106521606445
    8. '   ' → logprob: -12.129106521606445
    9. '()-' → logprob: -12.129106521606445
    10. ' ' → logprob: -12.379106521606445

Token 786: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.375001907348633
    4. '```' → logprob: -19.250001907348633
    5. '0' → logprob: -19.875001907348633
    6. '       ' → logprob: -20.375001907348633
    7. '           ' → logprob: -20.500001907348633
    8. ')' → logprob: -21.250001907348633
    9. '<|end|>' → logprob: -21.250001907348633
    10. '`' → logprob: -21.500001907348633

Token 787: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -18.5
    4. '```' → logprob: -19.375
    5. '0' → logprob: -20.375
    6. '<|end|>' → logprob: -20.625
    7. '`' → logprob: -21.0
    8. '       ' → logprob: -21.375
    9. ')' → logprob: -21.5
    10. '
' → logprob: -21.5625

Token 788: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09134835004806519
    2. '       ' → logprob: -2.46634840965271
    3. '<|end|>' → logprob: -7.341348171234131
    4. ' for' → logprob: -7.466348171234131
    5. '        
' → logprob: -7.466348171234131
    6. 'for' → logprob: -7.966348171234131
    7. '
' → logprob: -9.091348648071289
    8. '  
' → logprob: -10.216348648071289
    9. '<|end|>' → logprob: -10.716348648071289
    10. ',' → logprob: -10.966348648071289

Token 789: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05931324139237404
    2. '       ' → logprob: -3.1843132972717285
    3. '<|end|>' → logprob: -5.1843132972717285
    4. '        
' → logprob: -5.3093132972717285
    5. ' for' → logprob: -6.3093132972717285
    6. '  
' → logprob: -6.8093132972717285
    7. '    
' → logprob: -7.4343132972717285
    8. ' 
' → logprob: -7.6843132972717285
    9. 'for' → logprob: -8.05931282043457
    10. '   ' → logprob: -8.05931282043457

Token 790: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005249153473414481
    2. '       ' → logprob: -7.750524997711182
    3. 'from' → logprob: -9.875524520874023
    4. ' for' → logprob: -10.125524520874023
    5. '```' → logprob: -12.875524520874023
    6. 'import' → logprob: -16.500524520874023
    7. '
' → logprob: -16.750524520874023
    8. '   ' → logprob: -17.375524520874023
    9. '	for' → logprob: -17.875524520874023
    10. '        
' → logprob: -18.000524520874023

Token 791: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00046022076276130974
    2. 'from' → logprob: -7.750460147857666
    3. '       ' → logprob: -10.500460624694824
    4. ' for' → logprob: -13.375460624694824
    5. '```' → logprob: -15.000460624694824
    6. 'import' → logprob: -16.750459671020508
    7. '   ' → logprob: -16.875459671020508
    8. '
' → logprob: -17.250459671020508
    9. '        
' → logprob: -17.875459671020508
    10. 'row' → logprob: -17.875459671020508

Token 792: ' avoid' (ID: 8397)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.25270798802375793
    2. ' row' → logprob: -1.6277079582214355
    3. 'r' → logprob: -3.8777079582214355
    4. '   ' → logprob: -6.2527079582214355
    5. ' r' → logprob: -6.5027079582214355
    6. 'flip' → logprob: -7.0027079582214355
    7. ' ' → logprob: -7.3777079582214355
    8. ' flip' → logprob: -8.877708435058594
    9. 'for' → logprob: -9.002708435058594
    10. ' for' → logprob: -9.315208435058594

Token 793: ' double' (ID: 3503)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.25833117961883545
    2. ' row' → logprob: -1.5083311796188354
    3. ' col' → logprob: -6.758331298828125
    4. 'r' → logprob: -7.133331298828125
    5. 'col' → logprob: -7.133331298828125
    6. 'c' → logprob: -7.508331298828125
    7. '   ' → logprob: -7.508331298828125
    8. 'pattern' → logprob: -8.008331298828125
    9. 'import' → logprob: -8.133331298828125
    10. ' c' → logprob: -8.383331298828125

Token 794: ' counting' (ID: 43276)
  Prédit: ' counting'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counting' → logprob: -0.40356218814849854
    2. 'count' → logprob: -1.1535621881484985
    3. ' count' → logprob: -5.528562068939209
    4. 'for' → logprob: -5.653562068939209
    5. '_count' → logprob: -6.028562068939209
    6. '#' → logprob: -6.528562068939209
    7. ' loop' → logprob: -7.028562068939209
    8. ' for' → logprob: -7.153562068939209
    9. '_' → logprob: -7.528562068939209
    10. 'loop' → logprob: -7.528562068939209

Token 795: ' pairs' (ID: 24702)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.9983237385749817
    2. 'patterns' → logprob: -1.498323678970337
    3. '       ' → logprob: -1.623323678970337
    4. 'pattern' → logprob: -2.248323678970337
    5. 'visited' → logprob: -3.623323678970337
    6. 'count' → logprob: -3.998323678970337
    7. 'fl' → logprob: -4.623323917388916
    8. 'counts' → logprob: -4.623323917388916
    9. 'import' → logprob: -4.873323917388916
    10. ' patterns' → logprob: -5.373323917388916

Token 796: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6419965028762817
    2. '       ' → logprob: -0.8919965028762817
    3. 'patterns' → logprob: -3.516996383666992
    4. ':' → logprob: -4.766996383666992
    5. 'pattern' → logprob: -5.141996383666992
    6. 'seen' → logprob: -5.891996383666992
    7. ',
' → logprob: -5.891996383666992
    8. ' patterns' → logprob: -6.016996383666992
    9. 'for' → logprob: -6.766996383666992
    10. ' of' → logprob: -7.016996383666992

Token 797: ' we' (ID: 581)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.9082009792327881
    2. 'visited' → logprob: -1.408200979232788
    3. 'count' → logprob: -2.158200979232788
    4. 'patterns' → logprob: -2.408200979232788
    5. '       ' → logprob: -3.408200979232788
    6. 'pattern' → logprob: -4.033201217651367
    7. 'checked' → logprob: -4.033201217651367
    8. ' counted' → logprob: -4.283201217651367
    9. ' seen' → logprob: -4.533201217651367
    10. 'processed' → logprob: -4.658201217651367

Token 798: ' use' (ID: 1199)
  Prédit: 'consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consider' → logprob: -1.530264973640442
    2. 'use' → logprob: -1.655264973640442
    3. 'continue' → logprob: -1.905264973640442
    4. 'count' → logprob: -2.1552648544311523
    5. 'process' → logprob: -2.6552648544311523
    6. 'visited' → logprob: -2.9052648544311523
    7. ' use' → logprob: -3.2802648544311523
    8. 'will' → logprob: -3.7802648544311523
    9. 'seen' → logprob: -4.030264854431152
    10. ' will' → logprob: -4.155264854431152

Token 799: ' a' (ID: 261)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.40353256464004517
    2. 'a' → logprob: -1.9035325050354004
    3. 'set' → logprob: -2.7785325050354004
    4. 'seen' → logprob: -3.2785325050354004
    5. 'visited' → logprob: -3.5285325050354004
    6. 'default' → logprob: -4.2785325050354
    7. '{}
' → logprob: -4.4035325050354
    8. '{' → logprob: -5.1535325050354
    9. 'pattern' → logprob: -5.1535325050354
    10. 'patterns' → logprob: -5.4035325050354

Token 800: ' dictionary' (ID: 22131)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5902191400527954
    2. 'dictionary' → logprob: -2.215219020843506
    3. 'default' → logprob: -2.465219020843506
    4. 'set' → logprob: -2.465219020843506
    5. 'visited' → logprob: -2.590219020843506
    6. 'dict' → logprob: -3.215219020843506
    7. 'seen' → logprob: -3.965219020843506
    8. 'frequency' → logprob: -5.090219020843506
    9. 'counter' → logprob: -5.215219020843506
    10. 'pattern' → logprob: -5.590219020843506

Token 801: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3643920421600342
    2. 'from' → logprob: -2.239392042160034
    3. 'pattern' → logprob: -3.114392042160034
    4. 'import' → logprob: -3.364392042160034
    5. 'counts' → logprob: -3.489392042160034
    6. 'count' → logprob: -4.239392280578613
    7. ' from' → logprob: -4.364392280578613
    8. ':' → logprob: -4.739392280578613
    9. 'patterns' → logprob: -4.739392280578613
    10. ' pattern' → logprob: -4.739392280578613

Token 802: ' process' (ID: 2273)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.21218903362751007
    2. 'processed' → logprob: -2.337188959121704
    3. 'count' → logprob: -3.712188959121704
    4. 'used' → logprob: -4.337189197540283
    5. ' visited' → logprob: -4.337189197540283
    6. 'seen' → logprob: -4.587189197540283
    7. 'from' → logprob: -4.587189197540283
    8. ' processed' → logprob: -4.712189197540283
    9. 'checked' → logprob: -5.212189197540283
    10. ' counted' → logprob: -5.587189197540283

Token 803: ' pairs' (ID: 24702)
  Prédit: ' patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' patterns' → logprob: -0.7383798360824585
    2. 'patterns' → logprob: -0.9883798360824585
    3. 'pattern' → logprob: -2.238379955291748
    4. ' pattern' → logprob: -4.488379955291748
    5. 'counts' → logprob: -4.613379955291748
    6. 'visited' → logprob: -5.488379955291748
    7. ' counts' → logprob: -6.113379955291748
    8. 'from' → logprob: -6.238379955291748
    9. ' frequencies' → logprob: -6.363379955291748
    10. 'count' → logprob: -6.363379955291748

Token 804: ' carefully' (ID: 18455)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41071468591690063
    2. 'from' → logprob: -2.785714626312256
    3. ' pattern' → logprob: -3.160714626312256
    4. ' from' → logprob: -3.535714626312256
    5. 'pattern' → logprob: -3.660714626312256
    6. ' =' → logprob: -3.660714626312256
    7. 'count' → logprob: -3.910714626312256
    8. 'import' → logprob: -4.035714626312256
    9. '=' → logprob: -4.285714626312256
    10. 'counts' → logprob: -4.285714626312256

Token 805: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29165366291999817
    2. '
' → logprob: -1.4166536331176758
    3. ',' → logprob: -5.541653633117676
    4. '        
' → logprob: -5.791653633117676
    5. 'from' → logprob: -7.541653633117676
    6. 'counts' → logprob: -7.666653633117676
    7. ',
' → logprob: -7.916653633117676
    8. ':' → logprob: -8.541653633117676
    9. 'count' → logprob: -8.541653633117676
    10. 'patterns' → logprob: -8.666653633117676

Token 806: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030087267514318228
    2. 'from' → logprob: -7.003008842468262
    3. 'counts' → logprob: -7.003008842468262
    4. 'count' → logprob: -7.753008842468262
    5. '```' → logprob: -7.878008842468262
    6. 'freq' → logprob: -9.753008842468262
    7. 'pattern' → logprob: -10.003008842468262
    8. ' from' → logprob: -10.128008842468262
    9. '
' → logprob: -10.128008842468262
    10. 'counter' → logprob: -10.378008842468262

Token 807: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' (adapté à ' from') → logprob: -0.9084413647651672
    2. 'pattern' → logprob: -1.9084413051605225
    3. '       ' → logprob: -2.1584413051605225
    4. 'count' → logprob: -2.4084413051605225
    5. 'counts' → logprob: -2.4084413051605225
    6. 'freq' → logprob: -2.5334413051605225
    7. 'column' → logprob: -3.5334413051605225
    8. ' from' → logprob: -4.908441543579102
    9. 'col' → logprob: -5.033441543579102
    10. 'patterns' → logprob: -5.033441543579102

Token 808: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -7.896309739408025e-07
    2. ' collections' → logprob: -14.250000953674316
    3. 'collection' → logprob: -16.625
    4. 'typing' → logprob: -17.625
    5. 'collect' → logprob: -18.625
    6. 'col' → logprob: -20.375
    7. 'collector' → logprob: -23.375
    8. 'copy' → logprob: -23.75
    9. '.collections' → logprob: -23.75
    10. '
' → logprob: -24.0

Token 809: ' import' (ID: 1588)
  Prédit: '.Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.Counter' → logprob: -0.07331839948892593
    2. 'import' → logprob: -2.8233184814453125
    3. 'Counter' → logprob: -5.3233184814453125
    4. 'default' → logprob: -6.8233184814453125
    5. '{' → logprob: -6.8233184814453125
    6. '{
' → logprob: -7.0733184814453125
    7. 'from' → logprob: -7.5733184814453125
    8. '_counter' → logprob: -7.9483184814453125
    9. ' defaultdict' → logprob: -7.9483184814453125
    10. '.default' → logprob: -7.9483184814453125

Token 810: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.3914954662322998
    2. 'default' → logprob: -1.1414954662322998
    3. ' Counter' → logprob: -5.641495704650879
    4. ' defaultdict' → logprob: -7.141495704650879
    5. 'collections' → logprob: -8.641495704650879
    6. 'counter' → logprob: -9.391495704650879
    7. '.Counter' → logprob: -11.516495704650879
    8. '_counter' → logprob: -12.516495704650879
    9. 'import' → logprob: -14.641495704650879
    10. 'deque' → logprob: -15.141495704650879

Token 811: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1111334040760994
    2. '
' → logprob: -2.361133337020874
    3. '        
' → logprob: -5.611133575439453
    4. 'counter' → logprob: -6.111133575439453
    5. 'patterns' → logprob: -6.611133575439453
    6. ',' → logprob: -6.611133575439453
    7. '_counter' → logprob: -7.861133575439453
    8. 'Counter' → logprob: -8.361133575439453
    9. 'pattern' → logprob: -8.486133575439453
    10. '
' → logprob: -8.611133575439453

Token 812: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04755405709147453
    2. 'patterns' → logprob: -3.7975540161132812
    3. 'row' → logprob: -4.172554016113281
    4. 'for' → logprob: -5.297554016113281
    5. 'pattern' → logprob: -6.922554016113281
    6. ' patterns' → logprob: -7.547554016113281
    7. 'column' → logprob: -8.047554016113281
    8. 'rows' → logprob: -8.172554016113281
    9. 'pat' → logprob: -8.297554016113281
    10. '
' → logprob: -8.422554016113281

Token 813: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10425577312707901
    2. 'max' → logprob: -2.8542556762695312
    3. '       ' → logprob: -3.9792556762695312
    4. 'row' → logprob: -4.354255676269531
    5. 'result' → logprob: -5.229255676269531
    6. ' for' → logprob: -7.104255676269531
    7. 'shipment' → logprob: -7.354255676269531
    8. 'pattern' → logprob: -7.479255676269531
    9. 'results' → logprob: -7.854255676269531
    10. 'all' → logprob: -7.979255676269531

Token 814: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.06996844708919525
    2. ' row' → logprob: -2.6949684619903564
    3. '   ' → logprob: -11.069968223571777
    4. ' ' → logprob: -11.944968223571777
    5. 'r' → logprob: -12.569968223571777
    6. '	row' → logprob: -12.819968223571777
    7. 'flip' → logprob: -14.194968223571777
    8. '(row' → logprob: -14.569968223571777
    9. 'rows' → logprob: -14.819968223571777
    10. '`' → logprob: -14.944968223571777

Token 815: '_flip' (ID: 150878)
  Prédit: '_flip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flip' → logprob: -0.001082471339032054
    2. '_mask' → logprob: -7.001082420349121
    3. ' in' → logprob: -9.376082420349121
    4. '_' → logprob: -10.626082420349121
    5. 'flip' → logprob: -10.751082420349121
    6. ' _' → logprob: -11.126082420349121
    7. '_fl' → logprob: -12.126082420349121
    8. '   ' → logprob: -12.251082420349121
    9. '
' → logprob: -13.001082420349121
    10. '_flush' → logprob: -13.376082420349121

Token 816: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.0005716211744584143
    2. 'mask' → logprob: -7.8755717277526855
    3. '_' → logprob: -9.000571250915527
    4. ' _' → logprob: -10.125571250915527
    5. '_m' → logprob: -11.625571250915527
    6. '_masks' → logprob: -11.875571250915527
    7. '_MASK' → logprob: -12.875571250915527
    8. ' in' → logprob: -13.125571250915527
    9. '   ' → logprob: -13.750571250915527
    10. 'm' → logprob: -13.750571250915527

Token 817: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019291093340143561
    2. 'in' → logprob: -6.25192928314209
    3. ' ' → logprob: -16.001928329467773
    4. ' i' → logprob: -16.126928329467773
    5. '	in' → logprob: -16.501928329467773
    6. 'import' → logprob: -17.251928329467773
    7. 'In' → logprob: -17.876928329467773
    8. '_in' → logprob: -17.876928329467773
    9. ',' → logprob: -18.001928329467773
    10. '   ' → logprob: -18.376928329467773

Token 818: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022443771362305
    2. ' range' → logprob: -1.910224437713623
    3. '0' → logprob: -15.660224914550781
    4. '   ' → logprob: -16.66022491455078
    5. ' ' → logprob: -17.16022491455078
    6. '	range' → logprob: -17.41022491455078
    7. '(range' → logprob: -18.03522491455078
    8. '  ' → logprob: -20.53522491455078
    9. '
' → logprob: -21.03522491455078
    10. 'r' → logprob: -21.28522491455078

Token 819: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012248923303559422
    2. ' (' → logprob: -9.2501220703125
    3. '((' → logprob: -11.1251220703125
    4. '(
' → logprob: -12.0001220703125
    5. '(self' → logprob: -12.6251220703125
    6. '1' → logprob: -14.1251220703125
    7. '   ' → logprob: -14.6251220703125
    8. ',' → logprob: -15.2501220703125
    9. ' ' → logprob: -15.6251220703125
    10. ')' → logprob: -15.6251220703125

Token 820: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018895013257861137
    2. '(' → logprob: -4.143895149230957
    3. 'self' → logprob: -5.893895149230957
    4. '(self' → logprob: -9.518895149230957
    5. '0' → logprob: -11.518895149230957
    6. '   ' → logprob: -11.893895149230957
    7. '2' → logprob: -12.518895149230957
    8. ' ' → logprob: -13.143895149230957
    9. '       ' → logprob: -13.643895149230957
    10. '           ' → logprob: -14.143895149230957

Token 821: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.07889033854007721
    2. '<<' → logprob: -2.578890323638916
    3. '<<(' → logprob: -14.953890800476074
    4. ',' → logprob: -15.578890800476074
    5. ' ' → logprob: -17.328889846801758
    6. '1' → logprob: -17.953889846801758
    7. ' <<
' → logprob: -17.953889846801758
    8. '```' → logprob: -18.328889846801758
    9. '<<<' → logprob: -18.578889846801758
    10. '<' → logprob: -18.828889846801758

Token 822: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5213274309644476e-05
    2. ' self' → logprob: -11.125015258789062
    3. '(self' → logprob: -15.125015258789062
    4. '       ' → logprob: -16.500015258789062
    5. '0' → logprob: -17.250015258789062
    6. '```' → logprob: -17.375015258789062
    7. '   ' → logprob: -17.625015258789062
    8. '[self' → logprob: -18.625015258789062
    9. '`' → logprob: -19.000015258789062
    10. '{' → logprob: -19.375015258789062

Token 823: '.R' (ID: 3395)
  Prédit: '.R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.R' → logprob: -0.0891641154885292
    2. 'R' → logprob: -2.4641640186309814
    3. 'self' → logprob: -8.839163780212402
    4. '_R' → logprob: -10.589163780212402
    5. '   ' → logprob: -11.339163780212402
    6. '
' → logprob: -12.464163780212402
    7. '	R' → logprob: -12.589163780212402
    8. '.' → logprob: -12.714163780212402
    9. '.r' → logprob: -12.964163780212402
    10. '       ' → logprob: -13.089163780212402

Token 824: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.28237661719322205
    2. '):' → logprob: -1.4073766469955444
    3. '       ' → logprob: -7.032376766204834
    4. '):
' → logprob: -8.157376289367676
    5. ':' → logprob: -10.782376289367676
    6. '           ' → logprob: -11.157376289367676
    7. ')' → logprob: -11.532376289367676
    8. '   ' → logprob: -12.782376289367676
    9. '):

' → logprob: -13.032376289367676
    10. ''):
' → logprob: -13.657376289367676

Token 825: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00045783669338561594
    2. '       ' → logprob: -7.750457763671875
    3. '```' → logprob: -11.250457763671875
    4. '
' → logprob: -13.125457763671875
    5. '	       ' → logprob: -13.125457763671875
    6. '            
' → logprob: -13.125457763671875
    7. ',' → logprob: -13.375457763671875
    8. '   ' → logprob: -13.875457763671875
    9. ':' → logprob: -14.125457763671875
    10. '#' → logprob: -14.125457763671875

Token 826: ' column' (ID: 6000)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3451211154460907
    2. 'patterns' → logprob: -1.345121145248413
    3. 'column' (adapté à ' column') → logprob: -3.595121145248413
    4. 'pattern' → logprob: -6.345120906829834
    5. 'col' → logprob: -6.595120906829834
    6. ' patterns' → logprob: -7.595120906829834
    7. ' column' → logprob: -9.220121383666992
    8. 'columns' → logprob: -9.595121383666992
    9. 'pat' → logprob: -9.720121383666992
    10. '               ' → logprob: -10.720121383666992

Token 827: '_patterns' (ID: 161400)
  Prédit: '_patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -0.005957360379397869
    2. '_pattern' → logprob: -5.880957126617432
    3. 's' → logprob: -6.505957126617432
    4. 'patterns' → logprob: -7.005957126617432
    5. '_counts' → logprob: -7.255957126617432
    6. '_pat' → logprob: -11.13095760345459
    7. ' patterns' → logprob: -11.63095760345459
    8. 'pattern' → logprob: -12.50595760345459
    9. '_counter' → logprob: -13.13095760345459
    10. '_masks' → logprob: -13.13095760345459

Token 828: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11307848989963531
    2. '=' → logprob: -2.2380785942077637
    3. '_counter' → logprob: -8.738078117370605
    4. '_counts' → logprob: -9.988078117370605
    5. '_count' → logprob: -10.863078117370605
    6. '           ' → logprob: -11.113078117370605
    7. ':' → logprob: -12.113078117370605
    8. '   ' → logprob: -13.113078117370605
    9. 'counter' → logprob: -13.863078117370605
    10. 'count' → logprob: -13.988078117370605

Token 829: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004099654499441385
    2. ' self' → logprob: -5.5040998458862305
    3. '           ' → logprob: -10.87909984588623
    4. '       ' → logprob: -14.12909984588623
    5. 'Counter' → logprob: -14.37909984588623
    6. '   ' → logprob: -14.75409984588623
    7. '(self' → logprob: -15.12909984588623
    8. 'list' → logprob: -16.004098892211914
    9. '[self' → logprob: -16.254098892211914
    10. '               ' → logprob: -16.754098892211914

Token 830: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0024819616228342056
    2. '_column' → logprob: -6.002481937408447
    3. '.column' → logprob: -12.127482414245605
    4. ' _' → logprob: -16.00248146057129
    5. '_max' → logprob: -16.12748146057129
    6. '_initial' → logprob: -16.37748146057129
    7. '.' → logprob: -16.37748146057129
    8. '   ' → logprob: -16.62748146057129
    9. ' .' → logprob: -16.75248146057129
    10. '.max' → logprob: -17.00248146057129

Token 831: 'column' (ID: 9380)
  Prédit: 'column'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'column' → logprob: -9.088346359931165e-07
    2. '(column' → logprob: -14.875000953674316
    3. 'pattern' → logprob: -16.25
    4. '.column' → logprob: -16.375
    5. '	column' → logprob: -16.625
    6. ' column' → logprob: -16.75
    7. '[column' → logprob: -16.875
    8. '_column' → logprob: -17.875
    9. '
' → logprob: -18.375
    10. ' ' → logprob: -18.625

Token 832: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.4297448396682739
    2. '_for' → logprob: -1.429744839668274
    3. 'pattern' → logprob: -2.3047447204589844
    4. 'for' → logprob: -4.679744720458984
    5. '_patterns' → logprob: -7.679744720458984
    6. 'patterns' → logprob: -7.929744720458984
    7. '           ' → logprob: -10.804744720458984
    8. '   ' → logprob: -11.304744720458984
    9. '
' → logprob: -11.804744720458984
    10. '       ' → logprob: -12.304744720458984

Token 833: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -8.566264295950532e-05
    2. 'for' → logprob: -9.375085830688477
    3. 's' → logprob: -15.750085830688477
    4. 'For' → logprob: -15.875085830688477
    5. '```' → logprob: -16.000085830688477
    6. '   ' → logprob: -16.250085830688477
    7. '       ' → logprob: -16.375085830688477
    8. '           ' → logprob: -17.375085830688477
    9. 'mask' → logprob: -17.625085830688477
    10. 'pattern' → logprob: -17.875085830688477

Token 834: '_row' (ID: 19157)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6931886672973633
    2. '_row' → logprob: -0.6931886672973633
    3. 'Row' → logprob: -11.568188667297363
    4. 'rows' → logprob: -11.818188667297363
    5. '_rows' → logprob: -11.943188667297363
    6. '(row' → logprob: -12.068188667297363
    7. ' row' → logprob: -12.443188667297363
    8. '```' → logprob: -13.068188667297363
    9. 'rown' → logprob: -13.943188667297363
    10. '
' → logprob: -13.943188667297363

Token 835: '_fl' (ID: 18192)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.06746802479028702
    2. '_flip' → logprob: -3.0674679279327393
    3. 'mask' → logprob: -4.692468166351318
    4. 'fl' → logprob: -4.942468166351318
    5. 'flip' → logprob: -6.567468166351318
    6. '_fl' → logprob: -7.442468166351318
    7. '_masks' → logprob: -8.31746768951416
    8. 'row' → logprob: -10.56746768951416
    9. '_MASK' → logprob: -10.94246768951416
    10. 'm' → logprob: -10.94246768951416

Token 836: 'ips' (ID: 3200)
  Prédit: 'ips'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ips' → logprob: -0.029921386390924454
    2. 'ip' → logprob: -3.529921293258667
    3. '_ips' → logprob: -10.279921531677246
    4. '#' → logprob: -11.029921531677246
    5. 'ps' → logprob: -11.029921531677246
    6. 'i' → logprob: -11.592421531677246
    7. '_ip' → logprob: -11.842421531677246
    8. '_mask' → logprob: -11.967421531677246
    9. '   ' → logprob: -11.967421531677246
    10. ' ips' → logprob: -12.092421531677246

Token 837: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -6.392202976712724e-06
    2. '[row' → logprob: -13.125006675720215
    3. '(' → logprob: -13.375006675720215
    4. '           ' → logprob: -13.500006675720215
    5. '=row' → logprob: -14.750006675720215
    6. 'row' → logprob: -15.500006675720215
    7. '(column' → logprob: -15.750006675720215
    8. '   ' → logprob: -15.750006675720215
    9. '       ' → logprob: -16.3750057220459
    10. '
' → logprob: -16.3750057220459

Token 838: '_flip' (ID: 150878)
  Prédit: '_flip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flip' → logprob: -0.005933297798037529
    2. '_mask' → logprob: -5.1309332847595215
    3. 'flip' → logprob: -13.00593376159668
    4. 'mask' → logprob: -14.13093376159668
    5. '_masks' → logprob: -14.50593376159668
    6. '```' → logprob: -14.88093376159668
    7. 'Flip' → logprob: -15.88093376159668
    8. '           ' → logprob: -16.00593376159668
    9. '_swap' → logprob: -16.38093376159668
    10. '_toggle' → logprob: -16.63093376159668

Token 839: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.0008098635007627308
    2. 'mask' → logprob: -7.125809669494629
    3. '_MASK' → logprob: -13.000809669494629
    4. 'r' → logprob: -14.500809669494629
    5. '_masks' → logprob: -14.875809669494629
    6. 'row' → logprob: -15.000809669494629
    7. 'Mask' → logprob: -15.375809669494629
    8. 'm' → logprob: -15.375809669494629
    9. '```' → logprob: -15.375809669494629
    10. 'emask' → logprob: -15.500809669494629

Token 840: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3590582311153412
    2. ')
' → logprob: -1.3590582609176636
    3. '           ' → logprob: -3.109058141708374
    4. ')
' → logprob: -9.609058380126953
    5. '       ' → logprob: -10.109058380126953
    6. '          ' → logprob: -12.609058380126953
    7. ' )
' → logprob: -13.109058380126953
    8. ' )' → logprob: -13.359058380126953
    9. '            
' → logprob: -13.984058380126953
    10. ')`
' → logprob: -14.109058380126953

Token 841: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.774276774493046e-05
    2. 'count' → logprob: -11.000038146972656
    3. 'counter' → logprob: -11.250038146972656
    4. 'counts' → logprob: -12.375038146972656
    5. '       ' → logprob: -13.875038146972656
    6. ' counter' → logprob: -14.125038146972656
    7. '```' → logprob: -14.750038146972656
    8. '_counter' → logprob: -15.000038146972656
    9. '            
' → logprob: -15.125038146972656
    10. 'Counter' → logprob: -15.250038146972656

Token 842: ' freq' (ID: 42078)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.5301830768585205
    2. 'count' → logprob: -2.0301830768585205
    3. 'counts' → logprob: -2.0301830768585205
    4. '           ' → logprob: -2.7801830768585205
    5. 'counter' → logprob: -3.0301830768585205
    6. 'freq' (adapté à ' freq') → logprob: -3.2801830768585205
    7. 'column' → logprob: -8.405182838439941
    8. 'cnt' → logprob: -8.405182838439941
    9. 'patterns' → logprob: -8.530182838439941
    10. 'pat' → logprob: -9.405182838439941

Token 843: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931544542312622
    2. ' =' → logprob: -0.6931544542312622
    3. '_counter' → logprob: -13.068154335021973
    4. 's' → logprob: -13.568154335021973
    5. ':' → logprob: -13.818154335021973
    6. '   ' → logprob: -14.068154335021973
    7. ' ' → logprob: -14.818154335021973
    8. '       ' → logprob: -15.068154335021973
    9. '<|end|>' → logprob: -15.568154335021973
    10. '_counts' → logprob: -15.943154335021973

Token 844: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.00861468818038702
    2. ' Counter' → logprob: -4.758614540100098
    3. '           ' → logprob: -16.383615493774414
    4. '.Counter' → logprob: -17.133615493774414
    5. 'Counters' → logprob: -18.133615493774414
    6. '_counter' → logprob: -18.258615493774414
    7. 'counter' → logprob: -18.758615493774414
    8. ' counter' → logprob: -19.133615493774414
    9. '   ' → logprob: -19.383615493774414
    10. '       ' → logprob: -19.758615493774414

Token 845: '(column' (ID: 41875)
  Prédit: '(column'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(column' → logprob: -0.0002326224057469517
    2. 'column' → logprob: -8.500232696533203
    3. '[column' → logprob: -10.500232696533203
    4. ' column' → logprob: -14.625232696533203
    5. '(' → logprob: -14.875232696533203
    6. '(
' → logprob: -15.250232696533203
    7. '(pattern' → logprob: -16.000232696533203
    8. ',column' → logprob: -16.125232696533203
    9. ' (' → logprob: -16.875232696533203
    10. '(counter' → logprob: -17.000232696533203

Token 846: '_patterns' (ID: 161400)
  Prédit: '_patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -1.5094070477061905e-05
    2. 'patterns' → logprob: -12.250015258789062
    3. 's' → logprob: -12.375015258789062
    4. ')' → logprob: -13.250015258789062
    5. '
' → logprob: -13.875015258789062
    6. '_pattern' → logprob: -14.000015258789062
    7. '_p' → logprob: -14.500015258789062
    8. '(pattern' → logprob: -15.125015258789062
    9. '```' → logprob: -15.625015258789062
    10. '   ' → logprob: -15.625015258789062

Token 847: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16035756468772888
    2. ')
' → logprob: -1.9103575944900513
    3. ')
' → logprob: -9.410357475280762
    4. '           ' → logprob: -10.035357475280762
    5. ')

' → logprob: -12.660357475280762
    6. ' )
' → logprob: -13.535357475280762
    7. ' )' → logprob: -13.535357475280762
    8. '       ' → logprob: -14.285357475280762
    9. ')`
' → logprob: -14.410357475280762
    10. ')**' → logprob: -15.410357475280762

Token 848: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.816093228830141e-06
    2. 'for' → logprob: -13.50000286102295
    3. '            
' → logprob: -14.12500286102295
    4. '
' → logprob: -15.62500286102295
    5. '       ' → logprob: -15.62500286102295
    6. '               ' → logprob: -16.250001907348633
    7. '```' → logprob: -16.250001907348633
    8. ' for' → logprob: -17.125001907348633
    9. '		' → logprob: -17.375001907348633
    10. ',' → logprob: -17.500001907348633

Token 849: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.35710465908050537
    2. 'used' → logprob: -1.6071046590805054
    3. '           ' → logprob: -2.732104778289795
    4. 'processed' → logprob: -3.982104778289795
    5. 'total' → logprob: -4.982104778289795
    6. 'seen' → logprob: -5.982104778289795
    7. 'checked' → logprob: -6.607104778289795
    8. 'result' → logprob: -6.857104778289795
    9. 'handled' → logprob: -7.107104778289795
    10. 'max' → logprob: -7.482104778289795

Token 850: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741135835647583
    2. ' =' → logprob: -0.9741135835647583
    3. '=set' → logprob: -10.349113464355469
    4. ' ' → logprob: -13.974113464355469
    5. ':' → logprob: -13.974113464355469
    6. '={}' → logprob: -14.099113464355469
    7. '={}
' → logprob: -14.724113464355469
    8. '   ' → logprob: -15.099113464355469
    9. '={' → logprob: -15.349113464355469
    10. '<|end|>' → logprob: -15.724113464355469

Token 851: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -9.13388703338569e-06
    2. ' set' → logprob: -12.000009536743164
    3. '{}' → logprob: -12.750009536743164
    4. '{' → logprob: -17.125009536743164
    5. '=set' → logprob: -17.875009536743164
    6. '	set' → logprob: -20.000009536743164
    7. ' ' → logprob: -20.875009536743164
    8. '   ' → logprob: -20.875009536743164
    9. '(set' → logprob: -21.750009536743164
    10. ')set' → logprob: -22.250009536743164

Token 852: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7449355125427246
    2. '           ' → logprob: -0.8699355125427246
    3. '()
' → logprob: -2.2449355125427246
    4. ',' → logprob: -9.619935989379883
    5. '       ' → logprob: -10.244935989379883
    6. '
' → logprob: -10.369935989379883
    7. ')' → logprob: -10.744935989379883
    8. '()
' → logprob: -10.869935989379883
    9. 'for' → logprob: -10.869935989379883
    10. '            
' → logprob: -10.994935989379883

Token 853: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1398757123970427e-05
    2. 'for' → logprob: -12.000011444091797
    3. ' for' → logprob: -12.500011444091797
    4. '       ' → logprob: -14.250011444091797
    5. '
' → logprob: -14.750011444091797
    6. '```' → logprob: -15.750011444091797
    7. '            
' → logprob: -16.000011444091797
    8. '               ' → logprob: -16.250011444091797
    9. '          ' → logprob: -17.375011444091797
    10. '   ' → logprob: -17.625011444091797

Token 854: ' shipment' (ID: 52286)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3149585425853729
    2. '           ' → logprob: -1.3149585723876953
    3. ' for' → logprob: -6.439958572387695
    4. 'total' → logprob: -9.939958572387695
    5. 'max' → logprob: -11.689958572387695
    6. '       ' → logprob: -11.939958572387695
    7. 'result' → logprob: -11.939958572387695
    8. '   ' → logprob: -12.064958572387695
    9. '               ' → logprob: -12.189958572387695
    10. '```' → logprob: -12.314958572387695

Token 855: '_count' (ID: 7536)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3513011336326599
    2. ' =' → logprob: -1.2263011932373047
    3. '+=' → logprob: -6.976301193237305
    4. ' +=' → logprob: -7.101301193237305
    5. '_count' → logprob: -7.476301193237305
    6. '_counts' → logprob: -8.976301193237305
    7. '_tokens' → logprob: -9.226301193237305
    8. '           ' → logprob: -9.226301193237305
    9. '_max' → logprob: -10.351301193237305
    10. '_points' → logprob: -10.726301193237305

Token 856: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4884437024593353
    2. '=' → logprob: -0.9884437322616577
    3. ' +=' → logprob: -4.363443851470947
    4. '+=' → logprob: -6.488443851470947
    5. '           ' → logprob: -12.113443374633789
    6. '+' → logprob: -14.113443374633789
    7. ' ' → logprob: -14.488443374633789
    8. '            ' → logprob: -14.863443374633789
    9. '       ' → logprob: -14.863443374633789
    10. '        ' → logprob: -15.488443374633789

Token 857: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '           ' → logprob: -15.875035285949707
    4. '   ' → logprob: -20.125036239624023
    5. '=' → logprob: -20.875036239624023
    6. '               ' → logprob: -21.125036239624023
    7. '       ' → logprob: -21.875036239624023
    8. '۰' → logprob: -21.875036239624023
    9. '                   ' → logprob: -22.625036239624023
    10. ' ' → logprob: -22.750036239624023

Token 858: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '           ' → logprob: -18.75
    4. '   ' → logprob: -18.75
    5. '=' → logprob: -20.75
    6. '       ' → logprob: -21.125
    7. '۰' → logprob: -21.125
    8. '```' → logprob: -21.125
    9. '000' → logprob: -22.5
    10. '         ' → logprob: -22.625

Token 859: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.4121114822482923e-06
    2. '
' → logprob: -13.625003814697266
    3. 'for' → logprob: -13.875003814697266
    4. ' for' → logprob: -14.875003814697266
    5. '            
' → logprob: -15.375003814697266
    6. '       ' → logprob: -15.500003814697266
    7. ',' → logprob: -16.750003814697266
    8. '               ' → logprob: -16.875003814697266
    9. '<|end|>' → logprob: -17.000003814697266
    10. '          ' → logprob: -17.250003814697266

Token 860: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004704595543444157
    2. '       ' → logprob: -5.504704475402832
    3. ' for' → logprob: -8.004704475402832
    4. 'for' → logprob: -9.254704475402832
    5. '```' → logprob: -9.504704475402832
    6. '   ' → logprob: -9.879704475402832
    7. '	       ' → logprob: -11.254704475402832
    8. '
' → logprob: -11.254704475402832
    9. '<|end|>' → logprob: -11.379704475402832
    10. '               ' → logprob: -11.629704475402832

Token 861: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.048686038702726364
    2. '           ' → logprob: -3.0486860275268555
    3. ' for' → logprob: -9.298686027526855
    4. '       ' → logprob: -12.173686027526855
    5. '```' → logprob: -13.923686027526855
    6. '   ' → logprob: -14.173686027526855
    7. '               ' → logprob: -14.798686027526855
    8. 'while' → logprob: -17.923686981201172
    9. '
' → logprob: -18.173686981201172
    10. '	for' → logprob: -18.298686981201172

Token 862: ' p' (ID: 275)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.006984130013734102
    2. 'p' → logprob: -5.506984233856201
    3. ' pattern' → logprob: -6.381984233856201
    4. 'pat' → logprob: -6.756984233856201
    5. 'col' → logprob: -10.256983757019043
    6. ' p' → logprob: -11.881983757019043
    7. ' pat' → logprob: -13.006983757019043
    8. 'key' → logprob: -13.881983757019043
    9. '   ' → logprob: -14.756983757019043
    10. 'column' → logprob: -15.131983757019043

Token 863: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024792237672954798
    2. 'in' → logprob: -6.002479076385498
    3. 'p' → logprob: -13.502479553222656
    4. '           ' → logprob: -14.127479553222656
    5. ' ' → logprob: -14.377479553222656
    6. ' p' → logprob: -15.002479553222656
    7. '_in' → logprob: -15.752479553222656
    8. '               ' → logprob: -15.752479553222656
    9. '	in' → logprob: -16.127479553222656
    10. ',' → logprob: -16.377479553222656

Token 864: ' cnt' (ID: 27340)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.009219405241310596
    2. 'cnt' → logprob: -4.759219169616699
    3. ' count' → logprob: -7.509219169616699
    4. ' cnt' → logprob: -10.3842191696167
    5. 'freq' → logprob: -10.6342191696167
    6. 'c' → logprob: -14.1342191696167
    7. 'p' → logprob: -14.6342191696167
    8. 'f' → logprob: -14.8842191696167
    9. ' freq' → logprob: -16.009220123291016
    10. 'v' → logprob: -17.759220123291016

Token 865: '_p' (ID: 1359)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018948709592223167
    2. 'in' → logprob: -4.018948554992676
    3. ' ' → logprob: -8.143948554992676
    4. ',' → logprob: -8.518948554992676
    5. '            ' → logprob: -9.518948554992676
    6. ':' → logprob: -10.143948554992676
    7. '           ' → logprob: -10.393948554992676
    8. '=' → logprob: -10.518948554992676
    9. '<|end|>' → logprob: -10.518948554992676
    10. ' =' → logprob: -10.643948554992676

Token 866: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027308840304613113
    2. 'in' → logprob: -3.652308940887451
    3. '=' → logprob: -7.152308940887451
    4. ' =' → logprob: -8.902308464050293
    5. ',' → logprob: -9.652308464050293
    6. ' ' → logprob: -11.402308464050293
    7. '<|end|>' → logprob: -13.152308464050293
    8. ')' → logprob: -13.402308464050293
    9. '	in' → logprob: -13.652308464050293
    10. '            ' → logprob: -13.902308464050293

Token 867: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.00015991552209015936
    2. ' freq' → logprob: -8.750160217285156
    3. '(freq' → logprob: -13.500160217285156
    4. '_freq' → logprob: -18.125160217285156
    5. '
' → logprob: -18.375160217285156
    6. 'frequency' → logprob: -19.750160217285156
    7. '.freq' → logprob: -19.750160217285156
    8. '   ' → logprob: -20.375160217285156
    9. 'fq' → logprob: -20.500160217285156
    10. 'Freq' → logprob: -20.625160217285156

Token 868: '.items' (ID: 19607)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.035726964473724365
    2. ' in' → logprob: -3.785727024078369
    3. ',' → logprob: -5.910727024078369
    4. ':
' → logprob: -6.035727024078369
    5. ' :' → logprob: -6.035727024078369
    6. '<|end|>' → logprob: -6.035727024078369
    7. 'in' → logprob: -7.160727024078369
    8. '            ' → logprob: -7.910727024078369
    9. ' ' → logprob: -8.410726547241211
    10. '<|end|>' → logprob: -8.410726547241211

Token 869: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019833089783787727
    2. ',' → logprob: -4.769833087921143
    3. ':
' → logprob: -5.144833087921143
    4. '               ' → logprob: -5.519833087921143
    5. '<|end|>' → logprob: -7.519833087921143
    6. '):
' → logprob: -8.6448335647583
    7. '           ' → logprob: -8.8948335647583
    8. '):' → logprob: -9.8948335647583
    9. ' :' → logprob: -10.0198335647583
    10. '<|end|>' → logprob: -10.0198335647583

Token 870: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008344047237187624
    2. '           ' → logprob: -7.2508344650268555
    3. ' if' → logprob: -9.750834465026855
    4. '```' → logprob: -10.625834465026855
    5. '                   ' → logprob: -11.375834465026855
    6. '<|end|>' → logprob: -12.125834465026855
    7. '                ' → logprob: -12.250834465026855
    8. '       ' → logprob: -12.250834465026855
    9. '                       ' → logprob: -12.625834465026855
    10. '              ' → logprob: -12.750834465026855

Token 871: ' p' (ID: 275)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14235074818134308
    2. 'if' → logprob: -2.767350673675537
    3. ' if' → logprob: -2.767350673675537
    4. 'com' → logprob: -6.142350673675537
    5. 'inv' → logprob: -6.892350673675537
    6. 'opp' → logprob: -7.392350673675537
    7. 'op' → logprob: -7.642350673675537
    8. ' opp' → logprob: -7.892350673675537
    9. 'flip' → logprob: -7.892350673675537
    10. 'partner' → logprob: -8.142351150512695

Token 872: '_inv' (ID: 53427)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.3119646906852722
    2. '_inv' → logprob: -2.561964750289917
    3. '_comp' → logprob: -3.061964750289917
    4. '_flip' → logprob: -3.186964750289917
    5. 'xor' → logprob: -3.686964750289917
    6. '_com' → logprob: -3.686964750289917
    7. '_not' → logprob: -4.561964511871338
    8. '_' → logprob: -4.686964511871338
    9. '_in' → logprob: -4.811964511871338
    10. '^' → logprob: -5.061964511871338

Token 873: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519325911998749
    2. ' =' → logprob: -1.5019326210021973
    3. '=p' → logprob: -12.876932144165039
    4. 'p' → logprob: -14.251932144165039
    5. '   ' → logprob: -16.12693214416504
    6. ',' → logprob: -16.87693214416504
    7. ' ' → logprob: -17.12693214416504
    8. 's' → logprob: -18.75193214416504
    9. '＝' → logprob: -19.00193214416504
    10. ')' → logprob: -19.00193214416504

Token 874: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08805174380540848
    2. ' p' → logprob: -2.7130517959594727
    3. 'full' → logprob: -4.338051795959473
    4. ' full' → logprob: -5.338051795959473
    5. '(full' → logprob: -9.963051795959473
    6. '(p' → logprob: -10.713051795959473
    7. ' (' → logprob: -12.588051795959473
    8. '               ' → logprob: -12.588051795959473
    9. '                   ' → logprob: -12.963051795959473
    10. ' ' → logprob: -13.463051795959473

Token 875: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.575977087020874
    2. ' ^' → logprob: -0.825977087020874
    3. '^(' → logprob: -11.075977325439453
    4. 'p' → logprob: -12.075977325439453
    5. '               ' → logprob: -12.450977325439453
    6. '^{' → logprob: -12.825977325439453
    7. '^^' → logprob: -13.200977325439453
    8. ' p' → logprob: -13.450977325439453
    9. ' ^=' → logprob: -13.575977325439453
    10. '=' → logprob: -14.075977325439453

Token 876: ' full' (ID: 3149)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.0002613358374219388
    2. ' full' → logprob: -8.250261306762695
    3. '(full' → logprob: -17.250261306762695
    4. '	full' → logprob: -19.750261306762695
    5. 'Full' → logprob: -21.125261306762695
    6. '   ' → logprob: -21.625261306762695
    7. '_full' → logprob: -22.625261306762695
    8. ' ' → logprob: -22.750261306762695
    9. '
' → logprob: -23.500261306762695
    10. 'fullname' → logprob: -23.625261306762695

Token 877: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -1.1756367712223437e-05
    2. 'mask' → logprob: -11.500011444091797
    3. '_MASK' → logprob: -13.875011444091797
    4. '```' → logprob: -14.750011444091797
    5. '_masks' → logprob: -16.500011444091797
    6. 's' → logprob: -17.500011444091797
    7. 'p' → logprob: -17.625011444091797
    8. '`' → logprob: -18.125011444091797
    9. '_' → logprob: -18.250011444091797
    10. '
' → logprob: -18.250011444091797

Token 878: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0037712242919951677
    2. '<|end|>' → logprob: -6.1287713050842285
    3. '
' → logprob: -6.7537713050842285
    4. '           ' → logprob: -8.50377082824707
    5. '                
' → logprob: -9.25377082824707
    6. '<|end|>' → logprob: -10.37877082824707
    7. '                ' → logprob: -11.00377082824707
    8. ',' → logprob: -11.12877082824707
    9. '                   ' → logprob: -11.37877082824707
    10. '              ' → logprob: -11.37877082824707

Token 879: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002123853424564004
    2. '<|end|>' → logprob: -6.627123832702637
    3. '           ' → logprob: -7.877123832702637
    4. ' if' → logprob: -9.502123832702637
    5. '                
' → logprob: -9.752123832702637
    6. ',' → logprob: -9.752123832702637
    7. '                ' → logprob: -10.127123832702637
    8. '                   ' → logprob: -10.127123832702637
    9. '       ' → logprob: -10.127123832702637
    10. '              ' → logprob: -10.502123832702637

Token 880: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3463500738143921
    2. ' if' → logprob: -1.721350073814392
    3. 'if' (adapté à ' if') → logprob: -2.2213501930236816
    4. '           ' → logprob: -5.221350193023682
    5. '```' → logprob: -10.596349716186523
    6. '<|end|>' → logprob: -11.971349716186523
    7. '                   ' → logprob: -12.596349716186523
    8. '       ' → logprob: -13.346349716186523
    9. '[' → logprob: -13.596349716186523
    10. ',' → logprob: -13.721349716186523

Token 881: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0020214279647916555
    2. ' p' → logprob: -6.252021312713623
    3. '(p' → logprob: -9.377021789550781
    4. '           ' → logprob: -13.002021789550781
    5. '   ' → logprob: -13.377021789550781
    6. '               ' → logprob: -13.752021789550781
    7. ' (' → logprob: -13.877021789550781
    8. '                   ' → logprob: -14.002021789550781
    9. '{' → logprob: -14.877021789550781
    10. '       ' → logprob: -15.252021789550781

Token 882: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3536553978919983
    2. ' in' → logprob: -1.6036553382873535
    3. 'in' → logprob: -2.9786553382873535
    4. 'not' → logprob: -3.1036553382873535
    5. '_in' → logprob: -7.9786553382873535
    6. '_not' → logprob: -7.9786553382873535
    7. '==' → logprob: -9.978655815124512
    8. 'p' → logprob: -9.978655815124512
    9. ' ==' → logprob: -10.228655815124512
    10. ' p' → logprob: -10.478655815124512

Token 883: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -3.650518920039758e-06
    2. ' visited' → logprob: -12.750003814697266
    3. '           ' → logprob: -14.625003814697266
    4. '               ' → logprob: -16.125003814697266
    5. '                   ' → logprob: -16.250003814697266
    6. '   ' → logprob: -17.375003814697266
    7. 'seen' → logprob: -18.500003814697266
    8. '
' → logprob: -18.875003814697266
    9. 'visit' → logprob: -19.625003814697266
    10. '```' → logprob: -19.875003814697266

Token 884: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0286239385604858
    2. ':
' → logprob: -1.1536239385604858
    3. ' or' → logprob: -1.5286239385604858
    4. ':' → logprob: -2.4036240577697754
    5. '               ' → logprob: -4.278624057769775
    6. '                       ' → logprob: -5.903624057769775
    7. 'or' → logprob: -6.028624057769775
    8. ',' → logprob: -9.153623580932617
    9. ' and' → logprob: -9.278623580932617
    10. '<|end|>' → logprob: -9.528623580932617

Token 885: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01779997907578945
    2. '               ' → logprob: -4.5177998542785645
    3. '                       ' → logprob: -5.1427998542785645
    4. ' continue' → logprob: -7.8927998542785645
    5. 'continue' → logprob: -8.517800331115723
    6. '```' → logprob: -9.392800331115723
    7. '<|end|>' → logprob: -9.892800331115723
    8. '           ' → logprob: -10.142800331115723
    9. '                           ' → logprob: -10.392800331115723
    10. '                               ' → logprob: -10.517800331115723

Token 886: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.4675670862197876
    2. '                   ' → logprob: -1.2175670862197876
    3. ' continue' → logprob: -2.967566967010498
    4. '               ' → logprob: -3.717566967010498
    5. '                       ' → logprob: -6.342566967010498
    6. '```' → logprob: -11.217567443847656
    7. '   ' → logprob: -11.592567443847656
    8. '           ' → logprob: -12.217567443847656
    9. '_continue' → logprob: -12.467567443847656
    10. '       ' → logprob: -12.842567443847656

Token 887: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016773181268945336
    2. '
' → logprob: -7.501677513122559
    3. '           ' → logprob: -8.001677513122559
    4. '                   ' → logprob: -8.126677513122559
    5. '<|end|>' → logprob: -8.751677513122559
    6. ',' → logprob: -9.501677513122559
    7. '                
' → logprob: -9.501677513122559
    8. '```' → logprob: -9.876677513122559
    9. 'visited' → logprob: -10.001677513122559
    10. '  
' → logprob: -11.126677513122559

Token 888: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003166353271808475
    2. '           ' → logprob: -8.500316619873047
    3. '```' → logprob: -9.875316619873047
    4. '                   ' → logprob: -10.375316619873047
    5. 'visited' → logprob: -10.750316619873047
    6. '       ' → logprob: -12.500316619873047
    7. '<|end|>' → logprob: -13.375316619873047
    8. '   ' → logprob: -14.125316619873047
    9. '                
' → logprob: -14.250316619873047
    10. ' visited' → logprob: -14.625316619873047

Token 889: ' visited' (ID: 18416)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05810438469052315
    2. '           ' → logprob: -3.5581042766571045
    3. 'visited' (adapté à ' visited') → logprob: -3.8081042766571045
    4. ' visited' → logprob: -5.183104515075684
    5. '                   ' → logprob: -9.433104515075684
    6. '```' → logprob: -10.058104515075684
    7. '       ' → logprob: -11.433104515075684
    8. '   ' → logprob: -11.808104515075684
    9. '
' → logprob: -12.558104515075684
    10. 'Visited' → logprob: -13.058104515075684

Token 890: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.004112950060516596
    2. '.' → logprob: -5.504112720489502
    3. 'add' → logprob: -10.37911319732666
    4. ' .' → logprob: -13.62911319732666
    5. '.update' → logprob: -14.12911319732666
    6. '           ' → logprob: -15.00411319732666
    7. ',' → logprob: -15.62911319732666
    8. '.
' → logprob: -15.62911319732666
    9. '=' → logprob: -15.75411319732666
    10. '   ' → logprob: -16.004112243652344

Token 891: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.001175820711068809
    2. 'p' → logprob: -6.751175880432129
    3. '(' → logprob: -12.251175880432129
    4. ' p' → logprob: -15.001175880432129
    5. '	p' → logprob: -15.626175880432129
    6. '(
' → logprob: -16.251174926757812
    7. '   ' → logprob: -16.376174926757812
    8. '{' → logprob: -16.751174926757812
    9. ',p' → logprob: -17.251174926757812
    10. '((' → logprob: -17.376174926757812

Token 892: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028149466961622238
    2. ')' → logprob: -3.903149366378784
    3. ')
' → logprob: -5.153149604797363
    4. ',' → logprob: -7.403149604797363
    5. '           ' → logprob: -7.403149604797363
    6. '                   ' → logprob: -7.653149604797363
    7. '),' → logprob: -10.903149604797363
    8. '<|end|>' → logprob: -10.903149604797363
    9. ' and' → logprob: -11.903149604797363
    10. '
' → logprob: -11.903149604797363

Token 893: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06399141997098923
    2. '           ' → logprob: -2.8139913082122803
    3. '```' → logprob: -6.688991546630859
    4. '                   ' → logprob: -8.43899154663086
    5. ',' → logprob: -8.93899154663086
    6. '       ' → logprob: -9.06399154663086
    7. 'visited' → logprob: -9.06399154663086
    8. ' and' → logprob: -10.06399154663086
    9. '<|end|>' → logprob: -10.43899154663086
    10. ' visited' → logprob: -10.68899154663086

Token 894: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.07650826126337051
    2. 'if' → logprob: -2.8265082836151123
    3. '               ' → logprob: -4.576508045196533
    4. '           ' → logprob: -5.576508045196533
    5. ' visited' → logprob: -8.951508522033691
    6. ' if' → logprob: -9.451508522033691
    7. '```' → logprob: -9.451508522033691
    8. '                   ' → logprob: -9.826508522033691
    9. '   ' → logprob: -11.576508522033691
    10. 'visit' → logprob: -13.326508522033691

Token 895: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0007139815716072917
    2. '.' → logprob: -7.25071382522583
    3. 'add' → logprob: -12.500714302062988
    4. '.
' → logprob: -15.500714302062988
    5. ' .' → logprob: -17.250713348388672
    6. '.Add' → logprob: -18.500713348388672
    7. '_add' → logprob: -18.875713348388672
    8. '	add' → logprob: -19.000713348388672
    9. '.update' → logprob: -19.125713348388672
    10. '.append' → logprob: -19.375713348388672

Token 896: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -13.625000953674316
    3. 'p' → logprob: -16.000001907348633
    4. '(
' → logprob: -17.500001907348633
    5. ' (' → logprob: -19.750001907348633
    6. '   ' → logprob: -20.750001907348633
    7. '((' → logprob: -21.000001907348633
    8. ' p' → logprob: -21.375001907348633
    9. '	p' → logprob: -22.500001907348633
    10. '(c' → logprob: -23.000001907348633

Token 897: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.10517129302024841
    2. ',' → logprob: -2.8551712036132812
    3. 'p' → logprob: -3.8551712036132812
    4. ')' → logprob: -4.855171203613281
    5. 'inv' → logprob: -5.980171203613281
    6. ' p' → logprob: -5.980171203613281
    7. ',
' → logprob: -6.230171203613281
    8. '(p' → logprob: -6.480171203613281
    9. ')
' → logprob: -6.605171203613281
    10. ' ,' → logprob: -7.230171203613281

Token 898: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029427366331219673
    2. '               ' → logprob: -4.029427528381348
    3. ')
' → logprob: -4.529427528381348
    4. '<|end|>' → logprob: -8.404427528381348
    5. ',' → logprob: -9.404427528381348
    6. '):
' → logprob: -9.904427528381348
    7. '           ' → logprob: -10.529427528381348
    8. '<|end|>' → logprob: -11.279427528381348
    9. '),' → logprob: -12.279427528381348
    10. '
' → logprob: -12.529427528381348

Token 899: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001760148094035685
    2. '```' → logprob: -6.626760005950928
    3. '           ' → logprob: -7.876760005950928
    4. '``' → logprob: -11.126760482788086
    5. '                   ' → logprob: -11.376760482788086
    6. '<|end|>' → logprob: -12.001760482788086
    7. ',' → logprob: -12.126760482788086
    8. '       ' → logprob: -12.751760482788086
    9. '                
' → logprob: -13.126760482788086
    10. '              ' → logprob: -13.376760482788086

Token 900: ' cnt' (ID: 27340)
  Prédit: 'shipment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shipment' → logprob: -0.1565919667482376
    2. '               ' → logprob: -2.4065918922424316
    3. 'if' → logprob: -3.6565918922424316
    4. 'count' → logprob: -4.281591892242432
    5. 'max' → logprob: -5.031591892242432
    6. ' shipment' → logprob: -5.031591892242432
    7. 'cnt' (adapté à ' cnt') → logprob: -6.656591892242432
    8. ' if' → logprob: -8.90659236907959
    9. '           ' → logprob: -8.90659236907959
    10. '                   ' → logprob: -9.15659236907959

Token 901: '_inv' (ID: 53427)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0013333364622667432
    2. '_q' → logprob: -6.751333236694336
    3. '_i' → logprob: -9.876333236694336
    4. '_' → logprob: -10.251333236694336
    5. '_inv' → logprob: -10.376333236694336
    6. ' =' → logprob: -11.251333236694336
    7. '_pi' → logprob: -11.626333236694336
    8. '_c' → logprob: -11.876333236694336
    9. '=' → logprob: -11.876333236694336
    10. 'p' → logprob: -12.126333236694336

Token 902: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759397745132446
    2. ' =' → logprob: -0.8259397745132446
    3. '=p' → logprob: -15.325940132141113
    4. ',' → logprob: -16.575939178466797
    5. '=count' → logprob: -16.575939178466797
    6. '＝' → logprob: -18.075939178466797
    7. ' ' → logprob: -18.950939178466797
    8. ')' → logprob: -18.950939178466797
    9. '=get' → logprob: -19.075939178466797
    10. '=cut' → logprob: -19.200939178466797

Token 903: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.04858816787600517
    2. ' freq' → logprob: -3.048588275909424
    3. 'fre' → logprob: -15.548587799072266
    4. '(freq' → logprob: -15.548587799072266
    5. 'frequency' → logprob: -15.923587799072266
    6. '0' → logprob: -16.423587799072266
    7. 'fq' → logprob: -16.423587799072266
    8. '   ' → logprob: -16.673587799072266
    9. 'f' → logprob: -17.048587799072266
    10. '       ' → logprob: -18.048587799072266

Token 904: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.011254951357841492
    2. '[p' → logprob: -4.511254787445068
    3. 'get' → logprob: -8.511255264282227
    4. 'p' → logprob: -12.511255264282227
    5. '=p' → logprob: -14.511255264282227
    6. ' =' → logprob: -14.636255264282227
    7. '.' → logprob: -15.136255264282227
    8. '(p' → logprob: -15.261255264282227
    9. '.p' → logprob: -15.386255264282227
    10. '_get' → logprob: -15.386255264282227

Token 905: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.500000953674316
    3. '(
' → logprob: -15.750000953674316
    4. 'p' → logprob: -16.875
    5. '```' → logprob: -18.75
    6. ' (' → logprob: -20.0
    7. '((' → logprob: -20.625
    8. '   ' → logprob: -21.25
    9. '(c' → logprob: -21.625
    10. '`' → logprob: -21.625

Token 906: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -3.762356209335849e-05
    2. 'inv' → logprob: -10.37503719329834
    3. ',' → logprob: -12.75003719329834
    4. '   ' → logprob: -14.37503719329834
    5. 'p' → logprob: -14.62503719329834
    6. ')' → logprob: -14.75003719329834
    7. '
' → logprob: -14.87503719329834
    8. '(p' → logprob: -15.25003719329834
    9. '_INV' → logprob: -15.25003719329834
    10. '```' → logprob: -15.75003719329834

Token 907: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.060365608893335e-05
    2. ' ,' → logprob: -10.500041007995605
    3. ')' → logprob: -11.375041007995605
    4. '               ' → logprob: -14.250041007995605
    5. '0' → logprob: -14.500041007995605
    6. ',p' → logprob: -15.875041007995605
    7. ' or' → logprob: -16.12504005432129
    8. '           ' → logprob: -17.12504005432129
    9. ' ' → logprob: -17.25004005432129
    10. ',None' → logprob: -17.87504005432129

Token 908: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. ')' → logprob: -18.375001907348633
    4. '۰' → logprob: -19.000001907348633
    5. '   ' → logprob: -19.375001907348633
    6. '
' → logprob: -19.687501907348633
    7. '```' → logprob: -20.000001907348633
    8. '  ' → logprob: -20.125001907348633
    9. '           ' → logprob: -20.437501907348633
    10. '       ' → logprob: -20.812501907348633

Token 909: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -20.875
    4. '۰' → logprob: -20.875
    5. ')' → logprob: -21.75
    6. '00' → logprob: -22.6875
    7. '  ' → logprob: -22.9375
    8. '000' → logprob: -23.125
    9. '           ' → logprob: -23.1875
    10. 'p' → logprob: -23.25

Token 910: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07997335493564606
    2. '               ' → logprob: -3.2049734592437744
    3. ')
' → logprob: -3.3299734592437744
    4. '<|end|>' → logprob: -8.204973220825195
    5. '           ' → logprob: -8.954973220825195
    6. ',' → logprob: -10.704973220825195
    7. '):
' → logprob: -11.079973220825195
    8. '),' → logprob: -11.704973220825195
    9. ')

' → logprob: -11.829973220825195
    10. '
' → logprob: -11.829973220825195

Token 911: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007339857402257621
    2. '```' → logprob: -7.375733852386475
    3. '           ' → logprob: -10.500734329223633
    4. '                   ' → logprob: -11.125734329223633
    5. '                
' → logprob: -11.625734329223633
    6. ' shipment' → logprob: -11.625734329223633
    7. '<|end|>' → logprob: -11.750734329223633
    8. 'shipment' → logprob: -11.875734329223633
    9. '``' → logprob: -12.000734329223633
    10. 'count' → logprob: -12.875734329223633

Token 912: ' shipment' (ID: 52286)
  Prédit: 'shipment'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shipment' (adapté à ' shipment') → logprob: -0.31770214438438416
    2. '               ' → logprob: -1.9427021741867065
    3. ' shipment' → logprob: -2.067702054977417
    4. 'max' → logprob: -6.942702293395996
    5. 'count' → logprob: -7.817702293395996
    6. ' max' → logprob: -8.192702293395996
    7. '           ' → logprob: -8.817702293395996
    8. 'if' → logprob: -9.067702293395996
    9. 'best' → logprob: -9.567702293395996
    10. '                   ' → logprob: -9.692702293395996

Token 913: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.2603901015827432e-05
    2. '+=' → logprob: -11.500022888183594
    3. ' +=' → logprob: -11.500022888183594
    4. ' =' → logprob: -14.375022888183594
    5. '_' → logprob: -14.750022888183594
    6. '=' → logprob: -14.750022888183594
    7. '_counts' → logprob: -15.250022888183594
    8. '   ' → logprob: -15.625022888183594
    9. '               ' → logprob: -15.875022888183594
    10. '_COUNT' → logprob: -16.250022888183594

Token 914: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.001727776019833982
    2. '+=' → logprob: -6.37672758102417
    3. ' =' → logprob: -10.626728057861328
    4. '=' → logprob: -14.251728057861328
    5. ' +' → logprob: -15.751728057861328
    6. ']+=' → logprob: -16.001728057861328
    7. '+' → logprob: -16.126728057861328
    8. '            ' → logprob: -16.626728057861328
    9. '+=(' → logprob: -16.751728057861328
    10. '           ' → logprob: -16.876728057861328

Token 915: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014164102263748646
    2. ' max' → logprob: -4.264163970947266
    3. '(max' → logprob: -15.639163970947266
    4. '	max' → logprob: -15.639163970947266
    5. 'min' → logprob: -16.639163970947266
    6. 'cnt' → logprob: -17.139163970947266
    7. '_max' → logprob: -17.139163970947266
    8. '   ' → logprob: -17.889163970947266
    9. '[max' → logprob: -18.014163970947266
    10. 'maximum' → logprob: -18.264163970947266

Token 916: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.00017350474081467837
    2. 'cnt' → logprob: -8.750173568725586
    3. '[cnt' → logprob: -11.125173568725586
    4. '	cnt' → logprob: -15.625173568725586
    5. '(count' → logprob: -16.875173568725586
    6. '(' → logprob: -17.500173568725586
    7. ' cnt' → logprob: -17.625173568725586
    8. '(
' → logprob: -17.750173568725586
    9. '```' → logprob: -18.000173568725586
    10. '   ' → logprob: -18.500173568725586

Token 917: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -4.954393079970032e-05
    2. '(p' → logprob: -10.000049591064453
    3. 'p' → logprob: -12.750049591064453
    4. '(cnt' → logprob: -14.375049591064453
    5. '[p' → logprob: -15.625049591064453
    6. '_cnt' → logprob: -16.250049591064453
    7. '	p' → logprob: -16.750049591064453
    8. ',p' → logprob: -16.750049591064453
    9. 'cnt' → logprob: -17.500049591064453
    10. '   ' → logprob: -17.750049591064453

Token 918: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000523842521943152
    2. ' ,' → logprob: -7.875524044036865
    3. ',c' → logprob: -9.125523567199707
    4. ',
' → logprob: -10.375523567199707
    5. ' +' → logprob: -13.875523567199707
    6. ',count' → logprob: -14.000523567199707
    7. '+' → logprob: -14.375523567199707
    8. '(cnt' → logprob: -14.875523567199707
    9. '[cnt' → logprob: -15.250523567199707
    10. ',p' → logprob: -15.500523567199707

Token 919: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.005240872036665678
    2. ' cnt' → logprob: -5.2552409172058105
    3. '(cnt' → logprob: -13.130240440368652
    4. '	cnt' → logprob: -13.505240440368652
    5. '           ' → logprob: -13.630240440368652
    6. '               ' → logprob: -14.380240440368652
    7. '_cnt' → logprob: -14.755240440368652
    8. '[cnt' → logprob: -14.755240440368652
    9. '   ' → logprob: -15.130240440368652
    10. '              ' → logprob: -15.630240440368652

Token 920: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.6231634616851807
    2. '_cnt' → logprob: -0.8731634616851807
    3. 'cnt' → logprob: -3.1231634616851807
    4. 'inv' → logprob: -6.873163223266602
    5. '_p' → logprob: -7.498163223266602
    6. 'p' → logprob: -8.498163223266602
    7. ' cnt' → logprob: -9.248163223266602
    8. '	cnt' → logprob: -9.373163223266602
    9. '(cnt' → logprob: -9.498163223266602
    10. '[cnt' → logprob: -10.498163223266602

Token 921: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005118065746501088
    2. ')
' → logprob: -7.625511646270752
    3. '<|end|>' → logprob: -11.00051212310791
    4. '           ' → logprob: -12.75051212310791
    5. ' )' → logprob: -13.25051212310791
    6. '       ' → logprob: -14.25051212310791
    7. '               ' → logprob: -14.50051212310791
    8. '<|end|>' → logprob: -14.87551212310791
    9. ')

' → logprob: -15.87551212310791
    10. ')}' → logprob: -16.000511169433594

Token 922: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14270439743995667
    2. '           ' → logprob: -2.142704486846924
    3. '
' → logprob: -4.267704486846924
    4. '```' → logprob: -7.267704486846924
    5. 'return' → logprob: -7.267704486846924
    6. '<|end|>' → logprob: -9.017704010009766
    7. ' return' → logprob: -9.892704010009766
    8. '        
' → logprob: -10.892704010009766
    9. '
' → logprob: -11.517704010009766
    10. '   ' → logprob: -11.767704010009766

Token 923: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1895918995141983
    2. '           ' → logprob: -2.439591884613037
    3. '       ' → logprob: -3.189591884613037
    4. 'max' → logprob: -3.314591884613037
    5. ' if' → logprob: -4.939591884613037
    6. 'return' → logprob: -7.439591884613037
    7. '   ' → logprob: -9.564592361450195
    8. '
' → logprob: -9.564592361450195
    9. '```' → logprob: -9.814592361450195
    10. ' max' → logprob: -11.314592361450195

Token 924: ' shipment' (ID: 52286)
  Prédit: ' shipment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shipment' → logprob: -0.3146733045578003
    2. 'shipment' → logprob: -1.3146733045578003
    3. 'max' → logprob: -6.81467342376709
    4. ' max' → logprob: -8.31467342376709
    5. '   ' → logprob: -10.43967342376709
    6. 'ship' → logprob: -10.68967342376709
    7. 'sh' → logprob: -12.31467342376709
    8. 'Shipment' → logprob: -12.43967342376709
    9. ' ' → logprob: -13.18967342376709
    10. '(max' → logprob: -14.06467342376709

Token 925: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.319370302458992e-06
    2. '>' → logprob: -12.625005722045898
    3. '   ' → logprob: -14.250005722045898
    4. '           ' → logprob: -14.375005722045898
    5. '               ' → logprob: -15.625005722045898
    6. '_COUNT' → logprob: -15.750005722045898
    7. 'count' → logprob: -16.3750057220459
    8. '       ' → logprob: -16.5000057220459
    9. '_counts' → logprob: -16.7500057220459
    10. '_' → logprob: -16.8750057220459

Token 926: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3868747651576996
    2. ' >' → logprob: -1.136874794960022
    3. '   ' → logprob: -13.01187515258789
    4. '>
' → logprob: -15.13687515258789
    5. ')' → logprob: -15.26187515258789
    6. '           ' → logprob: -15.38687515258789
    7. ' ' → logprob: -15.76187515258789
    8. ' ' → logprob: -15.76187515258789
    9. ' >
' → logprob: -16.51187515258789
    10. 'max' → logprob: -16.51187515258789

Token 927: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014164221473038197
    2. ' max' → logprob: -4.264164447784424
    3. '           ' → logprob: -14.264163970947266
    4. '	max' → logprob: -17.639163970947266
    5. '
' → logprob: -17.764163970947266
    6. '```' → logprob: -18.014163970947266
    7. '   ' → logprob: -18.389163970947266
    8. '               ' → logprob: -18.389163970947266
    9. '(max' → logprob: -18.889163970947266
    10. '_max' → logprob: -18.889163970947266

Token 928: '_sh' (ID: 8823)
  Prédit: '_sh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sh' → logprob: -5.512236498361744e-07
    2. '_ship' → logprob: -15.500000953674316
    3. 'shipment' → logprob: -16.625
    4. '\' → logprob: -16.625
    5. '_' → logprob: -17.0
    6. 'max' → logprob: -17.625
    7. '
' → logprob: -17.75
    8. '```' → logprob: -17.75
    9. '_shipping' → logprob: -18.25
    10. '_sent' → logprob: -18.375

Token 929: 'ipment' (ID: 6219)
  Prédit: 'ipment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipment' → logprob: -0.00034845535992644727
    2. 'ip' → logprob: -8.000348091125488
    3. 'ipped' → logprob: -11.625348091125488
    4. 'IPMENT' → logprob: -13.125348091125488
    5. 'Shipment' → logprob: -14.250348091125488
    6. 'shipment' → logprob: -15.375348091125488
    7. 'hip' → logprob: -15.625348091125488
    8. 'ippage' → logprob: -15.625348091125488
    9. 'ippet' → logprob: -15.750348091125488
    10. 'ipping' → logprob: -16.000349044799805

Token 930: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34090182185173035
    2. ':
' → logprob: -1.5909018516540527
    3. '=' → logprob: -2.8409018516540527
    4. '               ' → logprob: -4.090901851654053
    5. '           ' → logprob: -4.840901851654053
    6. ' =' → logprob: -6.715901851654053
    7. '):
' → logprob: -8.715901374816895
    8. '                       ' → logprob: -8.965901374816895
    9. '=True' → logprob: -9.590901374816895
    10. '<|end|>' → logprob: -9.590901374816895

Token 931: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18279758095741272
    2. '               ' → logprob: -1.8077975511550903
    3. 'max' → logprob: -5.932797431945801
    4. ' max' → logprob: -8.4327974319458
    5. '                   ' → logprob: -9.8077974319458
    6. '                       ' → logprob: -10.3077974319458
    7. '```' → logprob: -10.6827974319458
    8. '(max' → logprob: -10.9327974319458
    9. '   ' → logprob: -11.1827974319458
    10. '[max' → logprob: -11.5577974319458

Token 932: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0033166229259222746
    2. ' max' → logprob: -5.753316402435303
    3. '               ' → logprob: -9.003316879272461
    4. '           ' → logprob: -11.253316879272461
    5. '                   ' → logprob: -12.878316879272461
    6. '_max' → logprob: -16.25331687927246
    7. '
' → logprob: -16.75331687927246
    8. '       ' → logprob: -17.37831687927246
    9. '	max' → logprob: -17.37831687927246
    10. '(max' → logprob: -17.62831687927246

Token 933: '_sh' (ID: 8823)
  Prédit: '_sh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sh' → logprob: -7.896309739408025e-07
    2. '_ship' → logprob: -14.375000953674316
    3. '\' → logprob: -17.375
    4. '_shipping' → logprob: -17.625
    5. 'shipment' → logprob: -17.75
    6. 'Shipment' → logprob: -18.25
    7. '_sp' → logprob: -18.375
    8. '   ' → logprob: -18.5
    9. '_s' → logprob: -18.875
    10. 'sh' → logprob: -19.125

Token 934: 'ipment' (ID: 6219)
  Prédit: 'ipment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipment' → logprob: -0.004058333113789558
    2. '_sh' → logprob: -6.379058361053467
    3. 'ipped' → logprob: -6.754058361053467
    4. 'ip' → logprob: -7.504058361053467
    5. 'shipment' → logprob: -7.879058361053467
    6. 'hip' → logprob: -8.754057884216309
    7. 'IPMENT' → logprob: -10.379057884216309
    8. 'ipping' → logprob: -10.754057884216309
    9. 'ipp' → logprob: -11.129057884216309
    10. 'Shipment' → logprob: -12.379057884216309

Token 935: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018151111900806427
    2. ' =' → logprob: -4.01815128326416
    3. '=max' → logprob: -14.76815128326416
    4. '=
' → logprob: -15.01815128326416
    5. '＝' → logprob: -15.51815128326416
    6. '=True' → logprob: -16.018150329589844
    7. '           ' → logprob: -17.143150329589844
    8. '               ' → logprob: -17.518150329589844
    9. '                   ' → logprob: -18.018150329589844
    10. '   ' → logprob: -18.018150329589844

Token 936: ' shipment' (ID: 52286)
  Prédit: 'shipment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shipment' → logprob: -0.07889033854007721
    2. ' shipment' → logprob: -2.578890323638916
    3. 'ship' → logprob: -15.203890800476074
    4. 'shipping' → logprob: -15.953890800476074
    5. 'Shipment' → logprob: -16.578889846801758
    6. 'sh' → logprob: -16.703889846801758
    7. '   ' → logprob: -17.328889846801758
    8. 'submission' → logprob: -18.578889846801758
    9. 'sale' → logprob: -18.953889846801758
    10. 'shot' → logprob: -19.703889846801758

Token 937: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.896309739408025e-07
    2. 'count' → logprob: -15.125000953674316
    3. '   ' → logprob: -15.250000953674316
    4. '_COUNT' → logprob: -16.25
    5. '
' → logprob: -16.875
    6. '_counts' → logprob: -17.0
    7. 't' → logprob: -17.5
    8. ' ' → logprob: -17.625
    9. '_cnt' → logprob: -18.0
    10. 'Count' → logprob: -18.125

Token 938: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08583017438650131
    2. ' 
' → logprob: -3.9608302116394043
    3. '<|end|>' → logprob: -3.9608302116394043
    4. '           ' → logprob: -4.335830211639404
    5. '    
' → logprob: -4.835830211639404
    6. '\n' → logprob: -5.085830211639404
    7. '       ' → logprob: -5.460830211639404
    8. '               ' → logprob: -5.960830211639404
    9. '  
' → logprob: -6.460830211639404
    10. '\' → logprob: -6.460830211639404

Token 939: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014852462336421013
    2. '
' → logprob: -4.264852523803711
    3. ' return' → logprob: -8.139852523803711
    4. 'return' → logprob: -8.139852523803711
    5. '        
' → logprob: -10.014852523803711
    6. '```' → logprob: -10.514852523803711
    7. '	' → logprob: -11.639852523803711
    8. '   ' → logprob: -12.139852523803711
    9. '<|end|>' → logprob: -12.139852523803711
    10. '    
' → logprob: -12.639852523803711

Token 940: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2524155378341675
    2. 'return' (adapté à ' return') → logprob: -1.5024155378341675
    3. ' return' → logprob: -7.877415657043457
    4. '   ' → logprob: -10.127415657043457
    5. '```' → logprob: -10.377415657043457
    6. '
' → logprob: -10.627415657043457
    7. '	return' → logprob: -11.752415657043457
    8. '	' → logprob: -12.877415657043457
    9. '{return' → logprob: -14.502415657043457
    10. ':return' → logprob: -15.752415657043457

Token 941: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.001170225441455841
    2. ' max' → logprob: -6.7511701583862305
    3. '_max' → logprob: -20.626171112060547
    4. '	max' → logprob: -21.001171112060547
    5. '(max' → logprob: -21.251171112060547
    6. '
' → logprob: -21.626171112060547
    7. '       ' → logprob: -21.751171112060547
    8. '   ' → logprob: -21.751171112060547
    9. '[max' → logprob: -22.251171112060547
    10. '=max' → logprob: -23.001171112060547

Token 942: '_sh' (ID: 8823)
  Prédit: '_sh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sh' → logprob: -0.00015836587408557534
    2. '_ship' → logprob: -9.000158309936523
    3. 'shipment' → logprob: -11.625158309936523
    4. ' shipment' → logprob: -11.875158309936523
    5. 'Shipment' → logprob: -12.250158309936523
    6. '_mask' → logprob: -12.500158309936523
    7. '_token' → logprob: -12.750158309936523
    8. '_shipping' → logprob: -13.250158309936523
    9. '_' → logprob: -13.500158309936523
    10. '\' → logprob: -13.500158309936523

Token 943: 'ipment' (ID: 6219)
  Prédit: 'ipment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipment' → logprob: -3.976922744186595e-05
    2. 'ip' → logprob: -10.375040054321289
    3. 'shipment' → logprob: -12.625040054321289
    4. 'IPMENT' → logprob: -13.000040054321289
    5. 'ipped' → logprob: -13.750040054321289
    6. 'Shipment' → logprob: -14.500040054321289
    7. ' shipment' → logprob: -14.750040054321289
    8. 'p' → logprob: -14.750040054321289
    9. 'ippage' → logprob: -16.12504005432129
    10. 'ipation' → logprob: -16.12504005432129

Token 944: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 945: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 946: ' Sen' (ID: 8675)
  Prédit: 'Sen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sen' → logprob: -0.42761221528053284
    2. ' Sen' → logprob: -1.9276121854782104
    3. 'Solution' → logprob: -2.3026123046875
    4. ' Solution' → logprob: -2.5526123046875
    5. 'Test' → logprob: -4.8026123046875
    6. ' Test' → logprob: -5.6776123046875
    7. ' Solver' → logprob: -5.6776123046875
    8. 'Solver' → logprob: -5.9276123046875
    9. 'Br' → logprob: -6.1776123046875
    10. ' Br' → logprob: -7.1776123046875

Token 947: 'bei' (ID: 36127)
  Prédit: 'bei'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bei' → logprob: -7.433829159708694e-05
    2. 'be' → logprob: -10.50007438659668
    3. 'abei' → logprob: -11.37507438659668
    4. 'obei' → logprob: -11.62507438659668
    5. 'Bei' → logprob: -11.75007438659668
    6. ' bei' → logprob: -12.37507438659668
    7. '```' → logprob: -12.62507438659668
    8. '   ' → logprob: -12.75007438659668
    9. 'b' → logprob: -13.87507438659668
    10. 'sei' → logprob: -14.37507438659668

Token 948: 'Problem' (ID: 36177)
  Prédit: 'Fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fl' → logprob: -0.8226404786109924
    2. 'Solver' → logprob: -0.8226404786109924
    3. 'State' → logprob: -2.5726404190063477
    4. 'Puzzle' → logprob: -3.4476404190063477
    5. 'Problem' → logprob: -5.072640419006348
    6. 'Game' → logprob: -6.822640419006348
    7. 'Batch' → logprob: -7.072640419006348
    8. 'Builder' → logprob: -7.197640419006348
    9. 'Counter' → logprob: -7.447640419006348
    10. 'Collector' → logprob: -7.947640419006348

Token 949: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018134634010493755
    2. '(S' → logprob: -6.7518134117126465
    3. ':
' → logprob: -8.001813888549805
    4. '(' → logprob: -8.501813888549805
    5. '<|end|>' → logprob: -10.251813888549805
    6. '():' → logprob: -11.001813888549805
    7. '(object' → logprob: -11.251813888549805
    8. '(Abstract' → logprob: -12.001813888549805
    9. '```' → logprob: -12.126813888549805
    10. '{' → logprob: -12.751813888549805

Token 950: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03867052495479584
    2. ':
' → logprob: -3.288670539855957
    3. '<|end|>' → logprob: -7.788670539855957
    4. '(S' → logprob: -10.038670539855957
    5. '():
' → logprob: -10.538670539855957
    6. '   ' → logprob: -10.788670539855957
    7. '(' → logprob: -10.913670539855957
    8. '```' → logprob: -11.038670539855957
    9. '(QWidget' → logprob: -11.288670539855957
    10. '<|end|>' → logprob: -11.288670539855957

Token 951: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011439072113716975
    2. '```' → logprob: -10.125114440917969
    3. 'def' → logprob: -10.500114440917969
    4. ' def' → logprob: -10.750114440917969
    5. 'class' → logprob: -10.875114440917969
    6. '    ' → logprob: -13.625114440917969
    7. '<|end|>' → logprob: -13.875114440917969
    8. '    
' → logprob: -13.875114440917969
    9. ':' → logprob: -14.000114440917969
    10. ' class' → logprob: -14.250114440917969

Token 952: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.09598227590322495
    2. ' def' → logprob: -2.595982313156128
    3. '   ' → logprob: -4.095982074737549
    4. 'class' → logprob: -8.220982551574707
    5. '```' → logprob: -10.470982551574707
    6. '	def' → logprob: -11.595982551574707
    7. '``' → logprob: -15.095982551574707
    8. '
' → logprob: -15.220982551574707
    9. ' ' → logprob: -15.970982551574707
    10. ' class' → logprob: -15.970982551574707

Token 953: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.31635400652885437
    2. '__' → logprob: -1.3163540363311768
    3. ' __' → logprob: -6.191353797912598
    4. '```' → logprob: -7.566353797912598
    5. 'def' → logprob: -7.816353797912598
    6. '_init' → logprob: -9.441353797912598
    7. ' init' → logprob: -10.566353797912598
    8. ' def' → logprob: -12.316353797912598
    9. '___' → logprob: -13.066353797912598
    10. '**' → logprob: -13.566353797912598

Token 954: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.1008713702030946e-06
    2. ' init' → logprob: -13.500001907348633
    3. '__' → logprob: -14.750001907348633
    4. '```' → logprob: -16.000001907348633
    5. '_init' → logprob: -17.250001907348633
    6. '	init' → logprob: -17.375001907348633
    7. 'int' → logprob: -17.750001907348633
    8. '   ' → logprob: -18.125001907348633
    9. '(init' → logprob: -18.625001907348633
    10. 'def' → logprob: -18.750001907348633

Token 955: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0010204248828813434
    2. '(self' → logprob: -7.251020431518555
    3. '__(
' → logprob: -8.251020431518555
    4. '__' → logprob: -10.376020431518555
    5. '__((' → logprob: -12.376020431518555
    6. '_(' → logprob: -12.626020431518555
    7. '<>(' → logprob: -12.876020431518555
    8. '   ' → logprob: -13.126020431518555
    9. '```' → logprob: -13.376020431518555
    10. 'self' → logprob: -13.751020431518555

Token 956: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00017803447553887963
    2. ' self' → logprob: -9.000178337097168
    3. '   ' → logprob: -10.250178337097168
    4. '       ' → logprob: -11.875178337097168
    5. 'state' → logprob: -12.000178337097168
    6. '(self' → logprob: -12.375178337097168
    7. '
' → logprob: -14.375178337097168
    8. ',' → logprob: -14.625178337097168
    9. '```' → logprob: -15.125178337097168
    10. ')' → logprob: -15.500178337097168

Token 957: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014324624091386795
    2. 'self' → logprob: -4.26432466506958
    3. '(self' → logprob: -9.514324188232422
    4. ',self' → logprob: -9.889324188232422
    5. '   ' → logprob: -11.139324188232422
    6. ',
' → logprob: -11.389324188232422
    7. ' self' → logprob: -12.639324188232422
    8. ' ,' → logprob: -12.639324188232422
    9. '
' → logprob: -13.639324188232422
    10. 'class' → logprob: -14.264324188232422

Token 958: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011939727846765891
    2. ' self' → logprob: -9.75011920928955
    3. '   ' → logprob: -10.00011920928955
    4. '       ' → logprob: -11.37511920928955
    5. '(self' → logprob: -12.62511920928955
    6. '```' → logprob: -15.12511920928955
    7. '	self' → logprob: -15.62511920928955
    8. ',' → logprob: -15.75011920928955
    9. '
' → logprob: -16.250120162963867
    10. 'def' → logprob: -16.500120162963867

Token 959: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3031150698661804
    2. 'self' (adapté à ' self') → logprob: -1.4281151294708252
    3. 'def' → logprob: -4.553114891052246
    4. 'pass' → logprob: -4.678114891052246
    5. '   ' → logprob: -6.553114891052246
    6. ' self' → logprob: -8.178114891052246
    7. ' pass' → logprob: -9.178114891052246
    8. '(self' → logprob: -10.178114891052246
    9. '```' → logprob: -10.803114891052246
    10. ' def' → logprob: -12.053114891052246

Token 960: '.datasets' (ID: 136555)
  Prédit: '.R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.R' → logprob: -0.3628407418727875
    2. '.initial' → logprob: -1.4878407716751099
    3. 'R' → logprob: -3.7378406524658203
    4. '.state' → logprob: -4.11284065246582
    5. '.states' → logprob: -4.61284065246582
    6. 'state' → logprob: -4.61284065246582
    7. '.S' → logprob: -4.98784065246582
    8. '._' → logprob: -5.86284065246582
    9. '.' → logprob: -6.11284065246582
    10. '   ' → logprob: -6.23784065246582

Token 961: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43370866775512695
    2. ' =' → logprob: -1.058708667755127
    3. ':' → logprob: -5.308708667755127
    4. '=[]' → logprob: -10.433708190917969
    5. '   ' → logprob: -11.683708190917969
    6. '<|end|>' → logprob: -12.433708190917969
    7. '.setdefault' → logprob: -13.433708190917969
    8. ' :' → logprob: -14.058708190917969
    9. '=[]
' → logprob: -14.558708190917969
    10. '=None' → logprob: -14.933708190917969

Token 962: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -5.9153885558771435e-06
    2. '[]
' → logprob: -12.500005722045898
    3. '[]

' → logprob: -13.875005722045898
    4. ' []' → logprob: -14.125005722045898
    5. '{}' → logprob: -15.500005722045898
    6. '[' → logprob: -16.2500057220459
    7. '[]}' → logprob: -17.1250057220459
    8. '[],' → logprob: -18.1250057220459
    9. '[])' → logprob: -18.3750057220459
    10. '[]"' → logprob: -18.5000057220459

Token 963: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014833167660981417
    2. 'def' → logprob: -6.75148344039917
    3. '```' → logprob: -8.501482963562012
    4. ' def' → logprob: -9.251482963562012
    5. '<|end|>' → logprob: -11.376482963562012
    6. '	def' → logprob: -14.501482963562012
    7. '<|end|>' → logprob: -14.876482963562012
    8. 'class' → logprob: -15.126482963562012
    9. '    
' → logprob: -15.126482963562012
    10. '       ' → logprob: -15.626482963562012

Token 964: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0021606103982776403
    2. ' def' → logprob: -6.252160549163818
    3. '   ' → logprob: -8.377161026000977
    4. '```' → logprob: -13.752161026000977
    5. '	def' → logprob: -14.002161026000977
    6. 'class' → logprob: -16.877161026000977
    7. '       ' → logprob: -17.877161026000977
    8. '
' → logprob: -18.877161026000977
    9. '@property' → logprob: -19.252161026000977
    10. '    
' → logprob: -19.252161026000977

Token 965: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0022493419237434864
    2. 'load' → logprob: -6.252249240875244
    3. ' add' → logprob: -8.502249717712402
    4. 'solve' → logprob: -9.627249717712402
    5. 'read' → logprob: -10.127249717712402
    6. 'parse' → logprob: -11.627249717712402
    7. 'def' → logprob: -14.252249717712402
    8. ' load' → logprob: -14.377249717712402
    9. 'append' → logprob: -14.627249717712402
    10. 'run' → logprob: -14.752249717712402

Token 966: '_dataset' (ID: 40568)
  Prédit: '_dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dataset' → logprob: -0.007104285527020693
    2. '(self' → logprob: -5.007104396820068
    3. '_data' → logprob: -8.38210391998291
    4. 'dataset' → logprob: -9.00710391998291
    5. 'self' → logprob: -10.75710391998291
    6. '(' → logprob: -12.13210391998291
    7. 'Dataset' → logprob: -12.88210391998291
    8. '   ' → logprob: -13.00710391998291
    9. '(dataset' → logprob: -13.63210391998291
    10. 'ataset' → logprob: -13.88210391998291

Token 967: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015594969736412168
    2. '(' → logprob: -6.501559734344482
    3. '(
' → logprob: -10.251559257507324
    4. '   ' → logprob: -11.876559257507324
    5. 'self' → logprob: -11.876559257507324
    6. 'def' → logprob: -11.876559257507324
    7. '       ' → logprob: -15.376559257507324
    8. ' (' → logprob: -15.376559257507324
    9. '(def' → logprob: -15.876559257507324
    10. '	self' → logprob: -16.37656021118164

Token 968: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002894274890422821
    2. '(self' → logprob: -6.252894401550293
    3. 'self' → logprob: -7.627894401550293
    4. ' ,' → logprob: -7.877894401550293
    5. ',self' → logprob: -10.252894401550293
    6. ',
' → logprob: -10.877894401550293
    7. '   ' → logprob: -11.127894401550293
    8. '       ' → logprob: -11.877894401550293
    9. '(' → logprob: -12.377894401550293
    10. ' (' → logprob: -12.627894401550293

Token 969: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.2608656883239746
    2. 'self' → logprob: -2.0108656883239746
    3. 'state' → logprob: -3.2608656883239746
    4. 'grid' → logprob: -3.8858656883239746
    5. 'rows' → logprob: -4.260865688323975
    6. ' R' → logprob: -4.260865688323975
    7. ' self' → logprob: -6.010865688323975
    8. ' grid' → logprob: -6.510865688323975
    9. 'dataset' → logprob: -6.760865688323975
    10. ' state' → logprob: -6.760865688323975

Token 970: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040064091444946826
    2. ':' → logprob: -8.25040054321289
    3. ' ,' → logprob: -9.12540054321289
    4. ':int' → logprob: -11.00040054321289
    5. '=' → logprob: -11.50040054321289
    6. ',int' → logprob: -13.75040054321289
    7. ',
' → logprob: -14.50040054321289
    8. '):' → logprob: -14.75040054321289
    9. '=None' → logprob: -15.25040054321289
    10. 'self' → logprob: -15.50040054321289

Token 971: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007115975022315979
    2. ' int' → logprob: -7.250711441040039
    3. '[int' → logprob: -14.250711441040039
    4. 'self' → logprob: -15.000711441040039
    5. '(int' → logprob: -15.500711441040039
    6. '=int' → logprob: -15.625711441040039
    7. ',' → logprob: -15.875711441040039
    8. ',int' → logprob: -16.00071144104004
    9. '
' → logprob: -16.87571144104004
    10. ':int' → logprob: -17.12571144104004

Token 972: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.451116051815916e-05
    2. ' ,' → logprob: -10.875024795532227
    3. ',C' → logprob: -12.250024795532227
    4. '‌,' → logprob: -15.250024795532227
    5. ',
' → logprob: -15.625024795532227
    6. '   ' → logprob: -16.000024795532227
    7. ',R' → logprob: -16.125024795532227
    8. ',int' → logprob: -17.000024795532227
    9. '       ' → logprob: -17.250024795532227
    10. '‍,' → logprob: -17.375024795532227

Token 973: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0005541055579669774
    2. ' C' → logprob: -7.500554084777832
    3. '   ' → logprob: -13.875554084777832
    4. '       ' → logprob: -16.25055503845215
    5. 'grid' → logprob: -17.00055503845215
    6. ',' → logprob: -17.87555503845215
    7. '  ' → logprob: -18.12555503845215
    8. '    ' → logprob: -18.50055503845215
    9. ' ' → logprob: -18.62555503845215
    10. '	C' → logprob: -18.87555503845215

Token 974: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.539801688631997e-05
    2. ' ,' → logprob: -10.125065803527832
    3. '   ' → logprob: -11.125065803527832
    4. ',int' → logprob: -11.875065803527832
    5. ':' → logprob: -13.375065803527832
    6. ',
' → logprob: -14.000065803527832
    7. ':int' → logprob: -15.125065803527832
    8. '=' → logprob: -15.250065803527832
    9. '‌,' → logprob: -15.375065803527832
    10. '       ' → logprob: -15.875065803527832

Token 975: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007100477814674377
    2. ' int' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.625709533691406
    4. '[int' → logprob: -17.750709533691406
    5. ',int' → logprob: -18.750709533691406
    6. '	int' → logprob: -19.000709533691406
    7. '=int' → logprob: -19.000709533691406
    8. ':int' → logprob: -19.125709533691406
    9. '(int' → logprob: -19.375709533691406
    10. ' ' → logprob: -19.875709533691406

Token 976: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.127333340875339e-06
    2. ' ,' → logprob: -12.500003814697266
    3. ',
' → logprob: -16.125003814697266
    4. '   ' → logprob: -16.250003814697266
    5. '       ' → logprob: -16.500003814697266
    6. '‌,' → logprob: -17.000003814697266
    7. '،' → logprob: -18.250003814697266
    8. ',int' → logprob: -18.500003814697266
    9. '‍,' → logprob: -18.875003814697266
    10. ',list' → logprob: -19.125003814697266

Token 977: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -7.541112427134067e-05
    2. ' grid' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.875075340270996
    4. 'data' → logprob: -17.125076293945312
    5. 'initial' → logprob: -17.750076293945312
    6. '       ' → logprob: -18.125076293945312
    7. ' ' → logprob: -18.750076293945312
    8. '	grid' → logprob: -18.875076293945312
    9. 'rows' → logprob: -19.000076293945312
    10. '```' → logprob: -19.250076293945312

Token 978: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15018385648727417
    2. '):' → logprob: -2.150183916091919
    3. '):
' → logprob: -3.775183916091919
    4. ')' → logprob: -10.77518367767334
    5. '   ' → logprob: -11.15018367767334
    6. '):
' → logprob: -11.65018367767334
    7. ':list' → logprob: -12.52518367767334
    8. '):

' → logprob: -13.27518367767334
    9. '       ' → logprob: -13.77518367767334
    10. '```' → logprob: -13.90018367767334

Token 979: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00167161098215729
    2. '[list' → logprob: -6.50167179107666
    3. ' list' → logprob: -9.25167179107666
    4. 'List' → logprob: -9.87667179107666
    5. ')' → logprob: -11.25167179107666
    6. '[List' → logprob: -12.62667179107666
    7. '=list' → logprob: -13.25167179107666
    8. '```' → logprob: -13.62667179107666
    9. ':list' → logprob: -14.00167179107666
    10. '   ' → logprob: -14.12667179107666

Token 980: '[list' (ID: 141696)
  Prédit: '[list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -2.2246291337069124e-05
    2. '[int' → logprob: -11.000021934509277
    3. '[List' → logprob: -12.500021934509277
    4. '[[' → logprob: -13.875021934509277
    5. '[' → logprob: -15.125021934509277
    6. '[
' → logprob: -15.250021934509277
    7. '```' → logprob: -16.000022888183594
    8. ')' → logprob: -16.375022888183594
    9. '   ' → logprob: -17.000022888183594
    10. '=list' → logprob: -17.250022888183594

Token 981: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -6.869017852295656e-06
    2. '<int' → logprob: -12.375006675720215
    3. 'int' → logprob: -13.750006675720215
    4. ']int' → logprob: -14.000006675720215
    5. '[
' → logprob: -14.750006675720215
    6. '=int' → logprob: -16.12500762939453
    7. '[' → logprob: -16.87500762939453
    8. '[Int' → logprob: -17.87500762939453
    9. '   ' → logprob: -18.37500762939453
    10. '	int' → logprob: -18.50000762939453

Token 982: ']]' (ID: 8928)
  Prédit: ']):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.6181321740150452
    2. ']]' → logprob: -0.8681321740150452
    3. '])' → logprob: -3.4931321144104004
    4. ']])' → logprob: -4.9931321144104
    5. ']):' → logprob: -5.8681321144104
    6. ']' → logprob: -7.4931321144104
    7. ']]:
' → logprob: -7.4931321144104
    8. '[int' → logprob: -9.118132591247559
    9. '']):
' → logprob: -10.868132591247559
    10. '[' → logprob: -11.118132591247559

Token 983: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2597755789756775
    2. ')' → logprob: -2.0097756385803223
    3. '):' → logprob: -2.3847756385803223
    4. '   ' → logprob: -6.384775638580322
    5. '       ' → logprob: -7.134775638580322
    6. '):
' → logprob: -9.509775161743164
    7. ')->' → logprob: -9.509775161743164
    8. '):

' → logprob: -12.509775161743164
    9. ' ' → logprob: -13.509775161743164
    10. ')**' → logprob: -13.509775161743164

Token 984: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028696097433567047
    2. 'self' → logprob: -8.625287055969238
    3. ' self' → logprob: -9.500287055969238
    4. '   ' → logprob: -11.000287055969238
    5. '```' → logprob: -11.125287055969238
    6. ',' → logprob: -15.125287055969238
    7. '           ' → logprob: -15.750287055969238
    8. '      ' → logprob: -15.875287055969238
    9. ' new' → logprob: -16.375286102294922
    10. '	self' → logprob: -16.500286102294922

Token 985: ' self' (ID: 1051)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.042200107127428055
    2. 'self' (adapté à ' self') → logprob: -3.2922000885009766
    3. ' state' → logprob: -5.792200088500977
    4. '       ' → logprob: -6.917200088500977
    5. ' self' → logprob: -9.167200088500977
    6. 'new' → logprob: -13.167200088500977
    7. '```' → logprob: -14.417200088500977
    8. '   ' → logprob: -15.042200088500977
    9. '	state' → logprob: -15.292200088500977
    10. 'State' → logprob: -15.917200088500977

Token 986: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -0.00011117222311440855
    2. 'datasets' → logprob: -9.12511157989502
    3. '.datas' → logprob: -14.12511157989502
    4. '.states' → logprob: -14.37511157989502
    5. '.dat' → logprob: -15.00011157989502
    6. '.dataset' → logprob: -15.50011157989502
    7. ' datasets' → logprob: -16.500110626220703
    8. 'atasets' → logprob: -16.875110626220703
    9. ' .' → logprob: -17.000110626220703
    10. '.data' → logprob: -17.250110626220703

Token 987: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.6696149840718135e-05
    2. '.' → logprob: -10.000056266784668
    3. '.app' → logprob: -12.375056266784668
    4. '.ap' → logprob: -13.000056266784668
    5. '.extend' → logprob: -13.125056266784668
    6. '.setdefault' → logprob: -14.375056266784668
    7. '​.' → logprob: -14.500056266784668
    8. ' .' → logprob: -14.625056266784668
    9. '       ' → logprob: -15.125056266784668
    10. '.add' → logprob: -15.500056266784668

Token 988: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.1603614240884781
    2. '((' → logprob: -1.910361409187317
    3. '(' → logprob: -8.910361289978027
    4. '(
' → logprob: -14.035361289978027
    5. 'S' → logprob: -14.410361289978027
    6. '(('' → logprob: -15.285361289978027
    7. '(("' → logprob: -15.910361289978027
    8. '({'' → logprob: -16.160362243652344
    9. ' (' → logprob: -16.285362243652344
    10. '(((' → logprob: -16.535362243652344

Token 989: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.00017672323156148195
    2. 'Sen' → logprob: -8.750176429748535
    3. ' Sen' → logprob: -12.125176429748535
    4. 'enche' → logprob: -12.875176429748535
    5. '(en' → logprob: -13.250176429748535
    6. '((' → logprob: -13.500176429748535
    7. 'ен' → logprob: -13.500176429748535
    8. 'enue' → logprob: -13.750176429748535
    9. 'enli' → logprob: -13.875176429748535
    10. '(' → logprob: -14.625176429748535

Token 990: 'bei' (ID: 36127)
  Prédit: 'bei'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bei' → logprob: -1.0683535037969705e-05
    2. 'be' → logprob: -12.75001049041748
    3. 'obei' → logprob: -12.87501049041748
    4. 'Bei' → logprob: -13.12501049041748
    5. 'abei' → logprob: -13.25001049041748
    6. ' bei' → logprob: -15.00001049041748
    7. '```' → logprob: -15.25001049041748
    8. '   ' → logprob: -15.62501049041748
    9. '`' → logprob: -16.375011444091797
    10. 'beit' → logprob: -16.500011444091797

Token 991: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -4.320199877838604e-07
    2. 'state' → logprob: -14.75
    3. '_state' → logprob: -17.125
    4. 't' → logprob: -18.875
    5. '_State' → logprob: -19.125
    6. 'S' → logprob: -19.5
    7. 'St' → logprob: -19.625
    8. ' State' → logprob: -19.625
    9. '	State' → logprob: -19.625
    10. '_STATE' → logprob: -19.75

Token 992: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.0007406574441120028
    2. '(S' → logprob: -7.2507405281066895
    3. '(self' → logprob: -11.500741004943848
    4. '(' → logprob: -11.625741004943848
    5. '((' → logprob: -11.875741004943848
    6. ' (' → logprob: -12.375741004943848
    7. '(C' → logprob: -15.750741004943848
    8. '(
' → logprob: -15.750741004943848
    9. ')(' → logprob: -16.50074005126953
    10. '(I' → logprob: -18.00074005126953

Token 993: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007528089336119592
    2. ',C' → logprob: -7.250752925872803
    3. ' ,' → logprob: -10.125752449035645
    4. ',
' → logprob: -13.125752449035645
    5. 'C' → logprob: -14.750752449035645
    6. ',c' → logprob: -15.625752449035645
    7. ',R' → logprob: -16.50075340270996
    8. ',P' → logprob: -17.12575340270996
    9. '   ' → logprob: -17.75075340270996
    10. ',self' → logprob: -17.87575340270996

Token 994: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0002613358374219388
    2. ' C' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.750261306762695
    4. '       ' → logprob: -19.875261306762695
    5. '           ' → logprob: -20.875261306762695
    6. '               ' → logprob: -21.875261306762695
    7. '  ' → logprob: -21.875261306762695
    8. '    ' → logprob: -21.875261306762695
    9. '	C' → logprob: -21.875261306762695
    10. ' ' → logprob: -22.125261306762695

Token 995: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.951771421066951e-05
    2. ' ,' → logprob: -10.750029563903809
    3. 'grid' → logprob: -12.750029563903809
    4. ',C' → logprob: -13.250029563903809
    5. ',
' → logprob: -13.625029563903809
    6. ',self' → logprob: -14.500029563903809
    7. '(grid' → logprob: -14.500029563903809
    8. '       ' → logprob: -14.875029563903809
    9. ' grid' → logprob: -15.875029563903809
    10. '),' → logprob: -15.875029563903809

Token 996: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -1.8624639324116288e-06
    2. ' grid' → logprob: -13.250001907348633
    3. 'C' → logprob: -19.375001907348633
    4. '
' → logprob: -20.875001907348633
    5. '	grid' → logprob: -21.250001907348633
    6. '   ' → logprob: -21.500001907348633
    7. '(grid' → logprob: -22.125001907348633
    8. '.grid' → logprob: -22.375001907348633
    9. '       ' → logprob: -23.125001907348633
    10. 'graph' → logprob: -23.125001907348633

Token 997: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.76628842484206e-05
    2. '))' → logprob: -9.750067710876465
    3. '       ' → logprob: -12.625067710876465
    4. ')
' → logprob: -12.750067710876465
    5. '   ' → logprob: -12.875067710876465
    6. ' )' → logprob: -15.000067710876465
    7. ')))' → logprob: -15.750067710876465
    8. ')`' → logprob: -17.50006675720215
    9. '`)' → logprob: -17.87506675720215
    10. ' ' → logprob: -18.50006675720215

Token 998: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5935397148132324
    2. 'def' → logprob: -0.8435397148132324
    3. '```' → logprob: -4.093539714813232
    4. '
' → logprob: -7.468539714813232
    5. ' def' → logprob: -8.71854019165039
    6. '    
' → logprob: -11.59354019165039
    7. '``' → logprob: -11.84354019165039
    8. '<|end|>' → logprob: -12.34354019165039
    9. '`' → logprob: -13.09354019165039
    10. '	def' → logprob: -13.09354019165039

Token 999: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.759734732331708e-05
    2. '   ' → logprob: -11.000017166137695
    3. ' def' → logprob: -14.250017166137695
    4. '```' → logprob: -15.875017166137695
    5. '	def' → logprob: -18.875017166137695
    6. 'from' → logprob: -19.000017166137695
    7. '
' → logprob: -20.125017166137695
    8. 'import' → logprob: -21.375017166137695
    9. '``' → logprob: -22.375017166137695
    10. '    
' → logprob: -22.875017166137695

Token 1000: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.001616261899471283
    2. 'def' → logprob: -6.501616477966309
    3. ' solve' → logprob: -9.251616477966309
    4. 'maximize' → logprob: -11.251616477966309
    5. 'run' → logprob: -12.376616477966309
    6. ' def' → logprob: -15.126616477966309
    7. 'compute' → logprob: -15.751616477966309
    8. 'process' → logprob: -16.126615524291992
    9. '.solve' → logprob: -17.501615524291992
    10. 'resolve' → logprob: -17.751615524291992

Token 1001: '_all' (ID: 13305)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01108731608837843
    2. '(' → logprob: -4.511087417602539
    3. 'self' → logprob: -10.511087417602539
    4. '(
' → logprob: -11.761087417602539
    5. ' (' → logprob: -13.636087417602539
    6. '_(' → logprob: -13.886087417602539
    7. '   ' → logprob: -14.261087417602539
    8. '()' → logprob: -14.886087417602539
    9. 'def' → logprob: -15.011087417602539
    10. '_' → logprob: -15.386087417602539

Token 1002: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.4987974029500037e-05
    2. '(' → logprob: -10.875024795532227
    3. '   ' → logprob: -12.375024795532227
    4. '(
' → logprob: -14.625024795532227
    5. 'self' → logprob: -15.000024795532227
    6. '       ' → logprob: -15.125024795532227
    7. '```' → logprob: -15.375024795532227
    8. 'def' → logprob: -15.500024795532227
    9. ' (' → logprob: -15.875024795532227
    10. '():
' → logprob: -17.250024795532227

Token 1003: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3600653409957886
    2. '):
' → logprob: -1.3600653409957886
    3. '(self' → logprob: -4.360065460205078
    4. 'self' → logprob: -4.610065460205078
    5. ')(' → logprob: -4.860065460205078
    6. '):' → logprob: -5.110065460205078
    7. '   ' → logprob: -5.735065460205078
    8. ',' → logprob: -5.735065460205078
    9. ')->' → logprob: -6.235065460205078
    10. '       ' → logprob: -7.735065460205078

Token 1004: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015168882673606277
    2. '(' → logprob: -7.001516819000244
    3. '->' → logprob: -8.626517295837402
    4. '   ' → logprob: -9.001517295837402
    5. ' ->' → logprob: -9.126517295837402
    6. '(
' → logprob: -9.501517295837402
    7. 'self' → logprob: -10.251517295837402
    8. '```' → logprob: -10.376517295837402
    9. '       ' → logprob: -10.751517295837402
    10. ':
' → logprob: -11.876517295837402

Token 1005: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.7835754988482222e-05
    2. '[list' → logprob: -11.250018119812012
    3. ' list' → logprob: -12.250018119812012
    4. '   ' → logprob: -17.875017166137695
    5. '(list' → logprob: -18.625017166137695
    6. 'None' → logprob: -18.750017166137695
    7. 'List' → logprob: -19.750017166137695
    8. 'str' → logprob: -20.250017166137695
    9. '[' → logprob: -20.375017166137695
    10. '
' → logprob: -20.500017166137695

Token 1006: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.03664639964699745
    2. '[' → logprob: -3.5366463661193848
    3. '[list' → logprob: -5.411646366119385
    4. '[self' → logprob: -6.411646366119385
    5. '[List' → logprob: -7.786646366119385
    6. '[
' → logprob: -8.036646842956543
    7. ':
' → logprob: -11.786646842956543
    8. '[Int' → logprob: -11.911646842956543
    9. '   ' → logprob: -12.786646842956543
    10. '```' → logprob: -13.036646842956543

Token 1007: ']:
' (ID: 22152)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6134073734283447
    2. '):
' → logprob: -1.4884073734283447
    3. '():
' → logprob: -1.9884073734283447
    4. ']:
' → logprob: -2.9884073734283447
    5. '   ' → logprob: -4.113407135009766
    6. ':
' → logprob: -4.113407135009766
    7. '       ' → logprob: -4.988407135009766
    8. 'self' → logprob: -5.738407135009766
    9. '```' → logprob: -7.738407135009766
    10. ':' → logprob: -7.988407135009766

Token 1008: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001872094871941954
    2. '```' → logprob: -9.625186920166016
    3. 'results' → logprob: -9.750186920166016
    4. 'result' → logprob: -9.875186920166016
    5. ' results' → logprob: -12.125186920166016
    6. '[' → logprob: -13.125186920166016
    7. ' result' → logprob: -14.375186920166016
    8. '
' → logprob: -14.500186920166016
    9. '[
' → logprob: -14.875186920166016
    10. 'outputs' → logprob: -14.875186920166016

Token 1009: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.00040290577453561127
    2. '       ' → logprob: -8.500402450561523
    3. ' results' → logprob: -9.000402450561523
    4. 'result' → logprob: -9.500402450561523
    5. '```' → logprob: -13.875402450561523
    6. 'outputs' → logprob: -16.625402450561523
    7. '	results' → logprob: -16.625402450561523
    8. 'answers' → logprob: -16.625402450561523
    9. '``' → logprob: -17.000402450561523
    10. 'res' → logprob: -17.625402450561523

Token 1010: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2538077235221863
    2. ' =' → logprob: -1.503807783126831
    3. '(self' → logprob: -7.003807544708252
    4. '=[]' → logprob: -7.378807544708252
    5. '[]' → logprob: -9.12880802154541
    6. '   ' → logprob: -9.37880802154541
    7. '(' → logprob: -10.00380802154541
    8. '()' → logprob: -10.25380802154541
    9. '       ' → logprob: -11.00380802154541
    10. 'self' → logprob: -11.00380802154541

Token 1011: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.018155328929424286
    2. '[]
' → logprob: -4.018155097961426
    3. ' []' → logprob: -12.893155097961426
    4. '[' → logprob: -12.893155097961426
    5. '[
' → logprob: -15.393155097961426
    6. '[]

' → logprob: -15.518155097961426
    7. ' []
' → logprob: -17.018156051635742
    8. '[])' → logprob: -18.018156051635742
    9. '[]=' → logprob: -18.768156051635742
    10. '[]"' → logprob: -18.768156051635742

Token 1012: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006467502098530531
    2. ' for' → logprob: -5.756467342376709
    3. '```' → logprob: -6.381467342376709
    4. 'for' → logprob: -6.506467342376709
    5. '<|end|>' → logprob: -10.006467819213867
    6. '
' → logprob: -11.381467819213867
    7. '[' → logprob: -11.881467819213867
    8. '   ' → logprob: -12.506467819213867
    9. '``' → logprob: -12.506467819213867
    10. '        
' → logprob: -12.631467819213867

Token 1013: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0038881960790604353
    2. ' for' → logprob: -5.753888130187988
    3. '       ' → logprob: -7.253888130187988
    4. '```' → logprob: -13.003888130187988
    5. '   ' → logprob: -14.878888130187988
    6. '	for' → logprob: -16.003889083862305
    7. '
' → logprob: -16.503889083862305
    8. '``' → logprob: -18.378889083862305
    9. 'from' → logprob: -18.628889083862305
    10. ' ' → logprob: -20.253889083862305

Token 1014: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.0018846115563064814
    2. ' state' → logprob: -6.751884460449219
    3. 'dataset' → logprob: -7.251884460449219
    4. '   ' → logprob: -12.751884460449219
    5. ' dataset' → logprob: -13.251884460449219
    6. 'data' → logprob: -14.501884460449219
    7. '	state' → logprob: -17.62688446044922
    8. '  ' → logprob: -18.00188446044922
    9. 'ds' → logprob: -18.12688446044922
    10. 'self' → logprob: -18.12688446044922

Token 1015: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02324594371020794
    2. 'in' → logprob: -3.7732460498809814
    3. '	in' → logprob: -14.773245811462402
    4. '_in' → logprob: -16.14824676513672
    5. '   ' → logprob: -18.02324676513672
    6. '       ' → logprob: -18.27324676513672
    7. 'In' → logprob: -18.52324676513672
    8. ' ' → logprob: -18.64824676513672
    9. ',' → logprob: -18.77324676513672
    10. 'state' → logprob: -19.27324676513672

Token 1016: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003178071230649948
    2. ' self' → logprob: -5.753178119659424
    3. '(self' → logprob: -15.253177642822266
    4. 'state' → logprob: -16.003177642822266
    5. '[self' → logprob: -18.878177642822266
    6. '   ' → logprob: -19.253177642822266
    7. '
' → logprob: -19.628177642822266
    8. '       ' → logprob: -19.878177642822266
    9. '	self' → logprob: -19.878177642822266
    10. 'results' → logprob: -20.628177642822266

Token 1017: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -0.0009621966164559126
    2. '.states' → logprob: -7.750962257385254
    3. 'datasets' → logprob: -8.000962257385254
    4. '.results' → logprob: -9.250962257385254
    5. '.initial' → logprob: -10.625962257385254
    6. '.s' → logprob: -10.625962257385254
    7. 'self' → logprob: -11.000962257385254
    8. '.' → logprob: -11.875962257385254
    9. '.self' → logprob: -12.250962257385254
    10. '.sol' → logprob: -12.375962257385254

Token 1018: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20726561546325684
    2. ':' → logprob: -1.9572656154632568
    3. '           ' → logprob: -3.332265615463257
    4. '       ' → logprob: -5.082265853881836
    5. '):
' → logprob: -6.957265853881836
    6. '<|end|>' → logprob: -6.957265853881836
    7. '():
' → logprob: -7.332265853881836
    8. ',' → logprob: -7.707265853881836
    9. '<|end|>' → logprob: -7.707265853881836
    10. ' =' → logprob: -9.207265853881836

Token 1019: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3508612811565399
    2. '           ' → logprob: -1.2258613109588623
    3. '```' → logprob: -6.975861072540283
    4. 'fl' → logprob: -7.100861072540283
    5. '   ' → logprob: -8.725861549377441
    6. '
' → logprob: -9.100861549377441
    7. ' fl' → logprob: -9.225861549377441
    8. '        
' → logprob: -10.475861549377441
    9. ',' → logprob: -10.475861549377441
    10. '<|end|>' → logprob: -10.600861549377441

Token 1020: ' fl' (ID: 1548)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.17012739181518555
    2. 'fl' (adapté à ' fl') → logprob: -1.9201273918151855
    3. ' solver' → logprob: -5.0451273918151855
    4. '       ' → logprob: -5.9201273918151855
    5. ' fl' → logprob: -7.6701273918151855
    6. '           ' → logprob: -8.670127868652344
    7. 'solution' → logprob: -10.545127868652344
    8. '
' → logprob: -11.170127868652344
    9. '```' → logprob: -11.295127868652344
    10. 'sol' → logprob: -11.545127868652344

Token 1021: 'ipper' (ID: 27779)
  Prédit: 'ipper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipper' → logprob: -0.31359001994132996
    2. 'ip' → logprob: -1.3135900497436523
    3. '_ip' → logprob: -8.813590049743652
    4. '_' → logprob: -9.438590049743652
    5. 'ippe' → logprob: -10.438590049743652
    6. 'i' → logprob: -10.563590049743652
    7. 'ipp' → logprob: -11.438590049743652
    8. 'ips' → logprob: -11.438590049743652
    9. 'ippers' → logprob: -12.813590049743652
    10. 'iper' → logprob: -13.188590049743652

Token 1022: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687264919281006
    2. '=' → logprob: -1.13687264919281
    3. '=
' → logprob: -14.761872291564941
    4. '.' → logprob: -15.136872291564941
    5. '   ' → logprob: -15.136872291564941
    6. '＝' → logprob: -15.261872291564941
    7. '        ' → logprob: -16.136873245239258
    8. '       ' → logprob: -16.386873245239258
    9. '.=' → logprob: -16.386873245239258
    10. '<|end|>' → logprob: -17.261873245239258

Token 1023: ' Sen' (ID: 8675)
  Prédit: 'Sen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sen' → logprob: -7.941850526549388e-06
    2. ' Sen' → logprob: -11.750007629394531
    3. 'Sent' → logprob: -17.75000762939453
    4. '           ' → logprob: -19.87500762939453
    5. 'San' → logprob: -20.87500762939453
    6. 'Sam' → logprob: -21.50000762939453
    7. '   ' → logprob: -21.62500762939453
    8. 'Senior' → logprob: -22.12500762939453
    9. '       ' → logprob: -22.37500762939453
    10. 'Ser' → logprob: -22.50000762939453

Token 1024: 'bei' (ID: 36127)
  Prédit: 'bei'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bei' → logprob: -7.314625690924004e-05
    2. 'obei' → logprob: -10.125073432922363
    3. 'abei' → logprob: -10.875073432922363
    4. 'Bei' → logprob: -12.125073432922363
    5. '   ' → logprob: -13.250073432922363
    6. 'be' → logprob: -13.250073432922363
    7. '
' → logprob: -14.000073432922363
    8. ' bei' → logprob: -14.250073432922363
    9. '`' → logprob: -14.500073432922363
    10. '```' → logprob: -14.625073432922363

Token 1025: 'Fl' (ID: 4245)
  Prédit: 'Fl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fl' → logprob: -1.5048530030981055e-06
    2. 'fl' → logprob: -14.125001907348633
    3. '_fl' → logprob: -14.750001907348633
    4. 'Flip' → logprob: -15.875001907348633
    5. ' Fl' → logprob: -16.500001907348633
    6. 'State' → logprob: -17.125001907348633
    7. 'Sen' → logprob: -18.375001907348633
    8. 'state' → logprob: -19.000001907348633
    9. '-Fl' → logprob: -19.125001907348633
    10. '.Fl' → logprob: -19.250001907348633

Token 1026: 'ipper' (ID: 27779)
  Prédit: 'ipper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipper' → logprob: -0.0002407282590866089
    2. 'ip' → logprob: -8.375240325927734
    3. 'iper' → logprob: -12.875240325927734
    4. 'ippe' → logprob: -13.375240325927734
    5. '
' → logprob: -13.500240325927734
    6. 'pper' → logprob: -13.500240325927734
    7. 'i' → logprob: -14.250240325927734
    8. 'Ip' → logprob: -14.500240325927734
    9. '_ip' → logprob: -15.125240325927734
    10. '_' → logprob: -15.500240325927734

Token 1027: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -2.45848218582978e-06
    2. 'state' → logprob: -13.37500286102295
    3. '(S' → logprob: -14.25000286102295
    4. '(self' → logprob: -16.625001907348633
    5. '(' → logprob: -16.875001907348633
    6. '[state' → logprob: -17.625001907348633
    7. ',state' → logprob: -17.875001907348633
    8. '(State' → logprob: -18.250001907348633
    9. '(s' → logprob: -18.625001907348633
    10. ' state' → logprob: -18.750001907348633

Token 1028: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6933667063713074
    2. ')
' → logprob: -0.6933667063713074
    3. '           ' → logprob: -8.568367004394531
    4. ').' → logprob: -10.818367004394531
    5. '       ' → logprob: -12.318367004394531
    6. ')
' → logprob: -13.318367004394531
    7. '())
' → logprob: -14.068367004394531
    8. '   ' → logprob: -14.318367004394531
    9. ' )
' → logprob: -14.818367004394531
    10. '               ' → logprob: -15.068367004394531

Token 1029: '           ' (ID: 352)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.2161879539489746
    2. '           ' → logprob: -1.7161879539489746
    3. 'result' → logprob: -4.966187953948975
    4. ' results' → logprob: -4.966187953948975
    5. '       ' → logprob: -8.216188430786133
    6. '	results' → logprob: -8.591188430786133
    7. '
' → logprob: -9.841188430786133
    8. '   ' → logprob: -10.091188430786133
    9. '<|end|>' → logprob: -10.591188430786133
    10. '(results' → logprob: -10.716188430786133

Token 1030: ' result' (ID: 1534)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0009177703177556396
    2. 'result' (adapté à ' result') → logprob: -7.000917911529541
    3. ' results' → logprob: -12.000917434692383
    4. '           ' → logprob: -16.000917434692383
    5. 'max' → logprob: -17.125917434692383
    6. '
' → logprob: -17.250917434692383
    7. '	results' → logprob: -19.125917434692383
    8. '```' → logprob: -19.625917434692383
    9. 'res' → logprob: -19.750917434692383
    10. ' result' → logprob: -19.750917434692383

Token 1031: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132745921611786
    2. ' =' → logprob: -1.313274621963501
    3. '.' → logprob: -11.688274383544922
    4. '.=' → logprob: -13.188274383544922
    5. '=result' → logprob: -13.688274383544922
    6. '.append' → logprob: -14.063274383544922
    7. '   ' → logprob: -15.313274383544922
    8. ')' → logprob: -16.438274383544922
    9. ' ' → logprob: -16.438274383544922
    10. '=max' → logprob: -17.188274383544922

Token 1032: ' fl' (ID: 1548)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -1.676292231422849e-05
    2. ' fl' → logprob: -11.000017166137695
    3. '	fl' → logprob: -18.500017166137695
    4. '           ' → logprob: -19.375017166137695
    5. 'flake' → logprob: -21.750017166137695
    6. 'flip' → logprob: -22.000017166137695
    7. 'flu' → logprob: -22.000017166137695
    8. 'f' → logprob: -22.875017166137695
    9. '(fl' → logprob: -22.875017166137695
    10. 'fr' → logprob: -23.000017166137695

Token 1033: 'ipper' (ID: 27779)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.4749770164489746
    2. 'ipper' → logprob: -0.9749770164489746
    3. 'ips' → logprob: -7.724977016448975
    4. 'iper' → logprob: -8.099977493286133
    5. 'ipped' → logprob: -9.974977493286133
    6. 'result' → logprob: -10.099977493286133
    7. 'p' → logprob: -11.224977493286133
    8. '_ip' → logprob: -11.474977493286133
    9. '       ' → logprob: -11.974977493286133
    10. 'ippe' → logprob: -12.349977493286133

Token 1034: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -7.76759916334413e-05
    2. 'maximize' → logprob: -9.500077247619629
    3. 'max' → logprob: -13.625077247619629
    4. '.' → logprob: -14.375077247619629
    5. ' .' → logprob: -15.000077247619629
    6. '.Max' → logprob: -15.500077247619629
    7. ' maximize' → logprob: -15.875077247619629
    8. ',max' → logprob: -16.125078201293945
    9. '.maximum' → logprob: -16.750078201293945
    10. '.optimize' → logprob: -17.375078201293945

Token 1035: 'imize' (ID: 16368)
  Prédit: 'imize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imize' → logprob: -0.076420359313488
    2. '_sh' → logprob: -2.701420307159424
    3. 'ize' → logprob: -5.326420307159424
    4. 'ax' → logprob: -7.701420307159424
    5. 'im' → logprob: -7.951420307159424
    6. '_' → logprob: -8.826420783996582
    7. '_ship' → logprob: -9.201420783996582
    8. 'a' → logprob: -9.451420783996582
    9. 'imized' → logprob: -10.076420783996582
    10. 'maximize' → logprob: -10.451420783996582

Token 1036: '_sh' (ID: 8823)
  Prédit: '_sh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sh' → logprob: -3.070975071750581e-05
    2. 'shipment' → logprob: -10.500030517578125
    3. '_s' → logprob: -13.750030517578125
    4. 'max' → logprob: -14.875030517578125
    5. '
' → logprob: -14.875030517578125
    6. 'sh' → logprob: -15.000030517578125
    7. '_shipping' → logprob: -15.250030517578125
    8. '_ship' → logprob: -15.750030517578125
    9. 's' → logprob: -16.000030517578125
    10. '\' → logprob: -16.250030517578125

Token 1037: 'ipment' (ID: 6219)
  Prédit: 'ipment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipment' → logprob: -0.00011033779446734115
    2. 'ip' → logprob: -9.125110626220703
    3. 'IPMENT' → logprob: -13.875110626220703
    4. 'ipt' → logprob: -16.250110626220703
    5. 'p' → logprob: -16.500110626220703
    6. 'Shipment' → logprob: -16.750110626220703
    7. 'shipment' → logprob: -16.750110626220703
    8. 'ippet' → logprob: -17.125110626220703
    9. 'ipation' → logprob: -17.250110626220703
    10. 'ipped' → logprob: -17.750110626220703

Token 1038: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2866881191730499
    2. '()
' → logprob: -2.0366880893707275
    3. '()' → logprob: -2.1616880893707275
    4. '.append' → logprob: -7.286688327789307
    5. 'results' → logprob: -7.411688327789307
    6. '(results' → logprob: -7.536688327789307
    7. '<|end|>' → logprob: -7.536688327789307
    8. '<|end|>' → logprob: -8.536687850952148
    9. '();' → logprob: -8.661687850952148
    10. ')' → logprob: -8.661687850952148

Token 1039: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00028493450372479856
    2. '```' → logprob: -9.625285148620605
    3. '<|end|>' → logprob: -9.875285148620605
    4. '       ' → logprob: -10.250285148620605
    5. 'results' → logprob: -10.500285148620605
    6. '<|end|>' → logprob: -10.875285148620605
    7. '            
' → logprob: -10.875285148620605
    8. '(results' → logprob: -11.000285148620605
    9. '
' → logprob: -11.375285148620605
    10. '               ' → logprob: -12.250285148620605

Token 1040: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.0056637865491211414
    2. '           ' → logprob: -5.255663871765137
    3. ' results' → logprob: -7.755663871765137
    4. '	results' → logprob: -14.005663871765137
    5. '       ' → logprob: -14.880663871765137
    6. '.results' → logprob: -16.00566291809082
    7. '(results' → logprob: -16.50566291809082
    8. 'result' → logprob: -16.75566291809082
    9. '_results' → logprob: -17.13066291809082
    10. '   ' → logprob: -17.63066291809082

Token 1041: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001617035741219297
    2. '.' → logprob: -8.750162124633789
    3. '.app' → logprob: -13.125162124633789
    4. '.extend' → logprob: -14.500162124633789
    5. 'append' → logprob: -15.250162124633789
    6. '.push' → logprob: -16.12516212463379
    7. '.ap' → logprob: -16.37516212463379
    8. '_append' → logprob: -16.50016212463379
    9. '.add' → logprob: -16.62516212463379
    10. '.Append' → logprob: -17.00016212463379

Token 1042: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0005533903022296727
    2. 'result' → logprob: -7.500553607940674
    3. '(' → logprob: -14.875553131103516
    4. ' result' → logprob: -16.875553131103516
    5. '(
' → logprob: -18.125553131103516
    6. '=result' → logprob: -18.500553131103516
    7. '	result' → logprob: -20.750553131103516
    8. ',result' → logprob: -21.000553131103516
    9. '[result' → logprob: -21.250553131103516
    10. '(results' → logprob: -21.500553131103516

Token 1043: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12711887061595917
    2. ')
' → logprob: -2.1271188259124756
    3. '       ' → logprob: -8.627119064331055
    4. ')return' → logprob: -12.377119064331055
    5. ')
' → logprob: -12.877119064331055
    6. '           ' → logprob: -13.502119064331055
    7. '
' → logprob: -13.627119064331055
    8. '   ' → logprob: -14.877119064331055
    9. ')`
' → logprob: -15.127119064331055
    10. ')

' → logprob: -15.502119064331055

Token 1044: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1066250205039978
    2. '
' → logprob: -2.8566250801086426
    3. 'return' → logprob: -3.6066250801086426
    4. '```' → logprob: -4.481625080108643
    5. '           ' → logprob: -6.606625080108643
    6. '	return' → logprob: -6.981625080108643
    7. '   ' → logprob: -7.356625080108643
    8. ' return' → logprob: -7.356625080108643
    9. '<|end|>' → logprob: -7.981625080108643
    10. '\' → logprob: -8.106624603271484

Token 1045: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.21929384768009186
    2. '       ' → logprob: -1.7192938327789307
    3. '
' → logprob: -4.21929407119751
    4. '   ' → logprob: -6.21929407119751
    5. ' return' → logprob: -7.34429407119751
    6. '	return' → logprob: -8.219293594360352
    7. '```' → logprob: -9.594293594360352
    8. '           ' → logprob: -10.969293594360352
    9. '        
' → logprob: -11.844293594360352
    10. '	' → logprob: -12.844293594360352

Token 1046: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0001584850688232109
    2. ' results' → logprob: -8.750158309936523
    3. '	results' → logprob: -21.000158309936523
    4. '(results' → logprob: -22.000158309936523
    5. '[' → logprob: -22.000158309936523
    6. '.results' → logprob: -24.125158309936523
    7. 'result' → logprob: -24.375158309936523
    8. '_results' → logprob: -26.500158309936523
    9. 'Results' → logprob: -26.625158309936523
    10. '```' → logprob: -28.000158309936523

Token 1047: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1048: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4841137230396271
    2. 'def' → logprob: -0.9841136932373047
    3. '```' → logprob: -5.359113693237305
    4. 'if' → logprob: -5.859113693237305
    5. '<|end|>' → logprob: -6.484113693237305
    6. 'import' → logprob: -7.109113693237305
    7. '<|end|>' → logprob: -10.859113693237305
    8. '[' → logprob: -11.359113693237305
    9. '
' → logprob: -11.859113693237305
    10. 'from' → logprob: -11.859113693237305

Token 1049: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00023524489370174706
    2. 'main' → logprob: -9.250235557556152
    3. ' parse' → logprob: -9.375235557556152
    4. ' solve' → logprob: -10.375235557556152
    5. ' run' → logprob: -11.000235557556152
    6. ' read' → logprob: -12.125235557556152
    7. ' process' → logprob: -14.875235557556152
    8. ' example' → logprob: -15.375235557556152
    9. ' solution' → logprob: -15.375235557556152
    10. ' test' → logprob: -15.625235557556152

Token 1050: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0001617035741219297
    2. '():
' → logprob: -8.750162124633789
    3. '()' → logprob: -13.125162124633789
    4. ' ():' → logprob: -13.750162124633789
    5. '():
' → logprob: -16.37516212463379
    6. '():

' → logprob: -17.25016212463379
    7. 'def' → logprob: -17.50016212463379
    8. '()>' → logprob: -17.75016212463379
    9. '();' → logprob: -18.25016212463379
    10. '()">' → logprob: -18.37516212463379

Token 1051: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5147365927696228
    2. ' import' → logprob: -1.2647366523742676
    3. '   ' → logprob: -2.1397366523742676
    4. '```' → logprob: -6.139736652374268
    5. '	import' → logprob: -9.51473617553711
    6. 'n' → logprob: -10.51473617553711
    7. 'input' → logprob: -11.01473617553711
    8. ' input' → logprob: -11.26473617553711
    9. 'from' → logprob: -11.38973617553711
    10. ' n' → logprob: -11.63973617553711

Token 1052: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.13085433840751648
    2. 'import' (adapté à ' import') → logprob: -2.130854368209839
    3. '   ' → logprob: -6.13085412979126
    4. ' n' → logprob: -6.75585412979126
    5. 'n' → logprob: -7.50585412979126
    6. ' R' → logprob: -11.880854606628418
    7. 't' → logprob: -12.130854606628418
    8. '```' → logprob: -12.380854606628418
    9. ' t' → logprob: -12.630854606628418
    10. ' T' → logprob: -13.005854606628418

Token 1053: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -3.7697225252486533e-06
    2. ' sys' → logprob: -12.500003814697266
    3. '=sys' → logprob: -19.000003814697266
    4. 'io' → logprob: -20.750003814697266
    5. '(sys' → logprob: -21.750003814697266
    6. '	sys' → logprob: -22.250003814697266
    7. '_sys' → logprob: -23.125003814697266
    8. '```' → logprob: -23.375003814697266
    9. '.sys' → logprob: -23.625003814697266
    10. 'stdin' → logprob: -23.875003814697266

Token 1054: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2807925045490265
    2. 'input' → logprob: -1.655792474746704
    3. ' input' → logprob: -3.780792474746704
    4. '
' → logprob: -4.655792713165283
    5. ' lines' → logprob: -4.655792713165283
    6. ' readline' → logprob: -5.280792713165283
    7. 'data' → logprob: -6.030792713165283
    8. '```' → logprob: -6.280792713165283
    9. 'n' → logprob: -7.030792713165283
    10. 'for' → logprob: -7.405792713165283

Token 1055: '   ' (ID: 271)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05982986465096474
    2. '   ' → logprob: -3.0598299503326416
    3. ' input' → logprob: -4.5598297119140625
    4. 'n' → logprob: -7.9348297119140625
    5. 'data' → logprob: -8.559829711914062
    6. 'lines' → logprob: -9.184829711914062
    7. ' lines' → logprob: -11.184829711914062
    8. '```' → logprob: -11.559829711914062
    9. 'read' → logprob: -11.684829711914062
    10. 'def' → logprob: -11.934829711914062

Token 1056: ' solver' (ID: 63271)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0003119863977190107
    2. ' input' → logprob: -8.750311851501465
    3. 'lines' → logprob: -9.250311851501465
    4. '   ' → logprob: -10.125311851501465
    5. 'read' → logprob: -11.625311851501465
    6. 'data' → logprob: -12.250311851501465
    7. ' readline' → logprob: -14.250311851501465
    8. ' lines' → logprob: -14.375311851501465
    9. 'reader' → logprob: -14.625311851501465
    10. 'N' → logprob: -14.625311851501465

Token 1057: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6331722140312195
    2. '=' → logprob: -0.7581722140312195
    3. '.' → logprob: -7.883172035217285
    4. '   ' → logprob: -9.008172035217285
    5. '.py' → logprob: -10.258172035217285
    6. '()' → logprob: -11.508172035217285
    7. '.=' → logprob: -12.258172035217285
    8. ' ' → logprob: -12.383172035217285
    9. '=s' → logprob: -12.633172035217285
    10. '=
' → logprob: -13.133172035217285

Token 1058: ' Sen' (ID: 8675)
  Prédit: 'Sen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sen' → logprob: -2.339278580620885e-06
    2. ' Sen' → logprob: -13.000001907348633
    3. 'Sent' → logprob: -18.000001907348633
    4. 'S' → logprob: -20.000001907348633
    5. 'Sam' → logprob: -20.875001907348633
    6. 'San' → logprob: -20.875001907348633
    7. 'Ser' → logprob: -21.250001907348633
    8. 'Senior' → logprob: -21.750001907348633
    9. '```' → logprob: -22.500001907348633
    10. 'Sol' → logprob: -22.625001907348633

Token 1059: 'bei' (ID: 36127)
  Prédit: 'bei'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bei' → logprob: -1.6286106983898208e-05
    2. 'abei' → logprob: -11.625016212463379
    3. 'Bei' → logprob: -12.875016212463379
    4. 'obei' → logprob: -12.875016212463379
    5. 'be' → logprob: -13.875016212463379
    6. 'beit' → logprob: -15.875016212463379
    7. 'sei' → logprob: -16.125017166137695
    8. '```' → logprob: -16.125017166137695
    9. '   ' → logprob: -16.250017166137695
    10. 'bein' → logprob: -16.250017166137695

Token 1060: 'Problem' (ID: 36177)
  Prédit: 'Problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -5.872261317563243e-05
    2. 'Fl' → logprob: -9.750059127807617
    3. '_problem' → logprob: -15.750059127807617
    4. 'problem' → logprob: -16.125059127807617
    5. ' Problem' → logprob: -16.750059127807617
    6. 'Solver' → logprob: -17.125059127807617
    7. ' problem' → logprob: -18.375059127807617
    8. 'Solution' → logprob: -19.375059127807617
    9. 'fl' → logprob: -19.625059127807617
    10. 'Proble' → logprob: -19.875059127807617

Token 1061: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.0009187239338643849
    2. 'solver' → logprob: -7.000918865203857
    3. '_solver' → logprob: -12.2509183883667
    4. ' solver' → logprob: -13.2509183883667
    5. 'olver' → logprob: -15.2509183883667
    6. ' Solver' → logprob: -15.3759183883667
    7. 'Sol' → logprob: -16.125919342041016
    8. 's' → logprob: -17.625919342041016
    9. '   ' → logprob: -17.625919342041016
    10. 'Solve' → logprob: -18.125919342041016

Token 1062: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11670665442943573
    2. '
' → logprob: -2.366706609725952
    3. '    
' → logprob: -4.741706848144531
    4. 'for' → logprob: -4.991706848144531
    5. ' for' → logprob: -7.741706848144531
    6. 'data' → logprob: -9.116706848144531
    7. 'input' → logprob: -9.366706848144531
    8. 'import' → logprob: -9.616706848144531
    9. 'while' → logprob: -10.116706848144531
    10. '<|end|>' → logprob: -10.741706848144531

Token 1063: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018817342817783356
    2. ' for' → logprob: -4.64381742477417
    3. 'for' → logprob: -4.76881742477417
    4. ' lines' → logprob: -8.018816947937012
    5. '
' → logprob: -9.393816947937012
    6. '```' → logprob: -10.018816947937012
    7. '    
' → logprob: -10.393816947937012
    8. 'input' → logprob: -11.143816947937012
    9. ' input' → logprob: -11.268816947937012
    10. ' readline' → logprob: -11.893816947937012

Token 1064: ' lines' (ID: 8698)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01476555410772562
    2. '   ' → logprob: -4.514765739440918
    3. ' for' → logprob: -5.764765739440918
    4. 'lines' (adapté à ' lines') → logprob: -7.514765739440918
    5. ' lines' → logprob: -10.639765739440918
    6. '```' → logprob: -12.764765739440918
    7. 'line' → logprob: -13.264765739440918
    8. 'input' → logprob: -14.764765739440918
    9. '	for' → logprob: -15.514765739440918
    10. '    
' → logprob: -16.0147647857666

Token 1065: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31597086787223816
    2. ' =' → logprob: -1.3159708976745605
    3. '   ' → logprob: -5.9409708976745605
    4. '=line' → logprob: -9.940970420837402
    5. '=
' → logprob: -11.940970420837402
    6. 'for' → logprob: -12.190970420837402
    7. '=[]' → logprob: -13.440970420837402
    8. '	' → logprob: -13.565970420837402
    9. '=input' → logprob: -13.565970420837402
    10. '_line' → logprob: -13.565970420837402

Token 1066: ' iter' (ID: 10621)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0067182136699557304
    2. ' sys' → logprob: -5.006718158721924
    3. '[' → logprob: -12.881718635559082
    4. '(sys' → logprob: -16.131717681884766
    5. 'list' → logprob: -16.131717681884766
    6. ' [' → logprob: -16.631717681884766
    7. '=sys' → logprob: -16.631717681884766
    8. '	sys' → logprob: -17.631717681884766
    9. '   ' → logprob: -18.631717681884766
    10. '[]' → logprob: -19.131717681884766

Token 1067: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -2.696889623621246e-06
    2. '(input' → logprob: -14.12500286102295
    3. '=sys' → logprob: -14.12500286102295
    4. 'sys' → logprob: -14.25000286102295
    5. '(' → logprob: -16.375001907348633
    6. '	sys' → logprob: -16.500001907348633
    7. ' sys' → logprob: -16.500001907348633
    8. '(stdin' → logprob: -16.500001907348633
    9. '(Sys' → logprob: -16.875001907348633
    10. '```' → logprob: -17.000001907348633

Token 1068: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.3358446166384965e-05
    2. '.argv' → logprob: -10.500053405761719
    3. 'stdin' → logprob: -11.625053405761719
    4. '.stdout' → logprob: -11.750053405761719
    5. '.' → logprob: -12.000053405761719
    6. '(stdin' → logprob: -13.250053405761719
    7. '.std' → logprob: -14.500053405761719
    8. '```' → logprob: -16.12505340576172
    9. ' stdin' → logprob: -16.50005340576172
    10. ' .' → logprob: -16.62505340576172

Token 1069: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.14829212427139282
    2. ')' → logprob: -2.648292064666748
    3. '.readlines' → logprob: -3.273292064666748
    4. '())' → logprob: -4.148292064666748
    5. '()' → logprob: -5.023292064666748
    6. '())
' → logprob: -5.523292064666748
    7. ')
' → logprob: -6.398292064666748
    8. '()
' → logprob: -7.898292064666748
    9. '().' → logprob: -8.148292541503906
    10. '.' → logprob: -8.773292541503906

Token 1070: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0004267428594175726
    2. '()' → logprob: -8.000426292419434
    3. '())' → logprob: -9.375426292419434
    4. '()
' → logprob: -13.000426292419434
    5. '())
' → logprob: -13.250426292419434
    6. '(' → logprob: -13.875426292419434
    7. '()[' → logprob: -14.625426292419434
    8. ' ().' → logprob: -15.500426292419434
    9. '()).' → logprob: -15.750426292419434
    10. '().
' → logprob: -15.875426292419434

Token 1071: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.583642303943634
    2. 'lines' → logprob: -0.833642303943634
    3. 'strip' → logprob: -4.958642482757568
    4. '().' → logprob: -7.583642482757568
    5. 'read' → logprob: -10.33364200592041
    6. 'decode' → logprob: -10.58364200592041
    7. 'line' → logprob: -10.70864200592041
    8. ' lines' → logprob: -10.95864200592041
    9. '_lines' → logprob: -10.95864200592041
    10. 'rstrip' → logprob: -11.95864200592041

Token 1072: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.107425062713446e-06
    2. '()' → logprob: -12.125006675720215
    3. '('\' → logprob: -13.750006675720215
    4. '()
' → logprob: -15.625006675720215
    5. 'split' → logprob: -16.25000762939453
    6. '()\' → logprob: -16.25000762939453
    7. '.split' → logprob: -17.25000762939453
    8. '(' → logprob: -19.37500762939453
    9. '())' → logprob: -19.50000762939453
    10. '().
' → logprob: -19.62500762939453

Token 1073: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.572941179503687e-05
    2. 'lines' → logprob: -10.000045776367188
    3. ' split' → logprob: -15.625045776367188
    4. '(split' → logprob: -16.000045776367188
    5. '.split' → logprob: -19.500045776367188
    6. 'strip' → logprob: -19.875045776367188
    7. 'spl' → logprob: -20.000045776367188
    8. '```' → logprob: -20.375045776367188
    9. '().' → logprob: -21.125045776367188
    10. 'read' → logprob: -21.375045776367188

Token 1074: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.04375153407454491
    2. '()' → logprob: -3.5437514781951904
    3. 'lines' → logprob: -4.2937517166137695
    4. '("\' → logprob: -9.16875171661377
    5. '()\' → logprob: -9.29375171661377
    6. '()
' → logprob: -10.66875171661377
    7. '())' → logprob: -10.91875171661377
    8. ''\' → logprob: -12.54375171661377
    9. '()[' → logprob: -12.91875171661377
    10. '(' → logprob: -13.16875171661377

Token 1075: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1606598198413849
    2. '\n' → logprob: -1.9106597900390625
    3. '```' → logprob: -8.410659790039062
    4. 'newline' → logprob: -9.285659790039062
    5. '\' → logprob: -10.035659790039062
    6. '
' → logprob: -10.285659790039062
    7. ''\' → logprob: -11.535659790039062
    8. 'ndef' → logprob: -11.785659790039062
    9. '``' → logprob: -12.035659790039062
    10. '\
' → logprob: -12.660659790039062

Token 1076: ''))
' (ID: 15277)
  Prédit: ''))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))
' → logprob: -0.02376307174563408
    2. ''))' → logprob: -3.7737631797790527
    3. ')' → logprob: -8.523762702941895
    4. '))
' → logprob: -9.023762702941895
    5. ''))
' → logprob: -9.398762702941895
    6. ''))

' → logprob: -9.648762702941895
    7. '))' → logprob: -10.648762702941895
    8. '')' → logprob: -11.273762702941895
    9. '   ' → logprob: -11.773762702941895
    10. ')')
' → logprob: -13.148762702941895

Token 1077: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06434380263090134
    2. 'while' → logprob: -2.8143436908721924
    3. ' while' → logprob: -6.5643439292907715
    4. 'for' → logprob: -7.0643439292907715
    5. ' for' → logprob: -10.189343452453613
    6. '```' → logprob: -10.189343452453613
    7. 'try' → logprob: -11.064343452453613
    8. '    
' → logprob: -12.314343452453613
    9. 'n' → logprob: -12.439343452453613
    10. 'line' → logprob: -12.564343452453613

Token 1078: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.13175104558467865
    2. '   ' → logprob: -2.13175106048584
    3. 'for' → logprob: -5.38175106048584
    4. ' while' → logprob: -9.00675106048584
    5. 'try' → logprob: -9.38175106048584
    6. '```' → logprob: -13.25675106048584
    7. 'n' → logprob: -13.38175106048584
    8. ' for' → logprob: -14.00675106048584
    9. '	while' → logprob: -14.88175106048584
    10. 'line' → logprob: -16.381750106811523

Token 1079: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0009196776081807911
    2. ' True' → logprob: -7.000919818878174
    3. '(True' → logprob: -11.750919342041016
    4. 'true' → logprob: -15.375919342041016
    5. '
' → logprob: -16.500919342041016
    6. 'TRUE' → logprob: -17.125919342041016
    7. '   ' → logprob: -17.250919342041016
    8. '=True' → logprob: -17.625919342041016
    9. '1' → logprob: -18.500919342041016
    10. '_true' → logprob: -19.750919342041016

Token 1080: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10267973691225052
    2. ':' → logprob: -2.35267972946167
    3. ':
' → logprob: -6.47767972946167
    4. '   ' → logprob: -7.10267972946167
    5. 'try' → logprob: -10.352680206298828
    6. ',' → logprob: -10.602680206298828
    7. '	   ' → logprob: -12.102680206298828
    8. '```' → logprob: -12.477680206298828
    9. '():' → logprob: -12.477680206298828
    10. '=' → logprob: -12.602680206298828

Token 1081: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39207926392555237
    2. '   ' → logprob: -1.14207923412323
    3. 'try' → logprob: -5.2670793533325195
    4. ' try' → logprob: -11.14207935333252
    5. '```' → logprob: -11.39207935333252
    6. 'line' → logprob: -12.39207935333252
    7. '	try' → logprob: -12.76707935333252
    8. '   ' → logprob: -13.51707935333252
    9. '	   ' → logprob: -14.51707935333252
    10. '           ' → logprob: -14.76707935333252

Token 1082: ' try' (ID: 2075)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.006917364429682493
    2. 'try' (adapté à ' try') → logprob: -5.256917476654053
    3. '   ' → logprob: -7.006917476654053
    4. 'n' → logprob: -7.881917476654053
    5. ' line' → logprob: -8.131916999816895
    6. 'N' → logprob: -10.006916999816895
    7. 'header' → logprob: -10.381916999816895
    8. 'length' → logprob: -11.881916999816895
    9. 'size' → logprob: -11.881916999816895
    10. '	line' → logprob: -12.256916999816895

Token 1083: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7819240093231201
    2. '           ' → logprob: -0.9069240093231201
    3. ':
' → logprob: -2.03192400932312
    4. '       ' → logprob: -4.906924247741699
    5. ' :' → logprob: -9.4069242477417
    6. '   ' → logprob: -10.7819242477417
    7. '):
' → logprob: -11.1569242477417
    8. '        ' → logprob: -11.4069242477417
    9. ' line' → logprob: -11.4069242477417
    10. '```' → logprob: -11.5319242477417

Token 1084: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10405898839235306
    2. '       ' → logprob: -2.3540589809417725
    3. 'line' → logprob: -6.229059219360352
    4. ' line' → logprob: -6.604059219360352
    5. '   ' → logprob: -7.729059219360352
    6. '	line' → logprob: -10.479059219360352
    7. '#line' → logprob: -11.354059219360352
    8. '(line' → logprob: -11.979059219360352
    9. 'row' → logprob: -12.229059219360352
    10. 'n' → logprob: -12.354059219360352

Token 1085: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.006709212902933359
    2. 'N' → logprob: -5.881709098815918
    3. ' line' → logprob: -6.881709098815918
    4. 'n' → logprob: -7.131709098815918
    5. 'R' → logprob: -7.256709098815918
    6. '   ' → logprob: -7.631709098815918
    7. '       ' → logprob: -7.756709098815918
    8. '           ' → logprob: -8.256709098815918
    9. 'header' → logprob: -9.756709098815918
    10. 'raw' → logprob: -10.131709098815918

Token 1086: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05089477822184563
    2. '=' → logprob: -3.0508947372436523
    3. '           ' → logprob: -6.550894737243652
    4. '       ' → logprob: -7.175894737243652
    5. '   ' → logprob: -10.175894737243652
    6. '=line' → logprob: -10.425894737243652
    7. '        ' → logprob: -11.425894737243652
    8. ':' → logprob: -12.300894737243652
    9. 'tokens' → logprob: -12.425894737243652
    10. '               ' → logprob: -12.425894737243652

Token 1087: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.16033004224300385
    2. ' next' → logprob: -1.910330057144165
    3. 'lines' → logprob: -9.660329818725586
    4. ' lines' → logprob: -10.660329818725586
    5. 'line' → logprob: -11.035329818725586
    6. ' line' → logprob: -13.660329818725586
    7. '(next' → logprob: -13.910329818725586
    8. '.next' → logprob: -14.910329818725586
    9. 'input' → logprob: -16.535329818725586
    10. '           ' → logprob: -17.285329818725586

Token 1088: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.0067201098427176476
    2. 'lines' → logprob: -5.006720066070557
    3. ' lines' → logprob: -12.756720542907715
    4. '	lines' → logprob: -13.506720542907715
    5. '(line' → logprob: -14.881720542907715
    6. 'line' → logprob: -16.0067195892334
    7. '(
' → logprob: -16.8817195892334
    8. '(' → logprob: -16.8817195892334
    9. '_lines' → logprob: -17.3817195892334
    10. '.lines' → logprob: -18.8817195892334

Token 1089: ')
' (ID: 446)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.6207360029220581
    2. ')' → logprob: -0.8707360029220581
    3. '().' → logprob: -3.8707361221313477
    4. ')
' → logprob: -4.495736122131348
    5. '       ' → logprob: -5.370736122131348
    6. '()
' → logprob: -5.870736122131348
    7. '()' → logprob: -6.245736122131348
    8. '.strip' → logprob: -6.995736122131348
    9. '()).' → logprob: -7.245736122131348
    10. '())' → logprob: -8.245736122131348

Token 1090: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06998701393604279
    2. '           ' → logprob: -2.6949870586395264
    3. 'if' → logprob: -11.069987297058105
    4. '   ' → logprob: -11.194987297058105
    5. '        
' → logprob: -11.694987297058105
    6. ' if' → logprob: -11.944987297058105
    7. '```' → logprob: -13.444987297058105
    8. '
' → logprob: -14.319987297058105
    9. '	       ' → logprob: -14.569987297058105
    10. '            
' → logprob: -14.569987297058105

Token 1091: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005571797955781221
    2. 'if' (adapté à ' if') → logprob: -5.3805718421936035
    3. ' if' → logprob: -7.2555718421936035
    4. '       ' → logprob: -8.380571365356445
    5. '
' → logprob: -12.130571365356445
    6. 'r' → logprob: -12.630571365356445
    7. 'n' → logprob: -13.255571365356445
    8. 'R' → logprob: -13.630571365356445
    9. '		' → logprob: -14.255571365356445
    10. '   ' → logprob: -14.255571365356445

Token 1092: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.06519176810979843
    2. 'not' → logprob: -2.8151917457580566
    3. 'line' → logprob: -6.315191745758057
    4. ' line' → logprob: -6.565191745758057
    5. '   ' → logprob: -13.440192222595215
    6. '#line' → logprob: -16.0651912689209
    7. '           ' → logprob: -16.5651912689209
    8. '(line' → logprob: -16.8151912689209
    9. '=line' → logprob: -17.4401912689209
    10. '       ' → logprob: -17.6901912689209

Token 1093: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.7610454708337784e-05
    2. ' line' → logprob: -10.500027656555176
    3. '(line' → logprob: -20.25002670288086
    4. '	line' → logprob: -20.50002670288086
    5. '#line' → logprob: -20.62502670288086
    6. 'lin' → logprob: -22.12502670288086
    7. '
' → logprob: -22.12502670288086
    8. '=line' → logprob: -22.50002670288086
    9. 'li' → logprob: -23.12502670288086
    10. 'l' → logprob: -23.50002670288086

Token 1094: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.011918602511286736
    2. '.' → logprob: -4.636918544769287
    3. ':
' → logprob: -6.886918544769287
    4. ':' → logprob: -7.136918544769287
    5. '.startswith' → logprob: -8.761919021606445
    6. ' or' → logprob: -9.011919021606445
    7. '               ' → logprob: -10.886919021606445
    8. '   ' → logprob: -11.136919021606445
    9. '       ' → logprob: -11.386919021606445
    10. 'strip' → logprob: -12.386919021606445

Token 1095: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -1.1263340711593628
    2. ':' → logprob: -1.2513340711593628
    3. ':
' → logprob: -1.3763340711593628
    4. '():' → logprob: -2.3763341903686523
    5. ' or' → logprob: -4.001334190368652
    6. '               ' → logprob: -4.126334190368652
    7. '()' → logprob: -5.001334190368652
    8. '==' → logprob: -7.376334190368652
    9. '().' → logprob: -7.751334190368652
    10. ':return' → logprob: -7.751334190368652

Token 1096: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.703443770878948e-06
    2. ':' → logprob: -12.625007629394531
    3. ':
' → logprob: -13.500007629394531
    4. '           ' → logprob: -13.625007629394531
    5. '                   ' → logprob: -14.000007629394531
    6. 'continue' → logprob: -15.125007629394531
    7. '              ' → logprob: -15.375007629394531
    8. ' continue' → logprob: -15.875007629394531
    9. '	           ' → logprob: -16.25000762939453
    10. '                       ' → logprob: -16.62500762939453

Token 1097: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0044610933400690556
    2. 'continue' (adapté à ' continue') → logprob: -6.004461288452148
    3. 'break' → logprob: -6.254461288452148
    4. '                   ' → logprob: -10.254461288452148
    5. ' continue' → logprob: -11.254461288452148
    6. '           ' → logprob: -12.004461288452148
    7. ' break' → logprob: -12.129461288452148
    8. '   ' → logprob: -13.254461288452148
    9. '       ' → logprob: -17.00446128845215
    10. '	break' → logprob: -17.37946128845215

Token 1098: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.3795937522663735e-05
    2. '            
' → logprob: -11.00002384185791
    3. '<|end|>' → logprob: -12.75002384185791
    4. '               ' → logprob: -13.75002384185791
    5. '       ' → logprob: -13.87502384185791
    6. '
' → logprob: -14.00002384185791
    7. '          ' → logprob: -14.62502384185791
    8. ',' → logprob: -15.37502384185791
    9. '<|end|>' → logprob: -15.62502384185791
    10. '```' → logprob: -16.625022888183594

Token 1099: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.813969957875088e-05
    2. '       ' → logprob: -9.750067710876465
    3. '```' → logprob: -12.375067710876465
    4. '            
' → logprob: -13.375067710876465
    5. '               ' → logprob: -14.000067710876465
    6. '   ' → logprob: -14.125067710876465
    7. '          ' → logprob: -14.500067710876465
    8. '
' → logprob: -15.250067710876465
    9. 'continue' → logprob: -15.375067710876465
    10. 'if' → logprob: -15.375067710876465

Token 1100: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.160044863820076
    2. '           ' → logprob: -2.0350449085235596
    3. 'n' → logprob: -4.7850446701049805
    4. 'parts' → logprob: -5.6600446701049805
    5. 'RC' → logprob: -6.1600446701049805
    6. 'r' → logprob: -6.6600446701049805
    7. '       ' → logprob: -6.9100446701049805
    8. ' R' → logprob: -7.5350446701049805
    9. ' parts' → logprob: -8.41004467010498
    10. 'rc' → logprob: -9.53504467010498

Token 1101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005439251195639372
    2. ',C' → logprob: -5.755439281463623
    3. '=' → logprob: -6.130439281463623
    4. ' =' → logprob: -10.630438804626465
    5. ' ,' → logprob: -10.630438804626465
    6. ',R' → logprob: -11.005438804626465
    7. '<|end|>' → logprob: -12.630438804626465
    8. '_,' → logprob: -13.005438804626465
    9. ',c' → logprob: -13.130438804626465
    10. ')' → logprob: -13.630438804626465

Token 1102: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.000553151941858232
    2. ' C' → logprob: -7.500553131103516
    3. ' ' → logprob: -16.250553131103516
    4. '  ' → logprob: -17.375553131103516
    5. '    ' → logprob: -19.000553131103516
    6. '=' → logprob: -19.125553131103516
    7. '   ' → logprob: -19.375553131103516
    8. ',C' → logprob: -19.750553131103516
    9. '=C' → logprob: -20.000553131103516
    10. '<|end|>' → logprob: -20.125553131103516

Token 1103: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011073057539761066
    2. ' =' → logprob: -4.636073112487793
    3. ',' → logprob: -6.636073112487793
    4. '<|end|>' → logprob: -13.636073112487793
    5. '=
' → logprob: -13.886073112487793
    6. ')' → logprob: -14.511073112487793
    7. '=int' → logprob: -15.261073112487793
    8. ')=' → logprob: -15.636073112487793
    9. '   ' → logprob: -15.636073112487793
    10. '<|end|>' → logprob: -16.011072158813477

Token 1104: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.12692947685718536
    2. 'map' → logprob: -2.126929521560669
    3. '(map' → logprob: -14.00192928314209
    4. '_map' → logprob: -15.37692928314209
    5. ' mapa' → logprob: -15.62692928314209
    6. '	map' → logprob: -16.251930236816406
    7. '.map' → logprob: -16.876930236816406
    8. '[' → logprob: -17.876930236816406
    9. ' tuple' → logprob: -18.001930236816406
    10. 'tuple' → logprob: -18.251930236816406

Token 1105: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014318867586553097
    2. 'int' → logprob: -4.264318943023682
    3. '(str' → logprob: -9.139318466186523
    4. '[int' → logprob: -10.639318466186523
    5. 'str' → logprob: -11.014318466186523
    6. '=int' → logprob: -12.889318466186523
    7. '<int' → logprob: -12.889318466186523
    8. ' int' → logprob: -13.639318466186523
    9. ',int' → logprob: -14.389318466186523
    10. '```' → logprob: -15.639318466186523

Token 1106: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.012817461043596268
    2. ',' → logprob: -5.0128173828125
    3. ',line' → logprob: -5.3878173828125
    4. '(next' → logprob: -6.7628173828125
    5. '[line' → logprob: -9.1378173828125
    6. ')' → logprob: -9.3878173828125
    7. '=line' → logprob: -9.5128173828125
    8. ' line' → logprob: -10.5128173828125
    9. '(lines' → logprob: -11.0128173828125
    10. '#line' → logprob: -11.3878173828125

Token 1107: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -7.719917630311102e-05
    2. ' line' → logprob: -9.500077247619629
    3. 'next' → logprob: -13.250077247619629
    4. '(line' → logprob: -15.125077247619629
    5. '           ' → logprob: -16.125076293945312
    6. '=line' → logprob: -16.125076293945312
    7. '[line' → logprob: -17.500076293945312
    8. '#line' → logprob: -17.875076293945312
    9. '_line' → logprob: -18.000076293945312
    10. 'lines' → logprob: -18.875076293945312

Token 1108: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.44983166456222534
    2. '().' → logprob: -1.5748317241668701
    3. '.strip' → logprob: -2.07483172416687
    4. '.' → logprob: -3.57483172416687
    5. ' .' → logprob: -7.074831485748291
    6. '.readline' → logprob: -7.574831485748291
    7. '.rstrip' → logprob: -8.44983196258545
    8. '   ' → logprob: -10.94983196258545
    9. '('').' → logprob: -11.69983196258545
    10. '(split' → logprob: -12.32483196258545

Token 1109: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0021045792382210493
    2. '())
' → logprob: -6.252104759216309
    3. '()' → logprob: -9.002104759216309
    4. ')' → logprob: -9.877104759216309
    5. '()
' → logprob: -15.002104759216309
    6. '())

' → logprob: -15.002104759216309
    7. '(','' → logprob: -15.377104759216309
    8. '())
' → logprob: -15.752104759216309
    9. '('' → logprob: -16.127103805541992
    10. '()]' → logprob: -16.377103805541992

Token 1110: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.166338137816638e-05
    2. '       ' → logprob: -10.875031471252441
    3. 'if' → logprob: -11.625031471252441
    4. '   ' → logprob: -13.500031471252441
    5. '               ' → logprob: -14.250031471252441
    6. '<|end|>' → logprob: -14.500031471252441
    7. '```' → logprob: -14.875031471252441
    8. ' if' → logprob: -14.875031471252441
    9. '          ' → logprob: -15.750031471252441
    10. '                   ' → logprob: -16.125032424926758

Token 1111: ' if' (ID: 538)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.06830330938100815
    2. 'if' (adapté à ' if') → logprob: -3.193303346633911
    3. '           ' → logprob: -3.693303346633911
    4. ' grid' → logprob: -10.068303108215332
    5. '   ' → logprob: -10.693303108215332
    6. ' if' → logprob: -11.443303108215332
    7. '       ' → logprob: -11.943303108215332
    8. 'for' → logprob: -12.068303108215332
    9. 'break' → logprob: -12.443303108215332
    10. '	grid' → logprob: -13.818303108215332

Token 1112: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -3.5954712075181305e-05
    2. ' R' → logprob: -10.375036239624023
    3. '   ' → logprob: -12.375036239624023
    4. '(R' → logprob: -14.750036239624023
    5. '           ' → logprob: -16.500036239624023
    6. '(' → logprob: -17.750036239624023
    7. ' ' → logprob: -18.000036239624023
    8. '  ' → logprob: -18.500036239624023
    9. '       ' → logprob: -18.625036239624023
    10. '
' → logprob: -18.750036239624023

Token 1113: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.201423779129982
    2. ' ==' → logprob: -1.7014237642288208
    3. '=' → logprob: -12.076423645019531
    4. '===' → logprob: -13.451423645019531
    5. '0' → logprob: -14.326423645019531
    6. 'and' → logprob: -14.451423645019531
    7. ',' → logprob: -14.451423645019531
    8. ' ' → logprob: -15.201423645019531
    9. '|' → logprob: -15.201423645019531
    10. '==
' → logprob: -15.201423645019531

Token 1114: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '
' → logprob: -18.5
    4. 'C' → logprob: -20.0
    5. '۰' → logprob: -20.625
    6. '   ' → logprob: -21.125
    7. 'R' → logprob: -22.25
    8. ' ' → logprob: -22.625
    9. '<|end|>' → logprob: -22.75
    10. '
' → logprob: -22.875

Token 1115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. 'C' → logprob: -12.375005722045898
    3. ' ' → logprob: -13.500005722045898
    4. 'and' → logprob: -19.5000057220459
    5. '۰' → logprob: -19.8750057220459
    6. ' C' → logprob: -20.1250057220459
    7. 'H' → logprob: -20.5625057220459
    8. 'R' → logprob: -20.5625057220459
    9. '
' → logprob: -20.6250057220459
    10. '```' → logprob: -20.8750057220459

Token 1116: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3133779764175415
    2. 'and' → logprob: -1.3133779764175415
    3. ' or' → logprob: -9.31337833404541
    4. '   ' → logprob: -11.43837833404541
    5. '           ' → logprob: -11.56337833404541
    6. ' ' → logprob: -13.68837833404541
    7. '               ' → logprob: -13.68837833404541
    8. '	and' → logprob: -13.68837833404541
    9. 'or' → logprob: -14.31337833404541
    10. '       ' → logprob: -14.93837833404541

Token 1117: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0005530327325686812
    2. ' C' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.875553131103516
    4. ' ' → logprob: -21.375553131103516
    5. '  ' → logprob: -22.125553131103516
    6. '	C' → logprob: -22.500553131103516
    7. '    ' → logprob: -23.750553131103516
    8. '
' → logprob: -23.875553131103516
    9. '           ' → logprob: -24.125553131103516
    10. '       ' → logprob: -24.750553131103516

Token 1118: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10021281987428665
    2. ' ==' → logprob: -2.350212812423706
    3. '0' → logprob: -12.350213050842285
    4. '=' → logprob: -14.600213050842285
    5. '==
' → logprob: -14.850213050842285
    6. '   ' → logprob: -15.225213050842285
    7. ')==' → logprob: -15.475213050842285
    8. ' ' → logprob: -15.725213050842285
    9. '===' → logprob: -16.10021209716797
    10. '           ' → logprob: -16.22521209716797

Token 1119: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -22.125001907348633
    4. '۰' → logprob: -23.125001907348633
    5. '  ' → logprob: -23.375001907348633
    6. '<|end|>' → logprob: -24.000001907348633
    7. '```' → logprob: -24.375001907348633
    8. '
' → logprob: -24.375001907348633
    9. '=' → logprob: -25.000001907348633
    10. '<|end|>' → logprob: -25.500001907348633

Token 1120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '<|end|>' → logprob: -19.375
    4. '<|end|>' → logprob: -22.0
    5. '   ' → logprob: -22.125
    6. '۰' → logprob: -22.625
    7. '```' → logprob: -23.25
    8. '  ' → logprob: -23.5
    9. '=' → logprob: -23.625
    10. '
' → logprob: -24.0

Token 1121: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10237448662519455
    2. ':
' → logprob: -2.97737455368042
    3. ':' → logprob: -3.10237455368042
    4. '           ' → logprob: -6.60237455368042
    5. '                   ' → logprob: -10.727374076843262
    6. '                       ' → logprob: -10.727374076843262
    7. '              ' → logprob: -11.602374076843262
    8. '):
' → logprob: -11.727374076843262
    9. '       ' → logprob: -12.477374076843262
    10. ',' → logprob: -12.852374076843262

Token 1122: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.729906196298543e-06
    2. '           ' → logprob: -12.250009536743164
    3. '                   ' → logprob: -12.500009536743164
    4. '       ' → logprob: -14.750009536743164
    5. '                       ' → logprob: -15.250009536743164
    6. 'break' → logprob: -16.125009536743164
    7. '              ' → logprob: -16.125009536743164
    8. '   ' → logprob: -16.375009536743164
    9. '			' → logprob: -17.375009536743164
    10. '	           ' → logprob: -17.500009536743164

Token 1123: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.05316557735204697
    2. '               ' → logprob: -3.0531656742095947
    3. 'return' → logprob: -5.553165435791016
    4. ' break' → logprob: -7.303165435791016
    5. '                   ' → logprob: -11.553165435791016
    6. '	break' → logprob: -12.428165435791016
    7. '           ' → logprob: -12.928165435791016
    8. ' return' → logprob: -13.053165435791016
    9. '_break' → logprob: -14.553165435791016
    10. '   ' → logprob: -15.928165435791016

Token 1124: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.111979357432574e-05
    2. '<|end|>' → logprob: -10.12507152557373
    3. '       ' → logprob: -10.87507152557373
    4. '            
' → logprob: -11.75007152557373
    5. '          ' → logprob: -13.50007152557373
    6. '               ' → logprob: -13.87507152557373
    7. '<|end|>' → logprob: -14.62507152557373
    8. ',' → logprob: -14.75007152557373
    9. '        
' → logprob: -15.62507152557373
    10. '```' → logprob: -15.62507152557373

Token 1125: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005307526444084942
    2. '       ' → logprob: -7.62553071975708
    3. 'grid' → logprob: -10.500531196594238
    4. '   ' → logprob: -11.375531196594238
    5. '```' → logprob: -13.750531196594238
    6. '<|end|>' → logprob: -14.000531196594238
    7. '               ' → logprob: -14.625531196594238
    8. '          ' → logprob: -14.875531196594238
    9. 'next' → logprob: -15.625531196594238
    10. '            
' → logprob: -15.750531196594238

Token 1126: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -2.927930654550437e-05
    2. '           ' → logprob: -10.750029563903809
    3. ' grid' → logprob: -12.125029563903809
    4. '   ' → logprob: -13.000029563903809
    5. '	grid' → logprob: -16.750028610229492
    6. '       ' → logprob: -18.000028610229492
    7. 'Grid' → logprob: -18.875028610229492
    8. '.grid' → logprob: -19.000028610229492
    9. '_grid' → logprob: -19.500028610229492
    10. ' ' → logprob: -19.625028610229492

Token 1127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006768657360225916
    2. '=' → logprob: -5.006768703460693
    3. '=[]' → logprob: -10.381768226623535
    4. '=[]
' → logprob: -10.756768226623535
    5. '   ' → logprob: -14.756768226623535
    6. '.append' → logprob: -16.00676918029785
    7. ' =
' → logprob: -16.25676918029785
    8. '=[]
' → logprob: -16.38176918029785
    9. '           ' → logprob: -16.63176918029785
    10. '=[' → logprob: -16.75676918029785

Token 1128: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005825583357363939
    2. '[]
' → logprob: -5.255825519561768
    3. '[
' → logprob: -8.255825996398926
    4. '[array' → logprob: -10.005825996398926
    5. '[str' → logprob: -10.255825996398926
    6. '[int' → logprob: -10.255825996398926
    7. '[]' → logprob: -10.255825996398926
    8. '[row' → logprob: -10.505825996398926
    9. '[class' → logprob: -10.630825996398926
    10. '[new' → logprob: -10.880825996398926

Token 1129: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00864600669592619
    2. 'for' → logprob: -4.883646011352539
    3. ' for' → logprob: -7.508646011352539
    4. '       ' → logprob: -7.758646011352539
    5. '   ' → logprob: -9.883646011352539
    6. '               ' → logprob: -11.883646011352539
    7. '<|end|>' → logprob: -13.258646011352539
    8. '```' → logprob: -13.383646011352539
    9. '	       ' → logprob: -14.258646011352539
    10. '                   ' → logprob: -14.758646011352539

Token 1130: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31442001461982727
    2. 'for' (adapté à ' for') → logprob: -1.3144199848175049
    3. ' for' → logprob: -6.814420223236084
    4. '   ' → logprob: -9.939419746398926
    5. '       ' → logprob: -11.439419746398926
    6. '	for' → logprob: -15.439419746398926
    7. '               ' → logprob: -15.564419746398926
    8. '		' → logprob: -15.939419746398926
    9. ' ' → logprob: -16.189420700073242
    10. '	       ' → logprob: -16.814420700073242

Token 1131: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -3.607391408877447e-05
    2. '_row' → logprob: -11.500036239624023
    3. '_r' → logprob: -11.625036239624023
    4. '_i' → logprob: -11.750036239624023
    5. '_
' → logprob: -12.375036239624023
    6. '_C' → logprob: -13.375036239624023
    7. '_c' → logprob: -13.875036239624023
    8. '_rows' → logprob: -14.625036239624023
    9. '_R' → logprob: -14.625036239624023
    10. '_range' → logprob: -14.875036239624023

Token 1132: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -4.36574100604048e-06
    2. 'in' → logprob: -12.625004768371582
    3. ' _' → logprob: -14.750004768371582
    4. ' ' → logprob: -15.125004768371582
    5. 'i' → logprob: -16.000003814697266
    6. '_' → logprob: -16.375003814697266
    7. 'r' → logprob: -16.500003814697266
    8. 'row' → logprob: -18.250003814697266
    9. ' i' → logprob: -18.375003814697266
    10. 'range' → logprob: -18.375003814697266

Token 1133: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '_range' → logprob: -18.87509536743164
    4. '_' → logprob: -19.62509536743164
    5. 'r' → logprob: -19.75009536743164
    6. '
' → logprob: -20.25009536743164
    7. '	range' → logprob: -20.62509536743164
    8. 'rang' → logprob: -22.50009536743164
    9. '   ' → logprob: -22.62509536743164
    10. ' in' → logprob: -22.87509536743164

Token 1134: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.156218022108078
    2. 'C' → logprob: -2.9062180519104004
    3. '(C' → logprob: -3.0312180519104004
    4. 'R' → logprob: -3.2812180519104004
    5. '   ' → logprob: -6.2812180519104
    6. '           ' → logprob: -7.6562180519104
    7. 'range' → logprob: -7.6562180519104
    8. '(' → logprob: -7.7812180519104
    9. '               ' → logprob: -8.906217575073242
    10. '                   ' → logprob: -9.031217575073242

Token 1135: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00970297958701849
    2. '               ' → logprob: -4.884703159332275
    3. '):' → logprob: -6.884703159332275
    4. ':
' → logprob: -7.384703159332275
    5. '           ' → logprob: -8.009702682495117
    6. '):
' → logprob: -10.509702682495117
    7. ':' → logprob: -10.509702682495117
    8. '       ' → logprob: -10.759702682495117
    9. '():
' → logprob: -11.009702682495117
    10. '   ' → logprob: -11.759702682495117

Token 1136: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00022475497098639607
    2. '   ' → logprob: -9.125225067138672
    3. '	           ' → logprob: -10.750225067138672
    4. 'line' → logprob: -11.125225067138672
    5. '       ' → logprob: -11.250225067138672
    6. '```' → logprob: -11.250225067138672
    7. '           ' → logprob: -11.375225067138672
    8. ' line' → logprob: -11.625225067138672
    9. '#line' → logprob: -12.125225067138672
    10. '			   ' → logprob: -12.500225067138672

Token 1137: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.5769409537315369
    2. 'grid' → logprob: -0.8269409537315369
    3. 'line' → logprob: -7.451941013336182
    4. '               ' → logprob: -8.451940536499023
    5. ' row' → logprob: -8.951940536499023
    6. ' grid' → logprob: -9.701940536499023
    7. 'nums' → logprob: -11.951940536499023
    8. 'rows' → logprob: -13.076940536499023
    9. '   ' → logprob: -13.451940536499023
    10. 'cells' → logprob: -13.451940536499023

Token 1138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01429431326687336
    2. '=' → logprob: -4.264294147491455
    3. '=line' → logprob: -9.139294624328613
    4. '.append' → logprob: -11.264294624328613
    5. '_line' → logprob: -12.264294624328613
    6. '   ' → logprob: -13.889294624328613
    7. 'line' → logprob: -13.889294624328613
    8. '=row' → logprob: -14.014294624328613
    9. '=list' → logprob: -14.264294624328613
    10. '=int' → logprob: -14.889294624328613

Token 1139: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0002613358374219388
    2. ' list' → logprob: -8.250261306762695
    3. '[list' → logprob: -18.000261306762695
    4. '=list' → logprob: -20.125261306762695
    5. '	list' → logprob: -21.000261306762695
    6. '   ' → logprob: -21.625261306762695
    7. ':list' → logprob: -21.750261306762695
    8. '[' → logprob: -23.125261306762695
    9. '(list' → logprob: -23.375261306762695
    10. '           ' → logprob: -23.625261306762695

Token 1140: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.0280383548888494e-06
    2. 'map' → logprob: -13.875000953674316
    3. '(int' → logprob: -17.500001907348633
    4. '(' → logprob: -18.375001907348633
    5. '.map' → logprob: -19.125001907348633
    6. '	map' → logprob: -19.125001907348633
    7. ' map' → logprob: -19.375001907348633
    8. '(
' → logprob: -20.625001907348633
    9. ',map' → logprob: -20.875001907348633
    10. '[int' → logprob: -21.125001907348633

Token 1141: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0019419649615883827
    2. 'int' → logprob: -6.251942157745361
    3. '[int' → logprob: -11.626941680908203
    4. '=int' → logprob: -13.126941680908203
    5. '<int' → logprob: -13.626941680908203
    6. ' int' → logprob: -14.751941680908203
    7. ',int' → logprob: -14.751941680908203
    8. '(lambda' → logprob: -15.626941680908203
    9. ']int' → logprob: -16.751941680908203
    10. ':int' → logprob: -16.876941680908203

Token 1142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2741582691669464
    2. '(next' → logprob: -2.024158239364624
    3. ',next' → logprob: -2.774158239364624
    4. '(line' → logprob: -4.024158477783203
    5. ',line' → logprob: -4.399158477783203
    6. ',input' → logprob: -5.024158477783203
    7. '(' → logprob: -6.399158477783203
    8. '(input' → logprob: -6.524158477783203
    9. '(),' → logprob: -7.149158477783203
    10. '               ' → logprob: -7.586658477783203

Token 1143: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.3903249204158783
    2. 'line' → logprob: -1.1403249502182007
    3. 'lines' → logprob: -6.39032506942749
    4. 'input' → logprob: -6.51532506942749
    5. ' next' → logprob: -8.515324592590332
    6. ' line' → logprob: -10.140324592590332
    7. '(next' → logprob: -10.640324592590332
    8. ' lines' → logprob: -11.265324592590332
    9. '_line' → logprob: -13.015324592590332
    10. ')' → logprob: -13.265324592590332

Token 1144: '(lines' (ID: 73839)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.16023194789886475
    2. '(lines' → logprob: -1.9102319478988647
    3. ' lines' → logprob: -11.910231590270996
    4. '	lines' → logprob: -13.785231590270996
    5. 'line' → logprob: -17.785232543945312
    6. '.lines' → logprob: -18.410232543945312
    7. '_lines' → logprob: -18.785232543945312
    8. '   ' → logprob: -19.285232543945312
    9. '(line' → logprob: -20.160232543945312
    10. '-lines' → logprob: -20.535232543945312

Token 1145: ').' (ID: 741)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -5.991464786347933e-05
    2. '.strip' → logprob: -10.375060081481934
    3. '.split' → logprob: -12.000060081481934
    4. '))' → logprob: -12.000060081481934
    5. '()))' → logprob: -12.125060081481934
    6. '()))
' → logprob: -12.500060081481934
    7. '               ' → logprob: -12.750060081481934
    8. '))
' → logprob: -13.625060081481934
    9. '                   ' → logprob: -13.750060081481934
    10. '()' → logprob: -14.500060081481934

Token 1146: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.07902242243289948
    2. 'strip' → logprob: -2.5790224075317383
    3. '().' → logprob: -9.079022407531738
    4. '.split' → logprob: -11.579022407531738
    5. '.strip' → logprob: -12.579022407531738
    6. 'rstrip' → logprob: -12.829022407531738
    7. '(split' → logprob: -13.204022407531738
    8. ' split' → logprob: -14.329022407531738
    9. '(strip' → logprob: -15.204022407531738
    10. ' strip' → logprob: -15.329022407531738

Token 1147: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07922177761793137
    2. '()))
' → logprob: -2.579221725463867
    3. '()' → logprob: -8.204221725463867
    4. '))' → logprob: -10.204221725463867
    5. '()))
' → logprob: -11.954221725463867
    6. '(' → logprob: -12.204221725463867
    7. '()))

' → logprob: -12.329221725463867
    8. '())))' → logprob: -13.454221725463867
    9. '())' → logprob: -13.829221725463867
    10. '())))
' → logprob: -13.954221725463867

Token 1148: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.539801688631997e-05
    2. '           ' → logprob: -9.875065803527832
    3. '                   ' → logprob: -12.625065803527832
    4. '       ' → logprob: -12.750065803527832
    5. '```' → logprob: -12.875065803527832
    6. '<|end|>' → logprob: -13.375065803527832
    7. '   ' → logprob: -14.000065803527832
    8. 'grid' → logprob: -14.500065803527832
    9. '              ' → logprob: -14.625065803527832
    10. '[' → logprob: -14.750065803527832

Token 1149: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.14847104251384735
    2. '               ' → logprob: -2.1484711170196533
    3. '           ' → logprob: -3.8984711170196533
    4. ' grid' → logprob: -7.148470878601074
    5. '   ' → logprob: -8.898470878601074
    6. '                   ' → logprob: -9.773470878601074
    7. '       ' → logprob: -10.273470878601074
    8. '	grid' → logprob: -11.898470878601074
    9. '(grid' → logprob: -12.523470878601074
    10. '                ' → logprob: -12.898470878601074

Token 1150: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001848254178185016
    2. '.' → logprob: -8.625185012817383
    3. '.extend' → logprob: -13.000185012817383
    4. '           ' → logprob: -13.750185012817383
    5. '.app' → logprob: -14.125185012817383
    6. 'append' → logprob: -14.625185012817383
    7. ' .' → logprob: -15.375185012817383
    8. ').' → logprob: -15.875185012817383
    9. '.Append' → logprob: -17.000185012817383
    10. '.ap' → logprob: -17.500185012817383

Token 1151: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0019291093340143561
    2. 'row' → logprob: -6.25192928314209
    3. ' row' → logprob: -16.001928329467773
    4. '(
' → logprob: -16.251928329467773
    5. '[row' → logprob: -16.251928329467773
    6. ',row' → logprob: -16.251928329467773
    7. '=row' → logprob: -16.626928329467773
    8. '(' → logprob: -16.751928329467773
    9. '	row' → logprob: -18.501928329467773
    10. '(line' → logprob: -20.126928329467773

Token 1152: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25726398825645447
    2. ')
' → logprob: -2.0072638988494873
    3. '           ' → logprob: -2.3822638988494873
    4. '       ' → logprob: -9.007264137268066
    5. '               ' → logprob: -11.632264137268066
    6. ')

' → logprob: -12.632264137268066
    7. ')
' → logprob: -13.882264137268066
    8. '
' → logprob: -14.132264137268066
    9. '   ' → logprob: -14.382264137268066
    10. '          ' → logprob: -15.257264137268066

Token 1153: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6764048337936401
    2. 'state' → logprob: -1.1764048337936401
    3. '       ' → logprob: -2.5514049530029297
    4. ' state' → logprob: -2.9264049530029297
    5. '   ' → logprob: -3.4264049530029297
    6. 'solver' → logprob: -4.67640495300293
    7. '<|end|>' → logprob: -5.30140495300293
    8. '
' → logprob: -6.92640495300293
    9. ' solver' → logprob: -6.92640495300293
    10. '```' → logprob: -7.30140495300293

Token 1154: ' solver' (ID: 63271)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.8022286295890808
    2. 'solver' (adapté à ' solver') → logprob: -1.0522286891937256
    3. '   ' → logprob: -1.6772286891937256
    4. ' state' → logprob: -4.6772284507751465
    5. ' solver' → logprob: -5.4272284507751465
    6. '           ' → logprob: -7.1772284507751465
    7. '       ' → logprob: -7.6772284507751465
    8. 'fl' → logprob: -8.052228927612305
    9. 'problem' → logprob: -8.927228927612305
    10. '```' → logprob: -9.552228927612305

Token 1155: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -5.319370302458992e-06
    2. '.' → logprob: -12.375005722045898
    3. '.append' → logprob: -14.375005722045898
    4. '.Add' → logprob: -16.0000057220459
    5. 'add' → logprob: -16.6250057220459
    6. '   ' → logprob: -16.7500057220459
    7. ')add' → logprob: -16.7500057220459
    8. '.ADD' → logprob: -17.5000057220459
    9. '.solve' → logprob: -18.2500057220459
    10. '.enqueue' → logprob: -18.5000057220459

Token 1156: '_dataset' (ID: 40568)
  Prédit: '_dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dataset' → logprob: -3.5597102396423e-05
    2. 'dataset' → logprob: -10.375035285949707
    3. 'Dataset' → logprob: -12.500035285949707
    4. 'ataset' → logprob: -14.750035285949707
    5. ' dataset' → logprob: -17.625036239624023
    6. '(dataset' → logprob: -17.625036239624023
    7. '_data' → logprob: -17.750036239624023
    8. '(S' → logprob: -18.500036239624023
    9. '(' → logprob: -18.875036239624023
    10. '   ' → logprob: -19.000036239624023

Token 1157: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.013270351104438305
    2. 'R' → logprob: -4.763270378112793
    3. '(S' → logprob: -5.388270378112793
    4. 'Sen' → logprob: -9.888270378112793
    5. '(' → logprob: -10.763270378112793
    6. '(
' → logprob: -13.263270378112793
    7. ' R' → logprob: -14.388270378112793
    8. 'S' → logprob: -15.138270378112793
    9. '((' → logprob: -16.013269424438477
    10. ' Sen' → logprob: -16.138269424438477

Token 1158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.584239938296378e-06
    2. ',C' → logprob: -12.125007629394531
    3. ' ,' → logprob: -13.125007629394531
    4. '           ' → logprob: -16.37500762939453
    5. ',
' → logprob: -17.12500762939453
    6. '   ' → logprob: -17.50000762939453
    7. 'C' → logprob: -18.12500762939453
    8. '               ' → logprob: -19.50000762939453
    9. '       ' → logprob: -20.00000762939453
    10. ')' → logprob: -20.50000762939453

Token 1159: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -6.749814019713085e-06
    2. ' C' → logprob: -12.000006675720215
    3. 'grid' → logprob: -15.250006675720215
    4. '           ' → logprob: -16.00000762939453
    5. '   ' → logprob: -16.62500762939453
    6. '               ' → logprob: -16.75000762939453
    7. '                   ' → logprob: -18.37500762939453
    8. '       ' → logprob: -19.75000762939453
    9. '
' → logprob: -20.00000762939453
    10. ' grid' → logprob: -20.12500762939453

Token 1160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.610702363715973e-06
    2. ' ,' → logprob: -12.375009536743164
    3. ',C' → logprob: -12.750009536743164
    4. '(grid' → logprob: -13.500009536743164
    5. ',
' → logprob: -14.750009536743164
    6. 'grid' → logprob: -14.875009536743164
    7. ')' → logprob: -15.750009536743164
    8. '           ' → logprob: -17.000009536743164
    9. 'C' → logprob: -18.500009536743164
    10. ' grid' → logprob: -18.625009536743164

Token 1161: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -4.68022444692906e-05
    2. ' grid' → logprob: -10.000046730041504
    3. 'C' → logprob: -13.625046730041504
    4. '   ' → logprob: -16.50004768371582
    5. '
' → logprob: -17.25004768371582
    6. '	grid' → logprob: -17.75004768371582
    7. '```' → logprob: -17.87504768371582
    8. '(grid' → logprob: -18.00004768371582
    9. 'graph' → logprob: -18.12504768371582
    10. ' ' → logprob: -19.62504768371582

Token 1162: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0056509822607040405
    2. '       ' → logprob: -5.380650997161865
    3. ')
' → logprob: -7.005650997161865
    4. '<|end|>' → logprob: -9.755650520324707
    5. '   ' → logprob: -10.255650520324707
    6. '           ' → logprob: -10.755650520324707
    7. '<|end|>' → logprob: -12.255650520324707
    8. '`)' → logprob: -14.505650520324707
    9. ')

' → logprob: -14.630650520324707
    10. '```' → logprob: -15.005650520324707

Token 1163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13331487774848938
    2. '   ' → logprob: -2.133314847946167
    3. '<|end|>' → logprob: -5.883315086364746
    4. '
' → logprob: -6.383315086364746
    5. '           ' → logprob: -6.758315086364746
    6. '    
' → logprob: -9.008315086364746
    7. '        
' → logprob: -9.008315086364746
    8. ' next' → logprob: -9.383315086364746
    9. '```' → logprob: -9.633315086364746
    10. '<|end|>' → logprob: -9.633315086364746

Token 1164: ' except' (ID: 6384)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0526793971657753
    2. '
' → logprob: -3.9276793003082275
    3. '<|end|>' → logprob: -3.9276793003082275
    4. '       ' → logprob: -5.052679538726807
    5. 'except' (adapté à ' except') → logprob: -6.052679538726807
    6. ' except' → logprob: -7.302679538726807
    7. '<|end|>' → logprob: -7.427679538726807
    8. '    
' → logprob: -7.552679538726807
    9. 'continue' → logprob: -8.427679061889648
    10. '```' → logprob: -8.427679061889648

Token 1165: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -4.723352049040841e-06
    2. 'EOF' → logprob: -13.000004768371582
    3. ' Stop' → logprob: -13.000004768371582
    4. '(' → logprob: -15.875004768371582
    5. 'STOP' → logprob: -17.500003814697266
    6. 'Break' → logprob: -18.250003814697266
    7. '_Stop' → logprob: -18.625003814697266
    8. '_stop' → logprob: -19.000003814697266
    9. 'Exception' → logprob: -20.375003814697266
    10. 'stop' → logprob: -20.875003814697266

Token 1166: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -1.3306015716807451e-05
    2. 'Iterator' → logprob: -11.37501335144043
    3. 'Async' → logprob: -14.37501335144043
    4. 'iteration' → logprob: -14.62501335144043
    5. '
' → logprob: -15.00001335144043
    6. ' iteration' → logprob: -16.00001335144043
    7. '_iteration' → logprob: -16.75001335144043
    8. '   ' → logprob: -17.37501335144043
    9. '```' → logprob: -17.62501335144043
    10. 'Iterations' → logprob: -17.87501335144043

Token 1167: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016980964690446854
    2. ':' → logprob: -4.64198112487793
    3. ':
' → logprob: -5.26698112487793
    4. '       ' → logprob: -6.26698112487793
    5. '   ' → logprob: -10.14198112487793
    6. '               ' → logprob: -10.39198112487793
    7. '		' → logprob: -10.89198112487793
    8. '                   ' → logprob: -11.51698112487793
    9. '          ' → logprob: -11.64198112487793
    10. '<|end|>' → logprob: -11.64198112487793

Token 1168: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2014651745557785
    2. '       ' → logprob: -1.701465129852295
    3. '               ' → logprob: -10.826465606689453
    4. '   ' → logprob: -10.951465606689453
    5. '	       ' → logprob: -12.826465606689453
    6. '		' → logprob: -13.451465606689453
    7. '                   ' → logprob: -13.576465606689453
    8. ':' → logprob: -13.576465606689453
    9. '          ' → logprob: -13.826465606689453
    10. 'break' → logprob: -13.951465606689453

Token 1169: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20183926820755005
    2. '           ' → logprob: -1.7018392086029053
    3. 'break' (adapté à ' break') → logprob: -8.076839447021484
    4. '   ' → logprob: -9.451839447021484
    5. '               ' → logprob: -10.576839447021484
    6. ' break' → logprob: -12.326839447021484
    7. '	break' → logprob: -12.451839447021484
    8. '		' → logprob: -13.326839447021484
    9. '```' → logprob: -15.576839447021484
    10. '
' → logprob: -15.576839447021484

Token 1170: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020947758108377457
    2. '
' → logprob: -4.0209479331970215
    3. '    
' → logprob: -6.1459479331970215
    4. 'results' → logprob: -8.145947456359863
    5. 'result' → logprob: -8.395947456359863
    6. 'for' → logprob: -9.395947456359863
    7. '```' → logprob: -11.145947456359863
    8. 'outputs' → logprob: -12.020947456359863
    9. '  
' → logprob: -12.270947456359863
    10. 'if' → logprob: -12.270947456359863

Token 1171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32742565870285034
    2. 'results' → logprob: -1.3274257183074951
    3. 'for' → logprob: -4.327425479888916
    4. 'if' → logprob: -7.827425479888916
    5. 'result' → logprob: -8.202425956726074
    6. ' results' → logprob: -9.702425956726074
    7. 'outputs' → logprob: -9.952425956726074
    8. '```' → logprob: -10.077425956726074
    9. ' for' → logprob: -11.077425956726074
    10. '	results' → logprob: -11.452425956726074

Token 1172: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.14756470918655396
    2. '   ' → logprob: -2.147564649581909
    3. 'for' → logprob: -3.897564649581909
    4. ' results' → logprob: -9.397564888000488
    5. 'outputs' → logprob: -11.147564888000488
    6. '	results' → logprob: -11.147564888000488
    7. ' for' → logprob: -11.772564888000488
    8. '```' → logprob: -11.897564888000488
    9. 'result' → logprob: -12.397564888000488
    10. 'answers' → logprob: -13.897564888000488

Token 1173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48058050870895386
    2. '   ' → logprob: -0.9805805087089539
    3. '=' → logprob: -5.1055803298950195
    4. ' for' → logprob: -8.73058032989502
    5. ':' → logprob: -9.35558032989502
    6. 'for' → logprob: -10.73058032989502
    7. '=[]
' → logprob: -10.85558032989502
    8. '<|end|>' → logprob: -10.98058032989502
    9. '    
' → logprob: -11.23058032989502
    10. '=[]' → logprob: -11.35558032989502

Token 1174: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.02324594371020794
    2. ' solver' → logprob: -3.7732460498809814
    3. '   ' → logprob: -14.648245811462402
    4. 'sol' → logprob: -17.14824676513672
    5. '_solver' → logprob: -19.14824676513672
    6. '[s' → logprob: -20.14824676513672
    7. 'Solver' → logprob: -21.02324676513672
    8. '```' → logprob: -21.14824676513672
    9. '[' → logprob: -21.52324676513672
    10. '
' → logprob: -21.64824676513672

Token 1175: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.002127183834090829
    2. 'solve' → logprob: -6.377127170562744
    3. ' =' → logprob: -8.002127647399902
    4. '   ' → logprob: -10.127127647399902
    5. '.s' → logprob: -11.002127647399902
    6. 'results' → logprob: -11.002127647399902
    7. '=' → logprob: -11.752127647399902
    8. '.' → logprob: -12.502127647399902
    9. '.sol' → logprob: -13.127127647399902
    10. '.results' → logprob: -13.752127647399902

Token 1176: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -1.9361264946837764e-07
    2. 'All' → logprob: -16.0
    3. '_' → logprob: -19.125
    4. '_results' → logprob: -19.25
    5. '__' → logprob: -20.0
    6. '_ALL' → logprob: -20.25
    7. '_All' → logprob: -20.625
    8. '_for' → logprob: -21.0
    9. '   ' → logprob: -21.125
    10. '_al' → logprob: -21.5

Token 1177: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1699959635734558
    2. '()' → logprob: -2.6699960231781006
    3. '()
' → logprob: -2.7949960231781006
    4. 'for' → logprob: -3.6699960231781006
    5. ' for' → logprob: -8.16999626159668
    6. '```' → logprob: -9.41999626159668
    7. '
' → logprob: -10.29499626159668
    8. '    
' → logprob: -10.66999626159668
    9. '():
' → logprob: -10.91999626159668
    10. '	for' → logprob: -11.41999626159668

Token 1178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0789533481001854
    2. 'for' → logprob: -2.578953266143799
    3. '```' → logprob: -9.953953742980957
    4. ' for' → logprob: -11.203953742980957
    5. '
' → logprob: -13.453953742980957
    6. '    
' → logprob: -14.703953742980957
    7. '``' → logprob: -15.203953742980957
    8. '	for' → logprob: -15.453953742980957
    9. '`' → logprob: -16.95395278930664
    10. 'print' → logprob: -17.32895278930664

Token 1179: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023251652717590332
    2. '   ' → logprob: -3.773251533508301
    3. '```' → logprob: -12.5232515335083
    4. ' for' → logprob: -13.2732515335083
    5. '
' → logprob: -14.2732515335083
    6. '``' → logprob: -16.023252487182617
    7. '	for' → logprob: -16.898252487182617
    8. 'import' → logprob: -17.898252487182617
    9. 'print' (adapté à ' print') → logprob: -18.023252487182617
    10. '    
' → logprob: -18.648252487182617

Token 1180: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.501279890537262
    2. '(*' → logprob: -1.0012798309326172
    3. '(results' → logprob: -4.126279830932617
    4. '("\' → logprob: -5.001279830932617
    5. '(len' → logprob: -6.251279830932617
    6. '(' → logprob: -6.876279830932617
    7. '(
' → logprob: -8.126279830932617
    8. '()
' → logprob: -8.626279830932617
    9. '(*(' → logprob: -8.751279830932617
    10. '()' → logprob: -9.251279830932617

Token 1181: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.35204073786735535
    2. ''\' → logprob: -1.3520407676696777
    3. 'n' → logprob: -3.8520407676696777
    4. ''.' → logprob: -4.602040767669678
    5. '
' → logprob: -5.477040767669678
    6. '"\' → logprob: -6.102040767669678
    7. ''' → logprob: -9.22704029083252
    8. '\
' → logprob: -9.60204029083252
    9. '\' → logprob: -9.97704029083252
    10. '('\' → logprob: -10.22704029083252

Token 1182: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.024919070303440094
    2. '.join' → logprob: -4.149919033050537
    3. ''\' → logprob: -5.149919033050537
    4. '".' → logprob: -6.399919033050537
    5. 'join' → logprob: -7.149919033050537
    6. ').' → logprob: -8.399919509887695
    7. '''.' → logprob: -8.524919509887695
    8. '"\' → logprob: -10.024919509887695
    9. 'print' → logprob: -10.149919509887695
    10. '\n' → logprob: -10.774919509887695

Token 1183: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -4.320199877838604e-07
    2. ''.' → logprob: -15.375
    3. '.join' → logprob: -16.5
    4. ' join' → logprob: -17.0
    5. ').' → logprob: -17.625
    6. 'jo' → logprob: -17.625
    7. 'j' → logprob: -18.375
    8. 'print' → logprob: -18.625
    9. ')' → logprob: -19.0
    10. '```' → logprob: -19.25

Token 1184: '(str' (ID: 7946)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.7262831330299377
    2. 'str' → logprob: -1.226283073425293
    3. '(str' → logprob: -1.976283073425293
    4. '(map' → logprob: -2.476283073425293
    5. '[str' → logprob: -8.226283073425293
    6. '   ' → logprob: -12.476283073425293
    7. ' map' → logprob: -12.851283073425293
    8. ' str' → logprob: -13.351283073425293
    9. '	map' → logprob: -14.976283073425293
    10. '	str' → logprob: -15.101283073425293

Token 1185: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.680722713470459
    2. '(res' → logprob: -1.180722713470459
    3. '(result' → logprob: -1.680722713470459
    4. 'res' → logprob: -8.180723190307617
    5. 'result' → logprob: -8.805723190307617
    6. '(x' → logprob: -11.430723190307617
    7. 'r' → logprob: -11.930723190307617
    8. '(results' → logprob: -12.305723190307617
    9. '[result' → logprob: -14.805723190307617
    10. '(ans' → logprob: -16.305723190307617

Token 1186: ')' (ID: 8)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.008450746536254883
    2. '(result' → logprob: -5.383450508117676
    3. '(res' → logprob: -6.383450508117676
    4. 'es' → logprob: -7.258450508117676
    5. '(results' → logprob: -7.383450508117676
    6. '(i' → logprob: -8.258450508117676
    7. '   ' → logprob: -8.258450508117676
    8. ')' → logprob: -9.133450508117676
    9. '(e' → logprob: -9.883450508117676
    10. '(x' → logprob: -10.133450508117676

Token 1187: ' for' (ID: 395)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.047567352652549744
    2. 'for' → logprob: -3.672567367553711
    3. '(results' → logprob: -4.297567367553711
    4. '(result' → logprob: -5.672567367553711
    5. ')' → logprob: -6.422567367553711
    6. ' for' → logprob: -6.672567367553711
    7. '(res' → logprob: -6.922567367553711
    8. '   ' → logprob: -9.922567367553711
    9. 'r' → logprob: -10.547567367553711
    10. 'results' → logprob: -11.297567367553711

Token 1188: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.128163257315464e-07
    2. ' r' → logprob: -15.5
    3. '(r' → logprob: -18.375
    4. '	r' → logprob: -20.0
    5. '_r' → logprob: -20.625
    6. '
' → logprob: -22.5
    7. '=r' → logprob: -23.5
    8. ',r' → logprob: -24.75
    9. 'result' → logprob: -25.5
    10. '$r' → logprob: -25.625

Token 1189: ' in' (ID: 306)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.940220296382904
    2. ' in' → logprob: -1.1902203559875488
    3. 'in' → logprob: -1.1902203559875488
    4. ' r' → logprob: -6.815220355987549
    5. '(r' → logprob: -10.44021987915039
    6. '_r' → logprob: -10.94021987915039
    7. ')' → logprob: -12.94021987915039
    8. 's' → logprob: -14.19021987915039
    9. 'e' → logprob: -14.81521987915039
    10. '	r' → logprob: -14.94021987915039

Token 1190: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -5.512236498361744e-07
    2. ' results' → logprob: -14.500000953674316
    3. '(results' → logprob: -20.375
    4. '	results' → logprob: -21.125
    5. '.results' → logprob: -23.75
    6. 'result' → logprob: -24.75
    7. 'Results' → logprob: -26.375
    8. '
' → logprob: -26.5
    9. '_results' → logprob: -26.75
    10. '   ' → logprob: -26.875

Token 1191: '))


' (ID: 49252)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07889848947525024
    2. ')' → logprob: -2.5788984298706055
    3. '()))' → logprob: -12.578898429870605
    4. '())' → logprob: -12.828898429870605
    5. '))
' → logprob: -13.828898429870605
    6. ')))' → logprob: -14.078898429870605
    7. '   ' → logprob: -14.453898429870605
    8. '})' → logprob: -16.328899383544922
    9. '()' → logprob: -16.703899383544922
    10. '])' → logprob: -16.828899383544922

Token 1192: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8550976164988242e-05
    2. '```' → logprob: -11.000018119812012
    3. ' if' → logprob: -13.375018119812012
    4. '``' → logprob: -16.125019073486328
    5. '
' → logprob: -16.500019073486328
    6. '#' → logprob: -17.750019073486328
    7. '@if' → logprob: -18.000019073486328
    8. '	if' → logprob: -18.125019073486328
    9. '#if' → logprob: -18.250019073486328
    10. '__' → logprob: -18.375019073486328

Token 1193: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12694048881530762
    2. ' __' → logprob: -2.1269404888153076
    3. 'name' → logprob: -11.626940727233887
    4. '_name' → logprob: -13.501940727233887
    5. '___' → logprob: -13.876940727233887
    6. '____' → logprob: -15.501940727233887
    7. 'Name' → logprob: -15.876940727233887
    8. '_' → logprob: -15.876940727233887
    9. '```' → logprob: -16.12693977355957
    10. 'True' → logprob: -16.12693977355957

Token 1194: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1878829002380371
    2. '==' → logprob: -1.812882900238037
    3. ' ==' → logprob: -5.062882900238037
    4. 'if' → logprob: -6.687882900238037
    5. 'name' → logprob: -8.687883377075195
    6. '=="' → logprob: -8.812883377075195
    7. '=='' → logprob: -9.687883377075195
    8. '__.__' → logprob: -9.937883377075195
    9. '```' → logprob: -10.312883377075195
    10. '.__' → logprob: -10.437883377075195

Token 1195: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.810037742368877e-05
    2. '==' → logprob: -10.375038146972656
    3. '__.__' → logprob: -12.250038146972656
    4. '____' → logprob: -14.750038146972656
    5. '___' → logprob: -15.000038146972656
    6. '=='' → logprob: -15.000038146972656
    7. '=="' → logprob: -15.250038146972656
    8. ' ==' → logprob: -15.500038146972656
    9. '__[' → logprob: -16.000038146972656
    10. '__
' → logprob: -16.000038146972656

Token 1196: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.14828719198703766
    2. '==' → logprob: -2.023287296295166
    3. '=='' → logprob: -5.773287296295166
    4. '=="' → logprob: -6.398287296295166
    5. ' ==' → logprob: -7.273287296295166
    6. '__.__' → logprob: -9.648286819458008
    7. '['' → logprob: -11.148286819458008
    8. '==
' → logprob: -11.398286819458008
    9. '[' → logprob: -11.773286819458008
    10. '.__' → logprob: -12.023286819458008

Token 1197: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20146381855010986
    2. ''' → logprob: -1.7014638185501099
    3. '__' → logprob: -9.95146369934082
    4. ' "__' → logprob: -13.20146369934082
    5. ' '__' → logprob: -14.57646369934082
    6. ''"' → logprob: -15.95146369934082
    7. 'main' → logprob: -16.20146369934082
    8. '   ' → logprob: -16.70146369934082
    9. '"'' → logprob: -16.70146369934082
    10. '"name' → logprob: -16.82646369934082

Token 1198: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3870042860507965
    2. '__' → logprob: -1.1370042562484741
    3. '"' → logprob: -9.387003898620605
    4. '__":
' → logprob: -11.137003898620605
    5. ''' → logprob: -11.387003898620605
    6. '_main' → logprob: -12.512003898620605
    7. '```' → logprob: -12.762003898620605
    8. 'name' → logprob: -12.762003898620605
    9. '___' → logprob: -13.262003898620605
    10. 'python' → logprob: -13.262003898620605

Token 1199: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.1025453582406044
    2. '__' → logprob: -2.3525452613830566
    3. '__':
' → logprob: -6.102545261383057
    4. '__.__' → logprob: -10.352545738220215
    5. '__["' → logprob: -10.352545738220215
    6. '__.' → logprob: -10.477545738220215
    7. '__
' → logprob: -13.602545738220215
    8. '__("' → logprob: -13.727545738220215
    9. '__:' → logprob: -13.727545738220215
    10. '__
' → logprob: -14.352545738220215

Token 1200: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0011897491058334708
    2. '__' → logprob: -6.751189708709717
    3. ' main' → logprob: -11.251190185546875
    4. '	main' → logprob: -12.876190185546875
    5. '   ' → logprob: -13.251190185546875
    6. '_main' → logprob: -13.876190185546875
    7. 'run' → logprob: -14.501190185546875
    8. '__":
' → logprob: -15.501190185546875
    9. '____' → logprob: -15.876190185546875
    10. '(main' → logprob: -16.126190185546875

Token 1201: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -14.500000953674316
    3. ' main' → logprob: -17.75
    4. '	main' → logprob: -19.25
    5. 'import' → logprob: -22.125
    6. '_main' → logprob: -24.0
    7. '(main' → logprob: -24.625
    8. '.main' → logprob: -24.875
    9. 'Main' → logprob: -26.5
    10. '__' → logprob: -27.25

Token 1202: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1200
Tokens correctement prédits (1ère position, stricte): 521
Tokens correctement prédits (1ère position, avec adaptation): 575
Tokens correctement prédits (top 10): 1015
Précision stricte (1ère position): 43.42%
Précision adaptée (1ère position): 47.92%
Précision (top 10): 84.58%
================================================================================
