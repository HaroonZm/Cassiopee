================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:08:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    stars = list(map(int, input().split()))
    count = {}
    for color in stars:
        if color in count:
            count[color] += 1
        else:
            count[color] = 1
    found = False
    for color in count:
        if count[color] > n / 2:
            print(color)
            found = True
            break
    if not found:
        print("NO COLOR")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6244295239448547
    2. '    ' → logprob: -2.12442946434021
    3. '    
' → logprob: -2.62442946434021
    4. '\' → logprob: -2.87442946434021
    5. '\n' → logprob: -2.87442946434021
    6. '```' → logprob: -3.24942946434021
    7. ' ' → logprob: -3.37442946434021
    8. ' 
' → logprob: -3.62442946434021
    9. '  
' → logprob: -4.249429702758789
    10. '     
' → logprob: -4.249429702758789

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30723127722740173
    2. '    ' → logprob: -1.6822313070297241
    3. '```' → logprob: -3.5572311878204346
    4. ' ' → logprob: -3.8072311878204346
    5. '       ' → logprob: -4.807231426239014
    6. '    
' → logprob: -5.932231426239014
    7. '  ' → logprob: -6.182231426239014
    8. '\' → logprob: -6.182231426239014
    9. '\n' → logprob: -6.682231426239014
    10. '\t' → logprob: -6.807231426239014

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9284094572067261
    2. 'u' → logprob: -1.553409457206726
    3. '=' → logprob: -2.1784095764160156
    4. '+' → logprob: -2.3034095764160156
    5. 'o' → logprob: -2.8034095764160156
    6. '   ' → logprob: -3.5534095764160156
    7. '_' → logprob: -4.178409576416016
    8. '.' → logprob: -4.428409576416016
    9. '%' → logprob: -4.553409576416016
    10. ' =' → logprob: -4.928409576416016

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5127374529838562
    2. ' input' → logprob: -1.012737512588501
    3. 'input' → logprob: -3.762737512588501
    4. 'int' → logprob: -5.262737274169922
    5. ' ' → logprob: -5.387737274169922
    6. ' n' → logprob: -5.512737274169922
    7. 'n' → logprob: -8.512737274169922
    8. ' i' → logprob: -8.637737274169922
    9. ' a' → logprob: -9.637737274169922
    10. ' randint' → logprob: -9.637737274169922

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048669010400772095
    2. '(input' → logprob: -3.0486690998077393
    3. '()' → logprob: -10.54866886138916
    4. '(n' → logprob: -11.17366886138916
    5. 'input' → logprob: -11.42366886138916
    6. '('' → logprob: -11.54866886138916
    7. ' (' → logprob: -12.54866886138916
    8. '(open' → logprob: -13.17366886138916
    9. '(ord' → logprob: -13.29866886138916
    10. '(
' → logprob: -13.42366886138916

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7426531910896301
    2. ')' → logprob: -0.9926531910896301
    3. '()' → logprob: -2.3676531314849854
    4. '())' → logprob: -2.9926531314849854
    5. '))' → logprob: -5.4926533699035645
    6. '('' → logprob: -6.8676533699035645
    7. ' ' → logprob: -6.8676533699035645
    8. '()))' → logprob: -6.9926533699035645
    9. '```' → logprob: -7.2426533699035645
    10. '(""))' → logprob: -8.367652893066406

Token 9: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9645322561264038
    2. ' if' → logprob: -0.9645322561264038
    3. '   ' → logprob: -2.2145323753356934
    4. ')' → logprob: -3.4645323753356934
    5. 'if' → logprob: -3.7145323753356934
    6. '<|end|>' → logprob: -4.214532375335693
    7. '    ' → logprob: -4.339532375335693
    8. ':' → logprob: -4.464532375335693
    9. '  ' → logprob: -4.714532375335693
    10. '    
' → logprob: -5.464532375335693

Token 10: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3629697859287262
    2. ' if' → logprob: -1.7379697561264038
    3. ' ' → logprob: -3.2379698753356934
    4. ')' → logprob: -3.9879698753356934
    5. '    ' → logprob: -4.112969875335693
    6. 'if' (adapté à ' if') → logprob: -4.612969875335693
    7. '  ' → logprob: -4.737969875335693
    8. '<|end|>' → logprob: -4.862969875335693
    9. '    
' → logprob: -5.362969875335693
    10. '```' → logprob: -5.487969875335693

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.005224152002483606
    2. ' ' → logprob: -5.880224227905273
    3. 'n' → logprob: -6.130224227905273
    4. ' not' → logprob: -8.380224227905273
    5. 'not' → logprob: -12.755224227905273
    6. '  ' → logprob: -12.880224227905273
    7. '<|end|>' → logprob: -13.380224227905273
    8. ' ' → logprob: -13.755224227905273
    9. ')' → logprob: -14.880224227905273
    10. ' (' → logprob: -14.880224227905273

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31525734066963196
    2. ' >' → logprob: -1.8152573108673096
    3. ' <=' → logprob: -2.8152573108673096
    4. ' <' → logprob: -4.065257549285889
    5. '==' → logprob: -4.440257549285889
    6. ' ' → logprob: -4.440257549285889
    7. '>' → logprob: -5.690257549285889
    8. ')' → logprob: -7.065257549285889
    9. '<|end|>' → logprob: -7.190257549285889
    10. '  ' → logprob: -7.815257549285889

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1797505021095276
    2. '0' → logprob: -1.8047504425048828
    3. '1' → logprob: -13.929750442504883
    4. ' ' → logprob: -13.929750442504883
    5. '  ' → logprob: -14.179750442504883
    6. ')' → logprob: -15.179750442504883
    7. '100' → logprob: -15.242250442504883
    8. ' -' → logprob: -15.304750442504883
    9. '20' → logprob: -15.429750442504883
    10. '<|end|>' → logprob: -15.617250442504883

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032311868853867054
    2. ' ' → logprob: -5.753231048583984
    3. '-' → logprob: -10.003231048583984
    4. ' -' → logprob: -12.628231048583984
    5. '1' → logprob: -13.253231048583984
    6. '42' → logprob: -13.628231048583984
    7. '   ' → logprob: -14.628231048583984
    8. '```' → logprob: -14.878231048583984
    9. '  ' → logprob: -15.253231048583984
    10. '    ' → logprob: -15.753231048583984

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.598092684522271e-05
    2. ':
' → logprob: -10.500056266784668
    3. ' :' → logprob: -11.250056266784668
    4. '   ' → logprob: -12.500056266784668
    5. ':return' → logprob: -12.625056266784668
    6. '):' → logprob: -12.750056266784668
    7. ':\' → logprob: -13.250056266784668
    8. '       ' → logprob: -13.500056266784668
    9. '':' → logprob: -14.625056266784668
    10. '():' → logprob: -15.000056266784668

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034330463968217373
    2. '   ' → logprob: -6.2534332275390625
    3. ' break' → logprob: -6.7534332275390625
    4. '    ' → logprob: -9.253433227539062
    5. '\n' → logprob: -9.628433227539062
    6. '	break' → logprob: -10.253433227539062
    7. ':' → logprob: -10.253433227539062
    8. '      ' → logprob: -11.003433227539062
    9. '     ' → logprob: -11.128433227539062
    10. ' ' → logprob: -11.378433227539062

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.011935565620660782
    2. '       ' → logprob: -4.761935710906982
    3. 'break' (adapté à ' break') → logprob: -5.886935710906982
    4. '	break' → logprob: -8.511935234069824
    5. '   ' → logprob: -8.886935234069824
    6. '\n' → logprob: -9.386935234069824
    7. '_break' → logprob: -10.011935234069824
    8. ' \' → logprob: -11.136935234069824
    9. '    ' → logprob: -11.511935234069824
    10. '```' → logprob: -11.761935234069824

Token 18: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5556411743164062
    2. '   ' → logprob: -1.4306411743164062
    3. '\n' → logprob: -2.0556411743164062
    4. '    
' → logprob: -4.180641174316406
    5. '<|end|>' → logprob: -4.305641174316406
    6. '\' → logprob: -5.430641174316406
    7. '```' → logprob: -5.430641174316406
    8. ')' → logprob: -5.930641174316406
    9. '\r' → logprob: -6.055641174316406
    10. '  
' → logprob: -6.180641174316406

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47039151191711426
    2. '<|end|>' → logprob: -1.2203915119171143
    3. '\n' → logprob: -3.9703915119171143
    4. '
' → logprob: -4.470391273498535
    5. '    
' → logprob: -4.470391273498535
    6. '#' → logprob: -4.595391273498535
    7. '```' → logprob: -4.720391273498535
    8. ')' → logprob: -5.220391273498535
    9. '\' → logprob: -5.345391273498535
    10. '<|end|>' → logprob: -5.970391273498535

Token 20: ' stars' (ID: 13701)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3427201509475708
    2. ' ' → logprob: -1.9677201509475708
    3. 'print' → logprob: -3.0927200317382812
    4. '    ' → logprob: -3.3427200317382812
    5. ')' → logprob: -3.9677200317382812
    6. '       ' → logprob: -4.592720031738281
    7. '#' → logprob: -5.592720031738281
    8. '\' → logprob: -5.717720031738281
    9. ',' → logprob: -5.842720031738281
    10. '<|end|>' → logprob: -5.842720031738281

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6437423229217529
    2. '=' → logprob: -0.7687423229217529
    3. ' ' → logprob: -5.143742561340332
    4. '   ' → logprob: -6.393742561340332
    5. '_' → logprob: -7.018742561340332
    6. ')' → logprob: -7.018742561340332
    7. '    ' → logprob: -7.893742561340332
    8. ' *=' → logprob: -8.643742561340332
    9. ' +=' → logprob: -8.768742561340332
    10. '*' → logprob: -8.768742561340332

Token 22: ' list' (ID: 1562)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8264816403388977
    2. ' '' → logprob: -1.326481580734253
    3. ''' → logprob: -1.701481580734253
    4. ' '*'' → logprob: -2.951481580734253
    5. ' "' → logprob: -3.326481580734253
    6. ''*' → logprob: -4.201481819152832
    7. ' n' → logprob: -5.951481819152832
    8. ' ' → logprob: -6.201481819152832
    9. ' "*"' → logprob: -6.451481819152832
    10. '*' → logprob: -6.951481819152832

Token 23: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002886544680222869
    2. '(range' → logprob: -6.002886772155762
    3. '[' → logprob: -8.502886772155762
    4. '()' → logprob: -9.752886772155762
    5. '('' → logprob: -10.502886772155762
    6. '<|end|>' → logprob: -11.002886772155762
    7. '(st' → logprob: -11.252886772155762
    8. ')' → logprob: -11.502886772155762
    9. '[(' → logprob: -11.752886772155762
    10. ' (' → logprob: -11.877886772155762

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.09282241016626358
    2. '(' → logprob: -2.967822313308716
    3. '(str' → logprob: -3.342822313308716
    4. '(lambda' → logprob: -6.342822551727295
    5. '(input' → logprob: -9.592822074890137
    6. 'str' → logprob: -10.967822074890137
    7. ')' → logprob: -11.342822074890137
    8. 'int' → logprob: -11.842822074890137
    9. '<int' → logprob: -12.217822074890137
    10. '```' → logprob: -12.342822074890137

Token 25: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0008688253001309931
    2. '(' → logprob: -7.375868797302246
    3. ',input' → logprob: -8.500868797302246
    4. 'input' → logprob: -10.500868797302246
    5. ')' → logprob: -12.250868797302246
    6. ' input' → logprob: -13.125868797302246
    7. ',' → logprob: -13.625868797302246
    8. ' (' → logprob: -13.875868797302246
    9. '=input' → logprob: -14.250868797302246
    10. '   ' → logprob: -14.500868797302246

Token 26: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.38698285818099976
    2. 'input' → logprob: -1.1369829177856445
    3. '(input' → logprob: -9.386982917785645
    4. ',input' → logprob: -11.261982917785645
    5. '	input' → logprob: -12.511982917785645
    6. ')' → logprob: -12.511982917785645
    7. '=input' → logprob: -12.511982917785645
    8. '[input' → logprob: -13.011982917785645
    9. '<input' → logprob: -14.636982917785645
    10. ' ' → logprob: -14.636982917785645

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.025467973202466965
    2. '()' → logprob: -3.775467872619629
    3. '()))' → logprob: -6.400467872619629
    4. '())' → logprob: -8.025467872619629
    5. '(' → logprob: -9.275467872619629
    6. '()));' → logprob: -9.650467872619629
    7. '())))' → logprob: -10.025467872619629
    8. '());' → logprob: -12.150467872619629
    9. '()
' → logprob: -12.650467872619629
    10. ')' → logprob: -13.275467872619629

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009555285796523094
    2. 'strip' → logprob: -7.000955581665039
    3. 'rstrip' → logprob: -10.375955581665039
    4. ' split' → logprob: -11.375955581665039
    5. '(split' → logprob: -13.625955581665039
    6. 'spl' → logprob: -16.50095558166504
    7. ' strip' → logprob: -17.12595558166504
    8. 's' → logprob: -17.50095558166504
    9. '.split' → logprob: -17.62595558166504
    10. 'replace' → logprob: -17.75095558166504

Token 29: '()))
' (ID: 24521)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7911201119422913
    2. '()))' → logprob: -0.7911201119422913
    3. '(' → logprob: -3.4161200523376465
    4. ')' → logprob: -3.7911200523376465
    5. '()' → logprob: -4.0411200523376465
    6. '))' → logprob: -4.5411200523376465
    7. '('' → logprob: -5.2911200523376465
    8. '())))' → logprob: -5.7911200523376465
    9. ')))' → logprob: -6.9161200523376465
    10. '(','' → logprob: -8.916120529174805

Token 30: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8905180096626282
    2. '   ' → logprob: -1.0155179500579834
    3. '\' → logprob: -2.6405179500579834
    4. '[' → logprob: -3.2655179500579834
    5. '    
' → logprob: -3.3905179500579834
    6. ':' → logprob: -3.5155179500579834
    7. ')' → logprob: -4.2655181884765625
    8. ' 
' → logprob: -4.8905181884765625
    9. '```' → logprob: -5.2655181884765625
    10. ' ' → logprob: -5.3905181884765625

Token 31: ' count' (ID: 3605)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5640159249305725
    2. 'n' → logprob: -2.9390158653259277
    3. 's' → logprob: -3.3140158653259277
    4. 'count' (adapté à ' count') → logprob: -3.3140158653259277
    5. '   ' → logprob: -3.5640158653259277
    6. ' max' → logprob: -3.6890158653259277
    7. '    ' → logprob: -3.6890158653259277
    8. ')' → logprob: -3.8140158653259277
    9. 'sum' → logprob: -3.8140158653259277
    10. 'm' → logprob: -3.8140158653259277

Token 32: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5283122658729553
    2. '_' → logprob: -1.0283122062683105
    3. 's' → logprob: -3.0283122062683105
    4. '=' → logprob: -5.9033122062683105
    5. ' =' → logprob: -7.7783122062683105
    6. '[' → logprob: -8.028312683105469
    7. '_st' → logprob: -8.528312683105469
    8. '_space' → logprob: -9.028312683105469
    9. '_spaces' → logprob: -9.153312683105469
    10. '(s' → logprob: -9.778312683105469

Token 33: ' {}
' (ID: 11421)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5814204216003418
    2. '0' → logprob: -0.8314204216003418
    3. ' stars' → logprob: -5.581420421600342
    4. 'stars' → logprob: -6.706420421600342
    5. ' {}' → logprob: -9.4564208984375
    6. '{}' → logprob: -9.4564208984375
    7. 'len' → logprob: -9.9564208984375
    8. ' len' → logprob: -9.9564208984375
    9. '1' → logprob: -10.0814208984375
    10. ' sum' → logprob: -10.3314208984375

Token 34: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8746147155761719
    2. 'for' → logprob: -1.4996147155761719
    3. ' for' → logprob: -1.7496147155761719
    4. '   ' → logprob: -1.9996147155761719
    5. '\' → logprob: -4.624614715576172
    6. '    ' → logprob: -4.749614715576172
    7. '[' → logprob: -4.749614715576172
    8. '  ' → logprob: -4.874614715576172
    9. '    
' → logprob: -5.999614715576172
    10. '<|end|>' → logprob: -6.124614715576172

Token 35: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08207669109106064
    2. ' for' → logprob: -2.5820767879486084
    3. '   ' → logprob: -5.957076549530029
    4. ' ' → logprob: -7.582076549530029
    5. '	for' → logprob: -10.457077026367188
    6. '  ' → logprob: -10.582077026367188
    7. '    ' → logprob: -10.957077026367188
    8. 'f' → logprob: -12.707077026367188
    9. '    
' → logprob: -13.082077026367188
    10. ' 
' → logprob: -13.332077026367188

Token 36: ' color' (ID: 3089)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.22940556704998016
    2. 's' → logprob: -2.104405641555786
    3. ' star' → logprob: -2.854405641555786
    4. ' i' → logprob: -4.604405403137207
    5. ' ' → logprob: -4.979405403137207
    6. 'star' → logprob: -5.104405403137207
    7. 'i' → logprob: -6.479405403137207
    8. '   ' → logprob: -8.729405403137207
    9. ' c' → logprob: -8.854405403137207
    10. ' x' → logprob: -8.854405403137207

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010592625476419926
    2. 'in' → logprob: -4.635592460632324
    3. '_' → logprob: -7.885592460632324
    4. ' ' → logprob: -8.135592460632324
    5. '_in' → logprob: -9.385592460632324
    6. 's' → logprob: -10.260592460632324
    7. '	in' → logprob: -11.385592460632324
    8. ' _' → logprob: -11.760592460632324
    9. '  ' → logprob: -12.010592460632324
    10. ' i' → logprob: -12.135592460632324

Token 38: ' stars' (ID: 13701)
  Prédit: ' stars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stars' → logprob: -0.4740893542766571
    2. 'stars' → logprob: -0.9740893840789795
    3. 'st' → logprob: -12.474089622497559
    4. '	st' → logprob: -13.224089622497559
    5. 'star' → logprob: -13.724089622497559
    6. ' star' → logprob: -13.724089622497559
    7. 's' → logprob: -14.349089622497559
    8. '(st' → logprob: -14.599089622497559
    9. ' ' → logprob: -14.724089622497559
    10. ' colors' → logprob: -15.099089622497559

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029099658131599426
    2. ' :' → logprob: -5.877910137176514
    3. '):' → logprob: -9.877909660339355
    4. ':
' → logprob: -10.752909660339355
    5. '   ' → logprob: -11.627909660339355
    6. ' in' → logprob: -11.627909660339355
    7. ':**' → logprob: -12.752909660339355
    8. '    ' → logprob: -13.377909660339355
    9. '：' → logprob: -13.502909660339355
    10. '=' → logprob: -13.627909660339355

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00773805845528841
    2. ' ' → logprob: -6.25773811340332
    3. '    ' → logprob: -6.25773811340332
    4. '<|end|>' → logprob: -6.25773811340332
    5. '        ' → logprob: -6.50773811340332
    6. '   ' → logprob: -8.63273811340332
    7. '        
' → logprob: -9.13273811340332
    8. '      ' → logprob: -10.50773811340332
    9. '<|end|>' → logprob: -10.50773811340332
    10. '     ' → logprob: -11.13273811340332

Token 41: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011322376318275928
    2. ' count' → logprob: -5.386322498321533
    3. ' if' → logprob: -5.761322498321533
    4. '    ' → logprob: -6.261322498321533
    5. '   ' → logprob: -7.136322498321533
    6. 'count' → logprob: -7.636322498321533
    7. ' ' → logprob: -8.886322021484375
    8. '        ' → logprob: -9.136322021484375
    9. '```' → logprob: -10.886322021484375
    10. ' ```' → logprob: -11.636322021484375

Token 42: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.00038562860572710633
    2. 'color' → logprob: -7.875385761260986
    3. ' ' → logprob: -12.625385284423828
    4. ' ' → logprob: -14.000385284423828
    5. '	color' → logprob: -14.250385284423828
    6. ' not' → logprob: -15.375385284423828
    7. '(color' → logprob: -15.500385284423828
    8. ' count' → logprob: -16.000385284423828
    9. '=color' → logprob: -17.000385284423828
    10. ' colors' → logprob: -17.375385284423828

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2825295925140381
    2. ' not' → logprob: -1.407529592514038
    3. 'in' → logprob: -7.157529830932617
    4. 'not' → logprob: -7.532529830932617
    5. ' ' → logprob: -9.782529830932617
    6. '   ' → logprob: -13.407529830932617
    7. ')' → logprob: -13.532529830932617
    8. ' no' → logprob: -13.657529830932617
    9. ']' → logprob: -14.532529830932617
    10. '[' → logprob: -14.907529830932617

Token 44: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.25193557143211365
    2. 'count' → logprob: -1.501935601234436
    3. '	count' → logprob: -13.501935958862305
    4. '[count' → logprob: -13.751935958862305
    5. ' counts' → logprob: -13.876935958862305
    6. '<count' → logprob: -14.501935958862305
    7. '(count' → logprob: -14.626935958862305
    8. '$count' → logprob: -15.001935958862305
    9. '=count' → logprob: -15.126935958862305
    10. '   ' → logprob: -15.376935958862305

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004757135466206819
    2. ' :' → logprob: -8.000475883483887
    3. ':
' → logprob: -9.125475883483887
    4. '):' → logprob: -11.500475883483887
    5. '       ' → logprob: -12.250475883483887
    6. '=' → logprob: -12.250475883483887
    7. '           ' → logprob: -13.250475883483887
    8. '   ' → logprob: -13.750475883483887
    9. ':**' → logprob: -13.875475883483887
    10. '：' → logprob: -14.000475883483887

Token 46: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00030185774085111916
    2. '            ' → logprob: -9.6253023147583
    3. ' count' → logprob: -10.1253023147583
    4. ' ' → logprob: -10.2503023147583
    5. '```' → logprob: -10.2503023147583
    6. '<|end|>' → logprob: -10.7503023147583
    7. 'count' → logprob: -11.0003023147583
    8. '            
' → logprob: -11.0003023147583
    9. '[count' → logprob: -11.3753023147583
    10. '               ' → logprob: -11.5003023147583

Token 47: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.4753050208091736
    2. '               ' → logprob: -1.4753050804138184
    3. 'count' (adapté à ' count') → logprob: -1.9753050804138184
    4. '           ' → logprob: -5.350305080413818
    5. '            ' → logprob: -6.100305080413818
    6. ' ' → logprob: -6.350305080413818
    7. '[count' → logprob: -7.600305080413818
    8. ' 
' → logprob: -7.975305080413818
    9. '                ' → logprob: -8.35030460357666
    10. '       ' → logprob: -8.97530460357666

Token 48: '[color' (ID: 190244)
  Prédit: '[color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[color' → logprob: -1.282920129597187e-05
    2. '[' → logprob: -11.375012397766113
    3. '[count' → logprob: -14.625012397766113
    4. '=color' → logprob: -15.375012397766113
    5. '[col' → logprob: -15.500012397766113
    6. 'color' → logprob: -16.12501335144043
    7. '\[' → logprob: -16.62501335144043
    8. '[c' → logprob: -17.37501335144043
    9. '[class' → logprob: -17.50001335144043
    10. '```' → logprob: -17.75001335144043

Token 49: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06207602098584175
    2. ']+=' → logprob: -2.8120760917663574
    3. ' ]' → logprob: -9.5620756149292
    4. '+=' → logprob: -10.6870756149292
    5. ' +=' → logprob: -11.8120756149292
    6. '']' → logprob: -12.5620756149292
    7. ']+' → logprob: -13.5620756149292
    8. ']=' → logprob: -13.9370756149292
    9. '"]' → logprob: -14.1870756149292
    10. '[' → logprob: -14.8120756149292

Token 50: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3870055377483368
    2. '+=' → logprob: -1.1370055675506592
    3. '=' → logprob: -9.137005805969238
    4. ' =' → logprob: -11.012005805969238
    5. ']+=' → logprob: -11.762005805969238
    6. '+' → logprob: -13.762005805969238
    7. '   ' → logprob: -15.262005805969238
    8. '           ' → logprob: -15.262005805969238
    9. '    ' → logprob: -15.387005805969238
    10. ' ' → logprob: -15.512005805969238

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07888989895582199
    2. ' ' → logprob: -2.578889846801758
    3. '   ' → logprob: -15.953889846801758
    4. ' ' → logprob: -17.078889846801758
    5. '<|end|>' → logprob: -17.953889846801758
    6. '```' → logprob: -18.328889846801758
    7. '0' → logprob: -19.078889846801758
    8. '2' → logprob: -19.203889846801758
    9. '  ' → logprob: -19.391389846801758
    10. '+' → logprob: -20.266389846801758

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003806257154792547
    2. ' ' → logprob: -7.875380516052246
    3. '   ' → logprob: -14.625380516052246
    4. '  ' → logprob: -17.875381469726562
    5. '```' → logprob: -18.250381469726562
    6. '2' → logprob: -19.375381469726562
    7. '       ' → logprob: -19.500381469726562
    8. '0' → logprob: -20.062881469726562
    9. '           ' → logprob: -20.187881469726562
    10. '-' → logprob: -20.375381469726562

Token 53: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016342736780643463
    2. 'else' → logprob: -4.266342639923096
    3. ' else' → logprob: -6.141342639923096
    4. '<|end|>' → logprob: -11.391343116760254
    5. '   ' → logprob: -11.891343116760254
    6. '	else' → logprob: -12.891343116760254
    7. '```' → logprob: -13.141343116760254
    8. '      ' → logprob: -14.391343116760254
    9. 'elif' → logprob: -15.641343116760254
    10. '     ' → logprob: -15.641343116760254

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019187305122613907
    2. 'else' → logprob: -4.3941874504089355
    3. ' else' → logprob: -5.0191874504089355
    4. '   ' → logprob: -10.519186973571777
    5. '```' → logprob: -11.644186973571777
    6. '<|end|>' → logprob: -12.269186973571777
    7. '	else' → logprob: -12.894186973571777
    8. '      ' → logprob: -14.019186973571777
    9. '           ' → logprob: -15.019186973571777
    10. '_else' → logprob: -15.144186973571777

Token 55: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6692085862159729
    2. 'else' (adapté à ' else') → logprob: -0.9192085862159729
    3. '       ' → logprob: -2.419208526611328
    4. '   ' → logprob: -9.919208526611328
    5. '	else' → logprob: -12.294208526611328
    6. '```' → logprob: -12.919208526611328
    7. ' ' → logprob: -13.669208526611328
    8. '    ' → logprob: -14.044208526611328
    9. '  ' → logprob: -14.794208526611328
    10. '      ' → logprob: -14.919208526611328

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14832429587841034
    2. '           ' → logprob: -2.0233242511749268
    3. ':
' → logprob: -5.273324489593506
    4. '       ' → logprob: -7.773324489593506
    5. '          ' → logprob: -11.023324012756348
    6. '               ' → logprob: -11.023324012756348
    7. ' :' → logprob: -11.148324012756348
    8. '   ' → logprob: -11.523324012756348
    9. '```' → logprob: -12.273324012756348
    10. ':

' → logprob: -12.648324012756348

Token 57: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012672449462115765
    2. ' count' → logprob: -4.762672424316406
    3. 'count' → logprob: -5.512672424316406
    4. '   ' → logprob: -12.137672424316406
    5. '       ' → logprob: -13.012672424316406
    6. '          ' → logprob: -13.512672424316406
    7. '	count' → logprob: -13.637672424316406
    8. ' ' → logprob: -14.012672424316406
    9. '               ' → logprob: -14.137672424316406
    10. '	       ' → logprob: -14.887672424316406

Token 58: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.4743478000164032
    2. ' count' → logprob: -0.9743478298187256
    3. '           ' → logprob: -8.724348068237305
    4. '       ' → logprob: -9.974348068237305
    5. '   ' → logprob: -10.099348068237305
    6. ' ' → logprob: -11.349348068237305
    7. '	count' → logprob: -11.974348068237305
    8. '  ' → logprob: -14.099348068237305
    9. '```' → logprob: -14.849348068237305
    10. '[count' → logprob: -15.474348068237305

Token 59: '[color' (ID: 190244)
  Prédit: '[color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[color' → logprob: -0.008674376644194126
    2. '[' → logprob: -4.758674144744873
    3. '=' → logprob: -11.008674621582031
    4. '=color' → logprob: -11.758674621582031
    5. 'color' → logprob: -11.883674621582031
    6. '.setdefault' → logprob: -12.008674621582031
    7. '\[' → logprob: -12.133674621582031
    8. '[col' → logprob: -12.758674621582031
    9. '[count' → logprob: -12.758674621582031
    10. '```' → logprob: -13.508674621582031

Token 60: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003914695407729596
    2. ']=' → logprob: -8.000391006469727
    3. '=' → logprob: -10.000391006469727
    4. ' =' → logprob: -12.250391006469727
    5. ' ]' → logprob: -12.500391006469727
    6. '']' → logprob: -14.500391006469727
    7. ':' → logprob: -15.125391006469727
    8. ')' → logprob: -15.125391006469727
    9. '[' → logprob: -15.500391006469727
    10. '   ' → logprob: -15.625391006469727

Token 61: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. ' ' → logprob: -18.38604736328125
    4. '<|end|>' → logprob: -18.63604736328125
    5. '```' → logprob: -18.88604736328125
    6. '=
' → logprob: -18.88604736328125
    7. '＝' → logprob: -19.51104736328125
    8. '   ' → logprob: -19.63604736328125
    9. ')' → logprob: -19.88604736328125
    10. '=

' → logprob: -20.01104736328125

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0059310514479875565
    2. ' ' → logprob: -5.1309309005737305
    3. '   ' → logprob: -13.50593090057373
    4. '0' → logprob: -13.88093090057373
    5. '    ' → logprob: -17.505931854248047
    6. '  ' → logprob: -17.880931854248047
    7. ' ' → logprob: -18.505931854248047
    8. '       ' → logprob: -18.880931854248047
    9. '```' → logprob: -19.255931854248047
    10. '           ' → logprob: -19.505931854248047

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018125296628568321
    2. ' ' → logprob: -8.625181198120117
    3. '0' → logprob: -13.500181198120117
    4. '   ' → logprob: -15.125181198120117
    5. '  ' → logprob: -19.000181198120117
    6. '```' → logprob: -19.500181198120117
    7. '       ' → logprob: -20.125181198120117
    8. '    ' → logprob: -20.187681198120117
    9. ' ' → logprob: -20.750181198120117
    10. '１' → logprob: -21.125181198120117

Token 64: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006219217088073492
    2. '    
' → logprob: -5.256219387054443
    3. 'max' → logprob: -7.506219387054443
    4. '
' → logprob: -8.756218910217285
    5. ' max' → logprob: -9.506218910217285
    6. '        
' → logprob: -11.006218910217285
    7. ' for' → logprob: -11.006218910217285
    8. 'print' → logprob: -11.006218910217285
    9. '<|end|>' → logprob: -11.006218910217285
    10. '   
' → logprob: -11.131218910217285

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01277956087142229
    2. '    
' → logprob: -4.887779712677002
    3. 'max' → logprob: -6.262779712677002
    4. '
' → logprob: -6.637779712677002
    5. ' max' → logprob: -7.012779712677002
    6. '```' → logprob: -8.762779235839844
    7. ' keys' → logprob: -9.262779235839844
    8. 'print' → logprob: -9.262779235839844
    9. '   
' → logprob: -9.887779235839844
    10. ' for' → logprob: -10.012779235839844

Token 66: ' found' (ID: 2491)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3514471650123596
    2. ' max' → logprob: -1.7264471054077148
    3. '   ' → logprob: -2.726447105407715
    4. 'min' → logprob: -4.226447105407715
    5. 'most' → logprob: -4.601447105407715
    6. 'print' → logprob: -5.476447105407715
    7. ' most' → logprob: -5.726447105407715
    8. ' min' → logprob: -5.726447105407715
    9. 'answer' → logprob: -5.726447105407715
    10. 'result' → logprob: -5.976447105407715

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3412375748157501
    2. '_' → logprob: -1.4662375450134277
    3. '=' → logprob: -3.5912375450134277
    4. '(' → logprob: -3.9662375450134277
    5. '_color' → logprob: -5.091237545013428
    6. ':' → logprob: -6.091237545013428
    7. ' ' → logprob: -6.091237545013428
    8. ',' → logprob: -7.966237545013428
    9. '[' → logprob: -8.466238021850586
    10. '_space' → logprob: -8.466238021850586

Token 68: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.07008926570415497
    2. 'False' → logprob: -2.695089340209961
    3. ' any' → logprob: -9.820089340209961
    4. ' True' → logprob: -9.945089340209961
    5. ' ' → logprob: -10.445089340209961
    6. ' None' → logprob: -11.695089340209961
    7. 'True' → logprob: -13.070089340209961
    8. '   ' → logprob: -13.195089340209961
    9. '0' → logprob: -13.195089340209961
    10. ' max' → logprob: -13.320089340209961

Token 69: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07934180647134781
    2. ':' → logprob: -2.7043418884277344
    3. '    
' → logprob: -5.454341888427734
    4. '<|end|>' → logprob: -5.954341888427734
    5. '
' → logprob: -6.704341888427734
    6. '  
' → logprob: -7.704341888427734
    7. '    ' → logprob: -8.954341888427734
    8. '  ' → logprob: -9.204341888427734
    9. '\n' → logprob: -9.329341888427734
    10. '   
' → logprob: -9.454341888427734

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13535098731517792
    2. ':' → logprob: -2.1353509426116943
    3. '    
' → logprob: -5.885351181030273
    4. '<|end|>' → logprob: -5.885351181030273
    5. '
' → logprob: -7.135351181030273
    6. '    ' → logprob: -7.885351181030273
    7. ' ' → logprob: -8.135351181030273
    8. '  
' → logprob: -8.385351181030273
    9. '       ' → logprob: -8.510351181030273
    10. '  ' → logprob: -8.510351181030273

Token 71: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19272616505622864
    2. ' for' → logprob: -2.6927261352539062
    3. '
' → logprob: -3.0677261352539062
    4. ' 
' → logprob: -3.3177261352539062
    5. '    
' → logprob: -4.442726135253906
    6. 'for' (adapté à ' for') → logprob: -4.692726135253906
    7. '  
' → logprob: -6.692726135253906
    8. '\n' → logprob: -7.067726135253906
    9. '<|end|>' → logprob: -7.442726135253906
    10. '   
' → logprob: -7.567726135253906

Token 72: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.00704534025862813
    2. 'color' → logprob: -5.507045269012451
    3. ' key' → logprob: -6.382045269012451
    4. ' count' → logprob: -7.132045269012451
    5. ' value' → logprob: -9.13204574584961
    6. ' star' → logprob: -9.38204574584961
    7. ' col' → logprob: -9.50704574584961
    8. ' c' → logprob: -9.63204574584961
    9. ' ' → logprob: -10.13204574584961
    10. ' i' → logprob: -11.00704574584961

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00231607211753726
    2. ',' → logprob: -6.627315998077393
    3. 'in' → logprob: -7.002315998077393
    4. ' ,' → logprob: -10.25231647491455
    5. ' ' → logprob: -10.50231647491455
    6. '<|end|>' → logprob: -11.87731647491455
    7. '   ' → logprob: -12.87731647491455
    8. '  ' → logprob: -13.12731647491455
    9. '    ' → logprob: -13.37731647491455
    10. ',count' → logprob: -13.50231647491455

Token 74: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.07007814943790436
    2. 'count' → logprob: -2.695078134536743
    3. ' counts' → logprob: -10.070077896118164
    4. ' range' → logprob: -10.320077896118164
    5. '	count' → logprob: -11.070077896118164
    6. ' stars' → logprob: -11.195077896118164
    7. ' ' → logprob: -11.695077896118164
    8. 'stars' → logprob: -11.695077896118164
    9. '[count' → logprob: -12.445077896118164
    10. '   ' → logprob: -12.945077896118164

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011653418187052011
    2. '.keys' → logprob: -7.626165390014648
    3. '.values' → logprob: -8.126165390014648
    4. ':
' → logprob: -9.001165390014648
    5. '   ' → logprob: -9.126165390014648
    6. ' :' → logprob: -9.251165390014648
    7. ' if' → logprob: -11.376165390014648
    8. '.items' → logprob: -11.501165390014648
    9. ':**' → logprob: -11.876165390014648
    10. '):' → logprob: -12.001165390014648

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3255603015422821
    2. ':' → logprob: -1.3255603313446045
    3. '<|end|>' → logprob: -4.450560092926025
    4. '<|end|>' → logprob: -8.325560569763184
    5. ' if' → logprob: -9.950560569763184
    6. ':
' → logprob: -9.950560569763184
    7. '   ' → logprob: -9.950560569763184
    8. ',' → logprob: -10.325560569763184
    9. '    ' → logprob: -10.950560569763184
    10. '      ' → logprob: -11.075560569763184

Token 77: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002911384915933013
    2. ' if' → logprob: -6.002911567687988
    3. '<|end|>' → logprob: -8.127911567687988
    4. '        ' → logprob: -10.377911567687988
    5. '   ' → logprob: -10.877911567687988
    6. '    ' → logprob: -10.877911567687988
    7. ' ' → logprob: -11.127911567687988
    8. '           ' → logprob: -11.127911567687988
    9. 'if' (adapté à ' if') → logprob: -11.252911567687988
    10. '      ' → logprob: -12.127911567687988

Token 78: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.014191241934895515
    2. 'count' → logprob: -4.264191150665283
    3. '   ' → logprob: -10.639191627502441
    4. '(count' → logprob: -13.514191627502441
    5. '	count' → logprob: -13.889191627502441
    6. '    ' → logprob: -14.514191627502441
    7. ' ' → logprob: -15.014191627502441
    8. '[count' → logprob: -15.639191627502441
    9. ' counts' → logprob: -16.014190673828125
    10. '<count' → logprob: -16.514190673828125

Token 79: '[color' (ID: 190244)
  Prédit: '[color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[color' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.750001907348633
    3. '[count' → logprob: -15.500001907348633
    4. '```' → logprob: -16.125001907348633
    5. '[class' → logprob: -16.250001907348633
    6. '[size' → logprob: -16.375001907348633
    7. '[column' → logprob: -16.375001907348633
    8. '[col' → logprob: -16.625001907348633
    9. ' [' → logprob: -16.750001907348633
    10. '[
' → logprob: -17.375001907348633

Token 80: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.014258238486945629
    2. ' >=' → logprob: -4.88925838470459
    3. '>' → logprob: -5.38925838470459
    4. ' ' → logprob: -6.63925838470459
    5. ' ==' → logprob: -8.13925838470459
    6. ' *' → logprob: -8.51425838470459
    7. '*' → logprob: -8.76425838470459
    8. '>=' → logprob: -10.51425838470459
    9. '==' → logprob: -11.13925838470459
    10. ' %' → logprob: -11.26425838470459

Token 81: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.012368020601570606
    2. '>' → logprob: -4.887368202209473
    3. ' >=' → logprob: -5.762368202209473
    4. ' ' → logprob: -7.262368202209473
    5. ' ==' → logprob: -7.637368202209473
    6. ' *' → logprob: -8.637368202209473
    7. '*' → logprob: -9.137368202209473
    8. ' %' → logprob: -10.262368202209473
    9. '==' → logprob: -10.637368202209473
    10. ' ' → logprob: -10.887368202209473

Token 82: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.11929014325141907
    2. ' len' → logprob: -2.2442901134490967
    3. 'n' → logprob: -5.744290351867676
    4. 'len' → logprob: -6.369290351867676
    5. ' ' → logprob: -6.744290351867676
    6. ' (' → logprob: -8.119290351867676
    7. '(len' → logprob: -11.244290351867676
    8. '(' → logprob: -11.369290351867676
    9. '(n' → logprob: -11.869290351867676
    10. '   ' → logprob: -12.119290351867676

Token 83: ' /' (ID: 820)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.43140023946762085
    2. '//' → logprob: -1.0564002990722656
    3. '/' → logprob: -6.431400299072266
    4. ' ' → logprob: -7.806400299072266
    5. '```' → logprob: -8.931400299072266
    6. ' ' → logprob: -9.056400299072266
    7. '`' → logprob: -9.181400299072266
    8. ' /' → logprob: -9.556400299072266
    9. '"' → logprob: -9.806400299072266
    10. '2' → logprob: -9.931400299072266

Token 84: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005785312969237566
    2. ' ' → logprob: -7.5005784034729
    3. '3' → logprob: -10.750578880310059
    4. '   ' → logprob: -14.063078880310059
    5. '```' → logprob: -14.438078880310059
    6. '1' → logprob: -14.625578880310059
    7. '(' → logprob: -15.188078880310059
    8. '۲' → logprob: -15.500578880310059
    9. '4' → logprob: -15.688078880310059
    10. '200' → logprob: -15.875578880310059

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009504065383225679
    2. '3' → logprob: -7.000950336456299
    3. ' ' → logprob: -10.375950813293457
    4. '4' → logprob: -12.625950813293457
    5. '5' → logprob: -12.875950813293457
    6. '1' → logprob: -14.125950813293457
    7. '   ' → logprob: -15.250950813293457
    8. '```' → logprob: -15.750950813293457
    9. 'k' → logprob: -16.00094985961914
    10. '

' → logprob: -16.50094985961914

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.941161776310764e-05
    2. ':
' → logprob: -10.375039100646973
    3. '):' → logprob: -12.250039100646973
    4. ' :' → logprob: -13.500039100646973
    5. ':return' → logprob: -14.250039100646973
    6. ':**' → logprob: -14.375039100646973
    7. ')' → logprob: -15.500039100646973
    8. ' and' → logprob: -16.12504005432129
    9. '   ' → logprob: -16.50004005432129
    10. '.' → logprob: -16.75004005432129

Token 87: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7122201323509216
    2. '       ' → logprob: -0.7122201323509216
    3. '   ' → logprob: -4.587220191955566
    4. ':
' → logprob: -5.212220191955566
    5. '           ' → logprob: -6.212220191955566
    6. '\n' → logprob: -7.462220191955566
    7. 'print' → logprob: -8.712220191955566
    8. '
' → logprob: -9.337220191955566
    9. '\' → logprob: -9.837220191955566
    10. '.' → logprob: -9.837220191955566

Token 88: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.080305814743042
    2. ' print' → logprob: -1.080305814743042
    3. '           ' → logprob: -1.205305814743042
    4. '       ' → logprob: -4.455306053161621
    5. '   ' → logprob: -5.705306053161621
    6. '
' → logprob: -5.830306053161621
    7. '               ' → logprob: -6.080306053161621
    8. '\n' → logprob: -7.955306053161621
    9. ' 
' → logprob: -8.080306053161621
    10. '```' → logprob: -8.455306053161621

Token 89: '(color' (ID: 27329)
  Prédit: '(color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(color' → logprob: -0.08214893937110901
    2. '(' → logprob: -2.582149028778076
    3. 'color' → logprob: -6.957149028778076
    4. '(f' → logprob: -7.082149028778076
    5. '("' → logprob: -7.082149028778076
    6. '('' → logprob: -7.457149028778076
    7. '("("' → logprob: -11.207148551940918
    8. ' color' → logprob: -11.707148551940918
    9. '"' → logprob: -12.207148551940918
    10. ' (' → logprob: -12.457148551940918

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005938636604696512
    2. ')
' → logprob: -5.130938529968262
    3. ' )' → logprob: -12.380938529968262
    4. ')
' → logprob: -13.380938529968262
    5. '           ' → logprob: -13.755938529968262
    6. '   ' → logprob: -13.755938529968262
    7. '       ' → logprob: -14.005938529968262
    8. '```' → logprob: -15.005938529968262
    9. ')return' → logprob: -15.630938529968262
    10. ' ' → logprob: -15.630938529968262

Token 91: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000738038623239845
    2. '       ' → logprob: -7.375738143920898
    3. '   ' → logprob: -10.375738143920898
    4. '		' → logprob: -11.125738143920898
    5. '            
' → logprob: -11.125738143920898
    6. '```' → logprob: -11.250738143920898
    7. '               ' → logprob: -11.375738143920898
    8. '
' → logprob: -12.375738143920898
    9. '<|end|>' → logprob: -12.625738143920898
    10. '        
' → logprob: -12.875738143920898

Token 92: ' found' (ID: 2491)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009345068596303463
    2. '       ' → logprob: -5.384345054626465
    3. '   ' → logprob: -6.009345054626465
    4. 'found' (adapté à ' found') → logprob: -6.509345054626465
    5. ' found' → logprob: -7.509345054626465
    6. 'break' → logprob: -8.884345054626465
    7. ' break' → logprob: -9.759345054626465
    8. '```' → logprob: -11.759345054626465
    9. '	found' → logprob: -12.384345054626465
    10. '(found' → logprob: -12.509345054626465

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011255897581577301
    2. '=' → logprob: -4.511255741119385
    3. ' ' → logprob: -8.511256217956543
    4. '=True' → logprob: -12.261256217956543
    5. ' =)' → logprob: -14.261256217956543
    6. ' =
' → logprob: -14.886256217956543
    7. '    ' → logprob: -15.136256217956543
    8. ')' → logprob: -15.261256217956543
    9. ' True' → logprob: -16.386255264282227
    10. ' |=' → logprob: -16.511255264282227

Token 94: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -5.88418151892256e-05
    2. 'True' → logprob: -9.750059127807617
    3. ' ' → logprob: -14.625059127807617
    4. ' Tru' → logprob: -19.125059127807617
    5. ' ' → logprob: -20.750059127807617
    6. '(True' → logprob: -21.125059127807617
    7. '=True' → logprob: -21.875059127807617
    8. ' true' → logprob: -22.375059127807617
    9. ' Tr' → logprob: -22.500059127807617
    10. ' T' → logprob: -22.625059127807617

Token 95: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35442832112312317
    2. '           ' → logprob: -2.104428291320801
    3. '
' → logprob: -2.854428291320801
    4. '<|end|>' → logprob: -2.854428291320801
    5. '       ' → logprob: -3.604428291320801
    6. '\n' → logprob: -3.729428291320801
    7. '    
' → logprob: -5.229428291320801
    8. '    ' → logprob: -6.979428291320801
    9. ' ' → logprob: -7.229428291320801
    10. '\' → logprob: -7.354428291320801

Token 96: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4202788472175598
    2. '   ' → logprob: -1.170278787612915
    3. '       ' → logprob: -3.795278787612915
    4. '<|end|>' → logprob: -4.795279026031494
    5. '
' → logprob: -7.295279026031494
    6. '    
' → logprob: -7.920279026031494
    7. '```' → logprob: -8.295278549194336
    8. '    ' → logprob: -8.670278549194336
    9. '\n' → logprob: -8.795278549194336
    10. ' ' → logprob: -9.295278549194336

Token 97: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6366332173347473
    2. 'break' (adapté à ' break') → logprob: -1.6366331577301025
    3. ' break' → logprob: -1.8866331577301025
    4. '   ' → logprob: -2.5116331577301025
    5. '           ' → logprob: -3.1366331577301025
    6. '	break' → logprob: -9.011632919311523
    7. ' ' → logprob: -11.636632919311523
    8. '               ' → logprob: -12.136632919311523
    9. '    ' → logprob: -12.636632919311523
    10. '     ' → logprob: -13.261632919311523

Token 98: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' if' (ID: 538)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.031246382743120193
    2. '   ' → logprob: -4.031246185302734
    3. ' else' → logprob: -4.781246185302734
    4. 'if' (adapté à ' if') → logprob: -6.281246185302734
    5. '\n' → logprob: -7.156246185302734
    6. '<|end|>' → logprob: -7.156246185302734
    7. '    
' → logprob: -8.031246185302734
    8. '```' → logprob: -8.156246185302734
    9. 'elif' → logprob: -9.031246185302734
    10. '    ' → logprob: -9.406246185302734

Token 101: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.001714093261398375
    2. 'not' → logprob: -6.37671422958374
    3. ' ' → logprob: -12.126713752746582
    4. ' ' → logprob: -12.501713752746582
    5. ' no' → logprob: -13.126713752746582
    6. '	not' → logprob: -14.501713752746582
    7. 'n' → logprob: -16.2517147064209
    8. ' found' → logprob: -16.8767147064209
    9. ' n' → logprob: -17.3767147064209
    10. '​' → logprob: -17.5017147064209

Token 102: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.00026205103495158255
    2. 'found' → logprob: -8.250262260437012
    3. ' ' → logprob: -14.625262260437012
    4. ' ' → logprob: -15.625262260437012
    5. ' space' → logprob: -15.750262260437012
    6. '	found' → logprob: -16.875261306762695
    7. '_found' → logprob: -18.000261306762695
    8. ' Found' → logprob: -18.500261306762695
    9. '(found' → logprob: -19.000261306762695
    10. 'Found' → logprob: -19.500261306762695

Token 103: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0059304554015398026
    2. ':
' → logprob: -5.130930423736572
    3. '   ' → logprob: -14.25593090057373
    4. ' :' → logprob: -14.38093090057373
    5. ':

' → logprob: -15.50593090057373
    6. ':
' → logprob: -15.75593090057373
    7. ' :
' → logprob: -16.005929946899414
    8. '       ' → logprob: -17.630929946899414
    9. '():
' → logprob: -17.755929946899414
    10. 'print' → logprob: -18.130929946899414

Token 104: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0959300771355629
    2. ' print' → logprob: -2.9709300994873047
    3. 'print' → logprob: -3.2209300994873047
    4. '       ' → logprob: -8.345930099487305
    5. '	print' → logprob: -10.720930099487305
    6. '```' → logprob: -10.970930099487305
    7. '    ' → logprob: -11.720930099487305
    8. ' ' → logprob: -12.595930099487305
    9. '    
' → logprob: -12.970930099487305
    10. '   ' → logprob: -13.220930099487305

Token 105: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3067246377468109
    2. '   ' → logprob: -1.4317246675491333
    3. ' print' → logprob: -3.6817245483398438
    4. '	print' → logprob: -10.431724548339844
    5. '  ' → logprob: -11.556724548339844
    6. '    ' → logprob: -11.681724548339844
    7. ' ' → logprob: -11.681724548339844
    8. '```' → logprob: -11.806724548339844
    9. '       ' → logprob: -12.681724548339844
    10. '.print' → logprob: -14.181724548339844

Token 106: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.29484236240386963
    2. '(' → logprob: -1.4198423624038696
    3. '('' → logprob: -4.66984224319458
    4. '("?' → logprob: -6.04484224319458
    5. '()' → logprob: -6.79484224319458
    6. '(-' → logprob: -8.419842720031738
    7. '('?' → logprob: -8.544842720031738
    8. '(None' → logprob: -9.294842720031738
    9. '("")' → logprob: -9.919842720031738
    10. '(?)' → logprob: -10.169842720031738

Token 107: 'NO' (ID: 14695)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8157562613487244
    2. 'None' → logprob: -1.4407563209533691
    3. 'NONE' → logprob: -2.065756320953369
    4. '-' → logprob: -2.440756320953369
    5. 'NO' → logprob: -3.065756320953369
    6. '1' → logprob: -3.690756320953369
    7. '?' → logprob: -4.565756320953369
    8. 'NOT' → logprob: -4.940756320953369
    9. 'SY' → logprob: -5.315756320953369
    10. '"' → logprob: -5.565756320953369

Token 108: ' COLOR' (ID: 58403)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.005453243386000395
    2. ')' → logprob: -5.755453109741211
    3. ' ")' → logprob: -7.130453109741211
    4. ' STAR' → logprob: -7.755453109741211
    5. '")
' → logprob: -8.880453109741211
    6. ')")' → logprob: -9.255453109741211
    7. ' )' → logprob: -9.630453109741211
    8. ' PARTY' → logprob: -9.755453109741211
    9. ' ANSW' → logprob: -9.880453109741211
    10. ' MATCH' → logprob: -10.005453109741211

Token 109: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.004503823351114988
    2. 'S' → logprob: -5.6295037269592285
    3. ')' → logprob: -7.2545037269592285
    4. ')")' → logprob: -8.754504203796387
    5. 's' → logprob: -10.879504203796387
    6. '")
' → logprob: -11.504504203796387
    7. '!")' → logprob: -13.004504203796387
    8. ' ")' → logprob: -13.004504203796387
    9. '"' → logprob: -13.629504203796387
    10. ' )' → logprob: -14.379504203796387


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 107
Tokens correctement prédits (1ère position, stricte): 54
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 92
Précision stricte (1ère position): 50.47%
Précision adaptée (1ère position): 54.21%
Précision (top 10): 85.98%
================================================================================
