================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class MagicSquareFactory:
    def __init__(self, n: int):
        self.n = n
        self.square = [[0] * n for _ in range(n)]

    def in_bounds(self, row: int, col: int) -> bool:
        return 0 <= row < self.n and 0 <= col < self.n

    def left_down(self, row: int, col: int):
        # Move one down and one left, wrapping around
        new_row = (row + 1) % self.n
        new_col = (col - 1) % self.n
        return new_row, new_col

    def right_down(self, row: int, col: int):
        # Move one down and one right, wrapping around per problem spec:
        new_row = row + 1
        new_col = col + 1
        if new_col == self.n:
            new_col = 0
        if new_row == self.n:
            new_row = 0
        return new_row, new_col

    def iterate_positions(self):
        # Iterator for all positions for extensibility
        for r in range(self.n):
            for c in range(self.n):
                yield r, c

    def generate(self):
        # Place 1 at central cell in middle row +1 (1 below center)
        center_col = self.n // 2
        # According to problem: 1 is placed "just below the center cell"
        current_row = self.n // 2 + 1
        if current_row == self.n:
            current_row = 0
        current_col = center_col
        self.square[current_row][current_col] = 1

        for num in range(2, self.n * self.n + 1):
            # Proposed next cell: right down diagonal by 1 cell
            next_row, next_col = self.right_down(current_row, current_col)

            # Check if occupied, if yes place left down from current pos
            if self.square[next_row][next_col] != 0:
                next_row, next_col = self.left_down(current_row, current_col)

            self.square[next_row][next_col] = num
            current_row, current_col = next_row, next_col
        return self.square

class MagicSquarePrinter:
    def __init__(self, square):
        self.square = square

    def format_row(self, row):
        # Format numbers right aligned, 4 width decimal
        return " ".join(f"{num:>4d}" for num in row)

    def print(self):
        lines = [self.format_row(row) for row in self.square]
        return "\n".join(lines)

class MagicSquareProcessor:
    def __init__(self):
        self.results = []

    @staticmethod
    def validate_n(n: int):
        if not (3 <= n <= 15):
            raise ValueError("n must be between 3 and 15 inclusive")
        if n % 2 == 0:
            raise ValueError("n must be odd")

    def process(self, ns):
        for n in ns:
            if n == 0:
                break
            self.validate_n(n)
            factory = MagicSquareFactory(n)
            square = factory.generate()
            self.results.append(square)

    def output(self):
        return "\n\n".join(MagicSquarePrinter(square).print() for square in self.results)

def main():
    import sys
    inputs = []
    for line in sys.stdin:
        line = line.strip()
        if line == '':
            continue
        inputs.append(int(line))
        if int(line) == 0:
            break
    processor = MagicSquareProcessor()
    processor.process(inputs)
    print(processor.output())

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Magic' (ID: 29113)
  → Token d'amorce (pas de prédiction)

Token 2: 'Square' (ID: 36631)
  → Token d'amorce (pas de prédiction)

Token 3: 'Factory' (ID: 4870)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3599395453929901
    2. '(' → logprob: -1.2349395751953125
    3. '{' → logprob: -4.7349395751953125
    4. '.' → logprob: -6.2349395751953125
    5. ' {' → logprob: -8.359939575195312
    6. '[' → logprob: -9.234939575195312
    7. '```' → logprob: -9.484939575195312
    8. ' :' → logprob: -9.609939575195312
    9. ' ' → logprob: -9.734939575195312
    10. '():' → logprob: -10.109939575195312

Token 4: ':
' (ID: 734)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6574582457542419
    2. '(' → logprob: -1.5324583053588867
    3. ':' → logprob: -1.5324583053588867
    4. '{' → logprob: -3.0324583053588867
    5. ' {' → logprob: -7.032458305358887
    6. ' ' → logprob: -8.407458305358887
    7. '[' → logprob: -8.782458305358887
    8. ' (' → logprob: -9.907458305358887
    9. ';' → logprob: -10.032458305358887
    10. '(space' → logprob: -10.532458305358887

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10399656742811203
    2. '(' → logprob: -2.478996515274048
    3. '   ' → logprob: -4.728996753692627
    4. '```' → logprob: -6.228996753692627
    5. '.' → logprob: -6.353996753692627
    6. ':
' → logprob: -6.478996753692627
    7. '():' → logprob: -8.228996276855469
    8. '(
' → logprob: -8.728996276855469
    9. '[' → logprob: -8.978996276855469
    10. '\' → logprob: -9.603996276855469

Token 6: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5746201872825623
    2. ' ' → logprob: -1.949620246887207
    3. '```' → logprob: -2.574620246887207
    4. '    ' → logprob: -2.824620246887207
    5. '_' → logprob: -3.199620246887207
    6. '\' → logprob: -3.699620246887207
    7. '[' → logprob: -3.949620246887207
    8. ' def' → logprob: -4.574620246887207
    9. '(' → logprob: -4.574620246887207
    10. ''' → logprob: -4.699620246887207

Token 7: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8043163418769836
    2. ' create' → logprob: -1.4293162822723389
    3. '__' → logprob: -1.8043162822723389
    4. ' __' → logprob: -2.554316282272339
    5. 'create' → logprob: -3.054316282272339
    6. ' ' → logprob: -4.554316520690918
    7. 'generate' → logprob: -6.179316520690918
    8. '_create' → logprob: -6.304316520690918
    9. ' calculate' → logprob: -6.304316520690918
    10. 'calculate' → logprob: -6.804316520690918

Token 8: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.259079363080673e-05
    2. ' init' → logprob: -11.750012397766113
    3. 'i' → logprob: -12.750012397766113
    4. 'ini' → logprob: -13.750012397766113
    5. 'in' → logprob: -14.875012397766113
    6. '_init' → logprob: -15.125012397766113
    7. '	init' → logprob: -17.25001335144043
    8. 'new' → logprob: -18.50001335144043
    9. 'int' → logprob: -18.62501335144043
    10. 'innit' → logprob: -19.00001335144043

Token 9: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.350094199180603
    2. '(' → logprob: -1.725094199180603
    3. '__' → logprob: -2.3500943183898926
    4. '__(
' → logprob: -4.600094318389893
    5. ' (' → logprob: -5.225094318389893
    6. '(self' → logprob: -5.975094318389893
    7. '_' → logprob: -6.600094318389893
    8. '__((' → logprob: -6.850094318389893
    9. '__(*' → logprob: -8.100093841552734
    10. '```' → logprob: -8.475093841552734

Token 10: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.010317162610590458
    2. ' self' → logprob: -4.635317325592041
    3. ')' → logprob: -7.635317325592041
    4. '(self' → logprob: -10.510316848754883
    5. ' )' → logprob: -11.010316848754883
    6. ' ' → logprob: -11.260316848754883
    7. '	self' → logprob: -12.385316848754883
    8. '   ' → logprob: -12.760316848754883
    9. ' ' → logprob: -13.010316848754883
    10. '       ' → logprob: -13.010316848754883

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048558302223682404
    2. '):' → logprob: -3.423558235168457
    3. 'self' → logprob: -4.798558235168457
    4. ')' → logprob: -5.423558235168457
    5. ' ,' → logprob: -6.798558235168457
    6. ' self' → logprob: -8.923558235168457
    7. '   ' → logprob: -9.048558235168457
    8. ',self' → logprob: -9.048558235168457
    9. '<|end|>' → logprob: -9.298558235168457
    10. ' ):' → logprob: -9.423558235168457

Token 12: ' n' (ID: 297)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7503436207771301
    2. 'self' → logprob: -1.5003435611724854
    3. ' n' → logprob: -1.7503435611724854
    4. ' size' → logprob: -2.6253435611724854
    5. 'n' → logprob: -3.0003435611724854
    6. 'size' → logprob: -5.1253437995910645
    7. '   ' → logprob: -6.7503437995910645
    8. ')' → logprob: -6.8753437995910645
    9. '       ' → logprob: -9.125343322753906
    10. '    ' → logprob: -9.375343322753906

Token 13: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0035889027640223503
    2. ')' → logprob: -6.003588676452637
    3. ':' → logprob: -7.003588676452637
    4. '=' → logprob: -9.003588676452637
    5. '):
' → logprob: -9.628588676452637
    6. ' ):' → logprob: -12.253588676452637
    7. ',' → logprob: -13.003588676452637
    8. '```' → logprob: -13.753588676452637
    9. '_' → logprob: -14.003588676452637
    10. '   ' → logprob: -14.253588676452637

Token 14: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47410938143730164
    2. 'int' → logprob: -0.974109411239624
    3. '=int' → logprob: -11.599109649658203
    4. ':int' → logprob: -11.849109649658203
    5. ')' → logprob: -12.099109649658203
    6. '[int' → logprob: -12.849109649658203
    7. ' )' → logprob: -13.099109649658203
    8. '<int' → logprob: -13.224109649658203
    9. '(int' → logprob: -13.849109649658203
    10. ',int' → logprob: -13.974109649658203

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01287100836634636
    2. ')' → logprob: -4.387870788574219
    3. '):
' → logprob: -8.137870788574219
    4. ':' → logprob: -10.137870788574219
    5. ',' → logprob: -11.137870788574219
    6. '   ' → logprob: -11.887870788574219
    7. '):
' → logprob: -13.637870788574219
    8. ' ):' → logprob: -13.637870788574219
    9. '       ' → logprob: -14.012870788574219
    10. '```' → logprob: -14.012870788574219

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017646558582782745
    2. '<|end|>' → logprob: -4.267646789550781
    3. '   ' → logprob: -7.267646789550781
    4. '        
' → logprob: -7.642646789550781
    5. '\n' → logprob: -8.017646789550781
    6. '
' → logprob: -8.017646789550781
    7. '<|end|>' → logprob: -8.267646789550781
    8. ' 
' → logprob: -8.267646789550781
    9. '```' → logprob: -9.017646789550781
    10. 'newline' → logprob: -9.017646789550781

Token 17: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3114820122718811
    2. 'self' (adapté à ' self') → logprob: -1.4364819526672363
    3. ' self' → logprob: -4.061481952667236
    4. '```' → logprob: -4.561481952667236
    5. '\' → logprob: -7.811481952667236
    6. ' ' → logprob: -7.936481952667236
    7. '<|end|>' → logprob: -7.936481952667236
    8. '\n' → logprob: -8.061482429504395
    9. '   ' → logprob: -8.561482429504395
    10. ' ' → logprob: -9.561482429504395

Token 18: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09568235278129578
    2. '.n' → logprob: -2.470682382583618
    3. ' .' → logprob: -5.220682144165039
    4. '.s' → logprob: -8.470682144165039
    5. '._' → logprob: -8.720682144165039
    6. '.size' → logprob: -8.970682144165039
    7. ' ' → logprob: -8.970682144165039
    8. ' is' → logprob: -9.345682144165039
    9. '.square' → logprob: -9.345682144165039
    10. 'n' → logprob: -9.720682144165039

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20144355297088623
    2. '=' → logprob: -1.7014435529708862
    3. '_' → logprob: -11.951443672180176
    4. '   ' → logprob: -12.201443672180176
    5. ' ' → logprob: -12.451443672180176
    6. '.' → logprob: -12.451443672180176
    7. '    ' → logprob: -13.201443672180176
    8. ')' → logprob: -13.451443672180176
    9. '  ' → logprob: -13.826443672180176
    10. '<|end|>' → logprob: -13.951443672180176

Token 20: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04858805239200592
    2. 'n' → logprob: -3.0485880374908447
    3. '	n' → logprob: -15.423587799072266
    4. ' ' → logprob: -15.548587799072266
    5. ' ' → logprob: -16.173587799072266
    6. ')n' → logprob: -16.923587799072266
    7. '```' → logprob: -17.048587799072266
    8. '_n' → logprob: -17.548587799072266
    9. '    ' → logprob: -17.548587799072266
    10. 'int' → logprob: -17.923587799072266

Token 21: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7033132910728455
    2. '<|end|>' → logprob: -1.2033133506774902
    3. '   ' → logprob: -2.2033133506774902
    4. '\' → logprob: -3.5783133506774902
    5. '    
' → logprob: -3.8283133506774902
    6. '\n' → logprob: -4.07831335067749
    7. '```' → logprob: -4.57831335067749
    8. ' 
' → logprob: -5.32831335067749
    9. '<|end|>' → logprob: -5.95331335067749
    10. '  
' → logprob: -6.20331335067749

Token 22: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.580892026424408
    2. '
' → logprob: -1.2058920860290527
    3. '\n' → logprob: -3.0808920860290527
    4. '<|end|>' → logprob: -3.0808920860290527
    5. '\' → logprob: -4.080892086029053
    6. '```' → logprob: -4.080892086029053
    7. '    
' → logprob: -4.830892086029053
    8. '<|end|>' → logprob: -6.455892086029053
    9. 'n' → logprob: -6.830892086029053
    10. '  
' → logprob: -7.455892086029053

Token 23: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06486178189516068
    2. '       ' → logprob: -3.93986177444458
    3. '
' → logprob: -4.06486177444458
    4. '\n' → logprob: -4.31486177444458
    5. ':' → logprob: -5.56486177444458
    6. 'def' → logprob: -6.18986177444458
    7. '    
' → logprob: -6.43986177444458
    8. '```' → logprob: -6.68986177444458
    9. '\' → logprob: -6.81486177444458
    10. ' ' → logprob: -7.31486177444458

Token 24: '.square' (ID: 77530)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0015106932260096073
    2. '.matrix' → logprob: -8.376510620117188
    3. '._' → logprob: -8.501510620117188
    4. '.n' → logprob: -8.751510620117188
    5. ' .' → logprob: -8.876510620117188
    6. '.s' → logprob: -8.876510620117188
    7. '.grid' → logprob: -8.876510620117188
    8. '.square' → logprob: -9.251510620117188
    9. '.magic' → logprob: -9.751510620117188
    10. '.is' → logprob: -9.876510620117188

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03381339833140373
    2. '=' → logprob: -3.4088134765625
    3. 's' → logprob: -9.9088134765625
    4. '[' → logprob: -10.4088134765625
    5. ' =
' → logprob: -10.5338134765625
    6. '[:]' → logprob: -11.0338134765625
    7. '<|end|>' → logprob: -11.5338134765625
    8. '_' → logprob: -11.5338134765625
    9. '  ' → logprob: -12.2838134765625
    10. '=[]' → logprob: -12.2838134765625

Token 26: ' [[' (ID: 9237)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.31884121894836426
    2. ' []' → logprob: -2.0688412189483643
    3. ' [[' → logprob: -2.4438412189483643
    4. '[' → logprob: -3.5688412189483643
    5. '[[' → logprob: -3.8188412189483643
    6. ' [' → logprob: -4.943840980529785
    7. 'None' → logprob: -6.818840980529785
    8. ' None' → logprob: -7.193840980529785
    9. '[][]' → logprob: -8.068840980529785
    10. ' [[]' → logprob: -8.568840980529785

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004682073777075857
    2. ' ' → logprob: -7.7504682540893555
    3. '1' → logprob: -10.375468254089355
    4. '   ' → logprob: -13.125468254089355
    5. ']' → logprob: -13.750468254089355
    6. '[' → logprob: -14.250468254089355
    7. ' ]' → logprob: -14.625468254089355
    8. ')' → logprob: -14.750468254089355
    9. '    ' → logprob: -15.000468254089355
    10. '  ' → logprob: -15.375468254089355

Token 28: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05325746908783913
    2. ' ]' → logprob: -3.553257465362549
    3. 'for' → logprob: -4.553257465362549
    4. ']' → logprob: -4.678257465362549
    5. ' ' → logprob: -5.803257465362549
    6. ' ]]' → logprob: -9.053257942199707
    7. '<|end|>' → logprob: -9.053257942199707
    8. ')' → logprob: -10.428257942199707
    9. ']*' → logprob: -11.053257942199707
    10. ')]' → logprob: -11.178257942199707

Token 29: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03499627113342285
    2. 'for' → logprob: -3.409996271133423
    3. ']' → logprob: -7.284996032714844
    4. ' ]' → logprob: -7.784996032714844
    5. ' ' → logprob: -8.659996032714844
    6. ']*' → logprob: -10.284996032714844
    7. '   ' → logprob: -11.534996032714844
    8. '	for' → logprob: -12.034996032714844
    9. ')' → logprob: -12.534996032714844
    10. '[' → logprob: -12.534996032714844

Token 30: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.47430190443992615
    2. 'n' → logprob: -0.9743019342422485
    3. 'self' → logprob: -8.724302291870117
    4. ' self' → logprob: -9.724302291870117
    5. '	n' → logprob: -13.349302291870117
    6. '(n' → logprob: -14.474302291870117
    7. ')n' → logprob: -15.974302291870117
    8. ' ' → logprob: -16.099302291870117
    9. ' ' → logprob: -16.224302291870117
    10. ' (' → logprob: -17.599302291870117

Token 31: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07014716416597366
    2. 'for' → logprob: -2.6951472759246826
    3. ']' → logprob: -8.820147514343262
    4. ' ]' → logprob: -10.945147514343262
    5. ')' → logprob: -11.070147514343262
    6. '       ' → logprob: -11.195147514343262
    7. '           ' → logprob: -12.070147514343262
    8. '```' → logprob: -12.945147514343262
    9. ' ' → logprob: -13.195147514343262
    10. '   ' → logprob: -13.320147514343262

Token 32: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.09371938556432724
    2. ' _' → logprob: -2.468719482421875
    3. '_' → logprob: -6.468719482421875
    4. ' i' → logprob: -6.718719482421875
    5. ' ' → logprob: -7.093719482421875
    6. ' row' → logprob: -8.218719482421875
    7. '<|end|>' → logprob: -8.468719482421875
    8. 'range' → logprob: -8.718719482421875
    9. ' xrange' → logprob: -8.843719482421875
    10. '	range' → logprob: -9.343719482421875

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013810674427077174
    2. 'in' → logprob: -6.751380920410156
    3. ' ' → logprob: -9.251380920410156
    4. '<|end|>' → logprob: -9.751380920410156
    5. 'range' → logprob: -10.751380920410156
    6. ' range' → logprob: -11.751380920410156
    7. 'n' → logprob: -11.876380920410156
    8. ' n' → logprob: -12.251380920410156
    9. '<|end|>' → logprob: -12.251380920410156
    10. '  ' → logprob: -12.501380920410156

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029753267765045166
    2. 'range' → logprob: -3.5297532081604004
    3. '	range' → logprob: -13.654753684997559
    4. ' ' → logprob: -14.279753684997559
    5. ' rang' → logprob: -14.654753684997559
    6. ' ran' → logprob: -16.279752731323242
    7. '_range' → logprob: -16.404752731323242
    8. 'rang' → logprob: -16.404752731323242
    9. 'Range' → logprob: -16.904752731323242
    10. '(range' → logprob: -16.904752731323242

Token 35: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0028653775807470083
    2. '(' → logprob: -5.877865314483643
    3. '(self' → logprob: -10.5028657913208
    4. 'n' → logprob: -11.0028657913208
    5. ' (' → logprob: -11.3778657913208
    6. '(s' → logprob: -12.6278657913208
    7. ' n' → logprob: -13.5028657913208
    8. 'self' → logprob: -16.377864837646484
    9. ' ' → logprob: -16.627864837646484
    10. '(
' → logprob: -17.377864837646484

Token 36: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001733855315251276
    2. ')])' → logprob: -9.375173568725586
    3. '])]' → logprob: -10.375173568725586
    4. ')' → logprob: -10.625173568725586
    5. ']' → logprob: -10.625173568725586
    6. ' )' → logprob: -12.625173568725586
    7. '])' → logprob: -13.125173568725586
    8. ')],' → logprob: -14.000173568725586
    9. '   ' → logprob: -14.250173568725586
    10. '       ' → logprob: -14.750173568725586

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09730007499456406
    2. ' 
' → logprob: -2.9723000526428223
    3. ' ' → logprob: -4.222300052642822
    4. '    
' → logprob: -4.972300052642822
    5. '
' → logprob: -5.097300052642822
    6. '\' → logprob: -5.472300052642822
    7. '    ' → logprob: -5.722300052642822
    8. '\n' → logprob: -6.347300052642822
    9. '' → logprob: -7.097300052642822
    10. ' \' → logprob: -7.472300052642822

Token 38: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.847858190536499
    2. 'def' (adapté à ' def') → logprob: -1.222858190536499
    3. ' 
' → logprob: -1.972858190536499
    4. 'd' → logprob: -2.847858190536499
    5. ' def' → logprob: -3.222858190536499
    6. ' ' → logprob: -4.722858428955078
    7. '    ' → logprob: -4.847858428955078
    8. '_' → logprob: -5.222858428955078
    9. '    
' → logprob: -5.222858428955078
    10. '```' → logprob: -5.722858428955078

Token 39: ' in' (ID: 306)
  Prédit: ' generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' generate' → logprob: -0.49896591901779175
    2. ' create' → logprob: -0.9989659190177917
    3. ' build' → logprob: -4.623965740203857
    4. ' ' → logprob: -5.373965740203857
    5. ' g' → logprob: -5.873965740203857
    6. ' solve' → logprob: -5.873965740203857
    7. ' make' → logprob: -6.373965740203857
    8. 'generate' → logprob: -6.498965740203857
    9. 'create' → logprob: -8.248966217041016
    10. ' fill' → logprob: -8.248966217041016

Token 40: '_bounds' (ID: 90408)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.8015486001968384
    2. '_' → logprob: -1.8015486001968384
    3. '_bounds' → logprob: -2.051548480987549
    4. 'itialize' → logprob: -2.426548480987549
    5. '_range' → logprob: -2.801548480987549
    6. 't' → logprob: -3.676548480987549
    7. 'side' → logprob: -4.051548480987549
    8. 'dex' → logprob: -4.551548480987549
    9. 'put' → logprob: -4.676548480987549
    10. 'itial' → logprob: -4.676548480987549

Token 41: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5764005184173584
    2. '(self' → logprob: -0.8264005184173584
    3. ' (' → logprob: -8.076400756835938
    4. 'self' → logprob: -9.826400756835938
    5. '(s' → logprob: -9.826400756835938
    6. '(
' → logprob: -10.951400756835938
    7. ' ' → logprob: -11.951400756835938
    8. '(x' → logprob: -12.826400756835938
    9. ')' → logprob: -13.201400756835938
    10. '(sel' → logprob: -13.451400756835938

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004490057937800884
    2. ' ,' → logprob: -5.504489898681641
    3. 'self' → logprob: -8.00448989868164
    4. ',row' → logprob: -10.75448989868164
    5. ')' → logprob: -11.00448989868164
    6. ',x' → logprob: -11.25448989868164
    7. '):' → logprob: -11.50448989868164
    8. ',self' → logprob: -13.00448989868164
    9. 's' → logprob: -13.12948989868164
    10. ' ' → logprob: -13.25448989868164

Token 43: ' row' (ID: 5225)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18340060114860535
    2. ' self' → logprob: -1.8084006309509277
    3. 'x' → logprob: -6.183400630950928
    4. 'row' → logprob: -7.183400630950928
    5. ' row' → logprob: -8.43340015411377
    6. ' x' → logprob: -8.68340015411377
    7. 'i' → logprob: -8.80840015411377
    8. 'r' → logprob: -9.55840015411377
    9. '   ' → logprob: -9.80840015411377
    10. '       ' → logprob: -9.93340015411377

Token 44: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003590452251955867
    2. ' ,' → logprob: -5.7535905838012695
    3. '):' → logprob: -8.25359058380127
    4. ':' → logprob: -9.12859058380127
    5. ')' → logprob: -10.75359058380127
    6. '+' → logprob: -12.25359058380127
    7. ',row' → logprob: -12.37859058380127
    8. ' ' → logprob: -13.50359058380127
    9. ',int' → logprob: -13.62859058380127
    10. ':int' → logprob: -13.75359058380127

Token 45: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5764721035957336
    2. 'int' → logprob: -0.8264721035957336
    3. ':int' → logprob: -8.951472282409668
    4. ',int' → logprob: -9.326472282409668
    5. ' ,' → logprob: -9.576472282409668
    6. ')' → logprob: -9.826472282409668
    7. ' ' → logprob: -9.951472282409668
    8. ',' → logprob: -10.076472282409668
    9. ' self' → logprob: -10.451472282409668
    10. '   ' → logprob: -10.951472282409668

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004294771933928132
    2. ' ,' → logprob: -7.875429630279541
    3. ')' → logprob: -10.625429153442383
    4. ',row' → logprob: -11.125429153442383
    5. '):' → logprob: -12.625429153442383
    6. ' ' → logprob: -13.125429153442383
    7. ':' → logprob: -13.625429153442383
    8. '   ' → logprob: -13.875429153442383
    9. ',
' → logprob: -14.250429153442383
    10. ',int' → logprob: -15.125429153442383

Token 47: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.07022751867771149
    2. 'col' → logprob: -2.69522762298584
    3. ' column' → logprob: -8.44522762298584
    4. 'column' → logprob: -10.07022762298584
    5. '	col' → logprob: -10.69522762298584
    6. ' ' → logprob: -12.57022762298584
    7. '   ' → logprob: -12.94522762298584
    8. ')' → logprob: -13.94522762298584
    9. 'colm' → logprob: -13.94522762298584
    10. ' colspan' → logprob: -13.94522762298584

Token 48: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03212917968630791
    2. ')' → logprob: -3.7821292877197266
    3. ':' → logprob: -4.782129287719727
    4. ' ):' → logprob: -8.032129287719727
    5. '):
' → logprob: -9.657129287719727
    6. '   ' → logprob: -10.782129287719727
    7. ' ' → logprob: -11.157129287719727
    8. ',' → logprob: -11.407129287719727
    9. ' )' → logprob: -11.532129287719727
    10. ':int' → logprob: -12.657129287719727

Token 49: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47517985105514526
    2. 'int' → logprob: -0.9751798510551453
    3. ')' → logprob: -6.975179672241211
    4. ' )' → logprob: -9.100179672241211
    5. ':int' → logprob: -10.475179672241211
    6. ' ' → logprob: -11.850179672241211
    7. '):' → logprob: -12.225179672241211
    8. '   ' → logprob: -12.475179672241211
    9. '	int' → logprob: -13.225179672241211
    10. '[int' → logprob: -13.475179672241211

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6933670043945312
    2. '):' → logprob: -0.6933670043945312
    3. '   ' → logprob: -9.693367004394531
    4. ':' → logprob: -10.068367004394531
    5. ' ):' → logprob: -10.068367004394531
    6. ' )' → logprob: -10.568367004394531
    7. '):
' → logprob: -10.568367004394531
    8. ')->' → logprob: -11.943367004394531
    9. ' ' → logprob: -12.318367004394531
    10. '       ' → logprob: -13.443367004394531

Token 51: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6725375652313232
    2. ' ->' → logprob: -1.0475375652313232
    3. '->' → logprob: -2.0475375652313232
    4. ')' → logprob: -5.172537803649902
    5. ')->' → logprob: -6.047537803649902
    6. '):' → logprob: -6.797537803649902
    7. '   ' → logprob: -8.547537803649902
    8. '       ' → logprob: -8.547537803649902
    9. ' :' → logprob: -9.422537803649902
    10. ':return' → logprob: -10.047537803649902

Token 52: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.026393074542284012
    2. 'bool' → logprob: -3.651393175125122
    3. ' ' → logprob: -10.026392936706543
    4. ' ' → logprob: -10.276392936706543
    5. '  ' → logprob: -12.526392936706543
    6. '	bool' → logprob: -12.901392936706543
    7. ' True' → logprob: -13.276392936706543
    8. ' int' → logprob: -13.526392936706543
    9. '   ' → logprob: -13.776392936706543
    10. 'int' → logprob: -13.901392936706543

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00025942857610061765
    2. '):' → logprob: -8.625259399414062
    3. ':return' → logprob: -10.000259399414062
    4. '():' → logprob: -11.250259399414062
    5. ':**' → logprob: -12.000259399414062
    6. ' :' → logprob: -12.250259399414062
    7. ':
' → logprob: -12.375259399414062
    8. '<|end|>' → logprob: -13.000259399414062
    9. '>:' → logprob: -14.000259399414062
    10. '   ' → logprob: -14.000259399414062

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11126513034105301
    2. '<|end|>' → logprob: -2.361265182495117
    3. '   ' → logprob: -5.611265182495117
    4. ' ' → logprob: -5.611265182495117
    5. ':' → logprob: -7.111265182495117
    6. ':return' → logprob: -7.486265182495117
    7. ' return' → logprob: -7.611265182495117
    8. '    ' → logprob: -7.986265182495117
    9. ')' → logprob: -8.361265182495117
    10. ' 
' → logprob: -8.736265182495117

Token 55: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.050432998687028885
    2. '0' → logprob: -3.9254329204559326
    3. ' return' → logprob: -4.050433158874512
    4. '       ' → logprob: -4.425433158874512
    5. ':return' → logprob: -11.300433158874512
    6. '   ' → logprob: -11.550433158874512
    7. ' ' → logprob: -11.675433158874512
    8. '1' → logprob: -12.050433158874512
    9. '```' → logprob: -12.050433158874512
    10. '{return' → logprob: -12.175433158874512

Token 56: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42882323265075684
    2. ' ' → logprob: -1.0538232326507568
    3. ' (' → logprob: -9.178823471069336
    4. '(' → logprob: -11.303823471069336
    5. ' ' → logprob: -12.803823471069336
    6. ' row' → logprob: -13.553823471069336
    7. '   ' → logprob: -14.053823471069336
    8. ' self' → logprob: -14.303823471069336
    9. 'row' → logprob: -14.678823471069336
    10. '(row' → logprob: -14.928823471069336

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '(' → logprob: -15.125009536743164
    4. '   ' → logprob: -18.000009536743164
    5. 'row' → logprob: -18.750009536743164
    6. ' (' → logprob: -19.875009536743164
    7. '(row' → logprob: -21.000009536743164
    8. '  ' → logprob: -21.875009536743164
    9. '`' → logprob: -22.125009536743164
    10. '```' → logprob: -22.375009536743164

Token 58: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.012542379088699818
    2. '<=' → logprob: -4.387542247772217
    3. ' <' → logprob: -10.637542724609375
    4. '<' → logprob: -12.012542724609375
    5. ' ' → logprob: -13.262542724609375
    6. '0' → logprob: -15.387542724609375
    7. ' ' → logprob: -16.387542724609375
    8. ' ≤' → logprob: -16.387542724609375
    9. '+' → logprob: -16.762542724609375
    10. ',' → logprob: -16.762542724609375

Token 59: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.008614808320999146
    2. ' row' → logprob: -4.758615016937256
    3. 'col' → logprob: -16.258615493774414
    4. '	row' → logprob: -16.508615493774414
    5. '(row' → logprob: -16.883615493774414
    6. ' col' → logprob: -18.008615493774414
    7. ' ' → logprob: -18.383615493774414
    8. '[row' → logprob: -18.508615493774414
    9. '$row' → logprob: -18.758615493774414
    10. '=row' → logprob: -19.008615493774414

Token 60: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.01655896008014679
    2. ' <' → logprob: -4.14155912399292
    3. 'and' → logprob: -8.516558647155762
    4. '<n' → logprob: -8.641558647155762
    5. ' and' → logprob: -8.891558647155762
    6. '<len' → logprob: -12.766558647155762
    7. '<size' → logprob: -13.016558647155762
    8. '<int' → logprob: -14.141558647155762
    9. '<|end|>' → logprob: -14.141558647155762
    10. '<m' → logprob: -14.266558647155762

Token 61: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1269284337759018
    2. ' self' → logprob: -2.1269283294677734
    3. '       ' → logprob: -16.501928329467773
    4. ' ' → logprob: -16.626928329467773
    5. '	self' → logprob: -17.001928329467773
    6. '   ' → logprob: -17.751928329467773
    7. 'n' → logprob: -17.876928329467773
    8. '(self' → logprob: -18.001928329467773
    9. ' ' → logprob: -18.501928329467773
    10. '```' → logprob: -18.626928329467773

Token 62: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.5770372152328491
    2. '.' → logprob: -0.8270372152328491
    3. ' .' → logprob: -6.827037334442139
    4. '.
' → logprob: -13.70203685760498
    5. '‌.' → logprob: -13.95203685760498
    6. '.nt' → logprob: -14.07703685760498
    7. ').' → logprob: -14.20203685760498
    8. '.nl' → logprob: -14.32703685760498
    9. '.nd' → logprob: -14.45203685760498

Token 63: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005247629713267088
    2. 'and' → logprob: -5.255247592926025
    3. ' ' → logprob: -11.630248069763184
    4. '<|end|>' → logprob: -12.880248069763184
    5. '       ' → logprob: -13.380248069763184
    6. '	and' → logprob: -14.880248069763184
    7. '        ' → logprob: -15.005248069763184
    8. ' 
' → logprob: -17.005247116088867
    9. '    ' → logprob: -17.130247116088867
    10. '      ' → logprob: -17.130247116088867

Token 64: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47778746485710144
    2. ' ' → logprob: -0.9777874946594238
    3. ' col' → logprob: -5.727787494659424
    4. 'col' → logprob: -7.727787494659424
    5. '    ' → logprob: -12.602787017822266
    6. '  ' → logprob: -12.727787017822266
    7. '   ' → logprob: -13.852787017822266
    8. '        ' → logprob: -14.602787017822266
    9. '       ' → logprob: -15.352787017822266
    10. '	col' → logprob: -15.852787017822266

Token 65: '0' (ID: 15)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.08400113135576248
    2. ' col' → logprob: -2.834001064300537
    3. '0' → logprob: -3.834001064300537
    4. ' ' → logprob: -8.709001541137695
    5. '	col' → logprob: -13.334001541137695
    6. '   ' → logprob: -13.834001541137695
    7. '(col' → logprob: -14.584001541137695
    8. '.col' → logprob: -15.334001541137695
    9. 'coln' → logprob: -15.334001541137695
    10. 'colm' → logprob: -15.709001541137695

Token 66: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7898493409156799
    2. ' <' → logprob: -0.9148493409156799
    3. '<' → logprob: -2.039849281311035
    4. '<=' → logprob: -4.289849281311035
    5. '<n' → logprob: -6.789849281311035
    6. '   ' → logprob: -8.789849281311035
    7. ' ' → logprob: -9.164849281311035
    8. '.' → logprob: -9.789849281311035
    9. '[' → logprob: -9.914849281311035
    10. '>' → logprob: -9.914849281311035

Token 67: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.20141451060771942
    2. 'col' → logprob: -1.7014144659042358
    3. '	col' → logprob: -14.326414108276367
    4. ' ' → logprob: -15.076414108276367
    5. 'coln' → logprob: -16.451414108276367
    6. 'self' → logprob: -16.951414108276367
    7. '   ' → logprob: -17.076414108276367
    8. 'colm' → logprob: -17.201414108276367
    9. ' coli' → logprob: -17.826414108276367
    10. '(col' → logprob: -18.451414108276367

Token 68: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5254085659980774
    2. ' <' → logprob: -0.9004085659980774
    3. '<n' → logprob: -6.150408744812012
    4. '<|end|>' → logprob: -9.775408744812012
    5. ' ' → logprob: -10.150408744812012
    6. 'col' → logprob: -11.525408744812012
    7. '   ' → logprob: -11.775408744812012
    8. 'n' → logprob: -12.275408744812012
    9. ' col' → logprob: -12.650408744812012
    10. '<int' → logprob: -12.775408744812012

Token 69: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08894949406385422
    2. ' self' → logprob: -2.46394944190979
    3. ' ' → logprob: -12.213949203491211
    4. '       ' → logprob: -13.338949203491211
    5. '   ' → logprob: -13.588949203491211
    6. '(self' → logprob: -14.338949203491211
    7. 'n' → logprob: -15.463949203491211
    8. '0' → logprob: -15.463949203491211
    9. '	self' → logprob: -15.463949203491211
    10. '=self' → logprob: -16.08894920349121

Token 70: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0558098740875721
    2. '.' → logprob: -2.93080997467041
    3. '<|end|>' → logprob: -7.18080997467041
    4. '.col' → logprob: -9.55580997467041
    5. 'n' → logprob: -10.05580997467041
    6. ' .' → logprob: -11.55580997467041
    7. '.s' → logprob: -11.68080997467041
    8. ')' → logprob: -11.93080997467041
    9. '.square' → logprob: -12.30580997467041
    10. '.nl' → logprob: -12.68080997467041

Token 71: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9138466119766235
    2. '   ' → logprob: -1.1638466119766235
    3. '<|end|>' → logprob: -1.4138466119766235
    4. '    
' → logprob: -4.038846492767334
    5. '```' → logprob: -4.538846492767334
    6. '<|end|>' → logprob: -5.788846492767334
    7. '\n' → logprob: -6.038846492767334
    8. ' 
' → logprob: -6.038846492767334
    9. '\' → logprob: -6.288846492767334
    10. '  
' → logprob: -6.788846492767334

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009953226894140244
    2. '    
' → logprob: -5.509953022003174
    3. '
' → logprob: -6.259953022003174
    4. ' 
' → logprob: -6.634953022003174
    5. ' def' → logprob: -7.259953022003174
    6. '<|end|>' → logprob: -7.634953022003174
    7. '```' → logprob: -7.884953022003174
    8. ' ' → logprob: -8.509953498840332
    9. 'def' → logprob: -8.634953498840332
    10. '    ' → logprob: -9.009953498840332

Token 73: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7336392402648926
    2. 'def' (adapté à ' def') → logprob: -0.7336392402648926
    3. '   ' → logprob: -3.2336392402648926
    4. ' ' → logprob: -8.608638763427734
    5. '```' → logprob: -10.608638763427734
    6. '    
' → logprob: -10.858638763427734
    7. '	def' → logprob: -11.483638763427734
    8. 'd' → logprob: -11.733638763427734
    9. '    ' → logprob: -11.858638763427734
    10. ' 
' → logprob: -12.108638763427734

Token 74: ' left' (ID: 3561)
  Prédit: ' create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' create' → logprob: -0.5798807144165039
    2. ' generate' → logprob: -1.079880714416504
    3. ' build' → logprob: -2.954880714416504
    4. ' def' → logprob: -3.579880714416504
    5. ' fill' → logprob: -4.829880714416504
    6. 'generate' → logprob: -5.329880714416504
    7. ' solve' → logprob: -5.704880714416504
    8. ' ' → logprob: -6.829880714416504
    9. ' make' → logprob: -7.204880714416504
    10. 'create' → logprob: -7.454880714416504

Token 75: '_down' (ID: 40267)
  Prédit: '_down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_down' → logprob: -1.1496752500534058
    2. '_up' → logprob: -1.3996752500534058
    3. '()' → logprob: -2.3996753692626953
    4. '(' → logprob: -2.5246753692626953
    5. '_col' → logprob: -2.7746753692626953
    6. '_move' → logprob: -3.0246753692626953
    7. '(self' → logprob: -4.024675369262695
    8. '_upper' → logprob: -4.024675369262695
    9. '_' → logprob: -4.149675369262695
    10. '_top' → logprob: -4.399675369262695

Token 76: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11349307745695114
    2. '(' → logprob: -2.238492965698242
    3. ' (' → logprob: -8.113492965698242
    4. '_' → logprob: -9.238492965698242
    5. '   ' → logprob: -9.613492965698242
    6. '()' → logprob: -10.113492965698242
    7. 'self' → logprob: -10.238492965698242
    8. '(
' → logprob: -10.738492965698242
    9. ')' → logprob: -10.863492965698242
    10. ' ' → logprob: -11.238492965698242

Token 77: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5150967240333557
    2. ')' → logprob: -1.265096664428711
    3. '(' → logprob: -2.390096664428711
    4. ')(' → logprob: -4.265096664428711
    5. ',' → logprob: -6.015096664428711
    6. ']' → logprob: -6.015096664428711
    7. ' (' → logprob: -6.265096664428711
    8. '(row' → logprob: -6.515096664428711
    9. '](' → logprob: -6.640096664428711
    10. 'def' → logprob: -7.015096664428711

Token 78: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.7689825296401978
    2. 'row' → logprob: -1.0189825296401978
    3. ' self' → logprob: -2.518982410430908
    4. 'self' → logprob: -2.518982410430908
    5. ')' → logprob: -4.393982410430908
    6. '):' → logprob: -7.393982410430908
    7. '   ' → logprob: -7.768982410430908
    8. ' )' → logprob: -8.018982887268066
    9. ' current' → logprob: -9.143982887268066
    10. '	row' → logprob: -9.143982887268066

Token 79: ':' (ID: 25)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2838578522205353
    2. '+' → logprob: -2.158857822418213
    3. ' -' → logprob: -2.658857822418213
    4. ',' → logprob: -3.033857822418213
    5. ' ,' → logprob: -4.783857822418213
    6. '-' → logprob: -5.533857822418213
    7. ':' → logprob: -7.658857822418213
    8. '   ' → logprob: -8.283858299255371
    9. ' ' → logprob: -9.158858299255371
    10. '+,' → logprob: -9.408858299255371

Token 80: ' int' (ID: 677)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2226654291152954
    2. '1' → logprob: -1.2226654291152954
    3. ' +' → logprob: -1.5976654291152954
    4. ' ' → logprob: -2.472665309906006
    5. ',' → logprob: -2.597665309906006
    6. ' ,' → logprob: -3.097665309906006
    7. 'int' → logprob: -7.097665309906006
    8. ' -' → logprob: -7.222665309906006
    9. ')' → logprob: -7.472665309906006
    10. '-' → logprob: -7.722665309906006

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04333748295903206
    2. '+' → logprob: -3.41833758354187
    3. ' +' → logprob: -5.668337345123291
    4. ' ,' → logprob: -5.918337345123291
    5. '-' → logprob: -6.043337345123291
    6. '):' → logprob: -7.668337345123291
    7. ' -' → logprob: -8.41833782196045
    8. '   ' → logprob: -9.29333782196045
    9. ',
' → logprob: -9.41833782196045
    10. '+,' → logprob: -9.54333782196045

Token 82: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.03368397057056427
    2. 'col' → logprob: -3.408684015274048
    3. ' ' → logprob: -11.033683776855469
    4. '	col' → logprob: -11.533683776855469
    5. '   ' → logprob: -11.908683776855469
    6. ')' → logprob: -12.533683776855469
    7. '  ' → logprob: -14.408683776855469
    8. '    ' → logprob: -14.908683776855469
    9. 'colm' → logprob: -15.533683776855469
    10. '```' → logprob: -16.03368377685547

Token 83: ':' (ID: 25)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6671894192695618
    2. '):' → logprob: -0.7921894192695618
    3. '-' → logprob: -3.667189359664917
    4. ',' → logprob: -5.917189598083496
    5. ' +' → logprob: -6.792189598083496
    6. ')' → logprob: -6.792189598083496
    7. '):
' → logprob: -6.917189598083496
    8. ':' → logprob: -7.042189598083496
    9. ' -' → logprob: -7.292189598083496
    10. '   ' → logprob: -8.042189598083496

Token 84: ' int' (ID: 677)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5222125053405762
    2. ' ' → logprob: -1.8972125053405762
    3. ')' → logprob: -2.022212505340576
    4. '):' → logprob: -3.147212505340576
    5. ' )' → logprob: -3.397212505340576
    6. 'int' → logprob: -4.272212505340576
    7. ' ):' → logprob: -4.272212505340576
    8. ' int' → logprob: -4.772212505340576
    9. ' -' → logprob: -5.897212505340576
    10. '):
' → logprob: -6.022212505340576

Token 85: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006312219891697168
    2. ')' → logprob: -5.131312370300293
    3. '):
' → logprob: -8.381312370300293
    4. ',' → logprob: -9.756312370300293
    5. ' ):' → logprob: -10.006312370300293
    6. ':' → logprob: -10.506312370300293
    7. '+' → logprob: -11.506312370300293
    8. '   ' → logprob: -12.006312370300293
    9. '-' → logprob: -13.381312370300293
    10. ' ' → logprob: -13.881312370300293

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6459714770317078
    2. '    ' → logprob: -1.5209715366363525
    3. '   ' → logprob: -1.6459715366363525
    4. ' ' → logprob: -3.7709715366363525
    5. '<|end|>' → logprob: -3.7709715366363525
    6. ':' → logprob: -5.520971298217773
    7. '#' → logprob: -6.020971298217773
    8. '        ' → logprob: -6.145971298217773
    9. ' #' → logprob: -6.770971298217773
    10. ',' → logprob: -6.895971298217773

Token 87: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1048872247338295
    2. 'return' → logprob: -2.9798872470855713
    3. ' new' → logprob: -3.8548872470855713
    4. ' if' → logprob: -5.104887008666992
    5. 'r' → logprob: -5.354887008666992
    6. ' row' → logprob: -5.354887008666992
    7. ' r' → logprob: -5.854887008666992
    8. ' (' → logprob: -6.104887008666992
    9. 'row' → logprob: -6.229887008666992
    10. '       ' → logprob: -6.479887008666992

Token 88: ' Move' (ID: 25485)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9884738326072693
    2. ' r' → logprob: -1.738473892211914
    3. ' new' → logprob: -2.238473892211914
    4. 'r' → logprob: -2.363473892211914
    5. ' """' → logprob: -2.738473892211914
    6. ' ' → logprob: -2.988473892211914
    7. 'return' → logprob: -2.988473892211914
    8. '    ' → logprob: -3.988473892211914
    9. ' row' → logprob: -4.238473892211914
    10. 'row' → logprob: -4.738473892211914

Token 89: ' one' (ID: 1001)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.1262153387069702
    2. ' one' → logprob: -1.1262153387069702
    3. ' ' → logprob: -2.5012154579162598
    4. '       ' → logprob: -2.7512154579162598
    5. ' down' → logprob: -3.2512154579162598
    6. ',' → logprob: -3.2512154579162598
    7. 'row' → logprob: -3.3762154579162598
    8. '    ' → logprob: -4.25121545791626
    9. ' row' → logprob: -4.37621545791626
    10. '<|end|>' → logprob: -4.50121545791626

Token 90: ' down' (ID: 1917)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.7837334871292114
    2. ' row' → logprob: -1.4087334871292114
    3. ' down' → logprob: -2.033733367919922
    4. ' cell' → logprob: -3.033733367919922
    5. ' ' → logprob: -3.783733367919922
    6. 'row' → logprob: -4.158733367919922
    7. ' column' → logprob: -4.158733367919922
    8. 'down' → logprob: -4.283733367919922
    9. ' col' → logprob: -4.783733367919922
    10. 'step' → logprob: -4.783733367919922

Token 91: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02661759965121746
    2. '<|end|>' → logprob: -4.776617527008057
    3. ')' → logprob: -5.026617527008057
    4. ' and' → logprob: -5.276617527008057
    5. ' ,' → logprob: -5.901617527008057
    6. '+' → logprob: -7.026617527008057
    7. ',
' → logprob: -7.401617527008057
    8. '<|end|>' → logprob: -7.776617527008057
    9. '   ' → logprob: -8.276618003845215
    10. '       ' → logprob: -8.276618003845215

Token 92: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.048625748604536057
    2. 'one' → logprob: -3.0486257076263428
    3. '1' → logprob: -10.673625946044922
    4. 'left' → logprob: -12.173625946044922
    5. ' ' → logprob: -13.048625946044922
    6. '_one' → logprob: -13.173625946044922
    7. ' to' → logprob: -13.298625946044922
    8. 'One' → logprob: -13.923625946044922
    9. 'to' → logprob: -13.923625946044922
    10. '<|end|>' → logprob: -13.923625946044922

Token 93: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.7802591919898987
    2. ' left' → logprob: -1.530259132385254
    3. ' to' → logprob: -1.655259132385254
    4. '<|end|>' → logprob: -3.155259132385254
    5. ',' → logprob: -3.655259132385254
    6. ' column' → logprob: -3.780259132385254
    7. 'to' → logprob: -4.030259132385254
    8. 'column' → logprob: -4.530259132385254
    9. ' col' → logprob: -5.405259132385254
    10. ' cell' → logprob: -5.780259132385254

Token 94: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33518266677856445
    2. '<|end|>' → logprob: -1.9601826667785645
    3. '   ' → logprob: -2.9601826667785645
    4. ':' → logprob: -3.0851826667785645
    5. '
' → logprob: -4.0851826667785645
    6. ',' → logprob: -4.3351826667785645
    7. '<|end|>' → logprob: -5.5851826667785645
    8. ':
' → logprob: -6.2101826667785645
    9. ')' → logprob: -6.3351826667785645
    10. '	' → logprob: -6.4601826667785645

Token 95: ' wrapping' (ID: 69235)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05556024610996246
    2. '<|end|>' → logprob: -3.305560350418091
    3. ' but' → logprob: -4.805560111999512
    4. '   ' → logprob: -6.430560111999512
    5. ' ' → logprob: -6.805560111999512
    6. '
' → logprob: -7.305560111999512
    7. ' and' → logprob: -7.430560111999512
    8. ' return' → logprob: -7.805560111999512
    9. '<|end|>' → logprob: -7.930560111999512
    10. ' to' → logprob: -7.930560111999512

Token 96: ' around' (ID: 2846)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8643375039100647
    2. ' around' → logprob: -1.11433744430542
    3. 'around' → logprob: -1.98933744430542
    4. '   ' → logprob: -2.98933744430542
    5. ' if' → logprob: -3.11433744430542
    6. ' to' → logprob: -5.23933744430542
    7. ' ' → logprob: -5.48933744430542
    8. '    ' → logprob: -6.48933744430542
    9. 'row' → logprob: -6.48933744430542
    10. '        ' → logprob: -7.23933744430542

Token 97: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8725287318229675
    2. '
' → logprob: -1.7475287914276123
    3. '<|end|>' → logprob: -1.7475287914276123
    4. ')' → logprob: -2.2475287914276123
    5. '):' → logprob: -2.9975287914276123
    6. '       ' → logprob: -3.3725287914276123
    7. '   ' → logprob: -4.247528553009033
    8. '\n' → logprob: -4.872528553009033
    9. ',' → logprob: -4.872528553009033
    10. ' ' → logprob: -5.622528553009033

Token 98: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5045151114463806
    2. ')' → logprob: -2.3795151710510254
    3. '   ' → logprob: -2.6295151710510254
    4. '):' → logprob: -2.6295151710510254
    5. '       ' → logprob: -2.7545151710510254
    6. '
' → logprob: -3.1295151710510254
    7. '<|end|>' → logprob: -3.5045151710510254
    8. ':
' → logprob: -5.129515171051025
    9. '):
' → logprob: -5.254515171051025
    10. ',' → logprob: -5.879515171051025

Token 99: ' new' (ID: 620)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6707873940467834
    2. '       ' → logprob: -1.5457873344421387
    3. ' return' → logprob: -1.5457873344421387
    4. 'row' → logprob: -3.1707873344421387
    5. ' new' → logprob: -4.920787334442139
    6. 'n' → logprob: -5.295787334442139
    7. 'new' (adapté à ' new') → logprob: -5.545787334442139
    8. ' row' → logprob: -6.045787334442139
    9. 'r' → logprob: -7.795787334442139
    10. ' next' → logprob: -7.795787334442139

Token 100: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.07897493988275528
    2. '_' → logprob: -2.578974962234497
    3. '_r' → logprob: -9.578974723815918
    4. ' _' → logprob: -11.828974723815918
    5. '_Row' → logprob: -12.953974723815918
    6. 'row' → logprob: -13.578974723815918
    7. '_col' → logprob: -13.828974723815918
    8. ' ' → logprob: -14.203974723815918
    9. '_
' → logprob: -14.203974723815918
    10. '_rows' → logprob: -14.578974723815918

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004632572643458843
    2. '=' → logprob: -5.379632472991943
    3. '<|end|>' → logprob: -12.004632949829102
    4. ' ' → logprob: -12.504632949829102
    5. ',' → logprob: -13.254632949829102
    6. ' =
' → logprob: -14.379632949829102
    7. ')' → logprob: -16.5046329498291
    8. '=row' → logprob: -17.5046329498291
    9. ' =)' → logprob: -17.6296329498291
    10. '<|end|>' → logprob: -17.7546329498291

Token 102: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07040362805128098
    2. '(row' → logprob: -2.695403575897217
    3. '(self' → logprob: -7.820403575897217
    4. '(rows' → logprob: -10.445404052734375
    5. '(col' → logprob: -11.445404052734375
    6. '       ' → logprob: -12.070404052734375
    7. '(root' → logprob: -12.820404052734375
    8. '(raw' → logprob: -13.195404052734375
    9. ' ' → logprob: -13.445404052734375
    10. '(next' → logprob: -13.445404052734375

Token 103: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.018399259075522423
    2. ' row' → logprob: -4.393399238586426
    3. '(row' → logprob: -5.143399238586426
    4. ' (' → logprob: -10.518399238586426
    5. '   ' → logprob: -13.143399238586426
    6. 'self' → logprob: -13.518399238586426
    7. '	row' → logprob: -13.518399238586426
    8. '[row' → logprob: -14.393399238586426
    9. ' ' → logprob: -14.768399238586426
    10. 'r' → logprob: -15.018399238586426

Token 104: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0040807779878377914
    2. '+' → logprob: -5.504080772399902
    3. ' +
' → logprob: -13.129080772399902
    4. '<|end|>' → logprob: -15.754080772399902
    5. ' ' → logprob: -17.12908172607422
    6. ' plus' → logprob: -17.50408172607422
    7. '+
' → logprob: -17.50408172607422
    8. ' -' → logprob: -17.87908172607422
    9. ' +
' → logprob: -18.87908172607422
    10. ')' → logprob: -19.25408172607422

Token 105: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015024791937321424
    2. ' ' → logprob: -6.501502513885498
    3. '<|end|>' → logprob: -16.376502990722656
    4. '   ' → logprob: -17.001502990722656
    5. ')' → logprob: -17.876502990722656
    6. '
' → logprob: -20.001502990722656
    7. '  ' → logprob: -20.126502990722656
    8. '+' → logprob: -20.376502990722656
    9. '```' → logprob: -20.376502990722656
    10. '[' → logprob: -21.251502990722656

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '<|end|>' → logprob: -16.875
    4. ')' → logprob: -19.875
    5. '
' → logprob: -20.125
    6. '+' → logprob: -20.375
    7. '۱' → logprob: -21.0
    8. '```' → logprob: -21.3125
    9. '-' → logprob: -21.375
    10. '১' → logprob: -22.125

Token 107: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1756367712223437e-05
    2. ' )' → logprob: -11.500011444091797
    3. '<|end|>' → logprob: -14.000011444091797
    4. ')%' → logprob: -14.875011444091797
    5. ')
' → logprob: -15.000011444091797
    6. ')

' → logprob: -17.625011444091797
    7. '`)' → logprob: -18.125011444091797
    8. '```' → logprob: -18.250011444091797
    9. ']' → logprob: -18.375011444091797
    10. '}' → logprob: -18.625011444091797

Token 108: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0355453491210938
    2. '<|end|>' → logprob: -1.2855453491210938
    3. ' %' → logprob: -1.6605453491210938
    4. '%' → logprob: -1.7855453491210938
    5. ')%' → logprob: -4.660545349121094
    6. ',' → logprob: -8.035545349121094
    7. ' ' → logprob: -8.160545349121094
    8. '<|end|>' → logprob: -8.410545349121094
    9. ']' → logprob: -8.910545349121094
    10. ' )' → logprob: -9.410545349121094

Token 109: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00527016120031476
    2. ' self' → logprob: -5.255270004272461
    3. '<|end|>' → logprob: -10.255270004272461
    4. ' ' → logprob: -15.130270004272461
    5. '(self' → logprob: -15.380270004272461
    6. '
' → logprob: -15.380270004272461
    7. '	self' → logprob: -15.880270004272461
    8. '   ' → logprob: -16.13027000427246
    9. '       ' → logprob: -16.38027000427246
    10. '  ' → logprob: -16.38027000427246

Token 110: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0002719449403230101
    2. '.' → logprob: -8.250271797180176
    3. 'n' → logprob: -11.500271797180176
    4. ' .' → logprob: -15.500271797180176
    5. '.
' → logprob: -16.375272750854492
    6. '‌.' → logprob: -17.125272750854492
    7. ').' → logprob: -17.500272750854492
    8. '<n' → logprob: -17.750272750854492
    9. '	n' → logprob: -17.750272750854492

Token 111: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: '       ' (ID: 309)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -1.253953456878662
    2. 'new' → logprob: -1.253953456878662
    3. '<|end|>' → logprob: -1.753953456878662
    4. ',' → logprob: -2.128953456878662
    5. ',new' → logprob: -2.628953456878662
    6. ' ' → logprob: -3.253953456878662
    7. '       ' → logprob: -4.503953456878662
    8. ' ,' → logprob: -6.378953456878662
    9. '[new' → logprob: -6.628953456878662
    10. '$new' → logprob: -6.628953456878662

Token 113: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.026365671306848526
    2. ' new' → logprob: -3.6513657569885254
    3. '<|end|>' → logprob: -10.401365280151367
    4. '       ' → logprob: -11.026365280151367
    5. '_new' → logprob: -11.901365280151367
    6. ' ' → logprob: -12.526365280151367
    7. ')new' → logprob: -13.151365280151367
    8. '	new' → logprob: -13.151365280151367
    9. ',new' → logprob: -13.401365280151367
    10. '$new' → logprob: -13.901365280151367

Token 114: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -1.5690089639974758e-05
    2. '_' → logprob: -11.500015258789062
    3. 'col' → logprob: -13.125015258789062
    4. '_column' → logprob: -13.250015258789062
    5. '_row' → logprob: -13.625015258789062
    6. '_val' → logprob: -16.000015258789062
    7. '_COL' → logprob: -16.625015258789062
    8. ' _' → logprob: -17.125015258789062
    9. '_cols' → logprob: -17.375015258789062
    10. '_co' → logprob: -17.750015258789062

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141655206680298
    2. '=' → logprob: -1.7014164924621582
    3. '<|end|>' → logprob: -12.701416969299316
    4. ' ' → logprob: -16.201416015625
    5. ')' → logprob: -17.201416015625
    6. ',' → logprob: -17.326416015625
    7. ' =(' → logprob: -17.326416015625
    8. ' =
' → logprob: -17.451416015625
    9. '=
' → logprob: -17.451416015625
    10. 's' → logprob: -17.951416015625

Token 116: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.13925035297870636
    2. '(col' → logprob: -2.3892502784729004
    3. '(row' → logprob: -3.2642502784729004
    4. '(column' → logprob: -9.889250755310059
    5. '(cols' → logprob: -12.264250755310059
    6. ' ' → logprob: -13.014250755310059
    7. '(rows' → logprob: -13.639250755310059
    8. '(n' → logprob: -14.139250755310059
    9. '(raw' → logprob: -14.264250755310059
    10. '(prev' → logprob: -14.264250755310059

Token 117: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.00027468299958854914
    2. '(col' → logprob: -8.250274658203125
    3. ' col' → logprob: -11.250274658203125
    4. '_col' → logprob: -16.000274658203125
    5. ' (' → logprob: -16.750274658203125
    6. '.col' → logprob: -17.000274658203125
    7. '	col' → logprob: -17.000274658203125
    8. '[col' → logprob: -17.750274658203125
    9. 'coln' → logprob: -18.000274658203125
    10. 'Col' → logprob: -18.000274658203125

Token 118: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.003643191885203123
    2. '-' → logprob: -5.628643035888672
    3. ')' → logprob: -11.253643035888672
    4. ' ' → logprob: -11.378643035888672
    5. '<|end|>' → logprob: -11.503643035888672
    6. ' )' → logprob: -12.878643035888672
    7. ' =' → logprob: -12.878643035888672
    8. '=' → logprob: -13.128643035888672
    9. ' +' → logprob: -15.253643035888672
    10. ':' → logprob: -15.628643035888672

Token 119: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008059371029958129
    2. ' ' → logprob: -7.125805854797363
    3. '<|end|>' → logprob: -14.000805854797363
    4. '   ' → logprob: -14.750805854797363
    5. '       ' → logprob: -15.875805854797363
    6. '```' → logprob: -17.00080680847168
    7. ')' → logprob: -18.00080680847168
    8. '۱' → logprob: -18.62580680847168
    9. '  ' → logprob: -18.87580680847168
    10. '<|end|>' → logprob: -18.87580680847168

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2723104848410003e-05
    2. ' ' → logprob: -10.875022888183594
    3. '<|end|>' → logprob: -12.625022888183594
    4. '       ' → logprob: -15.625022888183594
    5. '   ' → logprob: -15.750022888183594
    6. '```' → logprob: -16.875022888183594
    7. ')' → logprob: -17.750022888183594
    8. '<|end|>' → logprob: -18.250022888183594
    9. '۱' → logprob: -18.812522888183594
    10. '  ' → logprob: -19.500022888183594

Token 121: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.061054359131958e-06
    2. ' )' → logprob: -11.875007629394531
    3. '<|end|>' → logprob: -15.250007629394531
    4. '+' → logprob: -15.375007629394531
    5. ')%' → logprob: -15.750007629394531
    6. '`)' → logprob: -15.875007629394531
    7. ')
' → logprob: -16.37500762939453
    8. ']' → logprob: -17.00000762939453
    9. '```' → logprob: -17.25000762939453
    10. '),' → logprob: -17.37500762939453

Token 122: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6677379012107849
    2. ' %' → logprob: -0.7927379012107849
    3. '<|end|>' → logprob: -4.29273796081543
    4. '%' → logprob: -4.41773796081543
    5. ' ' → logprob: -5.41773796081543
    6. ')%' → logprob: -5.66773796081543
    7. ' )' → logprob: -7.41773796081543
    8. '<|end|>' → logprob: -9.04273796081543
    9. ']' → logprob: -9.79273796081543
    10. '```' → logprob: -10.91773796081543

Token 123: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.061972059309482574
    2. ' self' → logprob: -2.811972141265869
    3. '<|end|>' → logprob: -12.811971664428711
    4. '(self' → logprob: -14.686971664428711
    5. ' ' → logprob: -15.311971664428711
    6. '	self' → logprob: -15.436971664428711
    7. 'Self' → logprob: -15.936971664428711
    8. '[self' → logprob: -15.936971664428711
    9. '```' → logprob: -16.18697166442871
    10. '       ' → logprob: -16.18697166442871

Token 124: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -8.864272967912257e-05
    2. '.' → logprob: -9.375088691711426
    3. 'n' → logprob: -12.625088691711426
    4. ' .' → logprob: -16.25008773803711
    5. '<n' → logprob: -16.62508773803711
    6. '<|end|>' → logprob: -17.00008773803711
    7. '.nvim' → logprob: -17.00008773803711
    8. '.nd' → logprob: -17.25008773803711
    9. '.col' → logprob: -17.62508773803711
    10. ').' → logprob: -17.62508773803711

Token 125: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0388634093105793
    2. '<|end|>' → logprob: -3.66386342048645
    3. '
' → logprob: -4.413863182067871
    4. '<|end|>' → logprob: -8.663863182067871
    5. ' return' → logprob: -9.788863182067871
    6. 'return' → logprob: -9.788863182067871
    7. '	' → logprob: -10.538863182067871
    8. ',' → logprob: -10.788863182067871
    9. '	return' → logprob: -11.788863182067871
    10. '```' → logprob: -11.788863182067871

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016956117004156113
    2. '<|end|>' → logprob: -4.391956329345703
    3. '
' → logprob: -5.516956329345703
    4. ' return' → logprob: -8.891956329345703
    5. 'return' → logprob: -9.016956329345703
    6. '<|end|>' → logprob: -9.641956329345703
    7. ',' → logprob: -10.641956329345703
    8. '	' → logprob: -10.641956329345703
    9. ')' → logprob: -11.266956329345703
    10. '	return' → logprob: -11.641956329345703

Token 127: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2027106136083603
    2. 'return' (adapté à ' return') → logprob: -1.7027106285095215
    3. ' return' → logprob: -6.7027106285095215
    4. '
' → logprob: -9.827710151672363
    5. '   ' → logprob: -11.952710151672363
    6. '	return' → logprob: -12.452710151672363
    7. '```' → logprob: -13.327710151672363
    8. '<|end|>' → logprob: -14.327710151672363
    9. '{return' → logprob: -14.577710151672363
    10. '        
' → logprob: -14.827710151672363

Token 128: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.41428259015083313
    2. 'new' → logprob: -1.1642825603485107
    3. '(new' → logprob: -4.03928279876709
    4. ' (' → logprob: -4.66428279876709
    5. '	new' → logprob: -13.78928279876709
    6. '[new' → logprob: -14.41428279876709
    7. ' ' → logprob: -14.53928279876709
    8. '(' → logprob: -15.28928279876709
    9. ')new' → logprob: -15.41428279876709
    10. '   ' → logprob: -15.41428279876709

Token 129: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0015297401696443558
    2. '_col' → logprob: -6.751529693603516
    3. '_' → logprob: -8.876529693603516
    4. 'w' → logprob: -8.876529693603516
    5. 'row' → logprob: -10.501529693603516
    6. '_line' → logprob: -11.251529693603516
    7. '_w' → logprob: -11.876529693603516
    8. '_rows' → logprob: -12.376529693603516
    9. '_val' → logprob: -12.501529693603516
    10. '_new' → logprob: -12.751529693603516

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000529202981851995
    2. ',new' → logprob: -7.6255292892456055
    3. '<|end|>' → logprob: -10.375529289245605
    4. ',
' → logprob: -12.625529289245605
    5. ' ,' → logprob: -13.000529289245605
    6. ',col' → logprob: -13.250529289245605
    7. '<|end|>' → logprob: -14.750529289245605
    8. 'new' → logprob: -14.875529289245605
    9. ',n' → logprob: -15.250529289245605
    10. ',user' → logprob: -15.250529289245605

Token 131: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5759426951408386
    2. ' new' → logprob: -0.8259426951408386
    3. ' ' → logprob: -13.700942993164062
    4. ' ' → logprob: -13.700942993164062
    5. '<|end|>' → logprob: -14.450942993164062
    6. '_new' → logprob: -16.075942993164062
    7. '	new' → logprob: -16.200942993164062
    8. 'space' → logprob: -16.450942993164062
    9. ')new' → logprob: -16.825942993164062
    10. '[new' → logprob: -16.950942993164062

Token 132: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0003373694489710033
    2. 'col' → logprob: -8.000337600708008
    3. ' col' → logprob: -13.375337600708008
    4. '	col' → logprob: -15.500337600708008
    5. '_row' → logprob: -16.375337600708008
    6. '_COL' → logprob: -16.750337600708008
    7. '.col' → logprob: -17.125337600708008
    8. '[col' → logprob: -17.500337600708008
    9. 'Col' → logprob: -18.000337600708008
    10. '_' → logprob: -18.125337600708008

Token 133: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31788623332977295
    2. '<|end|>' → logprob: -1.692886233329773
    3. '
' → logprob: -2.6928863525390625
    4. 'def' → logprob: -5.4428863525390625
    5. '    
' → logprob: -5.6928863525390625
    6. '<|end|>' → logprob: -5.9428863525390625
    7. '```' → logprob: -6.1928863525390625
    8. ',' → logprob: -6.3178863525390625
    9. ' def' → logprob: -6.6928863525390625
    10. '  
' → logprob: -6.8178863525390625

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10141020268201828
    2. 'def' → logprob: -3.351410150527954
    3. '
' → logprob: -3.726410150527954
    4. '<|end|>' → logprob: -4.476410388946533
    5. ' ' → logprob: -5.101410388946533
    6. ' 
' → logprob: -5.226410388946533
    7. ' def' → logprob: -5.351410388946533
    8. '```' → logprob: -5.726410388946533
    9. '    
' → logprob: -5.976410388946533
    10. ')' → logprob: -7.101410388946533

Token 135: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007984309340827167
    2. 'd' → logprob: -7.375798225402832
    3. ' def' → logprob: -8.750798225402832
    4. '   ' → logprob: -11.875798225402832
    5. ' ' → logprob: -13.000798225402832
    6. 'de' → logprob: -13.125798225402832
    7. '    
' → logprob: -14.875798225402832
    8. '```' → logprob: -15.125798225402832
    9. ')' → logprob: -15.375798225402832
    10. '	def' → logprob: -15.375798225402832

Token 136: ' right' (ID: 1849)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.1505992412567139
    2. ' generate' → logprob: -1.1505992412567139
    3. ' create' → logprob: -1.6505992412567139
    4. ' fill' → logprob: -2.275599241256714
    5. ' build' → logprob: -3.650599241256714
    6. ' solve' → logprob: -3.900599241256714
    7. 'generate' → logprob: -4.150599479675293
    8. ' right' → logprob: -5.775599479675293
    9. 'def' → logprob: -6.025599479675293
    10. 'create' → logprob: -6.775599479675293

Token 137: '_down' (ID: 40267)
  Prédit: '_up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -0.0039008883759379387
    2. '_down' → logprob: -6.12890100479126
    3. '_' → logprob: -6.87890100479126
    4. '_upper' → logprob: -8.003900527954102
    5. '```' → logprob: -9.628900527954102
    6. 'up' → logprob: -10.253900527954102
    7. '	up' → logprob: -10.628900527954102
    8. '_right' → logprob: -10.753900527954102
    9. '_top' → logprob: -11.003900527954102
    10. '_one' → logprob: -11.003900527954102

Token 138: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0014113049255684018
    2. '(' → logprob: -6.626411437988281
    3. '<|end|>' → logprob: -9.751411437988281
    4. '(
' → logprob: -11.626411437988281
    5. 'self' → logprob: -12.001411437988281
    6. ' (' → logprob: -12.126411437988281
    7. ',' → logprob: -12.876411437988281
    8. ' self' → logprob: -13.376411437988281
    9. '<|end|>' → logprob: -14.626411437988281
    10. 'def' → logprob: -14.751411437988281

Token 139: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017403896199539304
    2. '(' → logprob: -6.501740455627441
    3. ')' → logprob: -9.376740455627441
    4. ',' → logprob: -9.751740455627441
    5. '(
' → logprob: -10.251740455627441
    6. '<|end|>' → logprob: -11.001740455627441
    7. ' (' → logprob: -11.376740455627441
    8. 'self' → logprob: -11.376740455627441
    9. 'def' → logprob: -12.251740455627441
    10. ' ' → logprob: -12.751740455627441

Token 140: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.2386903613805771
    2. ' self' → logprob: -2.1136903762817383
    3. 'row' → logprob: -2.8636903762817383
    4. 'self' → logprob: -3.7386903762817383
    5. '(row' → logprob: -5.363690376281738
    6. ' def' → logprob: -6.238690376281738
    7. ' ' → logprob: -6.613690376281738
    8. '(self' → logprob: -7.238690376281738
    9. ' (' → logprob: -7.363690376281738
    10. '<|end|>' → logprob: -7.363690376281738

Token 141: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008691149763762951
    2. '<|end|>' → logprob: -5.008691310882568
    3. ' ,' → logprob: -6.758691310882568
    4. '   ' → logprob: -7.883691310882568
    5. ')' → logprob: -8.38369083404541
    6. ' ' → logprob: -9.63369083404541
    7. '<|end|>' → logprob: -9.75869083404541
    8. ':' → logprob: -10.50869083404541
    9. 'def' → logprob: -11.38369083404541
    10. '       ' → logprob: -11.88369083404541

Token 142: ' int' (ID: 677)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.17648594081401825
    2. 'int' → logprob: -2.051486015319824
    3. ' int' → logprob: -3.551486015319824
    4. 'col' → logprob: -5.676486015319824
    5. '<|end|>' → logprob: -7.176486015319824
    6. ' ' → logprob: -8.551486015319824
    7. ',' → logprob: -9.301486015319824
    8. '   ' → logprob: -10.051486015319824
    9. '<int' → logprob: -11.801486015319824
    10. ',col' → logprob: -12.051486015319824

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014072739577386528
    2. ' ,' → logprob: -9.375141143798828
    3. ',col' → logprob: -11.000141143798828
    4. ')' → logprob: -11.250141143798828
    5. '<|end|>' → logprob: -11.250141143798828
    6. ',row' → logprob: -11.750141143798828
    7. '   ' → logprob: -13.750141143798828
    8. ',column' → logprob: -14.500141143798828
    9. ' col' → logprob: -14.625141143798828
    10. 'def' → logprob: -14.625141143798828

Token 144: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.16022644937038422
    2. 'col' → logprob: -1.9102264642715454
    3. '<|end|>' → logprob: -13.660226821899414
    4. '	col' → logprob: -14.535226821899414
    5. ' ' → logprob: -14.910226821899414
    6. 'colm' → logprob: -16.160226821899414
    7. '(col' → logprob: -16.660226821899414
    8. '.col' → logprob: -17.285226821899414
    9. '[col' → logprob: -17.285226821899414
    10. ' colspan' → logprob: -18.035226821899414

Token 145: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0273272842168808
    2. '):' → logprob: -3.777327299118042
    3. ')' → logprob: -6.027327060699463
    4. ' :' → logprob: -7.152327060699463
    5. ',' → logprob: -8.277327537536621
    6. '=' → logprob: -8.402327537536621
    7. '<|end|>' → logprob: -8.527327537536621
    8. '):
' → logprob: -10.027327537536621
    9. ':int' → logprob: -10.152327537536621
    10. '   ' → logprob: -10.527327537536621

Token 146: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3252960741519928
    2. ' int' → logprob: -1.3252960443496704
    3. ' col' → logprob: -4.825295925140381
    4. ' ' → logprob: -6.450295925140381
    5. ')' → logprob: -6.825295925140381
    6. '1' → logprob: -8.200296401977539
    7. 'col' → logprob: -8.575296401977539
    8. '<|end|>' → logprob: -8.575296401977539
    9. ':int' → logprob: -8.950296401977539
    10. '(int' → logprob: -9.075296401977539

Token 147: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07012782245874405
    2. '):
' → logprob: -2.6951277256011963
    3. ')' → logprob: -8.820127487182617
    4. '   ' → logprob: -11.195127487182617
    5. '       ' → logprob: -11.820127487182617
    6. ':' → logprob: -12.195127487182617
    7. '):
' → logprob: -12.195127487182617
    8. ' ):' → logprob: -12.445127487182617
    9. '):

' → logprob: -12.695127487182617
    10. '+' → logprob: -13.070127487182617

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006862253649160266
    2. '#' → logprob: -8.750686645507812
    3. '<|end|>' → logprob: -8.750686645507812
    4. '   ' → logprob: -9.125686645507812
    5. ' ' → logprob: -10.125686645507812
    6. '
' → logprob: -10.250686645507812
    7. ')' → logprob: -10.375686645507812
    8. '        ' → logprob: -10.750686645507812
    9. '      ' → logprob: -11.125686645507812
    10. '	' → logprob: -11.125686645507812

Token 149: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36094412207603455
    2. 'new' → logprob: -1.860944151878357
    3. '#' (adapté à ' #') → logprob: -2.6109440326690674
    4. ' new' → logprob: -2.7359440326690674
    5. '   ' → logprob: -5.3609442710876465
    6. ' #' → logprob: -6.2359442710876465
    7. '
' → logprob: -7.6109442710876465
    8. '    ' → logprob: -7.6109442710876465
    9. '	new' → logprob: -7.7359442710876465
    10. ' ' → logprob: -8.110943794250488

Token 150: ' Move' (ID: 25485)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.12878559529781342
    2. ' new' → logprob: -2.1287856101989746
    3. '   ' → logprob: -6.378785610198975
    4. 'def' → logprob: -9.628785133361816
    5. '#' → logprob: -10.628785133361816
    6. 'return' → logprob: -10.753785133361816
    7. '
' → logprob: -10.878785133361816
    8. ' ' → logprob: -11.753785133361816
    9. '	new' → logprob: -11.753785133361816
    10. '       ' → logprob: -12.128785133361816

Token 151: ' one' (ID: 1001)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.35941407084465027
    2. ' (' → logprob: -1.2344141006469727
    3. '(' → logprob: -5.109414100646973
    4. '(new' → logprob: -6.359414100646973
    5. 'new' → logprob: -7.234414100646973
    6. ' one' → logprob: -7.359414100646973
    7. '   ' → logprob: -7.609414100646973
    8. ' new' → logprob: -7.609414100646973
    9. 'def' → logprob: -8.109414100646973
    10. ' ' → logprob: -9.109414100646973

Token 152: ' down' (ID: 1917)
  Prédit: ' down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' down' → logprob: -0.03566966950893402
    2. 'down' → logprob: -3.4106695652008057
    3. ' ' → logprob: -6.660669803619385
    4. '_down' → logprob: -8.410669326782227
    5. ' row' → logprob: -9.035669326782227
    6. '<|end|>' → logprob: -9.160669326782227
    7. '+' → logprob: -10.285669326782227
    8. '
' → logprob: -10.285669326782227
    9. 'd' → logprob: -10.535669326782227
    10. '   ' → logprob: -10.785669326782227

Token 153: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.272176057100296
    2. '       ' → logprob: -1.6471760272979736
    3. ' and' → logprob: -3.6471760272979736
    4. '   ' → logprob: -5.272176265716553
    5. ' ,' → logprob: -5.897176265716553
    6. ')' → logprob: -6.147176265716553
    7. '+' → logprob: -6.147176265716553
    8. 'and' → logprob: -6.522176265716553
    9. ' (' → logprob: -7.022176265716553
    10. '        ' → logprob: -7.147176265716553

Token 154: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.03804952651262283
    2. 'one' → logprob: -3.2880494594573975
    3. '_one' → logprob: -13.163049697875977
    4. '<|end|>' → logprob: -13.288049697875977
    5. 'One' → logprob: -13.663049697875977
    6. ',' → logprob: -14.163049697875977
    7. ')' → logprob: -14.663049697875977
    8. '(one' → logprob: -14.663049697875977
    9. '1' → logprob: -15.038049697875977
    10. ' col' → logprob: -15.038049697875977

Token 155: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.2906339466571808
    2. ' one' → logprob: -2.1656339168548584
    3. 'right' → logprob: -2.2906339168548584
    4. 'left' → logprob: -4.4156341552734375
    5. ' left' → logprob: -4.9156341552734375
    6. ' col' → logprob: -5.5406341552734375
    7. 'col' → logprob: -5.7906341552734375
    8. 'one' → logprob: -5.7906341552734375
    9. ',' → logprob: -6.2906341552734375
    10. ' to' → logprob: -6.5406341552734375

Token 156: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009361006319522858
    2. '<|end|>' → logprob: -5.3843607902526855
    3. ',' → logprob: -6.0093607902526855
    4. '   ' → logprob: -7.2593607902526855
    5. ':' → logprob: -7.3843607902526855
    6. '	' → logprob: -8.634361267089844
    7. ')' → logprob: -8.884361267089844
    8. '(' → logprob: -9.134361267089844
    9. '<|end|>' → logprob: -9.259361267089844
    10. ' (' → logprob: -9.509361267089844

Token 157: ' wrapping' (ID: 69235)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.053835783153772354
    2. '       ' → logprob: -3.928835868835449
    3. ' ' → logprob: -4.803835868835449
    4. 'new' → logprob: -5.553835868835449
    5. '<|end|>' → logprob: -5.803835868835449
    6. 'newline' → logprob: -5.928835868835449
    7. ' return' → logprob: -6.178835868835449
    8. ' row' → logprob: -6.178835868835449
    9. ' ' → logprob: -6.178835868835449
    10. ' newline' → logprob: -6.428835868835449

Token 158: ' around' (ID: 2846)
  Prédit: ' around'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' around' → logprob: -0.8929569125175476
    2. '<|end|>' → logprob: -1.0179569721221924
    3. 'around' → logprob: -1.6429569721221924
    4. '       ' → logprob: -3.8929569721221924
    5. ' ' → logprob: -5.142956733703613
    6. '   ' → logprob: -6.392956733703613
    7. ' ' → logprob: -6.767956733703613
    8. ',' → logprob: -6.892956733703613
    9. '<|end|>' → logprob: -6.892956733703613
    10. '        ' → logprob: -7.142956733703613

Token 159: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7840535044670105
    2. '
' → logprob: -0.9090535044670105
    3. '<|end|>' → logprob: -2.2840535640716553
    4. '   ' → logprob: -4.159053325653076
    5. '\n' → logprob: -4.909053325653076
    6. ':
' → logprob: -5.784053325653076
    7. 'newline' → logprob: -5.784053325653076
    8. ':' → logprob: -6.284053325653076
    9. ',' → logprob: -7.159053325653076
    10. '<|end|>' → logprob: -7.159053325653076

Token 160: ' problem' (ID: 4792)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4519811272621155
    2. 'haps' → logprob: -1.4519810676574707
    3. '       ' → logprob: -2.9519810676574707
    4. 'self' → logprob: -3.3269810676574707
    5. '```' → logprob: -4.576981067657471
    6. 'row' → logprob: -4.951981067657471
    7. '        ' → logprob: -5.201981067657471
    8. '   ' → logprob: -5.201981067657471
    9. 'return' → logprob: -6.326981067657471
    10. ' def' → logprob: -6.451981067657471

Token 161: ' spec' (ID: 1755)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6237267851829529
    2. '
' → logprob: -1.4987268447875977
    3. '<|end|>' → logprob: -1.4987268447875977
    4. '<|end|>' → logprob: -5.248726844787598
    5. ',' → logprob: -5.373726844787598
    6. ':' → logprob: -5.623726844787598
    7. ':
' → logprob: -7.498726844787598
    8. '   ' → logprob: -7.623726844787598
    9. ' new' → logprob: -7.623726844787598
    10. ')' → logprob: -7.748726844787598

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2821305990219116
    2. '
' → logprob: -1.4071305990219116
    3. '<|end|>' → logprob: -7.782130718231201
    4. 'new' → logprob: -9.032130241394043
    5. ' new' → logprob: -9.032130241394043
    6. '
' → logprob: -9.157130241394043
    7. '   ' → logprob: -10.157130241394043
    8. ' ' → logprob: -11.032130241394043
    9. '        
' → logprob: -11.407130241394043
    10. 'return' → logprob: -11.532130241394043

Token 164: ' new' (ID: 620)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15792687237262726
    2. ' new' → logprob: -2.4079267978668213
    3. 'new' (adapté à ' new') → logprob: -3.2829267978668213
    4. '
' → logprob: -4.0329270362854
    5. '   ' → logprob: -8.782926559448242
    6. ' ' → logprob: -9.282926559448242
    7. 'return' → logprob: -9.532926559448242
    8. '
' → logprob: -9.782926559448242
    9. '```' → logprob: -9.782926559448242
    10. ' return' → logprob: -9.907926559448242

Token 165: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.08110741525888443
    2. '_' → logprob: -2.5811073780059814
    3. ' _' → logprob: -6.7061076164245605
    4. '_col' → logprob: -7.3311076164245605
    5. 'row' → logprob: -8.956107139587402
    6. '```' → logprob: -9.956107139587402
    7. ' row' → logprob: -10.831107139587402
    8. '_
' → logprob: -10.956107139587402
    9. '<|end|>' → logprob: -10.956107139587402
    10. ' ' → logprob: -11.206107139587402

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0086397435516119
    2. '=' → logprob: -4.758639812469482
    3. '<|end|>' → logprob: -11.508639335632324
    4. '   ' → logprob: -11.758639335632324
    5. ' ' → logprob: -12.508639335632324
    6. ',' → logprob: -13.008639335632324
    7. '    ' → logprob: -15.008639335632324
    8. ')' → logprob: -15.258639335632324
    9. '       ' → logprob: -15.633639335632324
    10. '<|end|>' → logprob: -15.758639335632324

Token 167: ' row' (ID: 5225)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.47413963079452515
    2. ' (' → logprob: -0.9741396307945251
    3. '<|end|>' → logprob: -11.349139213562012
    4. '   ' → logprob: -11.599139213562012
    5. '(rows' → logprob: -11.599139213562012
    6. '       ' → logprob: -11.849139213562012
    7. '(next' → logprob: -12.474139213562012
    8. '(new' → logprob: -12.599139213562012
    9. '  ' → logprob: -12.849139213562012
    10. ' ' → logprob: -12.849139213562012

Token 168: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1741035431623459
    2. ' +' → logprob: -1.9241034984588623
    3. '<|end|>' → logprob: -4.549103736877441
    4. ' new' → logprob: -6.799103736877441
    5. 'new' → logprob: -7.299103736877441
    6. '<|end|>' → logprob: -7.674103736877441
    7. '
' → logprob: -8.424103736877441
    8. 'def' → logprob: -9.049103736877441
    9. '       ' → logprob: -9.174103736877441
    10. '+
' → logprob: -9.174103736877441

Token 169: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004911953583359718
    2. ' ' → logprob: -7.625491142272949
    3. '<|end|>' → logprob: -13.75049114227295
    4. '   ' → logprob: -14.00049114227295
    5. '2' → logprob: -15.12549114227295
    6. '       ' → logprob: -15.43799114227295
    7. '0' → logprob: -15.93799114227295
    8. '+' → logprob: -16.375492095947266
    9. '
' → logprob: -16.562992095947266
    10. 'def' → logprob: -16.875492095947266

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002658655575942248
    2. ' ' → logprob: -8.250266075134277
    3. '<|end|>' → logprob: -12.875266075134277
    4. '   ' → logprob: -14.687766075134277
    5. '
' → logprob: -14.875266075134277
    6. '2' → logprob: -15.687766075134277
    7. '       ' → logprob: -16.06276512145996
    8. '+' → logprob: -16.25026512145996
    9. '<|end|>' → logprob: -16.43776512145996
    10. '0' → logprob: -16.43776512145996

Token 171: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: '       ' (ID: 309)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2990421950817108
    2. '%' → logprob: -1.4240422248840332
    3. ')' → logprob: -4.924042224884033
    4. ' new' → logprob: -6.049042224884033
    5. '<|end|>' → logprob: -6.174042224884033
    6. '
' → logprob: -6.424042224884033
    7. '       ' → logprob: -6.674042224884033
    8. ',' → logprob: -6.799042224884033
    9. 'new' → logprob: -6.924042224884033
    10. '#' → logprob: -7.674042224884033

Token 173: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.7699240446090698
    2. ' new' → logprob: -1.7699240446090698
    3. '<|end|>' → logprob: -2.1449241638183594
    4. '       ' → logprob: -2.5199241638183594
    5. ' if' → logprob: -2.6449241638183594
    6. '
' → logprob: -3.2699241638183594
    7. 'if' → logprob: -3.6449241638183594
    8. ' (' → logprob: -4.769924163818359
    9. ',' → logprob: -4.894924163818359
    10. ' ' → logprob: -5.519924163818359

Token 174: '_col' (ID: 7255)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1271636039018631
    2. ')' → logprob: -3.2521636486053467
    3. ' col' → logprob: -3.7521636486053467
    4. '1' → logprob: -3.7521636486053467
    5. ' _' → logprob: -4.252163410186768
    6. '<|end|>' → logprob: -5.002163410186768
    7. '_col' → logprob: -5.627163410186768
    8. ' (' → logprob: -6.502163410186768
    9. ' %' → logprob: -6.627163410186768
    10. 'col' → logprob: -6.877163410186768

Token 175: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932560801506042
    2. ' =' → logprob: -0.6932560801506042
    3. '<|end|>' → logprob: -9.193256378173828
    4. ',' → logprob: -12.943256378173828
    5. ')' → logprob: -13.068256378173828
    6. ' ' → logprob: -14.068256378173828
    7. '=
' → logprob: -14.443256378173828
    8. ' =
' → logprob: -15.068256378173828
    9. ' +=' → logprob: -15.193256378173828
    10. '+' → logprob: -15.568256378173828

Token 176: ' col' (ID: 996)
  Prédit: '(col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(col' → logprob: -0.14670592546463013
    2. ' (' → logprob: -2.5217058658599854
    3. 'col' → logprob: -3.1467058658599854
    4. ' col' → logprob: -4.8967061042785645
    5. '(row' → logprob: -5.2717061042785645
    6. '   ' → logprob: -9.521705627441406
    7. '1' → logprob: -9.646705627441406
    8. 'row' → logprob: -9.771705627441406
    9. '(column' → logprob: -9.896705627441406
    10. ' ' → logprob: -10.021705627441406

Token 177: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.65461266040802
    2. '+' → logprob: -0.77961266040802
    3. ' -' → logprob: -4.0296125411987305
    4. '-' → logprob: -5.5296125411987305
    5. '1' → logprob: -12.52961254119873
    6. ' ' → logprob: -12.52961254119873
    7. ' +
' → logprob: -12.52961254119873
    8. '+
' → logprob: -12.52961254119873
    9. ')' → logprob: -12.65461254119873
    10. '   ' → logprob: -13.15461254119873

Token 178: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10025929659605026
    2. ' ' → logprob: -2.350259304046631
    3. '2' → logprob: -10.100258827209473
    4. '<|end|>' → logprob: -11.725258827209473
    5. '   ' → logprob: -13.912758827209473
    6. '0' → logprob: -14.725258827209473
    7. '```' → logprob: -15.412758827209473
    8. '<|end|>' → logprob: -15.475258827209473
    9. '  ' → logprob: -15.600258827209473
    10. '-' → logprob: -15.725258827209473

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -10.750021934509277
    3. '2' → logprob: -16.125022888183594
    4. '0' → logprob: -16.187522888183594
    5. '<|end|>' → logprob: -16.187522888183594
    6. '-' → logprob: -16.625022888183594
    7. '```' → logprob: -16.687522888183594
    8. '   ' → logprob: -16.937522888183594
    9. '
' → logprob: -17.062522888183594
    10. '۱' → logprob: -17.562522888183594

Token 180: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 182: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 183: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.028459802269935608
    2. 'new' → logprob: -3.7784597873687744
    3. ' not' → logprob: -5.2784600257873535
    4. 'not' → logprob: -10.153459548950195
    5. ' self' → logprob: -10.403459548950195
    6. '	new' → logprob: -11.528459548950195
    7. ' ' → logprob: -12.028459548950195
    8. '(new' → logprob: -12.153459548950195
    9. ')new' → logprob: -13.403459548950195
    10. 'self' → logprob: -13.528459548950195

Token 184: '_col' (ID: 7255)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0007398230955004692
    2. '_col' → logprob: -7.625740051269531
    3. 'row' → logprob: -8.375740051269531
    4. '_' → logprob: -11.000740051269531
    5. 'col' → logprob: -13.500740051269531
    6. ' row' → logprob: -14.375740051269531
    7. '	row' → logprob: -15.000740051269531
    8. 'rown' → logprob: -15.250740051269531
    9. '_ROW' → logprob: -15.625740051269531
    10. '_rows' → logprob: -15.875740051269531

Token 185: ' ==' (ID: 951)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.1706305593252182
    2. ' ==' → logprob: -2.17063045501709
    3. '>=' → logprob: -3.67063045501709
    4. '==' → logprob: -4.54563045501709
    5. ' >' → logprob: -5.17063045501709
    6. '>' → logprob: -7.54563045501709
    7. ' <' → logprob: -7.92063045501709
    8. '<|end|>' → logprob: -9.54563045501709
    9. '<' → logprob: -11.04563045501709
    10. ' ' → logprob: -11.29563045501709

Token 186: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16041919589042664
    2. ' self' → logprob: -1.910419225692749
    3. '0' → logprob: -9.035419464111328
    4. ' ' → logprob: -10.160419464111328
    5. '3' → logprob: -11.535419464111328
    6. '1' → logprob: -12.160419464111328
    7. '2' → logprob: -12.410419464111328
    8. '7' → logprob: -12.785419464111328
    9. '<|end|>' → logprob: -12.785419464111328
    10. '4' → logprob: -13.035419464111328

Token 187: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -4.4060561776859686e-05
    2. '.' → logprob: -10.125043869018555
    3. ' .' → logprob: -13.625043869018555
    4. 'n' → logprob: -13.750043869018555
    5. '<|end|>' → logprob: -13.750043869018555
    6. '.nvim' → logprob: -15.625043869018555
    7. '	n' → logprob: -16.125043869018555
    8. '.col' → logprob: -16.375043869018555
    9. '<|end|>' → logprob: -16.375043869018555

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11360715329647064
    2. ':
' → logprob: -2.238607168197632
    3. ' or' → logprob: -7.988606929779053
    4. ' and' → logprob: -8.363607406616211
    5. '       ' → logprob: -10.238607406616211
    6. 'and' → logprob: -10.613607406616211
    7. ' :
' → logprob: -10.738607406616211
    8. ':return' → logprob: -10.738607406616211
    9. '):
' → logprob: -10.863607406616211
    10. ' :' → logprob: -10.988607406616211

Token 189: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8274584412574768
    2. 'new' → logprob: -1.202458381652832
    3. ' new' → logprob: -2.077458381652832
    4. '
' → logprob: -2.952458381652832
    5. '       ' → logprob: -3.202458381652832
    6. '<|end|>' → logprob: -3.577458381652832
    7. '	       ' → logprob: -6.077458381652832
    8. 'return' → logprob: -6.702458381652832
    9. '_new' → logprob: -6.702458381652832
    10. ':' → logprob: -6.827458381652832

Token 190: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.40052950382232666
    2. ' new' → logprob: -1.1505295038223267
    3. '           ' → logprob: -4.525529384613037
    4. '0' → logprob: -7.400529384613037
    5. ' ' → logprob: -7.775529384613037
    6. 'return' → logprob: -7.775529384613037
    7. '       ' → logprob: -8.025529861450195
    8. '               ' → logprob: -8.650529861450195
    9. '	new' → logprob: -8.775529861450195
    10. '_new' → logprob: -9.275529861450195

Token 191: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0005256305448710918
    2. '_' → logprob: -7.87552547454834
    3. '_row' → logprob: -9.00052547454834
    4. ' _' → logprob: -11.62552547454834
    5. '_column' → logprob: -13.37552547454834
    6. '_c' → logprob: -13.37552547454834
    7. '_co' → logprob: -13.50052547454834
    8. 'col' → logprob: -13.75052547454834
    9. '_val' → logprob: -13.87552547454834
    10. '_cols' → logprob: -13.87552547454834

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05488837882876396
    2. '=' → logprob: -2.9298884868621826
    3. ' ' → logprob: -12.429888725280762
    4. ' -=' → logprob: -13.679888725280762
    5. ' =
' → logprob: -15.179888725280762
    6. ' %=' → logprob: -15.429888725280762
    7. ',' → logprob: -15.554888725280762
    8. ' +=' → logprob: -16.429887771606445
    9. '0' → logprob: -17.054887771606445
    10. ' =)' → logprob: -17.054887771606445

Token 193: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010064760223031044
    2. ' ' → logprob: -4.635064601898193
    3. 'new' → logprob: -9.010065078735352
    4. 'col' → logprob: -9.260065078735352
    5. ' col' → logprob: -10.260065078735352
    6. 'self' → logprob: -11.260065078735352
    7. '   ' → logprob: -11.572565078735352
    8. ' new' → logprob: -12.010065078735352
    9. '1' → logprob: -12.072565078735352
    10. 'n' → logprob: -12.697565078735352

Token 194: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028448181692510843
    2. ' ' → logprob: -6.37784481048584
    3. 'new' → logprob: -7.75284481048584
    4. 'col' → logprob: -7.75284481048584
    5. 'self' → logprob: -9.12784481048584
    6. 'row' → logprob: -9.75284481048584
    7. 'n' → logprob: -10.81534481048584
    8. ' col' → logprob: -10.87784481048584
    9. '1' → logprob: -10.87784481048584
    10. '(' → logprob: -11.81534481048584

Token 195: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29155364632606506
    2. '       ' → logprob: -1.5415536165237427
    3. '<|end|>' → logprob: -3.2915537357330322
    4. '<|end|>' → logprob: -7.916553497314453
    5. '
' → logprob: -8.041553497314453
    6. ' if' → logprob: -8.041553497314453
    7. 'return' → logprob: -8.666553497314453
    8. ' and' → logprob: -9.291553497314453
    9. '        
' → logprob: -9.666553497314453
    10. ' return' → logprob: -10.041553497314453

Token 196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15775473415851593
    2. '
' → logprob: -2.28275465965271
    3. '<|end|>' → logprob: -3.15775465965271
    4. '<|end|>' → logprob: -7.532754898071289
    5. ' and' → logprob: -8.532754898071289
    6. 'return' → logprob: -8.907754898071289
    7. '
' → logprob: -9.407754898071289
    8. ' if' → logprob: -9.407754898071289
    9. ',' → logprob: -9.657754898071289
    10. '#' → logprob: -9.907754898071289

Token 197: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.21550914645195007
    2. '       ' → logprob: -2.0905091762542725
    3. ' if' → logprob: -2.7155091762542725
    4. 'return' → logprob: -5.840508937835693
    5. 'new' → logprob: -7.465508937835693
    6. '<|end|>' → logprob: -8.465509414672852
    7. '
' → logprob: -8.965509414672852
    8. 'elif' → logprob: -9.215509414672852
    9. ' new' → logprob: -10.215509414672852
    10. '   ' → logprob: -10.465509414672852

Token 198: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.08901101350784302
    2. 'new' → logprob: -2.4640109539031982
    3. ' not' → logprob: -9.839011192321777
    4. 'not' → logprob: -11.714011192321777
    5. ' row' → logprob: -12.839011192321777
    6. '    ' → logprob: -13.214011192321777
    7. 'row' → logprob: -13.214011192321777
    8. '   ' → logprob: -13.964011192321777
    9. '	new' → logprob: -14.214011192321777
    10. ' ' → logprob: -14.714011192321777

Token 199: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0014674883568659425
    2. 'row' → logprob: -6.751467704772949
    3. '_' → logprob: -8.62646770477295
    4. '_col' → logprob: -9.25146770477295
    5. ' row' → logprob: -12.12646770477295
    6. '	row' → logprob: -12.75146770477295
    7. '_ROW' → logprob: -13.37646770477295
    8. 'Row' → logprob: -13.37646770477295
    9. 'col' → logprob: -13.62646770477295
    10. '-row' → logprob: -14.00146770477295

Token 200: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1603858917951584
    2. '==' → logprob: -1.9103858470916748
    3. '<|end|>' → logprob: -9.285386085510254
    4. ' >=' → logprob: -10.910386085510254
    5. ' <' → logprob: -11.160386085510254
    6. ' >' → logprob: -11.285386085510254
    7. '=' → logprob: -11.785386085510254
    8. '>' → logprob: -12.035386085510254
    9. '>=' → logprob: -12.410386085510254
    10. ' =' → logprob: -13.410386085510254

Token 201: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38688740134239197
    2. ' self' → logprob: -1.1368874311447144
    3. '<|end|>' → logprob: -12.136887550354004
    4. '0' → logprob: -12.386887550354004
    5. ' ' → logprob: -12.886887550354004
    6. '(self' → logprob: -13.761887550354004
    7. '	self' → logprob: -13.886887550354004
    8. 'n' → logprob: -14.636887550354004
    9. '
' → logprob: -14.761887550354004
    10. '[self' → logprob: -15.261887550354004

Token 202: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00048632267862558365
    2. 'n' → logprob: -7.875486373901367
    3. '.' → logprob: -9.500486373901367
    4. '<|end|>' → logprob: -11.250486373901367
    5. ' n' → logprob: -11.625486373901367
    6. ' .' → logprob: -11.875486373901367
    7. '_n' → logprob: -14.500486373901367
    8. '	n' → logprob: -15.000486373901367
    9. 's' → logprob: -15.375486373901367
    10. '   ' → logprob: -15.500486373901367

Token 203: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05494309961795807
    2. ':
' → logprob: -2.929943084716797
    3. '<|end|>' → logprob: -10.679943084716797
    4. ',' → logprob: -11.304943084716797
    5. '           ' → logprob: -11.679943084716797
    6. '       ' → logprob: -12.179943084716797
    7. ':return' → logprob: -12.429943084716797
    8. ':

' → logprob: -12.929943084716797
    9. '):' → logprob: -13.929943084716797
    10. '<|end|>' → logprob: -13.929943084716797

Token 204: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1906675100326538
    2. ' new' → logprob: -2.1906676292419434
    3. '0' → logprob: -3.0656676292419434
    4. 'new' → logprob: -4.315667629241943
    5. '1' → logprob: -7.065667629241943
    6. ' ' → logprob: -7.690667629241943
    7. ' =' → logprob: -9.190667152404785
    8. '       ' → logprob: -10.065667152404785
    9. ':
' → logprob: -10.190667152404785
    10. ',' → logprob: -10.440667152404785

Token 205: ' new' (ID: 620)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19081830978393555
    2. ' ' → logprob: -2.3158183097839355
    3. 'new' (adapté à ' new') → logprob: -3.0658183097839355
    4. ' new' → logprob: -3.5658183097839355
    5. '           ' → logprob: -9.315818786621094
    6. '               ' → logprob: -11.315818786621094
    7. 'return' → logprob: -11.565818786621094
    8. '   ' → logprob: -11.690818786621094
    9. '       ' → logprob: -11.940818786621094
    10. '1' → logprob: -12.815818786621094

Token 206: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.04244864359498024
    2. '_' → logprob: -3.5424487590789795
    3. ' _' → logprob: -4.7924485206604
    4. '_col' → logprob: -5.6674485206604
    5. ' ' → logprob: -7.9174485206604
    6. ' =' → logprob: -8.417448997497559
    7. '_Row' → logprob: -9.917448997497559
    8. 'Row' → logprob: -10.042448997497559
    9. '_rows' → logprob: -10.292448997497559
    10. 'row' → logprob: -10.417448997497559

Token 207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326553225517273
    2. '=' → logprob: -1.3132655620574951
    3. '0' → logprob: -13.188265800476074
    4. ' ' → logprob: -13.688265800476074
    5. ' =
' → logprob: -14.438265800476074
    6. '<|end|>' → logprob: -16.313264846801758
    7. '=
' → logprob: -16.813264846801758
    8. ',' → logprob: -18.313264846801758
    9. ')' → logprob: -18.688264846801758
    10. ' =)' → logprob: -18.813264846801758

Token 208: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023119196703191847
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -15.25023078918457
    4. '1' → logprob: -16.37523078918457
    5. '<|end|>' → logprob: -16.87523078918457
    6. 'new' → logprob: -17.25023078918457
    7. '       ' → logprob: -17.50023078918457
    8. '           ' → logprob: -17.68773078918457
    9. '  ' → logprob: -17.75023078918457
    10. 'n' → logprob: -17.87523078918457

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.250005722045898
    3. '   ' → logprob: -15.375005722045898
    4. '1' → logprob: -15.875005722045898
    5. 'self' → logprob: -16.0000057220459
    6. '#' → logprob: -16.3125057220459
    7. 'new' → logprob: -16.3125057220459
    8. 'n' → logprob: -16.4375057220459
    9. 'row' → logprob: -16.8125057220459
    10. '00' → logprob: -16.9375057220459

Token 210: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001922802533954382
    2. '	' → logprob: -6.501922607421875
    3. '<|end|>' → logprob: -8.001922607421875
    4. '	return' → logprob: -10.251922607421875
    5. '
' → logprob: -11.626922607421875
    6. ',' → logprob: -12.001922607421875
    7. '   ' → logprob: -12.126922607421875
    8. ' return' → logprob: -12.251922607421875
    9. 'return' → logprob: -12.376922607421875
    10. '           ' → logprob: -13.126922607421875

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.066919301403686e-05
    2. '<|end|>' → logprob: -10.375090599060059
    3. '	' → logprob: -11.000090599060059
    4. 'return' → logprob: -11.375090599060059
    5. ' return' → logprob: -11.625090599060059
    6. '	return' → logprob: -11.625090599060059
    7. '   ' → logprob: -11.625090599060059
    8. '           ' → logprob: -14.000090599060059
    9. ',' → logprob: -14.000090599060059
    10. '      ' → logprob: -14.375090599060059

Token 212: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005456457729451358
    2. 'return' (adapté à ' return') → logprob: -8.625545501708984
    3. '   ' → logprob: -8.875545501708984
    4. '<|end|>' → logprob: -9.125545501708984
    5. ' return' → logprob: -10.000545501708984
    6. '	return' → logprob: -10.250545501708984
    7. '	' → logprob: -10.750545501708984
    8. '      ' → logprob: -12.500545501708984
    9. '        
' → logprob: -13.000545501708984
    10. '           ' → logprob: -13.750545501708984

Token 213: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.03805101290345192
    2. ' new' → logprob: -3.288051128387451
    3. '(new' → logprob: -11.788050651550293
    4. ' (' → logprob: -13.538050651550293
    5. '   ' → logprob: -14.663050651550293
    6. '(' → logprob: -16.66305160522461
    7. '	new' → logprob: -16.66305160522461
    8. ' ' → logprob: -16.78805160522461
    9. '_new' → logprob: -16.91305160522461
    10. 'row' → logprob: -17.53805160522461

Token 214: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.6405310816480778e-05
    2. 'row' → logprob: -11.875016212463379
    3. '_col' → logprob: -12.000016212463379
    4. '_' → logprob: -12.750016212463379
    5. '_rows' → logprob: -16.500017166137695
    6. 'w' → logprob: -16.750017166137695
    7. '_Row' → logprob: -16.875017166137695
    8. ' _' → logprob: -17.125017166137695
    9. '_ROW' → logprob: -17.250017166137695
    10. '__' → logprob: -17.375017166137695

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001996066712308675
    2. ',new' → logprob: -8.625199317932129
    3. ' ,' → logprob: -11.625199317932129
    4. ',
' → logprob: -12.000199317932129
    5. '<|end|>' → logprob: -13.625199317932129
    6. ',col' → logprob: -14.000199317932129
    7. '‌,' → logprob: -14.375199317932129
    8. 'new' → logprob: -14.500199317932129
    9. ',user' → logprob: -15.125199317932129
    10. '`,' → logprob: -15.250199317932129

Token 216: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.061968132853507996
    2. ' new' → logprob: -2.8119680881500244
    3. 'col' → logprob: -15.811967849731445
    4. ' ' → logprob: -15.811967849731445
    5. '	new' → logprob: -15.936967849731445
    6. 'New' → logprob: -17.186967849731445
    7. '0' → logprob: -17.311967849731445
    8. '(new' → logprob: -17.436967849731445
    9. '_new' → logprob: -17.811967849731445
    10. '   ' → logprob: -17.936967849731445

Token 217: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.006719871424138546
    2. 'col' → logprob: -5.006720066070557
    3. '_row' → logprob: -12.756719589233398
    4. 'row' → logprob: -14.756719589233398
    5. ' col' → logprob: -14.881719589233398
    6. '_' → logprob: -14.881719589233398
    7. '	col' → logprob: -15.131719589233398
    8. '_con' → logprob: -16.6317195892334
    9. '_COL' → logprob: -16.8817195892334
    10. '[col' → logprob: -17.1317195892334

Token 218: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 219: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.25064340233802795
    2. ' def' → logprob: -1.7506433725357056
    3. '   ' → logprob: -3.250643491744995
    4. ' ' → logprob: -4.875643253326416
    5. ' 
' → logprob: -7.250643253326416
    6. '    
' → logprob: -8.750643730163574
    7. '	def' → logprob: -9.000643730163574
    8. '[' → logprob: -9.125643730163574
    9. '(' → logprob: -9.125643730163574
    10. '<|end|>' → logprob: -9.750643730163574

Token 221: ' iterate' (ID: 63166)
  Prédit: ' generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' generate' → logprob: -0.737525463104248
    2. 'generate' → logprob: -0.737525463104248
    3. ' create' → logprob: -3.987525463104248
    4. ' fill' → logprob: -4.862525463104248
    5. 'create' → logprob: -4.862525463104248
    6. 'fill' → logprob: -5.487525463104248
    7. 'make' → logprob: -6.612525463104248
    8. ' build' → logprob: -6.862525463104248
    9. ' make' → logprob: -7.237525463104248
    10. 'build' → logprob: -7.612525463104248

Token 222: '_positions' (ID: 93193)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34265169501304626
    2. '(self' → logprob: -1.3426517248153687
    3. '_' → logprob: -3.717651605606079
    4. '_(' → logprob: -6.092651844024658
    5. '_square' → logprob: -7.467651844024658
    6. '_cells' → logprob: -7.592651844024658
    7. 'self' → logprob: -8.3426513671875
    8. '_rows' → logprob: -8.3426513671875
    9. '_items' → logprob: -8.8426513671875
    10. '_values' → logprob: -8.9676513671875

Token 223: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06203266233205795
    2. '(' → logprob: -2.812032699584961
    3. '(
' → logprob: -10.312032699584961
    4. ' (' → logprob: -10.812032699584961
    5. 'self' → logprob: -12.187032699584961
    6. '   ' → logprob: -12.687032699584961
    7. ' ' → logprob: -13.187032699584961
    8. '(s' → logprob: -15.187032699584961
    9. '(

' → logprob: -15.437032699584961
    10. ' self' → logprob: -15.687032699584961

Token 224: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4528048634529114
    2. '):' → logprob: -1.0778048038482666
    3. 'self' → logprob: -4.452805042266846
    4. '):
' → logprob: -4.577805042266846
    5. '(self' → logprob: -7.327805042266846
    6. '   ' → logprob: -7.827805042266846
    7. ' ,' → logprob: -8.452804565429688
    8. ')' → logprob: -8.577804565429688
    9. '_' → logprob: -8.827804565429688
    10. ' ):' → logprob: -9.702804565429688

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013692846987396479
    2. '   ' → logprob: -8.25136947631836
    3. ':' → logprob: -8.37636947631836
    4. '(row' → logprob: -8.50136947631836
    5. ',' → logprob: -8.75136947631836
    6. '(' → logprob: -8.87636947631836
    7. ' for' → logprob: -9.37636947631836
    8. '\' → logprob: -10.37636947631836
    9. '
' → logprob: -10.50136947631836
    10. '    ' → logprob: -10.50136947631836

Token 226: ' #' (ID: 1069)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.4110429584980011
    2. '       ' → logprob: -1.5360429286956787
    3. ' row' → logprob: -2.6610429286956787
    4. ' for' → logprob: -3.7860429286956787
    5. 'for' → logprob: -4.411043167114258
    6. 'n' → logprob: -4.661043167114258
    7. 'i' → logprob: -6.286043167114258
    8. ' i' → logprob: -6.536043167114258
    9. 'r' → logprob: -7.036043167114258
    10. ' n' → logprob: -7.411043167114258

Token 227: ' Iterator' (ID: 41994)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.9677876830101013
    2. ' row' → logprob: -0.9677876830101013
    3. ' for' → logprob: -3.217787742614746
    4. 'n' → logprob: -3.467787742614746
    5. 'for' → logprob: -3.467787742614746
    6. ' n' → logprob: -3.717787742614746
    7. 'i' → logprob: -3.967787742614746
    8. ' if' → logprob: -4.342787742614746
    9. ' i' → logprob: -4.342787742614746
    10. 'pos' → logprob: -4.467787742614746

Token 228: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017088664695620537
    2. '   ' → logprob: -4.267088890075684
    3. ':' → logprob: -6.892088890075684
    4. '    ' → logprob: -7.767088890075684
    5. ' ' → logprob: -8.267088890075684
    6. '        
' → logprob: -8.267088890075684
    7. '(self' → logprob: -8.517088890075684
    8. ' for' → logprob: -8.517088890075684
    9. ',' → logprob: -9.392088890075684
    10. '        ' → logprob: -9.517088890075684

Token 229: ' all' (ID: 722)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.8318206071853638
    2. 'row' → logprob: -1.0818206071853638
    3. ' range' → logprob: -2.331820487976074
    4. ' i' → logprob: -2.956820487976074
    5. 'range' → logprob: -3.581820487976074
    6. ' self' → logprob: -4.331820487976074
    7. ' ' → logprob: -4.831820487976074
    8. 'i' → logprob: -4.956820487976074
    9. 'self' → logprob: -5.081820487976074
    10. ' (' → logprob: -5.206820487976074

Token 230: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.08141482621431351
    2. 'positions' → logprob: -2.7064149379730225
    3. ' row' → logprob: -4.956414699554443
    4. 'row' → logprob: -6.081414699554443
    5. ' (' → logprob: -7.206414699554443
    6. ' rows' → logprob: -7.831414699554443
    7. ' ' → logprob: -8.581415176391602
    8. ' i' → logprob: -9.081415176391602
    9. 'rows' → logprob: -9.081415176391602
    10. ' cells' → logprob: -9.206415176391602

Token 231: ' for' (ID: 395)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.378047913312912
    2. '(' → logprob: -1.7530479431152344
    3. '   ' → logprob: -2.5030479431152344
    4. ':' → logprob: -3.7530479431152344
    5. '       ' → logprob: -4.378047943115234
    6. '
' → logprob: -5.003047943115234
    7. '(
' → logprob: -5.503047943115234
    8. ' ' → logprob: -5.503047943115234
    9. '(n' → logprob: -6.878047943115234
    10. '    
' → logprob: -7.003047943115234

Token 232: ' extens' (ID: 34241)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6728097200393677
    2. ' row' → logprob: -1.0478097200393677
    3. ' _' → logprob: -2.547809600830078
    4. ' n' → logprob: -3.797809600830078
    5. ' ' → logprob: -4.797809600830078
    6. ' self' → logprob: -5.172809600830078
    7. 'i' → logprob: -5.422809600830078
    8. ' num' → logprob: -5.672809600830078
    9. '_' → logprob: -5.797809600830078
    10. ' r' → logprob: -6.172809600830078

Token 233: 'ibility' (ID: 4295)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.24547824263572693
    2. 'def' → logprob: -1.7454782724380493
    3. 'ions' → logprob: -4.12047815322876
    4. 'e' → logprob: -4.37047815322876
    5. 'ion' → logprob: -5.12047815322876
    6. '   ' → logprob: -5.49547815322876
    7. 'eded' → logprob: -6.62047815322876
    8. '       ' → logprob: -7.12047815322876
    9. 'ing' → logprob: -7.37047815322876
    10. ' def' → logprob: -7.49547815322876

Token 234: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7029261589050293
    2. '       ' → logprob: -1.5779261589050293
    3. '   ' → logprob: -1.8279261589050293
    4. '
' → logprob: -2.8279261589050293
    5. '(self' → logprob: -3.4529261589050293
    6. '  
' → logprob: -4.827926158905029
    7. '    
' → logprob: -5.077926158905029
    8. '(' → logprob: -5.202926158905029
    9. ':
' → logprob: -5.577926158905029
    10. ' ' → logprob: -5.702926158905029

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06010783091187477
    2. '   ' → logprob: -3.060107946395874
    3. '
' → logprob: -5.435107707977295
    4. ' for' → logprob: -6.060107707977295
    5. '        
' → logprob: -7.060107707977295
    6. '<|end|>' → logprob: -7.685107707977295
    7. ',' → logprob: -7.935107707977295
    8. 'n' → logprob: -8.060108184814453
    9. '    
' → logprob: -8.060108184814453
    10. '    ' → logprob: -8.060108184814453

Token 236: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10839180648326874
    2. 'for' (adapté à ' for') → logprob: -2.358391761779785
    3. '       ' → logprob: -4.858391761779785
    4. 'row' → logprob: -8.608391761779785
    5. ' row' → logprob: -8.733391761779785
    6. '   ' → logprob: -10.983391761779785
    7. ' i' → logprob: -11.983391761779785
    8. 'r' → logprob: -12.108391761779785
    9. 'n' → logprob: -12.233391761779785
    10. '    ' → logprob: -12.858391761779785

Token 237: ' r' (ID: 428)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.28717538714408875
    2. 'row' → logprob: -1.4121754169464111
    3. ' i' → logprob: -5.787175178527832
    4. 'i' → logprob: -6.662175178527832
    5. 'r' → logprob: -6.912175178527832
    6. ' r' → logprob: -7.537175178527832
    7. '   ' → logprob: -10.412175178527832
    8. ' range' → logprob: -10.412175178527832
    9. ' ' → logprob: -10.787175178527832
    10. 'range' → logprob: -11.162175178527832

Token 238: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010421930812299252
    2. ' ' → logprob: -4.7604217529296875
    3. 'in' → logprob: -7.7604217529296875
    4. 'ange' → logprob: -8.010421752929688
    5. 'ow' → logprob: -8.260421752929688
    6. ',' → logprob: -8.635421752929688
    7. 'o' → logprob: -8.760421752929688
    8. '  ' → logprob: -8.885421752929688
    9. ' i' → logprob: -9.385421752929688
    10. 'i' → logprob: -9.385421752929688

Token 239: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38707539439201355
    2. 'range' → logprob: -1.137075424194336
    3. 'ange' → logprob: -8.512075424194336
    4. '   ' → logprob: -13.262075424194336
    5. ' ' → logprob: -14.262075424194336
    6. '	range' → logprob: -14.887075424194336
    7. '  ' → logprob: -15.637075424194336
    8. '(range' → logprob: -15.762075424194336
    9. '    ' → logprob: -16.512075424194336
    10. 'self' → logprob: -16.637075424194336

Token 240: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00033832306507974863
    2. '(' → logprob: -8.000338554382324
    3. 'self' → logprob: -12.875338554382324
    4. ' self' → logprob: -15.125338554382324
    5. ' (' → logprob: -16.750337600708008
    6. '(
' → logprob: -16.875337600708008
    7. '(s' → logprob: -18.500337600708008
    8. '1' → logprob: -20.125337600708008
    9. ',self' → logprob: -20.125337600708008
    10. '0' → logprob: -20.375337600708008

Token 241: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00015419373812619597
    2. '.' → logprob: -9.000154495239258
    3. ' .' → logprob: -11.250154495239258
    4. 'n' → logprob: -11.250154495239258
    5. 'self' → logprob: -12.625154495239258
    6. '.
' → logprob: -14.250154495239258
    7. ').' → logprob: -15.375154495239258
    8. '	n' → logprob: -15.875154495239258
    9. '
' → logprob: -16.250154495239258
    10. '   ' → logprob: -16.500154495239258

Token 242: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1603023260831833
    2. '):
' → logprob: -1.9103022813796997
    3. ':' → logprob: -9.91030216217041
    4. '):
' → logprob: -11.66030216217041
    5. ')' → logprob: -11.91030216217041
    6. '   ' → logprob: -12.41030216217041
    7. '<|end|>' → logprob: -12.91030216217041
    8. ' ):' → logprob: -13.03530216217041
    9. '):

' → logprob: -13.91030216217041
    10. ':
' → logprob: -13.91030216217041

Token 243: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4963226914405823
    2. '           ' → logprob: -0.9963226914405823
    3. ' for' → logprob: -4.2463226318359375
    4. '   ' → logprob: -4.9963226318359375
    5. 'for' → logprob: -7.7463226318359375
    6. '	   ' → logprob: -9.246322631835938
    7. ':' → logprob: -9.371322631835938
    8. ':
' → logprob: -9.746322631835938
    9. '	       ' → logprob: -9.871322631835938
    10. ',' → logprob: -10.621322631835938

Token 244: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.39019522070884705
    2. ' for' → logprob: -1.1401952505111694
    3. '           ' → logprob: -5.765195369720459
    4. '       ' → logprob: -9.3901948928833
    5. '   ' → logprob: -10.0151948928833
    6. '	for' → logprob: -10.8901948928833
    7. '               ' → logprob: -11.0151948928833
    8. 'yield' → logprob: -11.3901948928833
    9. ' ' → logprob: -12.8901948928833
    10. ' yield' → logprob: -13.2651948928833

Token 245: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.12693923711776733
    2. 'c' → logprob: -2.126939296722412
    3. ' ' → logprob: -12.501938819885254
    4. '   ' → logprob: -12.626938819885254
    5. '0' → logprob: -14.001938819885254
    6. '       ' → logprob: -14.251938819885254
    7. '    ' → logprob: -14.564438819885254
    8. '	c' → logprob: -15.126938819885254
    9. '
' → logprob: -15.626938819885254
    10. '     ' → logprob: -16.00193977355957

Token 246: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0038979414384812117
    2. 'in' → logprob: -5.7538981437683105
    3. ' ' → logprob: -7.2538981437683105
    4. '<|end|>' → logprob: -11.503897666931152
    5. '	in' → logprob: -15.003897666931152
    6. '<|end|>' → logprob: -15.003897666931152
    7. 'n' → logprob: -15.003897666931152
    8. ' ' → logprob: -15.503897666931152
    9. 's' → logprob: -15.753897666931152
    10. 'import' → logprob: -16.00389862060547

Token 247: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01416350994259119
    2. ' range' → logprob: -4.264163494110107
    3. 'self' → logprob: -17.889163970947266
    4. '(range' → logprob: -20.389163970947266
    5. '	range' → logprob: -21.514163970947266
    6. ' ' → logprob: -21.639163970947266
    7. '   ' → logprob: -21.764163970947266
    8. '0' → logprob: -22.764163970947266
    9. '.range' → logprob: -23.014163970947266
    10. '    ' → logprob: -23.264163970947266

Token 248: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003967028111219406
    2. 'self' → logprob: -5.753966808319092
    3. '(' → logprob: -7.253966808319092
    4. ' self' → logprob: -9.87896728515625
    5. ' (' → logprob: -11.12896728515625
    6. 'range' → logprob: -11.75396728515625
    7. '(range' → logprob: -12.50396728515625
    8. ' range' → logprob: -13.37896728515625
    9. '(
' → logprob: -14.12896728515625
    10. ')' → logprob: -14.37896728515625

Token 249: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -7.743758760625497e-05
    2. '.' → logprob: -9.500077247619629
    3. ' .' → logprob: -13.500077247619629
    4. 'n' → logprob: -13.875077247619629
    5. ').' → logprob: -16.125078201293945
    6. '.m' → logprob: -17.000078201293945
    7. ')' → logprob: -17.875078201293945
    8. '   ' → logprob: -17.875078201293945
    9. '.
' → logprob: -17.875078201293945
    10. '	n' → logprob: -18.375078201293945

Token 250: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019112221896648407
    2. '):
' → logprob: -4.0191121101379395
    3. ':' → logprob: -7.2691121101379395
    4. ')' → logprob: -8.394112586975098
    5. ' ):' → logprob: -11.519112586975098
    6. '<|end|>' → logprob: -11.644112586975098
    7. '):

' → logprob: -12.519112586975098
    8. '):
' → logprob: -12.644112586975098
    9. '       ' → logprob: -12.769112586975098
    10. '():' → logprob: -13.019112586975098

Token 251: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.031402695924043655
    2. '           ' → logprob: -4.156402587890625
    3. ' yield' → logprob: -4.531402587890625
    4. 'yield' → logprob: -5.531402587890625
    5. '	yield' → logprob: -8.156402587890625
    6. ':' → logprob: -9.031402587890625
    7. '       ' → logprob: -10.781402587890625
    8. ' yields' → logprob: -10.906402587890625
    9. 'Yield' → logprob: -11.031402587890625
    10. '<|end|>' → logprob: -11.656402587890625

Token 252: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.20203767716884613
    2. ' yield' → logprob: -1.7020376920700073
    3. '                   ' → logprob: -7.577037811279297
    4. '	yield' → logprob: -9.202037811279297
    5. '               ' → logprob: -11.577037811279297
    6. 'Yield' → logprob: -13.577037811279297
    7. 'return' → logprob: -14.702037811279297
    8. ' yields' → logprob: -16.827037811279297
    9. ' Yield' → logprob: -17.327037811279297
    10. '```' → logprob: -17.327037811279297

Token 253: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.16007187962532043
    2. ' r' → logprob: -2.035071849822998
    3. '(r' → logprob: -4.535071849822998
    4. ' (' → logprob: -5.035071849822998
    5. '(' → logprob: -11.410072326660156
    6. '   ' → logprob: -14.035072326660156
    7. '	r' → logprob: -14.285072326660156
    8. ' ' → logprob: -14.660072326660156
    9. '_r' → logprob: -15.285072326660156
    10. '
' → logprob: -15.285072326660156

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019368309527635574
    2. ' ,' → logprob: -4.2693681716918945
    3. ',c' → logprob: -5.2693681716918945
    4. ',
' → logprob: -11.019368171691895
    5. '<|end|>' → logprob: -11.019368171691895
    6. ',col' → logprob: -12.144368171691895
    7. '‌,' → logprob: -13.394368171691895
    8. ' ' → logprob: -13.644368171691895
    9. ',column' → logprob: -14.144368171691895
    10. ' ,
' → logprob: -14.769368171691895

Token 255: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10020915418863297
    2. ' c' → logprob: -2.3502092361450195
    3. ' ' → logprob: -13.85020923614502
    4. '<|end|>' → logprob: -13.85020923614502
    5. '	c' → logprob: -15.35020923614502
    6. ' ' → logprob: -15.47520923614502
    7. ' ' → logprob: -17.475208282470703
    8. ' 
' → logprob: -17.725208282470703
    9. ')c' → logprob: -17.850208282470703
    10. '               ' → logprob: -18.100208282470703

Token 256: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035632499493658543
    2. 'def' → logprob: -6.628563404083252
    3. '
' → logprob: -7.378563404083252
    4. ' def' → logprob: -8.128562927246094
    5. '<|end|>' → logprob: -8.253562927246094
    6. 'n' → logprob: -8.378562927246094
    7. '```' → logprob: -8.753562927246094
    8. '    
' → logprob: -8.753562927246094
    9. '\' → logprob: -8.878562927246094
    10. '\n' → logprob: -9.878562927246094

Token 258: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006135449279099703
    2. ' def' → logprob: -5.3811354637146
    3. '   ' → logprob: -6.5061354637146
    4. '
' → logprob: -11.631134986877441
    5. '    
' → logprob: -12.381134986877441
    6. ' ' → logprob: -13.256134986877441
    7. '	def' → logprob: -13.631134986877441
    8. '```' → logprob: -13.756134986877441
    9. ' 
' → logprob: -14.881134986877441
    10. 'd' → logprob: -15.131134986877441

Token 259: ' generate' (ID: 10419)
  Prédit: ' generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' generate' → logprob: -0.1274573653936386
    2. ' create' → logprob: -2.8774573802948
    3. 'generate' → logprob: -3.5024573802948
    4. ' fill' → logprob: -4.252457141876221
    5. ' build' → logprob: -4.502457141876221
    6. ' make' → logprob: -6.002457141876221
    7. ' construct' → logprob: -6.252457141876221
    8. ' solve' → logprob: -7.002457141876221
    9. 'create' → logprob: -7.377457141876221
    10. 'fill' → logprob: -8.002457618713379

Token 260: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.22960278391838074
    2. '(' → logprob: -2.354602813720703
    3. '_magic' → logprob: -2.729602813720703
    4. '_' → logprob: -3.604602813720703
    5. '_square' → logprob: -4.229602813720703
    6. '_self' → logprob: -7.104602813720703
    7. '(
' → logprob: -7.229602813720703
    8. '_standard' → logprob: -8.229602813720703
    9. '_s' → logprob: -8.354602813720703
    10. '()' → logprob: -8.979602813720703

Token 261: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05832863971590996
    2. '_magic' → logprob: -3.308328628540039
    3. '_' → logprob: -4.683328628540039
    4. 'self' → logprob: -5.808328628540039
    5. ')' → logprob: -6.058328628540039
    6. ' ):' → logprob: -6.433328628540039
    7. '):
' → logprob: -7.058328628540039
    8. '_self' → logprob: -7.183328628540039
    9. '_square' → logprob: -7.433328628540039
    10. 'Magic' → logprob: -8.308328628540039

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000116655595775228
    2. '   ' → logprob: -10.375116348266602
    3. ':' → logprob: -10.750116348266602
    4. '        ' → logprob: -11.250116348266602
    5. '#' → logprob: -11.375116348266602
    6. '        
' → logprob: -11.750116348266602
    7. '    ' → logprob: -12.000116348266602
    8. '(' → logprob: -12.875116348266602
    9. '      ' → logprob: -13.125116348266602
    10. ' ' → logprob: -13.125116348266602

Token 263: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9040609002113342
    2. ' row' → logprob: -1.2790608406066895
    3. ' n' → logprob: -1.6540608406066895
    4. 'row' → logprob: -3.1540608406066895
    5. 'n' → logprob: -3.4040608406066895
    6. 'if' → logprob: -3.7790608406066895
    7. ' pass' → logprob: -4.5290608406066895
    8. '       ' → logprob: -5.5290608406066895
    9. ' #' → logprob: -5.9040608406066895
    10. '#' (adapté à ' #') → logprob: -6.1540608406066895

Token 264: ' Place' (ID: 16303)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.40828847885131836
    2. 'if' → logprob: -1.6582884788513184
    3. 'n' → logprob: -2.6582884788513184
    4. ' n' → logprob: -2.9082884788513184
    5. 'num' → logprob: -5.283288478851318
    6. ' row' → logprob: -5.658288478851318
    7. '#' → logprob: -6.033288478851318
    8. 'row' → logprob: -6.158288478851318
    9. ' num' → logprob: -6.533288478851318
    10. '   ' → logprob: -7.158288478851318

Token 265: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07404904067516327
    2. ' num' → logprob: -3.5740489959716797
    3. '1' → logprob: -4.32404899597168
    4. ' number' → logprob: -4.57404899597168
    5. ' n' → logprob: -4.57404899597168
    6. ' row' → logprob: -6.19904899597168
    7. 'num' → logprob: -6.32404899597168
    8. 'n' → logprob: -6.57404899597168
    9. '   ' → logprob: -6.57404899597168
    10. ' self' → logprob: -7.19904899597168

Token 266: '1' (ID: 16)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.14850957691669464
    2. 'number' → logprob: -2.5235095024108887
    3. 'row' → logprob: -3.2735095024108887
    4. 'n' → logprob: -4.023509502410889
    5. '1' → logprob: -7.148509502410889
    6. ' num' → logprob: -7.523509502410889
    7. ' number' → logprob: -8.648509979248047
    8. 'value' → logprob: -8.898509979248047
    9. '   ' → logprob: -9.273509979248047
    10. ' ' → logprob: -9.523509979248047

Token 267: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.07110745459794998
    2. ',' → logprob: -3.6961073875427246
    3. ' in' → logprob: -4.446107387542725
    4. ' ' → logprob: -4.571107387542725
    5. ' =' → logprob: -4.571107387542725
    6. ' ,' → logprob: -5.946107387542725
    7. 'at' → logprob: -6.321107387542725
    8. ' row' → logprob: -6.821107387542725
    9. 'row' → logprob: -7.071107387542725
    10. '   ' → logprob: -7.071107387542725

Token 268: ' central' (ID: 11082)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018774702912196517
    2. ' ' → logprob: -7.001877307891846
    3. 'self' → logprob: -7.001877307891846
    4. ' self' → logprob: -10.501877784729004
    5. ' (' → logprob: -11.251877784729004
    6. '(' → logprob: -11.376877784729004
    7. '(self' → logprob: -13.376877784729004
    8. '   ' → logprob: -13.751877784729004
    9. 'row' → logprob: -14.376877784729004
    10. '       ' → logprob: -15.751877784729004

Token 269: ' cell' (ID: 4206)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.5006285309791565
    2. ',' → logprob: -2.3756284713745117
    3. '_' → logprob: -3.1256284713745117
    4. 'row' → logprob: -3.1256284713745117
    5. '_row' → logprob: -3.1256284713745117
    6. ' ,' → logprob: -3.2506284713745117
    7. ' )' → logprob: -3.2506284713745117
    8. ' ' → logprob: -3.5006284713745117
    9. ' _' → logprob: -4.125628471374512
    10. ')' → logprob: -4.250628471374512

Token 270: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1080169677734375
    2. '<|end|>' → logprob: -1.1080169677734375
    3. '
' → logprob: -1.8580169677734375
    4. '(row' → logprob: -2.9830169677734375
    5. ' (' → logprob: -3.6080169677734375
    6. '(' → logprob: -3.8580169677734375
    7. ',' → logprob: -4.1080169677734375
    8. '[' → logprob: -4.4830169677734375
    9. ' =' → logprob: -4.9830169677734375
    10. '<|end|>' → logprob: -5.1080169677734375

Token 271: ' middle' (ID: 10006)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.32300400733947754
    2. ' the' → logprob: -1.8230040073394775
    3. 'self' → logprob: -2.6980040073394775
    4. ' row' → logprob: -4.073003768920898
    5. ' first' → logprob: -4.073003768920898
    6. 'the' → logprob: -5.073003768920898
    7. ' top' → logprob: -5.573003768920898
    8. ' range' → logprob: -7.448003768920898
    9. 'row' → logprob: -7.573003768920898
    10. ' middle' → logprob: -7.573003768920898

Token 272: ' row' (ID: 5225)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.637717604637146
    2. '_row' → logprob: -1.637717604637146
    3. ',' → logprob: -2.5127177238464355
    4. '+' → logprob: -3.5127177238464355
    5. ' of' → logprob: -3.8877177238464355
    6. ' =' → logprob: -4.0127177238464355
    7. '(' → logprob: -4.1377177238464355
    8. ' _' → logprob: -4.1377177238464355
    9. ')' → logprob: -4.5127177238464355
    10. ' row' → logprob: -4.6377177238464355

Token 273: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6335130333900452
    2. '       ' → logprob: -1.0085129737854004
    3. '[' → logprob: -3.8835129737854004
    4. '(' → logprob: -4.5085129737854
    5. '
' → logprob: -4.7585129737854
    6. '   ' → logprob: -4.8835129737854
    7. ' ' → logprob: -5.0085129737854
    8. ' (' → logprob: -5.0085129737854
    9. '<|end|>' → logprob: -5.2585129737854
    10. '_' → logprob: -5.3835129737854

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0484005212783813
    2. ' (' → logprob: -1.2984005212783813
    3. ' ' → logprob: -1.9234005212783813
    4. '(self' → logprob: -2.798400402069092
    5. ' self' → logprob: -2.923400402069092
    6. '0' → logprob: -3.173400402069092
    7. 'self' → logprob: -3.673400402069092
    8. '(' → logprob: -3.798400402069092
    9. '(n' → logprob: -4.048400402069092
    10. '((' → logprob: -6.798400402069092

Token 275: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5283253192901611
    2. ' ' → logprob: -1.7783253192901611
    3. ' ,' → logprob: -2.528325319290161
    4. '    ' → logprob: -3.528325319290161
    5. '   ' → logprob: -3.778325319290161
    6. '_' → logprob: -3.903325319290161
    7. '       ' → logprob: -4.403325080871582
    8. ' +' → logprob: -4.778325080871582
    9. ' =' → logprob: -4.903325080871582
    10. '+' → logprob: -4.903325080871582

Token 276: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5354849100112915
    2. ',' → logprob: -1.6604849100112915
    3. ' )' → logprob: -2.785484790802002
    4. ' ,' → logprob: -3.160484790802002
    5. ' ' → logprob: -3.410484790802002
    6. '       ' → logprob: -3.660484790802002
    7. 'self' → logprob: -4.410484790802002
    8. '
' → logprob: -4.535484790802002
    9. ' self' → logprob: -4.535484790802002
    10. '   ' → logprob: -5.785484790802002

Token 277: ' below' (ID: 4895)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09200801700353622
    2. ' )' → logprob: -3.342008113861084
    3. ',' → logprob: -3.717008113861084
    4. ' ,' → logprob: -4.592008113861084
    5. '   ' → logprob: -5.967008113861084
    6. '       ' → logprob: -5.967008113861084
    7. ' ' → logprob: -6.342008113861084
    8. '):
' → logprob: -6.342008113861084
    9. ')
' → logprob: -6.467008113861084
    10. ' -' → logprob: -6.592008113861084

Token 278: ' center' (ID: 6170)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.15100277960300446
    2. ')' → logprob: -2.401002883911133
    3. 'the' → logprob: -4.151002883911133
    4. ' )' → logprob: -4.276002883911133
    5. ' middle' → logprob: -4.651002883911133
    6. ' center' → logprob: -5.151002883911133
    7. ' self' → logprob: -6.651002883911133
    8. '):' → logprob: -7.026002883911133
    9. ' def' → logprob: -7.776002883911133
    10. 'self' → logprob: -7.776002883911133

Token 279: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08066025376319885
    2. ' )' → logprob: -2.955660343170166
    3. ',' → logprob: -4.455660343170166
    4. ')
' → logprob: -5.205660343170166
    5. ' row' → logprob: -6.080660343170166
    6. ' ,' → logprob: -6.330660343170166
    7. ' )
' → logprob: -6.955660343170166
    8. ' ' → logprob: -7.080660343170166
    9. 'row' → logprob: -7.580660343170166
    10. '):
' → logprob: -8.080659866333008

Token 280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015524751506745815
    2. 'row' → logprob: -7.626552581787109
    3. ',' → logprob: -7.876552581787109
    4. '
' → logprob: -8.75155258178711
    5. '        
' → logprob: -8.87655258178711
    6. ' row' → logprob: -9.12655258178711
    7. '        ' → logprob: -9.62655258178711
    8. ':' → logprob: -10.62655258178711
    9. 'n' → logprob: -10.62655258178711
    10. '#' → logprob: -10.75155258178711

Token 281: ' center' (ID: 6170)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.6741340756416321
    2. ' row' → logprob: -1.7991340160369873
    3. ' center' → logprob: -2.2991340160369873
    4. ' middle' → logprob: -2.4241340160369873
    5. ' start' → logprob: -2.9241340160369873
    6. 'row' → logprob: -3.1741340160369873
    7. 'mid' → logprob: -4.049134254455566
    8. 'center' (adapté à ' center') → logprob: -4.549134254455566
    9. 'middle' → logprob: -5.549134254455566
    10. 'start' → logprob: -5.674134254455566

Token 282: '_col' (ID: 7255)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.28381046652793884
    2. '_' → logprob: -1.4088104963302612
    3. ' =' → logprob: -6.408810615539551
    4. '_r' → logprob: -8.28381061553955
    5. '=' → logprob: -8.40881061553955
    6. ' _' → logprob: -8.40881061553955
    7. 'row' → logprob: -8.90881061553955
    8. '_col' → logprob: -9.40881061553955
    9. '_x' → logprob: -11.03381061553955
    10. ' row' → logprob: -11.78381061553955

Token 283: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014507230371236801
    2. '=' → logprob: -4.264507293701172
    3. ' ' → logprob: -8.264507293701172
    4. ',' → logprob: -10.264507293701172
    5. ' +' → logprob: -11.264507293701172
    6. '    ' → logprob: -11.764507293701172
    7. '   ' → logprob: -12.139507293701172
    8. ')' → logprob: -12.514507293701172
    9. '+' → logprob: -12.514507293701172
    10. ' ,' → logprob: -12.514507293701172

Token 284: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.030008727684617043
    2. ' self' → logprob: -3.5300087928771973
    3. '(self' → logprob: -8.280008316040039
    4. ' (' → logprob: -12.905008316040039
    5. '   ' → logprob: -13.530008316040039
    6. '
' → logprob: -15.155008316040039
    7. '[self' → logprob: -15.405008316040039
    8. '	self' → logprob: -16.03000831604004
    9. ' ' → logprob: -16.40500831604004
    10. '(' → logprob: -16.40500831604004

Token 285: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -4.9186317482963204e-05
    2. '.' → logprob: -10.500049591064453
    3. 'n' → logprob: -10.750049591064453
    4. ' .' → logprob: -16.625049591064453
    5. '	n' → logprob: -18.250049591064453
    6. '   ' → logprob: -18.375049591064453
    7. 'self' → logprob: -18.625049591064453
    8. ',n' → logprob: -19.000049591064453
    9. ' ' → logprob: -19.875049591064453
    10. '<n' → logprob: -19.875049591064453

Token 286: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.03809439390897751
    2. ' //' → logprob: -3.2880942821502686
    3. '#' → logprob: -9.913094520568848
    4. ' ' → logprob: -13.913094520568848
    5. '   ' → logprob: -14.288094520568848
    6. '```' → logprob: -14.288094520568848
    7. '
' → logprob: -14.413094520568848
    8. '2' → logprob: -14.913094520568848
    9. '3' → logprob: -15.413094520568848
    10. '`' → logprob: -16.66309356689453

Token 287: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.875045776367188
    4. '
' → logprob: -17.750045776367188
    5. '  ' → logprob: -18.750045776367188
    6. '```' → logprob: -19.250045776367188
    7. '    ' → logprob: -20.375045776367188
    8. '

' → logprob: -20.625045776367188
    9. '۲' → logprob: -20.625045776367188
    10. '3' → logprob: -20.875045776367188

Token 288: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7954958821064793e-05
    2. ' ' → logprob: -11.000018119812012
    3. '
' → logprob: -14.875018119812012
    4. '   ' → logprob: -15.125018119812012
    5. '1' → logprob: -15.250018119812012
    6. '```' → logprob: -16.437517166137695
    7. '  ' → logprob: -17.250017166137695
    8. '3' → logprob: -17.312517166137695
    9. '0' → logprob: -17.437517166137695
    10. '۲' → logprob: -17.625017166137695

Token 289: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15599653124809265
    2. '+' → logprob: -2.155996561050415
    3. ' +' → logprob: -3.655996561050415
    4. ' 
' → logprob: -6.905996322631836
    5. 'center' → logprob: -7.280996322631836
    6. '
' → logprob: -7.405996322631836
    7. '       ' → logprob: -8.405996322631836
    8. '        
' → logprob: -10.030996322631836
    9. '' → logprob: -10.155996322631836
    10. '+
' → logprob: -10.530996322631836

Token 290: '       ' (ID: 309)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.07651301473379135
    2. 'row' → logprob: -3.2015130519866943
    3. 'start' → logprob: -3.7015130519866943
    4. 'current' → logprob: -5.076512813568115
    5. ' center' → logprob: -6.701512813568115
    6. '       ' → logprob: -8.076513290405273
    7. 'prev' → logprob: -9.451513290405273
    8. 'next' → logprob: -9.576513290405273
    9. 'pos' → logprob: -9.701513290405273
    10. 'middle' → logprob: -9.826513290405273

Token 291: ' #' (ID: 1069)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.4153701066970825
    2. 'row' → logprob: -1.1653701066970825
    3. 'start' → logprob: -4.040369987487793
    4. 'current' → logprob: -4.790369987487793
    5. ' center' → logprob: -7.290369987487793
    6. 'pos' → logprob: -7.665369987487793
    7. 'r' → logprob: -8.165369987487793
    8. ' row' → logprob: -8.290369987487793
    9. 'cur' → logprob: -9.040369987487793
    10. 'position' → logprob: -9.790369987487793

Token 292: ' According' (ID: 16344)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.6046426892280579
    2. 'start' → logprob: -1.354642629623413
    3. 'row' → logprob: -1.729642629623413
    4. 'current' → logprob: -4.729642868041992
    5. 'pos' → logprob: -5.729642868041992
    6. ' center' → logprob: -6.229642868041992
    7. ' start' → logprob: -6.854642868041992
    8. 'first' → logprob: -7.104642868041992
    9. ' row' → logprob: -7.854642868041992
    10. 'position' → logprob: -7.979642868041992

Token 293: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0237971730530262
    2. 'to' → logprob: -3.7737972736358643
    3. '_to' → logprob: -7.773797035217285
    4. '<|end|>' → logprob: -9.273797035217285
    5. ' ' → logprob: -11.148797035217285
    6. 'To' → logprob: -12.398797035217285
    7. '<|end|>' → logprob: -13.023797035217285
    8. '```' → logprob: -13.648797035217285
    9. '    ' → logprob: -13.648797035217285
    10. '  ' → logprob: -13.898797035217285

Token 294: ' problem' (ID: 4792)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25188061594963074
    2. ' self' → logprob: -2.376880645751953
    3. '"' → logprob: -3.501880645751953
    4. 'the' → logprob: -3.751880645751953
    5. ' the' → logprob: -4.001880645751953
    6. '#' → logprob: -4.376880645751953
    7. 'center' → logprob: -4.876880645751953
    8. ' ' → logprob: -4.876880645751953
    9. ' center' → logprob: -5.251880645751953
    10. ' problem' → logprob: -5.751880645751953

Token 295: ':' (ID: 25)
  Prédit: ' spec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' spec' → logprob: -0.6450353264808655
    2. 'row' → logprob: -1.7700352668762207
    3. 'spec' → logprob: -1.8950352668762207
    4. ' row' → logprob: -2.8950352668762207
    5. ' center' → logprob: -3.2700352668762207
    6. ' specification' → logprob: -4.020035266876221
    7. 'center' → logprob: -4.520035266876221
    8. '<|end|>' → logprob: -4.895035266876221
    9. '<|end|>' → logprob: -5.395035266876221
    10. '_spec' → logprob: -5.520035266876221

Token 296: ' ' (ID: 220)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.608759880065918
    2. 'start' → logprob: -0.983759880065918
    3. 'row' → logprob: -3.108759880065918
    4. ' center' → logprob: -4.233759880065918
    5. ' start' → logprob: -4.358759880065918
    6. 'first' → logprob: -5.733759880065918
    7. 'pos' → logprob: -6.108759880065918
    8. ' row' → logprob: -6.858759880065918
    9. 'starting' → logprob: -7.108759880065918
    10. 'current' → logprob: -7.733759880065918

Token 297: '1' (ID: 16)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.19196069240570068
    2. 'start' → logprob: -2.0669608116149902
    3. 'row' → logprob: -3.1919608116149902
    4. ' center' → logprob: -6.19196081161499
    5. 'current' → logprob: -7.19196081161499
    6. 'first' → logprob: -7.19196081161499
    7. 'place' → logprob: -7.31696081161499
    8. 'pos' → logprob: -7.44196081161499
    9. ' start' → logprob: -7.94196081161499
    10. 'self' → logprob: -8.066960334777832

Token 298: ' is' (ID: 382)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.23889438807964325
    2. 'row' → logprob: -1.7388943433761597
    3. ' is' → logprob: -3.863894462585449
    4. 'placed' → logprob: -5.863894462585449
    5. ' ' → logprob: -5.988894462585449
    6. ' placed' → logprob: -6.238894462585449
    7. ' row' → logprob: -6.488894462585449
    8. '_center' → logprob: -6.613894462585449
    9. '_' → logprob: -6.863894462585449
    10. ' at' → logprob: -6.988894462585449

Token 299: ' placed' (ID: 12989)
  Prédit: ' placed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' placed' → logprob: -0.18047967553138733
    2. 'placed' → logprob: -1.805479645729065
    3. '   ' → logprob: -8.180480003356934
    4. 'center' → logprob: -9.305480003356934
    5. 'self' → logprob: -9.430480003356934
    6. ' ' → logprob: -10.180480003356934
    7. '       ' → logprob: -10.305480003356934
    8. ' self' → logprob: -10.430480003356934
    9. ' at' → logprob: -10.805480003356934
    10. '  ' → logprob: -11.555480003356934

Token 300: ' "' (ID: 392)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.11358161270618439
    2. 'at' → logprob: -2.863581657409668
    3. ' in' → logprob: -3.863581657409668
    4. ',' → logprob: -3.863581657409668
    5. 'in' → logprob: -5.613581657409668
    6. ' one' → logprob: -6.113581657409668
    7. ' below' → logprob: -6.863581657409668
    8. ' just' → logprob: -7.363581657409668
    9. ' ,' → logprob: -8.613581657409668
    10. 'below' → logprob: -9.113581657409668

Token 301: 'just' (ID: 5283)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.7127580642700195
    2. ' in' → logprob: -1.9627580642700195
    3. ' one' → logprob: -2.3377580642700195
    4. 'at' → logprob: -2.5877580642700195
    5. ' just' → logprob: -2.7127580642700195
    6. 'in' → logprob: -2.8377580642700195
    7. 'one' → logprob: -3.2127580642700195
    8. 'just' → logprob: -4.7127580642700195
    9. ' below' → logprob: -4.9627580642700195
    10. 'below' → logprob: -5.2127580642700195

Token 302: ' below' (ID: 4895)
  Prédit: ' below'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' below' → logprob: -0.3149726986885071
    2. 'below' → logprob: -1.3149726390838623
    3. ' under' → logprob: -7.814972877502441
    4. ' after' → logprob: -8.689972877502441
    5. 'Below' → logprob: -8.814972877502441
    6. ' beneath' → logprob: -8.939972877502441
    7. 'under' → logprob: -9.064972877502441
    8. 'bene' → logprob: -9.189972877502441
    9. ' ' → logprob: -9.439972877502441
    10. 'b' → logprob: -9.564972877502441

Token 303: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5860106945037842
    2. 'the' → logprob: -1.3360106945037842
    3. ' center' → logprob: -2.211010694503784
    4. 'center' → logprob: -2.711010694503784
    5. 'middle' → logprob: -5.836010932922363
    6. ' middle' → logprob: -7.211010932922363
    7. 'self' → logprob: -7.586010932922363
    8. ' self' → logprob: -9.086010932922363
    9. '(center' → logprob: -9.836010932922363
    10. '_center' → logprob: -10.336010932922363

Token 304: ' center' (ID: 6170)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.3858344256877899
    2. 'middle' → logprob: -1.7608344554901123
    3. ' center' → logprob: -2.1358344554901123
    4. ' middle' → logprob: -3.6358344554901123
    5. 'central' → logprob: -6.260834217071533
    6. 'self' → logprob: -7.385834217071533
    7. ' central' → logprob: -7.635834217071533
    8. 'mid' → logprob: -8.885834693908691
    9. 'n' → logprob: -8.885834693908691
    10. '(center' → logprob: -9.385834693908691

Token 305: ' cell' (ID: 4206)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.35573241114616394
    2. '"' → logprob: -1.6057324409484863
    3. 'row' → logprob: -2.8557324409484863
    4. ' "' → logprob: -4.355732440948486
    5. '_row' → logprob: -4.480732440948486
    6. ' cell' → logprob: -4.730732440948486
    7. ' of' → logprob: -5.355732440948486
    8. '   ' → logprob: -6.730732440948486
    9. ' ' → logprob: -7.855732440948486
    10. 'line' → logprob: -8.605731964111328

Token 306: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5123029351234436
    2. ' "' → logprob: -1.0123028755187988
    3. ',' → logprob: -3.512302875518799
    4. ' in' → logprob: -6.762302875518799
    5. ',"' → logprob: -6.762302875518799
    6. '"
' → logprob: -6.887302875518799
    7. ' "
' → logprob: -7.262302875518799
    8. ' of' → logprob: -7.387302875518799
    9. '(row' → logprob: -7.387302875518799
    10. 'row' → logprob: -8.012303352355957

Token 307: '       ' (ID: 309)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.711568295955658
    2. ' center' → logprob: -0.711568295955658
    3. '       ' → logprob: -5.211568355560303
    4. 'row' → logprob: -5.336568355560303
    5. 'start' → logprob: -5.711568355560303
    6. ' start' → logprob: -6.336568355560303
    7. ' middle' → logprob: -7.086568355560303
    8. ' row' → logprob: -7.211568355560303
    9. 'middle' → logprob: -7.461568355560303
    10. '
' → logprob: -8.961567878723145

Token 308: ' current' (ID: 2208)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.14492158591747284
    2. ' center' → logprob: -2.6449215412139893
    3. 'start' → logprob: -3.0199215412139893
    4. ' start' → logprob: -4.644921779632568
    5. 'row' → logprob: -5.644921779632568
    6. ' row' → logprob: -7.769921779632568
    7. '       ' → logprob: -8.26992130279541
    8. 'first' → logprob: -8.26992130279541
    9. 'self' → logprob: -8.89492130279541
    10. '   ' → logprob: -9.51992130279541

Token 309: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -4.8828707804204896e-05
    2. 'row' → logprob: -10.750048637390137
    3. '_' → logprob: -10.875048637390137
    4. '_r' → logprob: -12.000048637390137
    5. '_pos' → logprob: -14.375048637390137
    6. ' =' → logprob: -15.500048637390137
    7. '=' → logprob: -15.625048637390137
    8. 'Row' → logprob: -15.625048637390137
    9. '_cell' → logprob: -16.000049591064453
    10. ' _' → logprob: -16.000049591064453

Token 310: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015491410158574581
    2. '=' → logprob: -6.501549243927002
    3. ' ' → logprob: -10.626548767089844
    4. ',' → logprob: -10.751548767089844
    5. ' =
' → logprob: -15.001548767089844
    6. '<|end|>' → logprob: -15.001548767089844
    7. ')' → logprob: -15.751548767089844
    8. ' ,' → logprob: -15.751548767089844
    9. 's' → logprob: -16.876548767089844
    10. ' ' → logprob: -17.376548767089844

Token 311: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.242989182472229
    2. '(self' → logprob: -2.2429890632629395
    3. ' self' → logprob: -2.4929890632629395
    4. ' (' → logprob: -3.6179890632629395
    5. '   ' → logprob: -10.242989540100098
    6. '((' → logprob: -11.617989540100098
    7. '       ' → logprob: -11.867989540100098
    8. ' ' → logprob: -12.117989540100098
    9. '[self' → logprob: -12.492989540100098
    10. '=self' → logprob: -12.742989540100098

Token 312: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -9.913265239447355e-05
    2. 'n' → logprob: -9.500099182128906
    3. '.' → logprob: -11.625099182128906
    4. 'self' → logprob: -12.125099182128906
    5. '
' → logprob: -12.250099182128906
    6. '   ' → logprob: -13.250099182128906
    7. '_n' → logprob: -14.250099182128906
    8. '(n' → logprob: -15.125099182128906
    9. ' ' → logprob: -15.250099182128906
    10. ' .' → logprob: -15.250099182128906

Token 313: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.01619788631796837
    2. ' //' → logprob: -4.141197681427002
    3. ' ' → logprob: -9.39119815826416
    4. '2' → logprob: -10.51619815826416
    5. '#' → logprob: -10.64119815826416
    6. '   ' → logprob: -11.76619815826416
    7. '1' → logprob: -12.01619815826416
    8. '```' → logprob: -13.51619815826416
    9. '
' → logprob: -13.64119815826416
    10. '`' → logprob: -13.64119815826416

Token 314: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012403888104017824
    2. ' ' → logprob: -9.000123977661133
    3. '1' → logprob: -14.625123977661133
    4. '   ' → logprob: -16.750123977661133
    5. '       ' → logprob: -17.625123977661133
    6. '  ' → logprob: -17.625123977661133
    7. '3' → logprob: -17.750123977661133
    8. '23' → logprob: -18.000123977661133
    9. '0' → logprob: -18.062623977661133
    10. '```' → logprob: -18.062623977661133

Token 315: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.0391463193809614e-05
    2. ' ' → logprob: -9.875060081481934
    3. '1' → logprob: -11.750060081481934
    4. '
' → logprob: -15.625060081481934
    5. '   ' → logprob: -15.625060081481934
    6. '  ' → logprob: -15.875060081481934
    7. '21' → logprob: -16.37506103515625
    8. '23' → logprob: -16.50006103515625
    9. '0' → logprob: -16.75006103515625
    10. '22' → logprob: -17.12506103515625

Token 316: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2520352602005005
    2. '+' → logprob: -1.5020352602005005
    3. 'current' → logprob: -9.752035140991211
    4. '+
' → logprob: -11.127035140991211
    5. ' +
' → logprob: -11.127035140991211
    6. '
' → logprob: -11.627035140991211
    7. ' current' → logprob: -12.127035140991211
    8. '1' → logprob: -13.002035140991211
    9. ' ' → logprob: -13.752035140991211
    10. ' plus' → logprob: -15.502035140991211

Token 317: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.875040054321289
    4. '0' → logprob: -16.75004005432129
    5. '
' → logprob: -18.12504005432129
    6. '```' → logprob: -18.50004005432129
    7. '  ' → logprob: -19.62504005432129
    8. '۱' → logprob: -20.31254005432129
    9. '１' → logprob: -20.37504005432129
    10. '+' → logprob: -20.50004005432129

Token 318: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '0' → logprob: -15.750000953674316
    4. '   ' → logprob: -18.125001907348633
    5. '```' → logprob: -19.000001907348633
    6. '
' → logprob: -20.000001907348633
    7. '-' → logprob: -21.250001907348633
    8. '  ' → logprob: -21.375001907348633
    9. '۱' → logprob: -21.750001907348633
    10. '１' → logprob: -22.062501907348633

Token 319: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16287486255168915
    2. '<|end|>' → logprob: -1.9128748178482056
    3. 'current' → logprob: -6.412874698638916
    4. '<|end|>' → logprob: -8.412875175476074
    5. '       ' → logprob: -8.787875175476074
    6. ' 
' → logprob: -8.912875175476074
    7. ',current' → logprob: -9.037875175476074
    8. ' current' → logprob: -9.162875175476074
    9. ',' → logprob: -9.662875175476074
    10. '
' → logprob: -9.662875175476074

Token 320: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 321: ' if' (ID: 538)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.16067524254322052
    2. ' current' → logprob: -1.910675287246704
    3. '
' → logprob: -8.410675048828125
    4. ' if' → logprob: -10.035675048828125
    5. ' ' → logprob: -10.410675048828125
    6. ',' → logprob: -10.410675048828125
    7. ' 
' → logprob: -10.535675048828125
    8. ',current' → logprob: -10.660675048828125
    9. 'if' (adapté à ' if') → logprob: -10.785675048828125
    10. '_current' → logprob: -11.285675048828125

Token 322: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.007611005567014217
    2. 'current' → logprob: -4.88261079788208
    3. '	current' → logprob: -12.757611274719238
    4. '(current' → logprob: -14.132611274719238
    5. ' ' → logprob: -15.132611274719238
    6. '   ' → logprob: -15.382611274719238
    7. 'urrent' → logprob: -15.757611274719238
    8. '_current' → logprob: -15.882611274719238
    9. 'Current' → logprob: -15.882611274719238
    10. '$current' → logprob: -16.632610321044922

Token 323: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.4855663721391466e-05
    2. 'row' → logprob: -11.500015258789062
    3. '_' → logprob: -13.625015258789062
    4. '.row' → logprob: -13.750015258789062
    5. '._' → logprob: -14.375015258789062
    6. '_rows' → logprob: -14.375015258789062
    7. 'rown' → logprob: -15.500015258789062
    8. '_ROW' → logprob: -15.500015258789062
    9. '_col' → logprob: -15.750015258789062
    10. '_r' → logprob: -16.250015258789062

Token 324: ' ==' (ID: 951)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.019737837836146355
    2. '>=' → logprob: -4.394737720489502
    3. ' >' → logprob: -5.519737720489502
    4. ' ==' → logprob: -5.894737720489502
    5. '>' → logprob: -8.51973819732666
    6. '==' → logprob: -8.89473819732666
    7. '<|end|>' → logprob: -9.26973819732666
    8. ' <' → logprob: -12.76973819732666
    9. ' ' → logprob: -13.14473819732666
    10. ')>=' → logprob: -13.64473819732666

Token 325: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25207993388175964
    2. ' self' → logprob: -1.502079963684082
    3. '<|end|>' → logprob: -9.127079963684082
    4. ' ' → logprob: -10.627079963684082
    5. '   ' → logprob: -11.877079963684082
    6. '	self' → logprob: -12.752079963684082
    7. '0' → logprob: -13.627079963684082
    8. '
' → logprob: -13.752079963684082
    9. '       ' → logprob: -13.877079963684082
    10. 'n' → logprob: -14.002079963684082

Token 326: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0030834749341011047
    2. 'n' → logprob: -5.8780837059021
    3. 'self' → logprob: -8.753083229064941
    4. '.' → logprob: -9.378083229064941
    5. ' n' → logprob: -10.753083229064941
    6. ' self' → logprob: -12.003083229064941
    7. ' .' → logprob: -12.503083229064941
    8. '.size' → logprob: -13.753083229064941
    9. '_n' → logprob: -13.753083229064941
    10. '.self' → logprob: -13.753083229064941

Token 327: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14278708398342133
    2. ':
' → logprob: -2.017786979675293
    3. '       ' → logprob: -10.267786979675293
    4. '<|end|>' → logprob: -10.767786979675293
    5. ':return' → logprob: -11.017786979675293
    6. '):
' → logprob: -11.517786979675293
    7. '):' → logprob: -12.017786979675293
    8. ' :
' → logprob: -12.267786979675293
    9. '           ' → logprob: -12.517786979675293
    10. ' :' → logprob: -12.642786979675293

Token 328: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4193820655345917
    2. 'current' → logprob: -1.294382095336914
    3. ' current' → logprob: -2.919382095336914
    4. '       ' → logprob: -5.669382095336914
    5. '0' → logprob: -6.294382095336914
    6. '(current' → logprob: -6.294382095336914
    7. ':' → logprob: -6.544382095336914
    8. ':
' → logprob: -6.794382095336914
    9. '               ' → logprob: -7.169382095336914
    10. '[current' → logprob: -7.294382095336914

Token 329: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.023403992876410484
    2. ' current' → logprob: -3.7734038829803467
    3. '           ' → logprob: -9.273404121398926
    4. '	current' → logprob: -10.648404121398926
    5. '0' → logprob: -11.023404121398926
    6. '       ' → logprob: -11.773404121398926
    7. '   ' → logprob: -12.398404121398926
    8. '               ' → logprob: -12.523404121398926
    9. '[current' → logprob: -12.898404121398926
    10. ' ' → logprob: -13.273404121398926

Token 330: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.1279553291387856e-05
    2. 'row' → logprob: -11.500011444091797
    3. 'Row' → logprob: -14.625011444091797
    4. '_rows' → logprob: -15.250011444091797
    5. '_' → logprob: -16.125011444091797
    6. '_Row' → logprob: -16.500011444091797
    7. '   ' → logprob: -17.375011444091797
    8. '_line' → logprob: -17.500011444091797
    9. '_ROW' → logprob: -17.750011444091797
    10. '_col' → logprob: -17.750011444091797

Token 331: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687190413475037
    2. '=' → logprob: -1.1368719339370728
    3. ' -=' → logprob: -14.636872291564941
    4. '0' → logprob: -16.636871337890625
    5. '-=' → logprob: -16.636871337890625
    6. '<|end|>' → logprob: -16.636871337890625
    7. ' ' → logprob: -16.761871337890625
    8. ' =
' → logprob: -16.761871337890625
    9. '%=' → logprob: -17.886871337890625
    10. '.=' → logprob: -18.136871337890625

Token 332: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013691288768313825
    2. ' ' → logprob: -9.250137329101562
    3. 'self' → logprob: -10.125137329101562
    4. ' self' → logprob: -15.250137329101562
    5. '1' → logprob: -15.750137329101562
    6. 'current' → logprob: -15.875137329101562
    7. '   ' → logprob: -16.375137329101562
    8. '(self' → logprob: -18.000137329101562
    9. '
' → logprob: -18.500137329101562
    10. '۰' → logprob: -18.562637329101562

Token 333: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.953082341467962e-05
    2. ' ' → logprob: -10.250039100646973
    3. 'self' → logprob: -12.500039100646973
    4. '1' → logprob: -15.750039100646973
    5. '   ' → logprob: -16.37504005432129
    6. 'current' → logprob: -16.87504005432129
    7. ' self' → logprob: -17.56254005432129
    8. '  ' → logprob: -18.43754005432129
    9. '00' → logprob: -18.81254005432129
    10. '
' → logprob: -19.00004005432129

Token 334: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5717961192131042
    2. '       ' → logprob: -1.196796178817749
    3. '<|end|>' → logprob: -2.446796178817749
    4. 'current' → logprob: -3.196796178817749
    5. ' current' → logprob: -6.07179594039917
    6. '        
' → logprob: -6.82179594039917
    7. '<|end|>' → logprob: -7.57179594039917
    8. '#' → logprob: -7.94679594039917
    9. '
' → logprob: -8.196796417236328
    10. '  
' → logprob: -8.446796417236328

Token 335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5715269446372986
    2. 'current' → logprob: -1.4465270042419434
    3. ' current' → logprob: -1.6965270042419434
    4. '<|end|>' → logprob: -4.446527004241943
    5. '
' → logprob: -6.071527004241943
    6. '        
' → logprob: -7.571527004241943
    7. '#' → logprob: -7.946527004241943
    8. '[current' → logprob: -8.196526527404785
    9. ' 
' → logprob: -8.321526527404785
    10. '	current' → logprob: -8.696526527404785

Token 336: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.09327587485313416
    2. 'self' → logprob: -2.593275785446167
    3. '       ' → logprob: -4.593276023864746
    4. ' current' → logprob: -5.593276023864746
    5. ' self' → logprob: -7.968276023864746
    6. '
' → logprob: -10.718276023864746
    7. 'row' → logprob: -10.718276023864746
    8. '        
' → logprob: -11.343276023864746
    9. 'number' → logprob: -11.718276023864746
    10. 'for' → logprob: -12.093276023864746

Token 337: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0013086906401440501
    2. '_row' → logprob: -7.001308917999268
    3. 'col' → logprob: -8.87630844116211
    4. '_val' → logprob: -9.12630844116211
    5. '_value' → logprob: -9.50130844116211
    6. '_column' → logprob: -9.87630844116211
    7. '_' → logprob: -11.50130844116211
    8. '=' → logprob: -12.75130844116211
    9. '_number' → logprob: -12.75130844116211
    10. '_num' → logprob: -13.12630844116211

Token 338: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03364754095673561
    2. '=' → logprob: -3.4086475372314453
    3. ' ' → logprob: -14.033647537231445
    4. '=center' → logprob: -14.783647537231445
    5. ',' → logprob: -15.408647537231445
    6. '<|end|>' → logprob: -15.783647537231445
    7. '=current' → logprob: -16.283647537231445
    8. ')' → logprob: -17.408647537231445
    9. '=cut' → logprob: -18.533647537231445
    10. '```' → logprob: -18.908647537231445

Token 339: ' center' (ID: 6170)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.0031790214125066996
    2. ' center' → logprob: -5.75317907333374
    3. 'self' → logprob: -14.503178596496582
    4. 'cent' → logprob: -14.878178596496582
    5. '(center' → logprob: -16.0031795501709
    6. '	center' → logprob: -16.1281795501709
    7. '   ' → logprob: -16.3781795501709
    8. 'centre' → logprob: -17.0031795501709
    9. '<center' → logprob: -17.6281795501709
    10. 'central' → logprob: -17.8781795501709

Token 340: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -5.288163083605468e-05
    2. '_' → logprob: -9.875052452087402
    3. 'col' → logprob: -14.000052452087402
    4. ' _' → logprob: -16.62505340576172
    5. '_val' → logprob: -16.62505340576172
    6. '_row' → logprob: -16.75005340576172
    7. '__' → logprob: -17.25005340576172
    8. '_COL' → logprob: -17.62505340576172
    9. '_cols' → logprob: -17.62505340576172
    10. '_c' → logprob: -17.75005340576172

Token 341: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07027117908000946
    2. '<|end|>' → logprob: -3.4452712535858154
    3. '
' → logprob: -3.8202712535858154
    4. '        
' → logprob: -5.195271015167236
    5. 'current' → logprob: -6.320271015167236
    6. '#' → logprob: -6.445271015167236
    7. ')' → logprob: -6.820271015167236
    8. ',' → logprob: -7.070271015167236
    9. '<|end|>' → logprob: -7.445271015167236
    10. '```' → logprob: -7.820271015167236

Token 343: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01920262537896633
    2. 'for' → logprob: -4.519202709197998
    3. '       ' → logprob: -5.894202709197998
    4. 'current' → logprob: -5.894202709197998
    5. 'num' → logprob: -6.394202709197998
    6. 'value' → logprob: -8.01920223236084
    7. 'number' → logprob: -8.14420223236084
    8. ' self' → logprob: -8.89420223236084
    9. '1' → logprob: -9.64420223236084
    10. '        
' → logprob: -10.26920223236084

Token 344: '.square' (ID: 77530)
  Prédit: '.square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.square' → logprob: -8.006006828509271e-05
    2. '.' → logprob: -9.875080108642578
    3. '.s' → logprob: -11.125080108642578
    4. 'square' → logprob: -11.875080108642578
    5. ' .' → logprob: -12.125080108642578
    6. '.sqrt' → logprob: -14.750080108642578
    7. '.circle' → logprob: -15.125080108642578
    8. '.space' → logprob: -16.250080108642578
    9. '```' → logprob: -17.000080108642578
    10. ').' → logprob: -17.125080108642578

Token 345: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -8.65707261255011e-06
    2. '[' → logprob: -12.000008583068848
    3. '[cur' → logprob: -13.750008583068848
    4. '[row' → logprob: -14.750008583068848
    5. '[new' → logprob: -15.125008583068848
    6. '[curr' → logprob: -15.375008583068848
    7. 'current' → logprob: -15.875008583068848
    8. ' [' → logprob: -16.125009536743164
    9. '[
' → logprob: -16.250009536743164
    10. '[next' → logprob: -16.750009536743164

Token 346: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -8.220573363360018e-05
    2. 'row' → logprob: -9.750082015991211
    3. '_col' → logprob: -11.250082015991211
    4. '_' → logprob: -12.250082015991211
    5. '[row' → logprob: -12.750082015991211
    6. 'Row' → logprob: -13.750082015991211
    7. '_Row' → logprob: -15.000082015991211
    8. '_ROW' → logprob: -15.375082015991211
    9. '][' → logprob: -15.500082015991211
    10. '_]' → logprob: -15.500082015991211

Token 347: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.013469839468598366
    2. '[current' → logprob: -4.388469696044922
    3. ']' → logprob: -7.138469696044922
    4. ' ][' → logprob: -8.888469696044922
    5. '[' → logprob: -10.763469696044922
    6. '[cur' → logprob: -13.388469696044922
    7. '[curr' → logprob: -13.888469696044922
    8. 'current' → logprob: -14.013469696044922
    9. '```' → logprob: -14.388469696044922
    10. ']][' → logprob: -15.263469696044922

Token 348: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.0206720617134124e-05
    2. ' current' → logprob: -11.50001049041748
    3. '   ' → logprob: -19.875009536743164
    4. '
' → logprob: -20.375009536743164
    5. '(current' → logprob: -20.375009536743164
    6. '	current' → logprob: -20.625009536743164
    7. '0' → logprob: -21.000009536743164
    8. 'center' → logprob: -21.500009536743164
    9. '[current' → logprob: -21.875009536743164
    10. '$current' → logprob: -22.000009536743164

Token 349: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -8.244413766078651e-05
    2. 'col' → logprob: -9.875082015991211
    3. '_' → logprob: -11.125082015991211
    4. '_row' → logprob: -11.125082015991211
    5. '_]' → logprob: -14.375082015991211
    6. '[col' → logprob: -15.250082015991211
    7. 'Col' → logprob: -16.00008201599121
    8. ']' → logprob: -16.25008201599121
    9. '_COL' → logprob: -16.37508201599121
    10. ' col' → logprob: -16.62508201599121

Token 350: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009957717265933752
    2. '=' → logprob: -7.500995635986328
    3. ' ]' → logprob: -8.250995635986328
    4. ']=' → logprob: -9.000995635986328
    5. ' =' → logprob: -9.750995635986328
    6. ')' → logprob: -15.750995635986328
    7. '']' → logprob: -19.125995635986328
    8. '`]' → logprob: -19.125995635986328
    9. ' ' → logprob: -19.250995635986328
    10. '[' → logprob: -19.500995635986328

Token 351: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269282102584839
    2. ' =' → logprob: -2.1269283294677734
    3. ']' → logprob: -16.751928329467773
    4. '=
' → logprob: -17.001928329467773
    5. ']=' → logprob: -17.251928329467773
    6. ' =
' → logprob: -17.751928329467773
    7. '=

' → logprob: -18.751928329467773
    8. '＝' → logprob: -19.001928329467773
    9. ' ' → logprob: -19.251928329467773
    10. ')=' → logprob: -19.876928329467773

Token 352: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -17.500003814697266
    4. '```' → logprob: -18.750003814697266
    5. '`' → logprob: -20.000003814697266
    6. '  ' → logprob: -20.625003814697266
    7. '۱' → logprob: -20.687503814697266
    8. '0' → logprob: -21.187503814697266
    9. '' → logprob: -21.437503814697266
    10. '2' → logprob: -21.562503814697266

Token 353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -19.25
    4. '' → logprob: -20.5
    5. '```' → logprob: -20.625
    6. '`' → logprob: -21.0
    7. '[' → logprob: -21.0625
    8. '2' → logprob: -21.125
    9. '0' → logprob: -21.1875
    10. '
' → logprob: -21.5625

Token 354: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 355: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9315982460975647
    2. '       ' → logprob: -0.9315982460975647
    3. 'next' → logprob: -2.05659818649292
    4. 'current' → logprob: -3.55659818649292
    5. ' next' → logprob: -4.18159818649292
    6. '<|end|>' → logprob: -4.68159818649292
    7. ' for' → logprob: -4.93159818649292
    8. 'n' → logprob: -5.05659818649292
    9. ',' → logprob: -5.80659818649292
    10. 'token' → logprob: -6.05659818649292

Token 356: ' for' (ID: 395)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.2475103735923767
    2. 'for' (adapté à ' for') → logprob: -1.9975104331970215
    3. 'current' → logprob: -2.7475104331970215
    4. 'number' → logprob: -4.1225104331970215
    5. 'count' → logprob: -6.8725104331970215
    6. 'last' → logprob: -7.6225104331970215
    7. 'value' → logprob: -7.7475104331970215
    8. 'next' → logprob: -7.9975104331970215
    9. 'prev' → logprob: -8.372509956359863
    10. 'curr' → logprob: -8.622509956359863

Token 357: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.7042014598846436
    2. 'num' → logprob: -0.7042014598846436
    3. ' i' → logprob: -5.329201698303223
    4. 'i' → logprob: -5.829201698303223
    5. ' number' → logprob: -6.204201698303223
    6. 'number' → logprob: -7.579201698303223
    7. ' value' → logprob: -8.329201698303223
    8. 'value' → logprob: -8.704201698303223
    9. ' val' → logprob: -9.454201698303223
    10. 'val' → logprob: -9.704201698303223

Token 358: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002896167105063796
    2. 'in' → logprob: -5.877896308898926
    3. ' ' → logprob: -9.377896308898926
    4. ' i' → logprob: -13.127896308898926
    5. ',' → logprob: -13.502896308898926
    6. '  ' → logprob: -14.127896308898926
    7. ' ,' → logprob: -14.627896308898926
    8. '1' → logprob: -14.627896308898926
    9. ' ' → logprob: -14.627896308898926
    10. 's' → logprob: -14.877896308898926

Token 359: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0015041481237858534
    2. 'range' → logprob: -6.501503944396973
    3. ' ' → logprob: -14.126503944396973
    4. '	range' → logprob: -14.126503944396973
    5. '(range' → logprob: -15.376503944396973
    6. '  ' → logprob: -17.62650489807129
    7. ' rang' → logprob: -17.87650489807129
    8. ' ran' → logprob: -18.62650489807129
    9. ' ' → logprob: -18.75150489807129
    10. '2' → logprob: -18.75150489807129

Token 360: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0789070799946785
    2. '2' → logprob: -2.578907012939453
    3. ' ' → logprob: -11.328907012939453
    4. ' (' → logprob: -12.953907012939453
    5. '   ' → logprob: -13.328907012939453
    6. '(
' → logprob: -14.078907012939453
    7. ',' → logprob: -15.203907012939453
    8. '       ' → logprob: -15.828907012939453
    9. '
' → logprob: -16.578907012939453
    10. '           ' → logprob: -17.078907012939453

Token 361: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.668304245569743e-05
    2. ' ' → logprob: -10.000046730041504
    3. '   ' → logprob: -14.125046730041504
    4. '1' → logprob: -16.062545776367188
    5. '  ' → logprob: -16.750045776367188
    6. '
' → logprob: -16.750045776367188
    7. '```' → logprob: -16.875045776367188
    8. '3' → logprob: -17.625045776367188
    9. '    ' → logprob: -17.687545776367188
    10. '(' → logprob: -17.750045776367188

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6895233531831764e-05
    2. ' ,' → logprob: -10.75002670288086
    3. ',self' → logprob: -12.37502670288086
    4. ',
' → logprob: -14.12502670288086
    5. '1' → logprob: -16.12502670288086
    6. '<|end|>' → logprob: -16.37502670288086
    7. '       ' → logprob: -16.62502670288086
    8. '        ' → logprob: -16.87502670288086
    9. 'self' → logprob: -17.00002670288086
    10. '   ' → logprob: -17.12502670288086

Token 363: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011855880729854107
    2. ' self' → logprob: -6.751185417175293
    3. '(self' → logprob: -12.001185417175293
    4. '       ' → logprob: -12.376185417175293
    5. '   ' → logprob: -12.876185417175293
    6. '	self' → logprob: -14.376185417175293
    7. '           ' → logprob: -14.751185417175293
    8. '    ' → logprob: -14.751185417175293
    9. '
' → logprob: -15.251185417175293
    10. '     ' → logprob: -15.376185417175293

Token 364: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0012180940248072147
    2. 'n' → logprob: -6.751218318939209
    3. 'square' → logprob: -10.62621784210205
    4. '*n' → logprob: -11.37621784210205
    5. '.square' → logprob: -12.25121784210205
    6. '.' → logprob: -13.37621784210205
    7. '**' → logprob: -13.75121784210205
    8. '	n' → logprob: -14.00121784210205
    9. '_n' → logprob: -14.00121784210205
    10. '1' → logprob: -14.75121784210205

Token 365: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0352955162525177
    2. '*self' → logprob: -3.5352954864501953
    3. '*n' → logprob: -5.535295486450195
    4. '**' → logprob: -6.535295486450195
    5. ' **' → logprob: -9.535295486450195
    6. '*num' → logprob: -10.410295486450195
    7. '*this' → logprob: -11.410295486450195
    8. '*N' → logprob: -11.785295486450195
    9. '2' → logprob: -12.410295486450195
    10. ' ' → logprob: -12.535295486450195

Token 366: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.015603402629494667
    2. '2' → logprob: -4.390603542327881
    3. ' self' → logprob: -6.390603542327881
    4. '*self' → logprob: -6.640603542327881
    5. '**' → logprob: -10.140603065490723
    6. ' ' → logprob: -10.265603065490723
    7. '   ' → logprob: -11.890603065490723
    8. '	self' → logprob: -12.015603065490723
    9. '
' → logprob: -12.140603065490723
    10. '(self' → logprob: -12.640603065490723

Token 367: '.n' (ID: 1835)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00030412263004109263
    2. 'self' → logprob: -8.750304222106934
    3. 'n' → logprob: -9.750304222106934
    4. ' ' → logprob: -9.875304222106934
    5. '   ' → logprob: -10.500304222106934
    6. ')' → logprob: -13.500304222106934
    7. '       ' → logprob: -13.625304222106934
    8. '+' → logprob: -13.750304222106934
    9. '*' → logprob: -14.500304222106934
    10. '  ' → logprob: -14.750304222106934

Token 368: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1269298940896988
    2. '+' → logprob: -2.126929998397827
    3. '   ' → logprob: -14.376930236816406
    4. ' ' → logprob: -14.626930236816406
    5. ' +
' → logprob: -15.626930236816406
    6. '):
' → logprob: -15.751930236816406
    7. ' ' → logprob: -15.876930236816406
    8. '):' → logprob: -16.376930236816406
    9. '
' → logprob: -16.751930236816406
    10. '+
' → logprob: -17.001930236816406

Token 369: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.750040054321289
    4. '
' → logprob: -16.75004005432129
    5. '+' → logprob: -18.62504005432129
    6. '```' → logprob: -18.68754005432129
    7. '  ' → logprob: -19.18754005432129
    8. '2' → logprob: -19.31254005432129
    9. ')' → logprob: -19.62504005432129
    10. ' +' → logprob: -19.75004005432129

Token 370: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.375015258789062
    4. '
' → logprob: -16.375015258789062
    5. '2' → logprob: -17.750015258789062
    6. ')' → logprob: -18.250015258789062
    7. '```' → logprob: -18.437515258789062
    8. '  ' → logprob: -18.937515258789062
    9. '

' → logprob: -19.062515258789062
    10. '    ' → logprob: -19.312515258789062

Token 371: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25199469923973083
    2. '):
' → logprob: -1.5019947290420532
    3. ':' → logprob: -10.876995086669922
    4. ' ):' → logprob: -10.876995086669922
    5. '):
' → logprob: -11.126995086669922
    6. ' ):
' → logprob: -12.001995086669922
    7. '       ' → logprob: -12.751995086669922
    8. ',' → logprob: -13.251995086669922
    9. ')' → logprob: -14.001995086669922
    10. '):

' → logprob: -14.501995086669922

Token 372: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18697915971279144
    2. '
' → logprob: -2.811979055404663
    3. 'current' → logprob: -3.311979055404663
    4. 'row' → logprob: -3.686979055404663
    5. '       ' → logprob: -4.311979293823242
    6. ' current' → logprob: -5.186979293823242
    7. '```' → logprob: -5.186979293823242
    8. ',' → logprob: -5.436979293823242
    9. 'new' → logprob: -5.436979293823242
    10. '            
' → logprob: -5.936979293823242

Token 373: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.700374960899353
    2. 'next' → logprob: -0.700374960899353
    3. 'prev' → logprob: -6.075375080108643
    4. 'row' → logprob: -6.450375080108643
    5. '           ' → logprob: -6.825375080108643
    6. ' new' → logprob: -6.825375080108643
    7. ' next' → logprob: -7.325375080108643
    8. 'nr' → logprob: -8.575374603271484
    9. 'r' → logprob: -8.825374603271484
    10. 'n' → logprob: -9.700374603271484

Token 374: ' Proposed' (ID: 175476)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6758139133453369
    2. 'new' → logprob: -0.8008139133453369
    3. 'prev' → logprob: -4.175813674926758
    4. ' new' → logprob: -4.550813674926758
    5. ' next' → logprob: -5.050813674926758
    6. 'row' → logprob: -5.050813674926758
    7. 'r' → logprob: -6.425813674926758
    8. '           ' → logprob: -6.800813674926758
    9. 'n' → logprob: -8.300813674926758
    10. ' prev' → logprob: -9.050813674926758

Token 375: ' next' (ID: 2613)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.4926291704177856
    2. ' next' → logprob: -1.4926291704177856
    3. 'next' → logprob: -1.4926291704177856
    4. ' new' → logprob: -1.6176291704177856
    5. 'row' → logprob: -2.242629051208496
    6. '           ' → logprob: -4.742629051208496
    7. ' row' → logprob: -4.867629051208496
    8. 'prev' → logprob: -6.492629051208496
    9. ',' → logprob: -6.742629051208496
    10. 'left' → logprob: -8.117629051208496

Token 376: ' cell' (ID: 4206)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.14808912575244904
    2. 'row' → logprob: -2.0230891704559326
    3. '           ' → logprob: -5.3980889320373535
    4. ' row' → logprob: -7.5230889320373535
    5. 'position' → logprob: -8.898089408874512
    6. 'current' → logprob: -10.648089408874512
    7. '	row' → logprob: -10.898089408874512
    8. ',' → logprob: -11.148089408874512
    9. '_position' → logprob: -11.273089408874512
    10. 'new' → logprob: -11.273089408874512

Token 377: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6145331859588623
    2. ' =' → logprob: -0.9895331859588623
    3. '           ' → logprob: -3.3645331859588623
    4. '=' → logprob: -4.114533424377441
    5. 'new' → logprob: -4.489533424377441
    6. ' new' → logprob: -5.364533424377441
    7. ',row' → logprob: -5.864533424377441
    8. 'row' → logprob: -6.114533424377441
    9. 'current' → logprob: -6.114533424377441
    10. '<|end|>' → logprob: -6.239533424377441

Token 378: ' right' (ID: 1849)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -1.0334742069244385
    2. 'new' → logprob: -1.1584742069244385
    3. '           ' → logprob: -2.2834742069244385
    4. 'next' → logprob: -2.5334742069244385
    5. 'row' → logprob: -2.6584742069244385
    6. ' next' → logprob: -3.0334742069244385
    7. ' row' → logprob: -4.283473968505859
    8. 'current' → logprob: -4.908473968505859
    9. ' current' → logprob: -5.283473968505859
    10. 'r' → logprob: -6.033473968505859

Token 379: ' down' (ID: 1917)
  Prédit: '_down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_down' → logprob: -0.2640261948108673
    2. ',' → logprob: -1.764026165008545
    3. '_row' → logprob: -3.139026165008545
    4. 'down' → logprob: -4.639026165008545
    5. '_next' → logprob: -5.264026165008545
    6. '_,' → logprob: -7.264026165008545
    7. '_new' → logprob: -7.389026165008545
    8. '           ' → logprob: -8.014026641845703
    9. 'row' → logprob: -8.889026641845703
    10. ' down' → logprob: -9.264026641845703

Token 380: ' diagonal' (ID: 71638)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7237274050712585
    2. ',' → logprob: -0.8487274050712585
    3. 'new' → logprob: -3.4737274646759033
    4. ' =' → logprob: -3.9737274646759033
    5. 'next' → logprob: -4.598727226257324
    6. 'row' → logprob: -5.348727226257324
    7. ' next' → logprob: -5.348727226257324
    8. 'current' → logprob: -5.348727226257324
    9. ' new' → logprob: -5.723727226257324
    10. ' ,' → logprob: -6.473727226257324

Token 381: ' by' (ID: 656)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009511810727417469
    2. ',' → logprob: -4.884511947631836
    3. '<|end|>' → logprob: -7.384511947631836
    4. 'next' → logprob: -8.134511947631836
    5. 'new' → logprob: -8.384511947631836
    6. '<|end|>' → logprob: -8.634511947631836
    7. ' next' → logprob: -9.384511947631836
    8. '            
' → logprob: -9.384511947631836
    9. ',next' → logprob: -9.384511947631836
    10. 'current' → logprob: -9.759511947631836

Token 382: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09887468069791794
    2. 'one' → logprob: -2.598874568939209
    3. ' one' → logprob: -4.098874568939209
    4. ' ' → logprob: -6.223874568939209
    5. 'self' → logprob: -8.098875045776367
    6. '2' → logprob: -8.223875045776367
    7. '           ' → logprob: -8.723875045776367
    8. 'row' → logprob: -9.473875045776367
    9. '   ' → logprob: -9.598875045776367
    10. '_one' → logprob: -10.098875045776367

Token 383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007511857431381941
    2. 'one' → logprob: -5.007512092590332
    3. ' ' → logprob: -8.257512092590332
    4. ' one' → logprob: -8.257512092590332
    5. 'self' → logprob: -9.507512092590332
    6. 'calling' → logprob: -9.757512092590332
    7. 'row' → logprob: -10.257512092590332
    8. 'def' → logprob: -10.632512092590332
    9. ' calling' → logprob: -10.882512092590332
    10. '2' → logprob: -11.257512092590332

Token 384: ' cell' (ID: 4206)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014392548240721226
    2. ',' → logprob: -5.139392375946045
    3. 'new' → logprob: -5.389392375946045
    4. 'next' → logprob: -6.139392375946045
    5. '
' → logprob: -7.764392375946045
    6. ' next' → logprob: -7.889392375946045
    7. 'current' → logprob: -8.514392852783203
    8. ' new' → logprob: -8.514392852783203
    9. '            
' → logprob: -9.014392852783203
    10. ',next' → logprob: -9.139392852783203

Token 385: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01063957717269659
    2. ',' → logprob: -5.260639667510986
    3. 'new' → logprob: -6.510639667510986
    4. '
' → logprob: -6.635639667510986
    5. 'next' → logprob: -7.260639667510986
    6. '<|end|>' → logprob: -7.885639667510986
    7. 'current' → logprob: -8.010639190673828
    8. '            
' → logprob: -8.260639190673828
    9. ',next' → logprob: -8.760639190673828
    10. ' next' → logprob: -9.010639190673828

Token 386: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001307142956648022
    2. '       ' → logprob: -10.375130653381348
    3. 'next' → logprob: -10.625130653381348
    4. 'new' → logprob: -11.000130653381348
    5. ' next' → logprob: -11.000130653381348
    6. ',' → logprob: -11.125130653381348
    7. '<|end|>' → logprob: -12.000130653381348
    8. ' new' → logprob: -12.125130653381348
    9. 'current' → logprob: -12.625130653381348
    10. '            
' → logprob: -13.500130653381348

Token 387: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.5614932179450989
    2. '           ' → logprob: -1.186493158340454
    3. 'new' → logprob: -2.186493158340454
    4. ' next' → logprob: -4.936493396759033
    5. 'row' → logprob: -6.186493396759033
    6. 'current' → logprob: -6.811493396759033
    7. ' new' → logprob: -6.936493396759033
    8. 'r' → logprob: -8.061492919921875
    9. 'n' → logprob: -9.061492919921875
    10. '       ' → logprob: -9.686492919921875

Token 388: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.2948405128554441e-05
    2. 'row' → logprob: -12.00001335144043
    3. '_' → logprob: -12.12501335144043
    4. '_new' → logprob: -15.25001335144043
    5. 'Row' → logprob: -15.50001335144043
    6. ' _' → logprob: -16.00001335144043
    7. '_ROW' → logprob: -16.00001335144043
    8. '_Row' → logprob: -16.50001335144043
    9. '_r' → logprob: -16.62501335144043
    10. '_,' → logprob: -16.75001335144043

Token 389: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.1689596148207784e-05
    2. ',next' → logprob: -10.000051498413086
    3. ' ,' → logprob: -12.500051498413086
    4. '=' → logprob: -13.500051498413086
    5. 'next' → logprob: -15.000051498413086
    6. ',
' → logprob: -15.500051498413086
    7. '[next' → logprob: -15.750051498413086
    8. ' =' → logprob: -15.875051498413086
    9. '<|end|>' → logprob: -16.250051498413086
    10. ' next' → logprob: -17.125051498413086

Token 390: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.12692978978157043
    2. ' next' → logprob: -2.126929759979248
    3. '	next' → logprob: -14.001930236816406
    4. '(next' → logprob: -14.876930236816406
    5. '_next' → logprob: -15.501930236816406
    6. '[next' → logprob: -16.251930236816406
    7. ' ' → logprob: -16.876930236816406
    8. '.next' → logprob: -16.876930236816406
    9. '<|end|>' → logprob: -17.126930236816406
    10. '   ' → logprob: -17.626930236816406

Token 391: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.00042686203960329294
    2. 'col' → logprob: -7.875426769256592
    3. '_' → logprob: -10.00042724609375
    4. '	col' → logprob: -15.75042724609375
    5. '_token' → logprob: -15.87542724609375
    6. '_column' → logprob: -15.87542724609375
    7. 'Col' → logprob: -16.00042724609375
    8. '```' → logprob: -16.00042724609375
    9. '_COL' → logprob: -16.12542724609375
    10. ' col' → logprob: -16.25042724609375

Token 392: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023783385753632
    2. '=' → logprob: -1.9102377891540527
    3. ',' → logprob: -12.035238265991211
    4. '<|end|>' → logprob: -12.160238265991211
    5. ' ' → logprob: -14.410238265991211
    6. ')' → logprob: -14.785238265991211
    7. '=self' → logprob: -15.160238265991211
    8. '           ' → logprob: -15.410238265991211
    9. '<|end|>' → logprob: -15.535238265991211
    10. ' =
' → logprob: -15.660238265991211

Token 393: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1130077913403511
    2. ' self' → logprob: -2.2380077838897705
    3. '           ' → logprob: -9.113007545471191
    4. '(self' → logprob: -9.863007545471191
    5. ' ' → logprob: -11.363007545471191
    6. '=self' → logprob: -12.988007545471191
    7. '	self' → logprob: -13.238007545471191
    8. '       ' → logprob: -13.488007545471191
    9. '<|end|>' → logprob: -13.613007545471191
    10. '   ' → logprob: -13.988007545471191

Token 394: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -3.7385154428193346e-05
    2. 'right' → logprob: -10.87503719329834
    3. '.left' → logprob: -11.00003719329834
    4. '.' → logprob: -14.12503719329834
    5. ' .' → logprob: -14.12503719329834
    6. '	right' → logprob: -16.375038146972656
    7. '.r' → logprob: -17.000038146972656
    8. ' right' → logprob: -17.625038146972656
    9. '[right' → logprob: -17.625038146972656
    10. ',right' → logprob: -18.375038146972656

Token 395: '_down' (ID: 40267)
  Prédit: '_down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_down' → logprob: -0.014166327193379402
    2. 'down' → logprob: -4.264166355133057
    3. 'dow' → logprob: -13.764165878295898
    4. ' down' → logprob: -14.389165878295898
    5. 'Down' → logprob: -14.764165878295898
    6. '.down' → logprob: -15.014165878295898
    7. 'row' → logprob: -15.764165878295898
    8. '_DOWN' → logprob: -15.764165878295898
    9. '-down' → logprob: -16.8891658782959
    10. 'DOWN' → logprob: -17.3891658782959

Token 396: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -1.9266199160483666e-05
    2. 'current' → logprob: -11.000019073486328
    3. '(' → logprob: -13.125019073486328
    4. '(
' → logprob: -15.000019073486328
    5. ' (' → logprob: -15.750019073486328
    6. ' current' → logprob: -17.500019073486328
    7. '   ' → logprob: -19.000019073486328
    8. '(curr' → logprob: -19.125019073486328
    9. '(cur' → logprob: -19.375019073486328
    10. '$current' → logprob: -20.250019073486328

Token 397: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0002141458389814943
    2. 'row' → logprob: -8.500214576721191
    3. '_col' → logprob: -12.250214576721191
    4. '_' → logprob: -13.375214576721191
    5. 'Row' → logprob: -13.500214576721191
    6. '(row' → logprob: -14.750214576721191
    7. '_ROW' → logprob: -15.125214576721191
    8. '_Row' → logprob: -15.125214576721191
    9. ' row' → logprob: -15.250214576721191
    10. '_token' → logprob: -15.500214576721191

Token 398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006466718041338027
    2. ',current' → logprob: -7.375646591186523
    3. ',next' → logprob: -11.375646591186523
    4. ' ,' → logprob: -11.750646591186523
    5. ',
' → logprob: -14.875646591186523
    6. ')' → logprob: -15.875646591186523
    7. 'current' → logprob: -16.250646591186523
    8. '<|end|>' → logprob: -16.750646591186523
    9. '‌,' → logprob: -17.875646591186523
    10. ' ' → logprob: -18.000646591186523

Token 399: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0009117019944824278
    2. ' current' → logprob: -7.000911712646484
    3. '(current' → logprob: -16.750911712646484
    4. 'next' → logprob: -17.000911712646484
    5. '	current' → logprob: -18.000911712646484
    6. '$current' → logprob: -18.000911712646484
    7. '[current' → logprob: -18.375911712646484
    8. '   ' → logprob: -18.375911712646484
    9. ' ' → logprob: -18.625911712646484
    10. '_current' → logprob: -19.125911712646484

Token 400: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.002556638326495886
    2. 'col' → logprob: -6.002556800842285
    3. '_' → logprob: -9.877556800842285
    4. ')' → logprob: -11.627556800842285
    5. '_row' → logprob: -11.752556800842285
    6. 'Col' → logprob: -13.002556800842285
    7. ',' → logprob: -13.502556800842285
    8. '_)' → logprob: -14.002556800842285
    9. ')_' → logprob: -14.002556800842285
    10. '   ' → logprob: -14.127556800842285

Token 401: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004634392389561981
    2. ')
' → logprob: -7.750463485717773
    3. '           ' → logprob: -10.875463485717773
    4. '       ' → logprob: -11.750463485717773
    5. '<|end|>' → logprob: -13.000463485717773
    6. ')#' → logprob: -14.125463485717773
    7. ')

' → logprob: -14.375463485717773
    8. '),' → logprob: -14.625463485717773
    9. ')`' → logprob: -15.000463485717773
    10. ')
' → logprob: -15.250463485717773

Token 402: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 403: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029800020158290863
    2. 'if' → logprob: -3.5297999382019043
    3. ' if' → logprob: -10.029800415039062
    4. '       ' → logprob: -12.904800415039062
    5. 'while' → logprob: -13.779800415039062
    6. '#' (adapté à ' #') → logprob: -15.029800415039062
    7. '   ' → logprob: -15.279800415039062
    8. '               ' → logprob: -15.279800415039062
    9. 'If' → logprob: -15.404800415039062
    10. '          ' → logprob: -15.404800415039062

Token 404: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08236677199602127
    2. 'while' → logprob: -2.582366704940796
    3. '           ' → logprob: -5.957366943359375
    4. ' if' → logprob: -7.207366943359375
    5. ' while' → logprob: -8.957366943359375
    6. '#' → logprob: -11.832366943359375
    7. 'If' → logprob: -12.457366943359375
    8. 'While' → logprob: -12.957366943359375
    9. 'token' → logprob: -16.082366943359375
    10. '       ' → logprob: -16.207366943359375

Token 405: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3700215816497803
    2. 'if' → logprob: -1.2450215816497803
    3. '           ' → logprob: -3.8700215816497803
    4. 'self' → logprob: -8.62002182006836
    5. ' self' → logprob: -8.87002182006836
    6. '            
' → logprob: -9.24502182006836
    7. '
' → logprob: -10.49502182006836
    8. '               ' → logprob: -11.62002182006836
    9. '            ' → logprob: -11.99502182006836
    10. '       ' → logprob: -12.24502182006836

Token 406: ' occupied' (ID: 46186)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0032743257470428944
    2. ' self' → logprob: -5.753274440765381
    3. 'next' → logprob: -9.503273963928223
    4. 'not' → logprob: -11.878273963928223
    5. '(self' → logprob: -12.378273963928223
    6. '           ' → logprob: -12.878273963928223
    7. ' next' → logprob: -13.128273963928223
    8. '   ' → logprob: -13.253273963928223
    9. '
' → logprob: -13.753273963928223
    10. ' ' → logprob: -13.878273963928223

Token 407: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0352556705474854
    2. ' or' → logprob: -1.1602556705474854
    3. ' and' → logprob: -1.4102556705474854
    4. ' if' → logprob: -2.5352556705474854
    5. '<|end|>' → logprob: -5.910255432128906
    6. 'and' → logprob: -6.785255432128906
    7. '       ' → logprob: -6.910255432128906
    8. '               ' → logprob: -7.285255432128906
    9. ',' → logprob: -7.785255432128906
    10. ' ' → logprob: -8.035255432128906

Token 408: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.45490509271621704
    2. ' if' → logprob: -1.0799050331115723
    3. '           ' → logprob: -4.079905033111572
    4. 'while' → logprob: -5.454905033111572
    5. ' while' → logprob: -6.829905033111572
    6. ' or' → logprob: -6.829905033111572
    7. 'and' → logprob: -6.954905033111572
    8. ' and' → logprob: -6.954905033111572
    9. '<|end|>' → logprob: -8.07990550994873
    10. '            
' → logprob: -9.20490550994873

Token 409: ' yes' (ID: 14531)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3138108551502228
    2. 'self' → logprob: -1.3138108253479004
    3. ' not' → logprob: -8.813811302185059
    4. ' next' → logprob: -9.063811302185059
    5. 'next' → logprob: -9.438811302185059
    6. 'occupied' → logprob: -9.688811302185059
    7. '(self' → logprob: -9.813811302185059
    8. ' ' → logprob: -10.313811302185059
    9. 'not' → logprob: -11.188811302185059
    10. '	self' → logprob: -11.313811302185059

Token 410: ' place' (ID: 2475)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12070678919553757
    2. ',' → logprob: -2.870706796646118
    3. ':
' → logprob: -3.120706796646118
    4. '           ' → logprob: -4.495706558227539
    5. '               ' → logprob: -7.245706558227539
    6. ' or' → logprob: -8.245706558227539
    7. ' then' → logprob: -8.745706558227539
    8. ' and' → logprob: -8.870706558227539
    9. '            ' → logprob: -9.745706558227539
    10. '):
' → logprob: -9.870706558227539

Token 411: ' left' (ID: 3561)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2920651137828827
    2. ' current' → logprob: -2.792065143585205
    3. 'below' → logprob: -3.167065143585205
    4. 'num' → logprob: -3.542065143585205
    5. 'next' → logprob: -3.667065143585205
    6. 'left' → logprob: -3.667065143585205
    7. 'above' → logprob: -3.792065143585205
    8. '(current' → logprob: -4.542065143585205
    9. 'down' → logprob: -4.917065143585205
    10. 'self' → logprob: -5.667065143585205

Token 412: ' down' (ID: 1917)
  Prédit: '_down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_down' → logprob: -0.00017946491425391287
    2. 'down' → logprob: -8.750179290771484
    3. '_up' → logprob: -11.125179290771484
    4. '_DOWN' → logprob: -13.625179290771484
    5. ' down' → logprob: -13.750179290771484
    6. '```' → logprob: -14.500179290771484
    7. 'Down' → logprob: -14.500179290771484
    8. '
' → logprob: -14.500179290771484
    9. '_' → logprob: -15.000179290771484
    10. ',' → logprob: -15.000179290771484

Token 413: ' from' (ID: 591)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.670640230178833
    2. ',' → logprob: -2.045640230178833
    3. '           ' → logprob: -2.170640230178833
    4. ' (' → logprob: -2.545640230178833
    5. ' ' → logprob: -3.670640230178833
    6. '(' → logprob: -3.920640230178833
    7. '<|end|>' → logprob: -4.045639991760254
    8. '(row' → logprob: -4.545639991760254
    9. ':' → logprob: -4.670639991760254
    10. 'if' → logprob: -4.670639991760254

Token 414: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.034115295857191086
    2. ' current' → logprob: -3.4091153144836426
    3. '(current' → logprob: -8.284114837646484
    4. 'next' → logprob: -8.659114837646484
    5. 'previous' → logprob: -10.909114837646484
    6. 'row' → logprob: -12.034114837646484
    7. 'the' → logprob: -12.409114837646484
    8. ' next' → logprob: -12.534114837646484
    9. '_current' → logprob: -12.534114837646484
    10. '=current' → logprob: -13.534114837646484

Token 415: ' pos' (ID: 1253)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.1241308450698853
    2. 'row' → logprob: -1.9991308450698853
    3. 'cell' → logprob: -2.6241307258605957
    4. ' (' → logprob: -2.8741307258605957
    5. 'current' → logprob: -2.8741307258605957
    6. ',' → logprob: -2.9991307258605957
    7. 'position' → logprob: -2.9991307258605957
    8. '_cell' → logprob: -3.1241307258605957
    9. '           ' → logprob: -3.4991307258605957
    10. 'else' → logprob: -3.7491307258605957

Token 416: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013843420892953873
    2. ',' → logprob: -4.888843536376953
    3. ' if' → logprob: -6.138843536376953
    4. '               ' → logprob: -6.388843536376953
    5. '            ' → logprob: -7.638843536376953
    6. '            
' → logprob: -7.638843536376953
    7. '          ' → logprob: -8.138843536376953
    8. '<|end|>' → logprob: -8.763843536376953
    9. '       ' → logprob: -8.888843536376953
    10. ':' → logprob: -9.013843536376953

Token 417: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011756151914596558
    2. ' if' → logprob: -5.26175594329834
    3. '<|end|>' → logprob: -5.63675594329834
    4. ',' → logprob: -6.88675594329834
    5. '            
' → logprob: -8.13675594329834
    6. '          ' → logprob: -8.26175594329834
    7. '<|end|>' → logprob: -8.51175594329834
    8. 'if' → logprob: -8.76175594329834
    9. '       ' → logprob: -8.76175594329834
    10. '   ' → logprob: -8.88675594329834

Token 418: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6202950477600098
    2. 'if' (adapté à ' if') → logprob: -1.1202950477600098
    3. '           ' → logprob: -1.9952950477600098
    4. '            ' → logprob: -11.870294570922852
    5. 'If' → logprob: -11.995294570922852
    6. '          ' → logprob: -11.995294570922852
    7. '            
' → logprob: -11.995294570922852
    8. ' ' → logprob: -12.370294570922852
    9. '       ' → logprob: -12.370294570922852
    10. 'while' → logprob: -12.620294570922852

Token 419: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18042652308940887
    2. ' self' → logprob: -1.8054264783859253
    3. '   ' → logprob: -8.055426597595215
    4. '(self' → logprob: -8.555426597595215
    5. '           ' → logprob: -9.680426597595215
    6. ' ' → logprob: -10.430426597595215
    7. '    ' → logprob: -11.180426597595215
    8. '  ' → logprob: -11.305426597595215
    9. '[self' → logprob: -11.430426597595215
    10. '	self' → logprob: -11.555426597595215

Token 420: '.square' (ID: 77530)
  Prédit: '.square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.square' → logprob: -0.000260382192209363
    2. '.' → logprob: -8.375260353088379
    3. ' .' → logprob: -10.875260353088379
    4. 'square' → logprob: -12.250260353088379
    5. '.n' → logprob: -12.625260353088379
    6. '.s' → logprob: -13.875260353088379
    7. '.space' → logprob: -14.250260353088379
    8. '   ' → logprob: -15.250260353088379
    9. '.sqrt' → logprob: -16.375261306762695
    10. '.left' → logprob: -16.500261306762695

Token 421: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.00028278882382437587
    2. '[current' → logprob: -8.250283241271973
    3. 'next' → logprob: -11.625283241271973
    4. '[' → logprob: -12.000283241271973
    5. ' [' → logprob: -13.500283241271973
    6. '(next' → logprob: -13.875283241271973
    7. '   ' → logprob: -14.000283241271973
    8. '[new' → logprob: -14.125283241271973
    9. '[
' → logprob: -14.625283241271973
    10. '[now' → logprob: -14.625283241271973

Token 422: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.03276838734745979
    2. '[next' → logprob: -3.532768487930298
    3. 'row' → logprob: -6.407768249511719
    4. 'next' → logprob: -7.407768249511719
    5. '[row' → logprob: -8.157768249511719
    6. '[' → logprob: -8.532768249511719
    7. 'Row' → logprob: -10.157768249511719
    8. '   ' → logprob: -10.282768249511719
    9. '_next' → logprob: -10.282768249511719
    10. '][' → logprob: -10.282768249511719

Token 423: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.049203336238861084
    2. '[next' → logprob: -3.049203395843506
    3. '[current' → logprob: -8.549202919006348
    4. '[' → logprob: -9.299202919006348
    5. ']' → logprob: -9.299202919006348
    6. ' ][' → logprob: -9.299202919006348
    7. '   ' → logprob: -10.299202919006348
    8. '[row' → logprob: -10.424202919006348
    9. '[new' → logprob: -11.299202919006348
    10. ']][' → logprob: -11.549202919006348

Token 424: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.00035214703530073166
    2. ' next' → logprob: -8.000351905822754
    3. '[next' → logprob: -11.500351905822754
    4. '(next' → logprob: -12.125351905822754
    5. '	next' → logprob: -14.000351905822754
    6. '
' → logprob: -16.00035285949707
    7. '   ' → logprob: -17.12535285949707
    8. '_next' → logprob: -17.25035285949707
    9. ',next' → logprob: -17.62535285949707
    10. 'Next' → logprob: -18.25035285949707

Token 425: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.03850650414824486
    2. '_row' → logprob: -3.288506507873535
    3. 'col' → logprob: -8.788506507873535
    4. '_' → logprob: -9.163506507873535
    5. '][' → logprob: -10.163506507873535
    6. 'row' → logprob: -10.413506507873535
    7. ']' → logprob: -10.913506507873535
    8. '   ' → logprob: -11.038506507873535
    9. '[' → logprob: -11.413506507873535
    10. '_next' → logprob: -11.913506507873535

Token 426: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.035933300852775574
    2. ' ]' → logprob: -3.535933256149292
    3. ']!=' → logprob: -5.160933494567871
    4. ' !=' → logprob: -8.410933494567871
    5. ']==' → logprob: -8.785933494567871
    6. '!=' → logprob: -11.285933494567871
    7. '   ' → logprob: -12.035933494567871
    8. '[' → logprob: -12.285933494567871
    9. ']>' → logprob: -12.535933494567871
    10. '           ' → logprob: -12.910933494567871

Token 427: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.31391963362693787
    2. ' !=' → logprob: -1.3139196634292603
    3. ']!=' → logprob: -7.813919544219971
    4. ']' → logprob: -9.438920021057129
    5. '==' → logprob: -9.688920021057129
    6. ')!=' → logprob: -9.813920021057129
    7. ':' → logprob: -10.938920021057129
    8. ')' → logprob: -11.938920021057129
    9. ' ==' → logprob: -12.188920021057129
    10. '   ' → logprob: -12.313920021057129

Token 428: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011048170737922192
    2. ' ' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.261048316955566
    4. '  ' → logprob: -16.88604736328125
    5. ' ' → logprob: -17.76104736328125
    6. '<|end|>' → logprob: -17.76104736328125
    7. '۰' → logprob: -18.01104736328125
    8. '    ' → logprob: -19.01104736328125
    9. '	' → logprob: -19.76104736328125
    10. 's' → logprob: -20.26104736328125

Token 429: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '۰' → logprob: -17.375009536743164
    4. '   ' → logprob: -18.250009536743164
    5. '০' → logprob: -19.812509536743164
    6. ')' → logprob: -19.875009536743164
    7. '<|end|>' → logprob: -20.000009536743164
    8. '  ' → logprob: -20.125009536743164
    9. '०' → logprob: -20.250009536743164
    10. '    ' → logprob: -20.500009536743164

Token 430: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06996166706085205
    2. ':
' → logprob: -2.6949615478515625
    3. ',' → logprob: -11.444961547851562
    4. '           ' → logprob: -12.319961547851562
    5. ':
' → logprob: -12.819961547851562
    6. ':

' → logprob: -12.944961547851562
    7. '):
' → logprob: -13.444961547851562
    8. '       ' → logprob: -14.319961547851562
    9. '               ' → logprob: -14.319961547851562
    10. ' :' → logprob: -14.569961547851562

Token 431: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022523092105984688
    2. 'next' → logprob: -4.772522926330566
    3. ' next' → logprob: -5.272522926330566
    4. 'current' → logprob: -5.897522926330566
    5. ' current' → logprob: -5.897522926330566
    6. '           ' → logprob: -6.897522926330566
    7. '
' → logprob: -7.397522926330566
    8. 'new' → logprob: -7.397522926330566
    9. ' new' → logprob: -7.897522926330566
    10. ',' → logprob: -9.022522926330566

Token 432: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.8069947957992554
    2. 'current' → logprob: -1.4319947957992554
    3. ' current' → logprob: -1.6819947957992554
    4. ' next' → logprob: -2.181994915008545
    5. 'left' → logprob: -4.931994915008545
    6. 'new' → logprob: -5.431994915008545
    7. ' new' → logprob: -6.306994915008545
    8. ' left' → logprob: -6.431994915008545
    9. 'row' → logprob: -8.056994438171387
    10. '           ' → logprob: -8.306994438171387

Token 433: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.00415758416056633
    2. '_' → logprob: -5.504157543182373
    3. ' _' → logprob: -10.379158020019531
    4. '_line' → logprob: -11.129158020019531
    5. 'row' → logprob: -12.004158020019531
    6. '
' → logprob: -12.879158020019531
    7. '_col' → logprob: -12.879158020019531
    8. '_rows' → logprob: -12.879158020019531
    9. '_Row' → logprob: -12.879158020019531
    10. '_
' → logprob: -13.129158020019531

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4498052223643754e-05
    2. ' ,' → logprob: -12.125014305114746
    3. ',next' → logprob: -12.125014305114746
    4. ',
' → logprob: -13.625014305114746
    5. ',col' → logprob: -13.750014305114746
    6. '=' → logprob: -15.750014305114746
    7. '‌,' → logprob: -15.875014305114746
    8. '),' → logprob: -16.000015258789062
    9. ',column' → logprob: -16.000015258789062
    10. '<|end|>' → logprob: -16.125015258789062

Token 435: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.00409015454351902
    2. ' next' → logprob: -5.504090309143066
    3. '	next' → logprob: -12.629090309143066
    4. ',next' → logprob: -12.629090309143066
    5. '(next' → logprob: -13.129090309143066
    6. 'new' → logprob: -13.254090309143066
    7. '_next' → logprob: -15.004090309143066
    8. '[next' → logprob: -15.254090309143066
    9. 'current' → logprob: -15.629090309143066
    10. ' ' → logprob: -15.754090309143066

Token 436: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.000331055314745754
    2. '_row' → logprob: -8.250330924987793
    3. 'col' → logprob: -9.625330924987793
    4. '_' → logprob: -12.750330924987793
    5. 'row' → logprob: -14.875330924987793
    6. 'Col' → logprob: -15.750330924987793
    7. '_COL' → logprob: -16.75033187866211
    8. '	col' → logprob: -16.75033187866211
    9. '_column' → logprob: -17.00033187866211
    10. '```' → logprob: -17.37533187866211

Token 437: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022492945194244
    2. '=' → logprob: -1.9102249145507812
    3. ',' → logprob: -15.285224914550781
    4. '=self' → logprob: -15.410224914550781
    5. ' =)' → logprob: -15.410224914550781
    6. ' ' → logprob: -16.41022491455078
    7. ')' → logprob: -16.91022491455078
    8. '=
' → logprob: -17.41022491455078
    9. ' =
' → logprob: -17.66022491455078
    10. '＝' → logprob: -17.78522491455078

Token 438: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014174560084939003
    2. ' self' → logprob: -4.264174461364746
    3. '(self' → logprob: -11.764174461364746
    4. '               ' → logprob: -13.139174461364746
    5. '=self' → logprob: -14.764174461364746
    6. '           ' → logprob: -14.889174461364746
    7. '                   ' → logprob: -15.014174461364746
    8. '	self' → logprob: -15.389174461364746
    9. '*self' → logprob: -16.639175415039062
    10. '[self' → logprob: -16.889175415039062

Token 439: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -2.816093228830141e-06
    2. 'left' → logprob: -13.25000286102295
    3. '.' → logprob: -14.50000286102295
    4. '.right' → logprob: -14.50000286102295
    5. '[left' → logprob: -19.875001907348633
    6. ' left' → logprob: -20.375001907348633
    7. '	left' → logprob: -20.625001907348633
    8. ' .' → logprob: -20.625001907348633
    9. '.Left' → logprob: -21.000001907348633
    10. '.down' → logprob: -21.750001907348633

Token 440: '_down' (ID: 40267)
  Prédit: '_down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_down' → logprob: -1.306760805164231e-05
    2. 'down' → logprob: -11.25001335144043
    3. '_DOWN' → logprob: -18.12501335144043
    4. '_up' → logprob: -18.37501335144043
    5. 'dow' → logprob: -19.37501335144043
    6. 'Down' → logprob: -19.50001335144043
    7. '_' → logprob: -19.62501335144043
    8. ' down' → logprob: -19.75001335144043
    9. '_d' → logprob: -20.62501335144043
    10. '_row' → logprob: -21.12501335144043

Token 441: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -3.2855416066013277e-05
    2. 'current' → logprob: -10.375032424926758
    3. '(' → logprob: -13.750032424926758
    4. '(next' → logprob: -15.500032424926758
    5. '(row' → logprob: -15.500032424926758
    6. ' (' → logprob: -16.000032424926758
    7. ' current' → logprob: -16.500032424926758
    8. '(previous' → logprob: -17.500032424926758
    9. ',current' → logprob: -17.750032424926758
    10. '[current' → logprob: -18.000032424926758

Token 442: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0042943344451487064
    2. 'row' → logprob: -5.629294395446777
    3. 'user' → logprob: -8.004294395446777
    4. 'Row' → logprob: -8.754294395446777
    5. '(row' → logprob: -9.754294395446777
    6. ')' → logprob: -10.129294395446777
    7. '_user' → logprob: -10.254294395446777
    8. '_col' → logprob: -12.004294395446777
    9. '_Row' → logprob: -12.254294395446777
    10. '_code' → logprob: -12.379294395446777

Token 443: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012412875890731812
    2. ',next' → logprob: -4.512413024902344
    3. ',current' → logprob: -6.637413024902344
    4. ' ,' → logprob: -10.262413024902344
    5. ',col' → logprob: -11.887413024902344
    6. '(next' → logprob: -13.012413024902344
    7. '[next' → logprob: -13.137413024902344
    8. '   ' → logprob: -13.512413024902344
    9. '           ' → logprob: -14.387413024902344
    10. 'next' → logprob: -14.387413024902344

Token 444: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.007831850089132786
    2. ' current' → logprob: -5.382832050323486
    3. 'col' → logprob: -5.757832050323486
    4. ' ' → logprob: -10.632831573486328
    5. '   ' → logprob: -11.757831573486328
    6. ' col' → logprob: -11.882831573486328
    7. 'column' → logprob: -13.382831573486328
    8. 'curr' → logprob: -13.507831573486328
    9. 'next' → logprob: -13.632831573486328
    10. 'cur' → logprob: -13.632831573486328

Token 445: '_col' (ID: 7255)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.011059491895139217
    2. '_col' → logprob: -4.511059284210205
    3. ' col' → logprob: -11.511059761047363
    4. '	col' → logprob: -14.261059761047363
    5. 'Col' → logprob: -14.761059761047363
    6. 'column' → logprob: -16.011058807373047
    7. ',col' → logprob: -16.136058807373047
    8. 'colm' → logprob: -16.761058807373047
    9. 'row' → logprob: -16.761058807373047
    10. 'colon' → logprob: -17.011058807373047

Token 446: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03883049637079239
    2. ')
' → logprob: -3.288830518722534
    3. '           ' → logprob: -7.788830280303955
    4. '       ' → logprob: -8.163830757141113
    5. '               ' → logprob: -10.288830757141113
    6. ')
' → logprob: -10.288830757141113
    7. ')

' → logprob: -11.038830757141113
    8. '<|end|>' → logprob: -13.288830757141113
    9. '   ' → logprob: -14.038830757141113
    10. ' )' → logprob: -14.663830757141113

Token 447: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009435292333364487
    2. '
' → logprob: -5.134435176849365
    3. 'current' → logprob: -6.009435176849365
    4. '            
' → logprob: -7.634435176849365
    5. '               ' → logprob: -9.134435653686523
    6. ' current' → logprob: -9.384435653686523
    7. '       ' → logprob: -9.509435653686523
    8. 'self' → logprob: -9.884435653686523
    9. '```' → logprob: -9.884435653686523
    10. '  
' → logprob: -10.009435653686523

Token 448: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2913832664489746
    2. 'current' → logprob: -1.7913832664489746
    3. '           ' → logprob: -3.0413832664489746
    4. '       ' → logprob: -3.2913832664489746
    5. ' self' → logprob: -7.541383266448975
    6. ' current' → logprob: -7.791383266448975
    7. '   ' → logprob: -9.041383743286133
    8. '               ' → logprob: -13.166383743286133
    9. '            
' → logprob: -13.291383743286133
    10. ' ' → logprob: -13.791383743286133

Token 449: '.square' (ID: 77530)
  Prédit: '.square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.square' → logprob: -0.0034852009266614914
    2. 'square' → logprob: -5.753485202789307
    3. '.' → logprob: -8.253484725952148
    4. ' .' → logprob: -10.503484725952148
    5. 's' → logprob: -12.253484725952148
    6. '.s' → logprob: -12.378484725952148
    7. '_square' → logprob: -12.878484725952148
    8. '.sqrt' → logprob: -14.003484725952148
    9. '.space' → logprob: -14.378484725952148
    10. '   ' → logprob: -14.503484725952148

Token 450: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.875000953674316
    3. ' [' → logprob: -15.750000953674316
    4. '[current' → logprob: -16.625
    5. '[now' → logprob: -18.875
    6. '[new' → logprob: -19.0
    7. 'next' → logprob: -20.25
    8. '[row' → logprob: -20.5
    9. '(next' → logprob: -22.0
    10. '   ' → logprob: -22.0

Token 451: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0024408125318586826
    2. 'row' → logprob: -6.127440929412842
    3. 'Row' → logprob: -8.752440452575684
    4. '[row' → logprob: -9.752440452575684
    5. '       ' → logprob: -11.752440452575684
    6. '   ' → logprob: -11.877440452575684
    7. '           ' → logprob: -12.502440452575684
    8. '_ROW' → logprob: -12.502440452575684
    9. '_Row' → logprob: -12.752440452575684
    10. '][' → logprob: -12.877440452575684

Token 452: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005244429688900709
    2. '[next' → logprob: -5.255244255065918
    3. ' ][' → logprob: -12.005244255065918
    4. '[' → logprob: -13.255244255065918
    5. ']' → logprob: -14.255244255065918
    6. '"][' → logprob: -14.380244255065918
    7. ']][' → logprob: -15.255244255065918
    8. ')[' → logprob: -15.380244255065918
    9. ''][' → logprob: -15.630244255065918
    10. '[current' → logprob: -16.005245208740234

Token 453: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.00026407750556245446
    2. ' next' → logprob: -8.250264167785645
    3. '(next' → logprob: -13.625264167785645
    4. '[next' → logprob: -14.000264167785645
    5. '	next' → logprob: -14.250264167785645
    6. '_next' → logprob: -16.250263214111328
    7. '.next' → logprob: -17.750263214111328
    8. 'new' → logprob: -17.750263214111328
    9. ',next' → logprob: -18.000263214111328
    10. '   ' → logprob: -18.250263214111328

Token 454: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.002901877975091338
    2. '_row' → logprob: -6.252902030944824
    3. 'col' → logprob: -7.002902030944824
    4. 'row' → logprob: -9.752902030944824
    5. 'Col' → logprob: -13.002902030944824
    6. '][' → logprob: -13.752902030944824
    7. '   ' → logprob: -14.877902030944824
    8. '_pos' → logprob: -15.252902030944824
    9. '[col' → logprob: -15.377902030944824
    10. '[' → logprob: -15.502902030944824

Token 455: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39809495210647583
    2. ' =' → logprob: -1.398094892501831
    3. ']' → logprob: -2.523094892501831
    4. ']=' → logprob: -6.89809513092041
    5. ' ]' → logprob: -9.77309513092041
    6. ')' → logprob: -10.02309513092041
    7. '<|end|>' → logprob: -12.64809513092041
    8. ' ' → logprob: -12.89809513092041
    9. ')=' → logprob: -13.27309513092041
    10. '[' → logprob: -13.27309513092041

Token 456: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693597376346588
    2. ' =' → logprob: -2.1269359588623047
    3. '=num' → logprob: -11.876935958862305
    4. '[num' → logprob: -14.126935958862305
    5. '[' → logprob: -16.626935958862305
    6. ' ' → logprob: -17.126935958862305
    7. ',' → logprob: -17.376935958862305
    8. ']=' → logprob: -17.501935958862305
    9. '＝' → logprob: -17.751935958862305
    10. '=
' → logprob: -17.751935958862305

Token 457: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -9.615255839889869e-05
    2. ' num' → logprob: -9.250096321105957
    3. '[num' → logprob: -20.50009536743164
    4. '	num' → logprob: -20.75009536743164
    5. '           ' → logprob: -21.37509536743164
    6. '   ' → logprob: -21.62509536743164
    7. '(num' → logprob: -22.25009536743164
    8. '$num' → logprob: -22.62509536743164
    9. '       ' → logprob: -23.00009536743164
    10. ' ' → logprob: -23.37509536743164

Token 458: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0405435785651207
    2. 'current' → logprob: -3.540543556213379
    3. '
' → logprob: -4.665543556213379
    4. ' current' → logprob: -7.540543556213379
    5. '       ' → logprob: -7.790543556213379
    6. ',current' → logprob: -9.540543556213379
    7. '[current' → logprob: -9.665543556213379
    8. '   ' → logprob: -10.040543556213379
    9. '(current' → logprob: -10.165543556213379
    10. ' ' → logprob: -10.165543556213379

Token 459: '           ' (ID: 352)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.805232584476471
    2. '       ' → logprob: -1.3052325248718262
    3. '
' → logprob: -2.055232524871826
    4. ' current' → logprob: -2.430232524871826
    5. '[current' → logprob: -4.555232524871826
    6. '           ' → logprob: -4.555232524871826
    7. '<|end|>' → logprob: -4.555232524871826
    8. '	current' → logprob: -4.930232524871826
    9. '$current' → logprob: -5.180232524871826
    10. ',current' → logprob: -5.180232524871826

Token 460: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.006717386189848185
    2. ' current' → logprob: -5.006717205047607
    3. '           ' → logprob: -14.256717681884766
    4. '	current' → logprob: -14.881717681884766
    5. 'Current' → logprob: -15.006717681884766
    6. '
' → logprob: -15.131717681884766
    7. ' ' → logprob: -15.631717681884766
    8. '   ' → logprob: -16.131717681884766
    9. '_current' → logprob: -16.256717681884766
    10. '       ' → logprob: -16.381717681884766

Token 461: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -8.061054359131958e-06
    2. '_' → logprob: -11.875007629394531
    3. 'row' → logprob: -14.250007629394531
    4. '_line' → logprob: -15.500007629394531
    5. '_Row' → logprob: -16.37500762939453
    6. 'Row' → logprob: -17.00000762939453
    7. '_ROW' → logprob: -17.12500762939453
    8. '_rows' → logprob: -17.75000762939453
    9. ' _' → logprob: -18.25000762939453
    10. '_
' → logprob: -18.37500762939453

Token 462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16234001517295837
    2. '=' → logprob: -1.9123400449752808
    3. ' =' → logprob: -6.16234016418457
    4. ',next' → logprob: -12.28734016418457
    5. ' ,' → logprob: -14.28734016418457
    6. '<|end|>' → logprob: -14.66234016418457
    7. '[next' → logprob: -16.41234016418457
    8. ',n' → logprob: -16.41234016418457
    9. '```' → logprob: -16.78734016418457
    10. ',num' → logprob: -17.03734016418457

Token 463: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.6931812167167664
    2. 'current' → logprob: -0.6931812167167664
    3. ' next' → logprob: -10.818181037902832
    4. 'next' → logprob: -11.193181037902832
    5. '	current' → logprob: -16.69318199157715
    6. '(current' → logprob: -17.31818199157715
    7. '_current' → logprob: -17.69318199157715
    8. ' ' → logprob: -17.94318199157715
    9. '=current' → logprob: -18.69318199157715
    10. '.current' → logprob: -18.81818199157715

Token 464: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0024762547109276056
    2. 'col' → logprob: -6.002476215362549
    3. 'Col' → logprob: -15.002476692199707
    4. '_COL' → logprob: -16.50247573852539
    5. '	col' → logprob: -17.00247573852539
    6. '[col' → logprob: -17.25247573852539
    7. '_' → logprob: -17.37747573852539
    8. ',col' → logprob: -18.12747573852539
    9. ' col' → logprob: -18.37747573852539
    10. '_row' → logprob: -19.12747573852539

Token 465: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931474208831787
    2. ' =' → logprob: -0.6931474208831787
    3. ',' → logprob: -16.068147659301758
    4. ' next' → logprob: -16.818147659301758
    5. '=
' → logprob: -17.318147659301758
    6. 'next' → logprob: -17.943147659301758
    7. ',next' → logprob: -18.318147659301758
    8. '＝' → logprob: -18.443147659301758
    9. ' =
' → logprob: -18.568147659301758
    10. ' ' → logprob: -19.193147659301758

Token 466: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.03804183006286621
    2. ' next' → logprob: -3.288041830062866
    3. '(next' → logprob: -14.913042068481445
    4. '	next' → logprob: -17.163042068481445
    5. 'Next' → logprob: -19.163042068481445
    6. '   ' → logprob: -20.038042068481445
    7. '_next' → logprob: -20.038042068481445
    8. ' ' → logprob: -20.413042068481445
    9. '[next' → logprob: -20.538042068481445
    10. '.next' → logprob: -20.913042068481445

Token 467: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.1472419600977446e-06
    2. 'row' → logprob: -13.875000953674316
    3. '_' → logprob: -17.250001907348633
    4. '_line' → logprob: -17.250001907348633
    5. 'Row' → logprob: -18.500001907348633
    6. '_col' → logprob: -18.500001907348633
    7. '_ROW' → logprob: -19.125001907348633
    8. '_rows' → logprob: -19.375001907348633
    9. '_Row' → logprob: -19.625001907348633
    10. ' _' → logprob: -19.750001907348633

Token 468: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002602768363431096
    2. ',next' → logprob: -6.002602577209473
    3. ',current' → logprob: -9.002602577209473
    4. ' ,' → logprob: -13.252602577209473
    5. '[next' → logprob: -14.127602577209473
    6. ',
' → logprob: -14.752602577209473
    7. ' next' → logprob: -14.877602577209473
    8. '<|end|>' → logprob: -15.252602577209473
    9. 'next' → logprob: -15.752602577209473
    10. '(next' → logprob: -16.50260353088379

Token 469: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.06196802109479904
    2. ' next' → logprob: -2.8119680881500244
    3. '	next' → logprob: -16.186967849731445
    4. '(next' → logprob: -16.561967849731445
    5. '[next' → logprob: -16.561967849731445
    6. '_next' → logprob: -18.311967849731445
    7. '.next' → logprob: -18.436967849731445
    8. 'Next' → logprob: -19.561967849731445
    9. ' ' → logprob: -19.936967849731445
    10. 'new' → logprob: -20.561967849731445

Token 470: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.00020354038861114532
    2. 'col' → logprob: -8.500203132629395
    3. '_row' → logprob: -17.12520408630371
    4. 'Col' → logprob: -17.75020408630371
    5. '_' → logprob: -18.62520408630371
    6. '	col' → logprob: -18.87520408630371
    7. '_COL' → logprob: -18.87520408630371
    8. ' col' → logprob: -20.62520408630371
    9. 'icol' → logprob: -20.62520408630371
    10. '[col' → logprob: -20.62520408630371

Token 471: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 472: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 473: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 474: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0619787760078907
    2. ' self' → logprob: -2.811978816986084
    3. '[self' → logprob: -11.561978340148926
    4. '[' → logprob: -14.436978340148926
    5. ' [' → logprob: -14.811978340148926
    6. '   ' → logprob: -15.186978340148926
    7. ' ' → logprob: -15.686978340148926
    8. '	self' → logprob: -16.186979293823242
    9. '(self' → logprob: -17.311979293823242
    10. '  ' → logprob: -17.811979293823242

Token 475: '.square' (ID: 77530)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 476: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 477: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 478: ' Magic' (ID: 29113)
  Prédit: ' Magic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Magic' → logprob: -0.8591074347496033
    2. ' Normal' → logprob: -1.734107494354248
    3. ' Lo' → logprob: -1.984107494354248
    4. ' Odd' → logprob: -2.734107494354248
    5. 'Normal' → logprob: -3.359107494354248
    6. 'Magic' → logprob: -3.609107494354248
    7. ' Standard' → logprob: -4.109107494354248
    8. 'Lo' → logprob: -4.359107494354248
    9. ' Siam' → logprob: -4.359107494354248
    10. ' Simple' → logprob: -4.734107494354248

Token 479: 'Square' (ID: 36631)
  Prédit: 'Square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Square' → logprob: -0.00015598179015796632
    2. 'Rectangle' → logprob: -10.12515640258789
    3. 'Cube' → logprob: -10.87515640258789
    4. 'Sum' → logprob: -11.25015640258789
    5. 'Squares' → logprob: -11.25015640258789
    6. 'Magic' → logprob: -11.62515640258789
    7. 'Triangle' → logprob: -12.50015640258789
    8. '
' → logprob: -12.62515640258789
    9. 'Diagonal' → logprob: -12.62515640258789
    10. 'S' → logprob: -12.75015640258789

Token 480: 'Printer' (ID: 54325)
  Prédit: 'Factory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Factory' → logprob: -0.5338952541351318
    2. ':' → logprob: -1.0338952541351318
    3. 'Generator' → logprob: -4.158895492553711
    4. 'Solver' → logprob: -4.158895492553711
    5. ':
' → logprob: -4.908895492553711
    6. 'Odd' → logprob: -5.408895492553711
    7. 'Test' → logprob: -6.408895492553711
    8. 'Standard' → logprob: -6.533895492553711
    9. '3' → logprob: -6.658895492553711
    10. 'Checker' → logprob: -7.283895492553711

Token 481: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00409656623378396
    2. ':
' → logprob: -5.504096508026123
    3. ':def' → logprob: -11.504096984863281
    4. ' :' → logprob: -12.129096984863281
    5. ':

' → logprob: -13.379096984863281
    6. '():' → logprob: -14.879096984863281
    7. ':
' → logprob: -15.879096984863281
    8. ' :
' → logprob: -16.12909698486328
    9. '(object' → logprob: -16.25409698486328
    10. '<|end|>' → logprob: -16.50409698486328

Token 482: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001118307700380683
    2. ' def' → logprob: -6.876118183135986
    3. 'def' → logprob: -10.376118659973145
    4. ':' → logprob: -10.751118659973145
    5. '```' → logprob: -11.626118659973145
    6. '
' → logprob: -11.751118659973145
    7. '    
' → logprob: -12.001118659973145
    8. '	def' → logprob: -12.626118659973145
    9. ':
' → logprob: -12.751118659973145
    10. '<|end|>' → logprob: -13.876118659973145

Token 483: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4560205936431885
    2. '   ' → logprob: -1.2060205936431885
    3. 'def' (adapté à ' def') → logprob: -2.7060205936431885
    4. '```' → logprob: -12.58102035522461
    5. '	def' → logprob: -13.45602035522461
    6. '@' → logprob: -13.45602035522461
    7. ' @' → logprob: -13.70602035522461
    8. ' ' → logprob: -13.83102035522461
    9. 'class' → logprob: -13.95602035522461
    10. 'staticmethod' → logprob: -14.95602035522461

Token 484: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.002994697540998459
    2. 'init' → logprob: -6.502994537353516
    3. 'def' → logprob: -7.752994537353516
    4. 'classmethod' → logprob: -7.752994537353516
    5. 'static' → logprob: -8.377994537353516
    6. '__' → logprob: -8.502994537353516
    7. ' static' → logprob: -9.377994537353516
    8. ' __' → logprob: -9.752994537353516
    9. ' def' → logprob: -10.002994537353516
    10. 'print' → logprob: -11.877994537353516

Token 485: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.512236498361744e-07
    2. ' init' → logprob: -14.750000953674316
    3. 'call' → logprob: -15.625000953674316
    4. 'def' → logprob: -19.25
    5. '(init' → logprob: -19.375
    6. 'indent' → logprob: -19.625
    7. '_init' → logprob: -20.25
    8. '	init' → logprob: -20.75
    9. 'format' → logprob: -20.875
    10. 'inite' → logprob: -21.375

Token 486: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01542052160948515
    2. '(' → logprob: -4.890420436859131
    3. ' (' → logprob: -4.890420436859131
    4. '__(' → logprob: -8.890420913696289
    5. '(
' → logprob: -10.015420913696289
    6. 'self' → logprob: -10.515420913696289
    7. ',' → logprob: -11.140420913696289
    8. '   ' → logprob: -12.015420913696289
    9. '<|end|>' → logprob: -12.265420913696289
    10. '(object' → logprob: -12.515420913696289

Token 487: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0032639806158840656
    2. ')' → logprob: -6.0032639503479
    3. 'n' → logprob: -8.128264427185059
    4. ' self' → logprob: -8.253264427185059
    5. '   ' → logprob: -9.378264427185059
    6. '
' → logprob: -9.628264427185059
    7. '):
' → logprob: -9.878264427185059
    8. 'size' → logprob: -12.378264427185059
    9. 'def' → logprob: -12.628264427185059
    10. '(self' → logprob: -12.753264427185059

Token 488: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002651503309607506
    2. ' ,' → logprob: -9.250265121459961
    3. 'self' → logprob: -9.375265121459961
    4. ',n' → logprob: -9.750265121459961
    5. 'n' → logprob: -11.375265121459961
    6. ')' → logprob: -12.000265121459961
    7. '   ' → logprob: -13.250265121459961
    8. '(n' → logprob: -13.250265121459961
    9. ',self' → logprob: -13.500265121459961
    10. '):' → logprob: -13.875265121459961

Token 489: ' square' (ID: 13749)
  Prédit: 'square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'square' → logprob: -0.14345943927764893
    2. ' square' → logprob: -2.3934593200683594
    3. 'n' → logprob: -4.018459320068359
    4. 'magic' → logprob: -4.268459320068359
    5. ' magic' → logprob: -5.518459320068359
    6. ' n' → logprob: -6.518459320068359
    7. 'size' → logprob: -6.518459320068359
    8. 'width' → logprob: -6.893459320068359
    9. '   ' → logprob: -8.01845932006836
    10. 'matrix' → logprob: -8.14345932006836

Token 490: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2139592319726944
    2. ':' → logprob: -1.9639592170715332
    3. '):
' → logprob: -2.963959217071533
    4. ' ):' → logprob: -7.588959217071533
    5. ' :' → logprob: -9.588959693908691
    6. ')' → logprob: -9.963959693908691
    7. '   ' → logprob: -10.713959693908691
    8. ' ):
' → logprob: -11.213959693908691
    9. ' ' → logprob: -11.338959693908691
    10. ',' → logprob: -11.713959693908691

Token 491: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04887121170759201
    2. '   ' → logprob: -3.0488712787628174
    3. '        
' → logprob: -9.798871040344238
    4. '
' → logprob: -9.923871040344238
    5. '<|end|>' → logprob: -9.923871040344238
    6. 'def' → logprob: -10.048871040344238
    7. '    
' → logprob: -10.173871040344238
    8. ' def' → logprob: -11.298871040344238
    9. 'self' → logprob: -11.923871040344238
    10. '    ' → logprob: -12.173871040344238

Token 492: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.28996798396110535
    2. '       ' → logprob: -1.5399680137634277
    3. ' self' → logprob: -3.2899680137634277
    4. '   ' → logprob: -9.66496753692627
    5. 'def' → logprob: -12.53996753692627
    6. ' ' → logprob: -13.78996753692627
    7. '	self' → logprob: -14.66496753692627
    8. 'import' → logprob: -15.41496753692627
    9. '      ' → logprob: -15.53996753692627
    10. '     ' → logprob: -15.78996753692627

Token 493: '.square' (ID: 77530)
  Prédit: '.square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.square' → logprob: -0.023328637704253197
    2. '.' → logprob: -3.7733285427093506
    3. ' .' → logprob: -9.52332878112793
    4. 'square' → logprob: -12.52332878112793
    5. '.s' → logprob: -13.14832878112793
    6. '.magic' → logprob: -14.02332878112793
    7. '.space' → logprob: -14.27332878112793
    8. '   ' → logprob: -14.64832878112793
    9. '.sqrt' → logprob: -15.02332878112793
    10. '```' → logprob: -15.39832878112793

Token 494: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759609937667847
    2. ' =' → logprob: -0.8259609937667847
    3. '   ' → logprob: -11.075961112976074
    4. ' ' → logprob: -12.950961112976074
    5. '.' → logprob: -14.450961112976074
    6. '    ' → logprob: -14.450961112976074
    7. '=
' → logprob: -14.575961112976074
    8. ' =
' → logprob: -14.700961112976074
    9. '  ' → logprob: -15.200961112976074
    10. '	' → logprob: -15.325961112976074

Token 495: ' square' (ID: 13749)
  Prédit: 'square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'square' → logprob: -0.02324780821800232
    2. ' square' → logprob: -3.773247718811035
    3. '(square' → logprob: -13.273247718811035
    4. '   ' → logprob: -15.648247718811035
    5. '.square' → logprob: -15.773247718811035
    6. 'sq' → logprob: -15.898247718811035
    7. ' ' → logprob: -16.52324867248535
    8. '[' → logprob: -17.02324867248535
    9. 'quare' → logprob: -17.39824867248535
    10. '[s' → logprob: -17.64824867248535

Token 496: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07059048861265182
    2. '
' → logprob: -2.6955904960632324
    3. '    
' → logprob: -8.070590019226074
    4. 'def' → logprob: -8.195590019226074
    5. ' def' → logprob: -10.195590019226074
    6. '<|end|>' → logprob: -11.320590019226074
    7. '        
' → logprob: -11.445590019226074
    8. '	def' → logprob: -13.445590019226074
    9. '       ' → logprob: -13.570590019226074
    10. '<|end|>' → logprob: -14.070590019226074

Token 497: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10558874160051346
    2. 'def' → logprob: -2.355588674545288
    3. ' def' → logprob: -5.230588912963867
    4. '
' → logprob: -11.355588912963867
    5. '	def' → logprob: -12.605588912963867
    6. ' ' → logprob: -13.480588912963867
    7. '    
' → logprob: -15.855588912963867
    8. '4' → logprob: -16.105588912963867
    9. '  ' → logprob: -16.230588912963867
    10. '2' → logprob: -16.230588912963867

Token 498: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.8087270038668066e-05
    2. ' def' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.250027656555176
    4. '
' → logprob: -15.500027656555176
    5. ' ' → logprob: -20.000028610229492
    6. '	def' → logprob: -20.000028610229492
    7. '    
' → logprob: -20.250028610229492
    8. 'class' → logprob: -20.250028610229492
    9. 'de' → logprob: -20.500028610229492
    10. '

' → logprob: -22.125028610229492

Token 499: ' format' (ID: 6011)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00014323067443910986
    2. ' print' → logprob: -9.000143051147461
    3. 'display' → logprob: -11.125143051147461
    4. '__' → logprob: -12.750143051147461
    5. 'format' → logprob: -13.875143051147461
    6. 'render' → logprob: -14.625143051147461
    7. '_print' → logprob: -14.750143051147461
    8. 'pretty' → logprob: -15.875143051147461
    9. 'def' → logprob: -16.00014305114746
    10. 'draw' → logprob: -18.50014305114746

Token 500: '_row' (ID: 19157)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06341448426246643
    2. '_square' → logprob: -3.1884145736694336
    3. '()' → logprob: -4.438414573669434
    4. '(' → logprob: -4.938414573669434
    5. '_' → logprob: -8.313414573669434
    6. '(square' → logprob: -8.438414573669434
    7. '_number' → logprob: -8.563414573669434
    8. '_rows' → logprob: -8.813414573669434
    9. '_row' → logprob: -9.313414573669434
    10. '_cell' → logprob: -9.938414573669434

Token 501: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0025008674710989
    2. '(' → logprob: -6.002501010894775
    3. ' (' → logprob: -11.502500534057617
    4. '(row' → logprob: -12.127500534057617
    5. '_row' → logprob: -12.627500534057617
    6. 'self' → logprob: -12.752500534057617
    7. '_line' → logprob: -13.752500534057617
    8. '(line' → logprob: -14.127500534057617
    9. '(
' → logprob: -14.502500534057617
    10. '   ' → logprob: -14.877500534057617

Token 502: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007793409284204245
    2. ' ,' → logprob: -5.507793426513672
    3. 'self' → logprob: -5.882793426513672
    4. ',row' → logprob: -8.132793426513672
    5. '(self' → logprob: -8.507793426513672
    6. ')' → logprob: -8.632793426513672
    7. '   ' → logprob: -9.132793426513672
    8. 'row' → logprob: -10.257793426513672
    9. '       ' → logprob: -10.507793426513672
    10. ',self' → logprob: -10.632793426513672

Token 503: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.732505202293396
    2. 'self' → logprob: -0.732505202293396
    3. ' row' → logprob: -3.6075053215026855
    4. ' self' → logprob: -4.4825053215026855
    5. '   ' → logprob: -10.107504844665527
    6. 'index' → logprob: -10.232504844665527
    7. 'r' → logprob: -10.732504844665527
    8. ' ' → logprob: -10.857504844665527
    9. 'idx' → logprob: -10.857504844665527
    10. ')' → logprob: -10.982504844665527

Token 504: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7775668501853943
    2. '):' → logprob: -0.7775668501853943
    3. '):
' → logprob: -2.777566909790039
    4. 'self' → logprob: -4.777566909790039
    5. ')' → logprob: -5.652566909790039
    6. '       ' → logprob: -6.152566909790039
    7. '   ' → logprob: -6.277566909790039
    8. '(self' → logprob: -6.402566909790039
    9. ':' → logprob: -7.777566909790039
    10. ' ,' → logprob: -8.152566909790039

Token 505: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24515298008918762
    2. '"' → logprob: -2.2451529502868652
    3. ''' → logprob: -2.9951529502868652
    4. 'return' → logprob: -3.3701529502868652
    5. ' return' → logprob: -4.120152950286865
    6. ' '' → logprob: -5.245152950286865
    7. '"{' → logprob: -6.620152950286865
    8. ' "' → logprob: -7.245152950286865
    9. '[' → logprob: -7.370152950286865
    10. '{' → logprob: -7.870152950286865

Token 506: ' #' (ID: 1069)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7332504391670227
    2. 'return' → logprob: -1.483250379562378
    3. ''' → logprob: -1.858250379562378
    4. ' return' → logprob: -2.233250379562378
    5. ' '' → logprob: -4.358250617980957
    6. '       ' → logprob: -4.858250617980957
    7. ' "' → logprob: -5.108250617980957
    8. '   ' → logprob: -5.858250617980957
    9. ' ' → logprob: -9.608250617980957
    10. '
' → logprob: -11.108250617980957

Token 507: ' Format' (ID: 26193)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5152572989463806
    2. ''' → logprob: -1.2652573585510254
    3. 'return' → logprob: -2.3902573585510254
    4. ' return' → logprob: -4.015257358551025
    5. ' "' → logprob: -5.140257358551025
    6. ' '' → logprob: -5.515257358551025
    7. '   ' → logprob: -7.765257358551025
    8. 'f' → logprob: -9.015256881713867
    9. ' ' → logprob: -9.140256881713867
    10. ' f' → logprob: -9.890256881713867

Token 508: ' numbers' (ID: 8663)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.25161072611808777
    2. ''' → logprob: -1.6266107559204102
    3. ' '' → logprob: -4.37661075592041
    4. ' "' → logprob: -4.50161075592041
    5. '"{' → logprob: -6.62661075592041
    6. '   ' → logprob: -8.37661075592041
    7. 'return' → logprob: -8.75161075592041
    8. ' f' → logprob: -9.00161075592041
    9. ''{' → logprob: -9.12661075592041
    10. 'f' → logprob: -9.37661075592041

Token 509: ' right' (ID: 1849)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41122889518737793
    2. '   ' → logprob: -2.661228895187378
    3. '=' → logprob: -2.786228895187378
    4. '"{' → logprob: -2.911228895187378
    5. '{' → logprob: -3.036228895187378
    6. ' with' → logprob: -3.786228895187378
    7. '       ' → logprob: -4.536229133605957
    8. 'return' → logprob: -4.536229133605957
    9. 'with' → logprob: -4.661229133605957
    10. '"' → logprob: -4.786229133605957

Token 510: ' aligned' (ID: 48224)
  Prédit: 'just'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'just' → logprob: -0.39199814200401306
    2. 'aligned' → logprob: -1.3919981718063354
    3. 'align' → logprob: -3.391998052597046
    4. '   ' → logprob: -4.766998291015625
    5. '```' → logprob: -4.766998291015625
    6. '=' → logprob: -5.016998291015625
    7. ' aligned' → logprob: -5.141998291015625
    8. ' just' → logprob: -5.766998291015625
    9. '()' → logprob: -6.141998291015625
    10. 'justify' → logprob: -6.891998291015625

Token 511: ',' (ID: 11)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -1.0934345722198486
    2. 'return' → logprob: -1.2184345722198486
    3. '"{' → logprob: -2.3434345722198486
    4. ' =' → logprob: -2.5934345722198486
    5. ' return' → logprob: -2.8434345722198486
    6. '("{' → logprob: -3.0934345722198486
    7. '=' → logprob: -3.7184345722198486
    8. '{:' → logprob: -3.7184345722198486
    9. '{return' → logprob: -4.2184343338012695
    10. '   ' → logprob: -4.8434343338012695

Token 512: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.3979363441467285
    2. 'width' → logprob: -2.1479363441467285
    3. '5' → logprob: -2.5229363441467285
    4. ' width' → logprob: -2.7729363441467285
    5. '6' → logprob: -3.6479363441467285
    6. '8' → logprob: -4.5229363441467285
    7. 'f' → logprob: -5.0229363441467285
    8. ' ' → logprob: -5.1479363441467285
    9. '7' → logprob: -5.6479363441467285
    10. ' f' → logprob: -5.6479363441467285

Token 513: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.7377517223358154
    2. 'width' → logprob: -0.7377517223358154
    3. '5' → logprob: -3.8627517223358154
    4. ' width' → logprob: -4.4877519607543945
    5. '6' → logprob: -5.1127519607543945
    6. '8' → logprob: -5.9877519607543945
    7. '10' → logprob: -6.9877519607543945
    8. 'max' → logprob: -7.9877519607543945
    9. '7' → logprob: -8.112751960754395
    10. ' ' → logprob: -8.237751960754395

Token 514: ' width' (ID: 4345)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.026958931237459183
    2. '}' → logprob: -4.02695894241333
    3. 's' → logprob: -5.65195894241333
    4. ' spaces' → logprob: -6.27695894241333
    5. '>' → logprob: -6.52695894241333
    6. '{' → logprob: -7.52695894241333
    7. '```' → logprob: -7.77695894241333
    8. ' d' → logprob: -8.651958465576172
    9. '.' → logprob: -8.776958465576172
    10. 'spaces' → logprob: -8.901958465576172

Token 515: ' decimal' (ID: 26964)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1554718017578125
    2. ' =' → logprob: -1.2804718017578125
    3. '=' → logprob: -1.7804718017578125
    4. '{' → logprob: -2.2804718017578125
    5. ' return' → logprob: -2.7804718017578125
    6. '{:' → logprob: -3.2804718017578125
    7. '"{' → logprob: -4.5304718017578125
    8. '       ' → logprob: -5.0304718017578125
    9. ':' → logprob: -5.2804718017578125
    10. '{return' → logprob: -5.7804718017578125

Token 516: '
' (ID: 198)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7034258246421814
    2. '"{' → logprob: -1.7034258842468262
    3. '   ' → logprob: -2.078425884246826
    4. '{:' → logprob: -2.703425884246826
    5. ' =' → logprob: -3.953425884246826
    6. ':' → logprob: -4.078425884246826
    7. '=' → logprob: -4.078425884246826
    8. 'return' → logprob: -4.078425884246826
    9. '       ' → logprob: -4.203425884246826
    10. '"' → logprob: -4.703425884246826

Token 517: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4766775369644165
    2. '       ' → logprob: -1.2266775369644165
    3. ' return' → logprob: -2.726677417755127
    4. '   ' → logprob: -4.101677417755127
    5. '{' → logprob: -6.101677417755127
    6. '"{' → logprob: -7.226677417755127
    7. '"' → logprob: -8.476677894592285
    8. ' f' → logprob: -8.976677894592285
    9. '{return' → logprob: -9.101677894592285
    10. 'f' → logprob: -9.476677894592285

Token 518: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06453337520360947
    2. ' return' → logprob: -2.8145334720611572
    3. '       ' → logprob: -6.814533233642578
    4. '   ' → logprob: -7.189533233642578
    5. '"' → logprob: -7.814533233642578
    6. ''' → logprob: -8.814533233642578
    7. '"{' → logprob: -9.064533233642578
    8. ''{' → logprob: -11.314533233642578
    9. '
' → logprob: -12.189533233642578
    10. 'formatted' → logprob: -12.314533233642578

Token 519: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.14676788449287415
    2. ''' → logprob: -2.0217678546905518
    3. ' "' → logprob: -5.771768093109131
    4. ' '' → logprob: -7.021768093109131
    5. '("' → logprob: -10.896767616271973
    6. '   ' → logprob: -11.146767616271973
    7. 'f' → logprob: -11.396767616271973
    8. '"{' → logprob: -12.021767616271973
    9. ' "".' → logprob: -12.271767616271973
    10. ' ' → logprob: -12.396767616271973

Token 520: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004459674004465342
    2. ''' → logprob: -5.754459857940674
    3. ' "' → logprob: -7.504459857940674
    4. '"{' → logprob: -7.504459857940674
    5. ' "".' → logprob: -9.254459381103516
    6. '''.' → logprob: -10.504459381103516
    7. '("' → logprob: -11.129459381103516
    8. '   ' → logprob: -11.504459381103516
    9. '".' → logprob: -11.629459381103516
    10. ' ' → logprob: -12.254459381103516

Token 521: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.650518920039758e-06
    2. ' join' → logprob: -12.875003814697266
    3. 'j' → logprob: -15.000003814697266
    4. 'format' → logprob: -15.500003814697266
    5. '```' → logprob: -16.500003814697266
    6. '".' → logprob: -16.750003814697266
    7. 'jo' → logprob: -16.875003814697266
    8. '"' → logprob: -17.000003814697266
    9. '{' → logprob: -17.125003814697266
    10. '.join' → logprob: -17.250003814697266

Token 522: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0022468422539532185
    2. '[f' → logprob: -6.502246856689453
    3. '([' → logprob: -8.002246856689453
    4. 'f' → logprob: -8.002246856689453
    5. '(str' → logprob: -9.877246856689453
    6. '("{' → logprob: -11.752246856689453
    7. '{' → logprob: -11.752246856689453
    8. '(' → logprob: -12.252246856689453
    9. '[str' → logprob: -13.377246856689453
    10. '[' → logprob: -14.627246856689453

Token 523: '"{' (ID: 27510)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.14044266939163208
    2. 'f' → logprob: -2.1404426097869873
    3. '"{' → logprob: -4.390442848205566
    4. ' f' → logprob: -6.890442848205566
    5. ''{' → logprob: -12.140442848205566
    6. '(f' → logprob: -12.265442848205566
    7. '{:' → logprob: -15.140442848205566
    8. '   ' → logprob: -15.265442848205566
    9. '{x' → logprob: -16.14044189453125
    10. ' {' → logprob: -16.39044189453125

Token 524: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0026277387514710426
    2. 'x' → logprob: -6.127627849578857
    3. 'cell' → logprob: -8.2526273727417
    4. 'val' → logprob: -9.2526273727417
    5. 'n' → logprob: -9.7526273727417
    6. 'item' → logprob: -11.5026273727417
    7. 'value' → logprob: -11.6276273727417
    8. 'v' → logprob: -12.7526273727417
    9. ' num' → logprob: -12.7526273727417
    10. 'elem' → logprob: -14.1276273727417

Token 525: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.896309739408025e-07
    2. '4' → logprob: -15.375000953674316
    3. '{' → logprob: -15.875000953674316
    4. '{:' → logprob: -16.375
    5. '}"' → logprob: -17.0
    6. '```' → logprob: -17.125
    7. '   ' → logprob: -17.25
    8. '=' → logprob: -17.5
    9. 'd' → logprob: -17.625
    10. '[' → logprob: -17.75

Token 526: '>' (ID: 29)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -8.613945101387799e-05
    2. '>' → logprob: -9.375085830688477
    3. ' ' → logprob: -13.875085830688477
    4. '{' → logprob: -16.125085830688477
    5. '3' → logprob: -16.500085830688477
    6. '```' → logprob: -17.500085830688477
    7. '  ' → logprob: -17.625085830688477
    8. '   ' → logprob: -18.000085830688477
    9. 'd' → logprob: -19.500085830688477
    10. '４' → logprob: -19.625085830688477

Token 527: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -17.375
    4. '  ' → logprob: -17.5
    5. '3' → logprob: -18.125
    6. '>' → logprob: -18.875
    7. '```' → logprob: -19.125
    8. '{' → logprob: -19.25
    9. 'd' → logprob: -19.625
    10. '04' → logprob: -20.0

Token 528: 'd' (ID: 67)
  Prédit: '}"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"' → logprob: -0.38687315583229065
    2. 'd' → logprob: -1.1368731260299683
    3. '}' → logprob: -13.886873245239258
    4. '}}"' → logprob: -15.011873245239258
    5. '}"
' → logprob: -15.136873245239258
    6. '```' → logprob: -15.261873245239258
    7. '}")' → logprob: -16.011873245239258
    8. '}".' → logprob: -16.511873245239258
    9. '"' → logprob: -17.261873245239258
    10. ' }' → logprob: -17.511873245239258

Token 529: '}"' (ID: 21503)
  Prédit: '}"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"' → logprob: -9.088346359931165e-07
    2. '}' → logprob: -14.250000953674316
    3. ' }' → logprob: -16.125
    4. '}"
' → logprob: -16.75
    5. '}}"' → logprob: -17.875
    6. '"' → logprob: -17.875
    7. ')"' → logprob: -18.0
    8. '}")' → logprob: -18.0
    9. '"}' → logprob: -18.125
    10. '}".' → logprob: -18.875

Token 530: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.030442213639616966
    2. 'for' → logprob: -3.530442237854004
    3. ')' → logprob: -7.780442237854004
    4. '<|end|>' → logprob: -8.405442237854004
    5. '       ' → logprob: -11.405442237854004
    6. '   ' → logprob: -11.655442237854004
    7. '}' → logprob: -11.655442237854004
    8. '	for' → logprob: -12.030442237854004
    9. ' ' → logprob: -12.530442237854004
    10. ',' → logprob: -13.155442237854004

Token 531: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.6931495070457458
    2. 'num' → logprob: -0.6931495070457458
    3. ' row' → logprob: -14.06814956665039
    4. 'row' → logprob: -14.56814956665039
    5. '	num' → logprob: -14.56814956665039
    6. ' ' → logprob: -15.44314956665039
    7. '(num' → logprob: -16.19314956665039
    8. '<num' → logprob: -16.44314956665039
    9. '[num' → logprob: -16.56814956665039
    10. ',num' → logprob: -16.94314956665039

Token 532: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027168238535523415
    2. 'num' → logprob: -3.9021682739257812
    3. 'in' → logprob: -5.527168273925781
    4. ' num' → logprob: -6.152168273925781
    5. 'row' → logprob: -7.902168273925781
    6. ' row' → logprob: -9.152168273925781
    7. ' ' → logprob: -11.527168273925781
    8. ',num' → logprob: -12.152168273925781
    9. ')' → logprob: -13.527168273925781
    10. '  ' → logprob: -13.777168273925781

Token 533: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0019286326132714748
    2. ' row' → logprob: -6.251928806304932
    3. '	row' → logprob: -17.751928329467773
    4. ' ' → logprob: -18.501928329467773
    5. '(row' → logprob: -18.876928329467773
    6. '[row' → logprob: -19.251928329467773
    7. '$row' → logprob: -19.626928329467773
    8. '=row' → logprob: -20.001928329467773
    9. '   ' → logprob: -20.376928329467773
    10. '
' → logprob: -20.501928329467773

Token 534: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.41866585687967e-06
    2. ' )' → logprob: -12.500008583068848
    3. '       ' → logprob: -13.125008583068848
    4. ')
' → logprob: -13.625008583068848
    5. '<|end|>' → logprob: -14.250008583068848
    6. ')}' → logprob: -15.000008583068848
    7. '   ' → logprob: -15.500008583068848
    8. ')return' → logprob: -16.50000762939453
    9. ')`' → logprob: -17.12500762939453
    10. ')}}' → logprob: -17.62500762939453

Token 535: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09508222341537476
    2. '   ' → logprob: -2.4700822830200195
    3. '<|end|>' → logprob: -5.3450822830200195
    4. '    
' → logprob: -7.2200822830200195
    5. 'def' → logprob: -7.8450822830200195
    6. '<|end|>' → logprob: -9.97008228302002
    7. ' 
' → logprob: -10.09508228302002
    8. '  
' → logprob: -10.34508228302002
    9. '```' → logprob: -10.47008228302002
    10. '

' → logprob: -10.84508228302002

Token 536: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001294030516874045
    2. ' def' → logprob: -9.000129699707031
    3. '
' → logprob: -12.125129699707031
    4. '   ' → logprob: -14.500129699707031
    5. '	def' → logprob: -18.12512969970703
    6. '    
' → logprob: -18.50012969970703
    7. ' ' → logprob: -18.50012969970703
    8. '

' → logprob: -19.25012969970703
    9. '```' → logprob: -20.62512969970703
    10. '  
' → logprob: -21.25012969970703

Token 537: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001035787514410913
    2. ' print' → logprob: -7.001035690307617
    3. 'format' → logprob: -9.251035690307617
    4. 'display' → logprob: -10.626035690307617
    5. '__' → logprob: -13.126035690307617
    6. 'def' → logprob: -14.501035690307617
    7. ' format' → logprob: -15.126035690307617
    8. 'render' → logprob: -15.251035690307617
    9. '_print' → logprob: -16.001035690307617
    10. 'pretty' → logprob: -16.126035690307617

Token 538: '(self' (ID: 2402)
  Prédit: '_square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_square' → logprob: -0.10585708171129227
    2. '_' → logprob: -2.4808571338653564
    3. '()' → logprob: -4.855856895446777
    4. 'square' → logprob: -5.605856895446777
    5. '(' → logprob: -6.355856895446777
    6. '(self' → logprob: -6.855856895446777
    7. '_(' → logprob: -7.105856895446777
    8. '(square' → logprob: -7.355856895446777
    9. '_s' → logprob: -8.105856895446777
    10. '_all' → logprob: -8.355856895446777

Token 539: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.040971048176288605
    2. '_square' → logprob: -4.040971279144287
    3. 'square' → logprob: -4.415971279144287
    4. ')_' → logprob: -5.415971279144287
    5. '):' → logprob: -5.540971279144287
    6. '_' → logprob: -6.915971279144287
    7. '):
' → logprob: -8.040970802307129
    8. ' )' → logprob: -8.165970802307129
    9. ')s' → logprob: -9.790970802307129
    10. 'self' → logprob: -10.040970802307129

Token 540: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1271500587463379
    2. '()' → logprob: -2.252150058746338
    3. '   ' → logprob: -4.752150058746338
    4. '(self' → logprob: -5.877150058746338
    5. 'self' → logprob: -7.127150058746338
    6. '(' → logprob: -7.252150058746338
    7. '()
' → logprob: -7.627150058746338
    8. 'for' → logprob: -8.12714958190918
    9. ' for' → logprob: -9.37714958190918
    10. '():
' → logprob: -9.62714958190918

Token 541: ' lines' (ID: 8698)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014201588928699493
    2. ' for' → logprob: -4.264201641082764
    3. '   ' → logprob: -10.764201164245605
    4. '
' → logprob: -11.764201164245605
    5. '       ' → logprob: -11.764201164245605
    6. '	for' → logprob: -13.514201164245605
    7. '    
' → logprob: -17.889202117919922
    8. '        
' → logprob: -18.139202117919922
    9. ' ' → logprob: -18.264202117919922
    10. '```' → logprob: -18.764202117919922

Token 542: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5010278224945068
    2. '=' → logprob: -1.0010278224945068
    3. '()' → logprob: -4.126028060913086
    4. '=[]' → logprob: -4.876028060913086
    5. '   ' → logprob: -6.876028060913086
    6. '[]' → logprob: -7.876028060913086
    7. '<|end|>' → logprob: -8.251028060913086
    8. '(' → logprob: -8.376028060913086
    9. ':' → logprob: -8.626028060913086
    10. '=[]
' → logprob: -8.876028060913086

Token 543: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6281870603561401
    2. '[]
' → logprob: -0.8781870603561401
    3. '[]' → logprob: -3.3781871795654297
    4. '[
' → logprob: -4.37818717956543
    5. '[self' → logprob: -5.87818717956543
    6. '"\' → logprob: -7.87818717956543
    7. ' [' → logprob: -8.12818717956543
    8. '[f' → logprob: -8.25318717956543
    9. '[line' → logprob: -8.87818717956543
    10. '[\' → logprob: -9.87818717956543

Token 544: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020973898062948138
    2. ' self' → logprob: -8.50020980834961
    3. '       ' → logprob: -12.62520980834961
    4. '           ' → logprob: -13.00020980834961
    5. '   ' → logprob: -14.75020980834961
    6. '(self' → logprob: -15.62520980834961
    7. '[self' → logprob: -16.25020980834961
    8. '               ' → logprob: -18.00020980834961
    9. '	self' → logprob: -18.00020980834961
    10. '         ' → logprob: -19.50020980834961

Token 545: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -0.00018280261429026723
    2. 'format' → logprob: -8.87518310546875
    3. '.' → logprob: -10.37518310546875
    4. ' .' → logprob: -11.87518310546875
    5. '   ' → logprob: -12.87518310546875
    6. ').' → logprob: -14.62518310546875
    7. ' format' → logprob: -15.00018310546875
    8. '=format' → logprob: -15.00018310546875
    9. '.square' → logprob: -15.37518310546875
    10. '.form' → logprob: -15.37518310546875

Token 546: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.014675801619887352
    2. 'row' → logprob: -4.514675617218018
    3. '(row' → logprob: -5.639675617218018
    4. '_' → logprob: -10.389676094055176
    5. 'r' → logprob: -11.514676094055176
    6. '(' → logprob: -12.139676094055176
    7. ' row' → logprob: -12.264676094055176
    8. '_r' → logprob: -12.389676094055176
    9. '_rows' → logprob: -13.514676094055176
    10. '	row' → logprob: -13.514676094055176

Token 547: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0011941560078412294
    2. 'row' → logprob: -6.751194000244141
    3. '(r' → logprob: -10.75119400024414
    4. '(' → logprob: -13.12619400024414
    5. '(line' → logprob: -15.75119400024414
    6. ' row' → logprob: -16.00119400024414
    7. '(self' → logprob: -16.25119400024414
    8. '	row' → logprob: -17.00119400024414
    9. 'r' → logprob: -17.50119400024414
    10. '=row' → logprob: -17.62619400024414

Token 548: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2603901015827432e-05
    2. 'self' → logprob: -11.000022888183594
    3. ' )' → logprob: -12.625022888183594
    4. 'for' → logprob: -13.875022888183594
    5. '(self' → logprob: -14.375022888183594
    6. '   ' → logprob: -14.875022888183594
    7. '))' → logprob: -15.625022888183594
    8. '())' → logprob: -15.875022888183594
    9. ')
' → logprob: -16.375022888183594
    10. '")' → logprob: -16.500022888183594

Token 549: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11612848192453384
    2. 'for' → logprob: -2.241128444671631
    3. '()' → logprob: -6.616128444671631
    4. '(self' → logprob: -7.241128444671631
    5. '       ' → logprob: -7.741128444671631
    6. ')' → logprob: -8.491128921508789
    7. 'self' → logprob: -8.491128921508789
    8. '           ' → logprob: -8.616128921508789
    9. '(' → logprob: -8.991128921508789
    10. '	for' → logprob: -10.241128921508789

Token 550: ' row' (ID: 5225)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1270129382610321
    2. ' self' → logprob: -2.1270129680633545
    3. 'row' → logprob: -9.877013206481934
    4. ' row' → logprob: -10.377013206481934
    5. ' ' → logprob: -14.127013206481934
    6. '   ' → logprob: -14.127013206481934
    7. '	self' → logprob: -14.877013206481934
    8. '  ' → logprob: -15.752013206481934
    9. '(self' → logprob: -16.627012252807617
    10. '
' → logprob: -16.627012252807617

Token 551: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030130647122859955
    2. 'in' → logprob: -3.530130624771118
    3. 'self' → logprob: -7.905130863189697
    4. ' self' → logprob: -12.280130386352539
    5. '(self' → logprob: -12.530130386352539
    6. '       ' → logprob: -14.030130386352539
    7. 's' → logprob: -14.405130386352539
    8. '   ' → logprob: -15.030130386352539
    9. '	in' → logprob: -15.155130386352539
    10. ' ' → logprob: -15.280130386352539

Token 552: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031784253660589457
    2. ' self' → logprob: -5.753178596496582
    3. '   ' → logprob: -14.753178596496582
    4. '(self' → logprob: -16.503177642822266
    5. '
' → logprob: -16.628177642822266
    6. ' ' → logprob: -17.503177642822266
    7. '	self' → logprob: -17.503177642822266
    8. '       ' → logprob: -17.753177642822266
    9. '    ' → logprob: -18.253177642822266
    10. '  ' → logprob: -18.253177642822266

Token 553: '.square' (ID: 77530)
  Prédit: '.square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.square' → logprob: -1.3902033970225602e-05
    2. '.s' → logprob: -12.000014305114746
    3. '.' → logprob: -12.125014305114746
    4. 'square' → logprob: -13.750014305114746
    5. ' .' → logprob: -14.875014305114746
    6. '.sqrt' → logprob: -15.375014305114746
    7. '.self' → logprob: -16.12501335144043
    8. 's' → logprob: -16.37501335144043
    9. '.magic' → logprob: -16.62501335144043
    10. '.space' → logprob: -16.87501335144043

Token 554: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008777416311204433
    2. ']
' → logprob: -4.758777618408203
    3. '       ' → logprob: -8.883777618408203
    4. ' ]' → logprob: -11.008777618408203
    5. ']
' → logprob: -12.383777618408203
    6. ')' → logprob: -14.008777618408203
    7. '   ' → logprob: -14.008777618408203
    8. ')]' → logprob: -14.133777618408203
    9. ']

' → logprob: -14.508777618408203
    10. ' ]
' → logprob: -15.258777618408203

Token 555: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004584396257996559
    2. '
' → logprob: -5.504584312438965
    3. ' for' → logprob: -8.129584312438965
    4. '   ' → logprob: -9.254584312438965
    5. 'for' → logprob: -9.504584312438965
    6. '
' → logprob: -11.629584312438965
    7. '<|end|>' → logprob: -11.629584312438965
    8. '        
' → logprob: -11.754584312438965
    9. 'print' → logprob: -12.754584312438965
    10. 'return' → logprob: -13.004584312438965

Token 556: ' return' (ID: 622)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6431428790092468
    2. 'for' → logprob: -1.0181429386138916
    3. '       ' → logprob: -2.3931429386138916
    4. 'print' → logprob: -4.2681427001953125
    5. 'return' (adapté à ' return') → logprob: -5.5181427001953125
    6. '
' → logprob: -6.3931427001953125
    7. ' return' → logprob: -6.8931427001953125
    8. '   ' → logprob: -7.7681427001953125
    9. ' print' → logprob: -7.7681427001953125
    10. '	for' → logprob: -9.518142700195312

Token 557: ' "\' (ID: 6512)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"\' → logprob: -0.00020091790065634996
    2. ' "\' → logprob: -9.000201225280762
    3. ''\' → logprob: -9.500201225280762
    4. '\n' → logprob: -13.250201225280762
    5. '"' → logprob: -14.500201225280762
    6. '
' → logprob: -15.375201225280762
    7. '"
' → logprob: -17.375200271606445
    8. '("\' → logprob: -17.500200271606445
    9. ' '\' → logprob: -19.000200271606445
    10. '   ' → logprob: -19.250200271606445

Token 558: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.5577775128767826e-06
    2. '\n' → logprob: -12.125005722045898
    3. '"\' → logprob: -17.0000057220459
    4. '
' → logprob: -17.1250057220459
    5. '"' → logprob: -19.0000057220459
    6. '".' → logprob: -20.6250057220459
    7. ' n' → logprob: -20.7500057220459
    8. 'nn' → logprob: -21.0000057220459
    9. 'ndef' → logprob: -21.2500057220459
    10. '``' → logprob: -21.5000057220459

Token 559: '".' (ID: 4050)
  Prédit: '".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.0026433176826685667
    2. '.join' → logprob: -7.12764310836792
    3. '.' → logprob: -7.62764310836792
    4. 'join' → logprob: -7.62764310836792
    5. '"' → logprob: -7.87764310836792
    6. 'n' → logprob: -8.502643585205078
    7. '"\' → logprob: -8.752643585205078
    8. 'print' → logprob: -10.502643585205078
    9. '\n' → logprob: -10.502643585205078
    10. '").' → logprob: -10.627643585205078

Token 560: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -4.008129963040119e-06
    2. ' join' → logprob: -12.500003814697266
    3. '.join' → logprob: -16.125003814697266
    4. 'jo' → logprob: -16.375003814697266
    5. '```' → logprob: -16.750003814697266
    6. 'j' → logprob: -17.875003814697266
    7. '(join' → logprob: -18.125003814697266
    8. 'return' → logprob: -18.125003814697266
    9. '.' → logprob: -18.625003814697266
    10. 'format' → logprob: -19.375003814697266

Token 561: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.00012356207298580557
    2. 'lines' → logprob: -9.000123977661133
    3. ' lines' → logprob: -16.750123977661133
    4. '	lines' → logprob: -17.500123977661133
    5. '(line' → logprob: -17.625123977661133
    6. '(' → logprob: -17.750123977661133
    7. '.lines' → logprob: -20.875123977661133
    8. 'Lines' → logprob: -21.125123977661133
    9. '(
' → logprob: -21.375123977661133
    10. '(parts' → logprob: -22.000123977661133

Token 562: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015383612480945885
    2. '<|end|>' → logprob: -8.875153541564941
    3. ')
' → logprob: -11.375153541564941
    4. '
' → logprob: -14.500153541564941
    5. ')return' → logprob: -15.125153541564941
    6. '()' → logprob: -15.125153541564941
    7. '       ' → logprob: -15.375153541564941
    8. '())' → logprob: -15.750153541564941
    9. ')}' → logprob: -16.000154495239258
    10. '}' → logprob: -16.000154495239258

Token 563: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 564: ' Magic' (ID: 29113)
  Prédit: ' Magic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Magic' → logprob: -0.8293352723121643
    2. 'Magic' → logprob: -1.4543352127075195
    3. 'Standard' → logprob: -2.7043352127075195
    4. ' Standard' → logprob: -3.3293352127075195
    5. 'Normal' → logprob: -3.4543352127075195
    6. ' Odd' → logprob: -3.5793352127075195
    7. ' Normal' → logprob: -3.7043352127075195
    8. 'Odd' → logprob: -3.8293352127075195
    9. ' Perfect' → logprob: -4.5793352127075195
    10. ' Lo' → logprob: -4.7043352127075195

Token 565: 'Square' (ID: 36631)
  Prédit: 'Square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Square' → logprob: -2.8325677703833207e-05
    2. 'Rectangle' → logprob: -11.375028610229492
    3. 'Squares' → logprob: -12.125028610229492
    4. 'Cube' → logprob: -13.250028610229492
    5. 'Magic' → logprob: -13.875028610229492
    6. 'Diagonal' → logprob: -14.000028610229492
    7. 'Sum' → logprob: -14.125028610229492
    8. 'Latin' → logprob: -14.250028610229492
    9. 'User' → logprob: -14.250028610229492
    10. 'S' → logprob: -14.500028610229492

Token 566: 'Processor' (ID: 22334)
  Prédit: 'Factory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Factory' → logprob: -0.0611426942050457
    2. 'Generator' → logprob: -3.061142683029175
    3. ':' → logprob: -5.186142921447754
    4. 'Solver' → logprob: -5.936142921447754
    5. 'Builder' → logprob: -6.936142921447754
    6. 'Tester' → logprob: -7.936142921447754
    7. ':
' → logprob: -8.061142921447754
    8. 'Test' → logprob: -8.311142921447754
    9. 'Creator' → logprob: -8.436142921447754
    10. 'Verifier' → logprob: -8.561142921447754

Token 567: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017159932758659124
    2. ':
' → logprob: -6.376716136932373
    3. '(M' → logprob: -12.001715660095215
    4. '<|end|>' → logprob: -13.001715660095215
    5. ':def' → logprob: -13.626715660095215
    6. ':

' → logprob: -13.751715660095215
    7. ' :' → logprob: -13.751715660095215
    8. '(' → logprob: -13.876715660095215
    9. '():' → logprob: -15.751715660095215
    10. ':
' → logprob: -16.12671661376953

Token 568: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003255907678976655
    2. ' def' → logprob: -5.753255844116211
    3. 'def' → logprob: -9.503255844116211
    4. '	def' → logprob: -14.253255844116211
    5. ' ' → logprob: -14.503255844116211
    6. '
' → logprob: -14.503255844116211
    7. '  ' → logprob: -14.753255844116211
    8. '    ' → logprob: -15.003255844116211
    9. 'class' → logprob: -15.003255844116211
    10. '```' → logprob: -15.378255844116211

Token 569: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.42273762822151184
    2. 'def' (adapté à ' def') → logprob: -1.1727375984191895
    3. 'class' → logprob: -3.9227375984191895
    4. '   ' → logprob: -4.1727375984191895
    5. ' class' → logprob: -10.672738075256348
    6. ':' → logprob: -12.172738075256348
    7. '```' → logprob: -12.922738075256348
    8. ':def' → logprob: -13.547738075256348
    9. '	def' → logprob: -14.297738075256348
    10. 'import' → logprob: -14.922738075256348

Token 570: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.031504347920417786
    2. ' __' → logprob: -4.656504154205322
    3. '__' → logprob: -4.906504154205322
    4. ' def' → logprob: -4.906504154205322
    5. 'def' → logprob: -5.281504154205322
    6. ' init' → logprob: -6.781504154205322
    7. '_init' → logprob: -8.78150463104248
    8. 'staticmethod' → logprob: -9.03150463104248
    9. '```' → logprob: -10.03150463104248
    10. 'int' → logprob: -10.03150463104248

Token 571: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. ' init' → logprob: -15.25
    3. 'Init' → logprob: -17.875
    4. 'new' → logprob: -18.625
    5. 'int' → logprob: -19.0
    6. '	init' → logprob: -19.125
    7. '(init' → logprob: -19.625
    8. '_init' → logprob: -19.75
    9. 'inite' → logprob: -19.875
    10. 'ini' → logprob: -21.0

Token 572: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.013514300808310509
    2. '__(' → logprob: -4.638514518737793
    3. ' (' → logprob: -6.263514518737793
    4. 'class' → logprob: -7.013514518737793
    5. '(' → logprob: -7.638514518737793
    6. 'self' → logprob: -8.763514518737793
    7. '<|end|>' → logprob: -9.513514518737793
    8. '   ' → logprob: -9.763514518737793
    9. '<class' → logprob: -10.388514518737793
    10. 'def' → logprob: -10.388514518737793

Token 573: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.8312570318812504e-05
    2. ' self' → logprob: -11.375018119812012
    3. 'n' → logprob: -12.625018119812012
    4. '   ' → logprob: -12.750018119812012
    5. '
' → logprob: -15.375018119812012
    6. '       ' → logprob: -16.000019073486328
    7. ',' → logprob: -16.000019073486328
    8. ')' → logprob: -16.375019073486328
    9. ' ' → logprob: -17.625019073486328
    10. 'def' → logprob: -18.500019073486328

Token 574: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002933841198682785
    2. 'self' → logprob: -6.002933979034424
    3. ' ,' → logprob: -7.877933979034424
    4. 'n' → logprob: -11.002933502197266
    5. '   ' → logprob: -11.002933502197266
    6. ' self' → logprob: -11.002933502197266
    7. '(self' → logprob: -11.377933502197266
    8. ',self' → logprob: -12.377933502197266
    9. ')' → logprob: -12.752933502197266
    10. ' (' → logprob: -12.752933502197266

Token 575: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010524577228352427
    2. 'n' → logprob: -7.126052379608154
    3. ' self' → logprob: -8.876052856445312
    4. '       ' → logprob: -9.751052856445312
    5. '   ' → logprob: -10.251052856445312
    6. 'square' → logprob: -11.876052856445312
    7. 'def' → logprob: -12.501052856445312
    8. ',' → logprob: -13.876052856445312
    9. ' n' → logprob: -14.001052856445312
    10. '
' → logprob: -14.501052856445312

Token 576: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.09437597543001175
    2. 'pass' → logprob: -3.3443760871887207
    3. '       ' → logprob: -3.5943760871887207
    4. ' self' → logprob: -3.9693760871887207
    5. ' pass' → logprob: -5.094376087188721
    6. '   ' → logprob: -6.094376087188721
    7. 'def' → logprob: -11.969375610351562
    8. '
' → logprob: -12.469375610351562
    9. '        
' → logprob: -12.594375610351562
    10. 'class' → logprob: -12.969375610351562

Token 577: '.results' (ID: 53203)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.30330362915992737
    2. '.square' → logprob: -2.1783037185668945
    3. '.' → logprob: -2.3033037185668945
    4. ' .' → logprob: -3.6783037185668945
    5. '.s' → logprob: -5.0533037185668945
    6. 'n' → logprob: -5.5533037185668945
    7. ' square' → logprob: -5.6783037185668945
    8. '.magic' → logprob: -5.9283037185668945
    9. 'square' → logprob: -6.0533037185668945
    10. '.factory' → logprob: -6.4283037185668945

Token 578: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6330942511558533
    2. ' =' → logprob: -0.7580942511558533
    3. '=[]' → logprob: -7.758094310760498
    4. '={}' → logprob: -10.63309383392334
    5. '[]' → logprob: -11.13309383392334
    6. '[' → logprob: -11.13309383392334
    7. ':' → logprob: -12.63309383392334
    8. '<|end|>' → logprob: -13.13309383392334
    9. ' ' → logprob: -13.25809383392334
    10. '   ' → logprob: -13.38309383392334

Token 579: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.04872725531458855
    2. '{}' → logprob: -3.04872727394104
    3. ' []' → logprob: -8.923727035522461
    4. '[]
' → logprob: -12.298727035522461
    5. ' {}' → logprob: -13.548727035522461
    6. '[]

' → logprob: -15.298727035522461
    7. '[]}' → logprob: -15.423727035522461
    8. '[' → logprob: -15.798727035522461
    9. '{}
' → logprob: -16.17372703552246
    10. '   ' → logprob: -16.42372703552246

Token 580: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004321168176829815
    2. '
' → logprob: -6.004321098327637
    3. ' def' → logprob: -6.879321098327637
    4. 'def' → logprob: -7.254321098327637
    5. '    
' → logprob: -9.379321098327637
    6. '<|end|>' → logprob: -11.004321098327637
    7. '        
' → logprob: -12.629321098327637
    8. '<|end|>' → logprob: -13.629321098327637
    9. ' 
' → logprob: -14.129321098327637
    10. '	def' → logprob: -14.879321098327637

Token 581: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002856497303582728
    2. ' def' → logprob: -8.250286102294922
    3. '   ' → logprob: -10.625286102294922
    4. '
' → logprob: -17.000286102294922
    5. '	def' → logprob: -18.000286102294922
    6. 'class' → logprob: -18.500286102294922
    7. 'de' → logprob: -18.875286102294922
    8. ' ' → logprob: -19.375286102294922
    9. '    
' → logprob: -20.250286102294922
    10. 'import' → logprob: -21.500286102294922

Token 582: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.03351706266403198
    2. 'property' → logprob: -3.9085171222686768
    3. 'classmethod' → logprob: -4.783516883850098
    4. 'dat' → logprob: -5.408516883850098
    5. 'cache' → logprob: -10.783516883850098
    6. 'l' → logprob: -11.283516883850098
    7. 'cached' → logprob: -12.533516883850098
    8. 'abstract' → logprob: -13.033516883850098
    9. 'pytest' → logprob: -13.783516883850098
    10. 'fun' → logprob: -14.033516883850098

Token 583: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02351752668619156
    2. ' def' → logprob: -4.398517608642578
    3. '
' → logprob: -5.148517608642578
    4. '   ' → logprob: -5.273517608642578
    5. '(' → logprob: -12.523517608642578
    6. '    
' → logprob: -12.898517608642578
    7. ' ' → logprob: -13.398517608642578
    8. '	def' → logprob: -13.523517608642578
    9. '  ' → logprob: -13.773517608642578
    10. '\' → logprob: -14.148517608642578

Token 584: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03331448882818222
    2. ' def' → logprob: -3.7833144664764404
    3. '   ' → logprob: -4.6583147048950195
    4. '
' → logprob: -7.5333147048950195
    5. '  ' → logprob: -14.90831470489502
    6. '	def' → logprob: -15.28331470489502
    7. ' ' → logprob: -15.53331470489502
    8. '    
' → logprob: -16.033313751220703
    9. '```' → logprob: -16.783313751220703
    10. '\' → logprob: -17.158313751220703

Token 585: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.165027217415627e-05
    2. 'classmethod' → logprob: -11.375021934509277
    3. '
' → logprob: -12.875021934509277
    4. 'property' → logprob: -13.000021934509277
    5. '   ' → logprob: -13.125021934509277
    6. 'staticmethod' → logprob: -13.500021934509277
    7. ' def' → logprob: -13.625021934509277
    8. 'class' → logprob: -14.875021934509277
    9. 'from' → logprob: -16.12502098083496
    10. '    
' → logprob: -16.50002098083496

Token 586: ' validate' (ID: 14986)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.9146673679351807
    2. 'process' → logprob: -1.7896673679351807
    3. 'parse' → logprob: -2.0396673679351807
    4. 'is' → logprob: -2.5396673679351807
    5. 'generate' → logprob: -2.5396673679351807
    6. 'from' → logprob: -3.0396673679351807
    7. 'validate' → logprob: -3.6646673679351807
    8. 'compute' → logprob: -4.539667129516602
    9. 'solve' → logprob: -4.664667129516602
    10. 'run' → logprob: -4.664667129516602

Token 587: '_n' (ID: 2170)
  Prédit: '(square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(square' → logprob: -0.2058555781841278
    2. '_square' → logprob: -2.33085560798645
    3. '(n' → logprob: -2.83085560798645
    4. '_magic' → logprob: -4.955855369567871
    5. '(m' → logprob: -5.205855369567871
    6. '(' → logprob: -5.580855369567871
    7. '(size' → logprob: -5.830855369567871
    8. '(s' → logprob: -6.080855369567871
    9. '_input' → logprob: -6.580855369567871
    10. '_n' → logprob: -6.705855369567871

Token 588: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009827931644394994
    2. '(cls' → logprob: -7.750982761383057
    3. '(self' → logprob: -7.875982761383057
    4. '(' → logprob: -8.750983238220215
    5. ' (' → logprob: -11.625983238220215
    6. '(value' → logprob: -13.000983238220215
    7. 'n' → logprob: -14.375983238220215
    8. '(num' → logprob: -14.750983238220215
    9. '(N' → logprob: -14.875983238220215
    10. '((' → logprob: -14.875983238220215

Token 589: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1285407394170761
    2. ':' → logprob: -2.1285407543182373
    3. '):
' → logprob: -6.503540515899658
    4. ':int' → logprob: -9.378540992736816
    5. ')' → logprob: -11.128540992736816
    6. ' ):' → logprob: -11.878540992736816
    7. ' :' → logprob: -12.878540992736816
    8. '   ' → logprob: -13.503540992736816
    9. '():' → logprob: -14.378540992736816
    10. ',' → logprob: -14.378540992736816

Token 590: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0006887249764986336
    2. ' int' → logprob: -7.625688552856445
    3. ')' → logprob: -8.625688552856445
    4. '(int' → logprob: -11.375688552856445
    5. '[int' → logprob: -13.125688552856445
    6. '):
' → logprob: -13.500688552856445
    7. 'def' → logprob: -13.875688552856445
    8. '):' → logprob: -14.125688552856445
    9. ' ' → logprob: -14.125688552856445
    10. '   ' → logprob: -14.500688552856445

Token 591: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015659963712096214
    2. '):' → logprob: -4.265659809112549
    3. '):
' → logprob: -6.515659809112549
    4. ')->' → logprob: -12.140660285949707
    5. ':' → logprob: -12.765660285949707
    6. '):
' → logprob: -12.890660285949707
    7. ' )' → logprob: -13.015660285949707
    8. '   ' → logprob: -13.140660285949707
    9. '):

' → logprob: -15.140660285949707
    10. ' ):' → logprob: -16.64065933227539

Token 592: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013946520164608955
    2. ' if' → logprob: -5.263946533203125
    3. 'return' → logprob: -5.263946533203125
    4. ' return' → logprob: -5.888946533203125
    5. 'if' → logprob: -7.263946533203125
    6. 'assert' → logprob: -10.888946533203125
    7. '   ' → logprob: -12.138946533203125
    8. ' assert' → logprob: -13.138946533203125
    9. '#' → logprob: -14.263946533203125
    10. '<|end|>' → logprob: -14.388946533203125

Token 593: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.38123196363449097
    2. 'if' (adapté à ' if') → logprob: -1.3812320232391357
    3. ' return' → logprob: -3.3812320232391357
    4. ' if' → logprob: -3.6312320232391357
    5. '       ' → logprob: -5.381231784820557
    6. 'assert' → logprob: -7.631231784820557
    7. '   ' → logprob: -10.006232261657715
    8. '#' → logprob: -10.256232261657715
    9. ' assert' → logprob: -10.381232261657715
    10. 'valid' → logprob: -11.631232261657715

Token 594: ' not' (ID: 625)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5806145071983337
    2. ' n' → logprob: -1.2056145668029785
    3. ' not' → logprob: -2.0806145668029785
    4. 'not' → logprob: -4.2056145668029785
    5. '(n' → logprob: -7.5806145668029785
    6. ' (' → logprob: -8.70561408996582
    7. ' ' → logprob: -8.83061408996582
    8. '(not' → logprob: -9.70561408996582
    9. '   ' → logprob: -10.08061408996582
    10. ' isinstance' → logprob: -10.33061408996582

Token 595: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9053602814674377
    2. '(' → logprob: -1.030360221862793
    3. ' isinstance' → logprob: -1.905360221862793
    4. '(is' → logprob: -2.655360221862793
    5. '(n' → logprob: -4.030360221862793
    6. 'is' → logprob: -6.530360221862793
    7. '1' → logprob: -8.655360221862793
    8. ' ' → logprob: -9.530360221862793
    9. '(type' → logprob: -10.030360221862793
    10. '((' → logprob: -10.155360221862793

Token 596: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6289584636688232
    2. '1' → logprob: -0.8789584636688232
    3. 'is' → logprob: -3.6289584636688232
    4. 'n' → logprob: -3.8789584636688232
    5. '(' → logprob: -6.503958702087402
    6. ' isinstance' → logprob: -6.753958702087402
    7. ' ' → logprob: -7.753958702087402
    8. '(n' → logprob: -7.753958702087402
    9. '2' → logprob: -8.003958702087402
    10. '(is' → logprob: -8.878958702087402

Token 597: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10022467374801636
    2. '<=' → logprob: -2.350224733352661
    3. 'and' → logprob: -11.600224494934082
    4. ' and' → logprob: -12.225224494934082
    5. ' ' → logprob: -13.600224494934082
    6. ',' → logprob: -13.975224494934082
    7. '%' → logprob: -14.350224494934082
    8. '<|end|>' → logprob: -15.100224494934082
    9. ' ≤' → logprob: -15.850224494934082
    10. ')<=' → logprob: -15.850224494934082

Token 598: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001584850688232109
    2. ' n' → logprob: -8.750158309936523
    3. '       ' → logprob: -18.625158309936523
    4. '           ' → logprob: -19.250158309936523
    5. '	n' → logprob: -20.250158309936523
    6. '(n' → logprob: -20.500158309936523
    7. '   ' → logprob: -21.000158309936523
    8. ' ' → logprob: -21.375158309936523
    9. '_n' → logprob: -21.875158309936523
    10. '```' → logprob: -22.500158309936523

Token 599: ' <=' (ID: 5017)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7895726561546326
    2. 'and' → logprob: -1.2895727157592773
    3. ' <=' → logprob: -1.7895727157592773
    4. '<=' → logprob: -2.2895727157592773
    5. '%' → logprob: -6.414572715759277
    6. ' %' → logprob: -7.539572715759277
    7. '```' → logprob: -11.289572715759277
    8. '           ' → logprob: -11.539572715759277
    9. ' ' → logprob: -12.039572715759277
    10. '[' → logprob: -12.164572715759277

Token 600: ' ' (ID: 220)
  Prédit: '99'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '99' → logprob: -0.9510493278503418
    2. '15' → logprob: -1.0760493278503418
    3. '999' → logprob: -2.201049327850342
    4. '100' → logprob: -2.451049327850342
    5. '101' → logprob: -3.951049327850342
    6. '29' → logprob: -4.576049327850342
    7. '19' → logprob: -4.826049327850342
    8. '49' → logprob: -5.451049327850342
    9. '31' → logprob: -5.701049327850342
    10. '25' → logprob: -5.826049327850342

Token 601: '15' (ID: 1055)
  Prédit: '999'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '999' → logprob: -1.127798080444336
    2. '99' → logprob: -1.252798080444336
    3. '15' → logprob: -1.627798080444336
    4. '100' → logprob: -1.752798080444336
    5. '101' → logprob: -5.877798080444336
    6. '29' → logprob: -6.127798080444336
    7. '49' → logprob: -6.252798080444336
    8. '499' → logprob: -6.502798080444336
    9. '199' → logprob: -6.627798080444336
    10. '19' → logprob: -6.752798080444336

Token 602: '):
' (ID: 1883)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005076141096651554
    2. 'and' → logprob: -5.380075931549072
    3. '):
' → logprob: -8.25507640838623
    4. ')' → logprob: -9.00507640838623
    5. '):' → logprob: -9.75507640838623
    6. ' ):
' → logprob: -12.25507640838623
    7. '       ' → logprob: -12.63007640838623
    8. ' )' → logprob: -13.00507640838623
    9. '           ' → logprob: -13.00507640838623
    10. ' ' → logprob: -14.25507640838623

Token 603: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5036895871162415
    2. ' or' → logprob: -1.1286895275115967
    3. ' and' → logprob: -2.8786895275115967
    4. ' raise' → logprob: -4.878689765930176
    5. 'and' → logprob: -5.253689765930176
    6. 'raise' → logprob: -6.003689765930176
    7. 'or' → logprob: -8.378689765930176
    8. ' return' → logprob: -9.128689765930176
    9. 'return' → logprob: -9.253689765930176
    10. ' if' → logprob: -9.253689765930176

Token 604: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.5907580852508545
    2. 'raise' (adapté à ' raise') → logprob: -0.8407580852508545
    3. 'return' → logprob: -4.840758323669434
    4. '           ' → logprob: -5.340758323669434
    5. ' return' → logprob: -6.215758323669434
    6. '	raise' → logprob: -11.715758323669434
    7. '
' → logprob: -13.340758323669434
    8. '            ' → logprob: -13.340758323669434
    9. '       ' → logprob: -13.590758323669434
    10. '               ' → logprob: -13.715758323669434

Token 605: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.023248272016644478
    2. ' Value' → logprob: -3.7732481956481934
    3. 'Assertion' → logprob: -14.023248672485352
    4. '(Value' → logprob: -14.523248672485352
    5. '	Value' → logprob: -14.773248672485352
    6. '_value' → logprob: -15.148248672485352
    7. '_Value' → logprob: -15.398248672485352
    8. '<Value' → logprob: -15.523248672485352
    9. 'value' → logprob: -16.27324867248535
    10. 'Runtime' → logprob: -16.39824867248535

Token 606: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00011164903844473884
    2. 'Value' → logprob: -9.12511157989502
    3. 'rror' → logprob: -12.87511157989502
    4. 'Val' → logprob: -16.500112533569336
    5. 'n' → logprob: -17.500112533569336
    6. '           ' → logprob: -18.125112533569336
    7. '   ' → logprob: -18.375112533569336
    8. 'r' → logprob: -19.375112533569336
    9. 'Warning' → logprob: -19.375112533569336
    10. '       ' → logprob: -20.000112533569336

Token 607: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0008333319565281272
    2. '(' → logprob: -7.125833511352539
    3. '('' → logprob: -10.750833511352539
    4. '(f' → logprob: -12.375833511352539
    5. '(
' → logprob: -12.875833511352539
    6. '       ' → logprob: -15.375833511352539
    7. '"' → logprob: -15.875833511352539
    8. '           ' → logprob: -16.37583351135254
    9. '   ' → logprob: -16.37583351135254
    10. '("'' → logprob: -16.62583351135254

Token 608: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17375953495502472
    2. '"' → logprob: -2.1737594604492188
    3. 'N' → logprob: -4.423759460449219
    4. 'Size' → logprob: -4.798759460449219
    5. '"N' → logprob: -5.298759460449219
    6. 'Input' → logprob: -5.423759460449219
    7. ''' → logprob: -5.798759460449219
    8. ''n' → logprob: -5.798759460449219
    9. 'Number' → logprob: -6.173759460449219
    10. ' n' → logprob: -6.298759460449219

Token 609: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.00035274302354082465
    2. 'must' → logprob: -8.12535285949707
    3. ' should' → logprob: -9.87535285949707
    4. '<|end|>' → logprob: -12.75035285949707
    5. ' is' → logprob: -14.75035285949707
    6. ' debe' → logprob: -14.87535285949707
    7. ' not' → logprob: -15.00035285949707
    8. ' needs' → logprob: -15.00035285949707
    9. ' out' → logprob: -15.37535285949707
    10. ' ' → logprob: -15.50035285949707

Token 610: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.00014084660506341606
    2. '<|end|>' → logprob: -9.125141143798828
    3. 'be' → logprob: -10.500141143798828
    4. ' ' → logprob: -13.875141143798828
    5. '>=' → logprob: -14.125141143798828
    6. ' not' → logprob: -14.250141143798828
    7. ' >=' → logprob: -14.625141143798828
    8. ' between' → logprob: -15.375141143798828
    9. '	be' → logprob: -15.375141143798828
    10. ' must' → logprob: -15.625141143798828

Token 611: ' between' (ID: 2870)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.20511145889759064
    2. 'an' → logprob: -2.830111503601074
    3. ' odd' → logprob: -2.955111503601074
    4. 'odd' → logprob: -3.205111503601074
    5. ' between' → logprob: -3.705111503601074
    6. 'between' → logprob: -5.080111503601074
    7. '3' → logprob: -5.955111503601074
    8. ' ' → logprob: -8.080111503601074
    9. '>=' → logprob: -10.830111503601074
    10. ' a' → logprob: -11.205111503601074

Token 612: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.003177952254191041
    2. ' ' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.878177642822266
    4. '```' → logprob: -16.753177642822266
    5. '1' → logprob: -18.003177642822266
    6. '  ' → logprob: -18.503177642822266
    7. '    ' → logprob: -19.065677642822266
    8. '4' → logprob: -19.753177642822266
    9. 'and' → logprob: -19.753177642822266
    10. '
' → logprob: -20.253177642822266

Token 613: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.125001907348633
    4. '1' → logprob: -19.000001907348633
    5. '```' → logprob: -19.625001907348633
    6. '
' → logprob: -20.375001907348633
    7. '  ' → logprob: -21.375001907348633
    8. '３' → logprob: -21.437501907348633
    9. '       ' → logprob: -21.687501907348633
    10. '4' → logprob: -21.750001907348633

Token 614: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10021023452281952
    2. 'and' → logprob: -2.350210189819336
    3. '<|end|>' → logprob: -12.725210189819336
    4. ' ' → logprob: -15.600210189819336
    5. '   ' → logprob: -16.350210189819336
    6. '```' → logprob: -16.475210189819336
    7. 'inclusive' → logprob: -17.100210189819336
    8. ',' → logprob: -17.225210189819336
    9. '	and' → logprob: -17.475210189819336
    10. ')' → logprob: -17.975210189819336

Token 615: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '
' → logprob: -16.375036239624023
    4. '1' → logprob: -17.250036239624023
    5. '   ' → logprob: -17.375036239624023
    6. '```' → logprob: -17.500036239624023
    7. '13' → logprob: -17.750036239624023
    8. ' fifteen' → logprob: -17.875036239624023
    9. '7' → logprob: -18.062536239624023
    10. '14' → logprob: -18.437536239624023

Token 616: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '
' → logprob: -16.875
    4. '1' → logprob: -17.5
    5. '99' → logprob: -17.625
    6. '13' → logprob: -18.25
    7. '```' → logprob: -18.25
    8. '14' → logprob: -18.75
    9. '   ' → logprob: -19.0
    10. '25' → logprob: -19.25

Token 617: ' inclusive' (ID: 29482)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.23492035269737244
    2. ' inclusive' → logprob: -1.7349203824996948
    3. 'inclusive' → logprob: -3.6099202632904053
    4. '.")' → logprob: -5.234920501708984
    5. ')")' → logprob: -8.734920501708984
    6. ' inclus' → logprob: -8.734920501708984
    7. ',' → logprob: -8.859920501708984
    8. '")
' → logprob: -10.234920501708984
    9. ' and' → logprob: -10.734920501708984
    10. ')' → logprob: -10.859920501708984

Token 618: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.25458207726478577
    2. ')")' → logprob: -1.5045820474624634
    3. '.")' → logprob: -6.754581928253174
    4. ')' → logprob: -6.879581928253174
    5. ')")
' → logprob: -8.254582405090332
    6. '")
' → logprob: -8.879582405090332
    7. '}")' → logprob: -10.504582405090332
    8. '       ' → logprob: -11.504582405090332
    9. ').' → logprob: -11.754582405090332
    10. ')"' → logprob: -12.629582405090332

Token 619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03709001466631889
    2. '<|end|>' → logprob: -3.4120900630950928
    3. '
' → logprob: -6.162089824676514
    4. '   ' → logprob: -6.912089824676514
    5. '<|end|>' → logprob: -8.787090301513672
    6. '           ' → logprob: -10.037090301513672
    7. '    
' → logprob: -11.037090301513672
    8. '        
' → logprob: -11.162090301513672
    9. '        ' → logprob: -11.537090301513672
    10. '    ' → logprob: -11.662090301513672

Token 620: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03539297729730606
    2. 'if' (adapté à ' if') → logprob: -3.910392999649048
    3. ' if' → logprob: -4.535392761230469
    4. '<|end|>' → logprob: -6.410392761230469
    5. 'return' → logprob: -6.910392761230469
    6. '   ' → logprob: -7.035392761230469
    7. 'def' → logprob: -9.285392761230469
    8. '           ' → logprob: -9.535392761230469
    9. '<|end|>' → logprob: -9.910392761230469
    10. 'and' → logprob: -10.160392761230469

Token 621: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47472071647644043
    2. ' n' → logprob: -0.9747207164764404
    3. '(n' → logprob: -7.4747209548950195
    4. ' (' → logprob: -10.47472095489502
    5. '	n' → logprob: -11.09972095489502
    6. '(' → logprob: -11.34972095489502
    7. ' ' → logprob: -12.09972095489502
    8. ' not' → logprob: -12.34972095489502
    9. '   ' → logprob: -12.72472095489502
    10. 'not' → logprob: -13.47472095489502

Token 622: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3868730664253235
    2. ' %' → logprob: -1.1368730068206787
    3. ' ' → logprob: -14.136873245239258
    4. '%
' → logprob: -15.011873245239258
    5. ' %
' → logprob: -15.261873245239258
    6. ' not' → logprob: -15.636873245239258
    7. ' ' → logprob: -15.886873245239258
    8. '==' → logprob: -16.261873245239258
    9. '   ' → logprob: -16.761873245239258
    10. 'not' → logprob: -16.761873245239258

Token 623: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016045158728957176
    2. ' ' → logprob: -4.141045093536377
    3. '3' → logprob: -12.766045570373535
    4. '
' → logprob: -12.766045570373535
    5. '1' → logprob: -13.141045570373535
    6. '==' → logprob: -13.266045570373535
    7. '4' → logprob: -15.141045570373535
    8. '```' → logprob: -15.266045570373535
    9. ' ==' → logprob: -15.641045570373535
    10. '   ' → logprob: -15.891045570373535

Token 624: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -11.750008583068848
    3. '1' → logprob: -15.250008583068848
    4. '==' → logprob: -16.37500762939453
    5. '3' → logprob: -17.37500762939453
    6. '
' → logprob: -17.50000762939453
    7. '```' → logprob: -17.50000762939453
    8. '4' → logprob: -17.87500762939453
    9. '!=' → logprob: -18.12500762939453
    10. '   ' → logprob: -18.50000762939453

Token 625: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02344416081905365
    2. ' ==' → logprob: -3.898444175720215
    3. '0' → logprob: -5.898444175720215
    4. '=' → logprob: -9.648444175720215
    5. '==
' → logprob: -9.898444175720215
    6. '!=' → logprob: -10.648444175720215
    7. '()==' → logprob: -12.273444175720215
    8. '===' → logprob: -12.648444175720215
    9. ')==' → logprob: -13.023444175720215
    10. '```' → logprob: -13.273444175720215

Token 626: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014166445471346378
    2. ' ' → logprob: -4.264166355133057
    3. '1' → logprob: -13.014166831970215
    4. '=' → logprob: -15.764166831970215
    5. '
' → logprob: -16.1391658782959
    6. '==' → logprob: -16.3266658782959
    7. '   ' → logprob: -16.6391658782959
    8. '```' → logprob: -16.7641658782959
    9. '2' → logprob: -17.3891658782959
    10. '

' → logprob: -18.1391658782959

Token 627: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.6312321753939614e-05
    2. '1' → logprob: -10.500036239624023
    3. ' ' → logprob: -11.750036239624023
    4. '
' → logprob: -15.187536239624023
    5. '2' → logprob: -15.687536239624023
    6. '```' → logprob: -16.312536239624023
    7. '۰' → logprob: -16.750036239624023
    8. '   ' → logprob: -16.937536239624023
    9. '00' → logprob: -17.187536239624023
    10. '٠' → logprob: -17.437536239624023

Token 628: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043915603309869766
    2. ':
' → logprob: -3.1689155101776123
    3. ' :' → logprob: -8.168915748596191
    4. '           ' → logprob: -8.293915748596191
    5. '       ' → logprob: -8.918915748596191
    6. ' ==' → logprob: -9.668915748596191
    7. '   ' → logprob: -10.418915748596191
    8. ',' → logprob: -10.543915748596191
    9. ' :
' → logprob: -10.668915748596191
    10. '==' → logprob: -10.918915748596191

Token 629: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07918686419725418
    2. ' raise' → logprob: -2.7041869163513184
    3. 'raise' → logprob: -4.704186916351318
    4. '	raise' → logprob: -9.82918643951416
    5. 'Raise' → logprob: -10.20418643951416
    6. '   ' → logprob: -10.20418643951416
    7. '       ' → logprob: -11.95418643951416
    8. '_raise' → logprob: -12.20418643951416
    9. '    ' → logprob: -13.20418643951416
    10. '          ' → logprob: -13.20418643951416

Token 630: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.004132422618567944
    2. 'raise' (adapté à ' raise') → logprob: -5.504132270812988
    3. '           ' → logprob: -10.004132270812988
    4. '	raise' → logprob: -11.879132270812988
    5. '            ' → logprob: -14.129132270812988
    6. '               ' → logprob: -14.879132270812988
    7. 'Raise' → logprob: -15.129132270812988
    8. '   ' → logprob: -15.629132270812988
    9. '_raise' → logprob: -15.754132270812988
    10. '       ' → logprob: -16.629133224487305

Token 631: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0004891689168289304
    2. ' Value' → logprob: -7.625489234924316
    3. 'Type' → logprob: -14.500489234924316
    4. ' ' → logprob: -15.750489234924316
    5. 'Runtime' → logprob: -15.750489234924316
    6. 'Not' → logprob: -16.12548828125
    7. 'Assertion' → logprob: -16.25048828125
    8. '	Value' → logprob: -16.75048828125
    9. '   ' → logprob: -17.00048828125
    10. '_value' → logprob: -17.75048828125

Token 632: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00031294001382775605
    2. 'rror' → logprob: -8.500312805175781
    3. 'Value' → logprob: -9.125312805175781
    4. '   ' → logprob: -15.625312805175781
    5. 'error' → logprob: -16.37531280517578
    6. '       ' → logprob: -16.87531280517578
    7. '           ' → logprob: -17.00031280517578
    8. ' ' → logprob: -17.12531280517578
    9. '  ' → logprob: -17.62531280517578
    10. 'Warning' → logprob: -17.87531280517578

Token 633: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.375001907348633
    3. '('' → logprob: -18.875001907348633
    4. '("'' → logprob: -19.000001907348633
    5. '(
' → logprob: -19.375001907348633
    6. ' ("' → logprob: -20.250001907348633
    7. '(f' → logprob: -20.625001907348633
    8. '   ' → logprob: -20.750001907348633
    9. '"' → logprob: -21.875001907348633
    10. '("_' → logprob: -22.500001907348633

Token 634: 'n' (ID: 77)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5818227529525757
    2. 'n' → logprob: -0.8318227529525757
    3. ''n' → logprob: -6.331822872161865
    4. ' n' → logprob: -6.456822872161865
    5. ' "' → logprob: -6.956822872161865
    6. 'Value' → logprob: -7.206822872161865
    7. 'Only' → logprob: -8.081822395324707
    8. 'Odd' → logprob: -9.206822395324707
    9. 'Even' → logprob: -9.456822395324707
    10. '   ' → logprob: -9.581822395324707

Token 635: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.0025038402527570724
    2. 'must' → logprob: -6.002503871917725
    3. ' ' → logprob: -11.252503395080566
    4. ' %' → logprob: -12.752503395080566
    5. ' should' → logprob: -12.877503395080566
    6. '%' → logprob: -12.877503395080566
    7. 'Must' → logprob: -13.002503395080566
    8. ')' → logprob: -13.377503395080566
    9. '
' → logprob: -14.127503395080566
    10. ' not' → logprob: -14.377503395080566

Token 636: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.00012023169983876869
    2. ' not' → logprob: -9.125120162963867
    3. ' ' → logprob: -11.750120162963867
    4. '<|end|>' → logprob: -13.875120162963867
    5. ' must' → logprob: -14.250120162963867
    6. ')' → logprob: -14.500120162963867
    7. '%' → logprob: -15.250120162963867
    8. ' continue' → logprob: -15.750120162963867
    9. ' raise' → logprob: -15.750120162963867
    10. ' have' → logprob: -15.750120162963867

Token 637: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.4293626844882965
    2. ' odd' → logprob: -1.0543626546859741
    3. ' an' → logprob: -7.429362773895264
    4. 'an' → logprob: -11.054362297058105
    5. '
' → logprob: -11.179362297058105
    6. '1' → logprob: -11.304362297058105
    7. ' ' → logprob: -11.804362297058105
    8. 'n' → logprob: -12.804362297058105
    9. ')' → logprob: -12.804362297058105
    10. '3' → logprob: -12.929362297058105

Token 638: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -4.906711546937004e-05
    2. '.")' → logprob: -10.875048637390137
    3. ')' → logprob: -11.500048637390137
    4. '")
' → logprob: -11.750048637390137
    5. ' for' → logprob: -12.500048637390137
    6. ')")' → logprob: -12.625048637390137
    7. '<|end|>' → logprob: -13.375048637390137
    8. '"' → logprob: -14.250048637390137
    9. ' ")' → logprob: -14.375048637390137
    10. '}")' → logprob: -14.875048637390137

Token 639: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28890901803970337
    2. '<|end|>' → logprob: -1.4139089584350586
    3. 'def' → logprob: -5.788908958435059
    4. '<|end|>' → logprob: -5.913908958435059
    5. ' ' → logprob: -7.663908958435059
    6. '       ' → logprob: -8.163908958435059
    7. '
' → logprob: -8.163908958435059
    8. '    
' → logprob: -8.288908958435059
    9. '```' → logprob: -8.538908958435059
    10. ' def' → logprob: -9.038908958435059

Token 640: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00010413920972496271
    2. ' def' → logprob: -9.250103950500488
    3. '   ' → logprob: -11.750103950500488
    4. '@' → logprob: -16.500104904174805
    5. '
' → logprob: -18.500104904174805
    6. '	def' → logprob: -19.250104904174805
    7. '@property' → logprob: -20.000104904174805
    8. '```' → logprob: -20.000104904174805
    9. '    
' → logprob: -20.500104904174805
    10. 'async' → logprob: -20.750104904174805

Token 641: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.050059664994478226
    2. 'generate' → logprob: -3.1750595569610596
    3. 'create' → logprob: -5.800059795379639
    4. 'run' → logprob: -5.925059795379639
    5. ' process' → logprob: -7.050059795379639
    6. 'compute' → logprob: -8.80005931854248
    7. 'solve' → logprob: -9.30005931854248
    8. ' generate' → logprob: -9.67505931854248
    9. 'add' → logprob: -10.30005931854248
    10. 'build' → logprob: -10.42505931854248

Token 642: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004777807276695967
    2. '(' → logprob: -5.379777908325195
    3. 'self' → logprob: -9.629777908325195
    4. '   ' → logprob: -10.629777908325195
    5. '_line' → logprob: -11.129777908325195
    6. ' (' → logprob: -11.379777908325195
    7. '(
' → logprob: -11.379777908325195
    8. '(n' → logprob: -11.504777908325195
    9. '_self' → logprob: -12.504777908325195
    10. '_n' → logprob: -12.629777908325195

Token 643: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000889067945536226
    2. ',n' → logprob: -7.750889301300049
    3. 'self' → logprob: -7.875889301300049
    4. 'n' → logprob: -10.50088882446289
    5. ' ,' → logprob: -10.62588882446289
    6. '_n' → logprob: -12.00088882446289
    7. ',self' → logprob: -12.12588882446289
    8. '):
' → logprob: -12.50088882446289
    9. ',
' → logprob: -12.75088882446289
    10. '   ' → logprob: -13.12588882446289

Token 644: ' ns' (ID: 18343)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1015857607126236
    2. ' n' → logprob: -2.351585865020752
    3. 'input' → logprob: -7.726585865020752
    4. 'self' → logprob: -8.476585388183594
    5. '   ' → logprob: -8.476585388183594
    6. ' input' → logprob: -8.851585388183594
    7. 'inputs' → logprob: -8.976585388183594
    8. ' inputs' → logprob: -10.226585388183594
    9. ' self' → logprob: -10.476585388183594
    10. ')' → logprob: -10.601585388183594

Token 645: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03592156246304512
    2. '):
' → logprob: -3.535921573638916
    3. ':' → logprob: -5.285921573638916
    4. ' ):' → logprob: -7.785921573638916
    5. 'self' → logprob: -8.035921096801758
    6. ')' → logprob: -8.910921096801758
    7. '   ' → logprob: -9.785921096801758
    8. '_list' → logprob: -10.285921096801758
    9. '[' → logprob: -10.910921096801758
    10. '       ' → logprob: -11.035921096801758

Token 646: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04339545965194702
    2. ' for' → logprob: -3.293395519256592
    3. 'for' → logprob: -5.918395519256592
    4. ':' → logprob: -6.168395519256592
    5. ',' → logprob: -8.543395042419434
    6. '```' → logprob: -9.043395042419434
    7. ':
' → logprob: -9.668395042419434
    8. '<|end|>' → logprob: -9.793395042419434
    9. '        
' → logprob: -10.418395042419434
    10. '   ' → logprob: -10.543395042419434

Token 647: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2588832676410675
    2. 'for' (adapté à ' for') → logprob: -2.008883237838745
    3. '       ' → logprob: -2.508883237838745
    4. ' results' → logprob: -5.383883476257324
    5. 'results' → logprob: -5.508883476257324
    6. 'self' → logprob: -6.133883476257324
    7. ' self' → logprob: -6.508883476257324
    8. 'result' → logprob: -8.633883476257324
    9. ' result' → logprob: -9.883883476257324
    10. '
' → logprob: -10.508883476257324

Token 648: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.014163747429847717
    2. 'n' → logprob: -4.264163970947266
    3. '	n' → logprob: -15.889163970947266
    4. '_n' → logprob: -16.389163970947266
    5. '       ' → logprob: -17.514163970947266
    6. '   ' → logprob: -17.639163970947266
    7. '```' → logprob: -17.764163970947266
    8. ',n' → logprob: -18.889163970947266
    9. '$n' → logprob: -18.889163970947266
    10. ')n' → logprob: -19.139163970947266

Token 649: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008615515194833279
    2. 'in' → logprob: -4.758615493774414
    3. ' ' → logprob: -14.633615493774414
    4. '	in' → logprob: -15.633615493774414
    5. '_in' → logprob: -16.008615493774414
    6. '   ' → logprob: -16.508615493774414
    7. 'n' → logprob: -17.008615493774414
    8. '_' → logprob: -17.008615493774414
    9. '  ' → logprob: -17.633615493774414
    10. 'space' → logprob: -17.633615493774414

Token 650: ' ns' (ID: 18343)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.023251185193657875
    2. ' ns' → logprob: -3.7732512950897217
    3. '(ns' → logprob: -12.3982515335083
    4. '	ns' → logprob: -14.2732515335083
    5. '   ' → logprob: -14.5232515335083
    6. 'n' → logprob: -15.8982515335083
    7. '_ns' → logprob: -16.273250579833984
    8. 'map' → logprob: -17.148250579833984
    9. '       ' → logprob: -17.148250579833984
    10. '/ns' → logprob: -17.398250579833984

Token 651: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35112661123275757
    2. ':
' → logprob: -1.2261266708374023
    3. '       ' → logprob: -6.601126670837402
    4. ',' → logprob: -7.476126670837402
    5. '):
' → logprob: -8.101126670837402
    6. '           ' → logprob: -9.226126670837402
    7. '.' → logprob: -9.476126670837402
    8. '():
' → logprob: -9.851126670837402
    9. '   ' → logprob: -10.226126670837402
    10. '<|end|>' → logprob: -10.226126670837402

Token 652: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002570481738075614
    2. 'self' → logprob: -8.75025749206543
    3. ' self' → logprob: -9.75025749206543
    4. '```' → logprob: -10.87525749206543
    5. '
' → logprob: -12.00025749206543
    6. ' try' → logprob: -13.00025749206543
    7. '<|end|>' → logprob: -13.12525749206543
    8. 'try' → logprob: -13.37525749206543
    9. '#' → logprob: -13.87525749206543
    10. '	       ' → logprob: -14.00025749206543

Token 653: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5115751028060913
    2. 'try' → logprob: -1.1365751028060913
    3. '           ' → logprob: -3.636575222015381
    4. ' self' → logprob: -3.636575222015381
    5. ' try' → logprob: -4.261575222015381
    6. 'Magic' → logprob: -4.886575222015381
    7. ' Magic' → logprob: -5.386575222015381
    8. '```' → logprob: -8.261574745178223
    9. '               ' → logprob: -8.886574745178223
    10. '
' → logprob: -9.636574745178223

Token 654: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5960918664932251
    2. 'n' → logprob: -0.9710918664932251
    3. ' not' → logprob: -3.2210917472839355
    4. ' isinstance' → logprob: -3.5960917472839355
    5. 'not' → logprob: -6.9710917472839355
    6. ' any' → logprob: -7.5960917472839355
    7. ' type' → logprob: -8.096092224121094
    8. ' ' → logprob: -8.471092224121094
    9. 'type' → logprob: -8.596092224121094
    10. ' self' → logprob: -8.846092224121094

Token 655: ' ==' (ID: 951)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.9633911848068237
    2. '%' → logprob: -1.2133911848068237
    3. ' not' → logprob: -1.9633911848068237
    4. ' is' → logprob: -2.2133913040161133
    5. ' in' → logprob: -3.8383913040161133
    6. ' ==' → logprob: -3.9633913040161133
    7. ' <' → logprob: -4.838391304016113
    8. '<|end|>' → logprob: -5.088391304016113
    9. ' <=' → logprob: -5.088391304016113
    10. ' >' → logprob: -5.713391304016113

Token 656: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04214593768119812
    2. '-' → logprob: -4.042145729064941
    3. ' ' → logprob: -4.417145729064941
    4. '1' → logprob: -5.292145729064941
    5. '"' → logprob: -6.292145729064941
    6. '3' → logprob: -6.417145729064941
    7. ''' → logprob: -7.667145729064941
    8. '2' → logprob: -8.042145729064941
    9. '7' → logprob: -8.292145729064941
    10. ' -' → logprob: -8.417145729064941

Token 657: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.024610882624983788
    2. '-' → logprob: -3.774610996246338
    3. ' ' → logprob: -7.149610996246338
    4. '1' → logprob: -8.39961051940918
    5. '"' → logprob: -9.27461051940918
    6. ' -' → logprob: -10.02461051940918
    7. ''' → logprob: -10.27461051940918
    8. '99' → logprob: -10.77461051940918
    9. '42' → logprob: -10.89961051940918
    10. '   ' → logprob: -11.39961051940918

Token 658: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47415032982826233
    2. ':' → logprob: -0.9741503000259399
    3. ':return' → logprob: -9.599150657653809
    4. ':
' → logprob: -13.099150657653809
    5. ' :
' → logprob: -13.474150657653809
    6. ' :' → logprob: -13.849150657653809
    7. ':

' → logprob: -14.599150657653809
    8. ' break' → logprob: -15.849150657653809
    9. ' or' → logprob: -16.474149703979492
    10. ' and' → logprob: -16.599149703979492

Token 659: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.64970643306151e-05
    2. '           ' → logprob: -10.250086784362793
    3. '	           ' → logprob: -10.750086784362793
    4. '                   ' → logprob: -11.750086784362793
    5. ' break' → logprob: -12.250086784362793
    6. '              ' → logprob: -12.750086784362793
    7. '   ' → logprob: -13.250086784362793
    8. ':' → logprob: -13.250086784362793
    9. ' return' → logprob: -13.375086784362793
    10. ':
' → logprob: -13.500086784362793

Token 660: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.4011914134025574
    2. ' break' → logprob: -1.4011914730072021
    3. '               ' → logprob: -2.651191473007202
    4. '           ' → logprob: -4.526191234588623
    5. 'return' → logprob: -6.151191234588623
    6. '                   ' → logprob: -8.276191711425781
    7. '	break' → logprob: -8.526191711425781
    8. ' return' → logprob: -8.651191711425781
    9. '	           ' → logprob: -11.526191711425781
    10. '_break' → logprob: -12.026191711425781

Token 661: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002143716439604759
    2. '
' → logprob: -6.377143859863281
    3. '            
' → logprob: -7.752143859863281
    4. '<|end|>' → logprob: -13.002143859863281
    5. '    
' → logprob: -13.127143859863281
    6. '               ' → logprob: -13.502143859863281
    7. '  
' → logprob: -13.877143859863281
    8. ',' → logprob: -14.002143859863281
    9. '          ' → logprob: -14.252143859863281
    10. '                
' → logprob: -14.502143859863281

Token 662: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008125269785523415
    2. '
' → logprob: -4.883125305175781
    3. '            
' → logprob: -7.633125305175781
    4. '<|end|>' → logprob: -11.258125305175781
    5. '    
' → logprob: -12.133125305175781
    6. '  
' → logprob: -12.383125305175781
    7. '        
' → logprob: -13.008125305175781
    8. '               ' → logprob: -13.258125305175781
    9. '            

' → logprob: -14.008125305175781
    10. ',' → logprob: -14.008125305175781

Token 663: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08351468294858932
    2. 'try' → logprob: -2.70851469039917
    3. ' self' → logprob: -5.08351469039917
    4. '           ' → logprob: -5.45851469039917
    5. '       ' → logprob: -6.33351469039917
    6. 'Magic' → logprob: -7.33351469039917
    7. ' try' → logprob: -7.83351469039917
    8. ' Magic' → logprob: -8.958514213562012
    9. '```' → logprob: -10.583514213562012
    10. '
' → logprob: -11.208514213562012

Token 664: '.validate' (ID: 31577)
  Prédit: '.validate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.validate' → logprob: -0.0014668923104181886
    2. '.' → logprob: -6.751466751098633
    3. ' .' → logprob: -8.126466751098633
    4. '   ' → logprob: -15.751466751098633
    5. '.process' → logprob: -15.751466751098633
    6. 'validate' → logprob: -16.001466751098633
    7. '.verify' → logprob: -16.251466751098633
    8. '.Validate' → logprob: -16.251466751098633
    9. '.ensure' → logprob: -16.751466751098633
    10. '.perform' → logprob: -17.001466751098633

Token 665: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.5048530030981055e-06
    2. 'n' → logprob: -13.500001907348633
    3. '_' → logprob: -17.500001907348633
    4. '```' → logprob: -18.625001907348633
    5. '
' → logprob: -18.750001907348633
    6. ' _' → logprob: -19.125001907348633
    7. 's' → logprob: -19.375001907348633
    8. '(n' → logprob: -19.500001907348633
    9. '_x' → logprob: -19.750001907348633
    10. '\' → logprob: -20.125001907348633

Token 666: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.5941604690160602e-05
    2. '(' → logprob: -10.750025749206543
    3. ' (' → logprob: -12.750025749206543
    4. 'n' → logprob: -13.750025749206543
    5. '(
' → logprob: -14.875025749206543
    6. ' n' → logprob: -16.25002670288086
    7. '
' → logprob: -17.75002670288086
    8. '(num' → logprob: -19.37502670288086
    9. ',n' → logprob: -19.50002670288086
    10. '(abs' → logprob: -19.50002670288086

Token 667: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004635891877114773
    2. '
' → logprob: -5.879635810852051
    3. ')' → logprob: -6.754635810852051
    4. ')
' → logprob: -8.25463581085205
    5. '            
' → logprob: -8.75463581085205
    6. ',' → logprob: -9.37963581085205
    7. '       ' → logprob: -9.62963581085205
    8. '               ' → logprob: -10.12963581085205
    9. '<|end|>' → logprob: -11.00463581085205
    10. '),' → logprob: -11.87963581085205

Token 668: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008682293118909001
    2. '       ' → logprob: -7.375868320465088
    3. '
' → logprob: -8.87586784362793
    4. 'factory' → logprob: -10.25086784362793
    5. 'square' → logprob: -11.12586784362793
    6. ' factory' → logprob: -11.87586784362793
    7. '            
' → logprob: -12.25086784362793
    8. '        
' → logprob: -12.37586784362793
    9. '```' → logprob: -12.37586784362793
    10. ' f' → logprob: -12.50086784362793

Token 669: ' factory' (ID: 14560)
  Prédit: 'factory'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factory' (adapté à ' factory') → logprob: -0.07321326434612274
    2. ' factory' → logprob: -2.9482133388519287
    3. 'ms' → logprob: -4.19821310043335
    4. '           ' → logprob: -6.07321310043335
    5. ' ms' → logprob: -7.44821310043335
    6. 'magic' → logprob: -8.948213577270508
    7. 'fact' → logprob: -10.073213577270508
    8. ' magic' → logprob: -10.698213577270508
    9. 'f' → logprob: -11.073213577270508
    10. 'mf' → logprob: -11.823213577270508

Token 670: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858794063329697
    2. '=' → logprob: -3.0485880374908447
    3. ' ' → logprob: -15.923587799072266
    4. '_factory' → logprob: -16.548587799072266
    5. 'Factory' → logprob: -16.798587799072266
    6. '.' → logprob: -16.923587799072266
    7. '=create' → logprob: -17.048587799072266
    8. '  ' → logprob: -17.298587799072266
    9. '	' → logprob: -17.423587799072266
    10. '   ' → logprob: -17.798587799072266

Token 671: ' Magic' (ID: 29113)
  Prédit: 'Magic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Magic' → logprob: -0.004078758880496025
    2. ' Magic' → logprob: -5.5040788650512695
    3. 'Mag' → logprob: -14.75407886505127
    4. '_magic' → logprob: -19.754077911376953
    5. 'Mage' → logprob: -20.129077911376953
    6. 'MAG' → logprob: -20.379077911376953
    7. '   ' → logprob: -20.879077911376953
    8. ' ' → logprob: -21.129077911376953
    9. 'Memory' → logprob: -21.379077911376953
    10. 'magic' → logprob: -21.379077911376953

Token 672: 'Square' (ID: 36631)
  Prédit: 'Square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Square' → logprob: 0.0
    2. ' Square' → logprob: -17.375
    3. 'Squ' → logprob: -18.25
    4. '_square' → logprob: -19.0
    5. 'Cube' → logprob: -19.25
    6. 'S' → logprob: -19.625
    7. 'Magic' → logprob: -20.125
    8. 'Sq' → logprob: -20.25
    9. 'Squares' → logprob: -20.375
    10. '
' → logprob: -20.75

Token 673: 'Factory' (ID: 4870)
  Prédit: 'Factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factory' → logprob: -4.320199877838604e-07
    2. 'Factor' → logprob: -15.25
    3. 'Fact' → logprob: -16.5
    4. 'factory' → logprob: -17.5
    5. '_factory' → logprob: -20.0
    6. 'Fac' → logprob: -20.25
    7. ' Factory' → logprob: -21.25
    8. ' factory' → logprob: -21.75
    9. 'Square' → logprob: -21.875
    10. '(factory' → logprob: -21.875

Token 674: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.1888679839321412e-05
    2. '(' → logprob: -10.875021934509277
    3. ' (' → logprob: -13.250021934509277
    4. 'n' → logprob: -14.625021934509277
    5. '(
' → logprob: -14.625021934509277
    6. ' =' → logprob: -17.00002098083496
    7. 'Factory' → logprob: -18.00002098083496
    8. '   ' → logprob: -18.12502098083496
    9. 'factory' → logprob: -18.12502098083496
    10. '
' → logprob: -18.25002098083496

Token 675: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5762810707092285
    2. ')' → logprob: -0.8262810707092285
    3. ').' → logprob: -8.95128059387207
    4. '.generate' → logprob: -9.32628059387207
    5. ')
' → logprob: -9.32628059387207
    6. '=' → logprob: -11.57628059387207
    7. '           ' → logprob: -11.95128059387207
    8. ' =' → logprob: -12.07628059387207
    9. ' )
' → logprob: -12.57628059387207
    10. ')

' → logprob: -12.95128059387207

Token 676: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03918236121535301
    2. 'square' → logprob: -3.289182424545288
    3. ' square' → logprob: -6.914182186126709
    4. '       ' → logprob: -10.164182662963867
    5. 'result' → logprob: -10.164182662963867
    6. '   ' → logprob: -11.164182662963867
    7. '<|end|>' → logprob: -11.289182662963867
    8. 'magic' → logprob: -12.164182662963867
    9. '	       ' → logprob: -12.164182662963867
    10. '```' → logprob: -12.664182662963867

Token 677: ' square' (ID: 13749)
  Prédit: 'square'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'square' (adapté à ' square') → logprob: -0.0025833859108388424
    2. ' square' → logprob: -6.0025835037231445
    3. 'magic' → logprob: -10.127583503723145
    4. '           ' → logprob: -10.502583503723145
    5. 'result' → logprob: -10.627583503723145
    6. 'sq' → logprob: -12.627583503723145
    7. 'factory' → logprob: -13.002583503723145
    8. '               ' → logprob: -13.377583503723145
    9. '.square' → logprob: -13.377583503723145
    10. '(square' → logprob: -13.627583503723145

Token 678: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141547918319702
    2. '=' → logprob: -1.7014155387878418
    3. ' ' → logprob: -14.326415061950684
    4. 's' → logprob: -14.826415061950684
    5. ' =
' → logprob: -15.451415061950684
    6. '.' → logprob: -15.451415061950684
    7. '=
' → logprob: -15.701415061950684
    8. 'square' → logprob: -15.826415061950684
    9. '=s' → logprob: -15.951415061950684
    10. '   ' → logprob: -16.576416015625

Token 679: ' factory' (ID: 14560)
  Prédit: 'factory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factory' → logprob: -0.07889331132173538
    2. ' factory' → logprob: -2.5788934230804443
    3. 'Factory' → logprob: -13.953893661499023
    4. '.factory' → logprob: -14.078893661499023
    5. '(factory' → logprob: -14.078893661499023
    6. 'fact' → logprob: -15.203893661499023
    7. '   ' → logprob: -15.453893661499023
    8. 'factor' → logprob: -15.578893661499023
    9. '_factory' → logprob: -15.578893661499023
    10. '           ' → logprob: -17.453893661499023

Token 680: '.generate' (ID: 33917)
  Prédit: '.generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.generate' → logprob: -0.00012689977302215993
    2. '.' → logprob: -9.000126838684082
    3. 'generate' → logprob: -12.625126838684082
    4. ' .' → logprob: -16.6251277923584
    5. '   ' → logprob: -18.3751277923584
    6. '.create' → logprob: -18.6251277923584
    7. '生成' → logprob: -19.7501277923584
    8. '.Generate' → logprob: -20.3751277923584
    9. 'enerate' → logprob: -20.8751277923584
    10. ' generate' → logprob: -20.8751277923584

Token 681: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032206105533987284
    2. '
' → logprob: -5.753220558166504
    3. '<|end|>' → logprob: -10.878220558166504
    4. '       ' → logprob: -12.003220558166504
    5. '            
' → logprob: -12.253220558166504
    6. ',' → logprob: -12.378220558166504
    7. '
' → logprob: -13.253220558166504
    8. '               ' → logprob: -13.753220558166504
    9. '<|end|>' → logprob: -14.003220558166504
    10. '                   ' → logprob: -14.378220558166504

Token 682: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019483851792756468
    2. 'printer' → logprob: -9.000194549560547
    3. ' printer' → logprob: -9.625194549560547
    4. '       ' → logprob: -13.625194549560547
    5. '            
' → logprob: -14.125194549560547
    6. '	       ' → logprob: -14.250194549560547
    7. '
' → logprob: -14.625194549560547
    8. 'print' → logprob: -15.125194549560547
    9. 'Printer' → logprob: -15.500194549560547
    10. '               ' → logprob: -15.500194549560547

Token 683: ' self' (ID: 1051)
  Prédit: 'printer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'printer' → logprob: -0.001323691918514669
    2. 'self' (adapté à ' self') → logprob: -6.751323699951172
    3. ' printer' → logprob: -9.376323699951172
    4. '           ' → logprob: -9.626323699951172
    5. 'pr' → logprob: -13.876323699951172
    6. 'formatter' → logprob: -14.501323699951172
    7. ' self' → logprob: -14.876323699951172
    8. 'Printer' → logprob: -15.501323699951172
    9. '       ' → logprob: -15.626323699951172
    10. '               ' → logprob: -15.751323699951172

Token 684: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -0.0012818991672247648
    2. 'results' → logprob: -6.75128173828125
    3. '.square' → logprob: -10.00128173828125
    4. '.' → logprob: -10.75128173828125
    5. '.print' → logprob: -12.00128173828125
    6. ' results' → logprob: -12.25128173828125
    7. ' .' → logprob: -12.37628173828125
    8. '.
' → logprob: -12.50128173828125
    9. 'square' → logprob: -12.50128173828125
    10. '
' → logprob: -12.62628173828125

Token 685: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00024156268045771867
    2. '.' → logprob: -8.37524127960205
    3. ' .' → logprob: -12.00024127960205
    4. '.extend' → logprob: -12.62524127960205
    5. '.app' → logprob: -13.75024127960205
    6. '           ' → logprob: -15.75024127960205
    7. 'append' → logprob: -16.125242233276367
    8. '.ap' → logprob: -17.000242233276367
    9. '_append' → logprob: -17.250242233276367
    10. '.clear' → logprob: -17.375242233276367

Token 686: '(square' (ID: 180503)
  Prédit: '(square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(square' → logprob: -0.1314568668603897
    2. '((' → logprob: -2.1314568519592285
    3. '(M' → logprob: -6.0064568519592285
    4. '(s' → logprob: -6.3814568519592285
    5. '(' → logprob: -8.381457328796387
    6. 'square' → logprob: -9.131457328796387
    7. '(
' → logprob: -12.131457328796387
    8. '(S' → logprob: -12.631457328796387
    9. '(m' → logprob: -12.881457328796387
    10. ' square' → logprob: -13.381457328796387

Token 687: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009169317781925201
    2. '<|end|>' → logprob: -4.759169101715088
    3. ')
' → logprob: -7.759169101715088
    4. '<|end|>' → logprob: -9.384169578552246
    5. '           ' → logprob: -11.009169578552246
    6. ')return' → logprob: -12.384169578552246
    7. '
' → logprob: -12.384169578552246
    8. ' )' → logprob: -13.009169578552246
    9. '       ' → logprob: -13.009169578552246
    10. ').' → logprob: -13.009169578552246

Token 688: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 689: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00021772195759695023
    2. ' def' → logprob: -8.87521743774414
    3. '<|end|>' → logprob: -9.62521743774414
    4. '   ' → logprob: -11.75021743774414
    5. '```' → logprob: -13.37521743774414
    6. '	def' → logprob: -14.25021743774414
    7. '<|end|>' → logprob: -14.37521743774414
    8. '
' → logprob: -14.62521743774414
    9. 'return' → logprob: -15.75021743774414
    10. '#' → logprob: -15.87521743774414

Token 690: ' output' (ID: 4733)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.3974491357803345
    2. 'print' → logprob: -1.1474491357803345
    3. 'output' → logprob: -5.272449016571045
    4. 'format' → logprob: -6.147449016571045
    5. '__' → logprob: -6.397449016571045
    6. 'display' → logprob: -7.022449016571045
    7. 'clear' → logprob: -7.522449016571045
    8. 'generate' → logprob: -10.522449493408203
    9. 'formatted' → logprob: -10.772449493408203
    10. 'retrieve' → logprob: -11.022449493408203

Token 691: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011284107313258573
    2. '(' → logprob: -9.250112533569336
    3. 'self' → logprob: -11.250112533569336
    4. '   ' → logprob: -13.750112533569336
    5. ' (' → logprob: -14.750112533569336
    6. '_(' → logprob: -14.750112533569336
    7. 'def' → logprob: -15.125112533569336
    8. '(
' → logprob: -15.125112533569336
    9. '_' → logprob: -15.250112533569336
    10. 's' → logprob: -15.875112533569336

Token 692: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06004183739423752
    2. '):
' → logprob: -3.060041904449463
    3. 'self' → logprob: -5.185041904449463
    4. ',' → logprob: -6.060041904449463
    5. ')' → logprob: -6.310041904449463
    6. '(self' → logprob: -6.935041904449463
    7. ')_' → logprob: -7.810041904449463
    8. '   ' → logprob: -9.060041427612305
    9. '):

' → logprob: -10.435041427612305
    10. ',self' → logprob: -10.810041427612305

Token 693: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01177346333861351
    2. ' for' → logprob: -4.761773586273193
    3. 'for' → logprob: -7.011773586273193
    4. ' lines' → logprob: -7.136773586273193
    5. '[]' → logprob: -7.386773586273193
    6. '[' → logprob: -8.136773109436035
    7. 'result' → logprob: -8.886773109436035
    8. '   ' → logprob: -10.011773109436035
    9. ' []' → logprob: -10.136773109436035
    10. 'return' → logprob: -10.261773109436035

Token 694: ' return' (ID: 622)
  Prédit: 'outputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outputs' → logprob: -0.4366242289543152
    2. 'output' → logprob: -1.18662428855896
    3. 'return' (adapté à ' return') → logprob: -3.43662428855896
    4. 'lines' → logprob: -5.311624050140381
    5. 'for' → logprob: -5.311624050140381
    6. 'result' → logprob: -6.061624050140381
    7. ' outputs' → logprob: -6.686624050140381
    8. '       ' → logprob: -6.936624050140381
    9. 'results' → logprob: -7.061624050140381
    10. 'out' → logprob: -7.186624050140381

Token 695: ' "\' (ID: 6512)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"\' → logprob: -0.004267388954758644
    2. ' "\' → logprob: -5.62926721572876
    3. '[' → logprob: -7.87926721572876
    4. ''\' → logprob: -8.504267692565918
    5. '[
' → logprob: -10.629267692565918
    6. 'self' → logprob: -10.754267692565918
    7. '"' → logprob: -10.754267692565918
    8. '("\' → logprob: -12.379267692565918
    9. '""' → logprob: -12.754267692565918
    10. '\n' → logprob: -13.004267692565918

Token 696: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.36574100604048e-06
    2. '\n' → logprob: -12.375004768371582
    3. '"\' → logprob: -16.375003814697266
    4. '
' → logprob: -17.000003814697266
    5. '\' → logprob: -19.875003814697266
    6. '"' → logprob: -20.000003814697266
    7. ' n' → logprob: -20.000003814697266
    8. '("\' → logprob: -20.125003814697266
    9. '`\' → logprob: -20.250003814697266
    10. '

' → logprob: -20.500003814697266

Token 697: '\n' (ID: 3392)
  Prédit: '\n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.0032111038453876972
    2. '".' → logprob: -5.75321102142334
    3. '"\' → logprob: -11.37821102142334
    4. '---' → logprob: -11.62821102142334
    5. '.join' → logprob: -12.50321102142334
    6. '"' → logprob: -13.12821102142334
    7. '====' → logprob: -13.37821102142334
    8. 'n' → logprob: -13.50321102142334
    9. '
' → logprob: -14.00321102142334
    10. '""' → logprob: -14.50321102142334

Token 698: '".' (ID: 4050)
  Prédit: '".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.0015418806578963995
    2. '\n' → logprob: -6.501542091369629
    3. '"' → logprob: -10.501542091369629
    4. '").' → logprob: -11.751542091369629
    5. '---' → logprob: -13.126542091369629
    6. '"\' → logprob: -14.251542091369629
    7. '```' → logprob: -15.251542091369629
    8. '===' → logprob: -15.501542091369629
    9. '"""' → logprob: -15.501542091369629
    10. '""' → logprob: -15.626542091369629

Token 699: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.7432603272027336e-06
    2. '.join' → logprob: -14.125001907348633
    3. ' join' → logprob: -14.625001907348633
    4. '".' → logprob: -15.250001907348633
    5. '(join' → logprob: -16.000001907348633
    6. '```' → logprob: -18.000001907348633
    7. 'j' → logprob: -18.125001907348633
    8. '.' → logprob: -18.250001907348633
    9. '"' → logprob: -18.250001907348633
    10. '<|end|>' → logprob: -18.500001907348633

Token 700: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0033155500423163176
    2. 'Magic' → logprob: -6.878315448760986
    3. '(
' → logprob: -7.128315448760986
    4. '([' → logprob: -7.378315448760986
    5. '(' → logprob: -8.128315925598145
    6. '('\' → logprob: -8.753315925598145
    7. '("\' → logprob: -9.378315925598145
    8. '("' → logprob: -9.628315925598145
    9. '(self' → logprob: -9.628315925598145
    10. '('' → logprob: -9.628315925598145

Token 701: 'agic' (ID: 52619)
  Prédit: 'agic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agic' → logprob: -0.063297338783741
    2. 'Magic' → logprob: -2.8132972717285156
    3. '"' → logprob: -7.813297271728516
    4. '"\' → logprob: -7.938297271728516
    5. ' Magic' → logprob: -8.063297271728516
    6. 'ag' → logprob: -9.313297271728516
    7. 'str' → logprob: -10.813297271728516
    8. '(M' → logprob: -10.938297271728516
    9. 'ethod' → logprob: -11.063297271728516
    10. 'agy' → logprob: -11.188297271728516

Token 702: 'Square' (ID: 36631)
  Prédit: 'Square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Square' → logprob: -3.128163257315464e-07
    2. ' Square' → logprob: -16.5
    3. '_square' → logprob: -16.625
    4. 'Squares' → logprob: -17.25
    5. 'square' → logprob: -17.625
    6. 'Squ' → logprob: -18.0
    7. 'quare' → logprob: -18.625
    8. 'Sq' → logprob: -19.125
    9. 'S' → logprob: -19.25
    10. 'Magic' → logprob: -20.125

Token 703: 'Printer' (ID: 54325)
  Prédit: 'Printer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Printer' → logprob: -1.2664456789934775e-06
    2. 'Processor' → logprob: -14.750000953674316
    3. 'printer' → logprob: -15.375000953674316
    4. 'Print' → logprob: -15.875000953674316
    5. 'Factory' → logprob: -16.125001907348633
    6. '   ' → logprob: -16.500001907348633
    7. 'Painter' → logprob: -16.500001907348633
    8. '
' → logprob: -16.750001907348633
    9. 'Formatter' → logprob: -16.875001907348633
    10. ' Printer' → logprob: -17.375001907348633

Token 704: '(square' (ID: 180503)
  Prédit: '(square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(square' → logprob: -0.03001289628446102
    2. '(s' → logprob: -3.530012845993042
    3. '(result' → logprob: -9.030013084411621
    4. '(self' → logprob: -9.905013084411621
    5. '(' → logprob: -10.405013084411621
    6. '(row' → logprob: -10.655013084411621
    7. 'square' → logprob: -11.905013084411621
    8. '(f' → logprob: -12.280013084411621
    9. '(res' → logprob: -12.905013084411621
    10. '((' → logprob: -12.905013084411621

Token 705: ').' (ID: 741)
  Prédit: '(square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(square' → logprob: -0.006606898736208677
    2. ').' → logprob: -5.2566070556640625
    3. '.square' → logprob: -6.7566070556640625
    4. '   ' → logprob: -8.756607055664062
    5. '(s' → logprob: -11.131607055664062
    6. 'square' → logprob: -11.631607055664062
    7. '(self' → logprob: -12.131607055664062
    8. '       ' → logprob: -12.506607055664062
    9. '           ' → logprob: -12.881607055664062
    10. ' (' → logprob: -13.131607055664062

Token 706: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.25
    3. '.print' → logprob: -22.0
    4. 'format' → logprob: -22.0
    5. '```' → logprob: -22.0
    6. 'prints' → logprob: -22.875
    7. '	print' → logprob: -23.375
    8. 'pr' → logprob: -23.625
    9. '   ' → logprob: -23.625
    10. 'println' → logprob: -24.0

Token 707: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001084374962374568
    2. '())' → logprob: -6.876084327697754
    3. '(square' → logprob: -10.501084327697754
    4. '(' → logprob: -11.626084327697754
    5. ' ()' → logprob: -12.251084327697754
    6. '()
' → logprob: -12.751084327697754
    7. '()+' → logprob: -13.626084327697754
    8. '(s' → logprob: -13.751084327697754
    9. 'for' → logprob: -13.876084327697754
    10. '()`' → logprob: -14.001084327697754

Token 708: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0028902292251586914
    2. 'for' → logprob: -6.252890110015869
    3. '(square' → logprob: -7.627890110015869
    4. '())' → logprob: -8.252890586853027
    5. '(' → logprob: -9.002890586853027
    6. ' for' → logprob: -10.002890586853027
    7. ')' → logprob: -11.002890586853027
    8. '()
' → logprob: -11.502890586853027
    9. ' ()' → logprob: -11.877890586853027
    10. '(s' → logprob: -12.502890586853027

Token 709: ' square' (ID: 13749)
  Prédit: 'square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'square' → logprob: -0.0017274183919653296
    2. ' square' → logprob: -6.37672758102417
    3. '   ' → logprob: -11.126727104187012
    4. 'sq' → logprob: -13.001727104187012
    5. '(square' → logprob: -13.001727104187012
    6. ' ' → logprob: -13.376727104187012
    7. '       ' → logprob: -13.501727104187012
    8. '  ' → logprob: -13.626727104187012
    9. 'self' → logprob: -14.501727104187012
    10. 's' → logprob: -15.251727104187012

Token 710: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023246292024850845
    2. 'in' → logprob: -3.7732462882995605
    3. 'square' → logprob: -14.273246765136719
    4. 's' → logprob: -16.52324676513672
    5. ' ' → logprob: -16.89824676513672
    6. '   ' → logprob: -17.64824676513672
    7. 'self' → logprob: -17.77324676513672
    8. '    ' → logprob: -18.02324676513672
    9. ')' → logprob: -18.52324676513672
    10. '  ' → logprob: -18.52324676513672

Token 711: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.1424973713001236e-05
    2. ' self' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.375030517578125
    4. '(self' → logprob: -18.375030517578125
    5. ' ' → logprob: -18.875030517578125
    6. '[self' → logprob: -19.250030517578125
    7. '  ' → logprob: -19.375030517578125
    8. '	self' → logprob: -19.375030517578125
    9. '       ' → logprob: -19.500030517578125
    10. '
' → logprob: -20.125030517578125

Token 712: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -1.0325924449716695e-05
    2. 'results' → logprob: -11.87501049041748
    3. '.' → logprob: -13.62501049041748
    4. '.user' → logprob: -14.00001049041748
    5. ' .' → logprob: -14.37501049041748
    6. '.s' → logprob: -15.87501049041748
    7. ').' → logprob: -15.87501049041748
    8. '.process' → logprob: -16.375009536743164
    9. '.result' → logprob: -16.500009536743164
    10. '	results' → logprob: -16.750009536743164

Token 713: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013375049456954002
    2. '())' → logprob: -6.62633752822876
    3. '()' → logprob: -11.876337051391602
    4. ' )' → logprob: -13.126337051391602
    5. ')
' → logprob: -14.126337051391602
    6. ')}' → logprob: -14.626337051391602
    7. '))' → logprob: -15.001337051391602
    8. '   ' → logprob: -15.376337051391602
    9. ')`' → logprob: -15.376337051391602
    10. ')}}' → logprob: -15.626337051391602

Token 714: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 715: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0003775264194700867
    2. 'main' → logprob: -8.000377655029297
    3. ' run' → logprob: -10.125377655029297
    4. ' process' → logprob: -13.875377655029297
    5. ' solve' → logprob: -14.000377655029297
    6. '_main' → logprob: -16.000377655029297
    7. 'run' → logprob: -16.750377655029297
    8. ' test' → logprob: -17.500377655029297
    9. '__' → logprob: -17.750377655029297
    10. ' parse' → logprob: -17.875377655029297

Token 716: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00013011827832087874
    2. '():
' → logprob: -9.000129699707031
    3. ' ():' → logprob: -12.125129699707031
    4. '()' → logprob: -14.000129699707031
    5. '():
' → logprob: -15.375129699707031
    6. '():

' → logprob: -16.75012969970703
    7. '()>' → logprob: -17.00012969970703
    8. ':' → logprob: -17.12512969970703
    9. '(' → logprob: -17.50012969970703
    10. '().' → logprob: -18.12512969970703

Token 717: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7145338654518127
    2. ' processor' → logprob: -0.9645338654518127
    3. ' import' → logprob: -2.214533805847168
    4. 'import' → logprob: -5.214533805847168
    5. ' def' → logprob: -5.589533805847168
    6. ' ns' → logprob: -5.839533805847168
    7. 'processor' → logprob: -5.839533805847168
    8. ' processors' → logprob: -6.714533805847168
    9. ' factory' → logprob: -6.839533805847168
    10. ' n' → logprob: -7.214533805847168

Token 718: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.4446905553340912
    2. ' import' → logprob: -1.8196905851364136
    3. 'processor' → logprob: -2.069690465927124
    4. ' processor' → logprob: -3.444690465927124
    5. 'ns' → logprob: -4.319690704345703
    6. 'n' → logprob: -5.069690704345703
    7. '   ' → logprob: -5.444690704345703
    8. ' ns' → logprob: -5.444690704345703
    9. 'ps' → logprob: -6.069690704345703
    10. ' n' → logprob: -6.569690704345703

Token 719: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011047935113310814
    2. ' sys' → logprob: -4.511047840118408
    3. '=sys' → logprob: -16.63604736328125
    4. '	sys' → logprob: -17.26104736328125
    5. '(sys' → logprob: -19.51104736328125
    6. '```' → logprob: -20.38604736328125
    7. '.sys' → logprob: -20.51104736328125
    8. '_sys' → logprob: -20.63604736328125
    9. 'io' → logprob: -21.01104736328125
    10. 'math' → logprob: -21.26104736328125

Token 720: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053823236376047134
    2. '
' → logprob: -3.553823232650757
    3. '    
' → logprob: -4.803823471069336
    4. ' lines' → logprob: -4.928823471069336
    5. 'for' → logprob: -5.928823471069336
    6. 'input' → logprob: -6.678823471069336
    7. ' for' → logprob: -6.678823471069336
    8. 'n' → logprob: -6.928823471069336
    9. '<|end|>' → logprob: -7.178823471069336
    10. ' input' → logprob: -8.178823471069336

Token 721: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017896592617034912
    2. 'for' → logprob: -7.251789569854736
    3. ' lines' → logprob: -7.626789569854736
    4. ' for' → logprob: -8.876790046691895
    5. 'input' → logprob: -8.876790046691895
    6. 'data' → logprob: -9.126790046691895
    7. '	lines' → logprob: -9.876790046691895
    8. 'inputs' → logprob: -10.251790046691895
    9. 'lines' → logprob: -10.501790046691895
    10. '    
' → logprob: -10.626790046691895

Token 722: ' inputs' (ID: 21963)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -1.1687268018722534
    2. '   ' → logprob: -1.6687268018722534
    3. 'for' → logprob: -1.7937268018722534
    4. ' for' → logprob: -2.293726921081543
    5. 'lines' → logprob: -2.418726921081543
    6. 'input' → logprob: -2.418726921081543
    7. 'ns' → logprob: -3.668726921081543
    8. ' input' → logprob: -4.293726921081543
    9. 'inputs' (adapté à ' inputs') → logprob: -4.918726921081543
    10. ' ns' → logprob: -5.043726921081543

Token 723: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408607602119446
    2. '=' → logprob: -0.9740860462188721
    3. '_' → logprob: -12.099085807800293
    4. '=[]' → logprob: -14.099085807800293
    5. ' ' → logprob: -14.474085807800293
    6. '   ' → logprob: -14.474085807800293
    7. '=sys' → logprob: -14.599085807800293
    8. '_=' → logprob: -14.849085807800293
    9. ' =
' → logprob: -15.599085807800293
    10. '=[]
' → logprob: -15.724085807800293

Token 724: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.567288339138031
    2. ' [' → logprob: -1.8172883987426758
    3. 'sys' → logprob: -1.9422883987426758
    4. ' sys' → logprob: -2.317288398742676
    5. 'list' → logprob: -4.692288398742676
    6. ' list' → logprob: -4.817288398742676
    7. '[list' → logprob: -4.817288398742676
    8. '[]' → logprob: -6.817288398742676
    9. '(sys' → logprob: -7.317288398742676
    10. 'map' → logprob: -7.692288398742676

Token 725: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1347503662109375
    2. ' for' → logprob: -2.3847503662109375
    3. 'for' → logprob: -3.3847503662109375
    4. '
' → logprob: -9.884750366210938
    5. '    
' → logprob: -11.759750366210938
    6. '	for' → logprob: -12.259750366210938
    7. '<|end|>' → logprob: -13.509750366210938
    8. ' 
' → logprob: -14.384750366210938
    9. ' ' → logprob: -14.634750366210938
    10. '  ' → logprob: -14.759750366210938

Token 726: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0063996268436312675
    2. ' for' → logprob: -5.256399631500244
    3. '   ' → logprob: -6.756399631500244
    4. 'while' → logprob: -13.506399154663086
    5. '
' → logprob: -16.256399154663086
    6. 'line' → logprob: -17.006399154663086
    7. '	for' → logprob: -17.131399154663086
    8. '```' → logprob: -17.256399154663086
    9. ' ' → logprob: -17.381399154663086
    10. 'lines' → logprob: -18.131399154663086

Token 727: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.12692873179912567
    2. ' line' → logprob: -2.1269288063049316
    3. '	line' → logprob: -15.001928329467773
    4. 'lin' → logprob: -15.251928329467773
    5. ' ' → logprob: -17.251928329467773
    6. 'l' → logprob: -17.251928329467773
    7. 'n' → logprob: -18.001928329467773
    8. '_line' → logprob: -18.376928329467773
    9. '#line' → logprob: -18.376928329467773
    10. '(line' → logprob: -18.501928329467773

Token 728: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0005536287208087742
    2. 'in' → logprob: -7.500553607940674
    3. ' ' → logprob: -15.125554084777832
    4. '<|end|>' → logprob: -16.250553131103516
    5. 's' → logprob: -16.500553131103516
    6. 'import' → logprob: -17.625553131103516
    7. 'n' → logprob: -17.750553131103516
    8. 'line' → logprob: -17.750553131103516
    9. ' 
' → logprob: -18.375553131103516
    10. '_' → logprob: -18.500553131103516

Token 729: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.10020947456359863
    2. 'sys' → logprob: -2.3502094745635986
    3. '	sys' → logprob: -13.60020923614502
    4. '=sys' → logprob: -13.60020923614502
    5. '(sys' → logprob: -15.22520923614502
    6. 'stdin' → logprob: -18.350210189819336
    7. 'import' → logprob: -19.100210189819336
    8. '_sys' → logprob: -19.350210189819336
    9. '.sys' → logprob: -19.600210189819336
    10. ' ' → logprob: -19.725210189819336

Token 730: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00015431294741574675
    2. 'stdin' → logprob: -9.375154495239258
    3. '.' → logprob: -10.250154495239258
    4. '.stdout' → logprob: -11.500154495239258
    5. '(stdin' → logprob: -11.875154495239258
    6. '.argv' → logprob: -12.000154495239258
    7. '.stderr' → logprob: -12.750154495239258
    8. ' stdin' → logprob: -13.000154495239258
    9. '.readline' → logprob: -13.000154495239258
    10. '   ' → logprob: -14.000154495239258

Token 731: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11459869891405106
    2. ':' → logprob: -2.9895987510681152
    3. 'in' → logprob: -3.2395987510681152
    4. '.strip' → logprob: -4.239598751068115
    5. '   ' → logprob: -6.614598751068115
    6. ':
' → logprob: -6.739598751068115
    7. '.rstrip' → logprob: -6.989598751068115
    8. '.' → logprob: -7.614598751068115
    9. '.readline' → logprob: -9.364598274230957
    10. 'strip' → logprob: -9.614598274230957

Token 732: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006047414499334991
    2. '   ' → logprob: -7.750604629516602
    3. '<|end|>' → logprob: -9.250604629516602
    4. '    ' → logprob: -10.625604629516602
    5. ' line' → logprob: -12.000604629516602
    6. '    
' → logprob: -12.125604629516602
    7. '        
' → logprob: -12.250604629516602
    8. '     ' → logprob: -12.500604629516602
    9. '	   ' → logprob: -12.625604629516602
    10. '      ' → logprob: -12.750604629516602

Token 733: ' line' (ID: 2543)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2020847350358963
    2. ' line' → logprob: -1.8270847797393799
    3. '       ' → logprob: -4.452084541320801
    4. 'n' → logprob: -5.202084541320801
    5. '   ' → logprob: -5.452084541320801
    6. ' if' → logprob: -7.952084541320801
    7. 'line' (adapté à ' line') → logprob: -8.9520845413208
    8. ' num' → logprob: -10.0770845413208
    9. ' value' → logprob: -10.3270845413208
    10. ' stripped' → logprob: -10.5770845413208

Token 734: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01774364896118641
    2. ' =' → logprob: -4.1427435874938965
    3. '.strip' → logprob: -6.5177435874938965
    4. 'strip' → logprob: -9.392744064331055
    5. '_strip' → logprob: -9.767744064331055
    6. '=line' → logprob: -9.767744064331055
    7. '=
' → logprob: -11.392744064331055
    8. '.rstrip' → logprob: -12.017744064331055
    9. '=str' → logprob: -12.017744064331055
    10. '.' → logprob: -13.017744064331055

Token 735: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0024756586644798517
    2. ' line' → logprob: -6.002475738525391
    3. '=line' → logprob: -18.75247573852539
    4. '(line' → logprob: -19.12747573852539
    5. '	line' → logprob: -19.62747573852539
    6. '#line' → logprob: -21.00247573852539
    7. '   ' → logprob: -22.25247573852539
    8. '[line' → logprob: -22.87747573852539
    9. 'Line' → logprob: -23.75247573852539
    10. '.line' → logprob: -24.00247573852539

Token 736: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.002071394817903638
    2. '.' → logprob: -6.252071380615234
    3. '.rstrip' → logprob: -9.377071380615234
    4. 'strip' → logprob: -9.877071380615234
    5. ' .' → logprob: -12.627071380615234
    6. ' strip' → logprob: -13.002071380615234
    7. '.trim' → logprob: -14.377071380615234
    8. '.readline' → logprob: -15.627071380615234
    9. '().' → logprob: -15.877071380615234
    10. '_strip' → logprob: -16.127071380615234

Token 737: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15851038694381714
    2. '<|end|>' → logprob: -2.658510446548462
    3. '
' → logprob: -2.783510446548462
    4. '<|end|>' → logprob: -5.158510208129883
    5. '()
' → logprob: -5.283510208129883
    6. '        
' → logprob: -6.783510208129883
    7. '  
' → logprob: -8.033510208129883
    8. '   ' → logprob: -8.033510208129883
    9. '()' → logprob: -8.283510208129883
    10. ':
' → logprob: -8.408510208129883

Token 738: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034508646931499243
    2. ' if' → logprob: -5.878450870513916
    3. '<|end|>' → logprob: -7.878450870513916
    4. 'if' → logprob: -8.378450393676758
    5. '   ' → logprob: -10.378450393676758
    6. '<|end|>' → logprob: -13.253450393676758
    7. ' ' → logprob: -13.628450393676758
    8. '        
' → logprob: -14.128450393676758
    9. '           ' → logprob: -14.253450393676758
    10. ',' → logprob: -14.378450393676758

Token 739: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0002669384120963514
    2. ' if' → logprob: -8.250267028808594
    3. '       ' → logprob: -12.125267028808594
    4. 'If' → logprob: -15.750267028808594
    5. '           ' → logprob: -17.250267028808594
    6. '   ' → logprob: -17.625267028808594
    7. '	if' → logprob: -17.875267028808594
    8. ';if' → logprob: -18.125267028808594
    9. '
' → logprob: -19.250267028808594
    10. 'i' → logprob: -19.500267028808594

Token 740: ' line' (ID: 2543)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.7285380363464355
    2. ' not' → logprob: -0.9785380363464355
    3. 'line' → logprob: -1.9785380363464355
    4. ' line' → logprob: -5.7285380363464355
    5. ' ' → logprob: -14.478538513183594
    6. '#line' → logprob: -14.978538513183594
    7. '(line' → logprob: -15.103538513183594
    8. 'len' → logprob: -15.103538513183594
    9. '	line' → logprob: -15.228538513183594
    10. '```' → logprob: -15.228538513183594

Token 741: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01607413962483406
    2. ' ==' → logprob: -4.141074180603027
    3. '===' → logprob: -11.266074180603027
    4. '()==' → logprob: -11.266074180603027
    5. '=' → logprob: -12.016074180603027
    6. '==
' → logprob: -12.266074180603027
    7. '=="' → logprob: -14.016074180603027
    8. ']==' → logprob: -14.141074180603027
    9. '=='' → logprob: -14.266074180603027
    10. ')==' → logprob: -14.766074180603027

Token 742: ' '':
' (ID: 125614)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.48416176438331604
    2. '''' → logprob: -1.2341617345809937
    3. '"' → logprob: -2.734161853790283
    4. '""' → logprob: -3.609161853790283
    5. '"":' → logprob: -7.359161853790283
    6. ' '' → logprob: -11.109161376953125
    7. '''
' → logprob: -11.234161376953125
    8. '0' → logprob: -11.984161376953125
    9. ' '':
' → logprob: -12.734161376953125
    10. ''end' → logprob: -12.984161376953125

Token 743: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01839129813015461
    2. '       ' → logprob: -4.018391132354736
    3. '   ' → logprob: -8.768391609191895
    4. ' break' → logprob: -10.393391609191895
    5. 'break' → logprob: -11.018391609191895
    6. '	       ' → logprob: -12.268391609191895
    7. '<|end|>' → logprob: -12.268391609191895
    8. '          ' → logprob: -12.393391609191895
    9. '		' → logprob: -12.393391609191895
    10. '               ' → logprob: -12.643391609191895

Token 744: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7000131011009216
    2. 'break' → logprob: -0.7000131011009216
    3. 'continue' (adapté à ' continue') → logprob: -5.200013160705566
    4. ' break' → logprob: -6.950013160705566
    5. '       ' → logprob: -8.450013160705566
    6. '	break' → logprob: -9.450013160705566
    7. '               ' → logprob: -10.700013160705566
    8. ' continue' → logprob: -11.075013160705566
    9. '
' → logprob: -11.200013160705566
    10. '		' → logprob: -11.825013160705566

Token 745: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014002372045069933
    2. '<|end|>' → logprob: -7.001400470733643
    3. '   ' → logprob: -8.001399993896484
    4. '
' → logprob: -9.876399993896484
    5. '        
' → logprob: -10.751399993896484
    6. '<|end|>' → logprob: -10.751399993896484
    7. ',' → logprob: -11.001399993896484
    8. 'n' → logprob: -11.376399993896484
    9. '    
' → logprob: -11.501399993896484
    10. ' if' → logprob: -12.501399993896484

Token 746: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.7120533811976202e-05
    2. '   ' → logprob: -11.625017166137695
    3. '<|end|>' → logprob: -12.000017166137695
    4. '           ' → logprob: -14.250017166137695
    5. '        
' → logprob: -15.000017166137695
    6. '<|end|>' → logprob: -15.125017166137695
    7. ',' → logprob: -15.875017166137695
    8. '	   ' → logprob: -16.375017166137695
    9. '	' → logprob: -16.500017166137695
    10. '```' → logprob: -16.625017166137695

Token 747: ' inputs' (ID: 21963)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.017650192603468895
    2. ' n' → logprob: -4.267650127410889
    3. '       ' → logprob: -6.017650127410889
    4. 'num' → logprob: -7.017650127410889
    5. 'try' → logprob: -9.517650604248047
    6. ' num' → logprob: -10.892650604248047
    7. '   ' → logprob: -11.392650604248047
    8. ' try' → logprob: -11.517650604248047
    9. 'inputs' (adapté à ' inputs') → logprob: -11.642650604248047
    10. 'if' → logprob: -12.017650604248047

Token 748: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0035052767489105463
    2. '.' → logprob: -5.753505229949951
    3. '=' → logprob: -8.62850570678711
    4. ' =' → logprob: -9.00350570678711
    5. '.=' → logprob: -11.62850570678711
    6. '.extend' → logprob: -11.87850570678711
    7. ' .' → logprob: -12.00350570678711
    8. '.app' → logprob: -13.12850570678711
    9. ' +=' → logprob: -14.62850570678711
    10. '+=' → logprob: -14.75350570678711

Token 749: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.6550729419104755e-05
    2. ' int' → logprob: -10.250036239624023
    3. '(int' → logprob: -13.750036239624023
    4. '   ' → logprob: -17.250036239624023
    5. '[int' → logprob: -18.875036239624023
    6. '    ' → logprob: -21.125036239624023
    7. '=int' → logprob: -21.125036239624023
    8. '<int' → logprob: -21.125036239624023
    9. '	int' → logprob: -21.500036239624023
    10. '  ' → logprob: -22.250036239624023

Token 750: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -3.9650025428272784e-05
    2. 'line' → logprob: -10.250040054321289
    3. '(' → logprob: -12.750040054321289
    4. ' line' → logprob: -13.625040054321289
    5. '=line' → logprob: -16.62504005432129
    6. '[line' → logprob: -17.12504005432129
    7. '#line' → logprob: -17.37504005432129
    8. ' (' → logprob: -17.62504005432129
    9. '	line' → logprob: -18.75004005432129
    10. ')' → logprob: -18.87504005432129

Token 751: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12693661451339722
    2. ')' → logprob: -2.126936674118042
    3. '))
' → logprob: -12.126936912536621
    4. ')
' → logprob: -13.626936912536621
    5. ' ))' → logprob: -14.001936912536621
    6. ')))' → logprob: -14.501936912536621
    7. ' )' → logprob: -15.251936912536621
    8. ')}' → logprob: -16.126935958862305
    9. '   ' → logprob: -16.501935958862305
    10. '));' → logprob: -17.001935958862305

Token 752: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00136368942912668
    2. ' if' → logprob: -7.626363754272461
    3. '
' → logprob: -8.001363754272461
    4. '       ' → logprob: -8.251363754272461
    5. '<|end|>' → logprob: -9.001363754272461
    6. 'if' → logprob: -9.751363754272461
    7. ' for' → logprob: -10.001363754272461
    8. 'for' → logprob: -10.751363754272461
    9. '    
' → logprob: -10.751363754272461
    10. '<|end|>' → logprob: -13.126363754272461

Token 753: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5087012052536011
    2. '       ' → logprob: -1.008701205253601
    3. ' if' → logprob: -3.3837013244628906
    4. '   ' → logprob: -9.75870132446289
    5. '	if' → logprob: -10.00870132446289
    6. '	' → logprob: -13.25870132446289
    7. ' ' → logprob: -13.25870132446289
    8. '```' → logprob: -13.75870132446289
    9. '	   ' → logprob: -14.00870132446289
    10. '
' → logprob: -14.38370132446289

Token 754: ' int' (ID: 677)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.26276615262031555
    2. ' inputs' → logprob: -2.137766122817993
    3. 'int' → logprob: -2.637766122817993
    4. 'line' → logprob: -3.762766122817993
    5. ' int' → logprob: -4.262766361236572
    6. ' line' → logprob: -5.512766361236572
    7. 'input' → logprob: -9.137765884399414
    8. 'ints' → logprob: -9.262765884399414
    9. 'lines' → logprob: -10.137765884399414
    10. '(inputs' → logprob: -11.137765884399414

Token 755: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0006657334160991013
    2. '(inputs' → logprob: -7.500665664672852
    3. 'line' → logprob: -9.250665664672852
    4. '(' → logprob: -11.250665664672852
    5. 'inputs' → logprob: -13.250665664672852
    6. '(lines' → logprob: -14.250665664672852
    7. ' line' → logprob: -14.750665664672852
    8. '#line' → logprob: -15.250665664672852
    9. '[line' → logprob: -15.250665664672852
    10. '()' → logprob: -16.25066566467285

Token 756: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044664166867733
    2. '==' → logprob: -3.794664144515991
    3. ')==' → logprob: -4.04466438293457
    4. ' ==' → logprob: -6.16966438293457
    5. '()' → logprob: -6.79466438293457
    6. '()==' → logprob: -7.79466438293457
    7. ']==' → logprob: -10.66966438293457
    8. ' )' → logprob: -11.54466438293457
    9. '())' → logprob: -12.16966438293457
    10. '0' → logprob: -12.54466438293457

Token 757: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.033819157630205154
    2. ' ==' → logprob: -3.4088191986083984
    3. '()==' → logprob: -9.658819198608398
    4. '=' → logprob: -9.783819198608398
    5. ')==' → logprob: -10.283819198608398
    6. ']==' → logprob: -11.908819198608398
    7. ')' → logprob: -12.408819198608398
    8. '===' → logprob: -12.908819198608398
    9. '==
' → logprob: -13.033819198608398
    10. '()' → logprob: -13.158819198608398

Token 758: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '   ' → logprob: -21.5
    4. '  ' → logprob: -24.625
    5. '۰' → logprob: -24.625
    6. '০' → logprob: -25.25
    7. '०' → logprob: -25.25
    8. '٠' → logprob: -25.5
    9. '    ' → logprob: -25.875
    10. '０' → logprob: -25.875

Token 759: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -20.125
    3. '   ' → logprob: -23.875
    4. '۰' → logprob: -25.625
    5. '00' → logprob: -26.375
    6. '```' → logprob: -26.5
    7. '=' → logprob: -26.625
    8. ' ' → logprob: -26.75
    9. '
' → logprob: -26.875
    10. '০' → logprob: -27.0

Token 760: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36910679936408997
    2. '           ' → logprob: -1.4941067695617676
    3. ':
' → logprob: -2.4941067695617676
    4. '       ' → logprob: -6.494106769561768
    5. '          ' → logprob: -10.494107246398926
    6. '   ' → logprob: -10.744107246398926
    7. ',' → logprob: -11.369107246398926
    8. '		' → logprob: -11.869107246398926
    9. '<|end|>' → logprob: -11.869107246398926
    10. '():
' → logprob: -12.119107246398926

Token 761: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.240481914370321e-05
    2. 'break' → logprob: -10.500052452087402
    3. ' break' → logprob: -11.500052452087402
    4. '       ' → logprob: -11.500052452087402
    5. '		' → logprob: -13.625052452087402
    6. '	       ' → logprob: -14.125052452087402
    7. '               ' → logprob: -14.250052452087402
    8. '          ' → logprob: -14.625052452087402
    9. '   ' → logprob: -14.750052452087402
    10. '
' → logprob: -14.750052452087402

Token 762: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13468118011951447
    2. 'break' (adapté à ' break') → logprob: -2.134681224822998
    3. ' break' → logprob: -4.884681224822998
    4. '       ' → logprob: -9.25968074798584
    5. '	break' → logprob: -10.38468074798584
    6. '               ' → logprob: -10.88468074798584
    7. 'return' → logprob: -11.88468074798584
    8. '
' → logprob: -12.38468074798584
    9. '		' → logprob: -12.75968074798584
    10. '   ' → logprob: -13.88468074798584

Token 763: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5862797498703003
    2. '   ' → logprob: -0.8362797498703003
    3. '    
' → logprob: -4.58627986907959
    4. '        
' → logprob: -10.21127986907959
    5. '  
' → logprob: -10.71127986907959
    6. '
' → logprob: -11.08627986907959
    7. '   
' → logprob: -12.08627986907959
    8. '

' → logprob: -12.21127986907959
    9. ' 
' → logprob: -12.46127986907959
    10. '<|end|>' → logprob: -13.21127986907959

Token 764: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6414692401885986
    2. '   ' → logprob: -0.7664692401885986
    3. '    
' → logprob: -4.7664690017700195
    4. '
' → logprob: -9.14146900177002
    5. '<|end|>' → logprob: -9.26646900177002
    6. '

' → logprob: -10.14146900177002
    7. '        
' → logprob: -10.76646900177002
    8. '  
' → logprob: -11.14146900177002
    9. 'for' → logprob: -11.76646900177002
    10. '<|end|>' → logprob: -12.14146900177002

Token 765: ' processor' (ID: 29539)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028442882001399994
    2. ' processor' → logprob: -4.028442859649658
    3. 'processor' (adapté à ' processor') → logprob: -4.653442859649658
    4. ' p' → logprob: -7.528442859649658
    5. 'p' → logprob: -9.028443336486816
    6. '
' → logprob: -10.778443336486816
    7. 'proc' → logprob: -11.903443336486816
    8. '    
' → logprob: -12.153443336486816
    9. 'pp' → logprob: -12.403443336486816
    10. 'ps' → logprob: -13.153443336486816

Token 766: ' =' (ID: 314)
  Prédit: '.process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -0.5821238160133362
    2. ' =' → logprob: -0.8321238160133362
    3. '=' → logprob: -5.207123756408691
    4. '.' → logprob: -7.332123756408691
    5. ' .' → logprob: -11.957123756408691
    6. '(process' → logprob: -12.082123756408691
    7. 'process' → logprob: -12.207123756408691
    8. '.processor' → logprob: -12.207123756408691
    9. '.py' → logprob: -13.207123756408691
    10. '.pro' → logprob: -13.457123756408691

Token 767: ' Magic' (ID: 29113)
  Prédit: ' Magic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Magic' → logprob: -0.2014133334159851
    2. 'Magic' → logprob: -1.7014133930206299
    3. '_magic' → logprob: -16.826414108276367
    4. ' magic' → logprob: -18.076414108276367
    5. ' Magical' → logprob: -18.076414108276367
    6. 'Mag' → logprob: -20.201414108276367
    7. '_MAGIC' → logprob: -21.701414108276367
    8. ' MAGIC' → logprob: -22.826414108276367
    9. 'magic' → logprob: -23.326414108276367
    10. ' ' → logprob: -23.326414108276367

Token 768: 'Square' (ID: 36631)
  Prédit: 'Square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Square' → logprob: -6.704273118884885e-07
    2. ' Square' → logprob: -14.375000953674316
    3. 'square' → logprob: -18.0
    4. '_square' → logprob: -18.625
    5. 'Squares' → logprob: -19.5
    6. 'Squ' → logprob: -20.0
    7. 'S' → logprob: -20.625
    8. 'Squared' → logprob: -20.625
    9. 'quare' → logprob: -20.75
    10. '_S' → logprob: -21.125

Token 769: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -1.9361264946837764e-07
    2. 'Factory' → logprob: -16.625
    3. 'processor' → logprob: -17.125
    4. 'Process' → logprob: -18.125
    5. ' Processor' → logprob: -19.25
    6. ' processor' → logprob: -19.25
    7. '_processor' → logprob: -20.25
    8. 'Provider' → logprob: -22.125
    9. 'Producer' → logprob: -23.0
    10. 'Parser' → logprob: -23.125

Token 770: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04297556355595589
    2. '(process' → logprob: -3.417975664138794
    3. '    
' → logprob: -5.667975425720215
    4. 'processor' → logprob: -5.917975425720215
    5. '.process' → logprob: -6.917975425720215
    6. ' processor' → logprob: -7.292975425720215
    7. '.processor' → logprob: -7.542975425720215
    8. '
' → logprob: -7.667975425720215
    9. '.' → logprob: -8.542975425720215
    10. '<|end|>' → logprob: -9.792975425720215

Token 771: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022061665076762438
    2. 'processor' → logprob: -6.252206325531006
    3. ' processor' → logprob: -8.252205848693848
    4. '
' → logprob: -11.627205848693848
    5. '    
' → logprob: -12.627205848693848
    6. '(process' → logprob: -13.252205848693848
    7. '.processor' → logprob: -13.252205848693848
    8. '_processor' → logprob: -14.502205848693848
    9. '```' → logprob: -15.627205848693848
    10. 'process' → logprob: -15.877205848693848

Token 772: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' (adapté à ' processor') → logprob: -2.1888679839321412e-05
    2. '   ' → logprob: -11.250021934509277
    3. ' processor' → logprob: -12.000021934509277
    4. 'process' → logprob: -12.875021934509277
    5. '.processor' → logprob: -16.75002098083496
    6. '
' → logprob: -17.62502098083496
    7. '```' → logprob: -18.50002098083496
    8. '(process' → logprob: -18.62502098083496
    9. '    
' → logprob: -19.00002098083496
    10. 'processors' → logprob: -19.25002098083496

Token 773: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -1.306760805164231e-05
    2. '.' → logprob: -11.25001335144043
    3. '.perform' → logprob: -18.00001335144043
    4. 'process' → logprob: -18.37501335144043
    5. '.run' → logprob: -18.62501335144043
    6. ' .' → logprob: -18.87501335144043
    7. '.proc' → logprob: -19.00001335144043
    8. '.pro' → logprob: -19.12501335144043
    9. '.execute' → logprob: -19.87501335144043
    10. '.output' → logprob: -20.12501335144043

Token 774: '(inputs' (ID: 78697)
  Prédit: '(inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inputs' → logprob: -2.5776860184123507e-06
    2. 'inputs' → logprob: -13.12500286102295
    3. '(input' → logprob: -14.75000286102295
    4. '(' → logprob: -16.250001907348633
    5. '(outputs' → logprob: -18.375001907348633
    6. '(items' → logprob: -19.000001907348633
    7. '(users' → logprob: -20.000001907348633
    8. '(objects' → logprob: -20.625001907348633
    9. '(ids' → logprob: -20.750001907348633
    10. '(numbers' → logprob: -20.750001907348633

Token 775: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7594404220581055
    2. ')' → logprob: -1.0094404220581055
    3. '()' → logprob: -2.3844404220581055
    4. '()
' → logprob: -3.1344404220581055
    5. ')
' → logprob: -3.6344404220581055
    6. 'processor' → logprob: -6.1344404220581055
    7. '(process' → logprob: -6.2594404220581055
    8. ' processor' → logprob: -8.009440422058105
    9. '    
' → logprob: -8.634440422058105
    10. '())' → logprob: -8.634440422058105

Token 776: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048601794987916946
    2. 'print' → logprob: -3.0486018657684326
    3. ' print' → logprob: -11.173602104187012
    4. '
' → logprob: -15.673602104187012
    5. '	print' → logprob: -16.173601150512695
    6. '```' → logprob: -16.923601150512695
    7. 'for' → logprob: -17.048601150512695
    8. '    
' → logprob: -17.298601150512695
    9. '       ' → logprob: -17.798601150512695
    10. '#print' → logprob: -18.048601150512695

Token 777: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.943783253314905e-05
    2. ' print' → logprob: -10.000059127807617
    3. '   ' → logprob: -11.250059127807617
    4. 'output' → logprob: -14.125059127807617
    5. '
' → logprob: -15.500059127807617
    6. 'for' → logprob: -17.250059127807617
    7. 'result' → logprob: -17.625059127807617
    8. 'prints' → logprob: -18.125059127807617
    9. 'import' → logprob: -18.500059127807617
    10. '    
' → logprob: -18.750059127807617

Token 778: '(process' (ID: 39808)
  Prédit: '(process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(process' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -13.875000953674316
    3. '(proc' → logprob: -15.250000953674316
    4. 'processor' → logprob: -16.250001907348633
    5. '(program' → logprob: -19.000001907348633
    6. '(provider' → logprob: -19.875001907348633
    7. '(operator' → logprob: -20.625001907348633
    8. ' processor' → logprob: -20.875001907348633
    9. '(pro' → logprob: -21.000001907348633
    10. '(product' → logprob: -21.000001907348633

Token 779: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -2.5776860184123507e-06
    2. '())' → logprob: -14.00000286102295
    3. 'er' → logprob: -14.37500286102295
    4. 'processor' → logprob: -14.87500286102295
    5. 'OR' → logprob: -15.25000286102295
    6. ')' → logprob: -15.62500286102295
    7. '()' → logprob: -15.75000286102295
    8. 'ors' → logprob: -16.125001907348633
    9. '(process' → logprob: -17.000001907348633
    10. 'essor' → logprob: -17.250001907348633

Token 780: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -1.9361264946837764e-07
    2. '.' → logprob: -15.625
    3. 'output' → logprob: -17.625
    4. ' .' → logprob: -18.25
    5. '.input' → logprob: -18.25
    6. ').' → logprob: -19.125
    7. '.Output' → logprob: -20.125
    8. '.outputs' → logprob: -20.25
    9. '	output' → logprob: -20.625
    10. '$output' → logprob: -21.0

Token 781: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0031796174589544535
    2. '()' → logprob: -5.753179550170898
    3. '())
' → logprob: -13.628179550170898
    4. ' ())' → logprob: -15.378179550170898
    5. '())

' → logprob: -16.2531795501709
    6. '(),' → logprob: -16.6281795501709
    7. '().' → logprob: -16.8781795501709
    8. '()
' → logprob: -17.0031795501709
    9. '();)' → logprob: -17.0031795501709
    10. '(' → logprob: -17.7531795501709

Token 782: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1472419600977446e-06
    2. ' if' → logprob: -14.375000953674316
    3. '```' → logprob: -15.375000953674316
    4. '
' → logprob: -15.875000953674316
    5. '#' → logprob: -16.375001907348633
    6. '<|end|>' → logprob: -19.000001907348633
    7. '#if' → logprob: -19.125001907348633
    8. '@if' → logprob: -20.000001907348633
    9. '	if' → logprob: -20.250001907348633
    10. 'If' → logprob: -20.375001907348633

Token 783: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2521634101867676
    2. '__' → logprob: -1.5021634101867676
    3. 'name' → logprob: -8.75216293334961
    4. '_name' → logprob: -9.62716293334961
    5. 'Name' → logprob: -12.75216293334961
    6. ' name' → logprob: -12.87716293334961
    7. '___' → logprob: -13.25216293334961
    8. ' "__' → logprob: -14.12716293334961
    9. ' ' → logprob: -14.25216293334961
    10. '_' → logprob: -15.00216293334961

Token 784: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.037472452968358994
    2. '==' → logprob: -3.6624724864959717
    3. ' ==' → logprob: -4.662472248077393
    4. '=="' → logprob: -7.287472248077393
    5. '[' → logprob: -8.03747272491455
    6. '.__' → logprob: -8.91247272491455
    7. ' __' → logprob: -9.16247272491455
    8. '=='' → logprob: -9.28747272491455
    9. '__.__' → logprob: -9.41247272491455
    10. 'name' → logprob: -9.66247272491455

Token 785: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00030829108436591923
    2. '==' → logprob: -8.1253080368042
    3. ' ==' → logprob: -12.1253080368042
    4. '__.__' → logprob: -12.1253080368042
    5. '=="' → logprob: -14.3753080368042
    6. '_' → logprob: -15.3753080368042
    7. '=='' → logprob: -16.125308990478516
    8. '__.' → logprob: -16.250308990478516
    9. '___' → logprob: -16.750308990478516
    10. ' __' → logprob: -17.000308990478516

Token 786: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3262002170085907
    2. '==' → logprob: -1.326200246810913
    3. ' ==' → logprob: -4.701200008392334
    4. '=="' → logprob: -5.701200008392334
    5. '=='' → logprob: -7.826200008392334
    6. '__.__' → logprob: -11.076200485229492
    7. '=' → logprob: -12.701200485229492
    8. '===' → logprob: -12.951200485229492
    9. '_' → logprob: -13.076200485229492
    10. '==
' → logprob: -14.076200485229492

Token 787: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006731122732162476
    2. ''' → logprob: -5.006731033325195
    3. ' "__' → logprob: -11.131731033325195
    4. '__' → logprob: -14.006731033325195
    5. ' '__' → logprob: -16.131731033325195
    6. '"name' → logprob: -16.631731033325195
    7. '"user' → logprob: -17.006731033325195
    8. ''"' → logprob: -17.756731033325195
    9. '"class' → logprob: -18.131731033325195
    10. '("__' → logprob: -18.381731033325195

Token 788: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0014104703441262245
    2. 'name' → logprob: -6.751410484313965
    3. '__' → logprob: -8.376410484313965
    4. 'built' → logprob: -12.751410484313965
    5. '"' → logprob: -13.001410484313965
    6. '_main' → logprob: -13.626410484313965
    7. 'm' → logprob: -14.251410484313965
    8. 'run' → logprob: -14.376410484313965
    9. 'ma' → logprob: -15.001410484313965
    10. ''' → logprob: -15.751410484313965

Token 789: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.577387273311615
    2. '__":
' → logprob: -0.827387273311615
    3. '__.' → logprob: -7.45238733291626
    4. '__':
' → logprob: -7.70238733291626
    5. '__.__' → logprob: -8.452386856079102
    6. '__["' → logprob: -8.952386856079102
    7. '__:' → logprob: -10.202386856079102
    8. '__
' → logprob: -11.327386856079102
    9. '__
' → logprob: -12.327386856079102
    10. '.' → logprob: -12.327386856079102

Token 790: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3552378714084625
    2. '__' → logprob: -1.2302378416061401
    3. ' main' → logprob: -5.60523796081543
    4. '   ' → logprob: -6.35523796081543
    5. '"' → logprob: -7.10523796081543
    6. ' __' → logprob: -8.23023796081543
    7. '_main' → logprob: -9.48023796081543
    8. ''' → logprob: -9.60523796081543
    9. '____' → logprob: -10.35523796081543
    10. ' ' → logprob: -10.73023796081543

Token 791: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.0
    3. '	main' → logprob: -21.5
    4. '   ' → logprob: -23.125
    5. '(main' → logprob: -25.5
    6. '.main' → logprob: -26.0
    7. 'import' → logprob: -26.25
    8. '_main' → logprob: -26.875
    9. '
' → logprob: -28.75
    10. 'mai' → logprob: -28.875

Token 792: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 790
Tokens correctement prédits (1ère position, stricte): 364
Tokens correctement prédits (1ère position, avec adaptation): 400
Tokens correctement prédits (top 10): 677
Précision stricte (1ère position): 46.08%
Précision adaptée (1ère position): 50.63%
Précision (top 10): 85.70%
================================================================================
