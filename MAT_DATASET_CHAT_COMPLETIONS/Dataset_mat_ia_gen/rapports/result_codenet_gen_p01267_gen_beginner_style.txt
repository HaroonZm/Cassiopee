================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    N, A, B, C, X = map(int, input().split())
    if N == 0 and A == 0 and B == 0 and C == 0 and X == 0:
        break
    Y = list(map(int, input().split()))
    
    current = X
    stopped = 0
    frame = 0
    max_frame = 10000
    while frame <= max_frame and stopped < N:
        # next random number
        current = (A * current + B) % C
        frame += 1
        if current == Y[stopped]:
            stopped += 1
    if stopped == N:
        print(frame)
    else:
        print(-1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.143191397190094
    2. ' ' → logprob: -3.018191337585449
    3. '    ' → logprob: -4.143191337585449
    4. '\' → logprob: -4.268191337585449
    5. ' 
' → logprob: -4.518191337585449
    6. '    
' → logprob: -4.518191337585449
    7. '\n' → logprob: -4.893191337585449
    8. '```' → logprob: -5.018191337585449
    9. ':' → logprob: -5.143191337585449
    10. ' :' → logprob: -6.518191337585449

Token 4: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4779955744743347
    2. '    ' → logprob: -1.7279956340789795
    3. ' ' → logprob: -1.9779956340789795
    4. '```' → logprob: -3.6029956340789795
    5. '       ' → logprob: -4.7279953956604
    6. '  ' → logprob: -5.3529953956604
    7. '    
' → logprob: -5.6029953956604
    8. '        
' → logprob: -6.6029953956604
    9. 'pass' → logprob: -6.7279953956604
    10. '`' → logprob: -6.7279953956604

Token 5: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0550609827041626
    2. '=' → logprob: -1.4300609827041626
    3. 'o' → logprob: -2.430060863494873
    4. '>' → logprob: -3.180060863494873
    5. '-' → logprob: -3.430060863494873
    6. ' ' → logprob: -3.430060863494873
    7. '_' → logprob: -3.680060863494873
    8. '+' → logprob: -3.680060863494873
    9. 'u' → logprob: -3.680060863494873
    10. '  ' → logprob: -3.805060863494873

Token 6: ' A' (ID: 355)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.2966582775115967
    2. 'input' → logprob: -1.4216582775115967
    3. ' ' → logprob: -2.1716582775115967
    4. 'space' → logprob: -2.4216582775115967
    5. '"' → logprob: -2.9216582775115967
    6. ' space' → logprob: -3.1716582775115967
    7. ''' → logprob: -3.4216582775115967
    8. ' M' → logprob: -3.4216582775115967
    9. '  ' → logprob: -3.5466582775115967
    10. '    ' → logprob: -4.421658515930176

Token 7: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5522534847259521
    2. ',' → logprob: -1.1772534847259521
    3. ' =' → logprob: -2.177253484725952
    4. ')' → logprob: -6.177253723144531
    5. ' ,' → logprob: -8.052253723144531
    6. '[' → logprob: -8.052253723144531
    7. ' ' → logprob: -10.052253723144531
    8. '=input' → logprob: -10.427253723144531
    9. '_' → logprob: -11.177253723144531
    10. '.' → logprob: -11.552253723144531

Token 8: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2252650409936905
    2. ' B' → logprob: -2.3502650260925293
    3. 'K' → logprob: -2.8502650260925293
    4. 'D' → logprob: -3.9752650260925293
    5. ' K' → logprob: -4.975265026092529
    6. 'M' → logprob: -5.100265026092529
    7. 'Q' → logprob: -5.725265026092529
    8. 'T' → logprob: -6.100265026092529
    9. ' D' → logprob: -6.350265026092529
    10. 'C' → logprob: -6.850265026092529

Token 9: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29335686564445496
    2. ' =' → logprob: -1.4183568954467773
    3. ',' → logprob: -4.418356895446777
    4. ')' → logprob: -10.043356895446777
    5. ' ,' → logprob: -10.918356895446777
    6. '   ' → logprob: -12.543356895446777
    7. ' ' → logprob: -12.668356895446777
    8. '  ' → logprob: -13.168356895446777
    9. '```' → logprob: -13.418356895446777
    10. '<|end|>' → logprob: -13.668356895446777

Token 10: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.5213193297386169
    2. 'C' → logprob: -1.6463193893432617
    3. ' =' → logprob: -1.8963193893432617
    4. '=' → logprob: -3.0213193893432617
    5. ' ' → logprob: -4.521319389343262
    6. '_' → logprob: -6.771319389343262
    7. '*' → logprob: -7.396319389343262
    8. ' input' → logprob: -8.021319389343262
    9. '  ' → logprob: -8.271319389343262
    10. ' _' → logprob: -8.521319389343262

Token 11: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4607781171798706
    2. ' =' → logprob: -1.0857781171798706
    3. ',' → logprob: -3.46077823638916
    4. ')' → logprob: -9.08577823638916
    5. ' ,' → logprob: -10.71077823638916
    6. ' ' → logprob: -12.21077823638916
    7. '<|end|>' → logprob: -12.33577823638916
    8. '  ' → logprob: -12.46077823638916
    9. '```' → logprob: -12.71077823638916
    10. '   ' → logprob: -12.71077823638916

Token 12: ' X' (ID: 2127)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.12142603099346161
    2. ' D' → logprob: -2.2464261054992676
    3. 'X' → logprob: -6.371426105499268
    4. ' ' → logprob: -6.496426105499268
    5. 'K' → logprob: -6.621426105499268
    6. 'M' → logprob: -6.996426105499268
    7. ' =' → logprob: -7.371426105499268
    8. 'S' → logprob: -8.12142562866211
    9. '=' → logprob: -8.12142562866211
    10. ' K' → logprob: -8.24642562866211

Token 13: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10117234289646149
    2. ' =' → logprob: -2.35117244720459
    3. ',' → logprob: -6.97617244720459
    4. ')' → logprob: -11.35117244720459
    5. '=input' → logprob: -12.10117244720459
    6. ' ' → logprob: -12.97617244720459
    7. '```' → logprob: -13.10117244720459
    8. ' ,' → logprob: -13.35117244720459
    9. '   ' → logprob: -13.60117244720459
    10. '=

' → logprob: -14.10117244720459

Token 14: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.038224056363105774
    2. 'map' → logprob: -3.2882239818573
    3. ' list' → logprob: -9.288224220275879
    4. ' input' → logprob: -10.288224220275879
    5. ' [' → logprob: -10.663224220275879
    6. 'input' → logprob: -12.038224220275879
    7. '(map' → logprob: -12.288224220275879
    8. ' ' → logprob: -12.413224220275879
    9. 'list' → logprob: -12.413224220275879
    10. '[' → logprob: -12.663224220275879

Token 15: '(int' (ID: 2742)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -1.0032655000686646
    2. '(' → logprob: -1.1282655000686646
    3. '(int' → logprob: -1.3782655000686646
    4. '<|end|>' → logprob: -3.253265380859375
    5. '(str' → logprob: -4.253265380859375
    6. '()' → logprob: -6.628265380859375
    7. '<|end|>' → logprob: -7.378265380859375
    8. '```' → logprob: -8.003265380859375
    9. '(
' → logprob: -8.128265380859375
    10. 'int' → logprob: -8.128265380859375

Token 16: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47008216381073
    2. '(input' → logprob: -1.09508216381073
    3. '<|end|>' → logprob: -3.7200822830200195
    4. 'input' → logprob: -5.2200822830200195
    5. '(' → logprob: -5.9700822830200195
    6. ',input' → logprob: -6.0950822830200195
    7. ',' → logprob: -6.3450822830200195
    8. ' input' → logprob: -6.5950822830200195
    9. '<|end|>' → logprob: -6.5950822830200195
    10. ')(' → logprob: -7.5950822830200195

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.054894693195819855
    2. ' input' → logprob: -2.9298946857452393
    3. ' ' → logprob: -12.42989444732666
    4. ')' → logprob: -12.92989444732666
    5. '(input' → logprob: -13.05489444732666
    6. '   ' → logprob: -13.80489444732666
    7. '	input' → logprob: -14.05489444732666
    8. '```' → logprob: -14.30489444732666
    9. '=input' → logprob: -14.55489444732666
    10. '<input' → logprob: -15.42989444732666

Token 18: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.28279852867126465
    2. '()' → logprob: -1.6577985286712646
    3. '().' → logprob: -3.0327985286712646
    4. ')' → logprob: -5.282798767089844
    5. '());' → logprob: -6.532798767089844
    6. '()))' → logprob: -8.032798767089844
    7. '();)' → logprob: -9.032798767089844
    8. '(' → logprob: -9.157798767089844
    9. '('' → logprob: -9.532798767089844
    10. '();' → logprob: -9.532798767089844

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003221150254830718
    2. 'strip' → logprob: -8.250322341918945
    3. 'rstrip' → logprob: -9.750322341918945
    4. ' split' → logprob: -13.500322341918945
    5. '(split' → logprob: -14.125322341918945
    6. ')' → logprob: -15.250322341918945
    7. 'spl' → logprob: -16.875322341918945
    8. 'read' → logprob: -17.000322341918945
    9. 'startswith' → logprob: -18.500322341918945
    10. '```' → logprob: -18.750322341918945

Token 20: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09565949440002441
    2. '))' → logprob: -2.5956594944000244
    3. '())' → logprob: -4.220659255981445
    4. '()))' → logprob: -7.095659255981445
    5. '(' → logprob: -7.595659255981445
    6. '()' → logprob: -8.095659255981445
    7. '('' → logprob: -9.470659255981445
    8. '),' → logprob: -10.095659255981445
    9. ')))' → logprob: -10.095659255981445
    10. '(','' → logprob: -10.470659255981445

Token 21: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0383816957473755
    2. '   ' → logprob: -1.1633816957473755
    3. '<|end|>' → logprob: -1.4133816957473755
    4. ' if' → logprob: -2.913381576538086
    5. '<|end|>' → logprob: -5.163381576538086
    6. ',' → logprob: -5.163381576538086
    7. '\n' → logprob: -5.288381576538086
    8. ':' → logprob: -5.913381576538086
    9. 'if' → logprob: -6.038381576538086
    10. ' ' → logprob: -6.038381576538086

Token 22: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6878938674926758
    2. ' if' → logprob: -1.6878938674926758
    3. '   ' → logprob: -1.9378938674926758
    4. '\n' → logprob: -1.9378938674926758
    5. ')' → logprob: -2.062893867492676
    6. '<|end|>' → logprob: -2.312893867492676
    7. ',' → logprob: -3.937893867492676
    8. 'if' (adapté à ' if') → logprob: -4.062893867492676
    9. '\r' → logprob: -4.312893867492676
    10. '    ' → logprob: -4.437893867492676

Token 23: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.07084539532661438
    2. 'N' → logprob: -2.695845365524292
    3. ' not' → logprob: -7.070845603942871
    4. ' ' → logprob: -9.820845603942871
    5. 'not' → logprob: -12.820845603942871
    6. ' ' → logprob: -14.570845603942871
    7. ' (' → logprob: -14.820845603942871
    8. '  ' → logprob: -15.320845603942871
    9. '	N' → logprob: -15.320845603942871
    10. '0' → logprob: -15.445845603942871

Token 24: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3147382438182831
    2. '==' → logprob: -1.3147382736206055
    3. '=' → logprob: -7.9397382736206055
    4. '<' → logprob: -8.064738273620605
    5. ' <' → logprob: -8.064738273620605
    6. ' <=' → logprob: -8.439738273620605
    7. ')' → logprob: -9.189738273620605
    8. '<=' → logprob: -9.314738273620605
    9. ' ' → logprob: -11.189738273620605
    10. ' =' → logprob: -11.314738273620605

Token 25: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3485339283943176
    2. '0' → logprob: -1.2235338687896729
    3. '-' → logprob: -10.661033630371094
    4. ' ' → logprob: -11.223533630371094
    5. ' -' → logprob: -11.598533630371094
    6. '=' → logprob: -11.723533630371094
    7. '<|end|>' → logprob: -12.098533630371094
    8. '  ' → logprob: -12.786033630371094
    9. '   ' → logprob: -13.098533630371094
    10. ' N' → logprob: -13.098533630371094

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007542393868789077
    2. ' ' → logprob: -7.250754356384277
    3. '-' → logprob: -10.250754356384277
    4. '```' → logprob: -13.313254356384277
    5. ' -' → logprob: -14.000754356384277
    6. '  ' → logprob: -14.188254356384277
    7. ' ' → logprob: -14.313254356384277
    8. '   ' → logprob: -14.375754356384277
    9. ')' → logprob: -14.438254356384277
    10. '=' → logprob: -14.875754356384277

Token 27: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004929834394715726
    2. ' :' → logprob: -8.125493049621582
    3. '   ' → logprob: -8.750493049621582
    4. ':
' → logprob: -10.375493049621582
    5. ' break' → logprob: -13.500493049621582
    6. ':return' → logprob: -13.500493049621582
    7. '       ' → logprob: -13.625493049621582
    8. '    ' → logprob: -13.875493049621582
    9. ' ' → logprob: -14.375493049621582
    10. ' and' → logprob: -14.625493049621582

Token 28: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.006189599167555571
    2. 'A' → logprob: -5.131189823150635
    3. ' ' → logprob: -8.256189346313477
    4. '  ' → logprob: -14.506189346313477
    5. '	A' → logprob: -15.131189346313477
    6. ' X' → logprob: -15.381189346313477
    7. ' ' → logprob: -16.381189346313477
    8. ' N' → logprob: -16.631189346313477
    9. '   ' → logprob: -16.881189346313477
    10. 'X' → logprob: -16.881189346313477

Token 29: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.429057776927948
    2. '==' → logprob: -1.0540578365325928
    3. ' ' → logprob: -8.554058074951172
    4. '<|end|>' → logprob: -9.929058074951172
    5. '  ' → logprob: -10.179058074951172
    6. '=' → logprob: -11.054058074951172
    7. '0' → logprob: -11.429058074951172
    8. 'and' → logprob: -11.679058074951172
    9. '+' → logprob: -12.304058074951172
    10. 'B' → logprob: -12.429058074951172

Token 30: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01746382750570774
    2. ' ' → logprob: -4.142463684082031
    3. 'B' → logprob: -6.642463684082031
    4. ' B' → logprob: -9.017463684082031
    5. '  ' → logprob: -14.142463684082031
    6. 'and' → logprob: -14.267463684082031
    7. ' and' → logprob: -14.767463684082031
    8. '<|end|>' → logprob: -15.329963684082031
    9. '...' → logprob: -15.642463684082031
    10. '۰' → logprob: -16.07996368408203

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015541439643129706
    2. ' ' → logprob: -7.001554012298584
    3. 'B' → logprob: -7.376554012298584
    4. ' B' → logprob: -11.251554489135742
    5. '  ' → logprob: -13.251554489135742
    6. '   ' → logprob: -14.814054489135742
    7. '۰' → logprob: -15.064054489135742
    8. 'and' → logprob: -16.126554489135742
    9. '    ' → logprob: -16.314054489135742
    10. ' and' → logprob: -16.376554489135742

Token 32: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005936621222645044
    2. 'and' → logprob: -5.130936622619629
    3. ' ' → logprob: -12.630936622619629
    4. '	and' → logprob: -13.630936622619629
    5. '    ' → logprob: -13.755936622619629
    6. '   ' → logprob: -14.755936622619629
    7. ' и' → logprob: -14.880936622619629
    8. '  ' → logprob: -15.005936622619629
    9. '```' → logprob: -15.005936622619629
    10. 'そして' → logprob: -15.005936622619629

Token 33: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.5232638716697693
    2. 'B' → logprob: -0.8982638716697693
    3. ' ' → logprob: -9.523263931274414
    4. ' and' → logprob: -10.148263931274414
    5. 'and' → logprob: -11.273263931274414
    6. '	B' → logprob: -12.398263931274414
    7. '<|end|>' → logprob: -13.148263931274414
    8. '    ' → logprob: -13.148263931274414
    9. '   ' → logprob: -13.523263931274414
    10. '  ' → logprob: -13.523263931274414

Token 34: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05508686229586601
    2. '==' → logprob: -2.930086851119995
    3. ' ' → logprob: -9.305087089538574
    4. ' and' → logprob: -9.805087089538574
    5. '<|end|>' → logprob: -10.305087089538574
    6. '<|end|>' → logprob: -11.680087089538574
    7. 'and' → logprob: -12.555087089538574
    8. '=' → logprob: -13.180087089538574
    9. ')==' → logprob: -13.305087089538574
    10. ' =' → logprob: -13.430087089538574

Token 35: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014195593073964119
    2. ' ' → logprob: -4.264195442199707
    3. '<|end|>' → logprob: -10.639195442199707
    4. '<|end|>' → logprob: -13.139195442199707
    5. ' and' → logprob: -13.389195442199707
    6. 'and' → logprob: -13.514195442199707
    7. '```' → logprob: -13.889195442199707
    8. '  ' → logprob: -14.389195442199707
    9. '   ' → logprob: -15.264195442199707
    10. '`' → logprob: -15.576695442199707

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043353010551072657
    2. ' ' → logprob: -7.750433444976807
    3. 'C' → logprob: -13.125433921813965
    4. ' C' → logprob: -15.250433921813965
    5. '  ' → logprob: -16.25043296813965
    6. 'and' → logprob: -16.37543296813965
    7. '۰' → logprob: -16.62543296813965
    8. '```' → logprob: -16.62543296813965
    9. '<|end|>' → logprob: -17.25043296813965
    10. '   ' → logprob: -17.31293296813965

Token 37: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.008230148814618587
    2. 'and' → logprob: -4.883230209350586
    3. ' ' → logprob: -7.508230209350586
    4. '<|end|>' → logprob: -9.758230209350586
    5. '0' → logprob: -12.383230209350586
    6. ' &' → logprob: -13.008230209350586
    7. '```' → logprob: -13.133230209350586
    8. '<|end|>' → logprob: -13.383230209350586
    9. '	and' → logprob: -13.758230209350586
    10. ' a' → logprob: -13.883230209350586

Token 38: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6933174133300781
    2. ' C' → logprob: -0.6933174133300781
    3. ' ' → logprob: -9.318317413330078
    4. ' and' → logprob: -9.693317413330078
    5. '0' → logprob: -12.193317413330078
    6. '	C' → logprob: -12.568317413330078
    7. 'and' → logprob: -12.568317413330078
    8. '  ' → logprob: -13.068317413330078
    9. '<|end|>' → logprob: -13.943317413330078
    10. '   ' → logprob: -14.068317413330078

Token 39: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03217385709285736
    2. '==' → logprob: -3.5321738719940186
    3. ' ' → logprob: -6.9071736335754395
    4. '<|end|>' → logprob: -7.7821736335754395
    5. ' =' → logprob: -8.032174110412598
    6. '=' → logprob: -8.532174110412598
    7. '0' → logprob: -8.782174110412598
    8. '<|end|>' → logprob: -9.907174110412598
    9. ' ' → logprob: -10.157174110412598
    10. '`' → logprob: -10.282174110412598

Token 40: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009757150895893574
    2. ' ' → logprob: -4.634757041931152
    3. '<|end|>' → logprob: -14.259757041931152
    4. ' ' → logprob: -15.259757041931152
    5. '  ' → logprob: -16.38475799560547
    6. ' and' → logprob: -16.50975799560547
    7. '```' → logprob: -16.63475799560547
    8. 'and' → logprob: -17.13475799560547
    9. '<|end|>' → logprob: -17.38475799560547
    10. '۰' → logprob: -17.38475799560547

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003601140109822154
    2. ' ' → logprob: -5.62860107421875
    3. '<|end|>' → logprob: -15.25360107421875
    4. '۰' → logprob: -16.12860107421875
    5. '  ' → logprob: -16.19110107421875
    6. '```' → logprob: -16.31610107421875
    7. ' and' → logprob: -16.50360107421875
    8. '０' → logprob: -16.69110107421875
    9. '   ' → logprob: -16.69110107421875
    10. '<|end|>' → logprob: -16.81610107421875

Token 42: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0033754343166947365
    2. 'and' → logprob: -5.75337553024292
    3. ' ' → logprob: -8.628375053405762
    4. ' a' → logprob: -11.628375053405762
    5. '0' → logprob: -12.378375053405762
    6. '	and' → logprob: -13.503375053405762
    7. 'a' → logprob: -14.128375053405762
    8. '<|end|>' → logprob: -14.378375053405762
    9. ' ' → logprob: -14.503375053405762
    10. '```' → logprob: -14.628375053405762

Token 43: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.016184281557798386
    2. ' X' → logprob: -4.141184329986572
    3. '0' → logprob: -9.141183853149414
    4. ' ' → logprob: -10.141183853149414
    5. 'N' → logprob: -13.516183853149414
    6. 'x' → logprob: -14.891183853149414
    7. '  ' → logprob: -15.016183853149414
    8. ' and' → logprob: -15.141183853149414
    9. '	X' → logprob: -15.266183853149414
    10. '<|end|>' → logprob: -15.266183853149414

Token 44: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07049506157636642
    2. '==' → logprob: -2.695495128631592
    3. '<|end|>' → logprob: -8.695494651794434
    4. '=' → logprob: -8.945494651794434
    5. ' ' → logprob: -8.945494651794434
    6. '0' → logprob: -9.695494651794434
    7. ' =' → logprob: -10.320494651794434
    8. ' ' → logprob: -10.820494651794434
    9. '<|end|>' → logprob: -11.820494651794434
    10. ')' → logprob: -13.882994651794434

Token 45: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01815146580338478
    2. ' ' → logprob: -4.01815128326416
    3. '   ' → logprob: -14.01815128326416
    4. '  ' → logprob: -14.76815128326416
    5. '۰' → logprob: -16.643152236938477
    6. '<|end|>' → logprob: -16.830652236938477
    7. '    ' → logprob: -17.080652236938477
    8. ' ' → logprob: -17.205652236938477
    9. '<|end|>' → logprob: -17.268152236938477
    10. '```' → logprob: -17.580652236938477

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001238004770129919
    2. ' ' → logprob: -9.000123977661133
    3. '۰' → logprob: -16.812623977661133
    4. '-' → logprob: -17.500123977661133
    5. '   ' → logprob: -17.687623977661133
    6. '  ' → logprob: -17.937623977661133
    7. ')' → logprob: -18.000123977661133
    8. '०' → logprob: -18.187623977661133
    9. '０' → logprob: -18.750123977661133
    10. '```' → logprob: -19.000123977661133

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003335585934109986
    2. ':
' → logprob: -8.125333786010742
    3. '   ' → logprob: -11.000333786010742
    4. ' :' → logprob: -11.125333786010742
    5. ':return' → logprob: -13.250333786010742
    6. '       ' → logprob: -13.375333786010742
    7. '):' → logprob: -13.625333786010742
    8. ':\' → logprob: -14.250333786010742
    9. ',' → logprob: -15.875333786010742
    10. ' :
' → logprob: -16.125333786010742

Token 48: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044235438108444214
    2. '   ' → logprob: -3.5442354679107666
    3. '\n' → logprob: -4.4192352294921875
    4. ' break' → logprob: -7.1692352294921875
    5. '    ' → logprob: -7.2942352294921875
    6. '     ' → logprob: -8.919235229492188
    7. '	break' → logprob: -8.919235229492188
    8. ':' → logprob: -9.294235229492188
    9. '      ' → logprob: -9.544235229492188
    10. '<|end|>' → logprob: -9.669235229492188

Token 49: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.056863654404878616
    2. 'break' (adapté à ' break') → logprob: -2.93186354637146
    3. '       ' → logprob: -6.431863784790039
    4. '   ' → logprob: -8.806863784790039
    5. '	break' → logprob: -9.431863784790039
    6. '\n' → logprob: -9.931863784790039
    7. '```' → logprob: -10.681863784790039
    8. 'b' → logprob: -10.806863784790039
    9. '        
' → logprob: -11.556863784790039
    10. 'Break' → logprob: -11.681863784790039

Token 50: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.38731932640075684
    2. '   ' → logprob: -1.3873193264007568
    3. '<|end|>' → logprob: -3.887319326400757
    4. '    
' → logprob: -4.762319564819336
    5. '\r' → logprob: -4.762319564819336
    6. ')' → logprob: -5.262319564819336
    7. ' 
' → logprob: -5.387319564819336
    8. '\' → logprob: -5.387319564819336
    9. ' ' → logprob: -5.512319564819336
    10. '    ' → logprob: -5.512319564819336

Token 51: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3017902672290802
    2. '   ' → logprob: -1.5517902374267578
    3. '    
' → logprob: -4.176790237426758
    4. '
' → logprob: -4.551790237426758
    5. '\r' → logprob: -4.926790237426758
    6. '```' → logprob: -5.426790237426758
    7. 'n' → logprob: -6.551790237426758
    8. '\' → logprob: -6.551790237426758
    9. ' 
' → logprob: -6.801790237426758
    10. '  
' → logprob: -7.426790237426758

Token 52: ' Y' (ID: 865)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.103501558303833
    2. '   ' → logprob: -1.228501558303833
    3. 'count' → logprob: -2.103501558303833
    4. 's' → logprob: -2.978501558303833
    5. 'i' → logprob: -3.353501558303833
    6. '```' → logprob: -3.603501558303833
    7. 't' → logprob: -4.478501319885254
    8. 'd' → logprob: -4.603501319885254
    9. ' count' → logprob: -4.853501319885254
    10. '    ' → logprob: -4.853501319885254

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5945926308631897
    2. '=' → logprob: -1.219592571258545
    3. '_' → logprob: -1.969592571258545
    4. ' ' → logprob: -4.844592571258545
    5. 's' → logprob: -5.719592571258545
    6. ',' → logprob: -6.844592571258545
    7. '[' → logprob: -7.969592571258545
    8. '0' → logprob: -7.969592571258545
    9. ')' → logprob: -9.219593048095703
    10. '_=' → logprob: -9.344593048095703

Token 54: ' list' (ID: 1562)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.7085577845573425
    2. '[int' → logprob: -1.5835578441619873
    3. 'int' → logprob: -2.4585578441619873
    4. '0' → logprob: -2.5835578441619873
    5. ' X' → logprob: -2.9585578441619873
    6. '[' → logprob: -3.4585578441619873
    7. '[]' → logprob: -3.8335578441619873
    8. ' [' → logprob: -4.458557605743408
    9. ' int' → logprob: -4.708557605743408
    10. '1' → logprob: -5.708557605743408

Token 55: '(map' (ID: 16946)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8115087747573853
    2. '(map' → logprob: -0.9365087747573853
    3. '(' → logprob: -1.9365087747573853
    4. '(range' → logprob: -4.061508655548096
    5. '(int' → logprob: -6.686508655548096
    6. '([]' → logprob: -7.686508655548096
    7. '(input' → logprob: -7.936508655548096
    8. '([' → logprob: -9.436509132385254
    9. '(max' → logprob: -10.436509132385254
    10. '[int' → logprob: -10.561509132385254

Token 56: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.033692616969347
    2. '(' → logprob: -3.4086925983428955
    3. '(in' → logprob: -10.908692359924316
    4. '<int' → logprob: -12.158692359924316
    5. ']int' → logprob: -12.283692359924316
    6. 'int' → logprob: -12.408692359924316
    7. ',int' → logprob: -12.908692359924316
    8. '[int' → logprob: -13.158692359924316
    9. '(lambda' → logprob: -13.158692359924316
    10. '(
' → logprob: -13.533692359924316

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04541819915175438
    2. '(' → logprob: -3.2954182624816895
    3. ',input' → logprob: -5.0454182624816895
    4. '(input' → logprob: -7.6704182624816895
    5. ',int' → logprob: -8.170417785644531
    6. '(),' → logprob: -9.545417785644531
    7. '(int' → logprob: -10.295417785644531
    8. ' ,' → logprob: -10.670417785644531
    9. ')' → logprob: -10.795417785644531
    10. '```' → logprob: -12.545417785644531

Token 58: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16022758185863495
    2. ' input' → logprob: -1.9102275371551514
    3. '(input' → logprob: -14.16022777557373
    4. '	input' → logprob: -14.16022777557373
    5. '<input' → logprob: -14.16022777557373
    6. ',input' → logprob: -15.16022777557373
    7. ' ' → logprob: -15.28522777557373
    8. '=input' → logprob: -15.53522777557373
    9. '_input' → logprob: -15.66022777557373
    10. '[input' → logprob: -16.035226821899414

Token 59: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02059292234480381
    2. '()' → logprob: -3.8955929279327393
    3. '(' → logprob: -10.27059268951416
    4. '()))' → logprob: -11.64559268951416
    5. ')' → logprob: -13.77059268951416
    6. '())' → logprob: -13.89559268951416
    7. ' ().' → logprob: -14.02059268951416
    8. '(),' → logprob: -14.14559268951416
    9. '():' → logprob: -14.27059268951416
    10. '()>' → logprob: -14.52059268951416

Token 60: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.759734732331708e-05
    2. 'strip' → logprob: -11.125017166137695
    3. 'rstrip' → logprob: -13.875017166137695
    4. 'spl' → logprob: -14.250017166137695
    5. 's' → logprob: -14.375017166137695
    6. ' split' → logprob: -14.875017166137695
    7. '(split' → logprob: -15.500017166137695
    8. 'read' → logprob: -17.750017166137695
    9. '_split' → logprob: -17.875017166137695
    10. '.split' → logprob: -17.875017166137695

Token 61: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.09231991320848465
    2. '))' → logprob: -3.217319965362549
    3. '())' → logprob: -3.592319965362549
    4. '()' → logprob: -4.217319965362549
    5. '(' → logprob: -5.592319965362549
    6. ')' → logprob: -6.342319965362549
    7. '()))
' → logprob: -8.84231948852539
    8. '   ' → logprob: -9.34231948852539
    9. '()));' → logprob: -10.59231948852539
    10. '(),' → logprob: -11.34231948852539

Token 62: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.731715202331543
    2. '\n' → logprob: -2.231715202331543
    3. '    
' → logprob: -2.356715202331543
    4. '
' → logprob: -2.731715202331543
    5. ' ' → logprob: -2.856715202331543
    6. '    ' → logprob: -3.231715202331543
    7. ' 
' → logprob: -3.356715202331543
    8. 'n' → logprob: -3.481715202331543
    9. '  
' → logprob: -3.856715202331543
    10. '   
' → logprob: -4.356715202331543

Token 63: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.211795687675476
    2. '   ' → logprob: -1.711795687675476
    3. 'd' → logprob: -2.0867958068847656
    4. '    ' → logprob: -2.2117958068847656
    5. 'n' → logprob: -2.8367958068847656
    6. 'count' → logprob: -2.8367958068847656
    7. 'j' → logprob: -3.4617958068847656
    8. 's' → logprob: -4.086795806884766
    9. ' count' → logprob: -4.586795806884766
    10. ' for' → logprob: -4.711795806884766

Token 64: ' current' (ID: 2208)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7984103560447693
    2. 'cnt' → logprob: -1.298410415649414
    3. 'for' → logprob: -2.298410415649414
    4. 'ans' → logprob: -3.548410415649414
    5. 'dp' → logprob: -4.048410415649414
    6. 'd' → logprob: -4.173410415649414
    7. 'x' → logprob: -4.423410415649414
    8. 'm' → logprob: -4.673410415649414
    9. 'p' → logprob: -4.673410415649414
    10. 'j' → logprob: -4.673410415649414

Token 65: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17341990768909454
    2. ' =' → logprob: -2.173419952392578
    3. 'X' → logprob: -4.173419952392578
    4. '=' → logprob: -4.298419952392578
    5. '_value' → logprob: -5.298419952392578
    6. '_val' → logprob: -5.423419952392578
    7. '_X' → logprob: -6.048419952392578
    8. '_x' → logprob: -6.423419952392578
    9. ' ' → logprob: -6.673419952392578
    10. ' _' → logprob: -7.548419952392578

Token 66: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.004083743318915367
    2. ' X' → logprob: -5.504083633422852
    3. '0' → logprob: -13.004083633422852
    4. ' ' → logprob: -13.379083633422852
    5. '	X' → logprob: -14.129083633422852
    6. '   ' → logprob: -15.129083633422852
    7. '<|end|>' → logprob: -15.129083633422852
    8. '>X' → logprob: -16.12908363342285
    9. 'x' → logprob: -16.87908363342285
    10. '  ' → logprob: -16.87908363342285

Token 67: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.288909912109375
    2. '<|end|>' → logprob: -3.538909912109375
    3. '   ' → logprob: -3.663909912109375
    4. '  ' → logprob: -3.663909912109375
    5. ' for' → logprob: -3.913909912109375
    6. '
' → logprob: -3.913909912109375
    7. ',' → logprob: -3.913909912109375
    8. 'for' → logprob: -4.163909912109375
    9. '    ' → logprob: -4.413909912109375
    10. '+' → logprob: -4.538909912109375

Token 68: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6620213389396667
    2. '    
' → logprob: -2.5370213985443115
    3. '   ' → logprob: -2.5370213985443115
    4. '    ' → logprob: -2.6620213985443115
    5. '<|end|>' → logprob: -2.6620213985443115
    6. '
' → logprob: -3.5370213985443115
    7. '  ' → logprob: -3.7870213985443115
    8. '   
' → logprob: -3.7870213985443115
    9. ' 
' → logprob: -3.9120213985443115
    10. ',' → logprob: -4.037021160125732

Token 69: ' stopped' (ID: 18145)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2731296122074127
    2. 'count' → logprob: -2.02312970161438
    3. 'found' → logprob: -2.52312970161438
    4. 'cnt' → logprob: -4.148129463195801
    5. ' for' → logprob: -5.523129463195801
    6. 'ans' → logprob: -6.648129463195801
    7. 'answer' → logprob: -7.148129463195801
    8. 'flag' → logprob: -7.148129463195801
    9. ' found' → logprob: -7.273129463195801
    10. 'ok' → logprob: -7.273129463195801

Token 70: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5423803329467773
    2. ' =' → logprob: -0.9173803329467773
    3. '_' → logprob: -4.042380332946777
    4. '_count' → logprob: -6.792380332946777
    5. '_at' → logprob: -8.542380332946777
    6. ' ' → logprob: -9.792380332946777
    7. '_=' → logprob: -9.792380332946777
    8. ',' → logprob: -10.917380332946777
    9. '_time' → logprob: -11.292380332946777
    10. 'count' → logprob: -11.917380332946777

Token 71: ' ' (ID: 220)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.3157188296318054
    2. 'False' → logprob: -1.3157188892364502
    3. '0' → logprob: -6.190718650817871
    4. ' ' → logprob: -8.190718650817871
    5. ' True' → logprob: -10.065718650817871
    6. ' -' → logprob: -10.315718650817871
    7. 'True' → logprob: -11.690718650817871
    8. ' false' → logprob: -11.815718650817871
    9. '   ' → logprob: -11.815718650817871
    10. '-' → logprob: -11.940718650817871

Token 72: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.008590933866798878
    2. '-' → logprob: -5.1335906982421875
    3. '0' → logprob: -6.2585906982421875
    4. '-F' → logprob: -7.6335906982421875
    5. ' False' → logprob: -8.758590698242188
    6. 'F' → logprob: -10.258590698242188
    7. 'True' → logprob: -10.383590698242188
    8. 'None' → logprob: -11.008590698242188
    9. '100' → logprob: -12.008590698242188
    10. ' ' → logprob: -12.508590698242188

Token 73: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04214239493012428
    2. '<|end|>' → logprob: -4.292142391204834
    3. '\n' → logprob: -4.542142391204834
    4. '    
' → logprob: -5.667142391204834
    5. ' 
' → logprob: -5.667142391204834
    6. '  
' → logprob: -5.917142391204834
    7. ' for' → logprob: -6.167142391204834
    8. '   ' → logprob: -6.667142391204834
    9. '   
' → logprob: -6.667142391204834
    10. '<|end|>' → logprob: -7.417142391204834

Token 75: ' frame' (ID: 7298)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021731719374656677
    2. ' for' → logprob: -3.8967316150665283
    3. 'while' → logprob: -7.021731853485107
    4. 's' → logprob: -10.14673137664795
    5. 'range' → logprob: -10.27173137664795
    6. ')' → logprob: -10.39673137664795
    7. '   ' → logprob: -10.64673137664795
    8. '    ' → logprob: -10.77173137664795
    9. 'n' → logprob: -10.77173137664795
    10. 'f' → logprob: -10.89673137664795

Token 76: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.032532092183828354
    2. ' =' → logprob: -3.657531976699829
    3. '_' → logprob: -5.532532215118408
    4. '=' → logprob: -7.157532215118408
    5. '_count' → logprob: -7.532532215118408
    6. ' +=' → logprob: -7.532532215118408
    7. ' s' → logprob: -8.90753173828125
    8. 'count' → logprob: -9.40753173828125
    9. '_s' → logprob: -9.90753173828125
    10. ' ' → logprob: -10.15753173828125

Token 77: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019543567672371864
    2. ' ' → logprob: -4.394543647766113
    3. '1' → logprob: -5.019543647766113
    4. '100' → logprob: -8.019543647766113
    5. '   ' → logprob: -10.519543647766113
    6. '10' → logprob: -11.394543647766113
    7. '-' → logprob: -12.519543647766113
    8. '20' → logprob: -12.644543647766113
    9. '  ' → logprob: -12.707043647766113
    10. '+' → logprob: -13.082043647766113

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0038954415358603
    2. '100' → logprob: -6.003895282745361
    3. '1' → logprob: -6.753895282745361
    4. '10' → logprob: -9.12889575958252
    5. ' ' → logprob: -9.50389575958252
    6. '-' → logprob: -10.50389575958252
    7. '{}' → logprob: -12.25389575958252
    8. '200' → logprob: -12.50389575958252
    9. '000' → logprob: -12.94139575958252
    10. 'N' → logprob: -13.00389575958252

Token 79: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7648212313652039
    2. '   ' → logprob: -2.1398212909698486
    3. '    ' → logprob: -2.3898212909698486
    4. '\' → logprob: -2.5148212909698486
    5. '\n' → logprob: -2.5148212909698486
    6. '[' → logprob: -3.2648212909698486
    7. '<|end|>' → logprob: -4.1398210525512695
    8. ' 
' → logprob: -4.2648210525512695
    9. ' while' → logprob: -4.5148210525512695
    10. '  ' → logprob: -5.0148210525512695

Token 80: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0920661687850952
    2. 'while' → logprob: -1.0920661687850952
    3. '\n' → logprob: -1.9670661687850952
    4. ' while' → logprob: -2.3420662879943848
    5. '    ' → logprob: -4.217066287994385
    6. '\' → logprob: -4.592066287994385
    7. 't' → logprob: -4.717066287994385
    8. '1' → logprob: -4.842066287994385
    9. ')' → logprob: -5.342066287994385
    10. '\t' → logprob: -5.342066287994385

Token 82: '_frame' (ID: 19952)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3411048650741577
    2. '_frames' → logprob: -1.9661048650741577
    3. '_frame' → logprob: -2.2161049842834473
    4. '_iterations' → logprob: -4.591104984283447
    5. ' _' → logprob: -4.716104984283447
    6. '_count' → logprob: -5.341104984283447
    7. '_iter' → logprob: -5.966104984283447
    8. '_value' → logprob: -6.466104984283447
    9. '_length' → logprob: -6.591104984283447
    10. '_len' → logprob: -6.966104984283447

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13052307069301605
    2. '=' → logprob: -2.1305229663848877
    3. ' ' → logprob: -6.630523204803467
    4. ' +=' → logprob: -7.005523204803467
    5. '_' → logprob: -7.380523204803467
    6. 's' → logprob: -8.630522727966309
    7. ',' → logprob: -9.130522727966309
    8. '   ' → logprob: -9.380522727966309
    9. '<|end|>' → logprob: -9.505522727966309
    10. '+' → logprob: -9.880522727966309

Token 84: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22377201914787292
    2. '100' → logprob: -1.7237720489501953
    3. '10' → logprob: -3.8487720489501953
    4. ' N' → logprob: -7.973772048950195
    5. '1' → logprob: -8.723772048950195
    6. 'N' → logprob: -9.723772048950195
    7. '500' → logprob: -9.723772048950195
    8. '200' → logprob: -10.098772048950195
    9. '300' → logprob: -10.973772048950195
    10. '101' → logprob: -11.098772048950195

Token 85: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.007580004632472992
    2. '10' → logprob: -5.382579803466797
    3. '200' → logprob: -6.382579803466797
    4. 'N' → logprob: -8.132579803466797
    5. '101' → logprob: -8.382579803466797
    6. '500' → logprob: -8.632579803466797
    7. '2' → logprob: -8.757579803466797
    8. '300' → logprob: -9.007579803466797
    9. ' ' → logprob: -9.757579803466797
    10. '150' → logprob: -10.257579803466797

Token 86: '00' (ID: 504)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.03172113373875618
    2. '00' → logprob: -3.7817211151123047
    3. '0' → logprob: -4.781721115112305
    4. '001' → logprob: -10.781721115112305
    5. '_' → logprob: -10.906721115112305
    6. '100' → logprob: -12.406721115112305
    7. '1' → logprob: -12.781721115112305
    8. '010' → logprob: -13.906721115112305
    9. ' ' → logprob: -13.969221115112305
    10. '006' → logprob: -14.031721115112305

Token 87: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23836027085781097
    2. '   ' → logprob: -2.7383601665496826
    3. '<|end|>' → logprob: -3.2383601665496826
    4. '\n' → logprob: -3.3633601665496826
    5. ':' → logprob: -3.3633601665496826
    6. '    
' → logprob: -4.363360404968262
    7. ' 
' → logprob: -5.363360404968262
    8. '  
' → logprob: -5.863360404968262
    9. ':
' → logprob: -5.988360404968262
    10. '\' → logprob: -6.363360404968262

Token 88: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6979063153266907
    2. '\n' → logprob: -1.322906255722046
    3. ':' → logprob: -2.322906255722046
    4. '<|end|>' → logprob: -2.822906255722046
    5. '   ' → logprob: -3.572906255722046
    6. ' 
' → logprob: -4.572906494140625
    7. ':
' → logprob: -4.697906494140625
    8. '  
' → logprob: -4.947906494140625
    9. ' ' → logprob: -5.322906494140625
    10. '\' → logprob: -5.447906494140625

Token 89: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.6459380388259888
    2. '   ' → logprob: -2.145937919616699
    3. ' ' → logprob: -2.895937919616699
    4. ' while' → logprob: -3.145937919616699
    5. ':' → logprob: -3.270937919616699
    6. '_' → logprob: -3.395937919616699
    7. '    ' → logprob: -3.520937919616699
    8. ')' → logprob: -3.645937919616699
    9. '1' → logprob: -4.145937919616699
    10. 'for' → logprob: -4.395937919616699

Token 90: ' frame' (ID: 7298)
  Prédit: ' frame'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' frame' → logprob: -0.004528150428086519
    2. 'frame' → logprob: -5.629528045654297
    3. ' current' → logprob: -7.379528045654297
    4. ' True' → logprob: -9.129528045654297
    5. ' stopped' → logprob: -9.254528045654297
    6. '(frame' → logprob: -10.504528045654297
    7. ' not' → logprob: -10.879528045654297
    8. '	frame' → logprob: -11.379528045654297
    9. 'current' → logprob: -12.004528045654297
    10. ' ' → logprob: -12.004528045654297

Token 91: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.018802721053361893
    2. ' <=' → logprob: -4.018802642822266
    3. '<' → logprob: -7.393802642822266
    4. '<=' → logprob: -10.768802642822266
    5. ' ' → logprob: -11.143802642822266
    6. '   ' → logprob: -14.143802642822266
    7. ' ≤' → logprob: -15.393802642822266
    8. ' <
' → logprob: -15.518802642822266
    9. '  ' → logprob: -15.768802642822266
    10. ' !=' → logprob: -16.393802642822266

Token 92: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.2520504593849182
    2. 'max' → logprob: -1.5020503997802734
    3. ' ' → logprob: -9.377050399780273
    4. '	max' → logprob: -11.002050399780273
    5. '100' → logprob: -11.377050399780273
    6. '(max' → logprob: -12.627050399780273
    7. '   ' → logprob: -13.252050399780273
    8. '  ' → logprob: -13.377050399780273
    9. '=max' → logprob: -14.877050399780273
    10. '[max' → logprob: -15.127050399780273

Token 93: '_frame' (ID: 19952)
  Prédit: '_frame'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_frame' → logprob: -0.00010807292710524052
    2. '_' → logprob: -10.000107765197754
    3. ' _' → logprob: -10.375107765197754
    4. '_f' → logprob: -12.125107765197754
    5. 'frame' → logprob: -12.250107765197754
    6. '00' → logprob: -12.625107765197754
    7. '   ' → logprob: -12.750107765197754
    8. '_frames' → logprob: -12.875107765197754
    9. '0' → logprob: -13.000107765197754
    10. '_
' → logprob: -13.500107765197754

Token 94: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002799771726131439
    2. ' :' → logprob: -6.127799987792969
    3. ':
' → logprob: -7.877799987792969
    4. ' and' → logprob: -8.752799987792969
    5. '):' → logprob: -10.627799987792969
    6. '   ' → logprob: -10.877799987792969
    7. ' :
' → logprob: -12.002799987792969
    8. '       ' → logprob: -12.377799987792969
    9. ':**' → logprob: -12.377799987792969
    10. 'and' → logprob: -12.502799987792969

Token 95: ' stopped' (ID: 18145)
  Prédit: ' stopped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stopped' → logprob: -0.9101523160934448
    2. 'st' → logprob: -1.2851523160934448
    3. ' current' → logprob: -1.4101523160934448
    4. 'current' → logprob: -3.2851524353027344
    5. ' not' → logprob: -3.6601524353027344
    6. ' True' → logprob: -5.535152435302734
    7. ' Y' → logprob: -5.785152435302734
    8. 'not' → logprob: -6.035152435302734
    9. 'True' → logprob: -7.035152435302734
    10. 'Y' → logprob: -7.535152435302734

Token 96: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.35134899616241455
    2. '==' → logprob: -1.4763489961624146
    3. ' <' → logprob: -2.851348876953125
    4. '<' → logprob: -4.976348876953125
    5. ' !=' → logprob: -6.351348876953125
    6. ' ' → logprob: -7.351348876953125
    7. '!=' → logprob: -8.476348876953125
    8. '=' → logprob: -8.976348876953125
    9. ' <=' → logprob: -9.101348876953125
    10. 's' → logprob: -9.476348876953125

Token 97: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.023891109973192215
    2. ' N' → logprob: -3.7738912105560303
    3. 'len' → logprob: -7.773890972137451
    4. ' ' → logprob: -9.89889144897461
    5. '100' → logprob: -9.89889144897461
    6. '   ' → logprob: -10.02389144897461
    7. '10' → logprob: -10.89889144897461
    8. ' len' → logprob: -11.02389144897461
    9. '5' → logprob: -11.52389144897461
    10. 'n' → logprob: -12.02389144897461

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017078587785363197
    2. ':
' → logprob: -4.142078399658203
    3. ' and' → logprob: -7.517078399658203
    4. ' :' → logprob: -7.892078399658203
    5. 'and' → logprob: -9.267078399658203
    6. ' :
' → logprob: -10.642078399658203
    7. ':

' → logprob: -12.767078399658203
    8. ':
' → logprob: -13.142078399658203
    9. '[' → logprob: -14.767078399658203
    10. '):' → logprob: -14.892078399658203

Token 99: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26078909635543823
    2. '   ' → logprob: -1.760789155960083
    3. ':
' → logprob: -3.510789155960083
    4. '       ' → logprob: -5.010788917541504
    5. ' :' → logprob: -5.260788917541504
    6. '<|end|>' → logprob: -5.260788917541504
    7. ' :
' → logprob: -6.260788917541504
    8. ' current' → logprob: -6.885788917541504
    9. '    
' → logprob: -6.885788917541504
    10. '    ' → logprob: -7.010788917541504

Token 100: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5391669273376465
    2. 'if' → logprob: -1.9141669273376465
    3. 'frame' → logprob: -2.2891669273376465
    4. '   ' → logprob: -2.5391669273376465
    5. 'print' → logprob: -2.5391669273376465
    6. ' if' → logprob: -5.2891669273376465
    7. ' current' → logprob: -5.7891669273376465
    8. ' frame' → logprob: -8.289167404174805
    9. '       ' → logprob: -8.414167404174805
    10. '
' → logprob: -9.039167404174805

Token 101: ' next' (ID: 2613)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.4532608091831207
    2. ' current' → logprob: -1.5782607793807983
    3. 'if' → logprob: -2.828260898590088
    4. ' if' → logprob: -3.453260898590088
    5. 'frame' → logprob: -3.703260898590088
    6. 'for' → logprob: -4.953260898590088
    7. ' frame' → logprob: -5.078260898590088
    8. ' for' → logprob: -5.203260898590088
    9. ' found' → logprob: -5.328260898590088
    10. 'found' → logprob: -5.453260898590088

Token 102: ' random' (ID: 7526)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.0166634321212769
    2. ' =' → logprob: -1.6416634321212769
    3. '_value' → logprob: -1.7666634321212769
    4. 'X' → logprob: -2.2666635513305664
    5. '=' → logprob: -2.5166635513305664
    6. 'val' → logprob: -3.7666635513305664
    7. '_' → logprob: -4.266663551330566
    8. 'value' → logprob: -4.641663551330566
    9. '_X' → logprob: -4.766663551330566
    10. '_x' → logprob: -4.891663551330566

Token 103: ' number' (ID: 2086)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2945261299610138
    2. ' =' → logprob: -1.9195261001586914
    3. '_' → logprob: -3.2945261001586914
    4. 'X' → logprob: -4.169526100158691
    5. '_=' → logprob: -4.169526100158691
    6. 'current' → logprob: -4.794526100158691
    7. 'number' → logprob: -5.044526100158691
    8. '=current' → logprob: -5.169526100158691
    9. 'value' → logprob: -5.294526100158691
    10. '_value' → logprob: -5.419526100158691

Token 104: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2848406434059143
    2. '=' → logprob: -1.4098405838012695
    3. 'current' → logprob: -6.0348405838012695
    4. ' current' → logprob: -7.9098405838012695
    5. '    ' → logprob: -8.15984058380127
    6. '=current' → logprob: -8.40984058380127
    7. '   ' → logprob: -8.65984058380127
    8. ' ' → logprob: -10.15984058380127
    9. '        ' → logprob: -10.78484058380127
    10. ' =
' → logprob: -10.78484058380127

Token 105: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6628685593605042
    2. '=' → logprob: -0.7878685593605042
    3. '   ' → logprob: -4.537868499755859
    4. 'current' → logprob: -4.662868499755859
    5. '    ' → logprob: -5.287868499755859
    6. '       ' → logprob: -6.662868499755859
    7. ' current' → logprob: -6.787868499755859
    8. '=current' → logprob: -7.787868499755859
    9. '        ' → logprob: -7.912868499755859
    10. ' ' → logprob: -7.912868499755859

Token 106: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.3236074447631836
    2. ' current' → logprob: -1.3236074447631836
    3. '   ' → logprob: -4.698607444763184
    4. 'next' → logprob: -7.698607444763184
    5. ' next' → logprob: -8.198607444763184
    6. '	current' → logprob: -9.073607444763184
    7. 'X' → logprob: -9.198607444763184
    8. ' ' → logprob: -10.198607444763184
    9. ' X' → logprob: -10.573607444763184
    10. '    ' → logprob: -10.573607444763184

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.281157910823822
    2. '=' → logprob: -1.4061579704284668
    3. '＝' → logprob: -12.531157493591309
    4. ' =(' → logprob: -13.406157493591309
    5. '=(' → logprob: -14.156157493591309
    6. ' ' → logprob: -14.156157493591309
    7. '=A' → logprob: -15.906157493591309
    8. '	' → logprob: -16.156158447265625
    9. '*=' → logprob: -16.281158447265625
    10. ' *=' → logprob: -16.281158447265625

Token 108: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5961321592330933
    2. '(A' → logprob: -0.8461321592330933
    3. '(' → logprob: -4.471132278442383
    4. '(C' → logprob: -5.221132278442383
    5. ' ' → logprob: -7.096132278442383
    6. '(B' → logprob: -7.221132278442383
    7. '(current' → logprob: -7.846132278442383
    8. '   ' → logprob: -8.471132278442383
    9. '(X' → logprob: -8.471132278442383
    10. '(a' → logprob: -8.596132278442383

Token 109: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.39426499605178833
    2. '(A' → logprob: -1.1442649364471436
    3. ' A' → logprob: -5.269265174865723
    4. ' (' → logprob: -6.394265174865723
    5. '(' → logprob: -7.894265174865723
    6. '   ' → logprob: -10.019265174865723
    7. ' ' → logprob: -10.769265174865723
    8. ')' → logprob: -10.894265174865723
    9. '(
' → logprob: -11.019265174865723
    10. '(current' → logprob: -11.019265174865723

Token 110: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.57595294713974
    2. '*' → logprob: -0.82595294713974
    3. ' ' → logprob: -11.325952529907227
    4. '   ' → logprob: -14.825952529907227
    5. 'current' → logprob: -14.950952529907227
    6. '**' → logprob: -15.700952529907227
    7. ' ' → logprob: -15.950952529907227
    8. '  ' → logprob: -16.075952529907227
    9. '    ' → logprob: -16.200952529907227
    10. '＊' → logprob: -16.700952529907227

Token 111: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.04302453622221947
    2. ' current' → logprob: -3.1680245399475098
    3. 'urrent' → logprob: -12.043024063110352
    4. '
' → logprob: -12.043024063110352
    5. ' ' → logprob: -12.543024063110352
    6. '	current' → logprob: -12.918024063110352
    7. 'cur' → logprob: -13.168024063110352
    8. '   ' → logprob: -13.418024063110352
    9. 'previous' → logprob: -13.543024063110352
    10. 'c' → logprob: -15.043024063110352

Token 112: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5262811779975891
    2. ' +' → logprob: -0.9012811779975891
    3. '+B' → logprob: -5.776281356811523
    4. '＋' → logprob: -10.776281356811523
    5. ' ' → logprob: -11.026281356811523
    6. '+b' → logprob: -12.401281356811523
    7. '   ' → logprob: -12.651281356811523
    8. '%' → logprob: -13.026281356811523
    9. '+C' → logprob: -13.401281356811523
    10. 'plus' → logprob: -13.901281356811523

Token 113: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.014165864326059818
    2. ' B' → logprob: -4.264165878295898
    3. '	B' → logprob: -13.764165878295898
    4. ')' → logprob: -14.514165878295898
    5. 'C' → logprob: -14.639165878295898
    6. ' ' → logprob: -15.389165878295898
    7. 'b' → logprob: -16.3891658782959
    8. '>B' → logprob: -17.7641658782959
    9. '   ' → logprob: -18.1391658782959
    10. ' ' → logprob: -19.0141658782959

Token 114: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.764977686339989e-05
    2. ' )' → logprob: -10.250057220458984
    3. ')%' → logprob: -11.000057220458984
    4. ')
' → logprob: -12.375057220458984
    5. '%' → logprob: -14.500057220458984
    6. '）' → logprob: -15.375057220458984
    7. '
' → logprob: -15.500057220458984
    8. ')

' → logprob: -15.750057220458984
    9. '}' → logprob: -17.000057220458984
    10. ']' → logprob: -17.250057220458984

Token 115: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3488772213459015
    2. '%' → logprob: -1.223877191543579
    3. ')' → logprob: -8.098876953125
    4. ' ' → logprob: -9.723876953125
    5. '%c' → logprob: -10.598876953125
    6. ')%' → logprob: -11.348876953125
    7. ' ' → logprob: -11.973876953125
    8. ' )' → logprob: -12.473876953125
    9. ' %
' → logprob: -12.973876953125
    10. '7' → logprob: -13.348876953125

Token 116: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00029685118352063
    2. ' C' → logprob: -8.125296592712402
    3. ' ' → logprob: -14.375296592712402
    4. '.C' → logprob: -16.87529754638672
    5. '100' → logprob: -17.12529754638672
    6. '   ' → logprob: -17.25029754638672
    7. '<C' → logprob: -17.62529754638672
    8. '  ' → logprob: -18.00029754638672
    9. '>C' → logprob: -18.12529754638672
    10. '163' → logprob: -18.12529754638672

Token 117: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01190858706831932
    2. ' if' → logprob: -5.511908531188965
    3. '<|end|>' → logprob: -5.761908531188965
    4. '       ' → logprob: -6.886908531188965
    5. '  
' → logprob: -7.261908531188965
    6. '   ' → logprob: -7.511908531188965
    7. '    
' → logprob: -7.511908531188965
    8. ' 
' → logprob: -8.011908531188965
    9. '
' → logprob: -8.136908531188965
    10. '<|end|>' → logprob: -8.636908531188965

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0956577062606812
    2. '<|end|>' → logprob: -1.2206577062606812
    3. '
' → logprob: -1.3456577062606812
    4. '  
' → logprob: -3.9706578254699707
    5. '        
' → logprob: -4.220657825469971
    6. '   ' → logprob: -4.470657825469971
    7. '<|end|>' → logprob: -4.470657825469971
    8. '[' → logprob: -4.595657825469971
    9. '```' → logprob: -4.970657825469971
    10. ' ' → logprob: -5.220657825469971

Token 119: ' frame' (ID: 7298)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.42428234219551086
    2. '       ' → logprob: -1.4242823123931885
    3. 'if' → logprob: -2.2992823123931885
    4. '   ' → logprob: -6.549282550811768
    5. '
' → logprob: -6.799282550811768
    6. '        
' → logprob: -7.674282550811768
    7. ' current' → logprob: -8.04928207397461
    8. ' for' → logprob: -8.42428207397461
    9. ' ' → logprob: -8.79928207397461
    10. 'current' → logprob: -8.79928207397461

Token 120: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008123258128762245
    2. '+=' → logprob: -4.883123397827148
    3. '+' → logprob: -7.883123397827148
    4. ' ' → logprob: -9.633123397827148
    5. ' +' → logprob: -9.633123397827148
    6. '    ' → logprob: -12.633123397827148
    7. '<|end|>' → logprob: -13.383123397827148
    8. '   ' → logprob: -13.633123397827148
    9. '  ' → logprob: -14.633123397827148
    10. ' =' → logprob: -14.758123397827148

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009117019944824278
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.000911712646484
    4. '<|end|>' → logprob: -16.875911712646484
    5. ' ' → logprob: -17.625911712646484
    6. '+' → logprob: -17.625911712646484
    7. '```' → logprob: -17.625911712646484
    8. '  ' → logprob: -18.625911712646484
    9. '
' → logprob: -19.063411712646484
    10. '۱' → logprob: -19.313411712646484

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.375011444091797
    4. '```' → logprob: -16.750011444091797
    5. '
' → logprob: -18.250011444091797
    6. '<|end|>' → logprob: -18.375011444091797
    7. '  ' → logprob: -18.812511444091797
    8. '+' → logprob: -19.562511444091797
    9. '0' → logprob: -19.812511444091797
    10. '`' → logprob: -19.875011444091797

Token 123: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.234092578291893
    2. '   ' → logprob: -2.1090924739837646
    3. '<|end|>' → logprob: -2.9840924739837646
    4. ' if' → logprob: -3.4840924739837646
    5. ' ' → logprob: -6.859092712402344
    6. 'if' → logprob: -7.109092712402344
    7. '        
' → logprob: -7.109092712402344
    8. '```' → logprob: -7.484092712402344
    9. '
' → logprob: -7.609092712402344
    10. '  
' → logprob: -7.859092712402344

Token 125: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11554773151874542
    2. ' if' → logprob: -2.3655476570129395
    3. 'for' → logprob: -4.9905476570129395
    4. '       ' → logprob: -5.4905476570129395
    5. ' for' → logprob: -5.9905476570129395
    6. '   ' → logprob: -6.3655476570129395
    7. ' ' → logprob: -11.115548133850098
    8. '
' → logprob: -11.115548133850098
    9. 'y' → logprob: -12.240548133850098
    10. 'i' → logprob: -12.365548133850098

Token 126: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.1404065191745758
    2. 'current' → logprob: -2.390406608581543
    3. ' Y' → logprob: -3.515406608581543
    4. 'Y' → logprob: -4.890406608581543
    5. ' stopped' → logprob: -6.640406608581543
    6. ' ' → logprob: -8.765406608581543
    7. 'st' → logprob: -8.765406608581543
    8. '(current' → logprob: -9.327906608581543
    9. ' not' → logprob: -9.827906608581543
    10. ' X' → logprob: -10.077906608581543

Token 127: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04507128894329071
    2. '==' → logprob: -3.1700713634490967
    3. ' in' → logprob: -6.295071125030518
    4. '%' → logprob: -9.545071601867676
    5. '=' → logprob: -9.670071601867676
    6. 'in' → logprob: -10.295071601867676
    7. ' ' → logprob: -11.295071601867676
    8. ' %' → logprob: -11.545071601867676
    9. ' ' → logprob: -12.045071601867676
    10. ' =' → logprob: -12.045071601867676

Token 128: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.070064477622509
    2. ' Y' → logprob: -2.6950645446777344
    3. ' ' → logprob: -9.945064544677734
    4. '	Y' → logprob: -10.570064544677734
    5. '<|end|>' → logprob: -11.070064544677734
    6. '0' → logprob: -11.445064544677734
    7. '
' → logprob: -11.445064544677734
    8. '   ' → logprob: -11.820064544677734
    9. '  ' → logprob: -13.570064544677734
    10. '20' → logprob: -13.570064544677734

Token 129: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002655079588294029
    2. 'st' → logprob: -8.250265121459961
    3. '[s' → logprob: -13.375265121459961
    4. ' [' → logprob: -14.000265121459961
    5. '[
' → logprob: -14.500265121459961
    6. 'frame' → logprob: -14.625265121459961
    7. '[(' → logprob: -15.625265121459961
    8. '   ' → logprob: -16.12526512145996
    9. 's' → logprob: -16.50026512145996
    10. '[-' → logprob: -16.50026512145996

Token 130: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.00039039674447849393
    2. ' stopped' → logprob: -8.12539005279541
    3. '[' → logprob: -9.50039005279541
    4. 'stop' → logprob: -11.37539005279541
    5. 'Stopped' → logprob: -12.50039005279541
    6. '   ' → logprob: -14.00039005279541
    7. '(st' → logprob: -14.25039005279541
    8. 's' → logprob: -14.37539005279541
    9. '	st' → logprob: -14.62539005279541
    10. 'sto' → logprob: -14.62539005279541

Token 131: 'opped' (ID: 12918)
  Prédit: 'opped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opped' → logprob: -0.006907532922923565
    2. 'op' → logprob: -5.5069074630737305
    3. '[' → logprob: -5.8819074630737305
    4. 'opt' → logprob: -10.88190746307373
    5. 'oped' → logprob: -12.38190746307373
    6. '0' → logprob: -13.13190746307373
    7. 'ops' → logprob: -13.50690746307373
    8. 'pped' → logprob: -13.75690746307373
    9. ']' → logprob: -14.13190746307373
    10. 'o' → logprob: -14.13190746307373

Token 132: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0028268657624721527
    2. ']:
' → logprob: -6.502826690673828
    3. ':' → logprob: -6.877826690673828
    4. '):' → logprob: -8.752826690673828
    5. ']' → logprob: -10.502826690673828
    6. '[' → logprob: -10.627826690673828
    7. '   ' → logprob: -10.752826690673828
    8. '       ' → logprob: -11.502826690673828
    9. '}:' → logprob: -11.502826690673828
    10. ']:
' → logprob: -12.002826690673828

Token 133: '           ' (ID: 352)
  Prédit: ' stopped'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stopped' → logprob: -0.652332603931427
    2. '           ' → logprob: -1.4023325443267822
    3. '       ' → logprob: -1.5273325443267822
    4. '
' → logprob: -4.652332782745361
    5. 'st' → logprob: -5.402332782745361
    6. '   ' → logprob: -7.277332782745361
    7. '```' → logprob: -8.152332305908203
    8. 'stop' → logprob: -8.277332305908203
    9. '        
' → logprob: -8.402332305908203
    10. '            
' → logprob: -8.527332305908203

Token 134: ' stopped' (ID: 18145)
  Prédit: ' stopped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stopped' → logprob: -0.0022895447909832
    2. '       ' → logprob: -6.377289772033691
    3. 'st' → logprob: -8.002289772033691
    4. '
' → logprob: -8.627289772033691
    5. '   ' → logprob: -10.502289772033691
    6. '           ' → logprob: -11.127289772033691
    7. 'Stopped' → logprob: -11.502289772033691
    8. '               ' → logprob: -12.127289772033691
    9. 'stop' → logprob: -12.502289772033691
    10. ' stops' → logprob: -12.502289772033691

Token 135: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.012565338984131813
    2. '+=' → logprob: -4.3875651359558105
    3. '+' → logprob: -9.887565612792969
    4. '<|end|>' → logprob: -12.762565612792969
    5. ' +' → logprob: -13.762565612792969
    6. ' ' → logprob: -15.137565612792969
    7. ']+=' → logprob: -15.637565612792969
    8. '   ' → logprob: -16.26256561279297
    9. '++' → logprob: -16.51256561279297
    10. '    ' → logprob: -16.63756561279297

Token 136: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007606389466673136
    2. ' ' → logprob: -4.882606506347656
    3. '<|end|>' → logprob: -15.882606506347656
    4. '   ' → logprob: -16.757606506347656
    5. '```' → logprob: -17.882606506347656
    6. ' ' → logprob: -17.882606506347656
    7. '１' → logprob: -19.007606506347656
    8. '0' → logprob: -19.257606506347656
    9. '	' → logprob: -19.445106506347656
    10. '۱' → logprob: -19.570106506347656

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.000009536743164
    4. '```' → logprob: -18.375009536743164
    5. '１' → logprob: -19.625009536743164
    6. '
' → logprob: -19.937509536743164
    7. '<|end|>' → logprob: -20.000009536743164
    8. '0' → logprob: -20.437509536743164
    9. '۱' → logprob: -20.562509536743164
    10. '  ' → logprob: -20.875009536743164

Token 138: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.062308020889759064
    2. '   ' → logprob: -3.0623080730438232
    3. '       ' → logprob: -5.062307834625244
    4. '    
' → logprob: -5.812307834625244
    5. '<|end|>' → logprob: -5.812307834625244
    6. 'print' → logprob: -8.312308311462402
    7. ' else' → logprob: -8.812308311462402
    8. '\n' → logprob: -8.812308311462402
    9. '        
' → logprob: -8.937308311462402
    10. '  
' → logprob: -9.312308311462402

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24034757912158966
    2. 'print' → logprob: -1.6153476238250732
    3. '       ' → logprob: -5.240347385406494
    4. 'else' → logprob: -6.240347385406494
    5. '
' → logprob: -6.490347385406494
    6. '    
' → logprob: -6.740347385406494
    7. ')' → logprob: -6.865347385406494
    8. ' print' → logprob: -6.990347385406494
    9. ' else' → logprob: -7.615347385406494
    10. ' 
' → logprob: -8.365347862243652

Token 140: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8882297873497009
    2. '   ' → logprob: -1.5132298469543457
    3. '
' → logprob: -2.2632298469543457
    4. 'if' (adapté à ' if') → logprob: -2.5132298469543457
    5. ' if' → logprob: -2.7632298469543457
    6. 'else' → logprob: -3.0132298469543457
    7. '    
' → logprob: -3.6382298469543457
    8. ' print' → logprob: -4.388229846954346
    9. ' else' → logprob: -4.388229846954346
    10. ' 
' → logprob: -4.763229846954346

Token 141: ' stopped' (ID: 18145)
  Prédit: ' stopped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stopped' → logprob: -0.36391523480415344
    2. ' frame' → logprob: -1.613915205001831
    3. 'st' → logprob: -2.363915205001831
    4. 'frame' → logprob: -4.48891544342041
    5. ' ' → logprob: -8.11391544342041
    6. ' st' → logprob: -9.23891544342041
    7. ' not' → logprob: -10.11391544342041
    8. '(frame' → logprob: -10.23891544342041
    9. ' stop' → logprob: -10.61391544342041
    10. ' current' → logprob: -10.73891544342041

Token 142: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06300625205039978
    2. '==' → logprob: -2.9380061626434326
    3. ' <' → logprob: -5.063006401062012
    4. '<' → logprob: -7.063006401062012
    5. ' >=' → logprob: -7.438006401062012
    6. ' ' → logprob: -8.688006401062012
    7. '>=' → logprob: -9.563006401062012
    8. ' !=' → logprob: -9.688006401062012
    9. '!=' → logprob: -12.188006401062012
    10. ' =' → logprob: -12.438006401062012

Token 143: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04859180003404617
    2. ' N' → logprob: -3.0485918521881104
    3. ' ' → logprob: -12.548591613769531
    4. '   ' → logprob: -14.173591613769531
    5. '	N' → logprob: -15.673591613769531
    6. 'len' → logprob: -16.92359161376953
    7. 'n' → logprob: -17.04859161376953
    8. '  ' → logprob: -17.29859161376953
    9. '<N' → logprob: -17.67359161376953
    10. '```' → logprob: -17.67359161376953

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014169624075293541
    2. ':
' → logprob: -4.264169692993164
    3. ' :' → logprob: -12.264169692993164
    4. ' :
' → logprob: -14.639169692993164
    5. ':

' → logprob: -14.764169692993164
    6. ':
' → logprob: -14.889169692993164
    7. '):
' → logprob: -16.389169692993164
    8. 'print' → logprob: -16.764169692993164
    9. '):' → logprob: -17.264169692993164
    10. ':def' → logprob: -17.639169692993164

Token 145: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029378633946180344
    2. '   ' → logprob: -3.654378652572632
    3. ' print' → logprob: -6.529378414154053
    4. '       ' → logprob: -6.529378414154053
    5. '
' → logprob: -9.279378890991211
    6. '    
' → logprob: -10.904378890991211
    7. '```' → logprob: -11.279378890991211
    8. '\n' → logprob: -11.529378890991211
    9. '        
' → logprob: -11.654378890991211
    10. '\
' → logprob: -13.029378890991211

Token 146: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.8087270038668066e-05
    2. ' print' → logprob: -10.875027656555176
    3. '   ' → logprob: -11.625027656555176
    4. '
' → logprob: -17.250028610229492
    5. 'pr' → logprob: -17.250028610229492
    6. 'printf' → logprob: -17.375028610229492
    7. '       ' → logprob: -17.750028610229492
    8. '```' → logprob: -18.375028610229492
    9. '    
' → logprob: -18.750028610229492
    10. '	print' → logprob: -19.500028610229492

Token 147: '(frame' (ID: 33082)
  Prédit: '(frame'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(frame' → logprob: -0.027513783425092697
    2. '(' → logprob: -3.6525137424468994
    3. '(f' → logprob: -6.7775139808654785
    4. '("' → logprob: -10.15251350402832
    5. '('' → logprob: -11.77751350402832
    6. '(fr' → logprob: -11.90251350402832
    7. 'frame' → logprob: -11.90251350402832
    8. ' (' → logprob: -12.02751350402832
    9. '()' → logprob: -13.52751350402832
    10. '(`' → logprob: -13.90251350402832

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038092438131570816
    2. ')
' → logprob: -3.2880923748016357
    3. '   ' → logprob: -10.413092613220215
    4. ' )' → logprob: -11.163092613220215
    5. 'else' → logprob: -12.538092613220215
    6. ' )
' → logprob: -13.913092613220215
    7. ')
' → logprob: -14.413092613220215
    8. ' else' → logprob: -15.163092613220215
    9. ')

' → logprob: -15.288092613220215
    10. '),' → logprob: -15.538092613220215

Token 149: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.008995773270726204
    2. '   ' → logprob: -4.75899600982666
    3. ' else' → logprob: -7.88399600982666
    4. '	else' → logprob: -12.38399600982666
    5. '```' → logprob: -16.383995056152344
    6. '_else' → logprob: -16.508995056152344
    7. 'elif' → logprob: -17.008995056152344
    8. '  ' → logprob: -17.258995056152344
    9. 'Else' → logprob: -18.258995056152344
    10. '#else' → logprob: -18.508995056152344

Token 150: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0024194144643843174
    2. ' else' → logprob: -6.252419471740723
    3. '   ' → logprob: -7.627419471740723
    4. 'elif' → logprob: -13.377419471740723
    5. ' ' → logprob: -14.002419471740723
    6. '  ' → logprob: -14.627419471740723
    7. '	else' → logprob: -14.877419471740723
    8. 'el' → logprob: -15.752419471740723
    9. '    ' → logprob: -15.877419471740723
    10. 'e' → logprob: -16.252418518066406

Token 151: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01816597953438759
    2. ':
' → logprob: -4.0181660652160645
    3. ' :' → logprob: -11.518165588378906
    4. '   ' → logprob: -12.643165588378906
    5. ' :
' → logprob: -13.268165588378906
    6. ':
' → logprob: -14.768165588378906
    7. '       ' → logprob: -15.143165588378906
    8. ':

' → logprob: -16.143165588378906
    9. '=' → logprob: -16.893165588378906
    10. '():
' → logprob: -17.018165588378906

Token 152: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.038727179169654846
    2. '   ' → logprob: -3.288727283477783
    3. '-' → logprob: -7.788727283477783
    4. ' print' → logprob: -8.288726806640625
    5. '-print' → logprob: -12.413726806640625
    6. '  ' → logprob: -12.788726806640625
    7. '```' → logprob: -12.788726806640625
    8. '	print' → logprob: -13.038726806640625
    9. '    ' → logprob: -13.038726806640625
    10. ' -' → logprob: -13.413726806640625

Token 153: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03813076764345169
    2. '-' → logprob: -3.288130760192871
    3. ' print' → logprob: -9.663130760192871
    4. '   ' → logprob: -11.538130760192871
    5. '-print' → logprob: -12.288130760192871
    6. ' ' → logprob: -12.413130760192871
    7. 'pr' → logprob: -13.038130760192871
    8. ' -' → logprob: -13.163130760192871
    9. 'printf' → logprob: -13.788130760192871
    10. '	print' → logprob: -14.163130760192871

Token 154: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3896074593067169
    2. '(-' → logprob: -1.1396074295043945
    3. '(' → logprob: -6.6396074295043945
    4. '0' → logprob: -7.0146074295043945
    5. ' -' → logprob: -8.014607429504395
    6. '   ' → logprob: -10.139607429504395
    7. '```' → logprob: -10.139607429504395
    8. ' ' → logprob: -10.889607429504395
    9. '{-' → logprob: -11.014607429504395
    10. '("-' → logprob: -11.764607429504395

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '１' → logprob: -17.125
    4. '۱' → logprob: -19.5
    5. '2' → logprob: -19.875
    6. '100' → logprob: -20.125
    7. '१' → logprob: -20.25
    8. '-' → logprob: -20.9375
    9. '১' → logprob: -21.375
    10. '' → logprob: -21.4375

Token 156: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -15.75
    3. ' )' → logprob: -17.75
    4. ')`' → logprob: -18.75
    5. '))' → logprob: -19.75
    6. '）' → logprob: -20.375
    7. '`)' → logprob: -20.5
    8. '```' → logprob: -20.625
    9. '')' → logprob: -21.125
    10. ')#' → logprob: -21.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 154
Tokens correctement prédits (1ère position, stricte): 63
Tokens correctement prédits (1ère position, avec adaptation): 69
Tokens correctement prédits (top 10): 131
Précision stricte (1ère position): 40.91%
Précision adaptée (1ère position): 44.81%
Précision (top 10): 85.06%
================================================================================
