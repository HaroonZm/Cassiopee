================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:03:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
Q = int(input())
for _ in range(Q):
    c, a, n = map(int, input().split())
    teams_CCA = min(c // 2, a) if a > 0 else 0
    teams_CCC = c // 3
    teams_CAN = min(c, a, n)
    print(max(teams_CCA, teams_CCC, teams_CAN))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'Q' (ID: 48)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008203497272916138
    2. ''' → logprob: -7.875820159912109
    3. '[' → logprob: -8.87582015991211
    4. '(
' → logprob: -9.50082015991211
    5. '(Q' → logprob: -10.00082015991211
    6. ')' → logprob: -10.25082015991211
    7. '('' → logprob: -10.62582015991211
    8. '```' → logprob: -10.62582015991211
    9. '\(' → logprob: -10.87582015991211
    10. 'Q' → logprob: -10.87582015991211

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02597954124212265
    2. ')' → logprob: -3.775979518890381
    3. '()' → logprob: -7.400979518890381
    4. '(
' → logprob: -7.400979518890381
    5. '[' → logprob: -8.400979995727539
    6. '<|end|>' → logprob: -8.525979995727539
    7. '("("' → logprob: -8.650979995727539
    8. '())' → logprob: -9.025979995727539
    9. '```' → logprob: -9.150979995727539
    10. ''' → logprob: -9.650979995727539

Token 5: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0588914193212986
    2. '\n' → logprob: -4.308891296386719
    3. ' for' → logprob: -4.433891296386719
    4. 'if' → logprob: -5.308891296386719
    5. 'i' → logprob: -5.558891296386719
    6. 'n' → logprob: -5.808891296386719
    7. ''' → logprob: -5.933891296386719
    8. '`' → logprob: -6.058891296386719
    9. 's' → logprob: -6.183891296386719
    10. '```' → logprob: -6.308891296386719

Token 6: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006787366233766079
    2. ' i' → logprob: -5.381787300109863
    3. '  ' → logprob: -6.256787300109863
    4. ' Q' → logprob: -9.381787300109863
    5. 'i' → logprob: -9.506787300109863
    6. ' ' → logprob: -11.006787300109863
    7. ''' → logprob: -11.256787300109863
    8. '`' → logprob: -11.881787300109863
    9. '_' → logprob: -12.006787300109863
    10. '"' → logprob: -12.006787300109863

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009859384037554264
    2. 'in' → logprob: -4.634859561920166
    3. ' ' → logprob: -9.259859085083008
    4. '_' → logprob: -13.884859085083008
    5. ' i' → logprob: -13.884859085083008
    6. ' Q' → logprob: -13.884859085083008
    7. 'Q' → logprob: -14.134859085083008
    8. '<|end|>' → logprob: -14.134859085083008
    9. 'space' → logprob: -14.384859085083008
    10. 'range' → logprob: -14.509859085083008

Token 8: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931501030921936
    2. 'range' → logprob: -0.6931501030921936
    3. 'in' → logprob: -14.068150520324707
    4. '	range' → logprob: -14.193150520324707
    5. '(range' → logprob: -14.693150520324707
    6. ' in' → logprob: -15.318150520324707
    7. ' ' → logprob: -15.443150520324707
    8. '```' → logprob: -15.568150520324707
    9. '_range' → logprob: -15.943150520324707
    10. ' Q' → logprob: -16.31814956665039

Token 9: '(Q' (ID: 14437)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07918080687522888
    2. '(Q' → logprob: -2.5791807174682617
    3. ' (' → logprob: -8.329180717468262
    4. '(range' → logprob: -10.454180717468262
    5. '(len' → logprob: -11.704180717468262
    6. '(n' → logprob: -12.579180717468262
    7. '((' → logprob: -13.329180717468262
    8. '(int' → logprob: -13.579180717468262
    9. '(`' → logprob: -13.704180717468262
    10. '(
' → logprob: -13.704180717468262

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5241639614105225
    2. ')' → logprob: -0.8991639614105225
    3. ':' → logprob: -6.899164199829102
    4. '):
' → logprob: -11.899164199829102
    5. '+' → logprob: -12.649164199829102
    6. ' )' → logprob: -12.649164199829102
    7. '```' → logprob: -13.149164199829102
    8. ')>' → logprob: -13.274164199829102
    9. ' ):' → logprob: -13.524164199829102
    10. ':)' → logprob: -13.649164199829102

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007573965936899185
    2. '    
' → logprob: -5.507574081420898
    3. '```' → logprob: -6.632574081420898
    4. ' ' → logprob: -7.632574081420898
    5. '    ' → logprob: -7.882574081420898
    6. ' input' → logprob: -8.382574081420898
    7. '   ' → logprob: -8.507574081420898
    8. ' 
' → logprob: -8.882574081420898
    9. 'input' → logprob: -8.882574081420898
    10. ' query' → logprob: -9.257574081420898

Token 12: ' c' (ID: 274)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1769845485687256
    2. 'a' → logprob: -1.3019845485687256
    3. '   ' → logprob: -1.5519845485687256
    4. 's' → logprob: -2.9269845485687256
    5. 'x' → logprob: -3.0519845485687256
    6. ' n' → logprob: -3.4269845485687256
    7. ' a' → logprob: -3.6769845485687256
    8. 'A' → logprob: -4.676984786987305
    9. ' ' → logprob: -5.426984786987305
    10. ' x' → logprob: -5.551984786987305

Token 13: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.541861355304718
    2. ' ' → logprob: -1.6668612957000732
    3. '=' → logprob: -2.6668612957000732
    4. 'o' → logprob: -3.0418612957000732
    5. '   ' → logprob: -3.6668612957000732
    6. 'ode' → logprob: -4.041861534118652
    7. 'ount' → logprob: -4.166861534118652
    8. '  ' → logprob: -4.166861534118652
    9. 'h' → logprob: -5.041861534118652
    10. 'i' → logprob: -5.041861534118652

Token 14: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.693135142326355
    2. 'd' → logprob: -1.568135142326355
    3. '_' → logprob: -2.8181352615356445
    4. 'a' → logprob: -3.0681352615356445
    5. ' d' → logprob: -3.0681352615356445
    6. 's' → logprob: -3.3181352615356445
    7. ' =' → logprob: -3.4431352615356445
    8. '=' → logprob: -3.6931352615356445
    9. 'x' → logprob: -4.6931352615356445
    10. 'b' → logprob: -5.3181352615356445

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.315314918756485
    2. '=' → logprob: -1.5653148889541626
    3. ' =' → logprob: -2.815315008163452
    4. ' ,' → logprob: -8.065315246582031
    5. 'r' → logprob: -8.065315246582031
    6. ' ' → logprob: -8.190315246582031
    7. ')' → logprob: -8.315315246582031
    8. ',b' → logprob: -8.690315246582031
    9. 'm' → logprob: -10.315315246582031
    10. '_' → logprob: -10.690315246582031

Token 16: ' n' (ID: 297)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05417788401246071
    2. ' b' → logprob: -3.05417799949646
    3. 'd' → logprob: -6.804177761077881
    4. 'm' → logprob: -7.554177761077881
    5. 't' → logprob: -7.554177761077881
    6. '=' → logprob: -7.679177761077881
    7. 's' → logprob: -7.804177761077881
    8. ' =' → logprob: -7.929177761077881
    9. 'p' → logprob: -8.179178237915039
    10. ' ' → logprob: -8.304178237915039

Token 17: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6328868865966797
    2. ' =' → logprob: -0.7578868865966797
    3. ',' → logprob: -8.25788688659668
    4. ')' → logprob: -11.38288688659668
    5. ' ' → logprob: -12.00788688659668
    6. '=input' → logprob: -12.50788688659668
    7. '_' → logprob: -13.50788688659668
    8. 's' → logprob: -14.25788688659668
    9. '  ' → logprob: -14.25788688659668
    10. ')=' → logprob: -14.38288688659668

Token 18: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1561182737350464
    2. 'map' → logprob: -2.156118392944336
    3. ' input' → logprob: -3.781118392944336
    4. 'input' → logprob: -5.156118392944336
    5. ' ' → logprob: -9.281118392944336
    6. ' [' → logprob: -9.781118392944336
    7. ' list' → logprob: -10.781118392944336
    8. '[' → logprob: -10.906118392944336
    9. 'list' → logprob: -12.406118392944336
    10. '(map' → logprob: -12.656118392944336

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.019569873809814453
    2. '(' → logprob: -4.0195698738098145
    3. '(input' → logprob: -6.8945698738098145
    4. '(str' → logprob: -8.644569396972656
    5. '(lambda' → logprob: -8.894569396972656
    6. '<int' → logprob: -10.894569396972656
    7. '[int' → logprob: -10.894569396972656
    8. '(list' → logprob: -11.019569396972656
    9. 'int' → logprob: -11.519569396972656
    10. '<|end|>' → logprob: -11.644569396972656

Token 20: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05368157848715782
    2. ',input' → logprob: -3.0536816120147705
    3. ',' → logprob: -5.553681373596191
    4. ')' → logprob: -7.178681373596191
    5. '(' → logprob: -8.178681373596191
    6. 'input' → logprob: -8.928681373596191
    7. ' input' → logprob: -11.553681373596191
    8. '=input' → logprob: -12.053681373596191
    9. ')(' → logprob: -12.303681373596191
    10. '[input' → logprob: -13.303681373596191

Token 21: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16026413440704346
    2. ' input' → logprob: -1.9102641344070435
    3. ')' → logprob: -10.535264015197754
    4. '(input' → logprob: -11.785264015197754
    5. ',input' → logprob: -13.660264015197754
    6. ' ' → logprob: -13.910264015197754
    7. '=input' → logprob: -13.910264015197754
    8. '	input' → logprob: -14.285264015197754
    9. ' )' → logprob: -14.410264015197754
    10. '[input' → logprob: -14.785264015197754

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00042745075188577175
    2. '())' → logprob: -8.25042724609375
    3. '()' → logprob: -8.75042724609375
    4. ')' → logprob: -11.87542724609375
    5. '()
' → logprob: -15.00042724609375
    6. ' ().' → logprob: -15.87542724609375
    7. '());' → logprob: -16.50042724609375
    8. '()))' → logprob: -16.75042724609375
    9. '(' → logprob: -17.37542724609375
    10. '();)' → logprob: -17.37542724609375

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004101077560335398
    2. 'strip' → logprob: -5.504101276397705
    3. 'rstrip' → logprob: -10.879100799560547
    4. '(split' → logprob: -13.254100799560547
    5. ')' → logprob: -13.754100799560547
    6. ' split' → logprob: -14.004100799560547
    7. '```' → logprob: -16.754100799560547
    8. 's' → logprob: -17.254100799560547
    9. 'plit' → logprob: -17.254100799560547
    10. 'spl' → logprob: -17.629100799560547

Token 24: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007247976027429104
    2. '))' → logprob: -5.2572479248046875
    3. '())' → logprob: -6.3822479248046875
    4. '()' → logprob: -8.132247924804688
    5. '`)' → logprob: -11.757247924804688
    6. '(' → logprob: -12.632247924804688
    7. '')' → logprob: -12.882247924804688
    8. '()))' → logprob: -13.007247924804688
    9. ')`' → logprob: -13.007247924804688
    10. ')")' → logprob: -13.007247924804688

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18907125294208527
    2. '\n' → logprob: -2.6890711784362793
    3. ' 
' → logprob: -3.6890711784362793
    4. '    
' → logprob: -4.064071178436279
    5. ':' → logprob: -4.439071178436279
    6. ' if' → logprob: -4.564071178436279
    7. '
' → logprob: -4.814071178436279
    8. 'if' → logprob: -5.189071178436279
    9. ')' → logprob: -5.564071178436279
    10. '```' → logprob: -5.814071178436279

Token 26: ' teams' (ID: 11273)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7292666435241699
    2. '   ' → logprob: -1.97926664352417
    3. 'if' → logprob: -2.10426664352417
    4. ' if' → logprob: -2.60426664352417
    5. ' i' → logprob: -2.72926664352417
    6. 's' → logprob: -3.60426664352417
    7. 'd' → logprob: -4.35426664352417
    8. 'p' → logprob: -4.47926664352417
    9. ' ' → logprob: -4.60426664352417
    10. 'x' → logprob: -4.85426664352417

Token 27: '_C' (ID: 1720)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5216184258460999
    2. '_' → logprob: -1.646618366241455
    3. '[' → logprob: -2.271618366241455
    4. '.' → logprob: -3.271618366241455
    5. 's' → logprob: -3.896618366241455
    6. '=' → logprob: -4.021618366241455
    7. '_size' → logprob: -4.396618366241455
    8. '.append' → logprob: -5.021618366241455
    9. ' ' → logprob: -6.021618366241455
    10. '_count' → logprob: -6.146618366241455

Token 28: 'CA' (ID: 6781)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.837163507938385
    2. 'ount' → logprob: -1.4621634483337402
    3. '_' → logprob: -2.4621634483337402
    4. '[' → logprob: -2.4621634483337402
    5. '=' → logprob: -2.8371634483337402
    6. ' +=' → logprob: -3.3371634483337402
    7. 'nt' → logprob: -3.7121634483337402
    8. ' ' → logprob: -4.58716344833374
    9. 'ounter' → logprob: -5.71216344833374
    10. '.append' → logprob: -5.96216344833374

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0417253971099854
    2. '=' → logprob: -1.2917253971099854
    3. 's' → logprob: -1.7917253971099854
    4. '_' → logprob: -2.5417253971099854
    5. 'nt' → logprob: -3.2917253971099854
    6. 'm' → logprob: -4.041725158691406
    7. ' ' → logprob: -4.541725158691406
    8. '.' → logprob: -4.791725158691406
    9. '[' → logprob: -5.041725158691406
    10. 't' → logprob: -5.166725158691406

Token 30: ' min' (ID: 1349)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.8875748515129089
    2. ' [' → logprob: -1.6375749111175537
    3. '[]' → logprob: -1.7625749111175537
    4. ' c' → logprob: -2.7625749111175537
    5. '[a' → logprob: -3.1375749111175537
    6. ' a' → logprob: -3.7625749111175537
    7. '[c' → logprob: -3.7625749111175537
    8. '[' → logprob: -3.8875749111175537
    9. 'a' → logprob: -4.012574672698975
    10. 'c' → logprob: -4.512574672698975

Token 31: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0051827626302838326
    2. '(a' → logprob: -6.00518274307251
    3. '(c' → logprob: -6.88018274307251
    4. '((' → logprob: -7.00518274307251
    5. '([' → logprob: -8.380183219909668
    6. '()' → logprob: -9.130183219909668
    7. '(team' → logprob: -9.380183219909668
    8. '(n' → logprob: -9.755183219909668
    9. '(
' → logprob: -9.880183219909668
    10. '(A' → logprob: -10.130183219909668

Token 32: ' //' (ID: 602)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08698666095733643
    2. ' ,' → logprob: -3.211986541748047
    3. ' //' → logprob: -3.711986541748047
    4. '//' → logprob: -4.211986541748047
    5. ',a' → logprob: -5.711986541748047
    6. 'a' → logprob: -8.961986541748047
    7. ',n' → logprob: -9.211986541748047
    8. ')' → logprob: -9.711986541748047
    9. ',c' → logprob: -10.086986541748047
    10. ' a' → logprob: -10.336986541748047

Token 33: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09676238149404526
    2. '3' → logprob: -2.9717624187469482
    3. '2' → logprob: -3.3467624187469482
    4. ' a' → logprob: -5.471762180328369
    5. '(a' → logprob: -7.471762180328369
    6. '(' → logprob: -7.971762180328369
    7. ' ' → logprob: -8.346762657165527
    8. 'c' → logprob: -8.721762657165527
    9. 'n' → logprob: -9.721762657165527
    10. '1' → logprob: -9.846762657165527

Token 34: '2' (ID: 17)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12349618971347809
    2. '3' → logprob: -2.7484962940216064
    3. '2' → logprob: -2.9984962940216064
    4. 'c' → logprob: -6.748496055603027
    5. ' a' → logprob: -7.998496055603027
    6. '1' → logprob: -8.498496055603027
    7. 'n' → logprob: -8.498496055603027
    8. '(a' → logprob: -8.873496055603027
    9. '(' → logprob: -10.123496055603027
    10. '4' → logprob: -10.248496055603027

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005033917725086212
    2. ' ,' → logprob: -5.38003396987915
    3. ')' → logprob: -8.755033493041992
    4. ',c' → logprob: -9.630033493041992
    5. ',a' → logprob: -9.630033493041992
    6. ',n' → logprob: -9.755033493041992
    7. ',
' → logprob: -10.880033493041992
    8. 'a' → logprob: -11.505033493041992
    9. ' ' → logprob: -12.380033493041992
    10. '),' → logprob: -12.380033493041992

Token 36: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.021786298602819443
    2. ' a' → logprob: -3.8967862129211426
    3. 'n' → logprob: -6.896786212921143
    4. ' n' → logprob: -8.5217866897583
    5. ' min' → logprob: -11.2717866897583
    6. 'min' → logprob: -12.1467866897583
    7. ' ' → logprob: -12.2717866897583
    8. ')' → logprob: -12.6467866897583
    9. '(a' → logprob: -13.6467866897583
    10. '	a' → logprob: -13.7717866897583

Token 37: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05948678404092789
    2. ',' → logprob: -3.8094868659973145
    3. ' //' → logprob: -3.9344868659973145
    4. '//' → logprob: -4.6844868659973145
    5. ' )' → logprob: -5.4344868659973145
    6. ' ,' → logprob: -6.0594868659973145
    7. ')//' → logprob: -10.184486389160156
    8. ' ' → logprob: -11.184486389160156
    9. '`)' → logprob: -11.434486389160156
    10. '),' → logprob: -11.934486389160156

Token 38: ' if' (ID: 538)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.21457886695861816
    2. '<|end|>' → logprob: -3.214578866958618
    3. ' n' → logprob: -3.339578866958618
    4. ')' → logprob: -3.714578866958618
    5. ' if' → logprob: -3.964578866958618
    6. ' +' → logprob: -4.214578628540039
    7. ' ' → logprob: -4.339578628540039
    8. 'n' → logprob: -4.589578628540039
    9. '+' → logprob: -4.839578628540039
    10. '//' → logprob: -4.964578628540039

Token 39: ' a' (ID: 261)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20937374234199524
    2. 'n' → logprob: -2.209373712539673
    3. ' c' → logprob: -2.709373712539673
    4. 'c' → logprob: -4.459373950958252
    5. ' a' → logprob: -8.209373474121094
    6. 'a' → logprob: -8.834373474121094
    7. ' ' → logprob: -8.959373474121094
    8. ' teams' → logprob: -8.959373474121094
    9. ' not' → logprob: -9.584373474121094
    10. '(n' → logprob: -9.709373474121094

Token 40: ' >' (ID: 1424)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7847310304641724
    2. ' >' → logprob: -0.9097310304641724
    3. '>' → logprob: -2.784730911254883
    4. '>=' → logprob: -2.784730911254883
    5. ' <' → logprob: -5.034730911254883
    6. ' ' → logprob: -5.284730911254883
    7. ' <=' → logprob: -5.659730911254883
    8. '<=' → logprob: -7.909730911254883
    9. '<' → logprob: -8.034730911254883
    10. ' ==' → logprob: -8.159730911254883

Token 41: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6924089789390564
    2. '=' → logprob: -1.3174090385437012
    3. ' ' → logprob: -1.5674090385437012
    4. '1' → logprob: -4.317409038543701
    5. '2' → logprob: -5.317409038543701
    6. 'c' → logprob: -6.192409038543701
    7. ' c' → logprob: -7.067409038543701
    8. ' n' → logprob: -7.317409038543701
    9. 'n' → logprob: -7.567409038543701
    10. '=c' → logprob: -7.942409038543701

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08767027407884598
    2. '1' → logprob: -3.46267032623291
    3. ' ' → logprob: -3.83767032623291
    4. '2' → logprob: -4.46267032623291
    5. 'c' → logprob: -4.83767032623291
    6. '=' → logprob: -4.96267032623291
    7. 'n' → logprob: -5.71267032623291
    8. ' c' → logprob: -8.58767032623291
    9. ' n' → logprob: -8.83767032623291
    10. '3' → logprob: -8.83767032623291

Token 43: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.10979624092578888
    2. ' and' → logprob: -2.6097962856292725
    3. 'else' → logprob: -3.6097962856292725
    4. 'and' → logprob: -6.109796047210693
    5. ' ' → logprob: -7.734796047210693
    6. '<|end|>' → logprob: -8.359796524047852
    7. ',' → logprob: -8.859796524047852
    8. '    ' → logprob: -9.234796524047852
    9. ' elif' → logprob: -9.734796524047852
    10. '	else' → logprob: -10.609796524047852

Token 44: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09010300785303116
    2. ' ' → logprob: -2.4651029109954834
    3. ' c' → logprob: -7.4651031494140625
    4. 'c' → logprob: -8.590103149414062
    5. ' a' → logprob: -9.465103149414062
    6. 'a' → logprob: -9.590103149414062
    7. '1' → logprob: -9.715103149414062
    8. 'n' → logprob: -9.965103149414062
    9. ' n' → logprob: -10.090103149414062
    10. '   ' → logprob: -10.965103149414062

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016528061823919415
    2. ' ' → logprob: -6.626652717590332
    3. 'c' → logprob: -8.251652717590332
    4. 'a' → logprob: -11.126652717590332
    5. 'n' → logprob: -11.376652717590332
    6. ' c' → logprob: -11.376652717590332
    7. 'min' → logprob: -12.126652717590332
    8. '1' → logprob: -12.251652717590332
    9. '(' → logprob: -12.439152717590332
    10. '   ' → logprob: -12.876652717590332

Token 46: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: ' teams' (ID: 11273)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.20294934511184692
    2. '_' → logprob: -1.7029492855072021
    3. ' _' → logprob: -7.327949523925781
    4. '_CC' → logprob: -8.327949523925781
    5. '_A' → logprob: -8.702949523925781
    6. ' =' → logprob: -9.327949523925781
    7. '<|end|>' → logprob: -9.577949523925781
    8. '_CA' → logprob: -9.827949523925781
    9. '_=' → logprob: -10.202949523925781
    10. '=' → logprob: -11.202949523925781

Token 50: 'CC' (ID: 4433)
  Prédit: 'CA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CA' → logprob: -0.10751023888587952
    2. 'A' → logprob: -2.9825103282928467
    3. 'C' → logprob: -2.9825103282928467
    4. 'Ca' → logprob: -8.857510566711426
    5. 'AA' → logprob: -9.795010566711426
    6. 'a' → logprob: -9.795010566711426
    7. ' A' → logprob: -10.295010566711426
    8. 'c' → logprob: -10.357510566711426
    9. 'ca' → logprob: -10.670010566711426
    10. 'PA' → logprob: -10.732510566711426

Token 51: ' =' (ID: 314)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4725692868232727
    2. ' =' → logprob: -1.722569227218628
    3. '=' → logprob: -2.222569227218628
    4. '_' → logprob: -3.097569227218628
    5. 'C' → logprob: -3.847569227218628
    6. ' ' → logprob: -4.222569465637207
    7. '<|end|>' → logprob: -6.222569465637207
    8. '  ' → logprob: -6.597569465637207
    9. '_A' → logprob: -7.347569465637207
    10. 'a' → logprob: -7.597569465637207

Token 52: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4397420287132263
    2. ' c' → logprob: -1.939742088317871
    3. 'min' → logprob: -2.189742088317871
    4. ' min' → logprob: -2.939742088317871
    5. 'n' → logprob: -3.564742088317871
    6. ' n' → logprob: -4.189742088317871
    7. 'a' → logprob: -6.189742088317871
    8. '(c' → logprob: -7.939742088317871
    9. ' a' → logprob: -8.064742088317871
    10. '(min' → logprob: -8.189742088317871

Token 53: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0050082942470908165
    2. '//' → logprob: -5.505008220672607
    3. ' ' → logprob: -7.630008220672607
    4. '<|end|>' → logprob: -8.130008697509766
    5. ' ' → logprob: -10.755008697509766
    6. ')' → logprob: -10.755008697509766
    7. '2' → logprob: -11.380008697509766
    8. '  ' → logprob: -11.505008697509766
    9. '   ' → logprob: -11.505008697509766
    10. ' //
' → logprob: -11.630008697509766

Token 54: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.003225010121241212
    2. ' ' → logprob: -5.753224849700928
    3. '2' → logprob: -11.003225326538086
    4. '4' → logprob: -11.628225326538086
    5. '6' → logprob: -11.628225326538086
    6. '   ' → logprob: -12.253225326538086
    7. '  ' → logprob: -13.003225326538086
    8. '5' → logprob: -13.815725326538086
    9. '```' → logprob: -14.065725326538086
    10. '1' → logprob: -14.128225326538086

Token 55: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0003951648832298815
    2. '6' → logprob: -9.000394821166992
    3. '4' → logprob: -9.250394821166992
    4. '2' → logprob: -9.500394821166992
    5. ' ' → logprob: -9.875394821166992
    6. '

' → logprob: -11.687894821166992
    7. '   ' → logprob: -12.062894821166992
    8. '5' → logprob: -12.187894821166992
    9. '  ' → logprob: -12.437894821166992
    10. '1' → logprob: -12.812894821166992

Token 56: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07647734880447388
    2. '<|end|>' → logprob: -3.326477289199829
    3. '
' → logprob: -3.576477289199829
    4. '    
' → logprob: -6.326477527618408
    5. ' if' → logprob: -6.826477527618408
    6. ')' → logprob: -6.951477527618408
    7. '<|end|>' → logprob: -7.201477527618408
    8. '\n' → logprob: -7.326477527618408
    9. ',' → logprob: -7.326477527618408
    10. 'n' → logprob: -7.826477527618408

Token 58: ' teams' (ID: 11273)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22224900126457214
    2. 'print' → logprob: -2.0972490310668945
    3. '<|end|>' → logprob: -3.8472490310668945
    4. '
' → logprob: -4.2222490310668945
    5. '\n' → logprob: -4.9722490310668945
    6. 'n' → logprob: -5.3472490310668945
    7. ' teams' → logprob: -5.3472490310668945
    8. ' print' → logprob: -5.4722490310668945
    9. 'max' → logprob: -5.4722490310668945
    10. '    
' → logprob: -5.8472490310668945

Token 59: '_CAN' (ID: 103959)
  Prédit: '_C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.16734112799167633
    2. '_' → logprob: -2.0423412322998047
    3. '_CC' → logprob: -4.542341232299805
    4. ' =' → logprob: -4.667341232299805
    5. '=' → logprob: -5.792341232299805
    6. '_=' → logprob: -7.792341232299805
    7. '_A' → logprob: -8.042341232299805
    8. 'CCC' → logprob: -9.792341232299805
    9. '_AC' → logprob: -10.167341232299805
    10. '_c' → logprob: -10.167341232299805

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3872397840023041
    2. '=' → logprob: -1.1372398138046265
    3. ' ' → logprob: -8.137239456176758
    4. ',' → logprob: -10.762239456176758
    5. '<|end|>' → logprob: -11.387239456176758
    6. '  ' → logprob: -12.012239456176758
    7. ' ' → logprob: -12.137239456176758
    8. 's' → logprob: -12.637239456176758
    9. '>' → logprob: -12.762239456176758
    10. '   ' → logprob: -12.887239456176758

Token 61: ' min' (ID: 1349)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4568178057670593
    2. ' min' → logprob: -1.581817865371704
    3. 'n' → logprob: -2.456817865371704
    4. 'min' → logprob: -2.706817865371704
    5. ' a' → logprob: -5.581817626953125
    6. 'a' → logprob: -5.831817626953125
    7. ' (' → logprob: -6.956817626953125
    8. ' ' → logprob: -8.456817626953125
    9. '(min' → logprob: -8.456817626953125
    10. '```' → logprob: -9.456817626953125

Token 62: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.2654109001159668
    2. '(a' → logprob: -1.8904109001159668
    3. '(n' → logprob: -2.890410900115967
    4. '(' → logprob: -3.640410900115967
    5. '((' → logprob: -9.265411376953125
    6. 'a' → logprob: -9.515411376953125
    7. '(
' → logprob: -9.515411376953125
    8. ' (' → logprob: -10.890411376953125
    9. 'c' → logprob: -11.515411376953125
    10. '(C' → logprob: -12.390411376953125

Token 63: ',' (ID: 11)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5562132000923157
    2. ',' → logprob: -1.556213140487671
    3. ' ,' → logprob: -2.181213140487671
    4. '//' → logprob: -2.306213140487671
    5. ',n' → logprob: -7.18121337890625
    6. ',//' → logprob: -7.55621337890625
    7. ' ' → logprob: -7.93121337890625
    8. '<|end|>' → logprob: -8.05621337890625
    9. ')' → logprob: -8.43121337890625
    10. ',a' → logprob: -9.05621337890625

Token 64: ' a' (ID: 261)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0726744532585144
    2. 'n' → logprob: -2.697674512863159
    3. ' a' → logprob: -6.44767427444458
    4. ' ' → logprob: -7.57267427444458
    5. 'a' → logprob: -7.57267427444458
    6. ')' → logprob: -10.697674751281738
    7. ' ' → logprob: -10.822674751281738
    8. '2' → logprob: -10.947674751281738
    9. ',' → logprob: -11.072674751281738
    10. '3' → logprob: -11.572674751281738

Token 65: ',' (ID: 11)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.14856866002082825
    2. ' ,' → logprob: -2.773568630218506
    3. ',' → logprob: -2.898568630218506
    4. '//' → logprob: -4.398568630218506
    5. ')' → logprob: -5.148568630218506
    6. ' ' → logprob: -6.648568630218506
    7. ' )' → logprob: -7.273568630218506
    8. ',n' → logprob: -8.898569107055664
    9. ' //
' → logprob: -10.148569107055664
    10. ' /' → logprob: -10.398569107055664

Token 66: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1602761149406433
    2. 'n' → logprob: -1.910276174545288
    3. ' ' → logprob: -10.285276412963867
    4. ')' → logprob: -12.160276412963867
    5. '	n' → logprob: -13.410276412963867
    6. ' ' → logprob: -13.535276412963867
    7. ')n' → logprob: -13.535276412963867
    8. ' 
' → logprob: -13.785276412963867
    9. '  ' → logprob: -13.785276412963867
    10. ' (' → logprob: -14.160276412963867

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03838983550667763
    2. ' )' → logprob: -3.2883899211883545
    3. ' //' → logprob: -9.163390159606934
    4. '//' → logprob: -9.288390159606934
    5. ')
' → logprob: -9.413390159606934
    6. '   ' → logprob: -10.913390159606934
    7. ' )
' → logprob: -11.538390159606934
    8. '))' → logprob: -11.538390159606934
    9. '}' → logprob: -12.163390159606934
    10. ' ' → logprob: -12.163390159606934

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039372630417346954
    2. '<|end|>' → logprob: -3.539372682571411
    3. '
' → logprob: -5.414372444152832
    4. '    
' → logprob: -6.039372444152832
    5. '```' → logprob: -7.914372444152832
    6. ')' → logprob: -8.164372444152832
    7. ' teams' → logprob: -8.164372444152832
    8. 'n' → logprob: -8.664372444152832
    9. '  ' → logprob: -8.789372444152832
    10. 'print' → logprob: -8.789372444152832

Token 69: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15309451520442963
    2. 'print' (adapté à ' print') → logprob: -2.528094530105591
    3. '<|end|>' → logprob: -3.903094530105591
    4. ')' → logprob: -4.903094291687012
    5. '
' → logprob: -5.153094291687012
    6. '\n' → logprob: -5.278094291687012
    7. '    
' → logprob: -5.278094291687012
    8. 'max' → logprob: -5.403094291687012
    9. ' teams' → logprob: -5.653094291687012
    10. ' print' → logprob: -6.653094291687012

Token 70: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009583894861862063
    2. '(max' → logprob: -7.875958442687988
    3. '()' → logprob: -8.125958442687988
    4. '(min' → logprob: -8.500958442687988
    5. '((' → logprob: -10.125958442687988
    6. '(team' → logprob: -11.250958442687988
    7. ' (' → logprob: -11.750958442687988
    8. '('' → logprob: -12.375958442687988
    9. '(te' → logprob: -12.625958442687988
    10. '(len' → logprob: -13.125958442687988

Token 71: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1054253011243418e-05
    2. '([' → logprob: -11.750020980834961
    3. '(
' → logprob: -12.375020980834961
    4. ')' → logprob: -12.875020980834961
    5. '((' → logprob: -13.125020980834961
    6. '(team' → logprob: -13.625020980834961
    7. ' (' → logprob: -13.875020980834961
    8. '(te' → logprob: -13.875020980834961
    9. '(`' → logprob: -15.250020980834961
    10. '(

' → logprob: -15.875020980834961

Token 72: 'teams' (ID: 60159)
  Prédit: 'teams'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teams' → logprob: -0.13754840195178986
    2. '[' → logprob: -2.7625484466552734
    3. '(' → logprob: -3.1375484466552734
    4. ' teams' → logprob: -3.8875484466552734
    5. ' [' → logprob: -7.637548446655273
    6. '[
' → logprob: -8.262548446655273
    7. ')' → logprob: -8.637548446655273
    8. '   ' → logprob: -8.637548446655273
    9. '([' → logprob: -8.887548446655273
    10. 'team' → logprob: -9.637548446655273

Token 73: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.005587687250226736
    2. '_CAN' → logprob: -5.255587577819824
    3. '_CC' → logprob: -8.505587577819824
    4. '_' → logprob: -9.005587577819824
    5. '_CA' → logprob: -11.130587577819824
    6. '_)' → logprob: -12.755587577819824
    7. ' _' → logprob: -12.880587577819824
    8. '_CPP' → logprob: -13.130587577819824
    9. '_CNT' → logprob: -14.130587577819824
    10. ')' → logprob: -14.380587577819824

Token 74: 'CA' (ID: 6781)
  Prédit: 'CA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -0.16057169437408447
    2. 'A' → logprob: -2.035571575164795
    3. 'C' → logprob: -5.035571575164795
    4. 'CC' → logprob: -5.160571575164795
    5. 'AN' → logprob: -5.660571575164795
    6. 'AA' → logprob: -6.660571575164795
    7. 'AC' → logprob: -8.535572052001953
    8. 'CAN' → logprob: -8.910572052001953
    9. 'CCA' → logprob: -9.848072052001953
    10. '_CA' → logprob: -10.160572052001953

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04876131936907768
    2. ' ,' → logprob: -3.0487613677978516
    3. ' ' → logprob: -10.298761367797852
    4. ')' → logprob: -10.298761367797852
    5. ' teams' → logprob: -10.673761367797852
    6. '),' → logprob: -11.298761367797852
    7. ' +' → logprob: -11.423761367797852
    8. '<|end|>' → logprob: -11.673761367797852
    9. 'teams' → logprob: -11.798761367797852
    10. '+' → logprob: -11.923761367797852

Token 76: ' teams' (ID: 11273)
  Prédit: ' teams'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' teams' → logprob: -0.040597837418317795
    2. 'teams' → logprob: -3.290597915649414
    3. ' max' → logprob: -6.165597915649414
    4. 'max' → logprob: -7.790597915649414
    5. ' ' → logprob: -10.665597915649414
    6. ' ' → logprob: -11.915597915649414
    7. ')' → logprob: -13.290597915649414
    8. '  ' → logprob: -13.790597915649414
    9. '   ' → logprob: -13.915597915649414
    10. ' team' → logprob: -14.290597915649414

Token 77: '_C' (ID: 1720)
  Prédit: '_CAN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CAN' → logprob: -0.5271469950675964
    2. '_C' → logprob: -0.9021469950675964
    3. '_CC' → logprob: -5.777146816253662
    4. 'CAN' → logprob: -7.902146816253662
    5. 'CCC' → logprob: -8.15214729309082
    6. '_' → logprob: -10.27714729309082
    7. ')' → logprob: -10.40214729309082
    8. 'C' → logprob: -10.65214729309082
    9. '_CA' → logprob: -11.02714729309082
    10. '_CNT' → logprob: -11.15214729309082

Token 78: 'CC' (ID: 4433)
  Prédit: 'CC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CC' → logprob: -0.010480204597115517
    2. 'C' → logprob: -4.7604804039001465
    3. 'AN' → logprob: -6.5104804039001465
    4. 'A' → logprob: -8.510479927062988
    5. 'CA' → logprob: -9.635479927062988
    6. 'AC' → logprob: -10.760479927062988
    7. 'cc' → logprob: -11.010479927062988
    8. 'AA' → logprob: -11.010479927062988
    9. ' CC' → logprob: -11.135479927062988
    10. 'CAN' → logprob: -11.885479927062988

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001986090559512377
    2. ' ,' → logprob: -6.376986026763916
    3. '))' → logprob: -8.501986503601074
    4. ')' → logprob: -10.501986503601074
    5. '),' → logprob: -10.626986503601074
    6. ',
' → logprob: -11.501986503601074
    7. 'teams' → logprob: -11.876986503601074
    8. ' teams' → logprob: -12.126986503601074
    9. '`,' → logprob: -14.251986503601074
    10. '   ' → logprob: -14.439486503601074

Token 80: ' teams' (ID: 11273)
  Prédit: ' teams'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' teams' → logprob: -0.31339600682258606
    2. 'teams' → logprob: -1.3133959770202637
    3. ')' → logprob: -9.188396453857422
    4. ' ' → logprob: -12.063396453857422
    5. ' )' → logprob: -12.188396453857422
    6. 'Teams' → logprob: -12.563396453857422
    7. ' ' → logprob: -13.250896453857422
    8. '   ' → logprob: -13.250896453857422
    9. 'team' → logprob: -13.375896453857422
    10. 't' → logprob: -13.750896453857422

Token 81: '_CAN' (ID: 103959)
  Prédit: '_CAN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CAN' → logprob: -3.4121114822482923e-06
    2. '_' → logprob: -14.000003814697266
    3. '_C' → logprob: -14.375003814697266
    4. '_CA' → logprob: -14.375003814697266
    5. 'CAN' → logprob: -14.500003814697266
    6. '_CAL' → logprob: -15.375003814697266
    7. ' _' → logprob: -15.625003814697266
    8. ')' → logprob: -16.125003814697266
    9. '_can' → logprob: -16.500003814697266
    10. '_CAM' → logprob: -16.500003814697266

Token 82: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12694206833839417
    2. ')' → logprob: -2.1269421577453613
    3. '))
' → logprob: -11.751941680908203
    4. ')))' → logprob: -13.001941680908203
    5. ')
' → logprob: -13.376941680908203
    6. '),' → logprob: -14.501941680908203
    7. ' ))' → logprob: -14.751941680908203
    8. ' )' → logprob: -15.251941680908203
    9. '   ' → logprob: -16.001941680908203
    10. '})' → logprob: -16.001941680908203


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 80
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 62
Précision stricte (1ère position): 43.75%
Précision adaptée (1ère position): 43.75%
Précision (top 10): 77.50%
================================================================================
