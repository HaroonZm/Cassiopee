================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:24:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class CardGame:
    def __init__(self, N, K, L, cards):
        self.N = N
        self.K = K
        self.L = L
        self.cards = cards
        self.unique_cards = sorted(set(cards))
        self.compressed = self._compress(cards)

    def _compress(self, arr):
        # Coordinate compression for efficient BIT operation
        rank = {v: i + 1 for i, v in enumerate(self.unique_cards)}
        return [rank[v] for v in arr]

    class FenwickTree:
        def __init__(self, size):
            self.size = size
            self.tree = [0] * (size + 1)

        def update(self, i, v):
            while i <= self.size:
                self.tree[i] += v
                i += i & (-i)

        def query(self, i):
            res = 0
            while i > 0:
                res += self.tree[i]
                i -= i & (-i)
            return res

        def kth(self, k):
            # Find smallest index with prefix sum >= k
            pos = 0
            bit_mask = 1 << (self.size.bit_length())
            while bit_mask > 0:
                next_pos = pos + bit_mask
                if next_pos <= self.size and self.tree[next_pos] < k:
                    k -= self.tree[next_pos]
                    pos = next_pos
                bit_mask >>= 1
            return pos + 1

    def count_kth_less_equal(self, x):
        # Count how many K-th order statistics <= x among all valid subarrays
        fenw = self.FenwickTree(len(self.unique_cards))

        # Sliding window processing
        result = 0
        l = 0
        # Stores count of each compressed value in window
        count = [0] * (len(self.unique_cards) + 1)

        def count_at_least_k(pos_l, pos_r):
            length = pos_r - pos_l + 1
            if length < self.K:
                return 0
            # We want the K-th smallest in this window.
            # We will use fenw to find if kth smallest <= x: 
            # But here, we must quickly determine the K-th smallest of current window <= x
            # Since size and queries are huge, we don't do per subarray check.
            # Instead, approach differently below.
            return None

        # Due to extreme complexity, apply binary search on answer range,
        # then count how many K-th statistics are <= candidate

        # DAP-based solution abstracted: count total number of K-th statistics <= val by two pointers

        return 0  # placeholder

    def solve(self):
        left = 1
        right = self.N

        # Binary search on answer (card values) in compressed rank space
        res = -1
        while left <= right:
            mid = (left + right) // 2
            candidate = self.unique_cards[mid - 1]
            c = self._count_kth_numbers_less_equal(candidate)
            if c >= self.L:
                res = candidate
                right = mid - 1
            else:
                left = mid + 1
        return res

    def _count_kth_numbers_less_equal(self, val):
        # Count the number of K-th statistics <= val for all valid subarrays
        # Using a sliding window and two pointers technique with Fenwick tree

        fenw = self.FenwickTree(len(self.unique_cards))
        res = 0
        left = 0
        right = 0
        counts = [0] * (len(self.unique_cards) + 1)

        def fenw_add(x):
            fenw.update(x, 1)

        def fenw_remove(x):
            fenw.update(x, -1)

        # We'll expand right pointer, adding elements <= val to Fenw,
        # and move left pointer when subarray length >= K, counting how many subarrays have K-th <= val

        # For performance, we process all subarrays of length >= K

        # Preprocessing: We make an array of 0/1 indicating if element <= val (1 if yes else 0)
        binary = [1 if x <= val else 0 for x in self.compressed]

        # We want, for all subarrays length >= K, is the K-th smallest <= val?
        # That is equivalent to: in the subarray, at least K elements <= val.

        # Let's use a prefix sum of binary to check how many elements <= val in each subarray.

        pref = [0] * (self.N + 1)
        for i in range(self.N):
            pref[i+1] = pref[i] + binary[i]

        total = 0
        # For each r, find how many l such that (r-l+1)>=K and (pref[r+1]-pref[l])>=K:
        for r in range(self.N):
            min_l = r - self.K + 1
            if min_l < 0:
                continue
            # We want l in [0..min_l] such that pref[r+1]-pref[l]>=K
            # => pref[l] <= pref[r+1]-K
            # Count number of prefix sums in pref[0..min_l] <= pref[r+1] - K

            # We will use binary indexed tree for counting prefix values <= x
        # Build array of prefix sums for fenw counting

        # We compress prefix sums to coordinates to maintain fenw indexing
        all_prefs = pref[:self.N+1]
        sorted_prefs = sorted(set(all_prefs))
        def pref_index(x):
            # 1-based fenw index
            import bisect
            return bisect.bisect_left(sorted_prefs, x) + 1

        fenw = self.FenwickTree(len(sorted_prefs))
        ans = 0

        # We will iterate r over [K-1 .. N-1], and count suitable l in [0..r-K+1]
        # For fenw, we add prefix sums of l as we go.

        # Add prefix sums for l < K-1 at start
        for i in range(self.K - 1):
            fenw.update(pref_index(pref[i]), 1)

        for r in range(self.K - 1, self.N):
            fenw_val = pref[r + 1] - self.K
            x = pref_index(fenw_val)
            # Count l <= r - K + 1 prefix sums <= fenw_val
            # fenw holds counts of prefix sums pref[0..r-K], so we query fenw for indices <= x

            # Query frequency of prefix sums <= fenw_val
            c = fenw.query(x)
            ans += c
            if r - self.K + 1 < self.N:
                fenw.update(pref_index(pref[r - self.K + 1]), 1)

        return ans

def main():
    import sys
    input = sys.stdin.readline
    N, K, L = map(int, input().split())
    cards = [int(input()) for _ in range(N)]
    game = CardGame(N, K, L, cards)
    print(game.solve())

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Card' (ID: 9958)
  → Token d'amorce (pas de prédiction)

Token 2: 'Game' (ID: 6627)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28828176856040955
    2. '{' → logprob: -1.538281798362732
    3. '(' → logprob: -3.4132816791534424
    4. ' {' → logprob: -6.1632819175720215
    5. '.' → logprob: -7.6632819175720215
    6. ' :' → logprob: -10.038281440734863
    7. '```' → logprob: -10.413281440734863
    8. ' ' → logprob: -10.663281440734863
    9. '(:' → logprob: -10.663281440734863
    10. '[' → logprob: -11.038281440734863

Token 4: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0953404903411865
    2. '   ' → logprob: -1.2203404903411865
    3. ':' → logprob: -2.3453404903411865
    4. '(' → logprob: -2.3453404903411865
    5. '\' → logprob: -3.3453404903411865
    6. ' 
' → logprob: -3.4703404903411865
    7. '    ' → logprob: -4.095340728759766
    8. '```' → logprob: -4.470340728759766
    9. '(
' → logprob: -4.595340728759766
    10. '    
' → logprob: -4.595340728759766

Token 5: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5295200347900391
    2. ' ' → logprob: -2.154520034790039
    3. '   ' → logprob: -2.779520034790039
    4. '```' → logprob: -2.904520034790039
    5. ' 
' → logprob: -3.154520034790039
    6. '\' → logprob: -3.404520034790039
    7. 'def' (adapté à ' def') → logprob: -3.779520034790039
    8. '    
' → logprob: -4.279520034790039
    9. '    ' → logprob: -4.529520034790039
    10. '`' → logprob: -4.779520034790039

Token 6: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08313103020191193
    2. ' __' → logprob: -2.9581310749053955
    3. '__' → logprob: -3.8331310749053955
    4. ' ' → logprob: -6.208130836486816
    5. ' init' → logprob: -7.083130836486816
    6. ' play' → logprob: -7.208130836486816
    7. '  ' → logprob: -8.083130836486816
    8. ' calculate' → logprob: -8.333130836486816
    9. '_' → logprob: -8.708130836486816
    10. 'init' → logprob: -8.833130836486816

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.1782583391759545e-05
    2. ' init' → logprob: -10.500031471252441
    3. '_init' → logprob: -12.625031471252441
    4. 'ini' → logprob: -14.375031471252441
    5. '	init' → logprob: -16.125032424926758
    6. 'i' → logprob: -17.125032424926758
    7. '_' → logprob: -17.500032424926758
    8. 'in' → logprob: -17.875032424926758
    9. '__' → logprob: -18.375032424926758
    10. 'int' → logprob: -18.500032424926758

Token 8: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.2474707067012787
    2. '(' → logprob: -1.872470736503601
    3. '__' → logprob: -2.9974706172943115
    4. '(self' → logprob: -4.997470855712891
    5. '_' → logprob: -5.747470855712891
    6. '__(
' → logprob: -5.747470855712891
    7. '_(' → logprob: -7.247470855712891
    8. '```' → logprob: -7.997470855712891
    9. 'self' → logprob: -8.49747085571289
    10. '__((' → logprob: -8.49747085571289

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011906000785529613
    2. ' self' → logprob: -4.511906147003174
    3. ')' → logprob: -7.261906147003174
    4. '(self' → logprob: -9.011905670166016
    5. ' )' → logprob: -11.136905670166016
    6. ' ' → logprob: -12.011905670166016
    7. '<|end|>' → logprob: -12.886905670166016
    8. ',self' → logprob: -13.261905670166016
    9. 'space' → logprob: -13.511905670166016
    10. '_self' → logprob: -13.761905670166016

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5494620203971863
    2. ')' → logprob: -1.299462080001831
    3. 'self' → logprob: -2.799462080001831
    4. '):' → logprob: -3.174462080001831
    5. '<|end|>' → logprob: -4.424461841583252
    6. '_' → logprob: -5.049461841583252
    7. '.' → logprob: -5.174461841583252
    8. '(self' → logprob: -5.174461841583252
    9. '(' → logprob: -5.424461841583252
    10. ' self' → logprob: -6.299461841583252

Token 11: ' N' (ID: 478)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11819660663604736
    2. ' self' → logprob: -2.368196487426758
    3. ')' → logprob: -4.368196487426758
    4. 'deck' → logprob: -5.868196487426758
    5. ' )' → logprob: -6.993196487426758
    6. ' deck' → logprob: -7.868196487426758
    7. 's' → logprob: -8.118196487426758
    8. 'player' → logprob: -8.118196487426758
    9. 'cards' → logprob: -9.118196487426758
    10. ' player' → logprob: -9.493196487426758

Token 12: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10274695605039597
    2. ')' → logprob: -2.3527469635009766
    3. ',' → logprob: -6.102746963500977
    4. ':' → logprob: -8.602746963500977
    5. '=' → logprob: -10.102746963500977
    6. ' ):' → logprob: -10.352746963500977
    7. '_' → logprob: -10.977746963500977
    8. ' )' → logprob: -11.602746963500977
    9. '):
' → logprob: -12.477746963500977
    10. ' ,' → logprob: -13.352746963500977

Token 13: ' K' (ID: 658)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -1.0905505418777466
    2. ' deck' → logprob: -1.8405505418777466
    3. ' K' → logprob: -2.590550422668457
    4. ' max' → logprob: -2.715550422668457
    5. ' player' → logprob: -2.840550422668457
    6. ' num' → logprob: -2.840550422668457
    7. ' cards' → logprob: -3.090550422668457
    8. ' )' → logprob: -3.840550422668457
    9. ' k' → logprob: -3.965550422668457
    10. ' players' → logprob: -4.215550422668457

Token 14: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00017743845819495618
    2. ')' → logprob: -9.125177383422852
    3. ':' → logprob: -10.000177383422852
    4. ',' → logprob: -10.750177383422852
    5. ' ):' → logprob: -14.500177383422852
    6. '):
' → logprob: -15.125177383422852
    7. '   ' → logprob: -15.125177383422852
    8. '=' → logprob: -16.37517738342285
    9. '**' → logprob: -16.50017738342285
    10. '():' → logprob: -16.62517738342285

Token 15: ' L' (ID: 451)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3253049850463867
    2. ' M' → logprob: -1.5753049850463867
    3. ' deck' → logprob: -1.8253049850463867
    4. ' cards' → logprob: -2.4503049850463867
    5. ' )' → logprob: -2.8253049850463867
    6. ' max' → logprob: -2.9503049850463867
    7. '    ' → logprob: -4.075304985046387
    8. '   ' → logprob: -4.200304985046387
    9. ' decks' → logprob: -4.575304985046387
    10. ')' → logprob: -4.825304985046387

Token 16: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000284696085145697
    2. ':' → logprob: -8.875285148620605
    3. ')' → logprob: -9.250285148620605
    4. ',' → logprob: -10.125285148620605
    5. '   ' → logprob: -12.625285148620605
    6. ' ):' → logprob: -13.625285148620605
    7. '):
' → logprob: -14.125285148620605
    8. '```' → logprob: -14.125285148620605
    9. ''):' → logprob: -14.625285148620605
    10. '=' → logprob: -14.625285148620605

Token 17: ' cards' (ID: 10541)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.7872673273086548
    2. ' deck' → logprob: -1.7872673273086548
    3. ' cards' → logprob: -2.5372672080993652
    4. ' player' → logprob: -3.1622672080993652
    5. ')' → logprob: -3.4122672080993652
    6. ' )' → logprob: -3.4122672080993652
    7. 'M' → logprob: -3.6622672080993652
    8. '   ' → logprob: -4.162267208099365
    9. ' self' → logprob: -4.162267208099365
    10. ' ' → logprob: -4.412267208099365

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014399961801245809
    2. ')' → logprob: -7.001440048217773
    3. ':' → logprob: -7.876440048217773
    4. ',' → logprob: -9.876440048217773
    5. ' ):' → logprob: -10.376440048217773
    6. '):
' → logprob: -10.751440048217773
    7. '   ' → logprob: -11.001440048217773
    8. '=' → logprob: -11.251440048217773
    9. ''):' → logprob: -12.876440048217773
    10. '       ' → logprob: -13.501440048217773

Token 19: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6414496302604675
    2. '       ' → logprob: -0.7664496302604675
    3. '   ' → logprob: -5.641449451446533
    4. '    ' → logprob: -6.516449451446533
    5. '```' → logprob: -7.141449451446533
    6. '\n' → logprob: -7.391449451446533
    7. '\' → logprob: -7.766449451446533
    8. '        
' → logprob: -8.516449928283691
    9. ' :' → logprob: -8.641449928283691
    10. ',' → logprob: -8.641449928283691

Token 20: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07545612007379532
    2. '       ' → logprob: -2.825456142425537
    3. ' self' → logprob: -5.325456142425537
    4. 's' → logprob: -5.575456142425537
    5. '   ' → logprob: -6.700456142425537
    6. '```' → logprob: -6.950456142425537
    7. 'n' → logprob: -7.325456142425537
    8. '        ' → logprob: -7.575456142425537
    9. ' ' → logprob: -8.075455665588379
    10. '    ' → logprob: -8.450455665588379

Token 21: '.N' (ID: 4439)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0023622133303433657
    2. ' .' → logprob: -6.127362251281738
    3. '.N' → logprob: -9.502362251281738
    4. '.cards' → logprob: -10.127362251281738
    5. '.n' → logprob: -10.877362251281738
    6. ' ' → logprob: -11.002362251281738
    7. '.K' → logprob: -11.752362251281738
    8. '.L' → logprob: -13.252362251281738
    9. '.card' → logprob: -13.377362251281738
    10. '.period' → logprob: -14.002362251281738

Token 22: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1672244369983673
    2. '<|end|>' → logprob: -3.292224407196045
    3. '=' → logprob: -3.417224407196045
    4. ' ' → logprob: -3.542224407196045
    5. ' .' → logprob: -3.917224407196045
    6. ' =' → logprob: -4.167224407196045
    7. ',' → logprob: -4.667224407196045
    8. ')' → logprob: -5.917224407196045
    9. '    ' → logprob: -6.292224407196045
    10. '  ' → logprob: -6.417224407196045

Token 23: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6931506395339966
    2. ' N' → logprob: -0.6931506395339966
    3. '	N' → logprob: -13.318150520324707
    4. ' ' → logprob: -14.193150520324707
    5. ' ' → logprob: -14.443150520324707
    6. '    ' → logprob: -15.818150520324707
    7. '_N' → logprob: -16.693151473999023
    8. 'self' → logprob: -16.943151473999023
    9. ' K' → logprob: -16.943151473999023
    10. '   ' → logprob: -17.193151473999023

Token 24: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: '       ' (ID: 309)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.698376476764679
    2. '<|end|>' → logprob: -1.5733764171600342
    3. '       ' → logprob: -1.6983764171600342
    4. ')' → logprob: -3.698376417160034
    5. '```' → logprob: -3.948376417160034
    6. '    ' → logprob: -4.073376655578613
    7. '        ' → logprob: -4.448376655578613
    8. '   ' → logprob: -4.698376655578613
    9. '_' → logprob: -5.198376655578613
    10. ' ' → logprob: -5.448376655578613

Token 26: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.11115174740552902
    2. '       ' → logprob: -2.736151695251465
    3. ' self' → logprob: -3.486151695251465
    4. ' ' → logprob: -6.361151695251465
    5. 'K' → logprob: -6.611151695251465
    6. '        ' → logprob: -6.861151695251465
    7. ',' → logprob: -7.236151695251465
    8. '```' → logprob: -7.236151695251465
    9. '<|end|>' → logprob: -7.361151695251465
    10. '
' → logprob: -7.361151695251465

Token 27: '.K' (ID: 14475)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007057522889226675
    2. '.K' → logprob: -5.0070576667785645
    3. ' .' → logprob: -8.507057189941406
    4. '.N' → logprob: -9.132057189941406
    5. '.L' → logprob: -11.632057189941406
    6. ' ' → logprob: -12.257057189941406
    7. 'K' → logprob: -12.632057189941406
    8. '.I' → logprob: -12.757057189941406
    9. ',' → logprob: -13.132057189941406
    10. ' K' → logprob: -13.757057189941406

Token 28: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5791703462600708
    2. '<|end|>' → logprob: -1.2041703462600708
    3. ' ' → logprob: -2.9541702270507812
    4. ' =' → logprob: -3.2041702270507812
    5. ',' → logprob: -3.4541702270507812
    6. '<|end|>' → logprob: -5.079170227050781
    7. ')' → logprob: -5.329170227050781
    8. '.' → logprob: -6.454170227050781
    9. '-' → logprob: -7.204170227050781
    10. ' ,' → logprob: -7.329170227050781

Token 29: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.1128498837351799
    2. 'K' → logprob: -2.2378499507904053
    3. ' ' → logprob: -10.612850189208984
    4. ' ' → logprob: -13.237850189208984
    5. '	K' → logprob: -14.237850189208984
    6. '    ' → logprob: -15.987850189208984
    7. '>K' → logprob: -16.362850189208984
    8. '  ' → logprob: -16.862850189208984
    9. '‌' → logprob: -17.237850189208984
    10. '<|end|>' → logprob: -17.362850189208984

Token 30: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057379093021154404
    2. '<|end|>' → logprob: -3.9323790073394775
    3. '        ' → logprob: -4.307379245758057
    4. ' ' → logprob: -4.432379245758057
    5. '```' → logprob: -6.057379245758057
    6. '    ' → logprob: -6.557379245758057
    7. '   ' → logprob: -6.932379245758057
    8. '      ' → logprob: -7.057379245758057
    9. ')' → logprob: -7.182379245758057
    10. 'self' → logprob: -7.432379245758057

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0157648716121912
    2. '        ' → logprob: -4.3907647132873535
    3. ' ' → logprob: -6.7657647132873535
    4. '<|end|>' → logprob: -7.3907647132873535
    5. ',' → logprob: -8.015765190124512
    6. '```' → logprob: -8.140765190124512
    7. '      ' → logprob: -9.015765190124512
    8. '        
' → logprob: -9.265765190124512
    9. '    ' → logprob: -9.390765190124512
    10. '
' → logprob: -9.515765190124512

Token 32: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6434434652328491
    2. 'self' (adapté à ' self') → logprob: -1.0184434652328491
    3. ' self' → logprob: -2.5184435844421387
    4. '        ' → logprob: -3.5184435844421387
    5. ' ' → logprob: -7.018443584442139
    6. ' ' → logprob: -7.018443584442139
    7. '```' → logprob: -7.518443584442139
    8. 'L' → logprob: -8.26844310760498
    9. ' L' → logprob: -9.51844310760498
    10. '      ' → logprob: -9.76844310760498

Token 33: '.L' (ID: 2024)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12855835258960724
    2. '.L' → logprob: -2.128558397293091
    3. ' .' → logprob: -6.753558158874512
    4. '.N' → logprob: -8.128558158874512
    5. ',' → logprob: -10.003558158874512
    6. ' ' → logprob: -10.253558158874512
    7. '.K' → logprob: -10.628558158874512
    8. '.I' → logprob: -11.128558158874512
    9. '=' → logprob: -11.253558158874512
    10. 'L' → logprob: -11.878558158874512

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0070971776731312275
    2. '=' → logprob: -5.007097244262695
    3. ' ' → logprob: -7.882097244262695
    4. ' =
' → logprob: -12.882097244262695
    5. '   ' → logprob: -15.007097244262695
    6. '  ' → logprob: -15.257097244262695
    7. ')' → logprob: -15.257097244262695
    8. '    ' → logprob: -15.382097244262695
    9. ',' → logprob: -16.007097244262695
    10. ' =)' → logprob: -16.132097244262695

Token 35: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.6326243877410889
    2. 'L' → logprob: -0.7576243877410889
    3. ' ' → logprob: -11.007624626159668
    4. ' ' → logprob: -12.507624626159668
    5. '	L' → logprob: -13.632624626159668
    6. '    ' → logprob: -14.382624626159668
    7. '0' → logprob: -14.882624626159668
    8. '=L' → logprob: -15.132624626159668
    9. '>L' → logprob: -15.132624626159668
    10. '   ' → logprob: -15.382624626159668

Token 36: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017063124105334282
    2. 'self' → logprob: -5.017063140869141
    3. '<|end|>' → logprob: -5.767063140869141
    4. '```' → logprob: -6.142063140869141
    5. '
' → logprob: -6.392063140869141
    6. '        
' → logprob: -6.892063140869141
    7. '\' → logprob: -7.642063140869141
    8. 'newline' → logprob: -8.39206314086914
    9. '        ' → logprob: -8.64206314086914
    10. '   ' → logprob: -8.76706314086914

Token 37: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06802892684936523
    2. '<|end|>' → logprob: -3.5680289268493652
    3. '
' → logprob: -4.193028926849365
    4. 'self' → logprob: -4.443028926849365
    5. '\' → logprob: -6.318028926849365
    6. '```' → logprob: -6.443028926849365
    7. '        
' → logprob: -6.568028926849365
    8. ' ' → logprob: -6.818028926849365
    9. '        ' → logprob: -7.193028926849365
    10. '   ' → logprob: -7.568028926849365

Token 38: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10653960704803467
    2. 'self' (adapté à ' self') → logprob: -2.356539726257324
    3. ' self' → logprob: -5.106539726257324
    4. '   ' → logprob: -8.981539726257324
    5. '```' → logprob: -10.481539726257324
    6. '      ' → logprob: -10.856539726257324
    7. 's' → logprob: -11.106539726257324
    8. ' ' → logprob: -11.356539726257324
    9. '     ' → logprob: -11.481539726257324
    10. '        ' → logprob: -11.606539726257324

Token 39: '.cards' (ID: 91358)
  Prédit: '.cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cards' → logprob: -0.014741583727300167
    2. '.' → logprob: -4.26474142074585
    3. '.c' → logprob: -8.264741897583008
    4. ' .' → logprob: -8.389741897583008
    5. '.card' → logprob: -10.639741897583008
    6. '.players' → logprob: -12.139741897583008
    7. '.points' → logprob: -12.264741897583008
    8. '.deck' → logprob: -12.264741897583008
    9. '.s' → logprob: -12.514741897583008
    10. '.cells' → logprob: -12.764741897583008

Token 40: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08443693816661835
    2. '.' → logprob: -2.8344368934631348
    3. '[' → logprob: -3.9594368934631348
    4. ' =' → logprob: -6.084436893463135
    5. '_' → logprob: -7.959436893463135
    6. '.append' → logprob: -8.459437370300293
    7. '[:]' → logprob: -9.209437370300293
    8. ')' → logprob: -10.084437370300293
    9. '.=' → logprob: -10.209437370300293
    10. '.extend' → logprob: -10.584437370300293

Token 41: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.5231742262840271
    2. 'cards' → logprob: -0.8981742262840271
    3. '(cards' → logprob: -10.898174285888672
    4. '[]' → logprob: -11.273174285888672
    5. 'list' → logprob: -12.523174285888672
    6. '.cards' → logprob: -12.773174285888672
    7. ' list' → logprob: -12.898174285888672
    8. ' [' → logprob: -13.273174285888672
    9. '[' → logprob: -13.273174285888672
    10. ' []' → logprob: -13.398174285888672

Token 42: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2589379847049713
    2. '
' → logprob: -1.633937954902649
    3. '    
' → logprob: -3.8839380741119385
    4. '\n' → logprob: -5.633937835693359
    5. '  
' → logprob: -6.258937835693359
    6. '\' → logprob: -6.383937835693359
    7. '```' → logprob: -6.883937835693359
    8. ' 
' → logprob: -7.008937835693359
    9. '<|end|>' → logprob: -7.383937835693359
    10. '   
' → logprob: -7.758937835693359

Token 43: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0513075590133667
    2. '.' → logprob: -1.1763075590133667
    3. '\' → logprob: -2.4263076782226562
    4. '\n' → logprob: -2.8013076782226562
    5. '
' → logprob: -2.9263076782226562
    6. '_' → logprob: -3.5513076782226562
    7. 'def' → logprob: -4.051307678222656
    8. '    
' → logprob: -4.176307678222656
    9. ' ' → logprob: -4.426307678222656
    10. '[' → logprob: -4.426307678222656

Token 44: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2524052560329437
    2. '   ' → logprob: -1.6274052858352661
    3. '    
' → logprob: -4.252405166625977
    4. '\n' → logprob: -6.252405166625977
    5. 'def' → logprob: -6.377405166625977
    6. '  
' → logprob: -6.377405166625977
    7. '        
' → logprob: -6.502405166625977
    8. '```' → logprob: -6.502405166625977
    9. ' 
' → logprob: -6.752405166625977
    10. '       ' → logprob: -7.877405166625977

Token 45: '.unique' (ID: 76220)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06646250933408737
    2. '._' → logprob: -3.316462516784668
    3. '.cards' → logprob: -4.941462516784668
    4. '.used' → logprob: -5.691462516784668
    5. '.count' → logprob: -6.566462516784668
    6. '.is' → logprob: -7.066462516784668
    7. '.unique' → logprob: -7.441462516784668
    8. '.available' → logprob: -7.441462516784668
    9. '.selected' → logprob: -7.566462516784668
    10. ' .' → logprob: -7.566462516784668

Token 46: '_cards' (ID: 101651)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5101742744445801
    2. '_cards' → logprob: -1.51017427444458
    3. '_counts' → logprob: -2.13517427444458
    4. 's' → logprob: -4.26017427444458
    5. '_ids' → logprob: -4.38517427444458
    6. '_values' → logprob: -4.63517427444458
    7. '_sets' → logprob: -5.01017427444458
    8. '_chars' → logprob: -5.51017427444458
    9. '_set' → logprob: -6.13517427444458
    10. '_vals' → logprob: -6.38517427444458

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3628137409687042
    2. '=' → logprob: -1.2378137111663818
    3. '_' → logprob: -4.362813949584961
    4. '_counts' → logprob: -7.237813949584961
    5. '_count' → logprob: -7.487813949584961
    6. ' ' → logprob: -9.487813949584961
    7. 's' → logprob: -10.112813949584961
    8. '   ' → logprob: -10.612813949584961
    9. '_=' → logprob: -10.612813949584961
    10. '_set' → logprob: -11.237813949584961

Token 48: ' sorted' (ID: 20099)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.0021792887710034847
    2. 'set' → logprob: -6.377179145812988
    3. ' list' → logprob: -8.127179145812988
    4. ' len' → logprob: -8.752179145812988
    5. 'len' → logprob: -11.877179145812988
    6. ' {}' → logprob: -11.877179145812988
    7. ' ' → logprob: -12.502179145812988
    8. ' sorted' → logprob: -13.377179145812988
    9. '{}' → logprob: -13.502179145812988
    10. 'list' → logprob: -13.752179145812988

Token 49: '(set' (ID: 25904)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07176262140274048
    2. '(set' → logprob: -2.8217625617980957
    3. '(self' → logprob: -5.071762561798096
    4. '(list' → logprob: -5.696762561798096
    5. '((' → logprob: -9.821763038635254
    6. '(range' → logprob: -11.071763038635254
    7. '({' → logprob: -11.071763038635254
    8. '(
' → logprob: -11.196763038635254
    9. '(unique' → logprob: -12.196763038635254
    10. '(s' → logprob: -13.321763038635254

Token 50: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.012735666707158089
    2. '(self' → logprob: -4.512735843658447
    3. '(' → logprob: -6.387735843658447
    4. '(card' → logprob: -13.387735366821289
    5. 'cards' → logprob: -13.637735366821289
    6. 'self' → logprob: -14.887735366821289
    7. ' cards' → logprob: -15.137735366821289
    8. ')' → logprob: -15.512735366821289
    9. '(s' → logprob: -15.637735366821289
    10. ' (' → logprob: -15.762735366821289

Token 51: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.387759804725647
    2. ')' → logprob: -1.137759804725647
    3. '()))' → logprob: -7.512759685516357
    4. '())' → logprob: -8.512760162353516
    5. ' ))' → logprob: -9.512760162353516
    6. ')))' → logprob: -11.262760162353516
    7. '       ' → logprob: -11.387760162353516
    8. ' )' → logprob: -11.512760162353516
    9. '),' → logprob: -11.512760162353516
    10. '()' → logprob: -11.637760162353516

Token 52: '       ' (ID: 309)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8767030239105225
    2. '[' → logprob: -1.3767030239105225
    3. ')' → logprob: -2.7517030239105225
    4. '   ' → logprob: -3.1267030239105225
    5. ' ' → logprob: -3.3767030239105225
    6. '
' → logprob: -3.5017030239105225
    7. 'def' → logprob: -3.6267030239105225
    8. ':' → logprob: -3.7517030239105225
    9. '\' → logprob: -3.8767030239105225
    10. '<|end|>' → logprob: -4.001703262329102

Token 53: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28614750504493713
    2. '   ' → logprob: -2.0361475944519043
    3. '
' → logprob: -2.9111475944519043
    4. ' def' → logprob: -4.286147594451904
    5. ')' → logprob: -4.786147594451904
    6. '<|end|>' → logprob: -4.786147594451904
    7. ',' → logprob: -4.911147594451904
    8. '    
' → logprob: -5.036147594451904
    9. '       ' → logprob: -5.286147594451904
    10. ':' → logprob: -5.786147594451904

Token 54: '.com' (ID: 1136)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.024498170241713524
    2. '.unique' → logprob: -3.899498224258423
    3. '.cards' → logprob: -6.774497985839844
    4. '.n' → logprob: -7.399497985839844
    5. '._' → logprob: -7.649497985839844
    6. ' .' → logprob: -8.399497985839844
    7. '.count' → logprob: -8.524497985839844
    8. '_unique' → logprob: -8.649497985839844
    9. '.card' → logprob: -8.774497985839844
    10. '_cards' → logprob: -9.274497985839844

Token 55: 'pressed' (ID: 26974)
  Prédit: 'binations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.015465124510228634
    2. 'b' → logprob: -4.765465259552002
    3. 'bination' → logprob: -6.265465259552002
    4. 'bin' → logprob: -6.515465259552002
    5. '```' → logprob: -6.515465259552002
    6. 'bined' → logprob: -7.640465259552002
    7. 'ponents' → logprob: -8.515464782714844
    8. 'bis' → logprob: -8.890464782714844
    9. 'bos' → logprob: -9.015464782714844
    10. '_b' → logprob: -9.265464782714844

Token 56: ' =' (ID: 314)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.042124904692173004
    2. '_ids' → logprob: -3.9171249866485596
    3. '_' → logprob: -4.0421247482299805
    4. '_indices' → logprob: -6.5421247482299805
    5. '_values' → logprob: -6.9171247482299805
    6. '_codes' → logprob: -7.6671247482299805
    7. ' =' → logprob: -8.54212474822998
    8. '_card' → logprob: -8.79212474822998
    9. '_data' → logprob: -9.66712474822998
    10. '_id' → logprob: -9.91712474822998

Token 57: ' self' (ID: 1051)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.2621879577636719
    2. '{}' → logprob: -2.262187957763672
    3. '[' → logprob: -2.512187957763672
    4. ' {' → logprob: -3.512187957763672
    5. ' [' → logprob: -5.012187957763672
    6. '[]' → logprob: -5.512187957763672
    7. ' {}' → logprob: -5.637187957763672
    8. ' []' → logprob: -6.887187957763672
    9. ' ' → logprob: -9.512187957763672
    10. '[:]' → logprob: -9.762187957763672

Token 58: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21707212924957275
    2. '.cards' → logprob: -2.092072010040283
    3. '.unique' → logprob: -2.717072010040283
    4. '<|end|>' → logprob: -5.842072010040283
    5. ' .' → logprob: -6.842072010040283
    6. '.card' → logprob: -8.092072486877441
    7. 'unique' → logprob: -8.842072486877441
    8. '_cards' → logprob: -8.967072486877441
    9. '<|end|>' → logprob: -8.967072486877441
    10. '._' → logprob: -9.217072486877441

Token 59: 'compress' (ID: 69636)
  Prédit: 'compress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compress' → logprob: -0.0024908799678087234
    2. 'map' → logprob: -6.627490997314453
    3. 'coordinate' → logprob: -7.377490997314453
    4. 'build' → logprob: -8.377490997314453
    5. 'compressed' → logprob: -9.752490997314453
    6. 'com' → logprob: -9.877490997314453
    7. 'comp' → logprob: -10.502490997314453
    8. 'index' → logprob: -10.627490997314453
    9. 'create' → logprob: -10.752490997314453
    10. 'card' → logprob: -10.752490997314453

Token 60: '(cards' (ID: 161529)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14901162683963776
    2. '(self' → logprob: -2.2740116119384766
    3. '(cards' → logprob: -3.8990116119384766
    4. '_cards' → logprob: -4.274011611938477
    5. '(
' → logprob: -7.649011611938477
    6. '_' → logprob: -8.774011611938477
    7. '[' → logprob: -9.399011611938477
    8. 'self' → logprob: -9.524011611938477
    9. ')' → logprob: -9.899011611938477
    10. '(card' → logprob: -10.274011611938477

Token 61: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3782830137643032e-05
    2. ' )' → logprob: -11.87501335144043
    3. '))' → logprob: -12.12501335144043
    4. ')
' → logprob: -14.50001335144043
    5. '   ' → logprob: -15.25001335144043
    6. '       ' → logprob: -15.50001335144043
    7. ' ' → logprob: -16.12501335144043
    8. ']' → logprob: -16.62501335144043
    9. '[' → logprob: -16.87501335144043
    10. '）' → logprob: -16.87501335144043

Token 62: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1321901082992554
    2. '   ' → logprob: -1.5071901082992554
    3. '[' → logprob: -1.7571901082992554
    4. '
' → logprob: -2.757190227508545
    5. '```' → logprob: -3.007190227508545
    6. '(' → logprob: -3.382190227508545
    7. ' def' → logprob: -3.632190227508545
    8. ' ' → logprob: -3.757190227508545
    9. ')' → logprob: -3.882190227508545
    10. '[
' → logprob: -4.132190227508545

Token 63: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.15930093824863434
    2. '   ' → logprob: -2.7843010425567627
    3. '
' → logprob: -3.0343010425567627
    4. ' def' → logprob: -3.9093010425567627
    5. ' ' → logprob: -5.534300804138184
    6. ':' → logprob: -5.659300804138184
    7. '```' → logprob: -5.659300804138184
    8. ')' → logprob: -6.534300804138184
    9. '_' → logprob: -6.659300804138184
    10. '    
' → logprob: -7.409300804138184

Token 64: ' _' (ID: 1175)
  Prédit: '_com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.396006315946579
    2. ' _' → logprob: -1.1460063457489014
    3. '_' → logprob: -4.771006107330322
    4. '_compute' → logprob: -9.39600658416748
    5. '_comp' → logprob: -9.64600658416748
    6. '_expand' → logprob: -9.89600658416748
    7. '_find' → logprob: -10.02100658416748
    8. ' ' → logprob: -10.27100658416748
    9. '_compare' → logprob: -10.39600658416748
    10. '_add' → logprob: -10.52100658416748

Token 65: 'compress' (ID: 69636)
  Prédit: 'compress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compress' → logprob: -2.816093228830141e-06
    2. 'com' → logprob: -14.00000286102295
    3. 'def' → logprob: -14.25000286102295
    4. ' compress' → logprob: -14.75000286102295
    5. '_com' → logprob: -15.37500286102295
    6. 'compr' → logprob: -15.37500286102295
    7. '.compress' → logprob: -16.125001907348633
    8. 'compressed' → logprob: -16.250001907348633
    9. 'comp' → logprob: -16.750001907348633
    10. 'compute' → logprob: -17.250001907348633

Token 66: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3135319948196411
    2. '(self' → logprob: -1.3135319948196411
    3. ' (' → logprob: -8.438531875610352
    4. '(
' → logprob: -10.438531875610352
    5. '(s' → logprob: -11.563531875610352
    6. '(

' → logprob: -12.938531875610352
    7. '<|end|>' → logprob: -13.188531875610352
    8. ' ' → logprob: -13.438531875610352
    9. '(Self' → logprob: -13.438531875610352
    10. '   ' → logprob: -14.063531875610352

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10330377519130707
    2. '):' → logprob: -2.4783036708831787
    3. 'self' → logprob: -5.228303909301758
    4. ')' → logprob: -5.603303909301758
    5. ' ,' → logprob: -5.603303909301758
    6. '(self' → logprob: -7.228303909301758
    7. ',self' → logprob: -7.978303909301758
    8. ' ):' → logprob: -9.228303909301758
    9. '):
' → logprob: -9.728303909301758
    10. '   ' → logprob: -10.228303909301758

Token 68: ' arr' (ID: 1724)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7105188965797424
    2. 'self' → logprob: -0.7105188965797424
    3. 'arr' → logprob: -5.085518836975098
    4. ' cards' → logprob: -5.335518836975098
    5. ' arr' → logprob: -5.710518836975098
    6. 'cards' → logprob: -6.585518836975098
    7. ')' → logprob: -7.835518836975098
    8. ' array' → logprob: -8.335518836975098
    9. 'array' → logprob: -8.835518836975098
    10. '<|end|>' → logprob: -8.960518836975098

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005648265941999853
    2. '):
' → logprob: -7.750565052032471
    3. ' ):' → logprob: -9.375564575195312
    4. ')' → logprob: -10.375564575195312
    5. '):
' → logprob: -12.250564575195312
    6. '   ' → logprob: -12.375564575195312
    7. ':' → logprob: -12.625564575195312
    8. '       ' → logprob: -13.125564575195312
    9. 'self' → logprob: -13.250564575195312
    10. ' ' → logprob: -14.000564575195312

Token 70: '       ' (ID: 309)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8457422852516174
    2. '       ' → logprob: -1.3457422256469727
    3. ':' → logprob: -1.4707422256469727
    4. '):
' → logprob: -2.8457422256469727
    5. ')' → logprob: -5.220742225646973
    6. ':
' → logprob: -5.845742225646973
    7. ' :' → logprob: -5.845742225646973
    8. '   ' → logprob: -5.970742225646973
    9. '{' → logprob: -6.345742225646973
    10. ' ' → logprob: -7.095742225646973

Token 71: ' #' (ID: 1069)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7597420811653137
    2. ' {' → logprob: -0.7597420811653137
    3. '       ' → logprob: -4.634742259979248
    4. '{
' → logprob: -5.134742259979248
    5. ' {}' → logprob: -5.134742259979248
    6. '{}' → logprob: -5.384742259979248
    7. 'index' → logprob: -5.509742259979248
    8. ' sorted' → logprob: -5.509742259979248
    9. 'arr' → logprob: -5.759742259979248
    10. ' idx' → logprob: -5.884742259979248

Token 72: ' Coordinate' (ID: 78454)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -1.3749644756317139
    2. 'value' → logprob: -2.249964475631714
    3. ' val' → logprob: -2.249964475631714
    4. ' index' → logprob: -2.374964475631714
    5. ' mapping' → logprob: -2.374964475631714
    6. 'mapping' → logprob: -2.374964475631714
    7. 'index' → logprob: -2.499964475631714
    8. ' idx' → logprob: -2.874964475631714
    9. ' rank' → logprob: -3.749964475631714
    10. 'idx' → logprob: -4.249964714050293

Token 73: ' compression' (ID: 41811)
  Prédit: ' compression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compression' → logprob: -0.7063825130462646
    2. 'compression' → logprob: -0.7063825130462646
    3. 'compress' → logprob: -4.706382751464844
    4. '_com' → logprob: -6.206382751464844
    5. ' compress' → logprob: -6.331382751464844
    6. 'com' → logprob: -9.081382751464844
    7. 'compressed' → logprob: -9.456382751464844
    8. '-com' → logprob: -9.956382751464844
    9. '   ' → logprob: -11.081382751464844
    10. ' ' → logprob: -11.206382751464844

Token 74: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45648080110549927
    2. ':' → logprob: -2.2064807415008545
    3. ')' → logprob: -2.9564807415008545
    4. '{' → logprob: -3.0814807415008545
    5. '   ' → logprob: -3.3314807415008545
    6. '(self' → logprob: -3.4564807415008545
    7. '
' → logprob: -3.9564807415008545
    8. '(' → logprob: -3.9564807415008545
    9. ':
' → logprob: -4.706480979919434
    10. ' ' → logprob: -4.956480979919434

Token 75: ' efficient' (ID: 12430)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.1151437759399414
    2. 'arr' → logprob: -2.4901437759399414
    3. ' the' → logprob: -3.8651437759399414
    4. ' sorted' → logprob: -7.115143775939941
    5. ' unique' → logprob: -7.115143775939941
    6. ' cards' → logprob: -7.490143775939941
    7. 'the' → logprob: -7.740143775939941
    8. ' values' → logprob: -7.990143775939941
    9. ' array' → logprob: -8.240143775939941
    10. ' elements' → logprob: -8.365143775939941

Token 76: ' BIT' (ID: 52185)
  Prédit: ' indexing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' indexing' → logprob: -1.0001301765441895
    2. ' mapping' → logprob: -1.2501301765441895
    3. 'mapping' → logprob: -1.7501301765441895
    4. ' counting' → logprob: -2.8751301765441895
    5. ' lookup' → logprob: -3.1251301765441895
    6. 'index' → logprob: -4.2501301765441895
    7. ' index' → logprob: -4.5001301765441895
    8. ' queries' → logprob: -4.7501301765441895
    9. ' access' → logprob: -5.1251301765441895
    10. 'lookup' → logprob: -5.2501301765441895

Token 77: ' operation' (ID: 9506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3220452070236206
    2. ':' → logprob: -1.8220452070236206
    3. '
' → logprob: -2.82204532623291
    4. ')' → logprob: -4.07204532623291
    5. ':
' → logprob: -4.94704532623291
    6. '   ' → logprob: -5.44704532623291
    7. '):' → logprob: -5.69704532623291
    8. '):
' → logprob: -5.82204532623291
    9. '        
' → logprob: -5.82204532623291
    10. ',' → logprob: -6.07204532623291

Token 78: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6193960905075073
    2. '       ' → logprob: -1.6193960905075073
    3. ')' → logprob: -2.244396209716797
    4. ' ' → logprob: -3.119396209716797
    5. '
' → logprob: -3.244396209716797
    6. '   ' → logprob: -4.369396209716797
    7. ':
' → logprob: -4.494396209716797
    8. ' :' → logprob: -4.619396209716797
    9. '):' → logprob: -4.994396209716797
    10. '        
' → logprob: -5.369396209716797

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6607856154441833
    2. ':' → logprob: -1.1607856750488281
    3. '
' → logprob: -3.035785675048828
    4. ')' → logprob: -3.410785675048828
    5. ' ' → logprob: -3.535785675048828
    6. '        
' → logprob: -4.410785675048828
    7. '   ' → logprob: -4.910785675048828
    8. '<|end|>' → logprob: -4.910785675048828
    9. ',' → logprob: -5.035785675048828
    10. ':
' → logprob: -5.035785675048828

Token 80: ' rank' (ID: 10302)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -1.5914056301116943
    2. 'rank' (adapté à ' rank') → logprob: -1.5914056301116943
    3. 'sorted' → logprob: -1.7164056301116943
    4. 'arr' → logprob: -2.4664056301116943
    5. 'mapping' → logprob: -2.7164056301116943
    6. 'value' → logprob: -3.0914056301116943
    7. ' unique' → logprob: -3.2164056301116943
    8. ' sorted' → logprob: -3.9664056301116943
    9. '   ' → logprob: -3.9664056301116943
    10. 'index' → logprob: -4.216405868530273

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15689221024513245
    2. 's' → logprob: -2.6568922996520996
    3. '_map' → logprob: -3.2818922996520996
    4. '=' → logprob: -3.4068922996520996
    5. ' ' → logprob: -6.2818922996521
    6. '_' → logprob: -7.1568922996521
    7. '   ' → logprob: -7.2818922996521
    8. '_mapping' → logprob: -7.6568922996521
    9. '_dict' → logprob: -8.781891822814941
    10. '[' → logprob: -9.656891822814941

Token 82: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.27280697226524353
    2. '{}' → logprob: -1.522807002067566
    3. ' {' → logprob: -4.0228071212768555
    4. ' {}' → logprob: -6.1478071212768555
    5. '{}
' → logprob: -7.8978071212768555
    6. ' ' → logprob: -8.897807121276855
    7. 'dict' → logprob: -9.647807121276855
    8. '   ' → logprob: -11.272807121276855
    9. ' {}
' → logprob: -12.272807121276855
    10. '1' → logprob: -12.397807121276855

Token 83: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.09609728306531906
    2. 'x' → logprob: -2.471097230911255
    3. 'val' → logprob: -5.346097469329834
    4. 'num' → logprob: -6.096097469329834
    5. 'value' → logprob: -9.971096992492676
    6. 'c' → logprob: -10.471096992492676
    7. ' v' → logprob: -11.596096992492676
    8. 'k' → logprob: -12.471096992492676
    9. 'key' → logprob: -12.471096992492676
    10. '   ' → logprob: -12.471096992492676

Token 84: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07958029210567474
    2. ':i' → logprob: -2.579580307006836
    3. ':index' → logprob: -7.329580307006836
    4. ' :' → logprob: -10.579580307006836
    5. ':k' → logprob: -12.579580307006836
    6. ':n' → logprob: -14.079580307006836
    7. ':j' → logprob: -14.079580307006836
    8. ':x' → logprob: -14.329580307006836
    9. ':v' → logprob: -14.329580307006836
    10. ':y' → logprob: -14.704580307006836

Token 85: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0036626679357141256
    2. ' i' → logprob: -5.628662586212158
    3. '   ' → logprob: -10.503663063049316
    4. 'idx' → logprob: -11.003663063049316
    5. ' ' → logprob: -11.753663063049316
    6. '	i' → logprob: -12.378663063049316
    7. '```' → logprob: -13.378663063049316
    8. '
' → logprob: -13.628663063049316
    9. '(i' → logprob: -14.003663063049316
    10. ' idx' → logprob: -14.003663063049316

Token 86: ' +' (ID: 659)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3247489631175995
    2. '+' → logprob: -1.3247489929199219
    3. 'for' → logprob: -5.074748992919922
    4. ' +' → logprob: -5.324748992919922
    5. ' ' → logprob: -8.324748992919922
    6. '        ' → logprob: -10.824748992919922
    7. '    ' → logprob: -11.949748992919922
    8. '   ' → logprob: -11.949748992919922
    9. '1' → logprob: -12.574748992919922
    10. '         ' → logprob: -12.699748992919922

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029875844484195113
    2. ' ' → logprob: -8.125298500061035
    3. '   ' → logprob: -13.750298500061035
    4. '0' → logprob: -14.000298500061035
    5. '
' → logprob: -15.625298500061035
    6. '```' → logprob: -15.625298500061035
    7. '2' → logprob: -15.875298500061035
    8. '	' → logprob: -16.68779945373535
    9. '  ' → logprob: -17.12529945373535
    10. '=' → logprob: -17.62529945373535

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.375008583068848
    3. '0' → logprob: -12.750008583068848
    4. '
' → logprob: -14.125008583068848
    5. '```' → logprob: -15.500008583068848
    6. '   ' → logprob: -15.875008583068848
    7. '

' → logprob: -17.12500762939453
    8. '2' → logprob: -17.62500762939453
    9. '`' → logprob: -18.00000762939453
    10. '  ' → logprob: -18.06250762939453

Token 89: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.023575274273753166
    2. 'for' → logprob: -3.7735753059387207
    3. ' ' → logprob: -8.398574829101562
    4. '	for' → logprob: -10.148574829101562
    5. '   ' → logprob: -10.398574829101562
    6. '    ' → logprob: -11.023574829101562
    7. ',' → logprob: -11.898574829101562
    8. '  ' → logprob: -12.898574829101562
    9. '        ' → logprob: -13.023574829101562
    10. '       ' → logprob: -13.148574829101562

Token 90: ' i' (ID: 575)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.04278174787759781
    2. 'v' → logprob: -3.6677818298339844
    3. ' range' → logprob: -4.667781829833984
    4. ' i' → logprob: -5.167781829833984
    5. 'enumer' → logprob: -7.542781829833984
    6. '	v' → logprob: -8.292781829833984
    7. ' enumerate' → logprob: -8.542781829833984
    8. 'range' → logprob: -9.167781829833984
    9. ' ' → logprob: -10.292781829833984
    10. ',v' → logprob: -10.667781829833984

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09641733765602112
    2. ' in' → logprob: -2.8464174270629883
    3. ' range' → logprob: -4.221417427062988
    4. 'range' → logprob: -4.596417427062988
    5. 'enumer' → logprob: -5.471417427062988
    6. 'in' → logprob: -6.471417427062988
    7. '<|end|>' → logprob: -6.596417427062988
    8. ' ,' → logprob: -6.971417427062988
    9. ' ' → logprob: -7.596417427062988
    10. ' xrange' → logprob: -9.096417427062988

Token 92: ' v' (ID: 323)
  Prédit: ' enumerate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.4172263741493225
    2. 'enumer' → logprob: -1.7922263145446777
    3. ' v' → logprob: -2.5422263145446777
    4. ' in' → logprob: -2.5422263145446777
    5. 'v' → logprob: -4.917226314544678
    6. ' ' → logprob: -5.417226314544678
    7. '<|end|>' → logprob: -5.667226314544678
    8. '```' → logprob: -7.167226314544678
    9. '	v' → logprob: -8.167226791381836
    10. '  ' → logprob: -8.542226791381836

Token 93: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0677991509437561
    2. 'in' → logprob: -2.8177990913391113
    3. 'enumer' → logprob: -6.192799091339111
    4. ',' → logprob: -6.817799091339111
    5. ' ' → logprob: -6.817799091339111
    6. 'n' → logprob: -7.192799091339111
    7. '<|end|>' → logprob: -7.442799091339111
    8. ' enumerate' → logprob: -9.19279956817627
    9. 's' → logprob: -10.56779956817627
    10. ')' → logprob: -10.94279956817627

Token 94: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.05496533215045929
    2. ' enumerate' → logprob: -2.9299652576446533
    3. '```' → logprob: -9.554965019226074
    4. '
' → logprob: -12.929965019226074
    5. 'enum' → logprob: -12.929965019226074
    6. ' ' → logprob: -12.929965019226074
    7. 'en' → logprob: -13.054965019226074
    8. '<|end|>' → logprob: -14.054965019226074
    9. '`' → logprob: -14.929965019226074
    10. '.enumer' → logprob: -15.429965019226074

Token 95: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00781221641227603
    2. 'self' → logprob: -4.882812023162842
    3. ' self' → logprob: -9.1328125
    4. '(' → logprob: -10.0078125
    5. '(sorted' → logprob: -10.5078125
    6. ')' → logprob: -11.8828125
    7. '   ' → logprob: -12.3828125
    8. '	self' → logprob: -12.3828125
    9. 'sorted' → logprob: -13.1328125
    10. ' (' → logprob: -13.2578125

Token 96: '.unique' (ID: 76220)
  Prédit: '.unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.unique' → logprob: -0.03406541794538498
    2. 'unique' → logprob: -3.4090654850006104
    3. ' unique' → logprob: -8.409065246582031
    4. '.' → logprob: -9.284065246582031
    5. ' .' → logprob: -10.034065246582031
    6. '   ' → logprob: -10.159065246582031
    7. 'self' → logprob: -11.659065246582031
    8. ' ' → logprob: -13.034065246582031
    9. '
' → logprob: -13.159065246582031
    10. '_unique' → logprob: -13.409065246582031

Token 97: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -7.226628895296017e-06
    2. '_' → logprob: -13.250007629394531
    3. 'cards' → logprob: -13.500007629394531
    4. '_card' → logprob: -13.750007629394531
    5. ' cards' → logprob: -14.375007629394531
    6. ')' → logprob: -14.375007629394531
    7. 'Cards' → logprob: -14.875007629394531
    8. ' _' → logprob: -15.500007629394531
    9. '```' → logprob: -15.875007629394531
    10. '
' → logprob: -16.25000762939453

Token 98: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.10532946139574051
    2. '}' → logprob: -2.4803295135498047
    3. '       ' → logprob: -4.605329513549805
    4. ')' → logprob: -5.355329513549805
    5. ')}
' → logprob: -7.105329513549805
    6. ' }' → logprob: -8.230329513549805
    7. ')}
' → logprob: -8.980329513549805
    8. '})' → logprob: -9.355329513549805
    9. '   ' → logprob: -9.855329513549805
    10. ' )' → logprob: -9.855329513549805

Token 99: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07792846858501434
    2. '       ' → logprob: -3.3279285430908203
    3. '<|end|>' → logprob: -3.3279285430908203
    4. '  
' → logprob: -7.07792854309082
    5. '<|end|>' → logprob: -7.20292854309082
    6. '
' → logprob: -8.20292854309082
    7. 'return' → logprob: -8.32792854309082
    8. ' return' → logprob: -8.70292854309082
    9. '        
' → logprob: -8.82792854309082
    10. ')' → logprob: -9.32792854309082

Token 100: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20026682317256927
    2. ' return' → logprob: -1.8252668380737305
    3. '       ' → logprob: -3.9502668380737305
    4. '
' → logprob: -7.4502668380737305
    5. '   ' → logprob: -9.32526683807373
    6. 'arr' → logprob: -9.45026683807373
    7. 'compressed' → logprob: -9.95026683807373
    8. '	return' → logprob: -9.95026683807373
    9. '        
' → logprob: -10.57526683807373
    10. '[' → logprob: -10.70026683807373

Token 101: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.20163124799728394
    2. '[' → logprob: -1.7016313076019287
    3. '[list' → logprob: -9.951631546020508
    4. '[v' → logprob: -10.451631546020508
    5. '[val' → logprob: -10.951631546020508
    6. '[arr' → logprob: -11.076631546020508
    7. '[i' → logprob: -11.076631546020508
    8. '[class' → logprob: -11.576631546020508
    9. '[len' → logprob: -11.951631546020508
    10. '[int' → logprob: -11.951631546020508

Token 102: 'rank' (ID: 30162)
  Prédit: 'rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.005237906239926815
    2. ' rank' → logprob: -5.255238056182861
    3. '(rank' → logprob: -12.630237579345703
    4. '   ' → logprob: -14.255237579345703
    5. '.rank' → logprob: -17.380237579345703
    6. ' ' → logprob: -17.505237579345703
    7. '  ' → logprob: -17.505237579345703
    8. 'rate' → logprob: -18.005237579345703
    9. 'ranking' → logprob: -18.255237579345703
    10. '
' → logprob: -18.630237579345703

Token 103: '[v' (ID: 36561)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1986617147922516
    2. '[x' → logprob: -1.8236616849899292
    3. '[val' → logprob: -4.823661804199219
    4. '[v' → logprob: -5.573661804199219
    5. '(v' → logprob: -5.823661804199219
    6. '[c' → logprob: -6.448661804199219
    7. '(card' → logprob: -7.448661804199219
    8. '[' → logprob: -7.698661804199219
    9. '(c' → logprob: -7.823661804199219
    10. '[num' → logprob: -8.198661804199219

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00027218335890211165
    2. ' ]' → logprob: -8.250271797180176
    3. ')' → logprob: -12.000271797180176
    4. ')]' → logprob: -12.625271797180176
    5. '']' → logprob: -14.625271797180176
    6. '   ' → logprob: -14.875271797180176
    7. '"]' → logprob: -16.125272750854492
    8. ' for' → logprob: -16.375272750854492
    9. '}' → logprob: -16.500272750854492
    10. ' ' → logprob: -16.750272750854492

Token 105: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17996570467948914
    2. 'for' → logprob: -1.8049657344818115
    3. ')' → logprob: -9.80496597290039
    4. ' ' → logprob: -9.92996597290039
    5. ']' → logprob: -10.05496597290039
    6. '   ' → logprob: -10.30496597290039
    7. ' in' → logprob: -11.17996597290039
    8. '  ' → logprob: -12.17996597290039
    9. '	for' → logprob: -12.17996597290039
    10. ' v' → logprob: -12.30496597290039

Token 106: ' v' (ID: 323)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.3869172930717468
    2. ' arr' → logprob: -1.1369173526763916
    3. 'v' → logprob: -10.136917114257812
    4. '	arr' → logprob: -12.761917114257812
    5. ' v' → logprob: -12.886917114257812
    6. '(arr' → logprob: -14.761917114257812
    7. '_arr' → logprob: -14.886917114257812
    8. '<arr' → logprob: -15.511917114257812
    9. '$arr' → logprob: -15.761917114257812
    10. '[arr' → logprob: -16.136917114257812

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2911662757396698
    2. 'arr' → logprob: -1.9161663055419922
    3. ' arr' → logprob: -2.791166305541992
    4. 'in' → logprob: -3.541166305541992
    5. 'v' → logprob: -4.291166305541992
    6. ' v' → logprob: -7.166166305541992
    7. ' ' → logprob: -8.166166305541992
    8. '_arr' → logprob: -9.166166305541992
    9. '	arr' → logprob: -9.416166305541992
    10. '<arr' → logprob: -10.416166305541992

Token 108: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.00671809446066618
    2. ' arr' → logprob: -5.006718158721924
    3. '	arr' → logprob: -13.506717681884766
    4. '(arr' → logprob: -14.381717681884766
    5. '_arr' → logprob: -15.506717681884766
    6. '[arr' → logprob: -15.756717681884766
    7. '   ' → logprob: -16.131717681884766
    8. '$arr' → logprob: -16.256717681884766
    9. '<arr' → logprob: -16.631717681884766
    10. ' ' → logprob: -16.756717681884766

Token 109: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000958031858317554
    2. ' ]' → logprob: -7.00095796585083
    3. ']
' → logprob: -10.875958442687988
    4. '<|end|>' → logprob: -11.250958442687988
    5. ')' → logprob: -12.625958442687988
    6. '   ' → logprob: -13.375958442687988
    7. '<|end|>' → logprob: -13.375958442687988
    8. '       ' → logprob: -13.500958442687988
    9. '}' → logprob: -13.500958442687988
    10. '']' → logprob: -13.750958442687988

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38254982233047485
    2. '
' → logprob: -1.50754976272583
    3. '<|end|>' → logprob: -2.50754976272583
    4. '    
' → logprob: -4.75754976272583
    5. 'def' → logprob: -6.13254976272583
    6. '```' → logprob: -6.25754976272583
    7. '<|end|>' → logprob: -6.38254976272583
    8. '  
' → logprob: -8.757550239562988
    9. ' def' → logprob: -9.632550239562988
    10. ' 
' → logprob: -9.757550239562988

Token 111: ' class' (ID: 744)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04959625378251076
    2. 'def' → logprob: -4.049596309661865
    3. '   ' → logprob: -4.424596309661865
    4. ' def' → logprob: -5.049596309661865
    5. 'class' (adapté à ' class') → logprob: -5.299596309661865
    6. '    
' → logprob: -5.299596309661865
    7. '<|end|>' → logprob: -6.674596309661865
    8. '  
' → logprob: -7.424596309661865
    9. ' 
' → logprob: -8.424595832824707
    10. ' class' → logprob: -9.049595832824707

Token 112: ' Fen' (ID: 48230)
  Prédit: ' BIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' BIT' → logprob: -0.19413775205612183
    2. ' Fen' → logprob: -2.1941378116607666
    3. ' Binary' → logprob: -3.1941378116607666
    4. 'BIT' → logprob: -4.5691375732421875
    5. ' Bit' → logprob: -4.8191375732421875
    6. ' Node' → logprob: -6.4441375732421875
    7. 'Fen' → logprob: -7.1941375732421875
    8. ' ' → logprob: -7.3191375732421875
    9. '_BIT' → logprob: -7.8191375732421875
    10. ' Card' → logprob: -8.069137573242188

Token 113: 'wick' (ID: 14105)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.20364314317703247
    2. 'wick' → logprob: -1.7036430835723877
    3. '```' → logprob: -6.828643321990967
    4. '   ' → logprob: -7.453643321990967
    5. '``' → logprob: -9.203642845153809
    6. '       ' → logprob: -9.703642845153809
    7. 'wik' → logprob: -9.828642845153809
    8. ' wick' → logprob: -9.828642845153809
    9. 'ick' → logprob: -10.078642845153809
    10. '	w' → logprob: -10.328642845153809

Token 114: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -6.408677290892228e-05
    2. ' Tree' → logprob: -9.8750638961792
    3. '(Tree' → logprob: -12.1250638961792
    4. '	Tree' → logprob: -12.8750638961792
    5. '   ' → logprob: -13.2500638961792
    6. ' tree' → logprob: -14.2500638961792
    7. '_T' → logprob: -14.6250638961792
    8. 'Node' → logprob: -14.6250638961792
    9. '<Tree' → logprob: -14.7500638961792
    10. 'tree' → logprob: -15.5000638961792

Token 115: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004887416027486324
    2. ' :' → logprob: -5.379887580871582
    3. '(object' → logprob: -9.004887580871582
    4. ':
' → logprob: -9.754887580871582
    5. '(' → logprob: -10.254887580871582
    6. '():' → logprob: -10.629887580871582
    7. '):' → logprob: -11.129887580871582
    8. ' :
' → logprob: -13.379887580871582
    9. '   ' → logprob: -13.629887580871582
    10. ':**' → logprob: -13.754887580871582

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3862230181694031
    2. ':' → logprob: -2.511223077774048
    3. '   ' → logprob: -2.511223077774048
    4. '<|end|>' → logprob: -2.636223077774048
    5. '    ' → logprob: -4.136222839355469
    6. '    
' → logprob: -4.386222839355469
    7. '        
' → logprob: -4.761222839355469
    8. ':
' → logprob: -4.761222839355469
    9. ' 
' → logprob: -5.011222839355469
    10. '(n' → logprob: -5.261222839355469

Token 117: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3885469138622284
    2. 'def' (adapté à ' def') → logprob: -1.1385469436645508
    3. '   ' → logprob: -6.888546943664551
    4. '       ' → logprob: -7.388546943664551
    5. ' ' → logprob: -10.63854694366455
    6. '           ' → logprob: -12.51354694366455
    7. '	def' → logprob: -12.63854694366455
    8. '        ' → logprob: -12.76354694366455
    9. '    ' → logprob: -13.26354694366455
    10. ' __' → logprob: -14.88854694366455

Token 118: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0008588159107603133
    2. ' init' → logprob: -7.750858783721924
    3. '__' → logprob: -8.250859260559082
    4. 'init' → logprob: -8.750859260559082
    5. ' ' → logprob: -12.375859260559082
    6. ' def' → logprob: -13.625859260559082
    7. ' ' → logprob: -13.750859260559082
    8. '_init' → logprob: -13.750859260559082
    9. '```' → logprob: -14.625859260559082
    10. ' `' → logprob: -15.750859260559082

Token 119: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.417976379045285e-05
    2. 'int' → logprob: -11.125043869018555
    3. 'in' → logprob: -11.375043869018555
    4. 'nit' → logprob: -11.500043869018555
    5. 'ini' → logprob: -12.750043869018555
    6. 'n' → logprob: -13.375043869018555
    7. 'i' → logprob: -13.375043869018555
    8. 'innit' → logprob: -14.375043869018555
    9. 'inti' → logprob: -14.875043869018555
    10. 'inite' → logprob: -15.125043869018555

Token 120: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.005850339308381081
    2. '(self' → logprob: -5.630850315093994
    3. '__' → logprob: -6.130850315093994
    4. '__(
' → logprob: -10.380850791931152
    5. '__((' → logprob: -11.130850791931152
    6. '(' → logprob: -11.380850791931152
    7. ' (' → logprob: -11.755850791931152
    8. '__('' → logprob: -13.130850791931152
    9. '_(' → logprob: -13.255850791931152
    10. '__(*' → logprob: -13.630850791931152

Token 121: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00029685118352063
    2. ' self' → logprob: -8.125296592712402
    3. '(self' → logprob: -14.875296592712402
    4. '       ' → logprob: -15.125296592712402
    5. '           ' → logprob: -16.12529754638672
    6. '	self' → logprob: -16.37529754638672
    7. ',' → logprob: -17.50029754638672
    8. ',self' → logprob: -17.50029754638672
    9. '   ' → logprob: -18.12529754638672
    10. '0' → logprob: -18.37529754638672

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014416640624403954
    2. ' ,' → logprob: -4.264416694641113
    3. 'self' → logprob: -9.139416694641113
    4. '(self' → logprob: -9.514416694641113
    5. ',self' → logprob: -9.764416694641113
    6. ' (' → logprob: -12.264416694641113
    7. ' self' → logprob: -12.389416694641113
    8. '_,' → logprob: -13.264416694641113
    9. ',int' → logprob: -13.764416694641113
    10. ',n' → logprob: -14.264416694641113

Token 123: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.5846649408340454
    2. 'self' → logprob: -1.4596649408340454
    3. ' self' → logprob: -2.209664821624756
    4. 'size' → logprob: -2.459664821624756
    5. ' n' → logprob: -4.334664821624756
    6. 'n' → logprob: -6.209664821624756
    7. '           ' → logprob: -10.084665298461914
    8. '       ' → logprob: -11.834665298461914
    9. '        ' → logprob: -12.459665298461914
    10. ' N' → logprob: -12.834665298461914

Token 124: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007773502147756517
    2. ' ):' → logprob: -7.500777244567871
    3. '):
' → logprob: -8.750777244567871
    4. ')' → logprob: -9.875777244567871
    5. ':' → logprob: -12.000777244567871
    6. ',' → logprob: -12.750777244567871
    7. '=' → logprob: -13.125777244567871
    8. ' ' → logprob: -14.000777244567871
    9. '):
' → logprob: -14.000777244567871
    10. ' )' → logprob: -15.000777244567871

Token 125: '           ' (ID: 352)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.40186506509780884
    2. ':' → logprob: -1.401865005493164
    3. '):
' → logprob: -3.151865005493164
    4. '           ' → logprob: -3.776865005493164
    5. '       ' → logprob: -5.651865005493164
    6. ' :' → logprob: -5.776865005493164
    7. ',' → logprob: -5.901865005493164
    8. '        ' → logprob: -6.401865005493164
    9. ')' → logprob: -6.651865005493164
    10. ' ):' → logprob: -6.901865005493164

Token 126: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.21306073665618896
    2. ' self' → logprob: -1.713060736656189
    3. '           ' → logprob: -4.4630608558654785
    4. '   ' → logprob: -11.08806037902832
    5. '               ' → logprob: -11.58806037902832
    6. '	self' → logprob: -11.71306037902832
    7. '       ' → logprob: -11.83806037902832
    8. ' ' → logprob: -12.96306037902832
    9. '0' → logprob: -13.21306037902832
    10. '        ' → logprob: -13.21306037902832

Token 127: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.8229724168777466
    2. ' size' → logprob: -1.0729724168777466
    3. '.tree' → logprob: -2.322972297668457
    4. 'size' → logprob: -2.947972297668457
    5. '.' → logprob: -3.822972297668457
    6. '._' → logprob: -3.947972297668457
    7. ' tree' → logprob: -4.822972297668457
    8. '_size' → logprob: -5.822972297668457
    9. ' .' → logprob: -6.072972297668457
    10. 'tree' → logprob: -6.447972297668457

Token 128: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519318461418152
    2. ' =' → logprob: -1.50193190574646
    3. ' ' → logprob: -13.876932144165039
    4. '=int' → logprob: -14.251932144165039
    5. '=size' → logprob: -15.251932144165039
    6. ')' → logprob: -15.501932144165039
    7. '=self' → logprob: -15.751932144165039
    8. '+' → logprob: -16.00193214416504
    9. '    ' → logprob: -16.12693214416504
    10. '   ' → logprob: -16.12693214416504

Token 129: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.014163747429847717
    2. 'size' → logprob: -4.264163970947266
    3. '(size' → logprob: -16.014163970947266
    4. '[size' → logprob: -16.764163970947266
    5. ' ' → logprob: -17.514163970947266
    6. '	size' → logprob: -17.639163970947266
    7. '=size' → logprob: -18.514163970947266
    8. '    ' → logprob: -19.389163970947266
    9. '<size' → logprob: -20.139163970947266
    10. ',size' → logprob: -20.639163970947266

Token 130: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6022011041641235
    2. '           ' → logprob: -0.9772011041641235
    3. '<|end|>' → logprob: -3.602200984954834
    4. 'self' → logprob: -3.727200984954834
    5. '       ' → logprob: -4.227200984954834
    6. '  
' → logprob: -6.352200984954834
    7. '               ' → logprob: -6.852200984954834
    8. ' self' → logprob: -6.852200984954834
    9. '        
' → logprob: -7.102200984954834
    10. ',' → logprob: -7.102200984954834

Token 131: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0068108150735497475
    2. 'self' → logprob: -5.256810665130615
    3. '
' → logprob: -7.006810665130615
    4. '       ' → logprob: -8.006811141967773
    5. ' self' → logprob: -8.506811141967773
    6. '<|end|>' → logprob: -10.006811141967773
    7. '   ' → logprob: -10.631811141967773
    8. '               ' → logprob: -11.131811141967773
    9. ',' → logprob: -11.131811141967773
    10. '	       ' → logprob: -11.256811141967773

Token 132: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2829839289188385
    2. 'tree' → logprob: -1.9079838991165161
    3. ' self' → logprob: -2.5329840183258057
    4. ' tree' → logprob: -4.157983779907227
    5. '[' → logprob: -6.157983779907227
    6. 'data' → logprob: -8.032983779907227
    7. '0' → logprob: -9.032983779907227
    8. '   ' → logprob: -9.407983779907227
    9. ' fen' → logprob: -9.532983779907227
    10. ' [' → logprob: -9.782983779907227

Token 133: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.11335227638483047
    2. ' tree' → logprob: -2.9883522987365723
    3. 'tree' → logprob: -2.9883522987365723
    4. '.bit' → logprob: -5.863352298736572
    5. '.data' → logprob: -6.113352298736572
    6. ' fen' → logprob: -7.988352298736572
    7. 'bit' → logprob: -8.113351821899414
    8. '.' → logprob: -8.863351821899414
    9. ' bit' → logprob: -8.863351821899414
    10. 'data' → logprob: -9.363351821899414

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048590775579214096
    2. '=' → logprob: -3.048590660095215
    3. ' ' → logprob: -13.048590660095215
    4. ' =[' → logprob: -14.048590660095215
    5. '[' → logprob: -15.798590660095215
    6. '   ' → logprob: -16.04859161376953
    7. '=[' → logprob: -16.67359161376953
    8. '	' → logprob: -16.79859161376953
    9. '=[]' → logprob: -17.17359161376953
    10. '    ' → logprob: -17.29859161376953

Token 135: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5759397745132446
    2. ' [' → logprob: -0.8259397745132446
    3. ' ' → logprob: -16.075939178466797
    4. ' ' → logprob: -16.450939178466797
    5. '[self' → logprob: -16.575939178466797
    6. '[int' → logprob: -16.825939178466797
    7. '   ' → logprob: -17.075939178466797
    8. '	' → logprob: -17.825939178466797
    9. '0' → logprob: -17.825939178466797
    10. '[class' → logprob: -19.200939178466797

Token 136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '۰' → logprob: -19.875001907348633
    4. '   ' → logprob: -20.000001907348633
    5. '
' → logprob: -20.875001907348633
    6. '０' → logprob: -21.875001907348633
    7. '000' → logprob: -22.625001907348633
    8. '00' → logprob: -22.625001907348633
    9. ' 
' → logprob: -23.125001907348633
    10. '٠' → logprob: -23.125001907348633

Token 137: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.5027299822540954e-05
    2. ']*(' → logprob: -9.875055313110352
    3. ']*' → logprob: -12.750055313110352
    4. ' ]' → logprob: -14.250055313110352
    5. ')' → logprob: -17.37505531311035
    6. ' ' → logprob: -18.00005531311035
    7. ']+' → logprob: -18.87505531311035
    8. ' for' → logprob: -19.12505531311035
    9. '*' → logprob: -20.00005531311035
    10. '0' → logprob: -20.25005531311035

Token 138: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.035748232156038284
    2. ']*(' → logprob: -4.41074800491333
    3. '*' → logprob: -4.53574800491333
    4. ' *' → logprob: -4.53574800491333
    5. ']*' → logprob: -6.91074800491333
    6. ' ]' → logprob: -8.660748481750488
    7. ')' → logprob: -9.035748481750488
    8. ' ' → logprob: -9.285748481750488
    9. '*(' → logprob: -9.285748481750488
    10. ',' → logprob: -10.660748481750488

Token 139: ' (' (ID: 350)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.003647472243756056
    2. ' (' → logprob: -5.878647327423096
    3. '(self' → logprob: -7.253647327423096
    4. '(s' → logprob: -10.003647804260254
    5. '(sz' → logprob: -10.003647804260254
    6. '(' → logprob: -11.628647804260254
    7. '(score' → logprob: -12.253647804260254
    8. '(n' → logprob: -12.628647804260254
    9. '(max' → logprob: -12.753647804260254
    10. '(space' → logprob: -12.753647804260254

Token 140: 'size' (ID: 4461)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.0317794531583786
    2. 'size' → logprob: -3.5317795276641846
    3. '(self' → logprob: -6.9067792892456055
    4. ' (' → logprob: -7.6567792892456055
    5. ' size' → logprob: -8.031779289245605
    6. 'self' → logprob: -8.406779289245605
    7. '[size' → logprob: -12.906779289245605
    8. ' self' → logprob: -13.906779289245605
    9. '   ' → logprob: -14.781779289245605
    10. '(' → logprob: -14.906779289245605

Token 141: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31326231360435486
    2. ' +' → logprob: -1.3132623434066772
    3. ' +
' → logprob: -15.688261985778809
    4. ' plus' → logprob: -15.938261985778809
    5. '+
' → logprob: -15.938261985778809
    6. ' ' → logprob: -16.563262939453125
    7. '＋' → logprob: -16.938262939453125
    8. '[' → logprob: -18.813262939453125
    9. '()+' → logprob: -18.938262939453125
    10. '+self' → logprob: -19.313262939453125

Token 142: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011200665176147595
    2. ' ' → logprob: -9.12511157989502
    3. '2' → logprob: -12.75011157989502
    4. '   ' → logprob: -16.500112533569336
    5. '```' → logprob: -17.625112533569336
    6. '10' → logprob: -18.750112533569336
    7. '5' → logprob: -18.812612533569336
    8. '  ' → logprob: -18.937612533569336
    9. '１' → logprob: -20.062612533569336
    10. '
' → logprob: -20.125112533569336

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -11.875008583068848
    3. '2' → logprob: -13.500008583068848
    4. '   ' → logprob: -18.37500762939453
    5. '5' → logprob: -18.62500762939453
    6. '10' → logprob: -19.37500762939453
    7. '```' → logprob: -19.87500762939453
    8. '
' → logprob: -20.25000762939453
    9. '  ' → logprob: -20.31250762939453
    10. '１' → logprob: -20.56250762939453

Token 144: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001037815964082256
    2. ' )' → logprob: -9.875103950500488
    3. ')
' → logprob: -10.000103950500488
    4. '       ' → logprob: -12.625103950500488
    5. ')

' → logprob: -13.375103950500488
    6. '   ' → logprob: -14.000103950500488
    7. '<|end|>' → logprob: -14.375103950500488
    8. '),' → logprob: -16.250102996826172
    9. '```' → logprob: -16.750102996826172
    10. ')
' → logprob: -16.750102996826172

Token 145: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24987202882766724
    2. '       ' → logprob: -1.7498719692230225
    3. '        
' → logprob: -3.4998719692230225
    4. '    
' → logprob: -4.749872207641602
    5. '   ' → logprob: -4.999872207641602
    6. '<|end|>' → logprob: -7.374872207641602
    7. ' 
' → logprob: -7.624872207641602
    8. 'def' → logprob: -8.499872207641602
    9. '  
' → logprob: -9.374872207641602
    10. '		
' → logprob: -9.874872207641602

Token 146: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.05250849574804306
    2. ' def' → logprob: -3.052508592605591
    3. '   ' → logprob: -5.552508354187012
    4. '
' → logprob: -10.927508354187012
    5. '	def' → logprob: -11.802508354187012
    6. '       ' → logprob: -11.927508354187012
    7. ' ' → logprob: -13.427508354187012
    8. '    
' → logprob: -14.052508354187012
    9. '        
' → logprob: -14.427508354187012
    10. '  ' → logprob: -14.427508354187012

Token 147: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.25434157252311707
    2. 'update' → logprob: -1.5043416023254395
    3. '_update' → logprob: -6.2543416023254395
    4. ' add' → logprob: -8.254341125488281
    5. 'add' → logprob: -8.629341125488281
    6. ' low' → logprob: -10.754341125488281
    7. 'low' → logprob: -12.004341125488281
    8. 'sum' → logprob: -12.129341125488281
    9. ' sum' → logprob: -12.754341125488281
    10. 'query' → logprob: -12.754341125488281

Token 148: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3136688470840454
    2. '(' → logprob: -1.3136688470840454
    3. ' (' → logprob: -8.438669204711914
    4. '(index' → logprob: -9.438669204711914
    5. '<|end|>' → logprob: -9.688669204711914
    6. '(i' → logprob: -10.938669204711914
    7. '(idx' → logprob: -11.813669204711914
    8. '(
' → logprob: -11.813669204711914
    9. '(x' → logprob: -12.438669204711914
    10. '(s' → logprob: -12.688669204711914

Token 149: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4758021831512451
    2. '(' → logprob: -1.2258021831512451
    3. ')' → logprob: -3.225802183151245
    4. ',' → logprob: -3.975802183151245
    5. ' (' → logprob: -4.475802421569824
    6. '(index' → logprob: -5.225802421569824
    7. '(i' → logprob: -5.475802421569824
    8. 'self' → logprob: -6.850802421569824
    9. '(idx' → logprob: -6.850802421569824
    10. ')(' → logprob: -7.100802421569824

Token 150: ' i' (ID: 575)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.9636932015419006
    2. ' index' → logprob: -1.2136931419372559
    3. ' i' → logprob: -1.9636931419372559
    4. 'index' → logprob: -1.9636931419372559
    5. 'i' → logprob: -3.838693141937256
    6. 'idx' → logprob: -3.963693141937256
    7. ')' → logprob: -9.463693618774414
    8. ' x' → logprob: -9.838693618774414
    9. 'x' → logprob: -10.838693618774414
    10. ' pos' → logprob: -11.088693618774414

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003442832676228136
    2. ' ,' → logprob: -8.000344276428223
    3. ',i' → logprob: -13.000344276428223
    4. ',value' → logprob: -13.250344276428223
    5. ',int' → logprob: -13.625344276428223
    6. ',self' → logprob: -14.125344276428223
    7. 'self' → logprob: -14.250344276428223
    8. '       ' → logprob: -14.500344276428223
    9. '```' → logprob: -15.500344276428223
    10. ',
' → logprob: -15.750344276428223

Token 152: ' v' (ID: 323)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0048702955245972
    2. ' delta' → logprob: -1.1298702955245972
    3. 'delta' → logprob: -1.5048702955245972
    4. ' ' → logprob: -2.6298704147338867
    5. 'value' → logprob: -5.129870414733887
    6. ' val' → logprob: -5.254870414733887
    7. ' v' → logprob: -6.254870414733887
    8. 'val' → logprob: -6.504870414733887
    9. ' value' → logprob: -6.754870414733887
    10. 'v' → logprob: -7.129870414733887

Token 153: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5760130286216736
    2. '):' → logprob: -0.8260130286216736
    3. '):
' → logprob: -10.07601261138916
    4. 'alue' → logprob: -10.82601261138916
    5. 'al' → logprob: -12.07601261138916
    6. ' ):' → logprob: -13.07601261138916
    7. ')' → logprob: -13.82601261138916
    8. '):

' → logprob: -14.07601261138916
    9. ' ):
' → logprob: -14.57601261138916
    10. ':' → logprob: -14.70101261138916

Token 154: '           ' (ID: 352)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6495499014854431
    2. ':' → logprob: -1.399549961090088
    3. '):' → logprob: -1.899549961090088
    4. '       ' → logprob: -3.024549961090088
    5. ':
' → logprob: -3.649549961090088
    6. '           ' → logprob: -5.774549961090088
    7. '   ' → logprob: -7.149549961090088
    8. ')' → logprob: -7.774549961090088
    9. ' :' → logprob: -7.774549961090088
    10. '):
' → logprob: -7.899549961090088

Token 155: ' while' (ID: 2049)
  Prédit: '            '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '            ' → logprob: -0.7975888848304749
    2. '           ' → logprob: -1.42258882522583
    3. ' while' → logprob: -2.17258882522583
    4. '               ' → logprob: -2.42258882522583
    5. ' 
' → logprob: -2.92258882522583
    6. '                ' → logprob: -4.17258882522583
    7. ' i' → logprob: -4.79758882522583
    8. ' ' → logprob: -4.79758882522583
    9. 'while' (adapté à ' while') → logprob: -5.17258882522583
    10. '
' → logprob: -6.04758882522583

Token 156: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04858850687742233
    2. ' i' → logprob: -3.048588514328003
    3. '   ' → logprob: -14.298588752746582
    4. '(i' → logprob: -15.673588752746582
    5. '	i' → logprob: -16.173587799072266
    6. ' ' → logprob: -16.423587799072266
    7. '```' → logprob: -16.923587799072266
    8. '1' → logprob: -17.298587799072266
    9. '  ' → logprob: -17.923587799072266
    10. '    ' → logprob: -18.423587799072266

Token 157: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2016184777021408
    2. '<=' → logprob: -1.7016184329986572
    3. ' <' → logprob: -8.826618194580078
    4. '<' → logprob: -9.826618194580078
    5. ' +=' → logprob: -13.826618194580078
    6. '           ' → logprob: -13.951618194580078
    7. ' <<=' → logprob: -13.951618194580078
    8. '[' → logprob: -14.826618194580078
    9. '            ' → logprob: -15.326618194580078
    10. ' ≤' → logprob: -15.576618194580078

Token 158: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015023599844425917
    2. ' self' → logprob: -6.501502513885498
    3. '           ' → logprob: -17.251502990722656
    4. '(self' → logprob: -19.376502990722656
    5. '       ' → logprob: -20.001502990722656
    6. '
' → logprob: -20.126502990722656
    7. '	self' → logprob: -20.376502990722656
    8. '[self' → logprob: -20.376502990722656
    9. '   ' → logprob: -21.126502990722656
    10. '=self' → logprob: -21.251502990722656

Token 159: '.size' (ID: 4463)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012447020038962364
    2. 'size' → logprob: -4.512446880340576
    3. ' self' → logprob: -6.637446880340576
    4. ' size' → logprob: -9.387447357177734
    5. '.size' → logprob: -13.262447357177734
    6. '
' → logprob: -14.262447357177734
    7. 's' → logprob: -14.762447357177734
    8. '   ' → logprob: -15.012447357177734
    9. '_size' → logprob: -15.887447357177734
    10. '       ' → logprob: -16.387447357177734

Token 160: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.38723573088645935
    2. ':' → logprob: -1.1372357606887817
    3. '):
' → logprob: -8.762235641479492
    4. '               ' → logprob: -9.387235641479492
    5. '           ' → logprob: -9.387235641479492
    6. ' :
' → logprob: -11.887235641479492
    7. ':

' → logprob: -11.887235641479492
    8. ':
' → logprob: -12.137235641479492
    9. '<|end|>' → logprob: -12.137235641479492
    10. ' and' → logprob: -12.387235641479492

Token 161: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005340866628102958
    2. 'self' → logprob: -8.125534057617188
    3. '```' → logprob: -9.625534057617188
    4. ' self' → logprob: -9.750534057617188
    5. '           ' → logprob: -10.500534057617188
    6. ' i' → logprob: -11.250534057617188
    7. '   ' → logprob: -11.250534057617188
    8. ':
' → logprob: -11.500534057617188
    9. '
' → logprob: -11.750534057617188
    10. '    
' → logprob: -11.875534057617188

Token 162: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7104306221008301
    2. 'self' (adapté à ' self') → logprob: -0.7104306221008301
    3. '               ' → logprob: -4.08543062210083
    4. '           ' → logprob: -8.335430145263672
    5. '                   ' → logprob: -11.335430145263672
    6. '	self' → logprob: -11.460430145263672
    7. '[self' → logprob: -11.585430145263672
    8. '   ' → logprob: -11.585430145263672
    9. '+' → logprob: -11.835430145263672
    10. '                ' → logprob: -11.960430145263672

Token 163: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.022300679236650467
    2. 'tree' → logprob: -3.8973007202148438
    3. '.' → logprob: -7.147300720214844
    4. '           ' → logprob: -8.522300720214844
    5. ' +=' → logprob: -8.647300720214844
    6. ' tree' → logprob: -8.647300720214844
    7. '	tree' → logprob: -9.147300720214844
    8. '+' → logprob: -10.022300720214844
    9. '               ' → logprob: -10.022300720214844
    10. ' ' → logprob: -10.147300720214844

Token 164: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '               ' → logprob: -13.750000953674316
    3. '[' → logprob: -15.625000953674316
    4. ' [' → logprob: -17.250001907348633
    5. '           ' → logprob: -17.875001907348633
    6. 'i' → logprob: -19.125001907348633
    7. '                   ' → logprob: -19.250001907348633
    8. '                ' → logprob: -19.875001907348633
    9. '```' → logprob: -20.375001907348633
    10. '[
' → logprob: -21.250001907348633

Token 165: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5762642025947571
    2. ' +=' → logprob: -0.8262642025947571
    3. ']+=' → logprob: -8.076264381408691
    4. '            ' → logprob: -12.326264381408691
    5. '+' → logprob: -12.951264381408691
    6. '        ' → logprob: -13.451264381408691
    7. '           ' → logprob: -13.451264381408691
    8. '=' → logprob: -13.576264381408691
    9. '    ' → logprob: -13.701264381408691
    10. ']' → logprob: -14.826264381408691

Token 166: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759836435317993
    2. '+=' → logprob: -0.8259836435317993
    3. '+' → logprob: -10.575984001159668
    4. '=' → logprob: -11.575984001159668
    5. ' ' → logprob: -12.825984001159668
    6. ']+=' → logprob: -13.075984001159668
    7. '            ' → logprob: -13.450984001159668
    8. ' +' → logprob: -13.950984001159668
    9. ' =' → logprob: -14.200984001159668
    10. '                ' → logprob: -14.825984001159668

Token 167: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0031777136027812958
    2. ' v' → logprob: -5.753177642822266
    3. '	v' → logprob: -18.378177642822266
    4. '_v' → logprob: -22.503177642822266
    5. '$v' → logprob: -22.753177642822266
    6. '   ' → logprob: -23.128177642822266
    7. ' ' → logprob: -23.253177642822266
    8. ' ' → logprob: -23.378177642822266
    9. '*v' → logprob: -23.628177642822266
    10. ')v' → logprob: -23.878177642822266

Token 168: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.180258191714529e-06
    2. '           ' → logprob: -12.000008583068848
    3. '              ' → logprob: -14.750008583068848
    4. '   ' → logprob: -15.375008583068848
    5. '       ' → logprob: -15.375008583068848
    6. '                   ' → logprob: -15.625008583068848
    7. 'i' → logprob: -15.750008583068848
    8. '
' → logprob: -15.875008583068848
    9. '                
' → logprob: -15.875008583068848
    10. '	           ' → logprob: -16.00000762939453

Token 169: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3425219549390022e-05
    2. '           ' → logprob: -12.12501335144043
    3. '                
' → logprob: -12.87501335144043
    4. '   ' → logprob: -13.62501335144043
    5. '```' → logprob: -14.37501335144043
    6. '              ' → logprob: -14.50001335144043
    7. '    
' → logprob: -14.62501335144043
    8. '
' → logprob: -14.75001335144043
    9. 'i' → logprob: -14.87501335144043
    10. '       ' → logprob: -14.87501335144043

Token 170: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5782460570335388
    2. 'i' (adapté à ' i') → logprob: -0.8282460570335388
    3. '               ' → logprob: -6.078246116638184
    4. '           ' → logprob: -11.703246116638184
    5. '   ' → logprob: -13.703246116638184
    6. '                   ' → logprob: -13.953246116638184
    7. '
' → logprob: -14.328246116638184
    8. ',i' → logprob: -15.453246116638184
    9. '	i' → logprob: -15.578246116638184
    10. ' ' → logprob: -15.953246116638184

Token 171: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.018893616273999214
    2. ' <<=' → logprob: -4.393893718719482
    3. '+=' → logprob: -5.143893718719482
    4. ' *=' → logprob: -8.518893241882324
    5. ' |=' → logprob: -8.893893241882324
    6. ' =' → logprob: -9.518893241882324
    7. '=' → logprob: -9.643893241882324
    8. ' ' → logprob: -10.393893241882324
    9. '    ' → logprob: -11.893893241882324
    10. ' ' → logprob: -12.393893241882324

Token 172: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.061982810497283936
    2. ' i' → logprob: -2.8119828701019287
    3. '(i' → logprob: -12.311983108520508
    4. ' ' → logprob: -12.686983108520508
    5. '	i' → logprob: -12.686983108520508
    6. '(' → logprob: -13.311983108520508
    7. ' (' → logprob: -13.436983108520508
    8. '   ' → logprob: -13.811983108520508
    9. '  ' → logprob: -15.311983108520508
    10. '_i' → logprob: -16.811983108520508

Token 173: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.2523828446865082
    2. '&' → logprob: -1.7523828744888306
    3. '&i' → logprob: -3.002382755279541
    4. '&t' → logprob: -11.8773832321167
    5. '&a' → logprob: -13.0023832321167
    6. '&id' → logprob: -13.2523832321167
    7. '&amp' → logprob: -13.3773832321167
    8. '&r' → logprob: -13.5023832321167
    9. '＆' → logprob: -13.6273832321167
    10. '&(' → logprob: -13.7523832321167

Token 174: ' (-' (ID: 21382)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.41256242990493774
    2. ' -' → logprob: -1.662562370300293
    3. '-' → logprob: -1.912562370300293
    4. '(-' → logprob: -7.412562370300293
    5. ' (-' → logprob: -10.037562370300293
    6. ' i' → logprob: -10.787562370300293
    7. 'i' → logprob: -11.412562370300293
    8. '(i' → logprob: -12.662562370300293
    9. '	' → logprob: -13.037562370300293
    10. ' ' → logprob: -13.037562370300293

Token 175: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.5597102396423e-05
    2. ' i' → logprob: -10.250035285949707
    3. '	i' → logprob: -16.750036239624023
    4. '-i' → logprob: -17.375036239624023
    5. ')i' → logprob: -17.750036239624023
    6. '_i' → logprob: -18.500036239624023
    7. ' ' → logprob: -19.125036239624023
    8. ''i' → logprob: -19.250036239624023
    9. '   ' → logprob: -19.375036239624023
    10. ')' → logprob: -19.375036239624023

Token 176: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008524621836841106
    2. 'i' → logprob: -4.883524417877197
    3. ')i' → logprob: -7.133524417877197
    4. ' )' → logprob: -9.883524894714355
    5. ' i' → logprob: -10.508524894714355
    6. ')
' → logprob: -10.883524894714355
    7. '<|end|>' → logprob: -11.383524894714355
    8. '_i' → logprob: -13.133524894714355
    9. '1' → logprob: -13.133524894714355
    10. ')

' → logprob: -14.133524894714355

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009132571518421173
    2. '
' → logprob: -5.634132385253906
    3. '        
' → logprob: -5.634132385253906
    4. '    
' → logprob: -7.384132385253906
    5. ' 
' → logprob: -7.634132385253906
    6. '  
' → logprob: -8.259132385253906
    7. '   ' → logprob: -8.759132385253906
    8. 'def' → logprob: -9.009132385253906
    9. '<|end|>' → logprob: -9.259132385253906
    10. ' def' → logprob: -10.259132385253906

Token 178: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04855205491185188
    2. '       ' → logprob: -3.2985520362854004
    3. ' def' → logprob: -4.6735520362854
    4. '        
' → logprob: -7.5485520362854
    5. '
' → logprob: -7.7985520362854
    6. '   ' → logprob: -9.798552513122559
    7. ' 
' → logprob: -10.048552513122559
    8. '    
' → logprob: -10.298552513122559
    9. '	def' → logprob: -11.173552513122559
    10. '  
' → logprob: -11.423552513122559

Token 179: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.020739009603857994
    2. ' query' → logprob: -4.0207390785217285
    3. 'sum' → logprob: -6.0207390785217285
    4. 'prefix' → logprob: -9.52073860168457
    5. ' sum' → logprob: -9.89573860168457
    6. '_query' → logprob: -10.39573860168457
    7. ' prefix' → logprob: -13.27073860168457
    8. 'get' → logprob: -14.14573860168457
    9. '	query' → logprob: -15.02073860168457
    10. '_sum' → logprob: -15.64573860168457

Token 180: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007224413566291332
    2. '(' → logprob: -7.250722408294678
    3. ' (' → logprob: -11.500722885131836
    4. 'self' → logprob: -13.875722885131836
    5. '(s' → logprob: -14.625722885131836
    6. '(i' → logprob: -14.875722885131836
    7. '(Self' → logprob: -15.875722885131836
    8. '(
' → logprob: -16.125722885131836
    9. '(sel' → logprob: -16.125722885131836
    10. '   ' → logprob: -16.750722885131836

Token 181: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.029059788212180138
    2. ',' → logprob: -3.779059886932373
    3. ' (' → logprob: -5.904059886932373
    4. '(' → logprob: -6.779059886932373
    5. ')' → logprob: -7.529059886932373
    6. '(i' → logprob: -7.779059886932373
    7. '       ' → logprob: -7.904059886932373
    8. 'self' → logprob: -8.029059410095215
    9. ' ,' → logprob: -9.404059410095215
    10. '           ' → logprob: -9.779059410095215

Token 182: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018563449382781982
    2. ' i' → logprob: -4.018563270568848
    3. 'self' → logprob: -7.893563270568848
    4. ' self' → logprob: -10.768563270568848
    5. '   ' → logprob: -11.893563270568848
    6. ')' → logprob: -12.393563270568848
    7. 's' → logprob: -13.518563270568848
    8. ' ' → logprob: -13.643563270568848
    9. '<|end|>' → logprob: -14.018563270568848
    10. '       ' → logprob: -14.268563270568848

Token 183: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07273253798484802
    2. '):
' → logprob: -2.697732448577881
    3. ':' → logprob: -6.322732448577881
    4. '<|end|>' → logprob: -7.822732448577881
    5. ')' → logprob: -8.697732925415039
    6. 'self' → logprob: -9.447732925415039
    7. '       ' → logprob: -9.572732925415039
    8. ':
' → logprob: -9.947732925415039
    9. '   ' → logprob: -10.447732925415039
    10. ',' → logprob: -10.572732925415039

Token 184: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0345148891210556
    2. '0' → logprob: -3.784514904022217
    3. '       ' → logprob: -5.284514904022217
    4. 'result' → logprob: -5.909514904022217
    5. 'return' → logprob: -6.659514904022217
    6. ' return' → logprob: -8.159514427185059
    7. 'sum' → logprob: -8.159514427185059
    8. '               ' → logprob: -8.409514427185059
    9. ' 
' → logprob: -8.409514427185059
    10. '  
' → logprob: -8.659514427185059

Token 185: ' res' (ID: 694)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.236818328499794
    2. ' res' → logprob: -2.111818313598633
    3. ' result' → logprob: -3.111818313598633
    4. 'result' → logprob: -4.361818313598633
    5. ' ' → logprob: -4.486818313598633
    6. 'res' (adapté à ' res') → logprob: -4.611818313598633
    7. ' s' → logprob: -5.236818313598633
    8. '           ' → logprob: -6.111818313598633
    9. ' sum' → logprob: -6.486818313598633
    10. 'sum' → logprob: -7.111818313598633

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12744908034801483
    2. '=' → logprob: -2.1274490356445312
    3. ' ' → logprob: -7.627449035644531
    4. ' +=' → logprob: -10.377449035644531
    5. '  ' → logprob: -14.627449035644531
    6. '+=' → logprob: -15.002449035644531
    7. '<|end|>' → logprob: -15.127449035644531
    8. ' =
' → logprob: -15.377449035644531
    9. '   ' → logprob: -15.377449035644531
    10. ',' → logprob: -15.877449035644531

Token 187: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759416222572327
    2. '0' → logprob: -0.8259416222572327
    3. ' ' → logprob: -13.325942039489746
    4. ' self' → logprob: -14.575942039489746
    5. 'self' → logprob: -15.950942039489746
    6. ' 
' → logprob: -18.32594108581543
    7. '۰' → logprob: -18.70094108581543
    8. '  ' → logprob: -20.20094108581543
    9. '   ' → logprob: -20.20094108581543
    10. ',' → logprob: -21.32594108581543

Token 188: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. 'self' → logprob: -19.0
    4. '   ' → logprob: -21.0
    5. '۰' → logprob: -21.875
    6. '000' → logprob: -23.75
    7. '```' → logprob: -23.75
    8. '           ' → logprob: -23.875
    9. '       ' → logprob: -24.125
    10. '00' → logprob: -24.375

Token 189: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009312468580901623
    2. '
' → logprob: -4.759312629699707
    3. '       ' → logprob: -8.134312629699707
    4. '            
' → logprob: -8.759312629699707
    5. ' 
' → logprob: -10.009312629699707
    6. '    
' → logprob: -10.009312629699707
    7. '  
' → logprob: -10.009312629699707
    8. '               ' → logprob: -10.259312629699707
    9. '        
' → logprob: -10.634312629699707
    10. '		' → logprob: -11.509312629699707

Token 190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016184075502678752
    2. '
' → logprob: -6.876618385314941
    3. '       ' → logprob: -7.751618385314941
    4. ' 
' → logprob: -10.501618385314941
    5. '    
' → logprob: -10.501618385314941
    6. '            
' → logprob: -10.626618385314941
    7. '  
' → logprob: -10.751618385314941
    8. ' while' → logprob: -11.501618385314941
    9. '   ' → logprob: -11.626618385314941
    10. '               ' → logprob: -11.876618385314941

Token 191: ' while' (ID: 2049)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04634203761816025
    2. ' i' → logprob: -4.046341896057129
    3. ' while' → logprob: -4.171341896057129
    4. ' 
' → logprob: -5.171341896057129
    5. 'i' → logprob: -5.921341896057129
    6. 'while' (adapté à ' while') → logprob: -6.046341896057129
    7. ' ' → logprob: -8.296341896057129
    8. '
' → logprob: -8.421341896057129
    9. '   ' → logprob: -8.671341896057129
    10. '               ' → logprob: -8.671341896057129

Token 192: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2519298195838928
    2. 'i' → logprob: -1.501929759979248
    3. '           ' → logprob: -14.376930236816406
    4. '	i' → logprob: -15.876930236816406
    5. '   ' → logprob: -16.751930236816406
    6. '(i' → logprob: -17.001930236816406
    7. ' ' → logprob: -18.001930236816406
    8. '    ' → logprob: -18.626930236816406
    9. '               ' → logprob: -19.126930236816406
    10. '            ' → logprob: -19.126930236816406

Token 193: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.07890157401561737
    2. ' >' → logprob: -2.578901529312134
    3. '>=' → logprob: -11.828901290893555
    4. ' ' → logprob: -13.953901290893555
    5. ' >=' → logprob: -13.953901290893555
    6. '   ' → logprob: -13.953901290893555
    7. '&gt' → logprob: -14.203901290893555
    8. ' ' → logprob: -14.953901290893555
    9. '>
' → logprob: -15.703901290893555
    10. '           ' → logprob: -16.203901290893555

Token 194: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03804987296462059
    2. ' ' → logprob: -3.2880499362945557
    3. '           ' → logprob: -12.413049697875977
    4. '               ' → logprob: -13.038049697875977
    5. '=' → logprob: -14.288049697875977
    6. ' i' → logprob: -14.288049697875977
    7. 'i' → logprob: -14.788049697875977
    8. '<|end|>' → logprob: -15.913049697875977
    9. '            ' → logprob: -16.163049697875977
    10. '   ' → logprob: -16.788049697875977

Token 195: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '           ' → logprob: -19.000261306762695
    4. '=' → logprob: -19.500261306762695
    5. '   ' → logprob: -20.375261306762695
    6. '               ' → logprob: -20.375261306762695
    7. '  ' → logprob: -21.000261306762695
    8. '       ' → logprob: -21.250261306762695
    9. '<|end|>' → logprob: -21.250261306762695
    10. '        ' → logprob: -21.375261306762695

Token 196: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18140383064746857
    2. ':
' → logprob: -1.8064038753509521
    3. ':' → logprob: -7.056403636932373
    4. '           ' → logprob: -7.681403636932373
    5. '):
' → logprob: -9.056404113769531
    6. ',
' → logprob: -10.806404113769531
    7. ' :
' → logprob: -10.931404113769531
    8. ' and' → logprob: -11.056404113769531
    9. '                   ' → logprob: -11.056404113769531
    10. '<|end|>' → logprob: -11.056404113769531

Token 197: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001761272142175585
    2. '           ' → logprob: -9.875176429748535
    3. ' res' → logprob: -10.125176429748535
    4. '
' → logprob: -10.125176429748535
    5. 'res' → logprob: -10.625176429748535
    6. '```' → logprob: -12.625176429748535
    7. '              ' → logprob: -12.875176429748535
    8. '                   ' → logprob: -12.875176429748535
    9. '<|end|>' → logprob: -12.875176429748535
    10. '                ' → logprob: -13.000176429748535

Token 198: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.2605725824832916
    2. ' res' → logprob: -1.5105725526809692
    3. '               ' → logprob: -4.76057243347168
    4. '           ' → logprob: -11.26057243347168
    5. '	res' → logprob: -11.38557243347168
    6. '                   ' → logprob: -11.51057243347168
    7. '
' → logprob: -11.88557243347168
    8. '                ' → logprob: -13.63557243347168
    9. '   ' → logprob: -14.13557243347168
    10. ',res' → logprob: -15.13557243347168

Token 199: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.01358884572982788
    2. '+=' → logprob: -4.763588905334473
    3. '               ' → logprob: -5.388588905334473
    4. '                ' → logprob: -8.013588905334473
    5. '           ' → logprob: -11.138588905334473
    6. '            ' → logprob: -11.388588905334473
    7. '                   ' → logprob: -11.513588905334473
    8. '              ' → logprob: -11.888588905334473
    9. '[' → logprob: -12.138588905334473
    10. '			' → logprob: -13.263588905334473

Token 200: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0067170290276408195
    2. ' self' → logprob: -5.006717205047607
    3. '               ' → logprob: -13.50671672821045
    4. '           ' → logprob: -15.25671672821045
    5. '[self' → logprob: -17.006717681884766
    6. '(self' → logprob: -17.256717681884766
    7. '	self' → logprob: -17.631717681884766
    8. '                   ' → logprob: -18.131717681884766
    9. ' ' → logprob: -19.131717681884766
    10. '   ' → logprob: -19.256717681884766

Token 201: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -1.843177233240567e-05
    2. 'tree' → logprob: -11.500018119812012
    3. '.' → logprob: -12.125018119812012
    4. ' .' → logprob: -13.125018119812012
    5. '	tree' → logprob: -14.625018119812012
    6. ' tree' → logprob: -16.000019073486328
    7. '.table' → logprob: -16.375019073486328
    8. '.user' → logprob: -17.500019073486328
    9. 'Tree' → logprob: -17.500019073486328
    10. '.Tree' → logprob: -18.125019073486328

Token 202: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.32392441527918e-05
    2. '[' → logprob: -9.875053405761719
    3. 'i' → logprob: -13.625053405761719
    4. ' i' → logprob: -15.375053405761719
    5. '	i' → logprob: -16.87505340576172
    6. ' ' → logprob: -17.00005340576172
    7. ',i' → logprob: -17.37505340576172
    8. ' [' → logprob: -17.50005340576172
    9. '{i' → logprob: -17.50005340576172
    10. '[
' → logprob: -17.50005340576172

Token 203: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005925900186412036
    2. '           ' → logprob: -8.625592231750488
    3. '
' → logprob: -9.000592231750488
    4. ' i' → logprob: -9.500592231750488
    5. '<|end|>' → logprob: -10.000592231750488
    6. ',' → logprob: -10.375592231750488
    7. 'i' → logprob: -11.125592231750488
    8. '                
' → logprob: -11.125592231750488
    9. '<|end|>' → logprob: -11.250592231750488
    10. '	           ' → logprob: -11.375592231750488

Token 204: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.4974866644479334e-05
    2. '           ' → logprob: -11.750015258789062
    3. '                
' → logprob: -13.250015258789062
    4. '   ' → logprob: -13.500015258789062
    5. '              ' → logprob: -13.750015258789062
    6. '                   ' → logprob: -13.875015258789062
    7. '       ' → logprob: -14.375015258789062
    8. '                ' → logprob: -14.875015258789062
    9. ' i' → logprob: -15.250015258789062
    10. 'i' → logprob: -15.625015258789062

Token 205: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.06672950088977814
    2. ' i' → logprob: -3.3167295455932617
    3. '               ' → logprob: -3.5667295455932617
    4. '           ' → logprob: -10.691729545593262
    5. '   ' → logprob: -13.066729545593262
    6. '                   ' → logprob: -13.066729545593262
    7. '	i' → logprob: -13.316729545593262
    8. ',i' → logprob: -13.691729545593262
    9. '       ' → logprob: -14.316729545593262
    10. '                
' → logprob: -14.316729545593262

Token 206: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.19852019846439362
    2. '-=' → logprob: -3.1985201835632324
    3. '=' → logprob: -3.4485201835632324
    4. '               ' → logprob: -3.6985201835632324
    5. '           ' → logprob: -3.8235201835632324
    6. '            ' → logprob: -4.448520183563232
    7. ' ' → logprob: -4.698520183563232
    8. '>' → logprob: -4.698520183563232
    9. '        ' → logprob: -5.323520183563232
    10. '                ' → logprob: -5.323520183563232

Token 207: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023246755823493004
    2. ' i' → logprob: -3.7732467651367188
    3. '(i' → logprob: -14.398246765136719
    4. ' (' → logprob: -14.898246765136719
    5. '	i' → logprob: -15.398246765136719
    6. '   ' → logprob: -16.14824676513672
    7. '(' → logprob: -17.39824676513672
    8. ' ' → logprob: -17.52324676513672
    9. '  ' → logprob: -18.14824676513672
    10. '```' → logprob: -18.39824676513672

Token 208: ' &' (ID: 827)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011926493607461452
    2. ' i' → logprob: -4.511926651000977
    3. '&i' → logprob: -7.386926651000977
    4. '&' → logprob: -8.386926651000977
    5. '(i' → logprob: -10.761926651000977
    6. ' &' → logprob: -12.011926651000977
    7. '	i' → logprob: -13.886926651000977
    8. ' (' → logprob: -14.136926651000977
    9. ' ' → logprob: -14.511926651000977
    10. '&amp' → logprob: -15.136926651000977

Token 209: ' (-' (ID: 21382)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19058938324451447
    2. ' i' → logprob: -1.815589427947998
    3. '(-' → logprob: -4.815589427947998
    4. ' (-' → logprob: -6.190589427947998
    5. '(i' → logprob: -7.440589427947998
    6. '-i' → logprob: -11.19058895111084
    7. ' (' → logprob: -11.69058895111084
    8. '-' → logprob: -11.69058895111084
    9. ' ' → logprob: -12.19058895111084
    10. ' -' → logprob: -12.31558895111084

Token 210: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.65101717156358e-05
    2. ' i' → logprob: -9.250096321105957
    3. '-i' → logprob: -15.125096321105957
    4. '	i' → logprob: -17.000097274780273
    5. '(i' → logprob: -17.750097274780273
    6. '_i' → logprob: -17.750097274780273
    7. '-' → logprob: -18.500097274780273
    8. ')i' → logprob: -18.625097274780273
    9. ' ' → logprob: -19.125097274780273
    10. ' -' → logprob: -19.500097274780273

Token 211: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033077045809477568
    2. 'i' → logprob: -6.128307819366455
    3. '1' → logprob: -7.378307819366455
    4. ')i' → logprob: -8.003307342529297
    5. ' i' → logprob: -9.753307342529297
    6. ')
' → logprob: -10.253307342529297
    7. '(i' → logprob: -10.628307342529297
    8. ' )' → logprob: -11.753307342529297
    9. ';i' → logprob: -12.253307342529297
    10. ')**' → logprob: -12.253307342529297

Token 212: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3116644620895386
    2. '           ' → logprob: -1.5616644620895386
    3. '       ' → logprob: -3.311664581298828
    4. 'return' → logprob: -4.561664581298828
    5. ' return' → logprob: -4.811664581298828
    6. ' 
' → logprob: -7.311664581298828
    7. '    
' → logprob: -7.811664581298828
    8. '   ' → logprob: -7.936664581298828
    9. '               ' → logprob: -7.936664581298828
    10. '	return' → logprob: -8.061664581298828

Token 213: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5671389102935791
    2. '       ' → logprob: -1.067138910293579
    3. '           ' → logprob: -2.567138910293579
    4. ' return' → logprob: -4.692138671875
    5. '   ' → logprob: -5.942138671875
    6. '	return' → logprob: -8.317138671875
    7. '               ' → logprob: -9.942138671875
    8. '
' → logprob: -11.942138671875
    9. '	' → logprob: -12.567138671875
    10. ' ' → logprob: -13.192138671875

Token 214: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.01416350994259119
    2. ' res' → logprob: -4.264163494110107
    3. '	res' → logprob: -19.014163970947266
    4. '(res' → logprob: -20.139163970947266
    5. ' ' → logprob: -20.514163970947266
    6. '
' → logprob: -20.639163970947266
    7. '$res' → logprob: -21.139163970947266
    8. 're' → logprob: -21.514163970947266
    9. '_res' → logprob: -21.639163970947266
    10. 'resi' → logprob: -21.889163970947266

Token 215: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 216: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39512521028518677
    2. '
' → logprob: -1.145125150680542
    3. '    
' → logprob: -5.395125389099121
    4. 'def' → logprob: -5.770125389099121
    5. '        
' → logprob: -8.520125389099121
    6. '```' → logprob: -8.645125389099121
    7. ' def' → logprob: -9.020125389099121
    8. '<|end|>' → logprob: -11.145125389099121
    9. '

' → logprob: -11.270125389099121
    10. '            
' → logprob: -11.520125389099121

Token 217: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0018228584667667747
    2. '   ' → logprob: -6.7518229484558105
    3. ' def' → logprob: -7.6268229484558105
    4. '
' → logprob: -8.876822471618652
    5. '	def' → logprob: -11.251822471618652
    6. '    
' → logprob: -12.251822471618652
    7. '        
' → logprob: -12.876822471618652
    8. '       ' → logprob: -13.376822471618652
    9. '

' → logprob: -13.626822471618652
    10. ' ' → logprob: -13.626822471618652

Token 218: ' kth' (ID: 195512)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08539837598800659
    2. 'query' → logprob: -2.5853984355926514
    3. ' range' → logprob: -5.460398197174072
    4. ' query' → logprob: -6.710398197174072
    5. 'find' → logprob: -7.460398197174072
    6. 'build' → logprob: -8.96039867401123
    7. 'k' → logprob: -9.71039867401123
    8. 'update' → logprob: -9.71039867401123
    9. 'reset' → logprob: -10.08539867401123
    10. ' find' → logprob: -10.21039867401123

Token 219: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16884182393550873
    2. '(' → logprob: -1.91884183883667
    3. '_element' → logprob: -5.54384183883667
    4. ' (' → logprob: -6.29384183883667
    5. '_' → logprob: -6.66884183883667
    6. '(_' → logprob: -8.043841361999512
    7. '_self' → logprob: -8.168841361999512
    8. '_value' → logprob: -9.043841361999512
    9. 'self' → logprob: -9.168841361999512
    10. '_query' → logprob: -9.668841361999512

Token 220: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2726096510887146
    2. '(self' → logprob: -1.5226097106933594
    3. '_find' → logprob: -5.022609710693359
    4. ')' → logprob: -5.397609710693359
    5. ' (' → logprob: -5.397609710693359
    6. '(
' → logprob: -6.772609710693359
    7. '_' → logprob: -7.397609710693359
    8. '(k' → logprob: -7.397609710693359
    9. ',' → logprob: -8.77260971069336
    10. 'self' → logprob: -8.77260971069336

Token 221: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.045104216784238815
    2. ' k' → logprob: -3.4201042652130127
    3. 'self' → logprob: -4.545104026794434
    4. ' self' → logprob: -7.170104026794434
    5. '   ' → logprob: -13.170104026794434
    6. '(self' → logprob: -14.170104026794434
    7. 'target' → logprob: -14.670104026794434
    8. 'x' → logprob: -14.795104026794434
    9. ' ' → logprob: -15.045104026794434
    10. ')' → logprob: -15.170104026794434

Token 222: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005317481700330973
    2. '):' → logprob: -6.130317687988281
    3. 'self' → logprob: -6.130317687988281
    4. ' ,' → logprob: -7.130317687988281
    5. '):
' → logprob: -9.255317687988281
    6. ',self' → logprob: -10.380317687988281
    7. ')' → logprob: -11.380317687988281
    8. ' self' → logprob: -12.130317687988281
    9. '(self' → logprob: -13.130317687988281
    10. '       ' → logprob: -13.755317687988281

Token 223: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4305705428123474
    2. ' i' → logprob: -1.1805706024169922
    3. 'i' → logprob: -3.430570602416992
    4. '       ' → logprob: -5.055570602416992
    5. '   ' → logprob: -6.555570602416992
    6. ' for' → logprob: -7.180570602416992
    7. '        ' → logprob: -7.555570602416992
    8. '	       ' → logprob: -8.305570602416992
    9. '            ' → logprob: -8.805570602416992
    10. '    ' → logprob: -9.305570602416992

Token 224: ' #' (ID: 1069)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3927931785583496
    2. 'pos' → logprob: -1.1427931785583496
    3. 'res' → logprob: -6.39279317855835
    4. 'index' → logprob: -6.39279317855835
    5. ' idx' → logprob: -6.64279317855835
    6. ' pos' → logprob: -7.14279317855835
    7. 'i' → logprob: -8.267793655395508
    8. 'sum' → logprob: -9.392793655395508
    9. '   ' → logprob: -9.517793655395508
    10. ' res' → logprob: -10.892793655395508

Token 225: ' Find' (ID: 9764)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1633295863866806
    2. 'idx' → logprob: -1.9133296012878418
    3. 'res' → logprob: -6.288329601287842
    4. 'i' → logprob: -7.288329601287842
    5. 'sum' → logprob: -8.163329124450684
    6. ' pos' → logprob: -9.038329124450684
    7. 'index' → logprob: -9.413329124450684
    8. ' idx' → logprob: -9.663329124450684
    9. ' res' → logprob: -12.538329124450684
    10. 'ans' → logprob: -13.288329124450684

Token 226: ' smallest' (ID: 42173)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.032481782138347626
    2. 'idx' → logprob: -3.7824816703796387
    3. ' pos' → logprob: -4.782481670379639
    4. ' idx' → logprob: -7.407481670379639
    5. 'index' → logprob: -8.782482147216797
    6. 'res' → logprob: -10.282482147216797
    7. ' res' → logprob: -11.907482147216797
    8. '   ' → logprob: -12.282482147216797
    9. ' index' → logprob: -12.282482147216797
    10. '	pos' → logprob: -12.782482147216797

Token 227: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.5749502778053284
    2. 'idx' → logprob: -1.3249502182006836
    3. 'i' → logprob: -1.9499502182006836
    4. 'pos' → logprob: -4.074950218200684
    5. ' index' → logprob: -4.824950218200684
    6. ' i' → logprob: -5.949950218200684
    7. ' idx' → logprob: -6.699950218200684
    8. 'prefix' → logprob: -9.074950218200684
    9. '   ' → logprob: -10.324950218200684
    10. ' pos' → logprob: -10.324950218200684

Token 228: ' with' (ID: 483)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5127314329147339
    2. ' with' → logprob: -1.6377314329147339
    3. 'i' → logprob: -2.3877315521240234
    4. ' idx' → logprob: -3.7627315521240234
    5. '   ' → logprob: -3.8877315521240234
    6. ' such' → logprob: -4.387731552124023
    7. 'idx' → logprob: -4.387731552124023
    8. 'pos' → logprob: -4.512731552124023
    9. ' pos' → logprob: -4.887731552124023
    10. 'with' → logprob: -5.012731552124023

Token 229: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.21738305687904358
    2. ' prefix' → logprob: -1.9673830270767212
    3. 'sum' → logprob: -3.3423831462860107
    4. 'pos' → logprob: -5.092382907867432
    5. ' cumulative' → logprob: -5.217382907867432
    6. 'cum' → logprob: -5.717382907867432
    7. ' sum' → logprob: -6.217382907867432
    8. 'c' → logprob: -6.842382907867432
    9. 'bit' → logprob: -7.592382907867432
    10. 'a' → logprob: -7.717382907867432

Token 230: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.1936357319355011
    2. ' sum' → logprob: -1.9436357021331787
    3. '_sum' → logprob: -3.4436357021331787
    4. ' >=' → logprob: -7.693635940551758
    5. '_' → logprob: -8.193635940551758
    6. '>=' → logprob: -8.818635940551758
    7. '_s' → logprob: -11.318635940551758
    8. ' _' → logprob: -12.318635940551758
    9. 's' → logprob: -12.568635940551758
    10. ' ' → logprob: -12.693635940551758

Token 231: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.012911963276565075
    2. '>=' → logprob: -4.762911796569824
    3. ' at' → logprob: -6.012911796569824
    4. ' ' → logprob: -7.262911796569824
    5. '   ' → logprob: -7.762911796569824
    6. ' such' → logprob: -8.012911796569824
    7. ' greater' → logprob: -9.262911796569824
    8. ' i' → logprob: -10.012911796569824
    9. ' idx' → logprob: -10.387911796569824
    10. ' sum' → logprob: -10.762911796569824

Token 232: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07889242470264435
    2. ' k' → logprob: -2.578892469406128
    3. '           ' → logprob: -12.953892707824707
    4. '	k' → logprob: -16.45389175415039
    5. ' ' → logprob: -16.70389175415039
    6. '1' → logprob: -16.95389175415039
    7. '```' → logprob: -17.20389175415039
    8. '   ' → logprob: -17.57889175415039
    9. '{k' → logprob: -18.20389175415039
    10. '               ' → logprob: -18.32889175415039

Token 233: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01811763271689415
    2. ' def' → logprob: -5.143117427825928
    3. ' i' → logprob: -5.393117427825928
    4. 'def' → logprob: -5.643117427825928
    5. 'i' → logprob: -6.893117427825928
    6. 'pos' → logprob: -6.893117427825928
    7. '       ' → logprob: -7.768117427825928
    8. 'idx' → logprob: -7.768117427825928
    9. ' idx' → logprob: -7.768117427825928
    10. ' pos' → logprob: -8.143117904663086

Token 234: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03900260478258133
    2. ' i' → logprob: -3.7890026569366455
    3. ' def' → logprob: -5.289002418518066
    4. 'i' → logprob: -6.039002418518066
    5. ' idx' → logprob: -6.289002418518066
    6. 'pos' → logprob: -6.414002418518066
    7. 'idx' → logprob: -6.789002418518066
    8. ' pos' → logprob: -6.789002418518066
    9. '       ' → logprob: -7.414002418518066
    10. 'def' → logprob: -7.539002418518066

Token 235: ' pos' (ID: 1253)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.16645553708076477
    2. 'pos' (adapté à ' pos') → logprob: -1.9164555072784424
    3. ' idx' → logprob: -5.6664557456970215
    4. 'index' → logprob: -6.1664557456970215
    5. ' pos' → logprob: -8.041455268859863
    6. 'i' → logprob: -8.916455268859863
    7. 'res' → logprob: -9.791455268859863
    8. '   ' → logprob: -9.791455268859863
    9. 'sum' → logprob: -10.166455268859863
    10. 'def' → logprob: -11.041455268859863

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141392946243286
    2. '=' → logprob: -1.701413869857788
    3. ' ' → logprob: -14.326414108276367
    4. ',' → logprob: -17.951414108276367
    5. ' ,' → logprob: -18.201414108276367
    6. '   ' → logprob: -18.951414108276367
    7. ' +=' → logprob: -19.576414108276367
    8. '0' → logprob: -19.826414108276367
    9. ' ' → logprob: -19.826414108276367
    10. '    ' → logprob: -20.326414108276367

Token 237: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '   ' → logprob: -19.751171112060547
    4. '    ' → logprob: -21.001171112060547
    5. '  ' → logprob: -21.126171112060547
    6. '۰' → logprob: -21.376171112060547
    7. '```' → logprob: -22.001171112060547
    8. '000' → logprob: -22.501171112060547
    9. 'zero' → logprob: -22.626171112060547
    10. ' ' → logprob: -23.001171112060547

Token 238: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '۰' → logprob: -23.0
    4. '   ' → logprob: -23.375
    5. '000' → logprob: -23.875
    6. 'zero' → logprob: -24.25
    7. '０' → logprob: -24.375
    8. '00' → logprob: -24.75
    9. '  ' → logprob: -26.25
    10. '٠' → logprob: -26.375

Token 239: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.104839988052845
    2. 'bit' → logprob: -2.729840040206909
    3. ' bit' → logprob: -3.479840040206909
    4. ' for' → logprob: -6.60483980178833
    5. 'for' → logprob: -6.97983980178833
    6. '   ' → logprob: -7.72983980178833
    7. '
' → logprob: -8.729840278625488
    8. 'mask' → logprob: -8.979840278625488
    9. 'bits' → logprob: -9.354840278625488
    10. ' bits' → logprob: -9.979840278625488

Token 240: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004481273703277111
    2. ' bit' → logprob: -5.879481315612793
    3. 'bit' → logprob: -7.129481315612793
    4. '   ' → logprob: -8.254481315612793
    5. '		' → logprob: -9.379481315612793
    6. ' for' → logprob: -9.379481315612793
    7. ' and' → logprob: -9.629481315612793
    8. 'b' → logprob: -10.004481315612793
    9. '1' → logprob: -10.129481315612793
    10. 'mask' → logprob: -10.379481315612793

Token 241: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.005549154710024595
    2. ' bit' → logprob: -5.88054895401001
    3. 'i' → logprob: -6.38054895401001
    4. 'for' → logprob: -7.13054895401001
    5. '   ' → logprob: -8.755549430847168
    6. 'mask' → logprob: -10.255549430847168
    7. ' i' → logprob: -11.255549430847168
    8. ' for' → logprob: -11.755549430847168
    9. 'bits' → logprob: -11.880549430847168
    10. '(bit' → logprob: -12.130549430847168

Token 242: '_mask' (ID: 21732)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.57681804895401
    2. '_mask' → logprob: -0.82681804895401
    3. ' =' → logprob: -8.076818466186523
    4. '=' → logprob: -8.326818466186523
    5. 'Mask' → logprob: -8.826818466186523
    6. ' mask' → logprob: -9.201818466186523
    7. 'm' → logprob: -11.076818466186523
    8. '_MASK' → logprob: -11.326818466186523
    9. 'MASK' → logprob: -11.701818466186523
    10. '	mask' → logprob: -11.701818466186523

Token 243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931474208831787
    2. ' =' → logprob: -0.6931474208831787
    3. ' ' → logprob: -16.193147659301758
    4. '=self' → logprob: -17.068147659301758
    5. '           ' → logprob: -17.318147659301758
    6. '   ' → logprob: -17.568147659301758
    7. '=
' → logprob: -18.568147659301758
    8. '=int' → logprob: -18.693147659301758
    9. '    ' → logprob: -19.193147659301758
    10. '       ' → logprob: -19.318147659301758

Token 244: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -12.375008583068848
    3. 'self' → logprob: -12.375008583068848
    4. '(' → logprob: -17.87500762939453
    5. ' self' → logprob: -18.75000762939453
    6. '   ' → logprob: -19.12500762939453
    7. '(self' → logprob: -21.50000762939453
    8. '
' → logprob: -23.25000762939453
    9. '１' → logprob: -23.25000762939453
    10. '  ' → logprob: -23.62500762939453

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. 'self' → logprob: -12.75000286102295
    3. ' ' → logprob: -14.87500286102295
    4. '(' → logprob: -16.750003814697266
    5. ' self' → logprob: -21.000003814697266
    6. '
' → logprob: -21.125003814697266
    7. '   ' → logprob: -21.125003814697266
    8. '(self' → logprob: -21.250003814697266
    9. '{' → logprob: -22.375003814697266
    10. '１' → logprob: -23.250003814697266

Token 246: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.10115531831979752
    2. ' <<' → logprob: -2.3511552810668945
    3. '<<(' → logprob: -6.9761552810668945
    4. '<' → logprob: -11.976155281066895
    5. ' <<=' → logprob: -12.101155281066895
    6. '
' → logprob: -13.851155281066895
    7. '<<<' → logprob: -13.976155281066895
    8. '           ' → logprob: -15.601155281066895
    9. '<<"' → logprob: -15.976155281066895
    10. '()<<' → logprob: -16.47615623474121

Token 247: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.8312570318812504e-05
    2. 'self' → logprob: -11.000018119812012
    3. '(len' → logprob: -13.750018119812012
    4. '(' → logprob: -15.750018119812012
    5. '((' → logprob: -16.250019073486328
    6. '(this' → logprob: -16.250019073486328
    7. '(pos' → logprob: -17.250019073486328
    8. '(max' → logprob: -17.500019073486328
    9. ' (' → logprob: -17.875019073486328
    10. '(se' → logprob: -18.000019073486328

Token 248: 'self' (ID: 1156)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12693524360656738
    2. 'self' → logprob: -2.1269352436065674
    3. ' self' → logprob: -12.001935005187988
    4. ' (' → logprob: -14.876935005187988
    5. 'len' → logprob: -15.126935005187988
    6. '[self' → logprob: -15.376935005187988
    7. '(len' → logprob: -16.126935958862305
    8. '
' → logprob: -16.626935958862305
    9. '(' → logprob: -16.626935958862305
    10. '((' → logprob: -17.501935958862305

Token 249: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.3927651047706604
    2. 'self' → logprob: -1.1427650451660156
    3. '(self' → logprob: -5.517765045166016
    4. 'size' → logprob: -7.267765045166016
    5. '
' → logprob: -7.767765045166016
    6. ' self' → logprob: -8.267765045166016
    7. '.self' → logprob: -9.517765045166016
    8. ' ' → logprob: -9.642765045166016
    9. '.' → logprob: -9.892765045166016
    10. ' (' → logprob: -10.142765045166016

Token 250: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.0005641150055453181
    2. '.' → logprob: -7.500564098358154
    3. ' .' → logprob: -11.750564575195312
    4. ').' → logprob: -13.125564575195312
    5. '.bits' → logprob: -15.125564575195312
    6. '.size' → logprob: -15.250564575195312
    7. '.
' → logprob: -16.000564575195312
    8. '.__' → logprob: -16.125564575195312
    9. '-' → logprob: -16.375564575195312
    10. 'bit' → logprob: -16.500564575195312

Token 251: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0002644351334311068
    2. 'length' → logprob: -8.250264167785645
    3. '_LENGTH' → logprob: -14.000264167785645
    4. 'ength' → logprob: -14.125264167785645
    5. 'len' → logprob: -14.500264167785645
    6. '```' → logprob: -15.125264167785645
    7. '   ' → logprob: -15.375264167785645
    8. 'l' → logprob: -15.625264167785645
    9. '
' → logprob: -15.750264167785645
    10. 'leng' → logprob: -16.00026512145996

Token 252: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.059912391006946564
    2. '-' → logprob: -3.4349124431610107
    3. '()-' → logprob: -3.6849124431610107
    4. ')' → logprob: -7.934912204742432
    5. ' -' → logprob: -8.05991268157959
    6. ' ()' → logprob: -9.43491268157959
    7. '0' → logprob: -10.68491268157959
    8. ' ' → logprob: -10.68491268157959
    9. '())' → logprob: -10.80991268157959
    10. '   ' → logprob: -14.18491268157959

Token 253: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005671137478202581
    2. '-' → logprob: -6.25567102432251
    3. '       ' → logprob: -7.50567102432251
    4. ' -' → logprob: -7.50567102432251
    5. '<|end|>' → logprob: -7.75567102432251
    6. '   ' → logprob: -8.130671501159668
    7. 'while' → logprob: -8.380671501159668
    8. '>>' → logprob: -8.505671501159668
    9. '          ' → logprob: -8.630671501159668
    10. '		' → logprob: -8.630671501159668

Token 254: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.23375171422958374
    2. ' while' → logprob: -1.8587517738342285
    3. '           ' → logprob: -3.3587517738342285
    4. '>' → logprob: -5.1087517738342285
    5. '>>' → logprob: -6.3587517738342285
    6. 'pos' → logprob: -6.4837517738342285
    7. 'bit' → logprob: -6.8587517738342285
    8. '
' → logprob: -6.9837517738342285
    9. ' ' → logprob: -7.1087517738342285
    10. '       ' → logprob: -7.2337517738342285

Token 255: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.004078401252627373
    2. ' bit' → logprob: -5.504078388214111
    3. '(bit' → logprob: -16.879077911376953
    4. 'pos' → logprob: -18.379077911376953
    5. ' ' → logprob: -21.629077911376953
    6. '   ' → logprob: -22.004077911376953
    7. 'bits' → logprob: -22.129077911376953
    8. 'bitr' → logprob: -22.129077911376953
    9. '_bit' → logprob: -23.004077911376953
    10. '.bit' → logprob: -23.254077911376953

Token 256: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -3.464347173576243e-05
    2. 'mask' → logprob: -10.50003433227539
    3. '_MASK' → logprob: -12.75003433227539
    4. '_' → logprob: -13.87503433227539
    5. '_bit' → logprob: -14.00003433227539
    6. '_masks' → logprob: -14.37503433227539
    7. '>' → logprob: -14.50003433227539
    8. '_shift' → logprob: -15.50003433227539
    9. '           ' → logprob: -15.62503433227539
    10. '>>' → logprob: -16.25003433227539

Token 257: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0012027313932776451
    2. '!=' → logprob: -7.501202583312988
    3. ' >' → logprob: -8.626202583312988
    4. 'and' → logprob: -8.626202583312988
    5. ':' → logprob: -9.501202583312988
    6. '&gt' → logprob: -9.751202583312988
    7. '   ' → logprob: -10.501202583312988
    8. '">' → logprob: -10.501202583312988
    9. ':
' → logprob: -10.751202583312988
    10. ' and' → logprob: -11.501202583312988

Token 258: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00040219054790213704
    2. '=' → logprob: -8.250402450561523
    3. ' ' → logprob: -8.875402450561523
    4. '>' → logprob: -13.750402450561523
    5. '           ' → logprob: -17.875402450561523
    6. '   ' → logprob: -19.125402450561523
    7. ' =' → logprob: -19.500402450561523
    8. '/' → logprob: -19.875402450561523
    9. '>
' → logprob: -20.000402450561523
    10. '```' → logprob: -20.125402450561523

Token 259: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.250005722045898
    3. '=' → logprob: -13.875005722045898
    4. '>' → logprob: -19.8750057220459
    5. '[' → logprob: -20.7500057220459
    6. '   ' → logprob: -21.0000057220459
    7. 'self' → logprob: -21.2500057220459
    8. '```' → logprob: -21.3750057220459
    9. '۰' → logprob: -21.7500057220459
    10. ' =' → logprob: -22.2500057220459

Token 260: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2526490092277527
    2. ':
' → logprob: -1.5026490688323975
    3. '<|end|>' → logprob: -8.502649307250977
    4. ' and' → logprob: -8.752649307250977
    5. ',' → logprob: -9.127649307250977
    6. '):
' → logprob: -9.627649307250977
    7. '               ' → logprob: -9.877649307250977
    8. '           ' → logprob: -10.002649307250977
    9. ' :' → logprob: -10.502649307250977
    10. ' :
' → logprob: -10.627649307250977

Token 261: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003107368713244796
    2. ' if' → logprob: -6.00310754776001
    3. '           ' → logprob: -7.87810754776001
    4. '            ' → logprob: -9.253107070922852
    5. '                ' → logprob: -9.753107070922852
    6. '	           ' → logprob: -10.378107070922852
    7. '   ' → logprob: -10.878107070922852
    8. '              ' → logprob: -11.378107070922852
    9. '<|end|>' → logprob: -11.753107070922852
    10. 'if' → logprob: -11.878107070922852

Token 262: ' next' (ID: 2613)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.017630279064178467
    2. 'if' → logprob: -4.642630100250244
    3. '               ' → logprob: -4.892630100250244
    4. '                   ' → logprob: -9.142630577087402
    5. '                ' → logprob: -9.767630577087402
    6. ' next' → logprob: -9.892630577087402
    7. '           ' → logprob: -10.142630577087402
    8. ' new' → logprob: -10.892630577087402
    9. ' ' → logprob: -11.392630577087402
    10. 'next' (adapté à ' next') → logprob: -11.392630577087402

Token 263: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.03838237747550011
    2. 'pos' → logprob: -3.2883822917938232
    3. 'Pos' → logprob: -8.163382530212402
    4. '=' → logprob: -10.538382530212402
    5. '	pos' → logprob: -10.913382530212402
    6. '_' → logprob: -11.913382530212402
    7. '_=' → logprob: -13.538382530212402
    8. ' pos' → logprob: -13.788382530212402
    9. ' =' → logprob: -14.538382530212402
    10. '[pos' → logprob: -14.788382530212402

Token 264: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192928314208984
    2. ' =' → logprob: -1.5019292831420898
    3. ' ' → logprob: -15.75192928314209
    4. '=int' → logprob: -18.251930236816406
    5. '＝' → logprob: -18.501930236816406
    6. '=user' → logprob: -19.376930236816406
    7. '=

' → logprob: -19.376930236816406
    8. '=}' → logprob: -19.501930236816406
    9. '=open' → logprob: -19.626930236816406
    10. '```' → logprob: -19.626930236816406

Token 265: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3868711292743683
    2. ' pos' → logprob: -1.136871099472046
    3. '	pos' → logprob: -16.636871337890625
    4. '(pos' → logprob: -18.011871337890625
    5. '_pos' → logprob: -20.761871337890625
    6. '[pos' → logprob: -20.886871337890625
    7. ',pos' → logprob: -21.761871337890625
    8. 'Pos' → logprob: -22.136871337890625
    9. '.pos' → logprob: -22.261871337890625
    10. ' posit' → logprob: -22.386871337890625

Token 266: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.18079622089862823
    2. '+' → logprob: -1.8057962656021118
    3. '|' → logprob: -7.555796146392822
    4. ' |' → logprob: -7.555796146392822
    5. '+b' → logprob: -13.80579662322998
    6. '+x' → logprob: -14.30579662322998
    7. '+i' → logprob: -14.30579662322998
    8. ' +=' → logprob: -14.68079662322998
    9. '+=' → logprob: -15.18079662322998
    10. '+self' → logprob: -15.18079662322998

Token 267: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -1.306760805164231e-05
    2. ' bit' → logprob: -11.25001335144043
    3. '(bit' → logprob: -18.75001335144043
    4. 'bitr' → logprob: -23.50001335144043
    5. 'bits' → logprob: -25.00001335144043
    6. '_bit' → logprob: -25.12501335144043
    7. ' ' → logprob: -25.25001335144043
    8. '   ' → logprob: -25.50001335144043
    9. ' бит' → logprob: -25.75001335144043
    10. 'bin' → logprob: -26.12501335144043

Token 268: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.00020246754866093397
    2. '_bit' → logprob: -9.250202178955078
    3. 't' → logprob: -10.625202178955078
    4. '_MASK' → logprob: -10.750202178955078
    5. 'mask' → logprob: -10.875202178955078
    6. 'w' → logprob: -11.750202178955078
    7. '_lock' → logprob: -12.250202178955078
    8. 'nt' → logprob: -13.125202178955078
    9. '_w' → logprob: -13.125202178955078
    10. 'and' → logprob: -13.375202178955078

Token 269: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6414931416511536
    2. '               ' → logprob: -0.8914931416511536
    3. '<|end|>' → logprob: -2.891493082046509
    4. ' if' → logprob: -6.016493320465088
    5. '           ' → logprob: -6.266493320465088
    6. ' 
' → logprob: -6.891493320465088
    7. 'if' → logprob: -7.641493320465088
    8. '                ' → logprob: -7.641493320465088
    9. '<|end|>' → logprob: -7.641493320465088
    10. '                
' → logprob: -7.891493320465088

Token 270: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 271: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1911316215991974
    2. 'if' (adapté à ' if') → logprob: -2.441131591796875
    3. '               ' → logprob: -2.566131591796875
    4. '           ' → logprob: -5.441131591796875
    5. ' ' → logprob: -6.191131591796875
    6. '                ' → logprob: -7.066131591796875
    7. '            ' → logprob: -7.316131591796875
    8. '<|end|>' → logprob: -7.691131591796875
    9. 'If' → logprob: -7.941131591796875
    10. '                   ' → logprob: -8.441131591796875

Token 272: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.6931508183479309
    2. 'next' → logprob: -0.6931508183479309
    3. '(next' → logprob: -12.943150520324707
    4. '	next' → logprob: -13.943150520324707
    5. '[next' → logprob: -15.443150520324707
    6. '_next' → logprob: -17.693151473999023
    7. '.next' → logprob: -17.818151473999023
    8. 'Next' → logprob: -19.568151473999023
    9. ',next' → logprob: -19.568151473999023
    10. ' nex' → logprob: -19.943151473999023

Token 273: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00030578780570067465
    2. '_mask' → logprob: -8.125306129455566
    3. 'pos' → logprob: -11.625306129455566
    4. 'Pos' → logprob: -14.875306129455566
    5. '_positions' → logprob: -16.37530517578125
    6. 'next' → logprob: -16.50030517578125
    7. '_bit' → logprob: -16.75030517578125
    8. 'mask' → logprob: -17.00030517578125
    9. '_next' → logprob: -17.50030517578125
    10. '[pos' → logprob: -17.75030517578125

Token 274: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.06196802109479904
    2. '<=' → logprob: -2.8119680881500244
    3. '<|end|>' → logprob: -16.436967849731445
    4. ' ' → logprob: -16.811967849731445
    5. 'le' → logprob: -16.811967849731445
    6. ')<=' → logprob: -17.061967849731445
    7. ' <' → logprob: -17.436967849731445
    8. ']<=' → logprob: -17.436967849731445
    9. ' ≤' → logprob: -17.811967849731445
    10. '```' → logprob: -17.811967849731445

Token 275: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029750484973192215
    2. ' self' → logprob: -3.5297505855560303
    3. '(self' → logprob: -18.15475082397461
    4. '	self' → logprob: -18.15475082397461
    5. '[self' → logprob: -18.27975082397461
    6. '=self' → logprob: -18.40475082397461
    7. '           ' → logprob: -18.77975082397461
    8. '
' → logprob: -19.52975082397461
    9. ' ' → logprob: -19.90475082397461
    10. '   ' → logprob: -20.15475082397461

Token 276: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -7.517272024415433e-05
    2. 'size' → logprob: -9.500075340270996
    3. ' size' → logprob: -15.250075340270996
    4. ':size' → logprob: -19.00007438659668
    5. '<size' → logprob: -19.00007438659668
    6. '	size' → logprob: -19.37507438659668
    7. ' .' → logprob: -20.62507438659668
    8. '.' → logprob: -21.00007438659668
    9. ',size' → logprob: -21.37507438659668
    10. '_size' → logprob: -21.50007438659668

Token 277: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006721995305269957
    2. 'and' → logprob: -5.0067219734191895
    3. '               ' → logprob: -12.131722450256348
    4. '           ' → logprob: -14.756722450256348
    5. '                ' → logprob: -15.381722450256348
    6. '	and' → logprob: -15.381722450256348
    7. '            ' → logprob: -15.881722450256348
    8. ' ' → logprob: -16.13172149658203
    9. '                   ' → logprob: -16.25672149658203
    10. '              ' → logprob: -16.25672149658203

Token 278: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0110511165112257
    2. ' self' → logprob: -4.511051177978516
    3. '               ' → logprob: -13.011051177978516
    4. '           ' → logprob: -14.386051177978516
    5. '(self' → logprob: -15.261051177978516
    6. '   ' → logprob: -16.511051177978516
    7. '                   ' → logprob: -16.636051177978516
    8. '	self' → logprob: -16.886051177978516
    9. '[self' → logprob: -17.886051177978516
    10. ' ' → logprob: -18.011051177978516

Token 279: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.0010516269830986857
    2. 'tree' → logprob: -6.876051425933838
    3. '	tree' → logprob: -11.876051902770996
    4. 'Fen' → logprob: -12.251051902770996
    5. ' tree' → logprob: -13.126051902770996
    6. ' .' → logprob: -13.376051902770996
    7. '.' → logprob: -13.751051902770996
    8. 'fen' → logprob: -14.501051902770996
    9. '.f' → logprob: -15.001051902770996
    10. '._' → logprob: -15.126051902770996

Token 280: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: 0.0
    2. '[' → logprob: -19.25
    3. '[
' → logprob: -21.125
    4. 'next' → logprob: -21.375
    5. '(next' → logprob: -21.75
    6. ' [' → logprob: -21.875
    7. '	next' → logprob: -22.25
    8. '[now' → logprob: -22.375
    9. '[last' → logprob: -22.5
    10. '   ' → logprob: -22.5

Token 281: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.47409409284591675
    2. '_mask' → logprob: -0.9740940928459167
    3. 'pos' → logprob: -11.59909439086914
    4. 'Pos' → logprob: -12.84909439086914
    5. '_bit' → logprob: -13.47409439086914
    6. 'mask' → logprob: -13.97409439086914
    7. '_MASK' → logprob: -14.09909439086914
    8. 'Mask' → logprob: -14.72409439086914
    9. '_masks' → logprob: -14.84909439086914
    10. '_positions' → logprob: -15.47409439086914

Token 282: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14272962510585785
    2. '<' → logprob: -2.0177295207977295
    3. ' ' → logprob: -11.642729759216309
    4. '[' → logprob: -11.767729759216309
    5. '<p' → logprob: -11.767729759216309
    6. '<th' → logprob: -12.142729759216309
    7. ']' → logprob: -12.392729759216309
    8. '<int' → logprob: -12.767729759216309
    9. '<class' → logprob: -13.017729759216309
    10. '<v' → logprob: -13.142729759216309

Token 283: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.313273549079895
    2. ' <' → logprob: -1.313273549079895
    3. '<int' → logprob: -12.438273429870605
    4. '[' → logprob: -13.563273429870605
    5. '<p' → logprob: -13.938273429870605
    6. '<v' → logprob: -14.188273429870605
    7. '<th' → logprob: -14.438273429870605
    8. '<class' → logprob: -14.563273429870605
    9. '<w' → logprob: -14.813273429870605
    10. '<n' → logprob: -14.813273429870605

Token 284: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.006715370807796717
    2. ' k' → logprob: -5.006715297698975
    3. '	k' → logprob: -18.006715774536133
    4. '
' → logprob: -18.631715774536133
    5. '[k' → logprob: -21.756715774536133
    6. '=k' → logprob: -21.881715774536133
    7. ' к' → logprob: -22.006715774536133
    8. ' ' → logprob: -22.131715774536133
    9. '{k' → logprob: -22.506715774536133
    10. '```' → logprob: -22.881715774536133

Token 285: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.023421447724103928
    2. ':' → logprob: -3.7734215259552
    3. '               ' → logprob: -9.523421287536621
    4. ' :
' → logprob: -10.148421287536621
    5. '):
' → logprob: -10.523421287536621
    6. '                   ' → logprob: -10.898421287536621
    7. ':

' → logprob: -11.773421287536621
    8. ':k' → logprob: -12.648421287536621
    9. ':
' → logprob: -12.898421287536621
    10. ',' → logprob: -13.398421287536621

Token 286: '                   ' (ID: 699)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3443623483181
    2. '                   ' → logprob: -1.5943623781204224
    3. ':' → logprob: -3.719362258911133
    4. '               ' → logprob: -3.969362258911133
    5. ' k' → logprob: -3.969362258911133
    6. ' :
' → logprob: -4.094362258911133
    7. 'k' → logprob: -5.094362258911133
    8. ':k' → logprob: -6.844362258911133
    9. '):
' → logprob: -7.344362258911133
    10. ' :' → logprob: -7.719362258911133

Token 287: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.0384366400539875
    2. ' k' → logprob: -3.2884366512298584
    3. '                   ' → logprob: -7.913436412811279
    4. '                       ' → logprob: -11.163436889648438
    5. '   ' → logprob: -12.163436889648438
    6. '               ' → logprob: -12.663436889648438
    7. '	k' → logprob: -12.788436889648438
    8. ' ' → logprob: -13.163436889648438
    9. '                    ' → logprob: -14.288436889648438
    10. '
' → logprob: -14.538436889648438

Token 288: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.025134271010756493
    2. ' -=' → logprob: -3.775134325027466
    3. '-' → logprob: -6.275134086608887
    4. '=' → logprob: -12.525134086608887
    5. ' -' → logprob: -14.400134086608887
    6. '           ' → logprob: -16.400135040283203
    7. '   ' → logprob: -16.525135040283203
    8. '```' → logprob: -17.150135040283203
    9. '>' → logprob: -17.650135040283203
    10. '               ' → logprob: -18.025135040283203

Token 289: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.5597102396423e-05
    2. ' self' → logprob: -10.250035285949707
    3. '                   ' → logprob: -16.250036239624023
    4. '               ' → logprob: -19.875036239624023
    5. '(self' → logprob: -20.750036239624023
    6. '[self' → logprob: -20.875036239624023
    7. '	self' → logprob: -21.500036239624023
    8. '                       ' → logprob: -21.750036239624023
    9. '           ' → logprob: -22.500036239624023
    10. '
' → logprob: -23.250036239624023

Token 290: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -2.339278580620885e-06
    2. 'tree' → logprob: -13.250001907348633
    3. '	tree' → logprob: -14.625001907348633
    4. '.' → logprob: -18.500001907348633
    5. '.heap' → logprob: -19.625001907348633
    6. '(tree' → logprob: -20.000001907348633
    7. '[' → logprob: -20.250001907348633
    8. '_tree' → logprob: -20.250001907348633
    9. '.thread' → logprob: -20.375001907348633
    10. '.stack' → logprob: -20.500001907348633

Token 291: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: 0.0
    2. 'next' → logprob: -19.625
    3. '(next' → logprob: -20.625
    4. '[' → logprob: -20.875
    5. '[new' → logprob: -21.75
    6. ',next' → logprob: -22.25
    7. '[now' → logprob: -22.25
    8. '[
' → logprob: -22.875
    9. '[self' → logprob: -23.25
    10. '	next' → logprob: -23.25

Token 292: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0006087943911552429
    2. 'pos' → logprob: -7.625608921051025
    3. '_mask' → logprob: -9.125608444213867
    4. '[pos' → logprob: -11.875608444213867
    5. 'Pos' → logprob: -13.250608444213867
    6. '[next' → logprob: -14.500608444213867
    7. 'next' → logprob: -14.625608444213867
    8. '_next' → logprob: -14.875608444213867
    9. '	pos' → logprob: -15.000608444213867
    10. ']' → logprob: -15.250608444213867

Token 293: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5823008418083191
    2. '
' → logprob: -0.8323008418083191
    3. '               ' → logprob: -5.332300662994385
    4. ')
' → logprob: -7.457300662994385
    5. '           ' → logprob: -7.582300662994385
    6. ' 
' → logprob: -9.332301139831543
    7. '<|end|>' → logprob: -9.582301139831543
    8. '                  ' → logprob: -10.332301139831543
    9. '                       ' → logprob: -10.707301139831543
    10. ')' → logprob: -10.707301139831543

Token 294: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -7.822646693966817e-06
    2. '               ' → logprob: -11.875007629394531
    3. '           ' → logprob: -15.125007629394531
    4. '                  ' → logprob: -15.875007629394531
    5. '```' → logprob: -15.875007629394531
    6. '                       ' → logprob: -16.25000762939453
    7. 'pos' → logprob: -16.50000762939453
    8. '   ' → logprob: -17.37500762939453
    9. '				' → logprob: -17.37500762939453
    10. ',' → logprob: -17.50000762939453

Token 295: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.029751179739832878
    2. ' pos' → logprob: -3.5297510623931885
    3. '                   ' → logprob: -14.27975082397461
    4. '               ' → logprob: -17.90475082397461
    5. 'bit' → logprob: -17.90475082397461
    6. '	pos' → logprob: -18.15475082397461
    7. '```' → logprob: -18.52975082397461
    8. ',pos' → logprob: -18.77975082397461
    9. '           ' → logprob: -20.02975082397461
    10. '_pos' → logprob: -20.02975082397461

Token 296: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05044523626565933
    2. '=' → logprob: -3.050445318222046
    3. ' +=' → logprob: -6.300445079803467
    4. '+=' → logprob: -10.800445556640625
    5. ' ' → logprob: -16.050445556640625
    6. ' |=' → logprob: -16.175445556640625
    7. '+' → logprob: -18.550445556640625
    8. '.=' → logprob: -18.800445556640625
    9. ' +' → logprob: -19.050445556640625
    10. ' <<=' → logprob: -19.175445556640625

Token 297: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.38687145709991455
    2. ' next' → logprob: -1.1368714570999146
    3. '[next' → logprob: -15.261871337890625
    4. '	next' → logprob: -16.636871337890625
    5. '(next' → logprob: -16.886871337890625
    6. '.next' → logprob: -18.136871337890625
    7. '_next' → logprob: -19.136871337890625
    8. ',next' → logprob: -20.386871337890625
    9. 'Next' → logprob: -21.136871337890625
    10. ' ' → logprob: -22.636871337890625

Token 298: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -4.1080467781284824e-05
    2. 'pos' → logprob: -10.125041007995605
    3. '_' → logprob: -15.375041007995605
    4. 'Pos' → logprob: -15.625041007995605
    5. 's' → logprob: -15.875041007995605
    6. '[pos' → logprob: -16.250041961669922
    7. '+' → logprob: -17.000041961669922
    8. '_POS' → logprob: -17.000041961669922
    9. '_p' → logprob: -17.125041961669922
    10. ' _' → logprob: -17.250041961669922

Token 299: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.2855416066013277e-05
    2. '           ' → logprob: -10.750032424926758
    3. '
' → logprob: -12.750032424926758
    4. '       ' → logprob: -13.000032424926758
    5. '                   ' → logprob: -13.125032424926758
    6. '              ' → logprob: -14.000032424926758
    7. '                ' → logprob: -14.125032424926758
    8. '                
' → logprob: -14.250032424926758
    9. '```' → logprob: -14.250032424926758
    10. '   ' → logprob: -15.000032424926758

Token 300: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000548387470189482
    2. '```' → logprob: -7.750548362731934
    3. '                   ' → logprob: -9.750548362731934
    4. '           ' → logprob: -10.375548362731934
    5. '
' → logprob: -12.500548362731934
    6. '[' → logprob: -12.625548362731934
    7. '                ' → logprob: -12.625548362731934
    8. '              ' → logprob: -12.625548362731934
    9. '                
' → logprob: -12.750548362731934
    10. '       ' → logprob: -13.000548362731934

Token 301: ' bit' (ID: 3546)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6523600220680237
    2. ' bit' → logprob: -0.7773600220680237
    3. 'bit' (adapté à ' bit') → logprob: -4.027359962463379
    4. '           ' → logprob: -7.277359962463379
    5. '```' → logprob: -7.402359962463379
    6. '       ' → logprob: -9.152359962463379
    7. '   ' → logprob: -9.527359962463379
    8. ' ' → logprob: -9.902359962463379
    9. '                
' → logprob: -10.027359962463379
    10. '(bit' → logprob: -10.152359962463379

Token 302: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -4.320199877838604e-07
    2. '_MASK' → logprob: -15.625
    3. 'mask' → logprob: -16.5
    4. '_bit' → logprob: -16.75
    5. '_map' → logprob: -18.25
    6. '_masks' → logprob: -18.5
    7. '_' → logprob: -19.25
    8. '_shift' → logprob: -19.5
    9. ' _' → logprob: -20.625
    10. '_flag' → logprob: -21.0

Token 303: ' >>=' (ID: 81952)
  Prédit: ' >>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>=' → logprob: -0.1840071976184845
    2. '>>' → logprob: -1.809007167816162
    3. '//=' → logprob: -6.059007167816162
    4. ' //' → logprob: -6.309007167816162
    5. '=' → logprob: -9.55900764465332
    6. '>' → logprob: -11.55900764465332
    7. '   ' → logprob: -11.93400764465332
    8. ' ' → logprob: -12.80900764465332
    9. ' >>' → logprob: -13.55900764465332
    10. '  ' → logprob: -13.93400764465332

Token 304: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -19.500001907348633
    4. '   ' → logprob: -21.000001907348633
    5. '0' → logprob: -21.375001907348633
    6. '2' → logprob: -22.125001907348633
    7. '۱' → logprob: -22.312501907348633
    8. '01' → logprob: -22.812501907348633
    9. '１' → logprob: -22.937501907348633
    10. '' → logprob: -23.062501907348633

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '```' → logprob: -20.25
    4. '１' → logprob: -21.875
    5. '۱' → logprob: -21.875
    6. '0' → logprob: -22.25
    7. '   ' → logprob: -22.375
    8. '2' → logprob: -22.75
    9. '' → logprob: -22.75
    10. '01' → logprob: -23.0625

Token 306: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002752790169324726
    2. '
' → logprob: -9.125275611877441
    3. ' return' → logprob: -9.125275611877441
    4. 'return' → logprob: -10.125275611877441
    5. '       ' → logprob: -12.125275611877441
    6. ',' → logprob: -12.500275611877441
    7. '<|end|>' → logprob: -12.625275611877441
    8. '0' → logprob: -13.500275611877441
    9. '          ' → logprob: -14.500275611877441
    10. '   ' → logprob: -15.000275611877441

Token 307: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00023321842309087515
    2. 'return' → logprob: -8.62523365020752
    3. ' return' → logprob: -10.00023365020752
    4. '       ' → logprob: -12.12523365020752
    5. '
' → logprob: -13.87523365020752
    6. '0' → logprob: -14.00023365020752
    7. '          ' → logprob: -14.87523365020752
    8. '   ' → logprob: -16.000232696533203
    9. '		' → logprob: -16.125232696533203
    10. '<|end|>' → logprob: -16.250232696533203

Token 308: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18387490510940552
    2. 'return' (adapté à ' return') → logprob: -2.1838748455047607
    3. '       ' → logprob: -2.9338748455047607
    4. ' return' → logprob: -6.43387508392334
    5. '   ' → logprob: -7.55887508392334
    6. 'pos' → logprob: -10.80887508392334
    7. '          ' → logprob: -12.30887508392334
    8. '         ' → logprob: -12.55887508392334
    9. '        ' → logprob: -13.30887508392334
    10. '	return' → logprob: -13.68387508392334

Token 309: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.5759397745132446
    2. 'pos' → logprob: -0.8259397745132446
    3. '(pos' → logprob: -14.950940132141113
    4. '	pos' → logprob: -16.325939178466797
    5. '[pos' → logprob: -17.450939178466797
    6. '_pos' → logprob: -18.575939178466797
    7. '1' → logprob: -19.075939178466797
    8. '.pos' → logprob: -19.825939178466797
    9. ',pos' → logprob: -19.950939178466797
    10. 'Pos' → logprob: -20.575939178466797

Token 310: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16030597686767578
    2. '+' → logprob: -1.9103059768676758
    3. ' +
' → logprob: -9.535305976867676
    4. '+
' → logprob: -11.910305976867676
    5. '<|end|>' → logprob: -13.535305976867676
    6. ' plus' → logprob: -15.160305976867676
    7. '       ' → logprob: -15.535305976867676
    8. '   ' → logprob: -15.660305976867676
    9. '1' → logprob: -15.660305976867676
    10. '()+' → logprob: -15.910305976867676

Token 311: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -19.3750057220459
    4. '   ' → logprob: -21.5000057220459
    5. '0' → logprob: -21.6250057220459
    6. '`' → logprob: -22.2500057220459
    7. '[' → logprob: -22.9375057220459
    8. '１' → logprob: -23.5000057220459
    9. '۱' → logprob: -23.6250057220459
    10. 'def' → logprob: -23.7500057220459

Token 312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -17.5
    4. '<|end|>' → logprob: -19.5
    5. '[' → logprob: -20.625
    6. '`' → logprob: -20.6875
    7. '   ' → logprob: -20.8125
    8. '0' → logprob: -21.0625
    9. '-' → logprob: -21.4375
    10. '+' → logprob: -21.5

Token 313: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11712291836738586
    2. '<|end|>' → logprob: -2.8671228885650635
    3. '
' → logprob: -3.1171228885650635
    4. 'def' → logprob: -5.492123126983643
    5. '    
' → logprob: -5.492123126983643
    6. '<|end|>' → logprob: -8.117122650146484
    7. '        
' → logprob: -8.367122650146484
    8. '       ' → logprob: -8.492122650146484
    9. ' def' → logprob: -8.742122650146484
    10. ' ' → logprob: -9.242122650146484

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009917102754116058
    2. '
' → logprob: -5.384917259216309
    3. 'def' → logprob: -5.384917259216309
    4. '    
' → logprob: -7.509917259216309
    5. '        
' → logprob: -9.509917259216309
    6. ' def' → logprob: -10.384917259216309
    7. '```' → logprob: -11.259917259216309
    8. '       ' → logprob: -11.384917259216309
    9. '	def' → logprob: -12.134917259216309
    10. '            
' → logprob: -12.384917259216309

Token 315: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.020064465701580048
    2. '   ' → logprob: -4.020064353942871
    3. ' def' → logprob: -6.270064353942871
    4. '    
' → logprob: -11.020064353942871
    5. '	def' → logprob: -12.770064353942871
    6. '        
' → logprob: -14.270064353942871
    7. ' ' → logprob: -15.145064353942871
    8. '
' → logprob: -15.645064353942871
    9. '       ' → logprob: -16.020065307617188
    10. '    
    
' → logprob: -17.145065307617188

Token 316: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7028396129608154
    2. ' count' → logprob: -0.8278396129608154
    3. ' find' → logprob: -4.3278398513793945
    4. 'can' → logprob: -4.5778398513793945
    5. 'solve' → logprob: -4.5778398513793945
    6. 'find' → logprob: -5.4528398513793945
    7. 'play' → logprob: -5.4528398513793945
    8. ' solve' → logprob: -5.5778398513793945
    9. ' play' → logprob: -5.7028398513793945
    10. ' can' → logprob: -5.7028398513793945

Token 317: '_k' (ID: 11637)
  Prédit: '_unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_unique' → logprob: -1.0200505256652832
    2. '_sub' → logprob: -1.1450505256652832
    3. '_pairs' → logprob: -1.7700505256652832
    4. '_less' → logprob: -2.895050525665283
    5. '_' → logprob: -3.395050525665283
    6. '_dist' → logprob: -3.770050525665283
    7. '_in' → logprob: -4.645050525665283
    8. '_g' → logprob: -5.770050525665283
    9. '_valid' → logprob: -5.770050525665283
    10. '_cards' → logprob: -5.895050525665283

Token 318: 'th' (ID: 404)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.4368371069431305
    2. '_dist' → logprob: -2.0618371963500977
    3. 'th' → logprob: -2.5618371963500977
    4. '_diff' → logprob: -3.0618371963500977
    5. '_elements' → logprob: -3.8118371963500977
    6. '_small' → logprob: -4.311837196350098
    7. '_th' → logprob: -4.561837196350098
    8. '_pairs' → logprob: -4.686837196350098
    9. '_subset' → logprob: -4.686837196350098
    10. '_ind' → logprob: -5.436837196350098

Token 319: '_less' (ID: 154196)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10972283035516739
    2. '_occ' → logprob: -3.109722852706909
    3. '(' → logprob: -3.484722852706909
    4. '_card' → logprob: -5.23472261428833
    5. '_unique' → logprob: -5.35972261428833
    6. '_sm' → logprob: -5.60972261428833
    7. '_element' → logprob: -5.85972261428833
    8. '_l' → logprob: -6.35972261428833
    9. '_self' → logprob: -6.48472261428833
    10. '_oc' → logprob: -6.60972261428833

Token 320: '_equal' (ID: 27882)
  Prédit: '_than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_than' → logprob: -0.5536819696426392
    2. '(self' → logprob: -1.1786819696426392
    3. '_equal' → logprob: -2.1786818504333496
    4. '_or' → logprob: -5.55368185043335
    5. '_elements' → logprob: -8.553682327270508
    6. '_self' → logprob: -9.928682327270508
    7. '(' → logprob: -10.053682327270508
    8. '_eq' → logprob: -10.303682327270508
    9. 'self' → logprob: -10.553682327270508
    10. '_element' → logprob: -10.803682327270508

Token 321: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017269416712224483
    2. '(' → logprob: -6.376727104187012
    3. ' (' → logprob: -11.126727104187012
    4. '_value' → logprob: -12.751727104187012
    5. '_(' → logprob: -13.126727104187012
    6. 'self' → logprob: -13.626727104187012
    7. '_' → logprob: -14.626727104187012
    8. '(sel' → logprob: -14.626727104187012
    9. '_than' → logprob: -14.751727104187012
    10. '(s' → logprob: -15.001727104187012

Token 322: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2192348688840866
    2. ',' → logprob: -1.719234824180603
    3. ')(' → logprob: -5.094234943389893
    4. 'self' → logprob: -5.844234943389893
    5. '(' → logprob: -5.969234943389893
    6. ' (' → logprob: -6.219234943389893
    7. ',self' → logprob: -7.469234943389893
    8. ' ,' → logprob: -7.594234943389893
    9. '_' → logprob: -7.719234943389893
    10. '   ' → logprob: -7.969234943389893

Token 323: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.613059401512146
    2. 'k' → logprob: -2.1130595207214355
    3. 'left' → logprob: -2.1130595207214355
    4. 'arr' → logprob: -2.1130595207214355
    5. 'l' → logprob: -2.6130595207214355
    6. 'pos' → logprob: -2.9880595207214355
    7. 'idx' → logprob: -2.9880595207214355
    8. 'start' → logprob: -3.3630595207214355
    9. ' left' → logprob: -3.4880595207214355
    10. 'index' → logprob: -3.7380595207214355

Token 324: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2837424874305725
    2. '):' → logprob: -1.4087424278259277
    3. 'self' → logprob: -6.533742427825928
    4. '):
' → logprob: -7.283742427825928
    5. ' ,' → logprob: -8.408742904663086
    6. '   ' → logprob: -9.908742904663086
    7. '(self' → logprob: -10.033742904663086
    8. ')' → logprob: -10.533742904663086
    9. ' ):' → logprob: -10.658742904663086
    10. '       ' → logprob: -11.408742904663086

Token 325: '       ' (ID: 309)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6115850210189819
    2. '       ' → logprob: -1.111585021018982
    3. ':' → logprob: -2.2365851402282715
    4. '(' → logprob: -5.2365851402282715
    5. 'self' → logprob: -5.2365851402282715
    6. ',' → logprob: -5.6115851402282715
    7. '(f' → logprob: -5.9865851402282715
    8. ' self' → logprob: -6.2365851402282715
    9. '(card' → logprob: -6.9865851402282715
    10. '   ' → logprob: -7.9865851402282715

Token 326: ' #' (ID: 1069)
  Prédit: 'ft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ft' → logprob: -0.8074485063552856
    2. ' ft' → logprob: -1.0574485063552856
    3. '       ' → logprob: -2.307448387145996
    4. 'bit' → logprob: -2.807448387145996
    5. ' fen' → logprob: -3.807448387145996
    6. 'fen' → logprob: -4.682448387145996
    7. ' bit' → logprob: -5.432448387145996
    8. '   ' → logprob: -5.932448387145996
    9. 'freq' → logprob: -6.307448387145996
    10. 'bt' → logprob: -6.807448387145996

Token 327: ' Count' (ID: 6789)
  Prédit: 'ft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ft' → logprob: -0.07312552630901337
    2. 'bit' → logprob: -3.0731256008148193
    3. 'fen' → logprob: -3.9481256008148193
    4. '   ' → logprob: -6.94812536239624
    5. 'idx' → logprob: -7.07312536239624
    6. 'res' → logprob: -7.19812536239624
    7. 'freq' → logprob: -7.69812536239624
    8. 'count' → logprob: -7.94812536239624
    9. 'tree' → logprob: -7.94812536239624
    10. ' ft' → logprob: -8.198125839233398

Token 328: ' how' (ID: 1495)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.5505372285842896
    2. 'res' → logprob: -1.9255372285842896
    3. ' =' → logprob: -2.050537109375
    4. '       ' → logprob: -3.300537109375
    5. '=' → logprob: -3.550537109375
    6. ' self' → logprob: -3.925537109375
    7. 'self' → logprob: -4.175537109375
    8. ' result' → logprob: -4.675537109375
    9. '   ' → logprob: -5.175537109375
    10. ' <=' → logprob: -5.300537109375

Token 329: ' many' (ID: 1991)
  Prédit: ' many'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' many' → logprob: -0.4334869682788849
    2. 'many' → logprob: -1.0584869384765625
    3. '       ' → logprob: -6.1834869384765625
    4. '   ' → logprob: -6.4334869384765625
    5. '<=' → logprob: -7.5584869384765625
    6. '=' → logprob: -7.9334869384765625
    7. 'x' → logprob: -10.558486938476562
    8. ' <=' → logprob: -10.558486938476562
    9. ' ' → logprob: -10.808486938476562
    10. 'much' → logprob: -10.933486938476562

Token 330: ' K' (ID: 658)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.7790688872337341
    2. ' cards' → logprob: -2.154068946838379
    3. ' elements' → logprob: -2.529068946838379
    4. 'elements' → logprob: -2.654068946838379
    5. ' are' → logprob: -2.904068946838379
    6. 'indices' → logprob: -3.529068946838379
    7. 'compressed' → logprob: -3.654068946838379
    8. 'card' → logprob: -3.779068946838379
    9. ' of' → logprob: -3.904068946838379
    10. '=' → logprob: -4.404068946838379

Token 331: '-th' (ID: 14928)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5315516591072083
    2. ' cards' → logprob: -2.1565515995025635
    3. ' =' → logprob: -3.1565515995025635
    4. '_cards' → logprob: -3.1565515995025635
    5. '<=' → logprob: -3.2815515995025635
    6. '_less' → logprob: -3.5315515995025635
    7. '_indices' → logprob: -4.156551837921143
    8. ' in' → logprob: -4.281551837921143
    9. ' elements' → logprob: -4.406551837921143
    10. 'cards' → logprob: -4.406551837921143

Token 332: ' order' (ID: 2569)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.5530324578285217
    2. ' cards' → logprob: -1.553032398223877
    3. 'elements' → logprob: -3.428032398223877
    4. 'compressed' → logprob: -3.428032398223877
    5. 'cards' → logprob: -3.428032398223877
    6. '<=' → logprob: -3.553032398223877
    7. ' <=' → logprob: -3.928032398223877
    8. ' compressed' → logprob: -4.553032398223877
    9. ' unique' → logprob: -5.053032398223877
    10. ' or' → logprob: -5.178032398223877

Token 333: ' statistics' (ID: 21729)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -1.501709222793579
    2. '<=' → logprob: -2.126709222793579
    3. 'elements' → logprob: -2.501709222793579
    4. 's' → logprob: -2.626709222793579
    5. ' elements' → logprob: -2.626709222793579
    6. ' cards' → logprob: -2.751709222793579
    7. 'def' → logprob: -2.751709222793579
    8. 'less' → logprob: -3.376709222793579
    9. '   ' → logprob: -3.376709222793579
    10. 'self' → logprob: -3.501709222793579

Token 334: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.3854548931121826
    2. ' =' → logprob: -1.7604548931121826
    3. '(self' → logprob: -2.1354548931121826
    4. ' in' → logprob: -2.2604548931121826
    5. '<=' → logprob: -2.7604548931121826
    6. '   ' → logprob: -3.0104548931121826
    7. 'in' → logprob: -3.1354548931121826
    8. '       ' → logprob: -3.1354548931121826
    9. ' are' → logprob: -3.5104548931121826
    10. 'def' → logprob: -4.010455131530762

Token 335: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06197429448366165
    2. ' x' → logprob: -2.811974287033081
    3. 'self' → logprob: -12.93697452545166
    4. '   ' → logprob: -13.68697452545166
    5. ' ' → logprob: -13.93697452545166
    6. '	x' → logprob: -13.93697452545166
    7. ' self' → logprob: -14.93697452545166
    8. '    ' → logprob: -15.06197452545166
    9. '=' → logprob: -16.061973571777344
    10. ' ' → logprob: -16.061973571777344

Token 336: ' among' (ID: 6200)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.23248012363910675
    2. ':' → logprob: -2.482480049133301
    3. '       ' → logprob: -2.482480049133301
    4. ':
' → logprob: -3.857480049133301
    5. 'self' → logprob: -5.482480049133301
    6. '(' → logprob: -5.607480049133301
    7. 'def' → logprob: -5.732480049133301
    8. '   ' → logprob: -6.107480049133301
    9. ',' → logprob: -6.357480049133301
    10. '):
' → logprob: -6.732480049133301

Token 337: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04292861744761467
    2. ' self' → logprob: -3.792928695678711
    3. 'range' → logprob: -4.542928695678711
    4. 'the' → logprob: -6.292928695678711
    5. '[self' → logprob: -6.542928695678711
    6. ' the' → logprob: -6.542928695678711
    7. ' range' → logprob: -6.792928695678711
    8. '   ' → logprob: -7.417928695678711
    9. '[' → logprob: -7.542928695678711
    10. ' all' → logprob: -7.917928695678711

Token 338: ' valid' (ID: 4529)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.908790647983551
    2. 'windows' → logprob: -0.908790647983551
    3. 'sub' → logprob: -2.0337905883789062
    4. '   ' → logprob: -4.783790588378906
    5. ' windows' → logprob: -4.908790588378906
    6. 'x' → logprob: -5.033790588378906
    7. 'cards' → logprob: -5.158790588378906
    8. 'window' → logprob: -5.283790588378906
    9. ' self' → logprob: -5.908790588378906
    10. 'ranges' → logprob: -6.033790588378906

Token 339: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.599438488483429
    2. ' sub' → logprob: -2.099438428878784
    3. 'windows' → logprob: -2.224438428878784
    4. '   ' → logprob: -2.599438428878784
    5. ' windows' → logprob: -2.724438428878784
    6. 's' → logprob: -3.224438428878784
    7. '_sub' → logprob: -3.849438428878784
    8. ' subse' → logprob: -4.849438667297363
    9. '       ' → logprob: -6.349438667297363
    10. 'ranges' → logprob: -6.724438667297363

Token 340: 'arrays' (ID: 158630)
  Prédit: 'arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.6267978549003601
    2. 'array' → logprob: -1.2517979145050049
    3. '   ' → logprob: -2.251797914505005
    4. '       ' → logprob: -3.126797914505005
    5. ' arrays' → logprob: -4.126797676086426
    6. 'sequence' → logprob: -5.251797676086426
    7. ' array' → logprob: -6.626797676086426
    8. 'arr' → logprob: -6.626797676086426
    9. 'sets' → logprob: -6.751797676086426
    10. 'set' → logprob: -7.001797676086426

Token 341: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15128575265407562
    2. '(self' → logprob: -2.1512856483459473
    3. 'self' → logprob: -5.276285648345947
    4. '   ' → logprob: -5.276285648345947
    5. ' =' → logprob: -5.776285648345947
    6. ',' → logprob: -5.901285648345947
    7. '
' → logprob: -5.901285648345947
    8. 'def' → logprob: -6.526285648345947
    9. ' self' → logprob: -7.276285648345947
    10. '=' → logprob: -7.276285648345947

Token 342: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.327332079410553
    2. '       ' → logprob: -1.5773320198059082
    3. ':
' → logprob: -3.327332019805908
    4. '):' → logprob: -4.202332019805908
    5. '):
' → logprob: -4.827332019805908
    6. ',' → logprob: -5.077332019805908
    7. '(self' → logprob: -6.202332019805908
    8. '   ' → logprob: -6.577332019805908
    9. '():' → logprob: -6.577332019805908
    10. '():
' → logprob: -7.452332019805908

Token 343: ' fen' (ID: 25170)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9178309440612793
    2. 'result' → logprob: -1.9178309440612793
    3. ' res' → logprob: -2.0428309440612793
    4. ' result' → logprob: -2.1678309440612793
    5. 'res' → logprob: -2.6678309440612793
    6. 'n' → logprob: -2.6678309440612793
    7. ' n' → logprob: -2.7928309440612793
    8. 'fen' (adapté à ' fen') → logprob: -2.7928309440612793
    9. ' fen' → logprob: -3.0428309440612793
    10. ' ft' → logprob: -3.1678309440612793

Token 344: 'w' (ID: 86)
  Prédit: 'wick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wick' → logprob: -0.23761121928691864
    2. 'w' → logprob: -1.987611174583435
    3. '       ' → logprob: -2.7376112937927246
    4. '   ' → logprob: -5.612611293792725
    5. '=' → logprob: -5.987611293792725
    6. '```' → logprob: -6.487611293792725
    7. '        ' → logprob: -7.612611293792725
    8. ' =' → logprob: -7.987611293792725
    9. '           ' → logprob: -8.237610816955566
    10. '``' → logprob: -8.612610816955566

Token 345: ' =' (ID: 314)
  Prédit: 'ick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ick' → logprob: -0.00010735770774772391
    2. '   ' → logprob: -10.125107765197754
    3. '       ' → logprob: -10.875107765197754
    4. 'icks' → logprob: -11.375107765197754
    5. '               ' → logprob: -12.125107765197754
    6. 'i' → logprob: -12.625107765197754
    7. '
' → logprob: -12.750107765197754
    8. '=' → logprob: -12.875107765197754
    9. '```' → logprob: -13.000107765197754
    10. 'e' → logprob: -13.125107765197754

Token 346: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20174777507781982
    2. ' self' → logprob: -1.7017477750778198
    3. 'Card' → logprob: -8.07674789428711
    4. ' Card' → logprob: -11.45174789428711
    5. '	self' → logprob: -12.07674789428711
    6. '[self' → logprob: -12.70174789428711
    7. '(self' → logprob: -13.45174789428711
    8. 'Self' → logprob: -13.82674789428711
    9. '=self' → logprob: -14.32674789428711
    10. '   ' → logprob: -15.32674789428711

Token 347: '.F' (ID: 1737)
  Prédit: '.F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.F' → logprob: -2.9875325708417222e-05
    2. '	F' → logprob: -12.125029563903809
    3. '.W' → logprob: -12.375029563903809
    4. 'len' → logprob: -12.375029563903809
    5. '.f' → logprob: -12.625029563903809
    6. '.' → logprob: -13.125029563903809
    7. '.Card' → logprob: -13.125029563903809
    8. 'F' → logprob: -13.375029563903809
    9. 'Fen' → logprob: -13.375029563903809
    10. '   ' → logprob: -14.000029563903809

Token 348: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.09609945863485336
    2. 'wick' → logprob: -2.596099376678467
    3. 'in' → logprob: -4.721099376678467
    4. 'w' → logprob: -5.096099376678467
    5. 'ick' → logprob: -7.221099376678467
    6. 'went' → logprob: -7.971099376678467
    7. 'indow' → logprob: -8.471099853515625
    8. 'e' → logprob: -8.596099853515625
    9. 'ent' → logprob: -8.846099853515625
    10. 'ew' → logprob: -9.346099853515625

Token 349: 'wick' (ID: 14105)
  Prédit: 'wick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wick' → logprob: -0.015214258804917336
    2. 'w' → logprob: -4.515214443206787
    3. 'ick' → logprob: -5.515214443206787
    4. 'wic' → logprob: -9.640213966369629
    5. '   ' → logprob: -11.265213966369629
    6. 'win' → logprob: -12.015213966369629
    7. '       ' → logprob: -12.265213966369629
    8. '```' → logprob: -12.390213966369629
    9. 'i' → logprob: -12.890213966369629
    10. '

' → logprob: -13.015213966369629

Token 350: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -3.2378600735682994e-05
    2. '	Tree' → logprob: -10.625032424926758
    3. 'ree' → logprob: -12.375032424926758
    4. ' Tree' → logprob: -13.375032424926758
    5. '<Tree' → logprob: -13.625032424926758
    6. '(Tree' → logprob: -15.000032424926758
    7. 'tree' → logprob: -15.625032424926758
    8. '_TREE' → logprob: -16.000032424926758
    9. '.Tree' → logprob: -16.125032424926758
    10. '_tree' → logprob: -16.625032424926758

Token 351: '(len' (ID: 14990)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.31345880031585693
    2. '(len' → logprob: -1.313458800315857
    3. 'len' → logprob: -9.063458442687988
    4. 'self' → logprob: -9.813458442687988
    5. '(' → logprob: -10.938458442687988
    6. '(max' → logprob: -12.438458442687988
    7. ' len' → logprob: -13.688458442687988
    8. ' self' → logprob: -13.813458442687988
    9. ' (' → logprob: -14.188458442687988
    10. '[len' → logprob: -14.688458442687988

Token 352: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.7968066206085496e-05
    2. '(' → logprob: -10.500027656555176
    3. 'self' → logprob: -15.250027656555176
    4. ')' → logprob: -16.000028610229492
    5. ' (' → logprob: -17.000028610229492
    6. '(this' → logprob: -17.000028610229492
    7. ')(' → logprob: -17.250028610229492
    8. '(
' → logprob: -17.875028610229492
    9. ' self' → logprob: -18.125028610229492
    10. '(s' → logprob: -18.875028610229492

Token 353: '.unique' (ID: 76220)
  Prédit: '.unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.unique' → logprob: -0.00020807012333534658
    2. ' .' → logprob: -9.000207901000977
    3. '.' → logprob: -10.000207901000977
    4. 'unique' → logprob: -10.250207901000977
    5. ').' → logprob: -13.750207901000977
    6. ' unique' → logprob: -14.000207901000977
    7. '   ' → logprob: -15.125207901000977
    8. '.com' → logprob: -15.250207901000977
    9. '.cards' → logprob: -15.625207901000977
    10. '.uni' → logprob: -15.625207901000977

Token 354: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -1.9361264946837764e-07
    2. ')' → logprob: -17.0
    3. 'Cards' → logprob: -17.5
    4. 'cards' → logprob: -17.5
    5. 'self' → logprob: -17.75
    6. ' cards' → logprob: -19.0
    7. ')_' → logprob: -19.0
    8. '
' → logprob: -19.125
    9. '```' → logprob: -19.375
    10. '(cards' → logprob: -19.375

Token 355: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.8477911949157715
    2. ')' → logprob: -1.3477911949157715
    3. '))
' → logprob: -1.3477911949157715
    4. ')
' → logprob: -2.9727911949157715
    5. ' ))
' → logprob: -8.47279167175293
    6. '       ' → logprob: -8.59779167175293
    7. ' )' → logprob: -8.84779167175293
    8. ' ))' → logprob: -9.34779167175293
    9. ' )
' → logprob: -9.47279167175293
    10. '))

' → logprob: -9.59779167175293

Token 356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6027441620826721
    2. '
' → logprob: -0.8527441620826721
    3. ',' → logprob: -4.852744102478027
    4. '        
' → logprob: -5.102744102478027
    5. '```' → logprob: -5.602744102478027
    6. 'count' → logprob: -6.102744102478027
    7. 'left' → logprob: -6.727744102478027
    8. 'result' → logprob: -6.727744102478027
    9. ' left' → logprob: -7.352744102478027
    10. ')' → logprob: -7.602744102478027

Token 357: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4874507784843445
    2. 'result' → logprob: -1.8624508380889893
    3. 'count' → logprob: -2.1124508380889893
    4. 'left' → logprob: -2.3624508380889893
    5. 'freq' → logprob: -5.11245059967041
    6. 'cnt' → logprob: -5.86245059967041
    7. 'l' → logprob: -6.23745059967041
    8. '   ' → logprob: -6.73745059967041
    9. 'answer' → logprob: -7.11245059967041
    10. ' res' → logprob: -7.48745059967041

Token 358: ' Sliding' (ID: 158421)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5645582675933838
    2. 'left' → logprob: -1.6895582675933838
    3. 'result' → logprob: -1.6895582675933838
    4. 'count' → logprob: -3.189558267593384
    5. 'l' → logprob: -5.314558029174805
    6. 'freq' → logprob: -5.314558029174805
    7. 'answer' → logprob: -5.939558029174805
    8. 'ans' → logprob: -6.314558029174805
    9. 'cnt' → logprob: -6.439558029174805
    10. ' res' → logprob: -6.814558029174805

Token 359: ' window' (ID: 5734)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.00863324198871851
    2. ' window' → logprob: -5.258633136749268
    3. '_window' → logprob: -5.883633136749268
    4. 'left' → logprob: -7.508633136749268
    5. ' left' → logprob: -11.383633613586426
    6. ' =' → logprob: -11.633633613586426
    7. '   ' → logprob: -11.758633613586426
    8. '=' → logprob: -11.883633613586426
    9. 'windows' → logprob: -12.383633613586426
    10. '_left' → logprob: -12.508633613586426

Token 360: ' processing' (ID: 12323)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.43701526522636414
    2. ' left' → logprob: -1.1870152950286865
    3. '       ' → logprob: -3.8120152950286865
    4. 'l' → logprob: -5.062015056610107
    5. 'result' → logprob: -5.562015056610107
    6. 'start' → logprob: -5.687015056610107
    7. ' l' → logprob: -6.187015056610107
    8. 'right' → logprob: -6.187015056610107
    9. '
' → logprob: -6.437015056610107
    10. 'n' → logprob: -6.562015056610107

Token 361: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5491094589233398
    2. '
' → logprob: -1.0491094589233398
    3. 'left' → logprob: -3.67410945892334
    4. ' left' → logprob: -4.29910945892334
    5. ',' → logprob: -4.42410945892334
    6. '        
' → logprob: -5.04910945892334
    7. ':' → logprob: -5.92410945892334
    8. 'result' → logprob: -6.04910945892334
    9. 'n' → logprob: -6.17410945892334
    10. 'start' → logprob: -7.04910945892334

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47895288467407227
    2. ' left' → logprob: -1.7289528846740723
    3. 'left' → logprob: -2.1039528846740723
    4. 'n' → logprob: -3.7289528846740723
    5. ' n' → logprob: -4.353952884674072
    6. 'result' → logprob: -4.978952884674072
    7. ' result' → logprob: -5.103952884674072
    8. ' l' → logprob: -5.353952884674072
    9. 'start' → logprob: -5.603952884674072
    10. ',' → logprob: -5.978952884674072

Token 363: ' result' (ID: 1534)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6398941874504089
    2. 'res' → logprob: -1.2648942470550537
    3. ' left' → logprob: -2.7648942470550537
    4. ' res' → logprob: -3.1398942470550537
    5. 'result' (adapté à ' result') → logprob: -3.3898942470550537
    6. 'count' → logprob: -4.139894008636475
    7. 'l' → logprob: -4.264894008636475
    8. 'freq' → logprob: -5.014894008636475
    9. ' result' → logprob: -6.014894008636475
    10. 'right' → logprob: -6.264894008636475

Token 364: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006860532332211733
    2. '=' → logprob: -5.006860733032227
    3. ',' → logprob: -8.881860733032227
    4. ' ' → logprob: -13.131860733032227
    5. ' ,' → logprob: -13.381860733032227
    6. 's' → logprob: -13.881860733032227
    7. '   ' → logprob: -14.006860733032227
    8. ' =
' → logprob: -14.631860733032227
    9. '  ' → logprob: -15.006860733032227
    10. ' +=' → logprob: -15.631860733032227

Token 365: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043001141399145126
    2. ' ' → logprob: -3.168001174926758
    3. ' ' → logprob: -14.668001174926758
    4. '   ' → logprob: -14.793001174926758
    5. '[' → logprob: -14.918001174926758
    6. '       ' → logprob: -15.918001174926758
    7. ' [' → logprob: -16.105501174926758
    8. '1' → logprob: -16.230501174926758
    9. '
' → logprob: -16.793001174926758
    10. '  ' → logprob: -16.855501174926758

Token 366: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.875008583068848
    3. '[' → logprob: -13.875008583068848
    4. '[]' → logprob: -16.68750762939453
    5. '   ' → logprob: -16.75000762939453
    6. 'int' → logprob: -17.18750762939453
    7. 'self' → logprob: -17.37500762939453
    8. '```' → logprob: -17.68750762939453
    9. '1' → logprob: -18.00000762939453
    10. '[]
' → logprob: -18.12500762939453

Token 367: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14825019240379333
    2. '       ' → logprob: -2.023250102996826
    3. ',' → logprob: -5.773250102996826
    4. '        
' → logprob: -6.523250102996826
    5. ',
' → logprob: -7.523250102996826
    6. '
' → logprob: -9.398250579833984
    7. '```' → logprob: -9.523250579833984
    8. ' left' → logprob: -10.273250579833984
    9. '    
' → logprob: -10.273250579833984
    10. 'left' → logprob: -10.523250579833984

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008731092675589025
    2. ' left' → logprob: -8.125873565673828
    3. 'left' → logprob: -8.375873565673828
    4. '   ' → logprob: -8.500873565673828
    5. 'right' → logprob: -10.625873565673828
    6. 'start' → logprob: -10.625873565673828
    7. ' l' → logprob: -11.125873565673828
    8. ',' → logprob: -11.125873565673828
    9. ' right' → logprob: -11.250873565673828
    10. '        
' → logprob: -11.500873565673828

Token 369: ' l' (ID: 305)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.6667815446853638
    2. 'left' → logprob: -0.9167815446853638
    3. 'count' → logprob: -2.791781425476074
    4. ' left' → logprob: -4.791781425476074
    5. 'cnt' → logprob: -5.291781425476074
    6. 'l' (adapté à ' l') → logprob: -5.791781425476074
    7. ' freq' → logprob: -6.291781425476074
    8. 'j' → logprob: -6.666781425476074
    9. 'start' → logprob: -6.666781425476074
    10. 'window' → logprob: -6.791781425476074

Token 370: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3883751928806305
    2. '=' → logprob: -1.138375163078308
    3. ',' → logprob: -6.513375282287598
    4. '   ' → logprob: -12.013375282287598
    5. ' ' → logprob: -12.263375282287598
    6. ' ,' → logprob: -12.388375282287598
    7. '+=' → logprob: -14.138375282287598
    8. ' +=' → logprob: -14.513375282287598
    9. ' =
' → logprob: -14.763375282287598
    10. '  ' → logprob: -15.138375282287598

Token 371: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008054602658376098
    2. ' ' → logprob: -7.125805377960205
    3. '   ' → logprob: -14.375805854797363
    4. '1' → logprob: -15.375805854797363
    5. '       ' → logprob: -16.938304901123047
    6. '=' → logprob: -17.625804901123047
    7. '[' → logprob: -18.000804901123047
    8. '  ' → logprob: -18.188304901123047
    9. '    ' → logprob: -18.375804901123047
    10. '     ' → logprob: -18.875804901123047

Token 372: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.500003814697266
    3. '1' → logprob: -14.750003814697266
    4. '   ' → logprob: -17.812503814697266
    5. 'self' → logprob: -18.375003814697266
    6. '-' → logprob: -18.437503814697266
    7. '[' → logprob: -18.625003814697266
    8. '```' → logprob: -19.187503814697266
    9. 's' → logprob: -19.250003814697266
    10. '=' → logprob: -19.375003814697266

Token 373: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10454583168029785
    2. '       ' → logprob: -2.479545831680298
    3. ' for' → logprob: -4.729545593261719
    4. 'for' → logprob: -5.479545593261719
    5. '        
' → logprob: -6.979545593261719
    6. ' 
' → logprob: -7.854545593261719
    7. '<|end|>' → logprob: -8.104545593261719
    8. '
' → logprob: -8.229545593261719
    9. '    
' → logprob: -9.104545593261719
    10. '  
' → logprob: -9.229545593261719

Token 374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06055347993969917
    2. ' for' → logprob: -3.435553550720215
    3. 'for' → logprob: -3.810553550720215
    4. ' fen' → logprob: -6.185553550720215
    5. '
' → logprob: -6.935553550720215
    6. 'fen' → logprob: -7.560553550720215
    7. 'count' → logprob: -8.935553550720215
    8. 'freq' → logprob: -8.935553550720215
    9. '        
' → logprob: -9.310553550720215
    10. ' Fen' → logprob: -10.060553550720215

Token 375: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5450275540351868
    2. 'freq' → logprob: -1.420027494430542
    3. 'fen' → logprob: -2.170027494430542
    4. 'count' → logprob: -3.545027494430542
    5. 'counts' → logprob: -4.170027732849121
    6. 'cnt' → logprob: -4.545027732849121
    7. ' for' → logprob: -6.420027732849121
    8. 'counter' → logprob: -6.420027732849121
    9. 'frequency' → logprob: -6.795027732849121
    10. 'window' → logprob: -7.045027732849121

Token 376: ' Stores' (ID: 60337)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.647697389125824
    2. 'for' → logprob: -1.0226974487304688
    3. 'count' → logprob: -2.8976974487304688
    4. 'fen' → logprob: -3.5226974487304688
    5. 'counts' → logprob: -4.147697448730469
    6. 'cnt' → logprob: -4.897697448730469
    7. 'from' → logprob: -6.022697448730469
    8. 'counter' → logprob: -6.397697448730469
    9. 'frequency' → logprob: -6.772697448730469
    10. 'fre' → logprob: -7.022697448730469

Token 377: ' count' (ID: 3605)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.21581874787807465
    2. 'count' → logprob: -1.9658187627792358
    3. 'from' → logprob: -3.7158186435699463
    4. 'counts' → logprob: -4.340818881988525
    5. 'indices' → logprob: -5.840818881988525
    6. 'pos' → logprob: -5.840818881988525
    7. 'window' → logprob: -6.090818881988525
    8. ' freq' → logprob: -6.215818881988525
    9. 'cnt' → logprob: -6.590818881988525
    10. 'positions' → logprob: -6.715818881988525

Token 378: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33749207854270935
    2. 's' → logprob: -1.4624921083450317
    3. '=' → logprob: -3.212491989135742
    4. ' of' → logprob: -5.087491989135742
    5. 'of' → logprob: -5.212491989135742
    6. '_of' → logprob: -8.087491989135742
    7. '   ' → logprob: -8.462491989135742
    8. '_freq' → logprob: -8.587491989135742
    9. '[' → logprob: -8.962491989135742
    10. 'freq' → logprob: -8.962491989135742

Token 379: ' each' (ID: 2454)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -1.2371301651000977
    2. 'freq' → logprob: -1.9871301651000977
    3. 'cards' → logprob: -2.1121301651000977
    4. 'self' → logprob: -2.6121301651000977
    5. 'card' → logprob: -2.8621301651000977
    6. ' cards' → logprob: -3.2371301651000977
    7. ' elements' → logprob: -3.3621301651000977
    8. 'fen' → logprob: -3.4871301651000977
    9. 'the' → logprob: -3.6121301651000977
    10. 'occ' → logprob: -3.8621301651000977

Token 380: ' compressed' (ID: 58419)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.2413468211889267
    2. ' card' → logprob: -2.616346836090088
    3. 'value' → logprob: -2.741346836090088
    4. 'element' → logprob: -3.366346836090088
    5. 'compressed' → logprob: -4.366346836090088
    6. 'self' → logprob: -4.741346836090088
    7. ' element' → logprob: -5.616346836090088
    8. ' value' → logprob: -5.741346836090088
    9. 'val' → logprob: -6.116346836090088
    10. 'frequency' → logprob: -6.491346836090088

Token 381: ' value' (ID: 1432)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.16426415741443634
    2. ' card' → logprob: -2.41426420211792
    3. 'value' → logprob: -3.41426420211792
    4. 'val' → logprob: -4.41426420211792
    5. '_card' → logprob: -4.91426420211792
    6. ' value' → logprob: -5.66426420211792
    7. 'self' → logprob: -6.53926420211792
    8. ' val' → logprob: -6.66426420211792
    9. '_cards' → logprob: -7.78926420211792
    10. 'element' → logprob: -7.78926420211792

Token 382: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47853443026542664
    2. '=' → logprob: -1.103534460067749
    3. '[' → logprob: -4.35353422164917
    4. '       ' → logprob: -4.47853422164917
    5. ' in' → logprob: -5.22853422164917
    6. ',' → logprob: -5.72853422164917
    7. ' [' → logprob: -5.97853422164917
    8. 'count' → logprob: -6.22853422164917
    9. ':' → logprob: -6.35353422164917
    10. ' self' → logprob: -6.85353422164917

Token 383: ' window' (ID: 5734)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.535986602306366
    2. 'the' → logprob: -1.7859866619110107
    3. 'fen' → logprob: -1.7859866619110107
    4. ' fen' → logprob: -3.9109866619110107
    5. ' the' → logprob: -4.035986423492432
    6. ' window' → logprob: -4.035986423492432
    7. 'self' → logprob: -4.160986423492432
    8. 'current' → logprob: -5.160986423492432
    9. 'Fen' → logprob: -6.910986423492432
    10. ' current' → logprob: -7.660986423492432

Token 384: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2495395690202713
    2. 'count' → logprob: -1.7495396137237549
    3. ' count' → logprob: -4.499539375305176
    4. ' freq' → logprob: -4.624539375305176
    5. ' counts' → logprob: -5.624539375305176
    6. 'counts' → logprob: -5.624539375305176
    7. 'freq' → logprob: -5.624539375305176
    8. ',' → logprob: -5.874539375305176
    9. ' =' → logprob: -5.999539375305176
    10. ' frequency' → logprob: -6.624539375305176

Token 385: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060247357934713364
    2. 'count' → logprob: -2.9352474212646484
    3. 'counts' → logprob: -5.685247421264648
    4. 'freq' → logprob: -7.560247421264648
    5. ',' → logprob: -8.185247421264648
    6. 'counter' → logprob: -8.560247421264648
    7. ' counts' → logprob: -8.560247421264648
    8. ' count' → logprob: -8.685247421264648
    9. 'cnt' → logprob: -9.060247421264648
    10. 'window' → logprob: -9.185247421264648

Token 386: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.6032074093818665
    2. 'freq' → logprob: -0.8532074093818665
    3. 'cnt' → logprob: -4.603207588195801
    4. ' freq' → logprob: -5.228207588195801
    5. 'counts' → logprob: -5.228207588195801
    6. 'window' → logprob: -5.478207588195801
    7. 'counter' → logprob: -6.478207588195801
    8. ' count' → logprob: -8.2282075881958
    9. ' window' → logprob: -10.1032075881958
    10. '   ' → logprob: -10.2282075881958

Token 387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06997233629226685
    2. '=' → logprob: -2.694972276687622
    3. 's' → logprob: -10.319972038269043
    4. '_' → logprob: -14.194972038269043
    5. ' ' → logprob: -14.319972038269043
    6. '   ' → logprob: -14.319972038269043
    7. '	' → logprob: -15.194972038269043
    8. ',' → logprob: -15.694972038269043
    9. '[' → logprob: -15.819972038269043
    10. '  ' → logprob: -16.06997299194336

Token 388: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3191480338573456
    2. '{}' → logprob: -1.319148063659668
    3. ' [' → logprob: -5.319148063659668
    4. 'default' → logprob: -7.569148063659668
    5. '{' → logprob: -7.819148063659668
    6. ' {}' → logprob: -10.069148063659668
    7. '{}
' → logprob: -12.444148063659668
    8. ' defaultdict' → logprob: -12.694148063659668
    9. 'dict' → logprob: -12.944148063659668
    10. '{}

' → logprob: -13.444148063659668

Token 389: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -21.375
    4. '۰' → logprob: -21.625
    5. '           ' → logprob: -22.5
    6. '000' → logprob: -22.5
    7. '
' → logprob: -22.625
    8. '       ' → logprob: -23.5
    9. 'False' → logprob: -23.625
    10. ')' → logprob: -23.75

Token 390: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003321281401440501
    2. ']*' → logprob: -8.50033187866211
    3. ']*(' → logprob: -9.12533187866211
    4. ' for' → logprob: -11.50033187866211
    5. ' ]' → logprob: -12.00033187866211
    6. ' *' → logprob: -13.87533187866211
    7. ')' → logprob: -14.12533187866211
    8. ']+' → logprob: -15.12533187866211
    9. '   ' → logprob: -15.37533187866211
    10. '*' → logprob: -15.37533187866211

Token 391: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3531588017940521
    2. ']' → logprob: -1.4781588315963745
    3. '*(' → logprob: -3.603158712387085
    4. '*' → logprob: -3.728158712387085
    5. ']*' → logprob: -5.228158950805664
    6. ']*(' → logprob: -5.478158950805664
    7. '[' → logprob: -5.603158950805664
    8. ' for' → logprob: -6.603158950805664
    9. '0' → logprob: -6.728158950805664
    10. '*[' → logprob: -7.353158950805664

Token 392: ' (' (ID: 350)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.06259337067604065
    2. '(self' → logprob: -2.812593460083008
    3. ' (' → logprob: -8.062593460083008
    4. '(max' → logprob: -8.312593460083008
    5. 'len' → logprob: -10.062593460083008
    6. 'self' → logprob: -11.562593460083008
    7. '(' → logprob: -11.562593460083008
    8. '((' → logprob: -13.187593460083008
    9. '(l' → logprob: -14.812593460083008
    10. ' len' → logprob: -16.187593460083008

Token 393: 'len' (ID: 3303)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.5785265564918518
    2. 'len' → logprob: -0.8285265564918518
    3. 'self' → logprob: -6.453526496887207
    4. '(self' → logprob: -6.953526496887207
    5. ' (' → logprob: -10.703526496887207
    6. ' len' → logprob: -10.953526496887207
    7. '(max' → logprob: -12.203526496887207
    8. '[len' → logprob: -12.328526496887207
    9. '(' → logprob: -13.203526496887207
    10. 'max' → logprob: -14.703526496887207

Token 394: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.3544423381972592e-05
    2. '(' → logprob: -11.87501335144043
    3. 'self' → logprob: -12.12501335144043
    4. '(f' → logprob: -13.87501335144043
    5. '(count' → logprob: -16.12501335144043
    6. ' self' → logprob: -17.12501335144043
    7. '(s' → logprob: -17.87501335144043
    8. '[self' → logprob: -18.12501335144043
    9. ' (' → logprob: -18.50001335144043
    10. '(this' → logprob: -18.62501335144043

Token 395: '.unique' (ID: 76220)
  Prédit: '.unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.unique' → logprob: -0.00866018608212471
    2. 'unique' → logprob: -4.758660316467285
    3. '.' → logprob: -10.758660316467285
    4. '_unique' → logprob: -12.258660316467285
    5. ' .' → logprob: -12.508660316467285
    6. ' unique' → logprob: -12.758660316467285
    7. '(unique' → logprob: -13.258660316467285
    8. '
' → logprob: -13.383660316467285
    9. '.cards' → logprob: -13.383660316467285
    10. ')' → logprob: -13.383660316467285

Token 396: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.0005302758072502911
    2. '_unique' → logprob: -7.625530242919922
    3. 'unique' → logprob: -11.375530242919922
    4. ')' → logprob: -11.625530242919922
    5. '       ' → logprob: -12.000530242919922
    6. '.cards' → logprob: -12.625530242919922
    7. '.unique' → logprob: -12.875530242919922
    8. 'self' → logprob: -13.000530242919922
    9. '   ' → logprob: -13.750530242919922
    10. 'Cards' → logprob: -13.875530242919922

Token 397: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013050578534603119
    2. ')
' → logprob: -5.513050556182861
    3. '])' → logprob: -5.888050556182861
    4. ')]' → logprob: -5.888050556182861
    5. '))' → logprob: -6.388050556182861
    6. '+' → logprob: -7.013050556182861
    7. ')])' → logprob: -7.888050556182861
    8. ' )' → logprob: -8.26305103302002
    9. '])
' → logprob: -10.38805103302002
    10. ')]
' → logprob: -10.63805103302002

Token 398: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036899782717227936
    2. ')
' → logprob: -5.628689765930176
    3. '       ' → logprob: -10.253689765930176
    4. ' )' → logprob: -10.503689765930176
    5. ')

' → logprob: -11.253689765930176
    6. '+' → logprob: -11.628689765930176
    7. ')
' → logprob: -13.378689765930176
    8. '   ' → logprob: -13.753689765930176
    9. ' )
' → logprob: -14.628689765930176
    10. '))' → logprob: -14.878689765930176

Token 399: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005082195159047842
    2. '2' → logprob: -5.505082130432129
    3. ' ' → logprob: -7.005082130432129
    4. '10' → logprob: -9.380082130432129
    5. '   ' → logprob: -11.630082130432129
    6. '5' → logprob: -13.380082130432129
    7. '  ' → logprob: -15.005082130432129
    8. '    ' → logprob: -15.505082130432129
    9. '100' → logprob: -15.505082130432129
    10. '     ' → logprob: -15.880082130432129

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0487893670797348
    2. '2' → logprob: -3.0487892627716064
    3. ' ' → logprob: -8.923789024353027
    4. '10' → logprob: -9.673789024353027
    5. '5' → logprob: -12.798789024353027
    6. '   ' → logprob: -13.173789024353027
    7. '3' → logprob: -15.173789024353027
    8. '  ' → logprob: -15.298789024353027
    9. '0' → logprob: -15.673789024353027
    10. '100' → logprob: -15.923789024353027

Token 401: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06537345796823502
    2. ')
' → logprob: -2.815373420715332
    3. '       ' → logprob: -5.690373420715332
    4. ' )' → logprob: -12.065373420715332
    5. '   ' → logprob: -12.190373420715332
    6. ')

' → logprob: -12.565373420715332
    7. ')
' → logprob: -12.565373420715332
    8. '
' → logprob: -13.315373420715332
    9. ' )
' → logprob: -13.815373420715332
    10. '```' → logprob: -15.940373420715332

Token 402: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.522327184677124
    2. '       ' → logprob: -1.522327184677124
    3. '   ' → logprob: -2.772327184677124
    4. ' for' → logprob: -2.897327184677124
    5. 'r' → logprob: -3.397327184677124
    6. ' r' → logprob: -3.647327184677124
    7. '```' → logprob: -5.272327423095703
    8. 'for' → logprob: -5.647327423095703
    9. '        
' → logprob: -7.397327423095703
    10. '    
' → logprob: -7.397327423095703

Token 403: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03454725071787834
    2. 'r' → logprob: -3.7845473289489746
    3. ' for' → logprob: -4.534547328948975
    4. '   ' → logprob: -8.534546852111816
    5. '       ' → logprob: -9.409546852111816
    6. 'result' → logprob: -9.909546852111816
    7. ' r' → logprob: -10.284546852111816
    8. 'res' → logprob: -10.409546852111816
    9. 'def' (adapté à ' def') → logprob: -10.784546852111816
    10. 'fen' → logprob: -11.159546852111816

Token 404: ' count' (ID: 3605)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.34442082047462463
    2. 'add' → logprob: -1.7194207906723022
    3. ' valid' → logprob: -3.469420909881592
    4. ' can' → logprob: -3.969420909881592
    5. ' check' → logprob: -3.969420909881592
    6. ' update' → logprob: -4.469420909881592
    7. 'update' → logprob: -5.094420909881592
    8. 'check' → logprob: -5.344420909881592
    9. 'can' → logprob: -5.719420909881592
    10. ' is' → logprob: -5.844420909881592

Token 405: '_at' (ID: 8254)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.728437066078186
    2. '_less' → logprob: -1.228437066078186
    3. '(' → logprob: -2.3534369468688965
    4. '_sub' → logprob: -3.1034369468688965
    5. '_le' → logprob: -4.2284369468688965
    6. '_' → logprob: -4.3534369468688965
    7. '(x' → logprob: -4.3534369468688965
    8. '(k' → logprob: -4.8534369468688965
    9. ' (' → logprob: -5.4784369468688965
    10. '_valid' → logprob: -5.6034369468688965

Token 406: '_le' (ID: 27121)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.1776670217514038
    2. 'k' → logprob: -1.3026670217514038
    3. 'least' → logprob: -1.3026670217514038
    4. '_le' → logprob: -3.0526671409606934
    5. '_m' → logprob: -4.302667140960693
    6. '_l' → logprob: -4.427667140960693
    7. '(x' → logprob: -4.427667140960693
    8. '(k' → logprob: -4.552667140960693
    9. 'l' → logprob: -4.927667140960693
    10. '(self' → logprob: -5.177667140960693

Token 407: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.13583815097808838
    2. 'vel' → logprob: -2.510838031768799
    3. 'ft' → logprob: -3.635838031768799
    4. 'def' → logprob: -5.010838031768799
    5. 'ng' → logprob: -5.385838031768799
    6. 'st' → logprob: -5.885838031768799
    7. 'ss' → logprob: -6.260838031768799
    8. '   ' → logprob: -7.510838031768799
    9. 'q' → logprob: -7.635838031768799
    10. '```' → logprob: -7.760838031768799

Token 408: '_k' (ID: 11637)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5102201700210571
    2. '(k' → logprob: -1.1352201700210571
    3. '(' → logprob: -3.1352200508117676
    4. '(n' → logprob: -4.510220050811768
    5. '(count' → logprob: -4.760220050811768
    6. '(x' → logprob: -5.510220050811768
    7. '(K' → logprob: -6.010220050811768
    8. '_tokens' → logprob: -6.760220050811768
    9. ' (' → logprob: -7.135220050811768
    10. '(length' → logprob: -7.260220050811768

Token 409: '(pos' (ID: 24566)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004700683988630772
    2. '(k' → logprob: -6.129700660705566
    3. '(' → logprob: -6.379700660705566
    4. 'self' → logprob: -7.879700660705566
    5. '(l' → logprob: -8.129700660705566
    6. '(n' → logprob: -10.629700660705566
    7. ' (' → logprob: -10.629700660705566
    8. '(i' → logprob: -10.629700660705566
    9. '_(' → logprob: -11.254700660705566
    10. '(count' → logprob: -11.504700660705566

Token 410: '_l' (ID: 1478)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4337884485721588
    2. ',' → logprob: -1.6837884187698364
    3. '):
' → logprob: -1.8087884187698364
    4. ')' → logprob: -7.183788299560547
    5. '       ' → logprob: -7.308788299560547
    6. '):
' → logprob: -8.058788299560547
    7. ' ,' → logprob: -8.808788299560547
    8. '   ' → logprob: -9.183788299560547
    9. '):

' → logprob: -9.433788299560547
    10. ':' → logprob: -10.058788299560547

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021529532968997955
    2. '):' → logprob: -4.396529674530029
    3. '):
' → logprob: -5.021529674530029
    4. ' ,' → logprob: -6.271529674530029
    5. ')' → logprob: -9.396529197692871
    6. '       ' → logprob: -9.396529197692871
    7. '_,' → logprob: -9.646529197692871
    8. ',l' → logprob: -9.896529197692871
    9. '   ' → logprob: -10.146529197692871
    10. '):

' → logprob: -10.271529197692871

Token 412: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.03324888274073601
    2. ' pos' → logprob: -3.5332489013671875
    3. 'x' → logprob: -7.0332489013671875
    4. 'k' → logprob: -7.5332489013671875
    5. '       ' → logprob: -8.158248901367188
    6. 'fen' → logprob: -8.158248901367188
    7. 'window' → logprob: -8.408248901367188
    8. '           ' → logprob: -8.533248901367188
    9. 'count' → logprob: -9.033248901367188
    10. 'l' → logprob: -9.283248901367188

Token 413: '_r' (ID: 3442)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47789815068244934
    2. '_r' → logprob: -1.102898120880127
    3. '_l' → logprob: -3.727898120880127
    4. ' ,' → logprob: -5.102898120880127
    5. '):
' → logprob: -5.477898120880127
    6. '):' → logprob: -5.477898120880127
    7. '_k' → logprob: -5.727898120880127
    8. 'r' → logprob: -6.852898120880127
    9. '_,' → logprob: -7.102898120880127
    10. '       ' → logprob: -7.477898120880127

Token 414: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5334346294403076
    2. ',' → logprob: -0.9084346294403076
    3. '):
' → logprob: -4.658434867858887
    4. '       ' → logprob: -7.783434867858887
    5. ' ,' → logprob: -9.158434867858887
    6. ')' → logprob: -9.283434867858887
    7. '   ' → logprob: -9.658434867858887
    8. '):
' → logprob: -10.658434867858887
    9. ' ):' → logprob: -11.283434867858887
    10. '):

' → logprob: -11.408434867858887

Token 415: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9335903525352478
    2. '       ' → logprob: -1.0585904121398926
    3. '<|end|>' → logprob: -1.5585904121398926
    4. '   ' → logprob: -4.808590412139893
    5. ':' → logprob: -5.058590412139893
    6. '        ' → logprob: -5.183590412139893
    7. '	       ' → logprob: -5.183590412139893
    8. '	' → logprob: -5.683590412139893
    9. '<|end|>' → logprob: -5.808590412139893
    10. '
' → logprob: -6.183590412139893

Token 416: ' length' (ID: 5517)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6710473895072937
    2. ' if' → logprob: -1.7960474491119385
    3. '       ' → logprob: -2.7960474491119385
    4. ' fen' → logprob: -2.7960474491119385
    5. ' k' → logprob: -2.9210474491119385
    6. 'if' → logprob: -3.9210474491119385
    7. 'freq' → logprob: -3.9210474491119385
    8. ' freq' → logprob: -3.9210474491119385
    9. 'k' → logprob: -4.171047210693359
    10. 'fen' → logprob: -4.296047210693359

Token 417: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5767703652381897
    2. ' =' → logprob: -0.8267703652381897
    3. '           ' → logprob: -7.951770305633545
    4. '       ' → logprob: -9.076770782470703
    5. '   ' → logprob: -9.701770782470703
    6. ')' → logprob: -10.326770782470703
    7. ',' → logprob: -10.701770782470703
    8. '```' → logprob: -10.701770782470703
    9. '=int' → logprob: -10.701770782470703
    10. 'def' → logprob: -10.951770782470703

Token 418: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1434539556503296
    2. ' pos' → logprob: -2.018454074859619
    3. '           ' → logprob: -7.893454074859619
    4. 'self' → logprob: -8.518453598022461
    5. ' self' → logprob: -8.768453598022461
    6. '               ' → logprob: -11.018453598022461
    7. '(pos' → logprob: -11.643453598022461
    8. '            ' → logprob: -12.518453598022461
    9. '                   ' → logprob: -12.643453598022461
    10. '	pos' → logprob: -12.643453598022461

Token 419: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.0029306337237358093
    2. '_l' → logprob: -5.877930641174316
    3. '       ' → logprob: -10.377930641174316
    4. '           ' → logprob: -11.002930641174316
    5. ' _' → logprob: -11.127930641174316
    6. ')' → logprob: -11.502930641174316
    7. '   ' → logprob: -11.627930641174316
    8. '_s' → logprob: -11.752930641174316
    9. 'r' → logprob: -12.252930641174316
    10. '_' → logprob: -12.502930641174316

Token 420: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20143020153045654
    2. ' -' → logprob: -1.7014302015304565
    3. '+' → logprob: -12.201430320739746
    4. '           ' → logprob: -12.451430320739746
    5. '   ' → logprob: -13.326430320739746
    6. '       ' → logprob: -13.701430320739746
    7. ' ' → logprob: -14.201430320739746
    8. '-
' → logprob: -14.326430320739746
    9. ')' → logprob: -14.451430320739746
    10. ',' → logprob: -14.701430320739746

Token 421: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00034023032640106976
    2. ' pos' → logprob: -8.000340461730957
    3. '           ' → logprob: -12.625340461730957
    4. 'position' → logprob: -14.250340461730957
    5. '(pos' → logprob: -15.500340461730957
    6. '_pos' → logprob: -16.00033950805664
    7. '	pos' → logprob: -16.25033950805664
    8. '1' → logprob: -16.62533950805664
    9. '            ' → logprob: -17.00033950805664
    10. 'p' → logprob: -17.37533950805664

Token 422: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0052178711630403996
    2. 'l' → logprob: -5.630218029022217
    3. '_r' → logprob: -6.630218029022217
    4. 'r' → logprob: -8.880217552185059
    5. '```' → logprob: -9.630217552185059
    6. '+' → logprob: -10.255217552185059
    7. 'L' → logprob: -11.380217552185059
    8. ' +' → logprob: -11.880217552185059
    9. '+l' → logprob: -12.380217552185059
    10. '           ' → logprob: -12.630217552185059

Token 423: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5968413352966309
    2. '+' → logprob: -1.2218413352966309
    3. '           ' → logprob: -1.9718413352966309
    4. '       ' → logprob: -4.471841335296631
    5. '<|end|>' → logprob: -6.471841335296631
    6. ',' → logprob: -7.471841335296631
    7. '
' → logprob: -7.721841335296631
    8. ' if' → logprob: -8.221841812133789
    9. ' >=' → logprob: -8.971841812133789
    10. ')' → logprob: -8.971841812133789

Token 424: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001589618914294988
    2. ' ' → logprob: -8.75015926361084
    3. '   ' → logprob: -14.87515926361084
    4. '           ' → logprob: -16.375158309936523
    5. '```' → logprob: -17.625158309936523
    6. '0' → logprob: -17.750158309936523
    7. '       ' → logprob: -18.000158309936523
    8. '
' → logprob: -18.625158309936523
    9. 'def' → logprob: -18.937658309936523
    10. '  ' → logprob: -18.937658309936523

Token 425: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4987974029500037e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -14.750024795532227
    4. '0' → logprob: -16.500024795532227
    5. '```' → logprob: -16.875024795532227
    6. '
' → logprob: -17.375024795532227
    7. '           ' → logprob: -17.750024795532227
    8. 'def' → logprob: -18.000024795532227
    9. '       ' → logprob: -18.125024795532227
    10. 'l' → logprob: -19.125024795532227

Token 426: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.389011949300766
    2. '           ' → logprob: -1.2640119791030884
    3. '<|end|>' → logprob: -3.889011859893799
    4. '       ' → logprob: -4.639011859893799
    5. '<|end|>' → logprob: -5.889011859893799
    6. ' if' → logprob: -6.014011859893799
    7. ',' → logprob: -6.389011859893799
    8. ')' → logprob: -7.889011859893799
    9. 'if' → logprob: -8.389012336730957
    10. ')
' → logprob: -8.639012336730957

Token 427: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07725558429956436
    2. '
' → logprob: -2.9522554874420166
    3. '       ' → logprob: -4.327255725860596
    4. ' if' → logprob: -5.202255725860596
    5. ',' → logprob: -6.827255725860596
    6. '<|end|>' → logprob: -7.327255725860596
    7. 'if' → logprob: -7.452255725860596
    8. '            
' → logprob: -8.952255249023438
    9. '               ' → logprob: -9.077255249023438
    10. '        
' → logprob: -9.077255249023438

Token 428: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3822125196456909
    2. '           ' → logprob: -2.1322126388549805
    3. 'k' → logprob: -2.2572126388549805
    4. ' if' → logprob: -2.8822126388549805
    5. 'm' → logprob: -4.3822126388549805
    6. 'return' → logprob: -5.1322126388549805
    7. 'mid' → logprob: -5.3822126388549805
    8. ' kth' → logprob: -5.3822126388549805
    9. ' k' → logprob: -6.1322126388549805
    10. '       ' → logprob: -6.2572126388549805

Token 429: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.006072541233152151
    2. ' length' → logprob: -5.131072521209717
    3. '           ' → logprob: -8.881072998046875
    4. 'self' → logprob: -13.506072998046875
    5. '               ' → logprob: -13.756072998046875
    6. '(length' → logprob: -14.381072998046875
    7. 'pos' → logprob: -14.631072998046875
    8. '                   ' → logprob: -14.881072998046875
    9. '            ' → logprob: -15.256072998046875
    10. 'l' → logprob: -15.381072998046875

Token 430: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4330912232398987
    2. ' <' → logprob: -1.058091163635254
    3. '<K' → logprob: -6.308091163635254
    4. '>=' → logprob: -7.683091163635254
    5. '<p' → logprob: -8.183091163635254
    6. ' >=' → logprob: -8.183091163635254
    7. '<class' → logprob: -8.433091163635254
    8. '<n' → logprob: -8.558091163635254
    9. '<int' → logprob: -8.808091163635254
    10. '<len' → logprob: -9.683091163635254

Token 431: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008404768304899335
    2. ' self' → logprob: -7.125840663909912
    3. '           ' → logprob: -10.625840187072754
    4. '       ' → logprob: -11.875840187072754
    5. '
' → logprob: -13.500840187072754
    6. '(self' → logprob: -14.000840187072754
    7. '   ' → logprob: -14.375840187072754
    8. '0' → logprob: -14.500840187072754
    9. '               ' → logprob: -15.000840187072754
    10. '         ' → logprob: -15.625840187072754

Token 432: '.K' (ID: 14475)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02347571961581707
    2. ' self' → logprob: -3.7734756469726562
    3. 'K' → logprob: -8.648475646972656
    4. '           ' → logprob: -10.898475646972656
    5. '       ' → logprob: -11.148475646972656
    6. '   ' → logprob: -12.148475646972656
    7. ' K' → logprob: -12.773475646972656
    8. ' ' → logprob: -12.898475646972656
    9. '
' → logprob: -13.273475646972656
    10. '(self' → logprob: -13.523475646972656

Token 433: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3348899185657501
    2. ':' → logprob: -2.3348898887634277
    3. '               ' → logprob: -2.3348898887634277
    4. ' or' → logprob: -2.8348898887634277
    5. '           ' → logprob: -3.8348898887634277
    6. ':return' → logprob: -4.584889888763428
    7. '):
' → logprob: -8.584890365600586
    8. '       ' → logprob: -9.959890365600586
    9. 'or' → logprob: -10.084890365600586
    10. 'return' → logprob: -10.459890365600586

Token 434: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002251603174954653
    2. ' return' → logprob: -6.752251625061035
    3. 'return' → logprob: -7.252251625061035
    4. '           ' → logprob: -8.002251625061035
    5. '
' → logprob: -11.127251625061035
    6. ':return' → logprob: -12.377251625061035
    7. '   ' → logprob: -12.877251625061035
    8. ':
' → logprob: -13.002251625061035
    9. '                   ' → logprob: -13.127251625061035
    10. '              ' → logprob: -13.377251625061035

Token 435: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.32359009981155396
    2. ' return' → logprob: -1.4485900402069092
    3. '               ' → logprob: -3.323590040206909
    4. '           ' → logprob: -5.323590278625488
    5. '   ' → logprob: -7.573590278625488
    6. '	return' → logprob: -9.823590278625488
    7. '                   ' → logprob: -10.448590278625488
    8. '       ' → logprob: -10.573590278625488
    9. '
' → logprob: -11.323590278625488
    10. ':return' → logprob: -12.073590278625488

Token 436: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018732871860265732
    2. 'False' → logprob: -4.268733024597168
    3. ' ' → logprob: -5.643733024597168
    4. ' False' → logprob: -7.643733024597168
    5. '[]
' → logprob: -8.518733024597168
    6. '[]' → logprob: -8.643733024597168
    7. 'True' → logprob: -9.768733024597168
    8. '           ' → logprob: -10.268733024597168
    9. '[' → logprob: -11.143733024597168
    10. '
' → logprob: -11.518733024597168

Token 437: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005571679212152958
    2. 'False' → logprob: -5.2555718421936035
    3. '[]' → logprob: -8.755571365356445
    4. '[]
' → logprob: -9.755571365356445
    5. ' ' → logprob: -10.005571365356445
    6. '[' → logprob: -10.130571365356445
    7. 'True' → logprob: -12.130571365356445
    8. ' False' → logprob: -12.255571365356445
    9. 'float' → logprob: -12.380571365356445
    10. '-' → logprob: -12.380571365356445

Token 438: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21135488152503967
    2. '
' → logprob: -1.7113548517227173
    3. '       ' → logprob: -5.086354732513428
    4. '<|end|>' → logprob: -6.461354732513428
    5. '		' → logprob: -7.836354732513428
    6. ',' → logprob: -8.586355209350586
    7. '            
' → logprob: -8.586355209350586
    8. '        
' → logprob: -8.586355209350586
    9. ' return' → logprob: -8.711355209350586
    10. 'return' → logprob: -8.711355209350586

Token 439: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.639837920665741
    2. '           ' → logprob: -1.0148379802703857
    3. '       ' → logprob: -2.3898379802703857
    4. '        
' → logprob: -5.014837741851807
    5. '<|end|>' → logprob: -5.764837741851807
    6. '    
' → logprob: -6.264837741851807
    7. '            
' → logprob: -6.639837741851807
    8. '  
' → logprob: -6.889837741851807
    9. 'return' → logprob: -7.139837741851807
    10. ' 
' → logprob: -7.764837741851807

Token 440: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9796908497810364
    2. ' fen' → logprob: -1.3546907901763916
    3. '       ' → logprob: -1.7296907901763916
    4. 'fen' → logprob: -2.2296907901763916
    5. 'left' → logprob: -4.354691028594971
    6. '
' → logprob: -4.354691028594971
    7. 'res' → logprob: -4.729691028594971
    8. 'r' → logprob: -5.354691028594971
    9. 'result' → logprob: -5.354691028594971
    10. 'k' → logprob: -5.479691028594971

Token 441: ' We' (ID: 1416)
  Prédit: ' fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fen' → logprob: -0.6131200194358826
    2. 'fen' → logprob: -0.8631200194358826
    3. 'k' → logprob: -4.613120079040527
    4. ' kth' → logprob: -5.113120079040527
    5. 'low' → logprob: -5.613120079040527
    6. 'mid' → logprob: -6.113120079040527
    7. 'left' → logprob: -6.363120079040527
    8. 'res' → logprob: -6.488120079040527
    9. 'median' → logprob: -6.488120079040527
    10. '           ' → logprob: -6.863120079040527

Token 442: ' want' (ID: 1682)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7438101768493652
    2. '       ' → logprob: -2.4938101768493652
    3. ' continue' → logprob: -2.4938101768493652
    4. ' need' → logprob: -2.8688101768493652
    5. ' return' → logprob: -3.1188101768493652
    6. ' find' → logprob: -3.3688101768493652
    7. 'need' → logprob: -3.9938101768493652
    8. 'def' → logprob: -3.9938101768493652
    9. 'continue' → logprob: -3.9938101768493652
    10. 'k' → logprob: -4.118810176849365

Token 443: ' the' (ID: 290)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.6553521156311035
    2. 'fen' → logprob: -1.6553521156311035
    3. 'self' → logprob: -2.0303521156311035
    4. ' kth' → logprob: -2.0303521156311035
    5. ' fen' → logprob: -2.5303521156311035
    6. ' to' → logprob: -2.6553521156311035
    7. ' k' → logprob: -3.4053521156311035
    8. '       ' → logprob: -3.4053521156311035
    9. 'the' → logprob: -3.5303521156311035
    10. 'to' → logprob: -3.7803521156311035

Token 444: ' K' (ID: 658)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5460395216941833
    2. 'fen' → logprob: -1.9210395812988281
    3. 'low' → logprob: -2.671039581298828
    4. 'left' → logprob: -3.046039581298828
    5. 'count' → logprob: -3.546039581298828
    6. 'Fen' → logprob: -3.796039581298828
    7. 'l' → logprob: -3.921039581298828
    8. 'K' → logprob: -4.296039581298828
    9. 'def' → logprob: -4.421039581298828
    10. 'res' → logprob: -4.796039581298828

Token 445: '-th' (ID: 14928)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.2675919234752655
    2. '-th' → logprob: -1.517591953277588
    3. '-' → logprob: -4.392591953277588
    4. ' -' → logprob: -6.142591953277588
    5. 'def' → logprob: -7.267591953277588
    6. '
' → logprob: -9.89259147644043
    7. ')' → logprob: -10.51759147644043
    8. '_th' → logprob: -10.89259147644043
    9. ' th' → logprob: -11.01759147644043
    10. ' smallest' → logprob: -11.01759147644043

Token 446: ' smallest' (ID: 42173)
  Prédit: ' smallest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -0.1482679694890976
    2. 'small' → logprob: -2.523267984390259
    3. '_small' → logprob: -4.39826774597168
    4. 'largest' → logprob: -4.64826774597168
    5. 'element' → logprob: -5.14826774597168
    6. '-small' → logprob: -5.39826774597168
    7. ' element' → logprob: -5.52326774597168
    8. 'order' → logprob: -5.64826774597168
    9. ' order' → logprob: -5.77326774597168
    10. 'token' → logprob: -6.14826774597168

Token 447: ' in' (ID: 306)
  Prédit: ' element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.23557095229625702
    2. 'element' → logprob: -2.8605709075927734
    3. '<|end|>' → logprob: -3.6105709075927734
    4. ')' → logprob: -3.7355709075927734
    5. ' index' → logprob: -3.8605709075927734
    6. 'value' → logprob: -4.235570907592773
    7. 'index' → logprob: -4.610570907592773
    8. ' value' → logprob: -4.610570907592773
    9. '
' → logprob: -4.735570907592773
    10. '<|end|>' → logprob: -5.110570907592773

Token 448: ' this' (ID: 495)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.9415368437767029
    2. 'the' → logprob: -1.1915369033813477
    3. ' fen' → logprob: -1.9415369033813477
    4. 'window' → logprob: -3.1915369033813477
    5. ' the' → logprob: -3.5665369033813477
    6. 'Fen' → logprob: -3.8165369033813477
    7. 'self' → logprob: -4.066536903381348
    8. 'pos' → logprob: -4.566536903381348
    9. ' Fen' → logprob: -4.941536903381348
    10. 'sub' → logprob: -4.941536903381348

Token 449: ' window' (ID: 5734)
  Prédit: ' sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -1.1171808242797852
    2. 'sub' → logprob: -1.2421808242797852
    3. 'window' → logprob: -1.6171808242797852
    4. ' window' → logprob: -2.242180824279785
    5. 'length' → logprob: -3.867180824279785
    6. ' segment' → logprob: -4.117180824279785
    7. 'segment' → logprob: -4.117180824279785
    8. ' length' → logprob: -5.367180824279785
    9. ' range' → logprob: -5.492180824279785
    10. 'range' → logprob: -5.742180824279785

Token 450: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 451: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02707565203309059
    2. '       ' → logprob: -3.90207576751709
    3. '<|end|>' → logprob: -6.15207576751709
    4. '
' → logprob: -7.40207576751709
    5. ')' → logprob: -7.52707576751709
    6. ' return' → logprob: -7.90207576751709
    7. '        ' → logprob: -8.02707576751709
    8. 'return' → logprob: -8.15207576751709
    9. '            
' → logprob: -8.40207576751709
    10. '   ' → logprob: -8.52707576751709

Token 452: ' #' (ID: 1069)
  Prédit: ' fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fen' → logprob: -0.5710370540618896
    2. '           ' → logprob: -1.3210370540618896
    3. '       ' → logprob: -2.6960370540618896
    4. 'fen' → logprob: -3.6960370540618896
    5. ' for' → logprob: -3.8210370540618896
    6. ' return' → logprob: -4.571037292480469
    7. 'for' → logprob: -4.821037292480469
    8. 'return' → logprob: -5.571037292480469
    9. ' i' → logprob: -5.821037292480469
    10. ' left' → logprob: -5.821037292480469

Token 453: ' We' (ID: 1416)
  Prédit: ' fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fen' → logprob: -0.40956413745880127
    2. 'fen' → logprob: -1.5345641374588013
    3. 'low' → logprob: -3.6595640182495117
    4. 'res' → logprob: -4.159564018249512
    5. ' low' → logprob: -4.784564018249512
    6. 'freq' → logprob: -4.909564018249512
    7. 'left' → logprob: -4.909564018249512
    8. 'pos' → logprob: -5.409564018249512
    9. '           ' → logprob: -5.409564018249512
    10. '#' → logprob: -5.534564018249512

Token 454: ' will' (ID: 738)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5220955610275269
    2. '       ' → logprob: -2.3970956802368164
    3. 'def' → logprob: -2.8970956802368164
    4. 'continue' → logprob: -3.0220956802368164
    5. 'left' → logprob: -3.5220956802368164
    6. 'l' → logprob: -4.147095680236816
    7. '   ' → logprob: -4.147095680236816
    8. '#' → logprob: -4.522095680236816
    9. 'start' → logprob: -4.522095680236816
    10. 'need' → logprob: -4.647095680236816

Token 455: ' use' (ID: 1199)
  Prédit: ' use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' use' → logprob: -2.3129851818084717
    2. 'count' → logprob: -2.4379851818084717
    3. 'update' → logprob: -2.4379851818084717
    4. 'add' → logprob: -2.5629851818084717
    5. ' add' → logprob: -2.5629851818084717
    6. 'use' → logprob: -3.0629851818084717
    7. 'increment' → logprob: -3.0629851818084717
    8. 'continue' → logprob: -3.3129851818084717
    9. 'fen' → logprob: -3.3129851818084717
    10. 'def' → logprob: -3.4379851818084717

Token 456: ' fen' (ID: 25170)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.22953294217586517
    2. ' fen' → logprob: -1.6045329570770264
    3. 'the' → logprob: -6.729532718658447
    4. 'Fen' → logprob: -7.479532718658447
    5. 'def' → logprob: -7.729532718658447
    6. 'self' → logprob: -7.979532718658447
    7. 'for' → logprob: -7.979532718658447
    8. ' the' → logprob: -8.229533195495605
    9. '           ' → logprob: -8.979533195495605
    10. 'k' → logprob: -9.104533195495605

Token 457: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00018494461255613714
    2. '       ' → logprob: -8.750185012817383
    3. '   ' → logprob: -12.000185012817383
    4. '
' → logprob: -13.062685012817383
    5. '```' → logprob: -13.437685012817383
    6. ' w' → logprob: -13.625185012817383
    7. '	w' → logprob: -13.812685012817383
    8. ')' → logprob: -14.312685012817383
    9. '           ' → logprob: -14.312685012817383
    10. '        ' → logprob: -14.437685012817383

Token 458: ' to' (ID: 316)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.045574139803647995
    2. '       ' → logprob: -3.795574188232422
    3. '.' → logprob: -4.545574188232422
    4. '           ' → logprob: -4.920574188232422
    5. '   ' → logprob: -7.420574188232422
    6. '.query' → logprob: -7.795574188232422
    7. ')' → logprob: -8.045574188232422
    8. '
' → logprob: -8.170574188232422
    9. '               ' → logprob: -8.295574188232422
    10. ',' → logprob: -8.420574188232422

Token 459: ' find' (ID: 1646)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9272198677062988
    2. 'update' → logprob: -1.1772198677062988
    3. ' update' → logprob: -2.677219867706299
    4. '
' → logprob: -3.552219867706299
    5. ' count' → logprob: -3.802219867706299
    6. 'fen' → logprob: -4.052219867706299
    7. 'query' → logprob: -4.302219867706299
    8. 'add' → logprob: -4.302219867706299
    9. 'for' → logprob: -4.552219867706299
    10. '#' → logprob: -4.552219867706299

Token 460: ' if' (ID: 538)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2339986115694046
    2. ' the' → logprob: -1.7339986562728882
    3. 'k' → logprob: -4.358998775482178
    4. 'x' → logprob: -4.858998775482178
    5. 'self' → logprob: -5.733998775482178
    6. ' kth' → logprob: -6.608998775482178
    7. '<|end|>' → logprob: -7.483998775482178
    8. '
' → logprob: -7.608998775482178
    9. ')' → logprob: -7.733998775482178
    10. 'for' → logprob: -7.858998775482178

Token 461: ' kth' (ID: 195512)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10210490971803665
    2. ' self' → logprob: -3.227104902267456
    3. 'fen' → logprob: -3.727104902267456
    4. 'the' → logprob: -4.602105140686035
    5. ' fen' → logprob: -5.352105140686035
    6. 'k' → logprob: -5.352105140686035
    7. 'x' → logprob: -5.477105140686035
    8. 'count' → logprob: -5.602105140686035
    9. ' the' → logprob: -5.852105140686035
    10. '           ' → logprob: -6.977105140686035

Token 462: ' smallest' (ID: 42173)
  Prédit: ' smallest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -1.0160801410675049
    2. '<=' → logprob: -1.6410801410675049
    3. 'small' → logprob: -1.6410801410675049
    4. '_small' → logprob: -2.391080141067505
    5. ' <=' → logprob: -3.016080141067505
    6. 'token' → logprob: -3.516080141067505
    7. ' token' → logprob: -4.516079902648926
    8. ' element' → logprob: -4.891079902648926
    9. ')' → logprob: -5.016079902648926
    10. 'element' → logprob: -5.141079902648926

Token 463: ' <=' (ID: 5017)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.0110607147216797
    2. ' element' → logprob: -1.2610607147216797
    3. 'element' → logprob: -2.0110607147216797
    4. ' exists' → logprob: -3.1360607147216797
    5. ' <=' → logprob: -3.1360607147216797
    6. '<=' → logprob: -3.5110607147216797
    7. 'value' → logprob: -4.13606071472168
    8. ' in' → logprob: -4.13606071472168
    9. ' value' → logprob: -4.38606071472168
    10. ' number' → logprob: -4.76106071472168

Token 464: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03366195037961006
    2. ' x' → logprob: -3.4086618423461914
    3. 'self' → logprob: -11.533661842346191
    4. ' self' → logprob: -13.283661842346191
    5. '
' → logprob: -13.783661842346191
    6. '	x' → logprob: -13.908661842346191
    7. '   ' → logprob: -14.033661842346191
    8. ' ' → logprob: -14.783661842346191
    9. ' ' → logprob: -14.908661842346191
    10. '           ' → logprob: -15.533661842346191

Token 465: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17042018473148346
    2. '           ' → logprob: -2.6704201698303223
    3. '
' → logprob: -3.6704201698303223
    4. '.' → logprob: -4.045420169830322
    5. ':' → logprob: -4.170420169830322
    6. ',' → logprob: -5.045420169830322
    7. '<|end|>' → logprob: -5.420420169830322
    8. ':
' → logprob: -5.795420169830322
    9. ')' → logprob: -6.045420169830322
    10. '        
' → logprob: -6.295420169830322

Token 466: ' 
' (ID: 793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.566382110118866
    2. '           ' → logprob: -1.1913821697235107
    3. ' if' → logprob: -3.6913821697235107
    4. ' for' → logprob: -3.9413821697235107
    5. '<|end|>' → logprob: -3.9413821697235107
    6. '   ' → logprob: -4.441381931304932
    7. ' ' → logprob: -4.941381931304932
    8. ')' → logprob: -5.066381931304932
    9. ' return' → logprob: -5.191381931304932
    10. '               ' → logprob: -5.691381931304932

Token 467: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40899381041526794
    2. '       ' → logprob: -1.1589938402175903
    3. ' if' → logprob: -5.033993721008301
    4. ' for' → logprob: -5.533993721008301
    5. '   ' → logprob: -6.033993721008301
    6. '               ' → logprob: -6.408993721008301
    7. ' pass' → logprob: -6.908993721008301
    8. ')' → logprob: -7.158993721008301
    9. 'for' → logprob: -7.533993721008301
    10. '<|end|>' → logprob: -7.658993721008301

Token 468: ' #' (ID: 1069)
  Prédit: ' fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fen' → logprob: -0.9626860618591309
    2. ')' → logprob: -1.5876860618591309
    3. '           ' → logprob: -1.8376860618591309
    4. '       ' → logprob: -2.337686061859131
    5. ' return' → logprob: -3.462686061859131
    6. ' for' → logprob: -3.837686061859131
    7. 'fen' → logprob: -3.962686061859131
    8. 'return' → logprob: -4.337686061859131
    9. 'for' → logprob: -4.462686061859131
    10. ' if' → logprob: -4.587686061859131

Token 469: ' But' (ID: 3072)
  Prédit: ' fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fen' → logprob: -1.1810424327850342
    2. ' return' → logprob: -1.8060424327850342
    3. ' for' → logprob: -2.181042432785034
    4. 'return' → logprob: -2.306042432785034
    5. 'fen' → logprob: -2.306042432785034
    6. '           ' → logprob: -2.431042432785034
    7. 'for' → logprob: -2.931042432785034
    8. '       ' → logprob: -4.181042671203613
    9. 'def' → logprob: -4.306042671203613
    10. '#' → logprob: -5.181042671203613

Token 470: ' here' (ID: 2105)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3452210426330566
    2. 'for' → logprob: -1.5952210426330566
    3. ' we' → logprob: -2.3452210426330566
    4. ' if' → logprob: -2.7202210426330566
    5. 'if' → logprob: -2.8452210426330566
    6. 'count' → logprob: -2.9702210426330566
    7. ' fen' → logprob: -3.3452210426330566
    8. 'we' → logprob: -3.3452210426330566
    9. ' the' → logprob: -3.5952210426330566
    10. '           ' → logprob: -3.8452210426330566

Token 471: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19800886511802673
    2. ' we' → logprob: -2.3230087757110596
    3. '           ' → logprob: -4.073009014129639
    4. 'we' → logprob: -4.198009014129639
    5. '               ' → logprob: -5.073009014129639
    6. 'x' → logprob: -5.323009014129639
    7. ' is' → logprob: -5.573009014129639
    8. ' the' → logprob: -5.698009014129639
    9. 'the' → logprob: -5.698009014129639
    10. '...' → logprob: -5.823009014129639

Token 472: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.8045576810836792
    2. '           ' → logprob: -2.0545578002929688
    3. ' for' → logprob: -2.1795578002929688
    4. 'return' → logprob: -2.3045578002929688
    5. ' return' → logprob: -2.4295578002929688
    6. ' we' → logprob: -2.4295578002929688
    7. 'for' → logprob: -3.0545578002929688
    8. ' fen' → logprob: -3.1795578002929688
    9. 'we' → logprob: -3.3045578002929688
    10. 'pass' → logprob: -3.4295578002929688

Token 473: ' must' (ID: 2804)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.4762534201145172
    2. 'need' → logprob: -1.1012533903121948
    3. ' only' → logprob: -4.601253509521484
    4. ' must' → logprob: -5.101253509521484
    5. ' want' → logprob: -5.976253509521484
    6. 'continue' → logprob: -6.226253509521484
    7. ' can' → logprob: -6.226253509521484
    8. ' just' → logprob: -6.351253509521484
    9. 'only' → logprob: -6.351253509521484
    10. ' first' → logprob: -6.351253509521484

Token 474: ' quickly' (ID: 8065)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.9642679691314697
    2. 'continue' → logprob: -2.2142679691314697
    3. 'increment' → logprob: -2.4642679691314697
    4. 'update' → logprob: -2.5892679691314697
    5. ' update' → logprob: -2.8392679691314697
    6. 'return' → logprob: -2.8392679691314697
    7. '           ' → logprob: -2.9642679691314697
    8. '       ' → logprob: -3.0892679691314697
    9. 'check' → logprob: -3.2142679691314697
    10. 'add' → logprob: -3.2142679691314697

Token 475: ' determine' (ID: 11433)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.7223083972930908
    2. 'return' → logprob: -1.8473083972930908
    3. 'update' → logprob: -1.8473083972930908
    4. 'add' → logprob: -2.722308397293091
    5. ' update' → logprob: -2.847308397293091
    6. 'check' → logprob: -3.097308397293091
    7. '       ' → logprob: -3.222308397293091
    8. ' return' → logprob: -3.347308397293091
    9. 'expand' → logprob: -3.597308397293091
    10. 'increment' → logprob: -3.597308397293091

Token 476: ' the' (ID: 290)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6647860407829285
    2. 'if' → logprob: -1.1647861003875732
    3. ' whether' → logprob: -3.0397861003875732
    4. '           ' → logprob: -3.1647861003875732
    5. 'whether' → logprob: -3.6647861003875732
    6. ' the' → logprob: -4.289785861968994
    7. 'the' → logprob: -4.539785861968994
    8. ' how' → logprob: -4.664785861968994
    9. '               ' → logprob: -5.164785861968994
    10. '       ' → logprob: -5.289785861968994

Token 477: ' K' (ID: 658)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -1.0220975875854492
    2. 'count' → logprob: -1.3970975875854492
    3. ' number' → logprob: -2.147097587585449
    4. 'total' → logprob: -2.897097587585449
    5. 'fen' → logprob: -3.272097587585449
    6. 'num' → logprob: -3.397097587585449
    7. ' count' → logprob: -4.022097587585449
    8. ' total' → logprob: -4.272097587585449
    9. 'if' → logprob: -4.522097587585449
    10. ' fen' → logprob: -4.522097587585449

Token 478: '-th' (ID: 14928)
  Prédit: '-th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-th' → logprob: -0.18075700104236603
    2. 'th' → logprob: -2.1807570457458496
    3. ' -' → logprob: -3.5557570457458496
    4. '-' → logprob: -4.05575704574585
    5. '   ' → logprob: -6.18075704574585
    6. '           ' → logprob: -6.80575704574585
    7. ' <=' → logprob: -7.43075704574585
    8. '       ' → logprob: -7.80575704574585
    9. ' if' → logprob: -7.93075704574585
    10. 'def' → logprob: -8.055756568908691

Token 479: ' smallest' (ID: 42173)
  Prédit: ' smallest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -0.1861194372177124
    2. 'small' → logprob: -1.9361194372177124
    3. ')' → logprob: -5.311119556427002
    4. '_small' → logprob: -5.311119556427002
    5. 'largest' → logprob: -5.686119556427002
    6. ' small' → logprob: -6.436119556427002
    7. '<=' → logprob: -6.561119556427002
    8. '-small' → logprob: -6.561119556427002
    9. 'token' → logprob: -6.936119556427002
    10. ' <=' → logprob: -7.186119556427002

Token 480: ' of' (ID: 328)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6939077973365784
    2. ' if' → logprob: -1.8189077377319336
    3. ' element' → logprob: -2.0689077377319336
    4. '           ' → logprob: -3.3189077377319336
    5. ' value' → logprob: -3.4439077377319336
    6. '       ' → logprob: -3.8189077377319336
    7. '   ' → logprob: -3.9439077377319336
    8. ':' → logprob: -4.818907737731934
    9. ' to' → logprob: -4.943907737731934
    10. '               ' → logprob: -5.068907737731934

Token 481: ' current' (ID: 2208)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3495500683784485
    2. ' the' → logprob: -1.9745500087738037
    3. 'self' → logprob: -2.8495500087738037
    4. 'count' → logprob: -3.8495500087738037
    5. ')' → logprob: -4.349550247192383
    6. 'arr' → logprob: -4.349550247192383
    7. 'window' → logprob: -4.724550247192383
    8. 'sub' → logprob: -5.099550247192383
    9. 'cards' → logprob: -5.224550247192383
    10. ' self' → logprob: -5.724550247192383

Token 482: ' window' (ID: 5734)
  Prédit: ' window'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' window' → logprob: -0.06307944655418396
    2. 'window' → logprob: -3.563079357147217
    3. ')' → logprob: -4.938079357147217
    4. ' fen' → logprob: -5.063079357147217
    5. ' elements' → logprob: -5.563079357147217
    6. ' sub' → logprob: -5.813079357147217
    7. '       ' → logprob: -6.563079357147217
    8. ' )' → logprob: -6.688079357147217
    9. '   ' → logprob: -7.063079357147217
    10. ' ' → logprob: -7.313079357147217

Token 483: ' <=' (ID: 5017)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0834154412150383
    2. '           ' → logprob: -3.4584155082702637
    3. '.' → logprob: -4.583415508270264
    4. ',' → logprob: -4.708415508270264
    5. ')' → logprob: -4.958415508270264
    6. '
' → logprob: -5.083415508270264
    7. '        
' → logprob: -5.708415508270264
    8. '<|end|>' → logprob: -6.333415508270264
    9. ' for' → logprob: -6.958415508270264
    10. ' and' → logprob: -6.958415508270264

Token 484: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16032131016254425
    2. ' x' → logprob: -1.9103213548660278
    3. 'self' → logprob: -10.035321235656738
    4. ' self' → logprob: -10.910321235656738
    5. 'pos' → logprob: -11.160321235656738
    6. '
' → logprob: -12.660321235656738
    7. '   ' → logprob: -13.035321235656738
    8. ' pos' → logprob: -13.035321235656738
    9. ' ' → logprob: -13.160321235656738
    10. '	x' → logprob: -13.535321235656738

Token 485: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11696235835552216
    2. '
' → logprob: -2.866962432861328
    3. '<|end|>' → logprob: -3.491962432861328
    4. ')' → logprob: -5.366962432861328
    5. '           ' → logprob: -5.616962432861328
    6. '.' → logprob: -5.741962432861328
    7. '<|end|>' → logprob: -5.741962432861328
    8. ',' → logprob: -6.116962432861328
    9. '        
' → logprob: -6.616962432861328
    10. ')
' → logprob: -7.991962432861328

Token 486: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26525425910949707
    2. '<|end|>' → logprob: -1.765254259109497
    3. '           ' → logprob: -3.765254259109497
    4. '
' → logprob: -4.390254020690918
    5. ')' → logprob: -4.765254020690918
    6. '<|end|>' → logprob: -5.390254020690918
    7. '.' → logprob: -6.265254020690918
    8. '        
' → logprob: -6.265254020690918
    9. '   ' → logprob: -6.515254020690918
    10. ' ' → logprob: -7.140254020690918

Token 487: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5872207880020142
    2. '       ' → logprob: -1.2122207880020142
    3. '
' → logprob: -3.0872206687927246
    4. '<|end|>' → logprob: -3.7122206687927246
    5. ' 
' → logprob: -4.462220668792725
    6. ':' → logprob: -4.837220668792725
    7. ' ' → logprob: -4.962220668792725
    8. '):
' → logprob: -4.962220668792725
    9. ')
' → logprob: -5.087220668792725
    10. ',' → logprob: -5.587220668792725

Token 488: ' Since' (ID: 12265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7583857774734497
    2. '           ' → logprob: -1.5083857774734497
    3. ' for' → logprob: -1.7583857774734497
    4. 'for' → logprob: -3.25838565826416
    5. ' i' → logprob: -4.25838565826416
    6. '#' → logprob: -4.63338565826416
    7. 'i' → logprob: -4.63338565826416
    8. ' fen' → logprob: -4.63338565826416
    9. ' return' → logprob: -4.88338565826416
    10. ')' → logprob: -5.13338565826416

Token 489: ' size' (ID: 2349)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.8917472958564758
    2. ' fen' → logprob: -1.391747236251831
    3. 'x' → logprob: -2.016747236251831
    4. 'count' → logprob: -2.516747236251831
    5. 'pos' → logprob: -3.891747236251831
    6. 'self' → logprob: -3.891747236251831
    7. '#' → logprob: -4.51674747467041
    8. '           ' → logprob: -5.01674747467041
    9. ' x' → logprob: -5.14174747467041
    10. 'len' → logprob: -5.14174747467041

Token 490: ' and' (ID: 326)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.7297643423080444
    2. '=' → logprob: -1.9797643423080444
    3. '       ' → logprob: -2.104764461517334
    4. ' =' → logprob: -2.104764461517334
    5. '           ' → logprob: -2.354764461517334
    6. ' is' → logprob: -2.604764461517334
    7. ' of' → logprob: -2.604764461517334
    8. 'of' → logprob: -3.229764461517334
    9. ' >' → logprob: -3.479764461517334
    10. ' ==' → logprob: -3.979764461517334

Token 491: ' queries' (ID: 32122)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2314956188201904
    2. 'x' → logprob: -1.3564956188201904
    3. ' fen' → logprob: -1.9814956188201904
    4. 'k' → logprob: -3.3564956188201904
    5. 'pos' → logprob: -3.4814956188201904
    6. 'fen' → logprob: -3.9814956188201904
    7. ' not' → logprob: -3.9814956188201904
    8. 'the' → logprob: -3.9814956188201904
    9. ' complexity' → logprob: -3.9814956188201904
    10. '#' → logprob: -4.1064958572387695

Token 492: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.4778251051902771
    2. 'are' → logprob: -1.2278251647949219
    3. 'increase' → logprob: -3.852825164794922
    4. ' increase' → logprob: -4.727825164794922
    5. ' can' → logprob: -4.977825164794922
    6. '           ' → logprob: -4.977825164794922
    7. ',' → logprob: -4.977825164794922
    8. '       ' → logprob: -5.352825164794922
    9. 'can' → logprob: -6.102825164794922
    10. ' is' → logprob: -6.102825164794922

Token 493: ' huge' (ID: 9560)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.7135552763938904
    2. 'small' → logprob: -1.2135553359985352
    3. 'dynamic' → logprob: -2.088555335998535
    4. ' large' → logprob: -3.838555335998535
    5. 'limited' → logprob: -4.338555335998535
    6. ' small' → logprob: -4.463555335998535
    7. ' dynamic' → logprob: -4.588555335998535
    8. 'too' → logprob: -5.213555335998535
    9. 'unknown' → logprob: -6.213555335998535
    10. ' limited' → logprob: -6.463555335998535

Token 494: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3642483353614807
    2. '           ' → logprob: -1.739248275756836
    3. '       ' → logprob: -2.114248275756836
    4. ',
' → logprob: -6.489248275756836
    5. '<|end|>' → logprob: -6.864248275756836
    6. '<|end|>' → logprob: -6.989248275756836
    7. '               ' → logprob: -7.239248275756836
    8. '.' → logprob: -7.489248275756836
    9. ' and' → logprob: -7.614248275756836
    10. ' ,' → logprob: -7.739248275756836

Token 495: ' we' (ID: 581)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.754257321357727
    2. '           ' → logprob: -1.379257321357727
    3. 'return' → logprob: -1.629257321357727
    4. '       ' → logprob: -3.1292572021484375
    5. '#' → logprob: -4.3792572021484375
    6. ' for' → logprob: -5.1292572021484375
    7. ' pass' → logprob: -5.5042572021484375
    8. '               ' → logprob: -5.5042572021484375
    9. '   ' → logprob: -6.6292572021484375
    10. '<|end|>' → logprob: -6.7542572021484375

Token 496: ' don't' (ID: 4128)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5117715001106262
    2. '       ' → logprob: -1.6367714405059814
    3. 'continue' → logprob: -3.2617714405059814
    4. ' must' → logprob: -3.3867714405059814
    5. ' need' → logprob: -3.7617714405059814
    6. ' continue' → logprob: -4.1367716789245605
    7. ' can' → logprob: -4.2617716789245605
    8. 'return' → logprob: -4.2617716789245605
    9. ' should' → logprob: -4.5117716789245605
    10. ' return' → logprob: -4.5117716789245605

Token 497: ' do' (ID: 621)
  Prédit: 'maint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maint' → logprob: -0.5938735008239746
    2. 'have' → logprob: -1.4688735008239746
    3. '       ' → logprob: -3.4688735008239746
    4. ' have' → logprob: -3.4688735008239746
    5. '           ' → logprob: -3.8438735008239746
    6. 'implement' → logprob: -3.8438735008239746
    7. 'continue' → logprob: -3.9688735008239746
    8. 'return' → logprob: -4.093873500823975
    9. ' maintain' → logprob: -4.218873500823975
    10. 'use' → logprob: -4.593873500823975

Token 498: ' per' (ID: 777)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'full' → logprob: -1.683990716934204
    2. 'increment' → logprob: -1.933990716934204
    3. 'na' → logprob: -2.183990716934204
    4. 'the' → logprob: -2.308990716934204
    5. 'binary' → logprob: -2.933990716934204
    6. 'br' → logprob: -3.058990716934204
    7. 'a' → logprob: -3.308990716934204
    8. 'fen' → logprob: -3.308990716934204
    9. '       ' → logprob: -3.433990716934204
    10. '   ' → logprob: -3.558990716934204

Token 499: ' sub' (ID: 1543)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.1985636949539185
    2. ' element' → logprob: -1.3235636949539185
    3. 'element' → logprob: -1.9485636949539185
    4. ' pass' → logprob: -2.573563575744629
    5. 'token' → logprob: -3.323563575744629
    6. '-element' → logprob: -3.448563575744629
    7. 'for' → logprob: -3.698563575744629
    8. '           ' → logprob: -4.198563575744629
    9. '               ' → logprob: -4.198563575744629
    10. 'return' → logprob: -4.448563575744629

Token 500: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.048478465527296066
    2. '       ' → logprob: -4.173478603363037
    3. '           ' → logprob: -4.298478603363037
    4. 'arr' → logprob: -5.173478603363037
    5. ' array' → logprob: -5.673478603363037
    6. '               ' → logprob: -6.048478603363037
    7. 'arrays' → logprob: -6.423478603363037
    8. 'window' → logprob: -6.923478603363037
    9. '   ' → logprob: -7.048478603363037
    10. '#' → logprob: -7.173478603363037

Token 501: ' check' (ID: 2371)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02320866845548153
    2. '
' → logprob: -5.2732086181640625
    3. '           ' → logprob: -5.6482086181640625
    4. '        
' → logprob: -5.8982086181640625
    5. ',' → logprob: -6.0232086181640625
    6. '.' → logprob: -6.5232086181640625
    7. ')' → logprob: -6.6482086181640625
    8. '   ' → logprob: -6.8982086181640625
    9. ' for' → logprob: -7.3982086181640625
    10. ' and' → logprob: -7.5232086181640625

Token 502: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5154131650924683
    2. '<|end|>' → logprob: -1.0154131650924683
    3. '<|end|>' → logprob: -3.640413284301758
    4. '.' → logprob: -5.515413284301758
    5. '           ' → logprob: -5.640413284301758
    6. ',' → logprob: -6.640413284301758
    7. ')' → logprob: -6.890413284301758
    8. '...' → logprob: -7.015413284301758
    9. '
' → logprob: -7.390413284301758
    10. '        
' → logprob: -7.390413284301758

Token 503: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0773942694067955
    2. '           ' → logprob: -3.0773942470550537
    3. '<|end|>' → logprob: -4.077394485473633
    4. '        
' → logprob: -5.952394485473633
    5. '   ' → logprob: -6.827394485473633
    6. ')' → logprob: -6.827394485473633
    7. '<|end|>' → logprob: -6.952394485473633
    8. '#' → logprob: -7.202394485473633
    9. '        ' → logprob: -7.702394485473633
    10. ' for' → logprob: -7.827394485473633

Token 504: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03600585460662842
    2. '<|end|>' → logprob: -4.536005973815918
    3. '           ' → logprob: -4.786005973815918
    4. ')' → logprob: -5.411005973815918
    5. '   ' → logprob: -6.286005973815918
    6. ' pass' → logprob: -6.786005973815918
    7. '#' (adapté à ' #') → logprob: -6.911005973815918
    8. '               ' → logprob: -6.911005973815918
    9. 'return' → logprob: -7.161005973815918
    10. '        
' → logprob: -7.161005973815918

Token 505: ' Instead' (ID: 21050)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48299640417099
    2. '           ' → logprob: -1.6079964637756348
    3. 'return' → logprob: -2.8579964637756348
    4. ' pass' → logprob: -3.3579964637756348
    5. ' return' → logprob: -3.8579964637756348
    6. 'pass' → logprob: -3.8579964637756348
    7. '#' → logprob: -3.9829964637756348
    8. ')' → logprob: -5.232996463775635
    9. '<|end|>' → logprob: -5.482996463775635
    10. '   ' → logprob: -5.607996463775635

Token 506: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6862536072731018
    2. '           ' → logprob: -0.8112536072731018
    3. ',' → logprob: -4.311253547668457
    4. ' return' → logprob: -4.561253547668457
    5. ' for' → logprob: -4.811253547668457
    6. ' we' → logprob: -5.311253547668457
    7. 'return' → logprob: -6.186253547668457
    8. '   ' → logprob: -6.186253547668457
    9. 'def' → logprob: -6.436253547668457
    10. '               ' → logprob: -6.811253547668457

Token 507: ' approach' (ID: 7139)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -1.0264194011688232
    2. ' return' → logprob: -1.6514194011688232
    3. '           ' → logprob: -2.1514194011688232
    4. '       ' → logprob: -2.2764194011688232
    5. ' for' → logprob: -2.6514194011688232
    6. 'return' → logprob: -2.7764194011688232
    7. 'for' → logprob: -3.7764194011688232
    8. '#' → logprob: -3.9014194011688232
    9. 'pass' → logprob: -4.026419639587402
    10. ' left' → logprob: -5.276419639587402

Token 508: ' differently' (ID: 36490)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.556579053401947
    2. '           ' → logprob: -1.8065791130065918
    3. ':' → logprob: -2.181579113006592
    4. '       ' → logprob: -3.181579113006592
    5. '               ' → logprob: -3.681579113006592
    6. ' for' → logprob: -4.056579113006592
    7. ',' → logprob: -4.681579113006592
    8. '   ' → logprob: -5.056579113006592
    9. ' =' → logprob: -5.181579113006592
    10. '=' → logprob: -5.306579113006592

Token 509: ' below' (ID: 4895)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19050376117229462
    2. '<|end|>' → logprob: -1.940503716468811
    3. '<|end|>' → logprob: -4.3155035972595215
    4. ')' → logprob: -5.0655035972595215
    5. '
' → logprob: -5.4405035972595215
    6. '           ' → logprob: -6.4405035972595215
    7. '        
' → logprob: -6.9405035972595215
    8. '.' → logprob: -7.6905035972595215
    9. '        ' → logprob: -7.9405035972595215
    10. 'def' → logprob: -8.19050407409668

Token 510: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27690258622169495
    2. '<|end|>' → logprob: -1.7769025564193726
    3. '
' → logprob: -3.401902675628662
    4. ')' → logprob: -3.776902675628662
    5. '<|end|>' → logprob: -4.776902675628662
    6. '        
' → logprob: -6.526902675628662
    7. 'def' → logprob: -7.026902675628662
    8. '           ' → logprob: -7.151902675628662
    9. '.' → logprob: -7.401902675628662
    10. ',' → logprob: -7.526902675628662

Token 511: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 512: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10217174887657166
    2. ' pass' → logprob: -3.2271716594696045
    3. 'pass' → logprob: -3.7271716594696045
    4. '           ' → logprob: -3.9771716594696045
    5. ')' → logprob: -5.352171897888184
    6. 'return' (adapté à ' return') → logprob: -5.977171897888184
    7. '<|end|>' → logprob: -6.227171897888184
    8. '...' → logprob: -6.977171897888184
    9. '#' → logprob: -7.227171897888184
    10. 'def' → logprob: -7.352171897888184

Token 513: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4159892201423645
    2. ' fen' → logprob: -1.9159891605377197
    3. ' ' → logprob: -2.5409891605377197
    4. '1' → logprob: -3.1659891605377197
    5. 'fen' → logprob: -3.1659891605377197
    6. 'length' → logprob: -4.540989398956299
    7. 'int' → logprob: -6.165989398956299
    8. ' self' → logprob: -6.165989398956299
    9. ' None' → logprob: -6.165989398956299
    10. ' length' → logprob: -6.165989398956299

Token 514: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 515: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 516: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38871046900749207
    2. 'for' → logprob: -2.1387104988098145
    3. '<|end|>' → logprob: -2.5137104988098145
    4. ' for' → logprob: -3.1387104988098145
    5. ')' → logprob: -3.7637104988098145
    6. '   ' → logprob: -4.1387104988098145
    7. 'i' → logprob: -4.7637104988098145
    8. 'l' → logprob: -4.8887104988098145
    9. 'def' → logprob: -5.0137104988098145
    10. '#' (adapté à ' #') → logprob: -5.1387104988098145

Token 517: ' Due' (ID: 29584)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04070726037025452
    2. 'right' → logprob: -4.040707111358643
    3. 'for' → logprob: -4.040707111358643
    4. 'j' → logprob: -6.665707111358643
    5. ' r' → logprob: -6.665707111358643
    6. 'freq' → logprob: -7.540707111358643
    7. 'left' → logprob: -7.665707111358643
    8. 'l' → logprob: -8.2907075881958
    9. '   ' → logprob: -8.7907075881958
    10. 'from' → logprob: -9.1657075881958

Token 518: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6452824473381042
    2. 'f' → logprob: -1.645282506942749
    3. 'for' → logprob: -1.895282506942749
    4. 'x' → logprob: -2.645282506942749
    5. '   ' → logprob: -3.895282506942749
    6. '=' → logprob: -4.39528226852417
    7. ' =' → logprob: -5.27028226852417
    8. 'while' → logprob: -5.64528226852417
    9. '      ' → logprob: -5.77028226852417
    10. ' for' → logprob: -5.89528226852417

Token 519: ' extreme' (ID: 23700)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7732729911804199
    2. 'self' → logprob: -1.52327299118042
    3. ' the' → logprob: -1.77327299118042
    4. 'the' → logprob: -2.77327299118042
    5. ' len' → logprob: -3.27327299118042
    6. 'len' → logprob: -3.64827299118042
    7. ' None' → logprob: -4.89827299118042
    8. 'None' → logprob: -5.77327299118042
    9. ' not' → logprob: -6.77327299118042
    10. ' ' → logprob: -6.89827299118042

Token 520: ' complexity' (ID: 37588)
  Prédit: ' constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.37108364701271057
    2. 'constraints' → logprob: -2.9960837364196777
    3. ' size' → logprob: -3.2460837364196777
    4. ' memory' → logprob: -3.2460837364196777
    5. ' N' → logprob: -3.4960837364196777
    6. '   ' → logprob: -3.9960837364196777
    7. 'size' → logprob: -4.121083736419678
    8. '       ' → logprob: -4.371083736419678
    9. 'N' → logprob: -4.496083736419678
    10. 'length' → logprob: -4.871083736419678

Token 521: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3158399164676666
    2. ',' → logprob: -1.8158398866653442
    3. '<|end|>' → logprob: -3.565840005874634
    4. '<|end|>' → logprob: -3.565840005874634
    5. '
' → logprob: -3.690840005874634
    6. ' for' → logprob: -4.440839767456055
    7. ',
' → logprob: -4.940839767456055
    8. '#' → logprob: -6.440839767456055
    9. '        
' → logprob: -6.815839767456055
    10. 'for' → logprob: -7.315839767456055

Token 522: ' apply' (ID: 6096)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0393409729003906
    2. ' for' → logprob: -2.0393409729003906
    3. ' pass' → logprob: -2.2893409729003906
    4. '#' → logprob: -2.5393409729003906
    5. 'return' → logprob: -2.7893409729003906
    6. '       ' → logprob: -2.9143409729003906
    7. ' #' → logprob: -3.1643409729003906
    8. ' l' → logprob: -3.4143409729003906
    9. ' right' → logprob: -3.4143409729003906
    10. 'r' → logprob: -3.9143409729003906

Token 523: ' binary' (ID: 15600)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.2773837447166443
    2. 'two' → logprob: -1.527383804321289
    3. ' a' → logprob: -4.527383804321289
    4. ' the' → logprob: -5.402383804321289
    5. ' binary' → logprob: -6.152383804321289
    6. ' an' → logprob: -6.277383804321289
    7. 'the' → logprob: -6.527383804321289
    8. 'a' → logprob: -6.777383804321289
    9. 'binary' → logprob: -7.027383804321289
    10. ' l' → logprob: -7.027383804321289

Token 524: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.6531168818473816
    2. 'search' → logprob: -0.7781168818473816
    3. '_search' → logprob: -3.9031169414520264
    4. '   ' → logprob: -10.278117179870605
    5. '       ' → logprob: -10.528117179870605
    6. '
' → logprob: -11.028117179870605
    7. '```' → logprob: -11.153117179870605
    8. ' searching' → logprob: -11.903117179870605
    9. '	search' → logprob: -12.153117179870605
    10. '-search' → logprob: -12.653117179870605

Token 525: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4418434798717499
    2. '       ' → logprob: -1.1918435096740723
    3. 'for' → logprob: -3.9418435096740723
    4. ',' → logprob: -4.691843509674072
    5. ' on' → logprob: -5.191843509674072
    6. '
' → logprob: -5.691843509674072
    7. ' left' → logprob: -6.566843509674072
    8. '        
' → logprob: -6.566843509674072
    9. ' and' → logprob: -6.691843509674072
    10. '   ' → logprob: -6.941843509674072

Token 526: ' answer' (ID: 6052)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.4189822673797607
    2. ' self' → logprob: -1.5439822673797607
    3. ' the' → logprob: -1.7939822673797607
    4. 'x' → logprob: -2.0439822673797607
    5. ' x' → logprob: -2.0439822673797607
    6. 'the' → logprob: -3.1689822673797607
    7. ' value' → logprob: -4.29398250579834
    8. 'value' → logprob: -4.79398250579834
    9. ' answer' → logprob: -4.79398250579834
    10. ' compressed' → logprob: -5.29398250579834

Token 527: ' range' (ID: 3352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41164398193359375
    2. '
' → logprob: -1.6616439819335938
    3. ')' → logprob: -3.5366439819335938
    4. ',' → logprob: -3.5366439819335938
    5. '   ' → logprob: -4.036643981933594
    6. ' for' → logprob: -4.036643981933594
    7. '<|end|>' → logprob: -4.786643981933594
    8. 'def' → logprob: -5.036643981933594
    9. '        
' → logprob: -5.286643981933594
    10. '<|end|>' → logprob: -5.411643981933594

Token 528: ',
' (ID: 412)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23727944493293762
    2. '#' → logprob: -2.2372794151306152
    3. ' and' → logprob: -3.3622794151306152
    4. '...' → logprob: -3.7372794151306152
    5. ' for' → logprob: -3.7372794151306152
    6. 'for' → logprob: -5.362279415130615
    7. ' #' → logprob: -5.862279415130615
    8. 'and' → logprob: -6.237279415130615
    9. '<|end|>' → logprob: -6.487279415130615
    10. '   ' → logprob: -6.487279415130615

Token 530: ' #' (ID: 1069)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9513462781906128
    2. '       ' → logprob: -1.7013462781906128
    3. '#' (adapté à ' #') → logprob: -1.8263462781906128
    4. 'and' → logprob: -1.9513462781906128
    5. ' then' → logprob: -3.2013463973999023
    6. '           ' → logprob: -3.9513463973999023
    7. ' but' → logprob: -4.576346397399902
    8. 'for' → logprob: -4.701346397399902
    9. ' for' → logprob: -4.826346397399902
    10. ' so' → logprob: -5.576346397399902

Token 531: ' then' (ID: 1815)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13444016873836517
    2. '       ' → logprob: -2.8844401836395264
    3. 'right' → logprob: -3.6344401836395264
    4. 'for' → logprob: -4.384439945220947
    5. ' #' → logprob: -4.759439945220947
    6. ' for' → logprob: -5.134439945220947
    7. 'return' → logprob: -5.509439945220947
    8. ' right' → logprob: -5.759439945220947
    9. '...' → logprob: -6.384439945220947
    10. 'left' → logprob: -6.634439945220947

Token 532: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5147838592529297
    2. ' for' → logprob: -1.5147838592529297
    3. ' return' → logprob: -1.8897838592529297
    4. 'return' → logprob: -2.1397838592529297
    5. 'for' → logprob: -2.6397838592529297
    6. '#' → logprob: -3.3897838592529297
    7. '
' → logprob: -3.5147838592529297
    8. ' #' → logprob: -3.5147838592529297
    9. ' continue' → logprob: -3.7647838592529297
    10. ' l' → logprob: -3.8897838592529297

Token 533: ' how' (ID: 1495)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09904507547616959
    2. '   ' → logprob: -3.8490450382232666
    3. 'for' → logprob: -4.099045276641846
    4. '=' → logprob: -4.349045276641846
    5. 'while' → logprob: -4.474045276641846
    6. ')' → logprob: -4.974045276641846
    7. ' for' → logprob: -5.724045276641846
    8. ' =' → logprob: -5.974045276641846
    9. '           ' → logprob: -6.349045276641846
    10. '+=' → logprob: -6.724045276641846

Token 534: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.5245814323425293
    2. ' many' → logprob: -1.2745814323425293
    3. '       ' → logprob: -3.1495814323425293
    4. '<=' → logprob: -3.3995814323425293
    5. 'self' → logprob: -4.524581432342529
    6. 'def' → logprob: -4.774581432342529
    7. 'l' → logprob: -5.274581432342529
    8. 'for' → logprob: -5.649581432342529
    9. ' far' → logprob: -6.024581432342529
    10. 'x' → logprob: -6.274581432342529

Token 535: ' K' (ID: 658)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -1.090093970298767
    2. '       ' → logprob: -1.965093970298767
    3. ' sub' → logprob: -2.4650940895080566
    4. '   ' → logprob: -2.4650940895080566
    5. 'l' → logprob: -3.0900940895080566
    6. 'windows' → logprob: -3.2150940895080566
    7. ' windows' → logprob: -3.3400940895080566
    8. ' l' → logprob: -3.4650940895080566
    9. 'for' → logprob: -3.5900940895080566
    10. '=' → logprob: -4.090094089508057

Token 536: '-th' (ID: 14928)
  Prédit: '-th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-th' → logprob: -0.7568201422691345
    2. '-' → logprob: -1.6318202018737793
    3. ' -' → logprob: -2.3818202018737793
    4. '       ' → logprob: -2.5068202018737793
    5. 'th' → logprob: -2.7568202018737793
    6. '   ' → logprob: -3.6318202018737793
    7. 'def' → logprob: -4.256820201873779
    8. '#' → logprob: -4.256820201873779
    9. '           ' → logprob: -4.631820201873779
    10. ')' → logprob: -4.881820201873779

Token 537: ' statistics' (ID: 21729)
  Prédit: ' smallest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -1.0859870910644531
    2. 'small' → logprob: -1.5859870910644531
    3. '_small' → logprob: -1.7109870910644531
    4. 'order' → logprob: -2.710987091064453
    5. 'sub' → logprob: -3.335987091064453
    6. ' order' → logprob: -3.460987091064453
    7. '_order' → logprob: -3.460987091064453
    8. '#' → logprob: -4.210987091064453
    9. '-small' → logprob: -4.585987091064453
    10. 'statistics' → logprob: -4.585987091064453

Token 538: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.281465083360672
    2. ' <=' → logprob: -2.0314650535583496
    3. '<|end|>' → logprob: -4.03146505355835
    4. ' are' → logprob: -4.53146505355835
    5. ' >=' → logprob: -4.78146505355835
    6. ' is' → logprob: -4.78146505355835
    7. '<=' → logprob: -4.78146505355835
    8. '   ' → logprob: -4.78146505355835
    9. ' in' → logprob: -5.28146505355835
    10. '           ' → logprob: -5.40646505355835

Token 539: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.16824908554553986
    2. '>=' → logprob: -3.0432491302490234
    3. '#' → logprob: -3.5432491302490234
    4. ' <=' → logprob: -3.7932491302490234
    5. 'found' → logprob: -3.9182491302490234
    6. 'less' → logprob: -4.168249130249023
    7. '```' → logprob: -5.668249130249023
    8. 'greater' → logprob: -6.043249130249023
    9. 'valid' → logprob: -6.293249130249023
    10. 'from' → logprob: -6.668249130249023

Token 540: ' candidate' (ID: 17098)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6326528787612915
    2. ' x' → logprob: -0.7576528787612915
    3. '1' → logprob: -11.38265323638916
    4. ' ' → logprob: -11.88265323638916
    5. '```' → logprob: -12.13265323638916
    6. '   ' → logprob: -12.25765323638916
    7. ' ' → logprob: -12.38265323638916
    8. '
' → logprob: -12.63265323638916
    9. '           ' → logprob: -13.38265323638916
    10. '	x' → logprob: -13.38265323638916

Token 541: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.425466388463974
    2. '<|end|>' → logprob: -1.5504664182662964
    3. '
' → logprob: -2.425466299057007
    4. '<|end|>' → logprob: -3.800466299057007
    5. '   ' → logprob: -5.425466537475586
    6. '#' → logprob: -5.675466537475586
    7. ')' → logprob: -5.925466537475586
    8. ',' → logprob: -6.175466537475586
    9. 'def' → logprob: -6.300466537475586
    10. '        
' → logprob: -6.425466537475586

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08588904142379761
    2. '<|end|>' → logprob: -3.0858891010284424
    3. '#' → logprob: -4.585888862609863
    4. ')' → logprob: -5.585888862609863
    5. ' for' → logprob: -5.710888862609863
    6. '
' → logprob: -5.710888862609863
    7. 'for' → logprob: -6.085888862609863
    8. 'right' → logprob: -6.585888862609863
    9. 'r' → logprob: -6.585888862609863
    10. '...' → logprob: -6.710888862609863

Token 543: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6293136477470398
    2. 'left' → logprob: -2.1293137073516846
    3. 'low' → logprob: -2.2543137073516846
    4. '       ' → logprob: -2.6293137073516846
    5. 'right' → logprob: -3.1293137073516846
    6. '#' (adapté à ' #') → logprob: -3.3793137073516846
    7. 'for' → logprob: -3.7543137073516846
    8. 'def' → logprob: -4.1293134689331055
    9. 'min' → logprob: -4.2543134689331055
    10. '   ' → logprob: -5.3793134689331055

Token 544: ' D' (ID: 415)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.6192797422409058
    2. 'r' → logprob: -2.3692798614501953
    3. '       ' → logprob: -2.4942798614501953
    4. 'for' → logprob: -2.4942798614501953
    5. ' for' → logprob: -3.3692798614501953
    6. ' right' → logprob: -3.3692798614501953
    7. 'window' → logprob: -3.3692798614501953
    8. 'left' → logprob: -3.6192798614501953
    9. '#' → logprob: -4.744279861450195
    10. 'l' → logprob: -4.744279861450195

Token 545: 'AP' (ID: 2685)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.31193047761917114
    2. 'ef' → logprob: -1.9369304180145264
    3. 'eft' → logprob: -2.4369304180145264
    4. 'left' → logprob: -4.6869306564331055
    5. 'for' → logprob: -4.9369306564331055
    6. 'def' → logprob: -5.3119306564331055
    7. '#' → logprob: -6.0619306564331055
    8. '   ' → logprob: -6.1869306564331055
    9. 'eff' → logprob: -6.5619306564331055
    10. 'low' → logprob: -6.5619306564331055

Token 546: '-based' (ID: 8235)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.07436647266149521
    2. 'def' → logprob: -4.074366569519043
    3. ' ' → logprob: -4.449366569519043
    4. '<|end|>' → logprob: -4.449366569519043
    5. '#' → logprob: -4.949366569519043
    6. 'e' → logprob: -5.074366569519043
    7. '   ' → logprob: -5.449366569519043
    8. 'f' → logprob: -5.574366569519043
    9. '    ' → logprob: -6.824366569519043
    10. 'for' → logprob: -6.949366569519043

Token 547: ' solution' (ID: 7578)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.4783817529678345
    2. 'def' → logprob: -1.7283817529678345
    3. '#' → logprob: -2.228381633758545
    4. '<|end|>' → logprob: -2.353381633758545
    5. ' for' → logprob: -2.478381633758545
    6. '       ' → logprob: -2.728381633758545
    7. ' #' → logprob: -3.103381633758545
    8. 'for' → logprob: -3.853381633758545
    9. '   ' → logprob: -3.978381633758545
    10. ')' → logprob: -4.103381633758545

Token 548: ' abstract' (ID: 13004)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 549: 'ed' (ID: 295)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 550: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 551: ' count' (ID: 3605)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 552: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8792298436164856
    2. '<|end|>' → logprob: -1.5042297840118408
    3. '<|end|>' → logprob: -2.004229784011841
    4. ' =' → logprob: -2.129229784011841
    5. '_' → logprob: -3.879229784011841
    6. ')' → logprob: -4.00423002243042
    7. '=' → logprob: -4.87923002243042
    8. '        ' → logprob: -4.87923002243042
    9. '   ' → logprob: -5.00423002243042
    10. '#' → logprob: -5.25423002243042

Token 553: ' number' (ID: 2086)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4057800769805908
    2. '       ' → logprob: -1.5307800769805908
    3. '+=' → logprob: -1.5307800769805908
    4. ' =' → logprob: -2.530780076980591
    5. ' +=' → logprob: -2.655780076980591
    6. '   ' → logprob: -3.030780076980591
    7. '_sub' → logprob: -4.030779838562012
    8. '#' → logprob: -4.405779838562012
    9. '<|end|>' → logprob: -4.655779838562012
    10. 'count' → logprob: -4.780779838562012

Token 554: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9733321070671082
    2. 'of' → logprob: -0.9733321070671082
    3. ' of' → logprob: -2.848332166671753
    4. '=' → logprob: -3.348332166671753
    5. ' =' → logprob: -3.473332166671753
    6. '_of' → logprob: -3.723332166671753
    7. '
' → logprob: -3.848332166671753
    8. '#' → logprob: -4.598331928253174
    9. 'for' → logprob: -4.723331928253174
    10. '   ' → logprob: -4.723331928253174

Token 555: ' K' (ID: 658)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.06003487482666969
    2. 'valid' → logprob: -3.685034990310669
    3. ' sub' → logprob: -4.56003475189209
    4. 'k' → logprob: -5.18503475189209
    5. ' valid' → logprob: -5.31003475189209
    6. 'self' → logprob: -5.56003475189209
    7. 'windows' → logprob: -6.06003475189209
    8. 'def' → logprob: -6.56003475189209
    9. 'K' → logprob: -6.93503475189209
    10. '#' → logprob: -7.68503475189209

Token 556: '-th' (ID: 14928)
  Prédit: '-th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-th' → logprob: -0.11144760996103287
    2. '-' → logprob: -3.23644757270813
    3. 'th' → logprob: -3.36144757270813
    4. ' -' → logprob: -4.236447811126709
    5. '_th' → logprob: -4.736447811126709
    6. '   ' → logprob: -5.861447811126709
    7. '_' → logprob: -6.486447811126709
    8. 'def' → logprob: -7.861447811126709
    9. ')' → logprob: -7.986447811126709
    10. '#' → logprob: -8.23644733428955

Token 557: ' statistics' (ID: 21729)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_order' → logprob: -1.5090123414993286
    2. '_statistics' → logprob: -1.8840123414993286
    3. '_' → logprob: -2.259012222290039
    4. '_sub' → logprob: -2.759012222290039
    5. '_stat' → logprob: -2.884012222290039
    6. '_less' → logprob: -2.884012222290039
    7. 'statistics' → logprob: -3.009012222290039
    8. '   ' → logprob: -3.134012222290039
    9. '_stats' → logprob: -3.384012222290039
    10. ' _' → logprob: -3.634012222290039

Token 558: ' <=' (ID: 5017)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 559: ' val' (ID: 1459)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.38721928000450134
    2. 'x' → logprob: -1.1372193098068237
    3. ' ' → logprob: -9.887219429016113
    4. ' ' → logprob: -10.012219429016113
    5. ''' → logprob: -10.637219429016113
    6. '
' → logprob: -10.887219429016113
    7. ')' → logprob: -10.887219429016113
    8. '   ' → logprob: -11.012219429016113
    9. '`' → logprob: -11.137219429016113
    10. '```' → logprob: -11.262219429016113

Token 560: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7772062420845032
    2. '<|end|>' → logprob: -1.0272061824798584
    3. '
' → logprob: -2.1522061824798584
    4. '<|end|>' → logprob: -3.4022061824798584
    5. 'def' → logprob: -4.6522064208984375
    6. ')' → logprob: -5.0272064208984375
    7. '   ' → logprob: -5.4022064208984375
    8. '#' → logprob: -5.5272064208984375
    9. ',' → logprob: -6.0272064208984375
    10. '...' → logprob: -6.7772064208984375

Token 561: ' two' (ID: 1920)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sl' → logprob: -1.9440069198608398
    2. 'using' → logprob: -2.19400691986084
    3. 'binary' → logprob: -2.31900691986084
    4. 'def' → logprob: -2.31900691986084
    5. 'moving' → logprob: -2.81900691986084
    6. '#' → logprob: -3.06900691986084
    7. 'increment' → logprob: -3.06900691986084
    8. 'two' → logprob: -3.31900691986084
    9. 'return' → logprob: -3.44400691986084
    10. 'l' → logprob: -3.69400691986084

Token 562: ' pointers' (ID: 58762)
  Prédit: 'pointer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pointer' → logprob: -0.3886012136936188
    2. 'p' → logprob: -1.6386011838912964
    3. '-pointer' → logprob: -2.513601303100586
    4. ' pointers' → logprob: -3.888601303100586
    5. '_pointer' → logprob: -4.638601303100586
    6. '
' → logprob: -5.263601303100586
    7. '_p' → logprob: -5.388601303100586
    8. '-p' → logprob: -5.763601303100586
    9. 'ptr' → logprob: -6.638601303100586
    10. '```' → logprob: -7.388601303100586

Token 563: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2559998631477356
    2. '
' → logprob: -1.8809998035430908
    3. 'r' → logprob: -3.505999803543091
    4. ',' → logprob: -4.88100004196167
    5. '        
' → logprob: -4.88100004196167
    6. '=' → logprob: -5.25600004196167
    7. '   ' → logprob: -5.38100004196167
    8. '<|end|>' → logprob: -5.38100004196167
    9. ' =' → logprob: -5.63100004196167
    10. '```' → logprob: -7.00600004196167

Token 564: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0722648948431015
    2. '<|end|>' → logprob: -3.5722649097442627
    3. '
' → logprob: -4.322264671325684
    4. 'r' → logprob: -5.697264671325684
    5. '#' → logprob: -5.822264671325684
    6. ',' → logprob: -5.947264671325684
    7. '<|end|>' → logprob: -6.072264671325684
    8. ')' → logprob: -6.322264671325684
    9. '   ' → logprob: -6.447264671325684
    10. '.' → logprob: -6.447264671325684

Token 565: ' return' (ID: 622)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0662623718380928
    2. '       ' → logprob: -3.5662624835968018
    3. 'right' → logprob: -3.5662624835968018
    4. ' r' → logprob: -5.191262245178223
    5. ' right' → logprob: -7.816262245178223
    6. '   ' → logprob: -7.941262245178223
    7. 'for' → logprob: -8.066262245178223
    8. 'j' → logprob: -8.316262245178223
    9. 'l' → logprob: -8.316262245178223
    10. 'i' → logprob: -9.441262245178223

Token 566: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1652231365442276
    2. ' ' → logprob: -2.5402231216430664
    3. 'result' → logprob: -3.0402231216430664
    4. ' result' → logprob: -3.6652231216430664
    5. '   ' → logprob: -11.540223121643066
    6. '(result' → logprob: -12.790223121643066
    7. '  ' → logprob: -13.415223121643066
    8. '[result' → logprob: -13.665223121643066
    9. ' ' → logprob: -13.915223121643066
    10. 'self' → logprob: -13.915223121643066

Token 567: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31337785720825195
    2. 'result' → logprob: -1.313377857208252
    3. ' ' → logprob: -9.688377380371094
    4. ' result' → logprob: -10.438377380371094
    5. 'res' → logprob: -11.938377380371094
    6. 'None' → logprob: -12.688377380371094
    7. '[result' → logprob: -12.938377380371094
    8. '(result' → logprob: -13.188377380371094
    9. 'return' → logprob: -13.188377380371094
    10. '   ' → logprob: -13.563377380371094

Token 568: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 569: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 570: ' placeholder' (ID: 11115)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 571: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 572: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 573: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1559284925460815
    2. 'def' (adapté à ' def') → logprob: -1.6559284925460815
    3. '<|end|>' → logprob: -2.030928611755371
    4. '_' → logprob: -2.155928611755371
    5. ' def' → logprob: -2.280928611755371
    6. ' ' → logprob: -2.280928611755371
    7. ':' → logprob: -4.405928611755371
    8. '\' → logprob: -5.405928611755371
    9. '
' → logprob: -5.530928611755371
    10. '<|end|>' → logprob: -5.780928611755371

Token 574: ' solve' (ID: 17722)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.3908088505268097
    2. ' find' → logprob: -1.5158088207244873
    3. ' solve' → logprob: -2.5158088207244873
    4. 'count' → logprob: -4.140809059143066
    5. ' _' → logprob: -6.140809059143066
    6. 'solve' → logprob: -6.515809059143066
    7. '_' → logprob: -7.515809059143066
    8. ' max' → logprob: -7.640809059143066
    9. ' total' → logprob: -7.890809059143066
    10. ' process' → logprob: -8.015809059143066

Token 575: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11350362002849579
    2. '(' → logprob: -2.2385036945343018
    3. '_(' → logprob: -8.613503456115723
    4. '_' → logprob: -8.863503456115723
    5. '__(' → logprob: -8.988503456115723
    6. 'self' → logprob: -9.113503456115723
    7. ' (' → logprob: -9.988503456115723
    8. '   ' → logprob: -10.738503456115723
    9. '(
' → logprob: -11.113503456115723
    10. '```' → logprob: -11.613503456115723

Token 576: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03344385698437691
    2. 'self' → logprob: -3.9084439277648926
    3. '):' → logprob: -4.533443927764893
    4. '_' → logprob: -7.533443927764893
    5. '_,' → logprob: -7.783443927764893
    6. '(self' → logprob: -8.033443450927734
    7. '   ' → logprob: -8.658443450927734
    8. '):
' → logprob: -8.658443450927734
    9. ')' → logprob: -9.033443450927734
    10. ')(' → logprob: -9.783443450927734

Token 577: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004681457299739122
    2. '```' → logprob: -6.379681587219238
    3. '(' → logprob: -6.754681587219238
    4. '(self' → logprob: -8.129681587219238
    5. 'return' → logprob: -8.254681587219238
    6. '        
' → logprob: -8.629681587219238
    7. '   ' → logprob: -8.879681587219238
    8. ' for' → logprob: -8.879681587219238
    9. 'def' → logprob: -9.004681587219238
    10. ' return' → logprob: -9.004681587219238

Token 578: ' left' (ID: 3561)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049737706780433655
    2. ' left' → logprob: -4.299737930297852
    3. ' res' → logprob: -4.549737930297852
    4. ' l' → logprob: -4.674737930297852
    5. 'res' → logprob: -6.049737930297852
    6. 'left' (adapté à ' left') → logprob: -6.174737930297852
    7. ' pass' → logprob: -6.424737930297852
    8. '```' → logprob: -6.549737930297852
    9. ' ans' → logprob: -6.799737930297852
    10. ' result' → logprob: -7.049737930297852

Token 579: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47531792521476746
    2. ' =' → logprob: -0.9753179550170898
    3. ',' → logprob: -6.72531795501709
    4. '   ' → logprob: -10.85031795501709
    5. ' ,' → logprob: -11.47531795501709
    6. ' ' → logprob: -12.60031795501709
    7. '       ' → logprob: -12.85031795501709
    8. '    ' → logprob: -13.10031795501709
    9. '=
' → logprob: -14.72531795501709
    10. '  ' → logprob: -15.10031795501709

Token 580: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00047833603457547724
    2. 'self' → logprob: -8.375478744506836
    3. ' ' → logprob: -8.500478744506836
    4. 'min' → logprob: -10.625478744506836
    5. '   ' → logprob: -11.625478744506836
    6. '1' → logprob: -11.875478744506836
    7. ' self' → logprob: -13.125478744506836
    8. '       ' → logprob: -13.500478744506836
    9. '-' → logprob: -15.625478744506836
    10. '    ' → logprob: -16.250478744506836

Token 581: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010154449380934238
    2. 'min' → logprob: -4.7601542472839355
    3. 'self' → logprob: -6.7601542472839355
    4. '1' → logprob: -7.8851542472839355
    5. ' ' → logprob: -13.510154724121094
    6. '-' → logprob: -13.635154724121094
    7. 'max' → logprob: -15.385154724121094
    8. '   ' → logprob: -15.635154724121094
    9. ' min' → logprob: -15.760154724121094
    10. 'minimum' → logprob: -17.010154724121094

Token 582: '
' (ID: 198)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5224061012268066
    2. '
' → logprob: -2.1474061012268066
    3. ',' → logprob: -2.3974061012268066
    4. 'left' → logprob: -2.6474061012268066
    5. ',right' → logprob: -3.7724061012268066
    6. '<|end|>' → logprob: -3.7724061012268066
    7. 'while' → logprob: -4.397406101226807
    8. ' right' → logprob: -4.647406101226807
    9. ' ,' → logprob: -4.647406101226807
    10. ',
' → logprob: -4.772406101226807

Token 583: '       ' (ID: 309)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.8050399422645569
    2. '       ' → logprob: -0.9300399422645569
    3. ' right' → logprob: -2.680039882659912
    4. '
' → logprob: -2.680039882659912
    5. 'left' → logprob: -5.055039882659912
    6. ',
' → logprob: -6.180039882659912
    7. ',' → logprob: -6.180039882659912
    8. ',right' → logprob: -6.680039882659912
    9. '[right' → logprob: -6.805039882659912
    10. '           ' → logprob: -6.805039882659912

Token 584: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.014182306826114655
    2. ' right' → logprob: -4.264182090759277
    3. 'left' → logprob: -11.514182090759277
    4. 'max' → logprob: -12.389182090759277
    5. '       ' → logprob: -12.514182090759277
    6. '	right' → logprob: -14.389182090759277
    7. '   ' → logprob: -16.139183044433594
    8. '
' → logprob: -16.139183044433594
    9. ',right' → logprob: -16.639183044433594
    10. '```' → logprob: -16.889183044433594

Token 585: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193527340888977
    2. ' =' → logprob: -1.5019352436065674
    3. '=len' → logprob: -12.876935005187988
    4. '=max' → logprob: -13.251935005187988
    5. '=self' → logprob: -13.376935005187988
    6. '=
' → logprob: -15.376935005187988
    7. ',' → logprob: -17.001935958862305
    8. 'max' → logprob: -17.126935958862305
    9. ' ' → logprob: -17.501935958862305
    10. '=

' → logprob: -17.501935958862305

Token 586: ' self' (ID: 1051)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.26757147908210754
    2. 'len' → logprob: -2.142571449279785
    3. '10' → logprob: -2.642571449279785
    4. 'self' → logprob: -3.142571449279785
    5. ' max' → logprob: -5.892571449279785
    6. '100' → logprob: -9.267571449279785
    7. ' len' → logprob: -9.392571449279785
    8. 'int' → logprob: -10.017571449279785
    9. ' ' → logprob: -10.267571449279785
    10. '   ' → logprob: -10.892571449279785

Token 587: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.40503597259521484
    2. '.unique' → logprob: -1.6550359725952148
    3. '.L' → logprob: -2.280035972595215
    4. 'unique' → logprob: -3.655035972595215
    5. '.K' → logprob: -4.655035972595215
    6. 'N' → logprob: -6.280035972595215
    7. 'L' → logprob: -6.905035972595215
    8. '   ' → logprob: -8.030035972595215
    9. 'len' → logprob: -8.405035972595215
    10. '.max' → logprob: -8.405035972595215

Token 588: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8421208262443542
    2. ' +' → logprob: -1.467120885848999
    3. '*' → logprob: -2.592120885848999
    4. '   ' → logprob: -2.842120885848999
    5. ' *' → logprob: -2.967120885848999
    6. '
' → logprob: -2.967120885848999
    7. '       ' → logprob: -3.092120885848999
    8. '<|end|>' → logprob: -3.717120885848999
    9. '*self' → logprob: -5.71712064743042
    10. '#' → logprob: -5.71712064743042

Token 589: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27067211270332336
    2. '
' → logprob: -1.645672082901001
    3. '+' → logprob: -4.02067232131958
    4. '<|end|>' → logprob: -4.89567232131958
    5. ':' → logprob: -5.64567232131958
    6. '=' → logprob: -5.77067232131958
    7. ',' → logprob: -5.89567232131958
    8. ' =' → logprob: -6.02067232131958
    9. ':
' → logprob: -6.39567232131958
    10. ' +' → logprob: -6.89567232131958

Token 590: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.587164044380188
    2. 'answer' → logprob: -1.587164044380188
    3. 'ans' → logprob: -1.837164044380188
    4. 'mid' → logprob: -1.962164044380188
    5. 'result' → logprob: -2.0871639251708984
    6. 'res' → logprob: -2.0871639251708984
    7. '       ' → logprob: -3.2121639251708984
    8. ' while' → logprob: -7.587163925170898
    9. 'best' → logprob: -7.837163925170898
    10. 'low' → logprob: -7.837163925170898

Token 591: ' Binary' (ID: 32672)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.1731592416763306
    2. 'ans' → logprob: -1.1731592416763306
    3. 'while' → logprob: -1.7981592416763306
    4. 'answer' → logprob: -2.173159122467041
    5. 'for' → logprob: -3.173159122467041
    6. 'result' → logprob: -3.673159122467041
    7. 'low' → logprob: -4.173159122467041
    8. 'mid' → logprob: -5.048159122467041
    9. 'max' → logprob: -5.923159122467041
    10. 'l' → logprob: -5.923159122467041

Token 592: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.6388347744941711
    2. 'search' → logprob: -1.1388347148895264
    3. '_search' → logprob: -1.8888347148895264
    4. '       ' → logprob: -7.7638349533081055
    5. '_' → logprob: -9.013834953308105
    6. 'left' → logprob: -10.513834953308105
    7. '   ' → logprob: -10.638834953308105
    8. ' _' → logprob: -11.263834953308105
    9. ' left' → logprob: -11.388834953308105
    10. '_left' → logprob: -12.013834953308105

Token 593: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1480172574520111
    2. ' for' → logprob: -2.773017168045044
    3. ' on' → logprob: -2.898017168045044
    4. ':' → logprob: -5.773017406463623
    5. '   ' → logprob: -6.023017406463623
    6. 'for' → logprob: -6.023017406463623
    7. ' left' → logprob: -6.398017406463623
    8. ' =' → logprob: -6.523017406463623
    9. ',' → logprob: -6.523017406463623
    10. '        ' → logprob: -6.773017406463623

Token 594: ' answer' (ID: 6052)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2537321150302887
    2. 'right' → logprob: -2.128732204437256
    3. ' self' → logprob: -2.628732204437256
    4. 'left' → logprob: -4.128732204437256
    5. ' right' → logprob: -5.378732204437256
    6. 'max' → logprob: -5.378732204437256
    7. 'the' → logprob: -6.128732204437256
    8. '       ' → logprob: -6.628732204437256
    9. 'mid' → logprob: -6.878732204437256
    10. ' the' → logprob: -7.378732204437256

Token 595: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021143514662981033
    2. ':
' → logprob: -4.896143436431885
    3. ':' → logprob: -5.021143436431885
    4. '=' → logprob: -6.396143436431885
    5. ' =' → logprob: -6.396143436431885
    6. ' for' → logprob: -6.896143436431885
    7. ',' → logprob: -7.396143436431885
    8. '   ' → logprob: -7.771143436431885
    9. 'for' → logprob: -8.146143913269043
    10. 'while' → logprob: -8.646143913269043

Token 596: 'card' (ID: 7687)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6123532056808472
    2. 'left' → logprob: -1.6123532056808472
    3. ' self' → logprob: -2.7373533248901367
    4. ')' → logprob: -2.7373533248901367
    5. '       ' → logprob: -3.1123533248901367
    6. 'low' → logprob: -4.112353324890137
    7. ' left' → logprob: -4.237353324890137
    8. 'max' → logprob: -4.612353324890137
    9. 'right' → logprob: -4.737353324890137
    10. 'mid' → logprob: -4.987353324890137

Token 597: ' values' (ID: 4824)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32926762104034424
    2. '_values' → logprob: -2.7042675018310547
    3. 'values' → logprob: -2.9542675018310547
    4. 'value' → logprob: -3.0792675018310547
    5. '_value' → logprob: -3.3292675018310547
    6. '   ' → logprob: -4.204267501831055
    7. 's' → logprob: -4.329267501831055
    8. ' values' → logprob: -4.454267501831055
    9. ' value' → logprob: -4.454267501831055
    10. ' )' → logprob: -4.454267501831055

Token 598: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25563737750053406
    2. '       ' → logprob: -1.7556374073028564
    3. ' =' → logprob: -3.2556374073028564
    4. ')
' → logprob: -5.255637168884277
    5. '=' → logprob: -6.505637168884277
    6. '   ' → logprob: -6.630637168884277
    7. ':' → logprob: -6.880637168884277
    8. '):
' → logprob: -7.005637168884277
    9. ' )' → logprob: -7.255637168884277
    10. '[' → logprob: -7.255637168884277

Token 599: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2672940492630005
    2. ' =' → logprob: -1.6422940492630005
    3. '=' → logprob: -3.392293930053711
    4. ':' → logprob: -5.517293930053711
    5. ',' → logprob: -6.517293930053711
    6. 'left' → logprob: -7.642293930053711
    7. '   ' → logprob: -7.767293930053711
    8. ':
' → logprob: -8.267293930053711
    9. 'while' → logprob: -9.392293930053711
    10. ' left' → logprob: -9.642293930053711

Token 600: ' compressed' (ID: 58419)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03701557591557503
    2. 'range' → logprob: -4.037015438079834
    3. ' self' → logprob: -4.412015438079834
    4. ' range' → logprob: -5.787015438079834
    5. '   ' → logprob: -6.537015438079834
    6. '       ' → logprob: -7.287015438079834
    7. 'the' → logprob: -7.537015438079834
    8. 'left' → logprob: -8.162015914916992
    9. ' the' → logprob: -8.287015914916992
    10. '[self' → logprob: -9.162015914916992

Token 601: ' rank' (ID: 10302)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0500779151916504
    2. '_values' → logprob: -1.1750779151916504
    3. '_cards' → logprob: -1.5500779151916504
    4. '_left' → logprob: -3.5500779151916504
    5. '_card' → logprob: -3.5500779151916504
    6. '   ' → logprob: -4.17507791519165
    7. '       ' → logprob: -4.67507791519165
    8. '=' → logprob: -4.80007791519165
    9. ' range' → logprob: -5.42507791519165
    10. '_vals' → logprob: -5.42507791519165

Token 602: ' space' (ID: 4918)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7867428660392761
    2. ' =' → logprob: -0.7867428660392761
    3. '=' → logprob: -2.536742925643921
    4. ',' → logprob: -5.536742687225342
    5. ':' → logprob: -6.036742687225342
    6. '   ' → logprob: -6.911742687225342
    7. 'left' → logprob: -7.161742687225342
    8. '[left' → logprob: -8.2867431640625
    9. '        
' → logprob: -8.5367431640625
    10. '	' → logprob: -8.5367431640625

Token 603: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02597082406282425
    2. ',' → logprob: -5.025970935821533
    3. ':' → logprob: -5.150970935821533
    4. ':
' → logprob: -5.650970935821533
    5. ' =' → logprob: -5.900970935821533
    6. '
' → logprob: -6.525970935821533
    7. '=' → logprob: -7.150970935821533
    8. '<|end|>' → logprob: -7.275970935821533
    9. 'left' → logprob: -7.400970935821533
    10. '```' → logprob: -7.525970935821533

Token 604: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002900451421737671
    2. ',' → logprob: -6.75290060043335
    3. 'left' → logprob: -7.87790060043335
    4. ' =' → logprob: -8.377900123596191
    5. '```' → logprob: -8.377900123596191
    6. '   ' → logprob: -8.877900123596191
    7. 'while' → logprob: -8.877900123596191
    8. '=' → logprob: -9.252900123596191
    9. '        
' → logprob: -9.377900123596191
    10. '<|end|>' → logprob: -9.627900123596191

Token 605: ' res' (ID: 694)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5482945442199707
    2. '       ' → logprob: -1.2982945442199707
    3. ' while' → logprob: -2.6732945442199707
    4. 'left' → logprob: -3.4232945442199707
    5. 'ans' → logprob: -4.048294544219971
    6. 'low' → logprob: -4.923294544219971
    7. ' left' → logprob: -5.173294544219971
    8. 'answer' → logprob: -5.298294544219971
    9. 'res' (adapté à ' res') → logprob: -6.173294544219971
    10. 'l' → logprob: -6.298294544219971

Token 606: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14273354411125183
    2. '=' → logprob: -2.017733573913574
    3. ' ' → logprob: -10.767733573913574
    4. '_' → logprob: -11.267733573913574
    5. '   ' → logprob: -11.642733573913574
    6. '       ' → logprob: -12.267733573913574
    7. ',' → logprob: -12.517733573913574
    8. ' _' → logprob: -13.517733573913574
    9. '```' → logprob: -13.642733573913574
    10. ' ' → logprob: -13.767733573913574

Token 607: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7371379137039185
    2. 'self' → logprob: -0.9871379137039185
    3. ' self' → logprob: -2.362137794494629
    4. 'None' → logprob: -3.987137794494629
    5. ' None' → logprob: -4.237137794494629
    6. ' ' → logprob: -4.737137794494629
    7. 'float' → logprob: -5.112137794494629
    8. 'right' → logprob: -6.362137794494629
    9. '-' → logprob: -6.487137794494629
    10. ' float' → logprob: -6.612137794494629

Token 608: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2948405128554441e-05
    2. '       ' → logprob: -11.62501335144043
    3. 'float' → logprob: -13.12501335144043
    4. 'self' → logprob: -14.25001335144043
    5. '   ' → logprob: -14.37501335144043
    6. 'inf' → logprob: -14.62501335144043
    7. ' ' → logprob: -15.75001335144043
    8. '10' → logprob: -16.25001335144043
    9. '```' → logprob: -16.87501335144043
    10. 'right' → logprob: -17.12501335144043

Token 609: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031051799654960632
    2. '
' → logprob: -3.5310518741607666
    3. '<|end|>' → logprob: -7.5310516357421875
    4. '        
' → logprob: -8.156051635742188
    5. '	' → logprob: -9.281051635742188
    6. ' while' → logprob: -9.656051635742188
    7. ',' → logprob: -9.781051635742188
    8. 'while' → logprob: -10.031051635742188
    9. '  
' → logprob: -10.156051635742188
    10. '   ' → logprob: -10.281051635742188

Token 610: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0138416588306427
    2. '
' → logprob: -4.63884162902832
    3. '<|end|>' → logprob: -6.51384162902832
    4. '        
' → logprob: -7.38884162902832
    5. ',' → logprob: -7.51384162902832
    6. ' while' → logprob: -7.63884162902832
    7. 'while' → logprob: -8.13884162902832
    8. '```' → logprob: -8.51384162902832
    9. ' for' → logprob: -8.63884162902832
    10. '   ' → logprob: -10.38884162902832

Token 611: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2923738658428192
    2. ' while' → logprob: -2.0423738956451416
    3. 'while' (adapté à ' while') → logprob: -2.1673738956451416
    4. ' for' → logprob: -5.2923736572265625
    5. 'for' → logprob: -5.7923736572265625
    6. 'left' → logprob: -7.7923736572265625
    7. ' left' → logprob: -8.042373657226562
    8. '   ' → logprob: -9.042373657226562
    9. ' l' → logprob: -9.417373657226562
    10. ' low' → logprob: -9.917373657226562

Token 612: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.02979990281164646
    2. ' left' → logprob: -3.5297999382019043
    3. 'right' → logprob: -10.154799461364746
    4. 'True' → logprob: -12.404799461364746
    5. 'self' → logprob: -12.654799461364746
    6. '(left' → logprob: -13.779799461364746
    7. ' right' → logprob: -14.404799461364746
    8. '	left' → logprob: -15.029799461364746
    9. 'low' → logprob: -15.154799461364746
    10. 'res' → logprob: -15.404799461364746

Token 613: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.006316835526376963
    2. '<=' → logprob: -5.131316661834717
    3. ' <' → logprob: -7.881316661834717
    4. '<' → logprob: -12.631317138671875
    5. ' <<=' → logprob: -12.756317138671875
    6. ' ≤' → logprob: -13.631317138671875
    7. ' ' → logprob: -13.881317138671875
    8. ' ' → logprob: -13.881317138671875
    9. '```' → logprob: -15.131317138671875
    10. '	' → logprob: -15.631317138671875

Token 614: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -3.547789674485102e-05
    2. ' right' → logprob: -10.250035285949707
    3. '	right' → logprob: -20.500036239624023
    4. '
' → logprob: -21.625036239624023
    5. '   ' → logprob: -22.250036239624023
    6. 'rig' → logprob: -22.375036239624023
    7. '```' → logprob: -22.750036239624023
    8. ' ' → logprob: -22.875036239624023
    9. '[right' → logprob: -23.000036239624023
    10. '(right' → logprob: -25.000036239624023

Token 615: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1143277958035469
    2. ':
' → logprob: -2.239327907562256
    3. '           ' → logprob: -7.114327907562256
    4. '       ' → logprob: -8.239327430725098
    5. ',' → logprob: -8.989327430725098
    6. '<|end|>' → logprob: -9.364327430725098
    7. ' and' → logprob: -9.864327430725098
    8. ' :' → logprob: -10.364327430725098
    9. '<|end|>' → logprob: -10.489327430725098
    10. '):
' → logprob: -11.239327430725098

Token 616: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03946373239159584
    2. ' mid' → logprob: -3.539463758468628
    3. 'mid' → logprob: -5.414463520050049
    4. '<|end|>' → logprob: -6.289463520050049
    5. '[mid' → logprob: -7.789463520050049
    6. '            
' → logprob: -7.914463520050049
    7. '```' → logprob: -8.289463996887207
    8. ',' → logprob: -8.289463996887207
    9. '<|end|>' → logprob: -8.289463996887207
    10. '	       ' → logprob: -8.414463996887207

Token 617: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.4030071198940277
    2. 'mid' (adapté à ' mid') → logprob: -1.15300714969635
    3. '           ' → logprob: -4.1530070304870605
    4. 'm' → logprob: -9.403007507324219
    5. '[mid' → logprob: -9.653007507324219
    6. '_mid' → logprob: -9.903007507324219
    7. ' ' → logprob: -10.528007507324219
    8. '
' → logprob: -11.528007507324219
    9. '(mid' → logprob: -11.528007507324219
    10. 'middle' → logprob: -11.903007507324219

Token 618: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026334786787629128
    2. '=' → logprob: -3.651334762573242
    3. ' =
' → logprob: -11.401334762573242
    4. '           ' → logprob: -11.526334762573242
    5. '<|end|>' → logprob: -13.026334762573242
    6. ' ' → logprob: -13.151334762573242
    7. '            ' → logprob: -13.276334762573242
    8. ',' → logprob: -13.776334762573242
    9. '=
' → logprob: -14.026334762573242
    10. '=int' → logprob: -14.401334762573242

Token 619: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.018237857148051262
    2. ' (' → logprob: -4.018238067626953
    3. '           ' → logprob: -9.518238067626953
    4. 'left' → logprob: -12.143238067626953
    5. '(self' → logprob: -12.393238067626953
    6. '   ' → logprob: -13.393238067626953
    7. ' left' → logprob: -13.518238067626953
    8. '(right' → logprob: -13.643238067626953
    9. '[left' → logprob: -15.393238067626953
    10. '       ' → logprob: -15.643238067626953

Token 620: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -3.7697225252486533e-06
    2. ' left' → logprob: -12.500003814697266
    3. 'right' → logprob: -18.125003814697266
    4. '(left' → logprob: -18.500003814697266
    5. '   ' → logprob: -18.750003814697266
    6. '[left' → logprob: -19.000003814697266
    7. '	left' → logprob: -19.250003814697266
    8. '           ' → logprob: -19.875003814697266
    9. 'lef' → logprob: -22.000003814697266
    10. '       ' → logprob: -22.500003814697266

Token 621: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.004623679909855127
    2. '+' → logprob: -5.379623889923096
    3. ' +
' → logprob: -13.004623413085938
    4. ')' → logprob: -14.629623413085938
    5. ' ' → logprob: -14.879623413085938
    6. ' ' → logprob: -15.379623413085938
    7. ' +
' → logprob: -16.379623413085938
    8. '+B' → logprob: -17.504623413085938
    9. '```' → logprob: -17.879623413085938
    10. '+self' → logprob: -18.254623413085938

Token 622: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0007107630372047424
    2. ' right' → logprob: -7.250710964202881
    3. '(right' → logprob: -14.125710487365723
    4. '   ' → logprob: -17.50071144104004
    5. '	right' → logprob: -17.75071144104004
    6. ' ' → logprob: -18.25071144104004
    7. '[right' → logprob: -18.37571144104004
    8. '           ' → logprob: -19.00071144104004
    9. '
' → logprob: -19.37571144104004
    10. '+' → logprob: -19.75071144104004

Token 623: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00739566795527935
    2. ' +' → logprob: -5.5073957443237305
    3. ' )' → logprob: -5.7573957443237305
    4. '+' → logprob: -9.00739574432373
    5. ')>>' → logprob: -11.25739574432373
    6. ')//' → logprob: -11.50739574432373
    7. ' >>' → logprob: -13.00739574432373
    8. '   ' → logprob: -14.00739574432373
    9. '>>' → logprob: -14.13239574432373
    10. ' ' → logprob: -14.13239574432373

Token 624: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.25197717547416687
    2. ' >>' → logprob: -2.3769772052764893
    3. ')' → logprob: -2.6269772052764893
    4. '>>' → logprob: -3.0019772052764893
    5. '//' → logprob: -5.25197696685791
    6. '```' → logprob: -7.25197696685791
    7. ' ' → logprob: -7.50197696685791
    8. ' )' → logprob: -7.87697696685791
    9. ' ' → logprob: -8.12697696685791
    10. ')//' → logprob: -8.75197696685791

Token 625: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -17.87507438659668
    4. '   ' → logprob: -19.12507438659668
    5. '=' → logprob: -19.37507438659668
    6. '２' → logprob: -19.75007438659668
    7. '
' → logprob: -19.75007438659668
    8. '۲' → logprob: -20.25007438659668
    9. '1' → logprob: -20.87507438659668
    10. '           ' → logprob: -21.62507438659668

Token 626: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -21.750001907348633
    4. '   ' → logprob: -22.250001907348633
    5. '۲' → logprob: -22.250001907348633
    6. '3' → logprob: -22.250001907348633
    7. '1' → logprob: -22.875001907348633
    8. '２' → logprob: -22.875001907348633
    9. '=' → logprob: -22.875001907348633
    10. '
' → logprob: -23.250001907348633

Token 627: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03235425800085068
    2. '
' → logprob: -3.5323543548583984
    3. ',' → logprob: -7.032354354858398
    4. '            
' → logprob: -7.282354354858398
    5. '<|end|>' → logprob: -7.532354354858398
    6. '  
' → logprob: -9.532354354858398
    7. ')' → logprob: -9.782354354858398
    8. ' 
' → logprob: -10.032354354858398
    9. '       ' → logprob: -10.282354354858398
    10. ',
' → logprob: -10.782354354858398

Token 628: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012775205075740814
    2. '<|end|>' → logprob: -5.137775421142578
    3. '
' → logprob: -5.262775421142578
    4. '            
' → logprob: -7.512775421142578
    5. '<|end|>' → logprob: -8.262775421142578
    6. ',' → logprob: -8.387775421142578
    7. '       ' → logprob: -9.012775421142578
    8. '#' → logprob: -9.637775421142578
    9. '  
' → logprob: -9.762775421142578
    10. ' 
' → logprob: -9.887775421142578

Token 629: ' candidate' (ID: 17098)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1516837775707245
    2. 'val' → logprob: -2.776683807373047
    3. 'candidate' (adapté à ' candidate') → logprob: -3.276683807373047
    4. 'x' → logprob: -4.276683807373047
    5. '#' → logprob: -5.151683807373047
    6. 'if' → logprob: -5.151683807373047
    7. 'mid' → logprob: -5.526683807373047
    8. 'value' → logprob: -5.901683807373047
    9. 'count' → logprob: -6.151683807373047
    10. 'card' → logprob: -6.651683807373047

Token 630: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0626380443572998
    2. '_val' → logprob: -3.4376380443573
    3. '_value' → logprob: -3.8126380443573
    4. '=' → logprob: -5.187638282775879
    5. '_card' → logprob: -7.437638282775879
    6. '_cards' → logprob: -8.937638282775879
    7. '_rank' → logprob: -9.812638282775879
    8. '_' → logprob: -9.937638282775879
    9. 'val' → logprob: -10.937638282775879
    10. 'value' → logprob: -11.062638282775879

Token 631: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005587508203461766
    2. ' self' → logprob: -7.500558853149414
    3. '           ' → logprob: -12.125558853149414
    4. 'mid' → logprob: -15.500558853149414
    5. '
' → logprob: -16.750558853149414
    6. '(self' → logprob: -17.375558853149414
    7. '               ' → logprob: -18.625558853149414
    8. '	self' → logprob: -18.875558853149414
    9. '   ' → logprob: -18.875558853149414
    10. ' ' → logprob: -19.375558853149414

Token 632: '.unique' (ID: 76220)
  Prédit: '.unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.unique' → logprob: -0.0002978048287332058
    2. 'unique' → logprob: -8.125297546386719
    3. '.user' → logprob: -15.000297546386719
    4. '.' → logprob: -15.125297546386719
    5. ' .' → logprob: -15.125297546386719
    6. '.cards' → logprob: -15.250297546386719
    7. '.com' → logprob: -16.00029754638672
    8. '.left' → logprob: -16.37529754638672
    9. '
' → logprob: -16.37529754638672
    10. '   ' → logprob: -16.50029754638672

Token 633: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -4.320199877838604e-07
    2. '[_' → logprob: -15.625
    3. '```' → logprob: -16.875
    4. '[' → logprob: -16.875
    5. '_tokens' → logprob: -17.125
    6. '_codes' → logprob: -17.375
    7. '_chars' → logprob: -18.125
    8. '_card' → logprob: -18.125
    9. 'Cards' → logprob: -18.25
    10. ' _' → logprob: -18.25

Token 634: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -4.320199877838604e-07
    2. '           ' → logprob: -15.375
    3. '[m' → logprob: -16.125
    4. '[
' → logprob: -17.125
    5. ' [' → logprob: -18.0
    6. '[' → logprob: -18.125
    7. '[left' → logprob: -18.625
    8. '               ' → logprob: -18.875
    9. 'mid' → logprob: -19.125
    10. '                   ' → logprob: -19.375

Token 635: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06197541579604149
    2. ' -' → logprob: -2.8119754791259766
    3. ']' → logprob: -11.811975479125977
    4. '   ' → logprob: -15.561975479125977
    5. ' ' → logprob: -16.311975479125977
    6. '-
' → logprob: -16.936975479125977
    7. '           ' → logprob: -17.311975479125977
    8. '–' → logprob: -17.561975479125977
    9. '[' → logprob: -17.811975479125977
    10. '−' → logprob: -17.811975479125977

Token 636: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -20.500001907348633
    4. '```' → logprob: -20.500001907348633
    5. ']' → logprob: -21.125001907348633
    6. '<|end|>' → logprob: -21.625001907348633
    7. '۱' → logprob: -22.250001907348633
    8. '１' → logprob: -22.250001907348633
    9. '-' → logprob: -22.250001907348633
    10. ')' → logprob: -22.750001907348633

Token 637: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -16.875001907348633
    4. '   ' → logprob: -17.250001907348633
    5. '           ' → logprob: -17.750001907348633
    6. '0' → logprob: -17.750001907348633
    7. ')' → logprob: -19.000001907348633
    8. '       ' → logprob: -19.125001907348633
    9. '2' → logprob: -19.687501907348633
    10. '
' → logprob: -19.875001907348633

Token 638: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3399946689605713
    2. ']' → logprob: -1.7149946689605713
    3. ')
' → logprob: -2.4649946689605713
    4. '           ' → logprob: -4.464994430541992
    5. ']
' → logprob: -4.464994430541992
    6. '])' → logprob: -9.589994430541992
    7. '               ' → logprob: -10.089994430541992
    8. '       ' → logprob: -10.964994430541992
    9. ')]' → logprob: -10.964994430541992
    10. '])
' → logprob: -11.089994430541992

Token 639: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027173799462616444
    2. '
' → logprob: -6.7527174949646
    3. '<|end|>' → logprob: -7.2527174949646
    4. '            
' → logprob: -7.3777174949646
    5. '<|end|>' → logprob: -9.752717018127441
    6. '```' → logprob: -10.002717018127441
    7. '    
' → logprob: -10.877717018127441
    8. '       ' → logprob: -11.002717018127441
    9. '  
' → logprob: -11.002717018127441
    10. '        
' → logprob: -11.627717018127441

Token 640: ' c' (ID: 274)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02698560804128647
    2. 'if' → logprob: -4.0269856452941895
    3. 'count' → logprob: -4.7769856452941895
    4. 'cnt' → logprob: -9.401985168457031
    5. ' if' → logprob: -9.526985168457031
    6. '            
' → logprob: -9.901985168457031
    7. '
' → logprob: -10.026985168457031
    8. 'total' → logprob: -10.526985168457031
    9. 'left' → logprob: -11.276985168457031
    10. 'fen' → logprob: -11.401985168457031

Token 641: ' =' (ID: 314)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.0019165031844750047
    2. 'nt' → logprob: -6.876916408538818
    3. '=' → logprob: -7.751916408538818
    4. ' =' → logprob: -8.376916885375977
    5. 'count' → logprob: -8.626916885375977
    6. '=count' → logprob: -10.376916885375977
    7. 'ounted' → logprob: -12.251916885375977
    8. '   ' → logprob: -13.501916885375977
    9. 'out' → logprob: -13.626916885375977
    10. '_count' → logprob: -13.876916885375977

Token 642: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889363914728165
    2. ' self' → logprob: -2.5788936614990234
    3. '           ' → logprob: -12.953893661499023
    4. '0' → logprob: -14.328893661499023
    5. '(self' → logprob: -14.578893661499023
    6. ' ' → logprob: -16.328893661499023
    7. '	self' → logprob: -16.453893661499023
    8. 'elf' → logprob: -16.578893661499023
    9. '
' → logprob: -16.953893661499023
    10. '[self' → logprob: -16.953893661499023

Token 643: '._' (ID: 2697)
  Prédit: '.count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.count' → logprob: -8.41866585687967e-06
    2. '.' → logprob: -11.750008583068848
    3. ' .' → logprob: -14.750008583068848
    4. 'count' → logprob: -16.25000762939453
    5. '.code' → logprob: -17.25000762939453
    6. '.counter' → logprob: -19.12500762939453
    7. '.Count' → logprob: -19.75000762939453
    8. '.card' → logprob: -19.75000762939453
    9. '.k' → logprob: -19.87500762939453
    10. ' count' → logprob: -20.37500762939453

Token 644: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.021573403850197792
    2. 'binary' → logprob: -4.896573543548584
    3. 'k' → logprob: -5.271573543548584
    4. 'compress' → logprob: -6.021573543548584
    5. 'check' → logprob: -6.396573543548584
    6. 'com' → logprob: -7.396573543548584
    7. 'valid' → logprob: -7.521573543548584
    8. '_count' → logprob: -7.521573543548584
    9. 'card' → logprob: -8.021573066711426
    10. 'candidate' → logprob: -8.021573066711426

Token 645: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -4.68022444692906e-05
    2. 'k' → logprob: -10.000046730041504
    3. 'K' → logprob: -14.750046730041504
    4. '_candidates' → logprob: -15.875046730041504
    5. '_valid' → logprob: -16.00004768371582
    6. '_total' → logprob: -16.25004768371582
    7. '_sub' → logprob: -16.25004768371582
    8. ' kth' → logprob: -16.50004768371582
    9. '_candidate' → logprob: -16.62504768371582
    10. '_' → logprob: -17.12504768371582

Token 646: 'th' (ID: 404)
  Prédit: 'th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.00013738969573751092
    2. 't' → logprob: -9.750137329101562
    3. '_th' → logprob: -9.875137329101562
    4. '```' → logprob: -11.500137329101562
    5. 'count' → logprob: -12.500137329101562
    6. 'the' → logprob: -13.000137329101562
    7. '_t' → logprob: -13.000137329101562
    8. 'ith' → logprob: -13.125137329101562
    9. '_k' → logprob: -13.375137329101562
    10. '
' → logprob: -13.625137329101562

Token 647: '_numbers' (ID: 76842)
  Prédit: '_less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_less' → logprob: -0.0019297054968774319
    2. 'less' → logprob: -6.251929759979248
    3. '_le' → logprob: -14.75192928314209
    4. 'Less' → logprob: -15.50192928314209
    5. ' less' → logprob: -15.75192928314209
    6. '(' → logprob: -16.126930236816406
    7. '```' → logprob: -16.251930236816406
    8. 'k' → logprob: -16.751930236816406
    9. '_k' → logprob: -17.501930236816406
    10. '<=' → logprob: -17.876930236816406

Token 648: '_less' (ID: 154196)
  Prédit: '(candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(candidate' → logprob: -0.2036905139684677
    2. '_less' → logprob: -2.203690528869629
    3. '(' → logprob: -2.828690528869629
    4. '_le' → logprob: -4.453690528869629
    5. '_' → logprob: -6.578690528869629
    6. '<=' → logprob: -7.328690528869629
    7. '(count' → logprob: -8.578690528869629
    8. ' (' → logprob: -8.703690528869629
    9. 'Less' → logprob: -9.328690528869629
    10. '_count' → logprob: -9.453690528869629

Token 649: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.0005567280459217727
    2. '_than' → logprob: -7.750556945800781
    3. 'equal' → logprob: -9.000556945800781
    4. '_or' → logprob: -13.375556945800781
    5. 'Equal' → logprob: -15.250556945800781
    6. '_EQUAL' → logprob: -15.500556945800781
    7. '_candidate' → logprob: -15.500556945800781
    8. 'than' → logprob: -15.625556945800781
    9. '(candidate' → logprob: -16.50055694580078
    10. '           ' → logprob: -16.75055694580078

Token 650: '(candidate' (ID: 145201)
  Prédit: '(candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(candidate' → logprob: -0.0005019200034439564
    2. '(' → logprob: -7.875502109527588
    3. ' (' → logprob: -9.12550163269043
    4. 'candidate' → logprob: -12.37550163269043
    5. '_candidate' → logprob: -12.37550163269043
    6. ' candidate' → logprob: -13.87550163269043
    7. '_(' → logprob: -14.37550163269043
    8. '(
' → logprob: -14.50050163269043
    9. ' ' → logprob: -14.75050163269043
    10. '_' → logprob: -14.75050163269043

Token 651: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04413073882460594
    2. '())' → logprob: -3.294130802154541
    3. ')
' → logprob: -5.419130802154541
    4. '())
' → logprob: -7.169130802154541
    5. '()' → logprob: -7.544130802154541
    6. '           ' → logprob: -8.169130325317383
    7. '       ' → logprob: -10.669130325317383
    8. '()
' → logprob: -11.419130325317383
    9. ' )' → logprob: -11.919130325317383
    10. ' ())' → logprob: -12.544130325317383

Token 652: '           ' (ID: 352)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5650086402893066
    2. '           ' → logprob: -1.3150086402893066
    3. '()
' → logprob: -1.8150086402893066
    4. '()

' → logprob: -9.315008163452148
    5. '():
' → logprob: -9.815008163452148
    6. '()
' → logprob: -9.940008163452148
    7. '       ' → logprob: -10.815008163452148
    8. ')' → logprob: -10.940008163452148
    9. '())' → logprob: -11.440008163452148
    10. ',' → logprob: -11.440008163452148

Token 653: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011368107050657272
    2. 'if' (adapté à ' if') → logprob: -5.011368274688721
    3. ' if' → logprob: -5.386368274688721
    4. '   ' → logprob: -10.511367797851562
    5. '       ' → logprob: -10.886367797851562
    6. '
' → logprob: -11.886367797851562
    7. '<|end|>' → logprob: -12.511367797851562
    8. '```' → logprob: -13.136367797851562
    9. ' ' → logprob: -13.386367797851562
    10. '<|end|>' → logprob: -14.261367797851562

Token 654: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6931495070457458
    2. ' c' → logprob: -0.6931495070457458
    3. '           ' → logprob: -13.19314956665039
    4. '	c' → logprob: -15.44314956665039
    5. ' ' → logprob: -16.19314956665039
    6. '   ' → logprob: -17.06814956665039
    7. '               ' → logprob: -17.19314956665039
    8. ' ' → logprob: -17.44314956665039
    9. ')c' → logprob: -19.06814956665039
    10. '    ' → logprob: -19.19314956665039

Token 655: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.043150823563337326
    2. '>=' → logprob: -3.1681509017944336
    3. ')>=' → logprob: -9.418150901794434
    4. ']>=' → logprob: -10.543150901794434
    5. '[' → logprob: -11.168150901794434
    6. '           ' → logprob: -12.043150901794434
    7. ' ' → logprob: -12.168150901794434
    8. '<|end|>' → logprob: -12.418150901794434
    9. '   ' → logprob: -13.043150901794434
    10. ')' → logprob: -13.293150901794434

Token 656: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003073848783969879
    2. '1' → logprob: -6.253073692321777
    3. ' self' → logprob: -7.378073692321777
    4. '(self' → logprob: -7.878073692321777
    5. '0' → logprob: -9.503073692321777
    6. '           ' → logprob: -10.378073692321777
    7. '   ' → logprob: -11.128073692321777
    8. '
' → logprob: -11.753073692321777
    9. ' ' → logprob: -12.128073692321777
    10. '(' → logprob: -13.503073692321777

Token 657: '.L' (ID: 2024)
  Prédit: '.K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.K' → logprob: -0.003779885359108448
    2. '.L' → logprob: -5.628779888153076
    3. 'K' → logprob: -8.753779411315918
    4. 'self' → logprob: -11.003779411315918
    5. 'L' → logprob: -13.003779411315918
    6. '.' → logprob: -14.503779411315918
    7. ' .' → logprob: -14.628779411315918
    8. '.К' → logprob: -14.628779411315918
    9. '   ' → logprob: -15.003779411315918
    10. 'user' → logprob: -15.003779411315918

Token 658: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20265376567840576
    2. ':
' → logprob: -1.7026537656784058
    3. '           ' → logprob: -7.077653884887695
    4. '):
' → logprob: -8.952653884887695
    5. '<|end|>' → logprob: -9.327653884887695
    6. '               ' → logprob: -9.452653884887695
    7. '):' → logprob: -11.327653884887695
    8. '```' → logprob: -11.577653884887695
    9. ' and' → logprob: -11.702653884887695
    10. '<|end|>' → logprob: -11.827653884887695

Token 659: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004720018710941076
    2. '           ' → logprob: -5.379720211029053
    3. ' left' → logprob: -9.879719734191895
    4. '```' → logprob: -11.379719734191895
    5. 'left' → logprob: -11.504719734191895
    6. 'right' → logprob: -12.254719734191895
    7. ' right' → logprob: -12.504719734191895
    8. ':
' → logprob: -12.754719734191895
    9. '
' → logprob: -12.879719734191895
    10. '[left' → logprob: -13.129719734191895

Token 660: ' res' (ID: 694)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.13961391150951385
    2. 'right' → logprob: -2.3896138668060303
    3. '           ' → logprob: -4.014614105224609
    4. '               ' → logprob: -4.764614105224609
    5. ' left' → logprob: -4.764614105224609
    6. ' res' → logprob: -6.514614105224609
    7. '
' → logprob: -6.514614105224609
    8. 'res' (adapté à ' res') → logprob: -7.889614105224609
    9. 'left' → logprob: -8.76461410522461
    10. '	right' → logprob: -11.01461410522461

Token 661: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693408131599426
    2. '=' → logprob: -2.126934051513672
    3. ' =
' → logprob: -12.501934051513672
    4. '<|end|>' → logprob: -14.751934051513672
    5. ' ' → logprob: -14.876934051513672
    6. '=
' → logprob: -15.001934051513672
    7. '	' → logprob: -15.626934051513672
    8. ',' → logprob: -15.626934051513672
    9. ')' → logprob: -15.751934051513672
    10. '           ' → logprob: -16.126934051513672

Token 662: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.0015024791937321424
    2. ' candidate' → logprob: -6.501502513885498
    3. 'mid' → logprob: -15.75150203704834
    4. '(candidate' → logprob: -18.251502990722656
    5. '_candidate' → logprob: -18.626502990722656
    6. '
' → logprob: -19.126502990722656
    7. ' candidat' → logprob: -19.751502990722656
    8. 'c' → logprob: -20.251502990722656
    9. 'cand' → logprob: -21.001502990722656
    10. ' candidato' → logprob: -22.376502990722656

Token 663: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004526011645793915
    2. '           ' → logprob: -6.004526138305664
    3. '
' → logprob: -6.879526138305664
    4. '<|end|>' → logprob: -7.254526138305664
    5. '                
' → logprob: -8.879526138305664
    6. '                   ' → logprob: -10.254526138305664
    7. '            
' → logprob: -10.504526138305664
    8. '  
' → logprob: -11.129526138305664
    9. '    
' → logprob: -11.254526138305664
    10. '```' → logprob: -11.379526138305664

Token 664: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00019293125660624355
    2. '```' → logprob: -9.125192642211914
    3. '           ' → logprob: -9.625192642211914
    4. '                   ' → logprob: -11.625192642211914
    5. '`' → logprob: -13.250192642211914
    6. '                
' → logprob: -13.375192642211914
    7. '<|end|>' → logprob: -13.750192642211914
    8. '                       ' → logprob: -14.625192642211914
    9. '              ' → logprob: -14.625192642211914
    10. '``' → logprob: -14.750192642211914

Token 665: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.3144316077232361
    2. 'right' (adapté à ' right') → logprob: -1.3144316673278809
    3. '               ' → logprob: -6.814431667327881
    4. ' left' → logprob: -10.564431190490723
    5. '.right' → logprob: -11.314431190490723
    6. '	right' → logprob: -11.439431190490723
    7. '           ' → logprob: -11.689431190490723
    8. 'left' → logprob: -11.689431190490723
    9. '_right' → logprob: -13.564431190490723
    10. ',right' → logprob: -14.189431190490723

Token 666: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326231360435486
    2. ' =' → logprob: -1.3132623434066772
    3. ' -=' → logprob: -15.563261985778809
    4. '```' → logprob: -16.063262939453125
    5. '.=' → logprob: -16.438262939453125
    6. '＝' → logprob: -17.438262939453125
    7. '-=' → logprob: -17.563262939453125
    8. '            ' → logprob: -17.938262939453125
    9. ' =
' → logprob: -18.063262939453125
    10. ' ' → logprob: -18.063262939453125

Token 667: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.01416350994259119
    2. ' mid' → logprob: -4.264163494110107
    3. '[mid' → logprob: -17.514163970947266
    4. '(mid' → logprob: -18.639163970947266
    5. '_mid' → logprob: -18.889163970947266
    6. '           ' → logprob: -19.014163970947266
    7. 'middle' → logprob: -20.014163970947266
    8. 'm' → logprob: -20.264163970947266
    9. ' midpoint' → logprob: -21.139163970947266
    10. '   ' → logprob: -21.389163970947266

Token 668: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.020549597218632698
    2. '-' → logprob: -3.8955495357513428
    3. '           ' → logprob: -12.520549774169922
    4. ' ' → logprob: -13.395549774169922
    5. '```' → logprob: -14.145549774169922
    6. '   ' → logprob: -14.520549774169922
    7. '       ' → logprob: -14.645549774169922
    8. ' -
' → logprob: -15.895549774169922
    9. '<|end|>' → logprob: -16.145549774169922
    10. ' ' → logprob: -16.270549774169922

Token 669: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -17.12501335144043
    4. '   ' → logprob: -19.00001335144043
    5. '           ' → logprob: -20.12501335144043
    6. '       ' → logprob: -21.75001335144043
    7. '۱' → logprob: -21.87501335144043
    8. '=' → logprob: -22.00001335144043
    9. '0' → logprob: -22.25001335144043
    10. '<|end|>' → logprob: -22.25001335144043

Token 670: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -18.125
    4. '   ' → logprob: -20.125
    5. '
' → logprob: -21.0
    6. '۱' → logprob: -21.75
    7. '0' → logprob: -22.0
    8. '=' → logprob: -22.125
    9. '１' → logprob: -22.4375
    10. '...' → logprob: -22.4375

Token 671: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01775079406797886
    2. 'else' → logprob: -4.5177507400512695
    3. ' else' → logprob: -5.2677507400512695
    4. '<|end|>' → logprob: -6.6427507400512695
    5. '```' → logprob: -10.01775074005127
    6. '<|end|>' → logprob: -10.01775074005127
    7. '            
' → logprob: -10.39275074005127
    8. '       ' → logprob: -10.64275074005127
    9. '               ' → logprob: -11.01775074005127
    10. '          ' → logprob: -11.26775074005127

Token 672: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12310997396707535
    2. 'else' → logprob: -2.248110055923462
    3. ' else' → logprob: -4.623109817504883
    4. '```' → logprob: -7.873109817504883
    5. '       ' → logprob: -11.248109817504883
    6. '		' → logprob: -11.998109817504883
    7. '<|end|>' → logprob: -13.123109817504883
    8. '   ' → logprob: -13.248109817504883
    9. '	else' → logprob: -13.498109817504883
    10. 'elif' → logprob: -13.623109817504883

Token 673: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.13679470121860504
    2. '           ' → logprob: -2.6367948055267334
    3. ' else' → logprob: -2.8867948055267334
    4. '       ' → logprob: -7.761794567108154
    5. '   ' → logprob: -10.636795043945312
    6. '	else' → logprob: -10.761795043945312
    7. '```' → logprob: -10.886795043945312
    8. '		' → logprob: -11.386795043945312
    9. '	       ' → logprob: -13.636795043945312
    10. '	' → logprob: -14.261795043945312

Token 674: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006926835514605045
    2. ' left' → logprob: -6.131927013397217
    3. '           ' → logprob: -7.006927013397217
    4. ':
' → logprob: -7.381927013397217
    5. '[left' → logprob: -7.506927013397217
    6. '	left' → logprob: -7.756927013397217
    7. 'left' → logprob: -7.756927013397217
    8. '	           ' → logprob: -8.006926536560059
    9. '			' → logprob: -8.131926536560059
    10. '```' → logprob: -8.256926536560059

Token 675: '               ' (ID: 506)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.09229154139757156
    2. '               ' → logprob: -2.9672915935516357
    3. 'left' → logprob: -3.3422915935516357
    4. '	left' → logprob: -7.217291355133057
    5. '           ' → logprob: -8.217291831970215
    6. '   ' → logprob: -8.467291831970215
    7. '       ' → logprob: -9.717291831970215
    8. '[left' → logprob: -10.967291831970215
    9. '			' → logprob: -11.217291831970215
    10. ' right' → logprob: -11.842291831970215

Token 676: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.1602274775505066
    2. ' left' → logprob: -1.9102275371551514
    3. '	left' → logprob: -13.16022777557373
    4. '[left' → logprob: -14.28522777557373
    5. '               ' → logprob: -15.03522777557373
    6. '.left' → logprob: -15.78522777557373
    7. '           ' → logprob: -15.91022777557373
    8. '   ' → logprob: -16.910226821899414
    9. ':left' → logprob: -17.285226821899414
    10. '       ' → logprob: -17.285226821899414

Token 677: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693198025226593
    2. ' =' → logprob: -0.693198025226593
    3. ' +=' → logprob: -10.068198204040527
    4. '+=' → logprob: -11.818198204040527
    5. '           ' → logprob: -15.568198204040527
    6. '            ' → logprob: -15.568198204040527
    7. '＝' → logprob: -15.568198204040527
    8. '               ' → logprob: -16.06819725036621
    9. ' <<=' → logprob: -16.06819725036621
    10. ' =
' → logprob: -17.06819725036621

Token 678: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.014165744185447693
    2. ' mid' → logprob: -4.264165878295898
    3. '(mid' → logprob: -13.139165878295898
    4. '[mid' → logprob: -16.1391658782959
    5. '_mid' → logprob: -17.2641658782959
    6. 'right' → logprob: -17.2641658782959
    7. 'middle' → logprob: -18.0141658782959
    8. '   ' → logprob: -18.7641658782959
    9. 'left' → logprob: -18.8891658782959
    10. '           ' → logprob: -19.0141658782959

Token 679: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4799395203590393
    2. ' +' → logprob: -1.4799394607543945
    3. ' +=' → logprob: -2.3549394607543945
    4. '=' → logprob: -3.3549394607543945
    5. '+=' → logprob: -3.8549394607543945
    6. ' =' → logprob: -5.9799394607543945
    7. '           ' → logprob: -12.104939460754395
    8. '```' → logprob: -12.854939460754395
    9. '               ' → logprob: -14.229939460754395
    10. '            ' → logprob: -14.479939460754395

Token 680: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '```' → logprob: -18.00002670288086
    4. '   ' → logprob: -18.25002670288086
    5. '           ' → logprob: -19.87502670288086
    6. '0' → logprob: -20.75002670288086
    7. '       ' → logprob: -21.12502670288086
    8. 'def' → logprob: -21.25002670288086
    9. '               ' → logprob: -21.25002670288086
    10. '                   ' → logprob: -21.50002670288086

Token 681: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -17.250001907348633
    4. '   ' → logprob: -18.125001907348633
    5. '0' → logprob: -18.375001907348633
    6. '           ' → logprob: -20.250001907348633
    7. '       ' → logprob: -20.875001907348633
    8. '2' → logprob: -21.312501907348633
    9. '
' → logprob: -21.375001907348633
    10. '１' → logprob: -21.437501907348633

Token 682: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6372615694999695
    2. '<|end|>' → logprob: -1.1372616291046143
    3. '       ' → logprob: -2.2622616291046143
    4. '<|end|>' → logprob: -3.6372616291046143
    5. 'return' → logprob: -4.762261390686035
    6. '```' → logprob: -5.512261390686035
    7. ' return' → logprob: -6.137261390686035
    8. ')' → logprob: -6.887261390686035
    9. '   ' → logprob: -7.012261390686035
    10. '	return' → logprob: -7.387261390686035

Token 683: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04454423487186432
    2. '           ' → logprob: -3.419544219970703
    3. 'return' → logprob: -5.169544219970703
    4. ' return' → logprob: -6.169544219970703
    5. '<|end|>' → logprob: -6.794544219970703
    6. '   ' → logprob: -7.044544219970703
    7. '```' → logprob: -7.669544219970703
    8. '<|end|>' → logprob: -8.544544219970703
    9. '	return' → logprob: -8.794544219970703
    10. '
' → logprob: -9.544544219970703

Token 684: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10512193292379379
    2. 'return' (adapté à ' return') → logprob: -2.3551218509674072
    3. ' return' → logprob: -5.605122089385986
    4. '           ' → logprob: -7.480122089385986
    5. '   ' → logprob: -7.605122089385986
    6. '	return' → logprob: -9.105121612548828
    7. '
' → logprob: -11.105121612548828
    8. 'def' → logprob: -11.730121612548828
    9. '```' → logprob: -11.730121612548828
    10. ' ' → logprob: -12.480121612548828

Token 685: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.10020667314529419
    2. 'res' → logprob: -2.3502066135406494
    3. '	res' → logprob: -17.85020637512207
    4. ' None' → logprob: -18.22520637512207
    5. '_res' → logprob: -19.85020637512207
    6. ' ' → logprob: -20.72520637512207
    7. '   ' → logprob: -20.72520637512207
    8. '(res' → logprob: -21.10020637512207
    9. ' ' → logprob: -21.35020637512207
    10. 'None' → logprob: -21.97520637512207

Token 686: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7696225047111511
    2. '
' → logprob: -0.8946225047111511
    3. 'def' → logprob: -2.894622564315796
    4. '    
' → logprob: -3.519622564315796
    5. '  
' → logprob: -4.144622325897217
    6. '<|end|>' → logprob: -4.769622325897217
    7. '_' → logprob: -5.144622325897217
    8. ' def' → logprob: -5.769622325897217
    9. ' 
' → logprob: -5.894622325897217
    10. ' ' → logprob: -6.769622325897217

Token 687: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3316238820552826
    2. 'def' → logprob: -1.331623911857605
    3. ' def' → logprob: -4.2066240310668945
    4. '
' → logprob: -6.4566240310668945
    5. '_def' → logprob: -7.4566240310668945
    6. '_' → logprob: -8.081624031066895
    7. '```' → logprob: -8.081624031066895
    8. '    
' → logprob: -8.706624031066895
    9. '	def' → logprob: -9.081624031066895
    10. ' ' → logprob: -9.706624031066895

Token 688: ' def' (ID: 1056)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.750676691532135
    2. '   ' → logprob: -1.3756766319274902
    3. 'def' (adapté à ' def') → logprob: -1.5006766319274902
    4. ' def' → logprob: -3.1256766319274902
    5. ' _' → logprob: -5.87567663192749
    6. '_def' → logprob: -6.37567663192749
    7. '_
' → logprob: -6.75067663192749
    8. '_count' → logprob: -7.12567663192749
    9. '
' → logprob: -7.37567663192749
    10. '    
' → logprob: -7.37567663192749

Token 689: ' _' (ID: 1175)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0013573751784861088
    2. ' _' → logprob: -6.751357555389404
    3. '_' → logprob: -8.626357078552246
    4. '_code' → logprob: -13.251357078552246
    5. '_add' → logprob: -13.876357078552246
    6. '_find' → logprob: -14.376357078552246
    7. '_cut' → logprob: -14.501357078552246
    8. '_copy' → logprob: -14.751357078552246
    9. '__' → logprob: -14.751357078552246
    10. '_get' → logprob: -15.126357078552246

Token 690: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00015860427811276168
    2. '_count' → logprob: -8.750158309936523
    3. 'compress' → logprob: -16.500158309936523
    4. ' count' → logprob: -17.000158309936523
    5. '_com' → logprob: -22.250158309936523
    6. '_' → logprob: -22.875158309936523
    7. 'Count' → logprob: -22.875158309936523
    8. '
' → logprob: -23.250158309936523
    9. '	count' → logprob: -23.250158309936523
    10. '.count' → logprob: -23.250158309936523

Token 691: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.125000953674316
    3. 'k' → logprob: -15.875000953674316
    4. '_count' → logprob: -17.75
    5. '_t' → logprob: -18.625
    6. '_K' → logprob: -18.875
    7. '_counts' → logprob: -19.125
    8. 'K' → logprob: -19.25
    9. ' _' → logprob: -19.375
    10. '_code' → logprob: -19.375

Token 692: 'th' (ID: 404)
  Prédit: 'th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -8.149051427608356e-05
    2. '_th' → logprob: -9.625081062316895
    3. 'h' → logprob: -12.500081062316895
    4. 'ith' → logprob: -12.625081062316895
    5. '_count' → logprob: -13.250081062316895
    6. 't' → logprob: -13.250081062316895
    7. '```' → logprob: -13.250081062316895
    8. '__' → logprob: -13.625081062316895
    9. '_' → logprob: -14.625081062316895
    10. '_t' → logprob: -14.875081062316895

Token 693: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.00031735055381432176
    2. '_k' → logprob: -8.625317573547363
    3. '_less' → logprob: -9.125317573547363
    4. '_nums' → logprob: -11.750317573547363
    5. '_n' → logprob: -11.875317573547363
    6. '_codes' → logprob: -13.000317573547363
    7. '_number' → logprob: -13.250317573547363
    8. '_more' → logprob: -13.375317573547363
    9. '_values' → logprob: -13.625317573547363
    10. '_cards' → logprob: -13.875317573547363

Token 694: '_less' (ID: 154196)
  Prédit: '_less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_less' → logprob: -5.319370302458992e-06
    2. '_le' → logprob: -12.375005722045898
    3. '_l' → logprob: -15.125005722045898
    4. 'less' → logprob: -15.250005722045898
    5. '```' → logprob: -16.0000057220459
    6. '_' → logprob: -16.3750057220459
    7. '_than' → logprob: -16.7500057220459
    8. ' _' → logprob: -17.1250057220459
    9. '_lower' → logprob: -17.3750057220459
    10. '_LE' → logprob: -17.6250057220459

Token 695: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -2.117345684382599e-05
    2. 'equal' → logprob: -11.250020980834961
    3. '_than' → logprob: -12.500020980834961
    4. '_less' → logprob: -13.125020980834961
    5. '_equ' → logprob: -14.750020980834961
    6. '_equals' → logprob: -14.750020980834961
    7. '_EQUAL' → logprob: -14.875020980834961
    8. '_' → logprob: -15.250020980834961
    9. 'Equal' → logprob: -15.500020980834961
    10. '_e' → logprob: -15.625020980834961

Token 696: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011196362785995007
    2. '(' → logprob: -4.511196136474609
    3. ' (' → logprob: -9.51119613647461
    4. 'self' → logprob: -9.63619613647461
    5. '(
' → logprob: -13.38619613647461
    6. ' ' → logprob: -13.51119613647461
    7. '_(' → logprob: -13.76119613647461
    8. '   ' → logprob: -14.13619613647461
    9. '__(' → logprob: -14.26119613647461
    10. '(s' → logprob: -14.38619613647461

Token 697: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.061881858855485916
    2. '(' → logprob: -2.9368817806243896
    3. 'self' → logprob: -5.561882019042969
    4. ')(' → logprob: -6.186882019042969
    5. ' (' → logprob: -8.061882019042969
    6. ',' → logprob: -8.186882019042969
    7. '_(' → logprob: -8.686882019042969
    8. ')' → logprob: -9.186882019042969
    9. '}(' → logprob: -10.061882019042969
    10. '__(' → logprob: -10.186882019042969

Token 698: ' val' (ID: 1459)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4745064675807953
    2. 'x' → logprob: -0.9745064973831177
    3. ' self' → logprob: -8.224506378173828
    4. ' x' → logprob: -8.974506378173828
    5. '(self' → logprob: -11.349506378173828
    6. 'val' → logprob: -11.349506378173828
    7. 'value' → logprob: -12.224506378173828
    8. '   ' → logprob: -12.724506378173828
    9. ')' → logprob: -14.224506378173828
    10. 'candidate' → logprob: -14.224506378173828

Token 699: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007281114812940359
    2. 'self' → logprob: -5.257281303405762
    3. '       ' → logprob: -6.257281303405762
    4. '   ' → logprob: -10.382281303405762
    5. '):
' → logprob: -10.632281303405762
    6. '(' → logprob: -10.757281303405762
    7. ',' → logprob: -11.007281303405762
    8. ' self' → logprob: -11.632281303405762
    9. ')(' → logprob: -12.132281303405762
    10. '	self' → logprob: -12.382281303405762

Token 700: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01992168091237545
    2. '(self' → logprob: -4.144921779632568
    3. ' self' → logprob: -6.144921779632568
    4. 'self' → logprob: -6.519921779632568
    5. '(' → logprob: -8.89492130279541
    6. '```' → logprob: -10.01992130279541
    7. '        
' → logprob: -10.64492130279541
    8. '   ' → logprob: -11.26992130279541
    9. ' (' → logprob: -11.51992130279541
    10. '           ' → logprob: -12.14492130279541

Token 701: ' #' (ID: 1069)
  Prédit: ' fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fen' → logprob: -0.07110479474067688
    2. ' n' → logprob: -3.3211047649383545
    3. '       ' → logprob: -3.6961047649383545
    4. 'fen' → logprob: -5.321105003356934
    5. 'n' → logprob: -6.446105003356934
    6. ' count' → logprob: -8.071105003356934
    7. ' size' → logprob: -8.446105003356934
    8. ' N' → logprob: -8.946105003356934
    9. 'count' → logprob: -9.321105003356934
    10. ' Fen' → logprob: -9.321105003356934

Token 702: ' Count' (ID: 6789)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.0006900362786836922
    2. '       ' → logprob: -8.250690460205078
    3. 'n' → logprob: -9.125690460205078
    4. ' fen' → logprob: -9.125690460205078
    5. 'count' → logprob: -9.375690460205078
    6. '   ' → logprob: -10.125690460205078
    7. 'freq' → logprob: -10.500690460205078
    8. 'val' → logprob: -11.500690460205078
    9. 'def' → logprob: -11.625690460205078
    10. '#' → logprob: -12.125690460205078

Token 703: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6897012591362
    2. ' fen' → logprob: -0.9397012591362
    3. ' self' → logprob: -3.1897013187408447
    4. 'self' → logprob: -3.3147013187408447
    5. 'fen' → logprob: -4.189701080322266
    6. '(self' → logprob: -5.064701080322266
    7. ' =' → logprob: -6.564701080322266
    8. ' n' → logprob: -7.314701080322266
    9. 'def' → logprob: -7.314701080322266
    10. ' cards' → logprob: -7.314701080322266

Token 704: ' number' (ID: 2086)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.06323903799057007
    2. ' fen' → logprob: -3.438239097595215
    3. '       ' → logprob: -4.438239097595215
    4. 'N' → logprob: -5.063239097595215
    5. 'compressed' → logprob: -5.813239097595215
    6. '   ' → logprob: -6.313239097595215
    7. ' N' → logprob: -6.813239097595215
    8. 'def' → logprob: -6.813239097595215
    9. 'n' → logprob: -6.813239097595215
    10. 'cards' → logprob: -7.563239097595215

Token 705: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.024292834103107452
    2. '       ' → logprob: -4.524292945861816
    3. '_of' → logprob: -5.149292945861816
    4. 'of' → logprob: -5.274292945861816
    5. '   ' → logprob: -6.524292945861816
    6. ' =' → logprob: -8.774292945861816
    7. '=' → logprob: -9.024292945861816
    8. 'Of' → logprob: -9.524292945861816
    9. '_' → logprob: -9.649292945861816
    10. 'def' → logprob: -9.649292945861816

Token 706: ' K' (ID: 658)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.18829962611198425
    2. 'self' → logprob: -2.4382996559143066
    3. ' sub' → logprob: -3.0632996559143066
    4. 'valid' → logprob: -4.563299655914307
    5. ' valid' → logprob: -4.688299655914307
    6. 'cards' → logprob: -4.813299655914307
    7. ' self' → logprob: -5.688299655914307
    8. 'def' → logprob: -6.438299655914307
    9. ' cards' → logprob: -6.438299655914307
    10. 'windows' → logprob: -7.438299655914307

Token 707: '-th' (ID: 14928)
  Prédit: '-th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-th' → logprob: -0.25799912214279175
    2. '_th' → logprob: -1.8829991817474365
    3. 'th' → logprob: -3.0079991817474365
    4. ' -' → logprob: -4.507998943328857
    5. '-' → logprob: -5.007998943328857
    6. '_' → logprob: -5.382998943328857
    7. '_-' → logprob: -6.632998943328857
    8. '```' → logprob: -7.757998943328857
    9. '   ' → logprob: -7.882998943328857
    10. '_t' → logprob: -8.132999420166016

Token 708: ' statistics' (ID: 21729)
  Prédit: '_less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_less' → logprob: -0.23094001412391663
    2. '_th' → logprob: -2.605940103530884
    3. 'th' → logprob: -2.980940103530884
    4. '_sub' → logprob: -3.980940103530884
    5. 'sub' → logprob: -4.230939865112305
    6. 'less' → logprob: -4.230939865112305
    7. 'def' → logprob: -4.980939865112305
    8. '_small' → logprob: -5.355939865112305
    9. 'statistics' → logprob: -5.855939865112305
    10. '_' → logprob: -5.855939865112305

Token 709: ' <=' (ID: 5017)
  Prédit: '_less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_less' → logprob: -0.2510562837123871
    2. '(self' → logprob: -1.7510563135147095
    3. '_le' → logprob: -3.62605619430542
    4. '<=' → logprob: -4.87605619430542
    5. ' <=' → logprob: -5.12605619430542
    6. ' less' → logprob: -5.87605619430542
    7. 'self' → logprob: -6.37605619430542
    8. 'less' → logprob: -6.75105619430542
    9. '       ' → logprob: -6.87605619430542
    10. '_sm' → logprob: -8.001056671142578

Token 710: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.16022443771362305
    2. ' val' → logprob: -1.910224437713623
    3. 'self' → logprob: -15.910224914550781
    4. '       ' → logprob: -16.41022491455078
    5. '	val' → logprob: -16.53522491455078
    6. '
' → logprob: -17.78522491455078
    7. '   ' → logprob: -18.28522491455078
    8. '_val' → logprob: -18.78522491455078
    9. '           ' → logprob: -18.91022491455078
    10. ' self' → logprob: -19.28522491455078

Token 711: ' for' (ID: 395)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03868795186281204
    2. '       ' → logprob: -3.2886879444122314
    3. '
' → logprob: -8.788687705993652
    4. 'self' → logprob: -9.038687705993652
    5. '(' → logprob: -9.288687705993652
    6. ' self' → logprob: -9.413687705993652
    7. '   ' → logprob: -9.413687705993652
    8. ' (' → logprob: -9.788687705993652
    9. '```' → logprob: -10.913687705993652
    10. ',' → logprob: -11.038687705993652

Token 712: ' all' (ID: 722)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.600084125995636
    2. 'self' → logprob: -0.850084125995636
    3. ' all' → logprob: -4.22508430480957
    4. ' val' → logprob: -5.97508430480957
    5. 'val' → logprob: -6.10008430480957
    6. ' the' → logprob: -6.35008430480957
    7. 'all' → logprob: -7.22508430480957
    8. 'the' → logprob: -7.47508430480957
    9. '       ' → logprob: -7.97508430480957
    10. ' x' → logprob: -8.47508430480957

Token 713: ' valid' (ID: 4529)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.251238614320755
    2. ' sub' → logprob: -2.0012385845184326
    3. ' valid' → logprob: -3.5012385845184326
    4. ' windows' → logprob: -4.126238822937012
    5. 'windows' → logprob: -4.126238822937012
    6. 'self' → logprob: -4.876238822937012
    7. 'valid' → logprob: -4.876238822937012
    8. '       ' → logprob: -5.876238822937012
    9. '   ' → logprob: -6.001238822937012
    10. ' self' → logprob: -6.126238822937012

Token 714: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.08311063051223755
    2. ' sub' → logprob: -3.3331105709075928
    3. 'windows' → logprob: -3.3331105709075928
    4. ' windows' → logprob: -5.083110809326172
    5. '   ' → logprob: -7.208110809326172
    6. '_sub' → logprob: -8.083110809326172
    7. 'self' → logprob: -8.583110809326172
    8. 'window' → logprob: -8.583110809326172
    9. '
' → logprob: -8.958110809326172
    10. '       ' → logprob: -9.083110809326172

Token 715: 'arrays' (ID: 158630)
  Prédit: 'arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.0025245302822440863
    2. 'array' → logprob: -6.002524375915527
    3. ' arrays' → logprob: -10.752524375915527
    4. '   ' → logprob: -11.377524375915527
    5. 'arr' → logprob: -11.627524375915527
    6. '_arrays' → logprob: -12.127524375915527
    7. '_array' → logprob: -13.627524375915527
    8. '_arr' → logprob: -16.127525329589844
    9. '       ' → logprob: -16.377525329589844
    10. 'Arrays' → logprob: -16.627525329589844

Token 716: '
' (ID: 198)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12754195928573608
    2. '       ' → logprob: -2.127542018890381
    3. '   ' → logprob: -8.752541542053223
    4. '(' → logprob: -8.752541542053223
    5. ' self' → logprob: -9.502541542053223
    6. '(
' → logprob: -9.627541542053223
    7. 'self' → logprob: -9.752541542053223
    8. '
' → logprob: -10.002541542053223
    9. ' (' → logprob: -11.127541542053223
    10. '```' → logprob: -11.127541542053223

Token 717: '       ' (ID: 309)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5244235396385193
    2. '       ' → logprob: -0.8994235396385193
    3. '(' → logprob: -7.274423599243164
    4. ' (' → logprob: -8.649423599243164
    5. ' self' → logprob: -9.024423599243164
    6. '```' → logprob: -9.399423599243164
    7. '   ' → logprob: -9.899423599243164
    8. ',' → logprob: -9.899423599243164
    9. ':' → logprob: -10.274423599243164
    10. 'self' → logprob: -10.524423599243164

Token 718: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2754586935043335
    2. ' fen' → logprob: -1.5254586935043335
    3. 'fen' → logprob: -4.275458812713623
    4. ' n' → logprob: -5.400458812713623
    5. 'n' → logprob: -6.525458812713623
    6. ' self' → logprob: -7.650458812713623
    7. '```' → logprob: -7.650458812713623
    8. 'def' → logprob: -7.775458812713623
    9. 'self' → logprob: -8.400458335876465
    10. ' size' → logprob: -8.400458335876465

Token 719: ' Using' (ID: 17511)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15422119200229645
    2. ' fen' → logprob: -2.154221296310425
    3. 'fen' → logprob: -3.779221296310425
    4. ' n' → logprob: -6.654221057891846
    5. 'n' → logprob: -7.154221057891846
    6. 'def' → logprob: -7.529221057891846
    7. 'Fen' → logprob: -8.529221534729004
    8. ' left' → logprob: -8.904221534729004
    9. '```' → logprob: -8.904221534729004
    10. ' Fen' → logprob: -9.029221534729004

Token 720: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2546311616897583
    2. ' self' → logprob: -2.0046310424804688
    3. 'two' → logprob: -3.5046310424804688
    4. ' two' → logprob: -3.7546310424804688
    5. 'fen' → logprob: -4.254631042480469
    6. 'def' → logprob: -4.879631042480469
    7. 'Fen' → logprob: -5.754631042480469
    8. ' fen' → logprob: -6.129631042480469
    9. '       ' → logprob: -6.129631042480469
    10. 'l' → logprob: -6.379631042480469

Token 721: ' sliding' (ID: 53853)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4066968858242035
    2. 'Fen' → logprob: -1.4066969156265259
    3. 'fen' → logprob: -3.1566967964172363
    4. '       ' → logprob: -4.031696796417236
    5. 'two' → logprob: -4.781696796417236
    6. ' Fen' → logprob: -5.281696796417236
    7. '   ' → logprob: -5.531696796417236
    8. ' fen' → logprob: -5.906696796417236
    9. 'self' → logprob: -6.031696796417236
    10. ' def' → logprob: -6.656696796417236

Token 722: ' window' (ID: 5734)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.25228485465049744
    2. ' window' → logprob: -1.5022848844528198
    3. '       ' → logprob: -9.00228500366211
    4. '
' → logprob: -9.25228500366211
    5. '_window' → logprob: -9.25228500366211
    6. '   ' → logprob: -10.37728500366211
    7. '-window' → logprob: -12.50228500366211
    8. 'w' → logprob: -14.12728500366211
    9. '	window' → logprob: -14.12728500366211
    10. '(window' → logprob: -14.50228500366211

Token 723: ' and' (ID: 326)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.44298890233039856
    2. '       ' → logprob: -1.1929888725280762
    3. ' self' → logprob: -3.942988872528076
    4. '
' → logprob: -4.692988872528076
    5. ',' → logprob: -5.317988872528076
    6. ' def' → logprob: -5.442988872528076
    7. 'self' → logprob: -5.442988872528076
    8. ' (' → logprob: -5.567988872528076
    9. 'def' → logprob: -5.942988872528076
    10. '   ' → logprob: -6.317988872528076

Token 724: ' two' (ID: 1920)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.2819336950778961
    2. ' fen' → logprob: -1.4069336652755737
    3. ' two' → logprob: -8.531933784484863
    4. 'Fen' → logprob: -8.781933784484863
    5. 'freq' → logprob: -8.906933784484863
    6. 'count' → logprob: -9.531933784484863
    7. 'two' → logprob: -9.781933784484863
    8. ' Fen' → logprob: -9.906933784484863
    9. '       ' → logprob: -10.906933784484863
    10. '   ' → logprob: -11.031933784484863

Token 725: ' pointers' (ID: 58762)
  Prédit: 'pointer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pointer' → logprob: -0.5054337382316589
    2. 'p' → logprob: -1.5054337978363037
    3. ' pointers' → logprob: -1.7554337978363037
    4. ' pointer' → logprob: -7.380433559417725
    5. '-pointer' → logprob: -7.380433559417725
    6. '
' → logprob: -8.005434036254883
    7. 'ptr' → logprob: -8.505434036254883
    8. '_pointer' → logprob: -9.005434036254883
    9. '   ' → logprob: -10.130434036254883
    10. '       ' → logprob: -11.130434036254883

Token 726: ' technique' (ID: 16410)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1549118608236313
    2. '       ' → logprob: -2.029911756515503
    3. '
' → logprob: -5.154911994934082
    4. '```' → logprob: -5.904911994934082
    5. '   ' → logprob: -6.779911994934082
    6. ' (' → logprob: -6.779911994934082
    7. ' self' → logprob: -8.154911994934082
    8. ',' → logprob: -8.154911994934082
    9. '(' → logprob: -8.404911994934082
    10. '(
' → logprob: -8.654911994934082

Token 727: ' with' (ID: 483)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.32221028208732605
    2. '       ' → logprob: -1.3222103118896484
    3. '```' → logprob: -5.697210311889648
    4. '   ' → logprob: -5.822210311889648
    5. '(
' → logprob: -7.197210311889648
    6. '(' → logprob: -7.447210311889648
    7. '
' → logprob: -7.822210311889648
    8. ' (' → logprob: -8.322210311889648
    9. ',' → logprob: -8.697210311889648
    10. '        
' → logprob: -9.322210311889648

Token 728: ' Fen' (ID: 48230)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.43077781796455383
    2. ' fen' → logprob: -1.0557777881622314
    3. 'self' → logprob: -7.0557780265808105
    4. 'Fen' → logprob: -7.1807780265808105
    5. ' self' → logprob: -8.180777549743652
    6. ' Fen' → logprob: -8.930777549743652
    7. 'def' → logprob: -11.430777549743652
    8. '       ' → logprob: -12.430777549743652
    9. 'freq' → logprob: -12.555777549743652
    10. 'count' → logprob: -12.680777549743652

Token 729: 'wick' (ID: 14105)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.36256298422813416
    2. 'wick' → logprob: -1.4875630140304565
    3. '       ' → logprob: -2.612562894821167
    4. '   ' → logprob: -6.112563133239746
    5. '```' → logprob: -7.112563133239746
    6. '
' → logprob: -7.862563133239746
    7. '               ' → logprob: -8.237563133239746
    8. '        ' → logprob: -8.612563133239746
    9. '``' → logprob: -8.612563133239746
    10. 'wt' → logprob: -9.362563133239746

Token 730: ' tree' (ID: 8165)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.00026860725483857095
    2. '       ' → logprob: -8.375268936157227
    3. ' Tree' → logprob: -11.375268936157227
    4. '   ' → logprob: -11.375268936157227
    5. '(Tree' → logprob: -12.125268936157227
    6. '
' → logprob: -13.750268936157227
    7. '<Tree' → logprob: -13.875268936157227
    8. '           ' → logprob: -13.875268936157227
    9. '	Tree' → logprob: -14.000268936157227
    10. 'Fen' → logprob: -14.250268936157227

Token 731: '

' (ID: 279)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06355153024196625
    2. '       ' → logprob: -2.813551425933838
    3. '   ' → logprob: -7.563551425933838
    4. '(' → logprob: -8.063551902770996
    5. '```' → logprob: -8.188551902770996
    6. '(
' → logprob: -8.563551902770996
    7. '
' → logprob: -9.188551902770996
    8. ' (' → logprob: -9.438551902770996
    9. ',' → logprob: -10.938551902770996
    10. ':' → logprob: -10.938551902770996

Token 732: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006903159432113171
    2. 'self' → logprob: -6.131903171539307
    3. '```' → logprob: -6.256903171539307
    4. '(self' → logprob: -6.756903171539307
    5. ' self' → logprob: -7.006903171539307
    6. '   ' → logprob: -7.881903171539307
    7. 'def' → logprob: -8.381902694702148
    8. '
' → logprob: -9.881902694702148
    9. ' def' → logprob: -11.256902694702148
    10. '        
' → logprob: -11.506902694702148

Token 733: ' fen' (ID: 25170)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' (adapté à ' fen') → logprob: -0.5572080612182617
    2. ' fen' → logprob: -0.9322080612182617
    3. '       ' → logprob: -3.5572080612182617
    4. 'n' → logprob: -6.182208061218262
    5. ' n' → logprob: -6.182208061218262
    6. 'left' → logprob: -8.807208061218262
    7. 'freq' → logprob: -9.307208061218262
    8. 'Fen' → logprob: -9.307208061218262
    9. ' left' → logprob: -9.432208061218262
    10. 'count' → logprob: -9.682208061218262

Token 734: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -9.2576454335358e-05
    2. ' =' → logprob: -9.375092506408691
    3. '=' → logprob: -11.875092506408691
    4. ' w' → logprob: -14.625092506408691
    5. '   ' → logprob: -16.250093460083008
    6. '       ' → logprob: -16.250093460083008
    7. '
' → logprob: -17.125093460083008
    8. '	w' → logprob: -17.375093460083008
    9. ' ' → logprob: -17.875093460083008
    10. '_w' → logprob: -18.750093460083008

Token 735: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1429791897535324
    2. '=' → logprob: -2.017979145050049
    3. '.update' → logprob: -8.642979621887207
    4. '.' → logprob: -10.017979621887207
    5. '   ' → logprob: -10.392979621887207
    6. '       ' → logprob: -10.517979621887207
    7. ' ' → logprob: -11.642979621887207
    8. 'w' → logprob: -12.767979621887207
    9. '    ' → logprob: -13.017979621887207
    10. 't' → logprob: -13.392979621887207

Token 736: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693145871162415
    2. ' self' → logprob: -2.1269314289093018
    3. '       ' → logprob: -14.001931190490723
    4. '(self' → logprob: -14.251931190490723
    5. '   ' → logprob: -14.626931190490723
    6. '[self' → logprob: -14.876931190490723
    7. '	self' → logprob: -15.001931190490723
    8. ' ' → logprob: -15.126931190490723
    9. '=self' → logprob: -15.876931190490723
    10. ' ' → logprob: -17.00193214416504

Token 737: '.F' (ID: 1737)
  Prédit: 'Fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fen' → logprob: -0.4951383173465729
    2. 'self' → logprob: -1.2451382875442505
    3. '.F' → logprob: -2.37013840675354
    4. 'F' → logprob: -4.870138168334961
    5. '=self' → logprob: -8.120138168334961
    6. 'len' → logprob: -8.370138168334961
    7. '(self' → logprob: -8.495138168334961
    8. 'elf' → logprob: -8.995138168334961
    9. 'fen' → logprob: -9.370138168334961
    10. ' self' → logprob: -9.370138168334961

Token 738: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -8.947715832618997e-05
    2. 'n' → logprob: -9.875089645385742
    3. 'w' → logprob: -10.875089645385742
    4. 't' → logprob: -11.625089645385742
    5. 'new' → logprob: -13.000089645385742
    6. 'ent' → logprob: -13.250089645385742
    7. 'e' → logprob: -14.125089645385742
    8. 'or' → logprob: -14.250089645385742
    9. 'l' → logprob: -14.500089645385742
    10. 'len' → logprob: -14.750089645385742

Token 739: 'wick' (ID: 14105)
  Prédit: 'wick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wick' → logprob: -0.009622568264603615
    2. 'w' → logprob: -4.759622573852539
    3. 'ick' → logprob: -7.759622573852539
    4. 'W' → logprob: -8.634622573852539
    5. '```' → logprob: -9.384622573852539
    6. '
' → logprob: -10.384622573852539
    7. '

' → logprob: -10.509622573852539
    8. 'wt' → logprob: -10.634622573852539
    9. 'wit' → logprob: -10.634622573852539
    10. '   ' → logprob: -10.759622573852539

Token 740: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -9.372294698550832e-06
    2. '(Tree' → logprob: -13.125009536743164
    3. 'tree' → logprob: -13.125009536743164
    4. '	Tree' → logprob: -13.625009536743164
    5. 'ree' → logprob: -13.750009536743164
    6. 'self' → logprob: -14.250009536743164
    7. '<Tree' → logprob: -14.375009536743164
    8. '(self' → logprob: -14.750009536743164
    9. ' Tree' → logprob: -14.875009536743164
    10. '.Tree' → logprob: -15.125009536743164

Token 741: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0031815171241760254
    2. 'len' → logprob: -5.753181457519531
    3. '[len' → logprob: -13.003181457519531
    4. '(' → logprob: -13.878181457519531
    5. ' len' → logprob: -15.128181457519531
    6. '=len' → logprob: -15.878181457519531
    7. '<len' → logprob: -16.50318145751953
    8. '(size' → logprob: -16.62818145751953
    9. ',len' → logprob: -17.00318145751953
    10. '	len' → logprob: -17.12818145751953

Token 742: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.771655115589965e-05
    2. 'self' → logprob: -11.125018119812012
    3. '(' → logprob: -13.750018119812012
    4. ')' → logprob: -14.250018119812012
    5. '(f' → logprob: -14.750018119812012
    6. '[self' → logprob: -15.125018119812012
    7. '=self' → logprob: -15.625018119812012
    8. '(
' → logprob: -16.125017166137695
    9. '   ' → logprob: -16.750017166137695
    10. '       ' → logprob: -16.750017166137695

Token 743: '.unique' (ID: 76220)
  Prédit: '.unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.unique' → logprob: -1.0325924449716695e-05
    2. 'unique' → logprob: -11.87501049041748
    3. '(unique' → logprob: -13.37501049041748
    4. ' .' → logprob: -14.62501049041748
    5. '.cards' → logprob: -14.87501049041748
    6. '.self' → logprob: -15.12501049041748
    7. '.f' → logprob: -15.25001049041748
    8. '.com' → logprob: -16.125009536743164
    9. '.' → logprob: -16.500009536743164
    10. '.user' → logprob: -16.625009536743164

Token 744: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.0021435972303152084
    2. 'self' → logprob: -6.502143383026123
    3. '(self' → logprob: -7.377143383026123
    4. '.cards' → logprob: -12.502143859863281
    5. 'Cards' → logprob: -13.002143859863281
    6. '[self' → logprob: -13.377143859863281
    7. ' self' → logprob: -13.502143859863281
    8. '_card' → logprob: -14.002143859863281
    9. ')' → logprob: -14.002143859863281
    10. 's' → logprob: -14.627143859863281

Token 745: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38734376430511475
    2. ')
' → logprob: -1.1373437643051147
    3. '       ' → logprob: -7.887343883514404
    4. ')
' → logprob: -9.887343406677246
    5. ')

' → logprob: -10.762343406677246
    6. '())
' → logprob: -11.262343406677246
    7. '())' → logprob: -12.137343406677246
    8. '   ' → logprob: -13.137343406677246
    9. ')`
' → logprob: -13.262343406677246
    10. '()' → logprob: -14.012343406677246

Token 746: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005087883677333593
    2. ' left' → logprob: -6.255087852478027
    3. '
' → logprob: -7.005087852478027
    4. '```' → logprob: -7.130087852478027
    5. ' l' → logprob: -7.255087852478027
    6. 'left' → logprob: -7.630087852478027
    7. 'l' → logprob: -9.630087852478027
    8. 'count' → logprob: -10.005087852478027
    9. ' count' → logprob: -10.630087852478027
    10. '        
' → logprob: -10.755087852478027

Token 747: ' res' (ID: 694)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0535573959350586
    2. '       ' → logprob: -1.8035573959350586
    3. ' n' → logprob: -2.1785573959350586
    4. 'count' → logprob: -2.1785573959350586
    5. ' left' → logprob: -2.4285573959350586
    6. 'l' → logprob: -2.6785573959350586
    7. 'left' → logprob: -2.8035573959350586
    8. ' l' → logprob: -4.178557395935059
    9. ' count' → logprob: -4.803557395935059
    10. 'result' → logprob: -5.053557395935059

Token 748: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038043782114982605
    2. '=' → logprob: -3.288043737411499
    3. '       ' → logprob: -14.413043975830078
    4. ' ' → logprob: -14.413043975830078
    5. '	' → logprob: -14.913043975830078
    6. '   ' → logprob: -15.413043975830078
    7. ',' → logprob: -15.788043975830078
    8. '    ' → logprob: -16.038043975830078
    9. '        ' → logprob: -16.038043975830078
    10. ' =
' → logprob: -16.413043975830078

Token 749: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16022615134716034
    2. ' ' → logprob: -1.9102261066436768
    3. ' ' → logprob: -13.160225868225098
    4. '   ' → logprob: -17.910226821899414
    5. '	' → logprob: -18.535226821899414
    6. '       ' → logprob: -18.910226821899414
    7. '  ' → logprob: -19.535226821899414
    8. '=' → logprob: -19.785226821899414
    9. '۰' → logprob: -19.910226821899414
    10. '    ' → logprob: -20.160226821899414

Token 750: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -18.25
    4. 'self' → logprob: -18.25
    5. 'len' → logprob: -20.375
    6. '       ' → logprob: -20.5
    7. 'l' → logprob: -20.625
    8. '```' → logprob: -20.625
    9. '۰' → logprob: -20.625
    10. '[' → logprob: -21.0

Token 751: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13062234222888947
    2. ' l' → logprob: -2.130622386932373
    3. ' left' → logprob: -6.005622386932373
    4. ',' → logprob: -7.755622386932373
    5. ' i' → logprob: -7.755622386932373
    6. '```' → logprob: -8.755621910095215
    7. '   ' → logprob: -10.005621910095215
    8. ' r' → logprob: -10.380621910095215
    9. '        
' → logprob: -11.255621910095215
    10. ' n' → logprob: -11.380621910095215

Token 752: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10504123568534851
    2. ' l' → logprob: -2.355041265487671
    3. ' left' → logprob: -5.605041027069092
    4. ' i' → logprob: -7.855041027069092
    5. '```' → logprob: -8.48004150390625
    6. ' r' → logprob: -8.73004150390625
    7. ',' → logprob: -9.60504150390625
    8. 'l' → logprob: -9.85504150390625
    9. ' right' → logprob: -10.23004150390625
    10. '
' → logprob: -10.35504150390625

Token 753: ' left' (ID: 3561)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1386745721101761
    2. 'left' (adapté à ' left') → logprob: -2.13867449760437
    3. 'r' → logprob: -5.013674736022949
    4. 'n' → logprob: -5.763674736022949
    5. 'j' → logprob: -7.263674736022949
    6. 'count' → logprob: -7.888674736022949
    7. 'freq' → logprob: -8.01367473602295
    8. 'right' → logprob: -9.01367473602295
    9. 'i' → logprob: -9.26367473602295
    10. '       ' → logprob: -9.38867473602295

Token 754: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761898756027222
    2. ' =' → logprob: -0.8261898756027222
    3. ',' → logprob: -8.326189994812012
    4. '   ' → logprob: -12.326189994812012
    5. '       ' → logprob: -13.451189994812012
    6. '```' → logprob: -14.201189994812012
    7. ' ' → logprob: -14.826189994812012
    8. ' ,' → logprob: -14.826189994812012
    9. ')' → logprob: -15.201189994812012
    10. '<|end|>' → logprob: -16.201189041137695

Token 755: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '       ' → logprob: -16.750123977661133
    4. '   ' → logprob: -17.375123977661133
    5. '=' → logprob: -19.000123977661133
    6. '1' → logprob: -19.750123977661133
    7. '           ' → logprob: -20.375123977661133
    8. '۰' → logprob: -20.875123977661133
    9. ' =' → logprob: -21.250123977661133
    10. '-' → logprob: -21.250123977661133

Token 756: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. 'right' → logprob: -18.5
    4. '-' → logprob: -18.625
    5. '=' → logprob: -18.75
    6. 'self' → logprob: -19.125
    7. '   ' → logprob: -19.875
    8. '1' → logprob: -20.0
    9. '۰' → logprob: -21.0
    10. '```' → logprob: -21.4375

Token 757: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3614113926887512
    2. '
' → logprob: -1.2364113330841064
    3. '```' → logprob: -4.9864115715026855
    4. 'right' → logprob: -5.9864115715026855
    5. ' right' → logprob: -7.1114115715026855
    6. ' 
' → logprob: -7.3614115715026855
    7. '        
' → logprob: -7.4864115715026855
    8. ',' → logprob: -7.8614115715026855
    9. ' for' → logprob: -8.736411094665527
    10. '   ' → logprob: -8.986411094665527

Token 758: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.200241819024086
    2. 'right' → logprob: -1.9502418041229248
    3. ' right' → logprob: -3.575241804122925
    4. '```' → logprob: -5.200242042541504
    5. ' for' → logprob: -5.825242042541504
    6. 'for' → logprob: -6.575242042541504
    7. 'count' → logprob: -8.325242042541504
    8. '           ' → logprob: -8.575242042541504
    9. '   ' → logprob: -8.950242042541504
    10. ',right' → logprob: -9.200242042541504

Token 759: ' right' (ID: 1849)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5908098816871643
    2. 'right' (adapté à ' right') → logprob: -0.8408098816871643
    3. 'count' → logprob: -4.3408098220825195
    4. '       ' → logprob: -6.8408098220825195
    5. 'freq' → logprob: -7.5908098220825195
    6. 'counts' → logprob: -9.59080982208252
    7. 'fen' → logprob: -10.09080982208252
    8. ' for' → logprob: -10.84080982208252
    9. ' right' → logprob: -11.46580982208252
    10. 'cnt' → logprob: -11.84080982208252

Token 760: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12748077511787415
    2. ' =' → logprob: -2.1274807453155518
    3. '+=' → logprob: -8.127480506896973
    4. ' +=' → logprob: -8.627480506896973
    5. '```' → logprob: -10.877480506896973
    6. '<|end|>' → logprob: -10.877480506896973
    7. '0' → logprob: -11.002480506896973
    8. '+' → logprob: -11.752480506896973
    9. ')' → logprob: -11.877480506896973
    10. '   ' → logprob: -13.377480506896973

Token 761: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012061846209689975
    2. '-' → logprob: -6.751206398010254
    3. ' ' → logprob: -10.376206398010254
    4. ' -' → logprob: -12.501206398010254
    5. '   ' → logprob: -14.126206398010254
    6. '       ' → logprob: -15.126206398010254
    7. '           ' → logprob: -17.126205444335938
    8. '=' → logprob: -17.876205444335938
    9. '
' → logprob: -18.376205444335938
    10. '```' → logprob: -19.001205444335938

Token 762: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889099419116974
    2. '-' → logprob: -2.5788910388946533
    3. ' -' → logprob: -14.578890800476074
    4. 'self' → logprob: -15.828890800476074
    5. ' ' → logprob: -16.20389175415039
    6. '   ' → logprob: -16.32889175415039
    7. '−' → logprob: -16.45389175415039
    8. '```' → logprob: -17.26639175415039
    9. '-self' → logprob: -17.57889175415039
    10. '-
' → logprob: -17.70389175415039

Token 763: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008470610715448856
    2. '```' → logprob: -5.38347053527832
    3. '
' → logprob: -6.13347053527832
    4. '        
' → logprob: -8.00847053527832
    5. 'while' → logprob: -8.25847053527832
    6. ' while' → logprob: -8.63347053527832
    7. ',' → logprob: -9.00847053527832
    8. 'count' → logprob: -9.25847053527832
    9. ')' → logprob: -9.25847053527832
    10. '[' → logprob: -9.38347053527832

Token 764: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017921874299645424
    2. '```' → logprob: -4.2679219245910645
    3. 'while' → logprob: -6.2679219245910645
    4. ' while' → logprob: -7.5179219245910645
    5. ',' → logprob: -7.7679219245910645
    6. '
' → logprob: -8.267921447753906
    7. '        
' → logprob: -8.267921447753906
    8. '           ' → logprob: -9.642921447753906
    9. '   ' → logprob: -10.017921447753906
    10. '``' → logprob: -10.017921447753906

Token 765: ' counts' (ID: 28991)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7202027440071106
    2. '       ' → logprob: -1.2202026844024658
    3. 'while' → logprob: -2.095202684402466
    4. 'count' → logprob: -3.220202684402466
    5. ' n' → logprob: -3.720202684402466
    6. ' while' → logprob: -3.970202684402466
    7. 'N' → logprob: -4.970202922821045
    8. '```' → logprob: -7.095202922821045
    9. ' count' → logprob: -7.345202922821045
    10. ' N' → logprob: -7.470202922821045

Token 766: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3508731424808502
    2. '=' → logprob: -1.2258731126785278
    3. '=[' → logprob: -6.725872993469238
    4. '[' → logprob: -7.100872993469238
    5. '[right' → logprob: -9.225872993469238
    6. '[left' → logprob: -9.350872993469238
    7. ' =[' → logprob: -9.725872993469238
    8. ']' → logprob: -10.100872993469238
    9. '[count' → logprob: -10.600872993469238
    10. '       ' → logprob: -10.600872993469238

Token 767: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0380416102707386
    2. ' [' → logprob: -3.288041591644287
    3. '{' → logprob: -16.538042068481445
    4. '0' → logprob: -17.913042068481445
    5. '[count' → logprob: -19.163042068481445
    6. '[len' → logprob: -19.413042068481445
    7. ' ' → logprob: -19.913042068481445
    8. '   ' → logprob: -20.163042068481445
    9. ' defaultdict' → logprob: -20.288042068481445
    10. '{}' → logprob: -20.288042068481445

Token 768: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '۰' → logprob: -22.625
    4. '   ' → logprob: -23.25
    5. '[' → logprob: -23.75
    6. '           ' → logprob: -24.25
    7. 'False' → logprob: -24.375
    8. '000' → logprob: -24.625
    9. '       ' → logprob: -25.0
    10. '
' → logprob: -25.0

Token 769: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003582263889256865
    2. ' ]' → logprob: -8.750358581542969
    3. ']*' → logprob: -9.000358581542969
    4. ']*(' → logprob: -10.125358581542969
    5. ' for' → logprob: -11.625358581542969
    6. '0' → logprob: -11.875358581542969
    7. 'for' → logprob: -12.000358581542969
    8. ' *' → logprob: -12.375358581542969
    9. '[' → logprob: -12.875358581542969
    10. '*' → logprob: -13.250358581542969

Token 770: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8218995332717896
    2. ' *' → logprob: -0.8218995332717896
    3. ']' → logprob: -2.1968994140625
    4. ']*' → logprob: -5.6968994140625
    5. '[' → logprob: -6.5718994140625
    6. ')' → logprob: -6.5718994140625
    7. '0' → logprob: -6.6968994140625
    8. '*(' → logprob: -7.3218994140625
    9. '=' → logprob: -7.8218994140625
    10. ',' → logprob: -7.9468994140625

Token 771: ' (' (ID: 350)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.00020663968462031335
    2. ' (' → logprob: -8.50020694732666
    3. '((' → logprob: -13.50020694732666
    4. '(length' → logprob: -14.00020694732666
    5. '(self' → logprob: -15.25020694732666
    6. '       ' → logprob: -15.25020694732666
    7. '(size' → logprob: -15.50020694732666
    8. '(max' → logprob: -16.000205993652344
    9. '   ' → logprob: -16.625205993652344
    10. '(' → logprob: -17.250205993652344

Token 772: 'len' (ID: 3303)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0008729901164770126
    2. 'len' → logprob: -7.12587308883667
    3. ' (' → logprob: -9.625872611999512
    4. '[len' → logprob: -13.875872611999512
    5. ' len' → logprob: -13.875872611999512
    6. '(length' → logprob: -15.750872611999512
    7. '(' → logprob: -16.250873565673828
    8. ',len' → logprob: -16.250873565673828
    9. '(self' → logprob: -16.375873565673828
    10. '=len' → logprob: -16.750873565673828

Token 773: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004330532974563539
    2. 'self' → logprob: -7.750432968139648
    3. '(f' → logprob: -13.625432968139648
    4. '(' → logprob: -15.125432968139648
    5. '(count' → logprob: -15.750432968139648
    6. ' (' → logprob: -16.12543296813965
    7. ' self' → logprob: -16.25043296813965
    8. '[self' → logprob: -16.50043296813965
    9. '   ' → logprob: -16.62543296813965
    10. '=self' → logprob: -16.75043296813965

Token 774: '.unique' (ID: 76220)
  Prédit: '.unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.unique' → logprob: -0.3953624367713928
    2. 'unique' → logprob: -1.895362377166748
    3. '_unique' → logprob: -2.145362377166748
    4. 'counts' → logprob: -3.645362377166748
    5. '(unique' → logprob: -4.395362377166748
    6. 'self' → logprob: -4.895362377166748
    7. '.count' → logprob: -5.270362377166748
    8. '.cards' → logprob: -5.770362377166748
    9. '(cards' → logprob: -6.770362377166748
    10. '(count' → logprob: -7.270362377166748

Token 775: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.007477783132344484
    2. '_unique' → logprob: -5.007477760314941
    3. 'unique' → logprob: -7.257477760314941
    4. '.unique' → logprob: -10.757477760314941
    5. '_chars' → logprob: -12.132477760314941
    6. '(unique' → logprob: -12.132477760314941
    7. '```' → logprob: -12.132477760314941
    8. '_card' → logprob: -13.132477760314941
    9. ' unique' → logprob: -13.257477760314941
    10. 'Cards' → logprob: -13.382477760314941

Token 776: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02762662246823311
    2. ' +' → logprob: -3.9026265144348145
    3. ')' → logprob: -5.0276265144348145
    4. ')+' → logprob: -7.6526265144348145
    5. '       ' → logprob: -11.777626991271973
    6. '()+' → logprob: -11.902626991271973
    7. ')]' → logprob: -12.402626991271973
    8. '   ' → logprob: -12.652626991271973
    9. ']' → logprob: -13.402626991271973
    10. ']+' → logprob: -13.527626991271973

Token 777: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04028426110744476
    2. ' +' → logprob: -3.4152841567993164
    3. ')' → logprob: -5.040284156799316
    4. '       ' → logprob: -9.415284156799316
    5. '+)' → logprob: -11.415284156799316
    6. ')+' → logprob: -11.415284156799316
    7. '```' → logprob: -11.790284156799316
    8. '<|end|>' → logprob: -11.915284156799316
    9. '[' → logprob: -12.040284156799316
    10. ')]' → logprob: -12.665284156799316

Token 778: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -15.875004768371582
    4. '   ' → logprob: -16.2500057220459
    5. '0' → logprob: -16.3750057220459
    6. '           ' → logprob: -17.5000057220459
    7. '       ' → logprob: -17.8750057220459
    8. '2' → logprob: -18.0000057220459
    9. '=' → logprob: -18.5000057220459
    10. '{' → logprob: -18.7500057220459

Token 779: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8550976164988242e-05
    2. '2' → logprob: -11.000018119812012
    3. ' ' → logprob: -13.625018119812012
    4. '   ' → logprob: -15.125018119812012
    5. '```' → logprob: -15.500018119812012
    6. '0' → logprob: -15.875018119812012
    7. '10' → logprob: -17.000019073486328
    8. '100' → logprob: -17.875019073486328
    9. '
' → logprob: -18.000019073486328
    10. '       ' → logprob: -18.500019073486328

Token 780: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05697806179523468
    2. ')
' → logprob: -2.9319779872894287
    3. '       ' → logprob: -6.181978225708008
    4. ' )' → logprob: -12.181978225708008
    5. ')

' → logprob: -12.556978225708008
    6. '   ' → logprob: -12.806978225708008
    7. ']' → logprob: -12.931978225708008
    8. '[' → logprob: -13.056978225708008
    9. '
' → logprob: -13.431978225708008
    10. ')
' → logprob: -13.556978225708008

Token 781: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11028296500444412
    2. '```' → logprob: -2.8602828979492188
    3. ' while' → logprob: -3.9852828979492188
    4. '        
' → logprob: -3.9852828979492188
    5. ' 
' → logprob: -5.735282897949219
    6. 'while' → logprob: -6.485282897949219
    7. '<|end|>' → logprob: -6.485282897949219
    8. '
' → logprob: -7.360282897949219
    9. ',' → logprob: -7.485282897949219
    10. '``' → logprob: -7.485282897949219

Token 782: ' def' (ID: 1056)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06277956813573837
    2. '       ' → logprob: -3.062779664993286
    3. ' while' → logprob: -4.687779426574707
    4. '```' → logprob: -6.062779426574707
    5. 'n' → logprob: -6.437779426574707
    6. 'for' → logprob: -7.687779426574707
    7. 'count' → logprob: -8.687779426574707
    8. 'N' → logprob: -9.937779426574707
    9. 'current' → logprob: -9.937779426574707
    10. '``' → logprob: -10.187779426574707

Token 783: ' fen' (ID: 25170)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.0002306699752808
    2. 'update' → logprob: -1.2502306699752808
    3. ' add' → logprob: -1.6252306699752808
    4. ' update' → logprob: -2.1252307891845703
    5. 'increment' → logprob: -4.75023078918457
    6. '_add' → logprob: -5.12523078918457
    7. '_update' → logprob: -6.00023078918457
    8. 'increase' → logprob: -6.37523078918457
    9. ' increment' → logprob: -6.87523078918457
    10. ' def' → logprob: -6.87523078918457

Token 784: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -4.723352049040841e-06
    2. '
' → logprob: -13.875004768371582
    3. 'ｗ' → logprob: -14.625004768371582
    4. '```' → logprob: -14.625004768371582
    5. ' w' → logprob: -15.000004768371582
    6. '``' → logprob: -15.250004768371582
    7. '   ' → logprob: -15.375004768371582
    8. '

' → logprob: -15.375004768371582
    9. '       ' → logprob: -15.375004768371582
    10. ' =' → logprob: -15.625004768371582

Token 785: '_add' (ID: 8390)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.008617881685495377
    2. '.' → logprob: -5.383617877960205
    3. '_update' → logprob: -7.008617877960205
    4. '.query' → logprob: -7.133617877960205
    5. '       ' → logprob: -7.258617877960205
    6. 'def' → logprob: -7.633617877960205
    7. ' .' → logprob: -7.883617877960205
    8. 'update' → logprob: -8.508618354797363
    9. '._' → logprob: -9.633618354797363
    10. '           ' → logprob: -9.883618354797363

Token 786: '(x' (ID: 4061)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002940971404314041
    2. '(' → logprob: -6.002941131591797
    3. '(i' → logprob: -7.752941131591797
    4. ' (' → logprob: -11.627941131591797
    5. '(index' → logprob: -12.002941131591797
    6. '(s' → logprob: -12.002941131591797
    7. '(f' → logprob: -13.127941131591797
    8. '(
' → logprob: -13.252941131591797
    9. '(value' → logprob: -13.502941131591797
    10. '(idx' → logprob: -13.502941131591797

Token 787: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007881867350079119
    2. ',x' → logprob: -7.75078821182251
    3. 'self' → logprob: -8.375787734985352
    4. '(x' → logprob: -10.250787734985352
    5. ' ,' → logprob: -10.750787734985352
    6. '       ' → logprob: -10.875787734985352
    7. '[x' → logprob: -11.500787734985352
    8. '           ' → logprob: -11.625787734985352
    9. '(self' → logprob: -11.875787734985352
    10. '):' → logprob: -12.125787734985352

Token 788: '           ' (ID: 352)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.05617361515760422
    2. '       ' → logprob: -3.30617356300354
    3. '(f' → logprob: -4.681173801422119
    4. '           ' → logprob: -5.181173801422119
    5. '(' → logprob: -6.681173801422119
    6. '   ' → logprob: -7.431173801422119
    7. '               ' → logprob: -8.431173324584961
    8. 'x' → logprob: -8.556173324584961
    9. '```' → logprob: -8.931173324584961
    10. '(self' → logprob: -9.181173324584961

Token 789: ' fen' (ID: 25170)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0353214740753174
    2. 'while' → logprob: -1.1603214740753174
    3. 'fen' (adapté à ' fen') → logprob: -1.7853214740753174
    4. 'i' → logprob: -2.5353214740753174
    5. 'self' → logprob: -3.1603214740753174
    6. 'x' → logprob: -3.7853214740753174
    7. ' while' → logprob: -5.160321235656738
    8. '           ' → logprob: -5.285321235656738
    9. ' fen' → logprob: -6.035321235656738
    10. '   ' → logprob: -6.535321235656738

Token 790: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.664371848164592e-05
    2. '       ' → logprob: -11.125016212463379
    3. '_w' → logprob: -14.875016212463379
    4. '.w' → logprob: -15.250016212463379
    5. '   ' → logprob: -15.250016212463379
    6. 'W' → logprob: -15.750016212463379
    7. ' =' → logprob: -16.250017166137695
    8. '[' → logprob: -16.375017166137695
    9. 'ew' → logprob: -16.500017166137695
    10. '	w' → logprob: -16.750017166137695

Token 791: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.004651080351322889
    2. '.' → logprob: -5.379651069641113
    3. ' .' → logprob: -11.004651069641113
    4. '       ' → logprob: -12.254651069641113
    5. ').' → logprob: -13.004651069641113
    6. '.tree' → logprob: -13.254651069641113
    7. '.
' → logprob: -13.754651069641113
    8. '.add' → logprob: -14.129651069641113
    9. 'update' → logprob: -14.254651069641113
    10. '.increment' → logprob: -14.629651069641113

Token 792: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.003845555940642953
    2. '(count' → logprob: -6.003845691680908
    3. '(' → logprob: -6.628845691680908
    4. '(
' → logprob: -10.12884521484375
    5. 'x' → logprob: -12.87884521484375
    6. ' (' → logprob: -13.12884521484375
    7. 'counts' → logprob: -14.87884521484375
    8. '<|end|>' → logprob: -15.00384521484375
    9. ' x' → logprob: -15.12884521484375
    10. '(len' → logprob: -15.50384521484375

Token 793: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.848420551046729e-05
    2. ' ,' → logprob: -10.1250581741333
    3. '           ' → logprob: -11.7500581741333
    4. ',
' → logprob: -12.2500581741333
    5. ',x' → logprob: -13.2500581741333
    6. '1' → logprob: -13.7500581741333
    7. ')' → logprob: -14.2500581741333
    8. '               ' → logprob: -14.2500581741333
    9. '   ' → logprob: -15.1250581741333
    10. '       ' → logprob: -15.1250581741333

Token 794: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.250004768371582
    3. '           ' → logprob: -15.000004768371582
    4. '+' → logprob: -16.7500057220459
    5. '   ' → logprob: -18.3750057220459
    6. '               ' → logprob: -18.8750057220459
    7. '            ' → logprob: -20.1250057220459
    8. ' +' → logprob: -20.5000057220459
    9. ')' → logprob: -20.7500057220459
    10. '                   ' → logprob: -21.0000057220459

Token 795: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '   ' → logprob: -20.875
    4. '+' → logprob: -22.125
    5. ')' → logprob: -22.5
    6. '```' → logprob: -22.75
    7. '  ' → logprob: -24.25
    8. '           ' → logprob: -24.5
    9. '
' → logprob: -24.5
    10. '       ' → logprob: -25.0

Token 796: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.29340603761375e-05
    2. ')
' → logprob: -9.500092506408691
    3. '<|end|>' → logprob: -11.125092506408691
    4. '       ' → logprob: -13.375092506408691
    5. '           ' → logprob: -14.500092506408691
    6. ')return' → logprob: -14.875092506408691
    7. ' )' → logprob: -15.125092506408691
    8. '),' → logprob: -15.875092506408691
    9. '<|end|>' → logprob: -16.000093460083008
    10. ')

' → logprob: -16.500093460083008

Token 797: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0524652861058712
    2. '
' → logprob: -3.3024652004241943
    3. '<|end|>' → logprob: -4.552465438842773
    4. ')' → logprob: -6.177465438842773
    5. '```' → logprob: -8.052465438842773
    6. '           ' → logprob: -8.302465438842773
    7. '   ' → logprob: -8.302465438842773
    8. '        
' → logprob: -8.552465438842773
    9. ')
' → logprob: -8.677465438842773
    10. '  
' → logprob: -9.177465438842773

Token 798: ' def' (ID: 1056)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3987090587615967
    2. '       ' → logprob: -1.1487090587615967
    3. ' while' → logprob: -4.648709297180176
    4. 'def' (adapté à ' def') → logprob: -7.023709297180176
    5. '```' → logprob: -7.523709297180176
    6. '           ' → logprob: -7.773709297180176
    7. '   ' → logprob: -8.898709297180176
    8. 'if' → logprob: -9.398709297180176
    9. 'count' → logprob: -10.148709297180176
    10. 'While' → logprob: -10.273709297180176

Token 799: ' fen' (ID: 25170)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.0003049570368602872
    2. ' fen' → logprob: -8.12530517578125
    3. 'counts' → logprob: -12.00030517578125
    4. 'count' → logprob: -13.50030517578125
    5. 'Fen' → logprob: -14.50030517578125
    6. ' counts' → logprob: -15.25030517578125
    7. 'fe' → logprob: -16.62530517578125
    8. ' ' → logprob: -17.00030517578125
    9. '   ' → logprob: -17.00030517578125
    10. 'fer' → logprob: -17.31280517578125

Token 800: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.128163257315464e-07
    2. '_w' → logprob: -15.625
    3. '
' → logprob: -18.5
    4. '_' → logprob: -18.75
    5. ' w' → logprob: -19.0
    6. 'ｗ' → logprob: -19.125
    7. '	w' → logprob: -19.25
    8. 'ew' → logprob: -19.5
    9. 'wv' → logprob: -19.875
    10. '

' → logprob: -19.875

Token 801: '_remove' (ID: 41629)
  Prédit: '.query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -0.22060762345790863
    2. '_query' → logprob: -2.0956075191497803
    3. '_remove' → logprob: -2.8456075191497803
    4. 'query' → logprob: -5.095607757568359
    5. '_sum' → logprob: -5.595607757568359
    6. '=query' → logprob: -6.095607757568359
    7. '_add' → logprob: -6.345607757568359
    8. '_sub' → logprob: -6.470607757568359
    9. '.remove' → logprob: -7.970607757568359
    10. 'sum' → logprob: -8.34560775756836

Token 802: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0013289296766743064
    2. '(' → logprob: -6.626328945159912
    3. ' (' → logprob: -13.376328468322754
    4. '(token' → logprob: -14.751328468322754
    5. '(value' → logprob: -14.876328468322754
    6. '(
' → logprob: -15.876328468322754
    7. '(s' → logprob: -15.876328468322754
    8. '(i' → logprob: -16.25132942199707
    9. '(a' → logprob: -16.37632942199707
    10. '(y' → logprob: -16.37632942199707

Token 803: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09294266253709793
    2. '):
' → logprob: -2.592942714691162
    3. '):' → logprob: -4.342942714691162
    4. ',x' → logprob: -7.092942714691162
    5. '(x' → logprob: -10.467942237854004
    6. ',
' → logprob: -10.467942237854004
    7. ' ,' → logprob: -10.592942237854004
    8. ')' → logprob: -11.217942237854004
    9. '):
' → logprob: -11.592942237854004
    10. '   ' → logprob: -11.842942237854004

Token 804: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20668825507164001
    2. ' fen' → logprob: -2.456688165664673
    3. 'fen' → logprob: -2.956688165664673
    4. '       ' → logprob: -3.081688165664673
    5. '               ' → logprob: -6.081688404083252
    6. 'self' → logprob: -8.706687927246094
    7. '   ' → logprob: -8.831687927246094
    8. ' ' → logprob: -8.831687927246094
    9. '(f' → logprob: -9.081687927246094
    10. '(' → logprob: -10.206687927246094

Token 805: ' fen' (ID: 25170)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' (adapté à ' fen') → logprob: -0.0001955537445610389
    2. ' fen' → logprob: -8.625195503234863
    3. '           ' → logprob: -11.500195503234863
    4. '       ' → logprob: -13.000195503234863
    5. 'self' → logprob: -13.250195503234863
    6. '   ' → logprob: -14.625195503234863
    7. '               ' → logprob: -14.875195503234863
    8. 'fe' → logprob: -15.625195503234863
    9. '         ' → logprob: -16.37519645690918
    10. ' ' → logprob: -16.62519645690918

Token 806: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.002205451251938939
    2. '.update' → logprob: -6.1272053718566895
    3. '.' → logprob: -11.752205848693848
    4. 'f' → logprob: -12.877205848693848
    5. 'W' → logprob: -13.627205848693848
    6. '_update' → logprob: -13.627205848693848
    7. '
' → logprob: -14.127205848693848
    8. 'update' → logprob: -14.127205848693848
    9. 'v' → logprob: -14.252205848693848
    10. '.w' → logprob: -14.252205848693848

Token 807: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.00014561474381480366
    2. '.' → logprob: -9.00014591217041
    3. ' .' → logprob: -10.87514591217041
    4. 'update' → logprob: -13.12514591217041
    5. '.remove' → logprob: -14.50014591217041
    6. '_update' → logprob: -15.25014591217041
    7. '   ' → logprob: -15.75014591217041
    8. '.query' → logprob: -16.375144958496094
    9. '.add' → logprob: -16.500144958496094
    10. '       ' → logprob: -17.125144958496094

Token 808: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -9.543733904138207e-05
    2. 'x' → logprob: -9.75009536743164
    3. '(' → logprob: -10.25009536743164
    4. ' x' → logprob: -14.00009536743164
    5. ' (' → logprob: -14.25009536743164
    6. '(
' → logprob: -16.00009536743164
    7. '```' → logprob: -17.62509536743164
    8. ')' → logprob: -17.75009536743164
    9. '<|end|>' → logprob: -17.87509536743164
    10. '	x' → logprob: -18.12509536743164

Token 809: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.922563963802531e-05
    2. ',-' → logprob: -10.375079154968262
    3. ' ,' → logprob: -10.875079154968262
    4. ',x' → logprob: -11.250079154968262
    5. '-' → logprob: -11.375079154968262
    6. ',
' → logprob: -13.250079154968262
    7. 'x' → logprob: -14.250079154968262
    8. '           ' → logprob: -14.250079154968262
    9. '(x' → logprob: -15.125079154968262
    10. '   ' → logprob: -15.125079154968262

Token 810: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00023071514442563057
    2. ' -' → logprob: -8.37523078918457
    3. '   ' → logprob: -16.12523078918457
    4. '
' → logprob: -18.00023078918457
    5. ' ' → logprob: -19.37523078918457
    6. '	' → logprob: -19.50023078918457
    7. '  ' → logprob: -19.50023078918457
    8. '```' → logprob: -19.50023078918457
    9. '           ' → logprob: -20.25023078918457
    10. '−' → logprob: -20.50023078918457

Token 811: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004080315411556512
    2. ' ' → logprob: -8.500408172607422
    3. 'x' → logprob: -8.750408172607422
    4. ' x' → logprob: -10.000408172607422
    5. ')' → logprob: -14.875408172607422
    6. '```' → logprob: -15.875408172607422
    7. '   ' → logprob: -16.125408172607422
    8. '           ' → logprob: -17.250408172607422
    9. ',' → logprob: -17.625408172607422
    10. '<|end|>' → logprob: -18.750408172607422

Token 812: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001414426224073395
    2. ')
' → logprob: -9.000141143798828
    3. '       ' → logprob: -11.000141143798828
    4. '           ' → logprob: -13.875141143798828
    5. ')

' → logprob: -16.250141143798828
    6. ' )' → logprob: -16.750141143798828
    7. '   ' → logprob: -17.125141143798828
    8. ')
' → logprob: -17.125141143798828
    9. ')x' → logprob: -17.375141143798828
    10. '),' → logprob: -17.875141143798828

Token 813: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008547629113309085
    2. '```' → logprob: -7.500854969024658
    3. ' while' → logprob: -9.1258544921875
    4. '        
' → logprob: -9.7508544921875
    5. '           ' → logprob: -10.0008544921875
    6. ',' → logprob: -10.3758544921875
    7. 'while' → logprob: -10.5008544921875
    8. '<|end|>' → logprob: -11.6258544921875
    9. '   ' → logprob: -11.8758544921875
    10. ')' → logprob: -12.3758544921875

Token 814: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0069557190872728825
    2. '       ' → logprob: -5.131955623626709
    3. 'n' → logprob: -8.131956100463867
    4. 'for' → logprob: -8.631956100463867
    5. ' while' → logprob: -8.631956100463867
    6. 'count' → logprob: -8.756956100463867
    7. 'current' → logprob: -9.131956100463867
    8. 'val' → logprob: -10.881956100463867
    9. 'window' → logprob: -11.131956100463867
    10. 'curr' → logprob: -11.381956100463867

Token 815: ' We'll' (ID: 46830)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.02527156099677086
    2. 'for' → logprob: -4.400271415710449
    3. '       ' → logprob: -5.775271415710449
    4. ' while' → logprob: -5.900271415710449
    5. 'n' → logprob: -6.025271415710449
    6. 'current' → logprob: -6.150271415710449
    7. 'count' → logprob: -7.150271415710449
    8. 'curr' → logprob: -8.02527141571045
    9. 'cur' → logprob: -8.27527141571045
    10. 'N' → logprob: -8.27527141571045

Token 816: ' expand' (ID: 10791)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09525575488805771
    2. '       ' → logprob: -2.7202558517456055
    3. ' while' → logprob: -3.9702558517456055
    4. 'n' → logprob: -6.0952558517456055
    5. 'right' → logprob: -6.5952558517456055
    6. 'N' → logprob: -7.8452558517456055
    7. '=' → logprob: -7.8452558517456055
    8. 'count' → logprob: -7.9702558517456055
    9. '   ' → logprob: -8.095255851745605
    10. ' n' → logprob: -8.345255851745605

Token 817: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0014498754171654582
    2. '       ' → logprob: -7.251450061798096
    3. ' right' → logprob: -7.751450061798096
    4. '           ' → logprob: -8.751449584960938
    5. 'self' → logprob: -9.626449584960938
    6. 'while' → logprob: -10.376449584960938
    7. 'the' → logprob: -10.626449584960938
    8. '   ' → logprob: -11.626449584960938
    9. '```' → logprob: -12.001449584960938
    10. 'left' → logprob: -12.376449584960938

Token 818: ' pointer' (ID: 16233)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3190305531024933
    2. '       ' → logprob: -2.444030523300171
    3. '+=' → logprob: -2.694030523300171
    4. ' +=' → logprob: -3.194030523300171
    5. '=' → logprob: -3.944030523300171
    6. ' while' → logprob: -3.944030523300171
    7. '
' → logprob: -4.44403076171875
    8. ' in' → logprob: -4.44403076171875
    9. '           ' → logprob: -5.81903076171875
    10. 'in' → logprob: -5.81903076171875

Token 819: ',' (ID: 11)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4292236268520355
    2. '       ' → logprob: -1.179223656654358
    3. ' while' → logprob: -4.804223537445068
    4. '+=' → logprob: -4.804223537445068
    5. '=' → logprob: -4.929223537445068
    6. '<|end|>' → logprob: -5.179223537445068
    7. '
' → logprob: -6.304223537445068
    8. 'in' → logprob: -6.429223537445068
    9. '<|end|>' → logprob: -6.429223537445068
    10. ' in' → logprob: -6.804223537445068

Token 820: ' adding' (ID: 12673)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06797324120998383
    2. ' while' → logprob: -3.3179731369018555
    3. '       ' → logprob: -3.5679731369018555
    4. '           ' → logprob: -6.9429731369018555
    5. 'for' → logprob: -9.567973136901855
    6. 'counts' → logprob: -9.942973136901855
    7. '	while' → logprob: -9.942973136901855
    8. 'count' → logprob: -10.317973136901855
    9. 'if' → logprob: -10.692973136901855
    10. '   ' → logprob: -10.692973136901855

Token 821: ' elements' (ID: 8632)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.046458229422569275
    2. ' self' → logprob: -3.2964582443237305
    3. '           ' → logprob: -5.6714582443237305
    4. '       ' → logprob: -6.1714582443237305
    5. '1' → logprob: -6.9214582443237305
    6. '```' → logprob: -7.4214582443237305
    7. '   ' → logprob: -7.7964582443237305
    8. '               ' → logprob: -8.42145824432373
    9. ' the' → logprob: -9.42145824432373
    10. '
' → logprob: -9.42145824432373

Token 822: ' <=' (ID: 5017)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6207271814346313
    2. 'while' → logprob: -0.9957271814346313
    3. '
' → logprob: -3.620727062225342
    4. '           ' → logprob: -3.745727062225342
    5. ' while' → logprob: -4.870727062225342
    6. '=' → logprob: -4.995727062225342
    7. ',' → logprob: -5.370727062225342
    8. '        
' → logprob: -5.620727062225342
    9. 'to' → logprob: -5.745727062225342
    10. 'and' → logprob: -5.870727062225342

Token 823: ' val' (ID: 1459)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07640942931175232
    2. ' self' → logprob: -2.701409339904785
    3. 'val' → logprob: -5.326409339904785
    4. ' val' → logprob: -7.076409339904785
    5. 'x' → logprob: -7.826409339904785
    6. 'right' → logprob: -8.576409339904785
    7. ' right' → logprob: -9.951409339904785
    8. ' x' → logprob: -10.701409339904785
    9. 'fen' → logprob: -10.826409339904785
    10. '(self' → logprob: -12.076409339904785

Token 824: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17084604501724243
    2. ':
' → logprob: -2.7958459854125977
    3. '
' → logprob: -3.0458459854125977
    4. ':' → logprob: -4.045845985412598
    5. '           ' → logprob: -4.295845985412598
    6. ' while' → logprob: -5.545845985412598
    7. ' if' → logprob: -5.795845985412598
    8. ' and' → logprob: -6.170845985412598
    9. 'while' → logprob: -6.170845985412598
    10. '        
' → logprob: -6.795845985412598

Token 825: ' Fen' (ID: 48230)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.14928007125854492
    2. 'fen' → logprob: -2.774280071258545
    3. 'counts' → logprob: -3.274280071258545
    4. ' fen' → logprob: -4.024280071258545
    5. ' right' → logprob: -4.274280071258545
    6. ' counts' → logprob: -5.774280071258545
    7. 'the' → logprob: -6.899280071258545
    8. 'count' → logprob: -7.024280071258545
    9. 'compressed' → logprob: -7.649280071258545
    10. 'self' → logprob: -7.899280071258545

Token 826: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00827743485569954
    2. '       ' → logprob: -4.883277416229248
    3. '```' → logprob: -8.633277893066406
    4. 'wick' → logprob: -9.133277893066406
    5. '           ' → logprob: -9.883277893066406
    6. '``' → logprob: -10.133277893066406
    7. '   ' → logprob: -10.383277893066406
    8. 'ew' → logprob: -10.758277893066406
    9. '               ' → logprob: -10.883277893066406
    10. ')' → logprob: -11.008277893066406

Token 827: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3376394212245941
    2. '           ' → logprob: -1.7126394510269165
    3. ')' → logprob: -3.462639331817627
    4. 'while' → logprob: -4.587639331817627
    5. '[right' → logprob: -4.712639331817627
    6. ' while' → logprob: -4.837639331817627
    7. '[' → logprob: -5.087639331817627
    8. '(right' → logprob: -5.212639331817627
    9. ':
' → logprob: -5.462639331817627
    10. ')
' → logprob: -5.587639331817627

Token 828: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4140138030052185
    2. ' and' → logprob: -1.7890138626098633
    3. '           ' → logprob: -2.4140138626098633
    4. ' while' → logprob: -2.9140138626098633
    5. 'and' → logprob: -4.539013862609863
    6. 'while' → logprob: -4.664013862609863
    7. ')' → logprob: -6.039013862609863
    8. ',' → logprob: -6.789013862609863
    9. '               ' → logprob: -6.914013862609863
    10. ' then' → logprob: -7.289013862609863

Token 829: ' #' (ID: 1069)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.127800703048706
    2. '           ' → logprob: -1.377800703048706
    3. '       ' → logprob: -1.752800703048706
    4. 'and' → logprob: -1.877800703048706
    5. 'while' → logprob: -3.377800703048706
    6. ' while' → logprob: -3.502800703048706
    7. ')' → logprob: -4.877800941467285
    8. '   ' → logprob: -5.127800941467285
    9. ' then' → logprob: -5.377800941467285
    10. '               ' → logprob: -5.752800941467285

Token 830: ' and' (ID: 326)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06329689174890518
    2. '       ' → logprob: -3.3132967948913574
    3. ' while' → logprob: -3.9382967948913574
    4. '           ' → logprob: -6.063296794891357
    5. 'and' → logprob: -6.188296794891357
    6. ' and' → logprob: -8.063297271728516
    7. 'if' → logprob: -8.688297271728516
    8. '   ' → logprob: -8.688297271728516
    9. 'for' → logprob: -9.188297271728516
    10. '               ' → logprob: -9.688297271728516

Token 831: ' move' (ID: 5275)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.014861159026622772
    2. ' while' → logprob: -5.014861106872559
    3. '       ' → logprob: -5.264861106872559
    4. 'move' → logprob: -6.764861106872559
    5. 'de' → logprob: -7.889861106872559
    6. '           ' → logprob: -8.389861106872559
    7. 'remove' → logprob: -8.389861106872559
    8. '#' → logprob: -8.514861106872559
    9. '   ' → logprob: -8.514861106872559
    10. 'count' → logprob: -8.639861106872559

Token 832: ' left' (ID: 3561)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.37743958830833435
    2. 'left' → logprob: -1.3774396181106567
    3. ' right' → logprob: -3.127439498901367
    4. ' left' → logprob: -4.002439498901367
    5. '	right' → logprob: -11.002439498901367
    6. '   ' → logprob: -11.502439498901367
    7. '	left' → logprob: -11.502439498901367
    8. ' lef' → logprob: -12.752439498901367
    9. '```' → logprob: -13.002439498901367
    10. '       ' → logprob: -13.127439498901367

Token 833: ' pointer' (ID: 16233)
  Prédit: 'pointer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pointer' → logprob: -0.5124388337135315
    2. ' pointer' → logprob: -1.6374387741088867
    3. ' +=' → logprob: -1.8874387741088867
    4. '_pointer' → logprob: -4.012438774108887
    5. '+=' → logprob: -4.512438774108887
    6. '       ' → logprob: -5.387438774108887
    7. '```' → logprob: -5.387438774108887
    8. '           ' → logprob: -5.637438774108887
    9. 'while' → logprob: -5.762438774108887
    10. '   ' → logprob: -5.762438774108887

Token 834: ' when' (ID: 1261)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.31653252243995667
    2. '           ' → logprob: -2.191532611846924
    3. ' while' → logprob: -2.441532611846924
    4. '+=' → logprob: -3.566532611846924
    5. ' +=' → logprob: -3.816532611846924
    6. '
' → logprob: -4.441532611846924
    7. 'to' → logprob: -5.566532611846924
    8. ' to' → logprob: -5.941532611846924
    9. '       ' → logprob: -6.441532611846924
    10. ',' → logprob: -7.941532611846924

Token 835: ' sub' (ID: 1543)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.14133615791797638
    2. 'fen' → logprob: -2.89133620262146
    3. ' counts' → logprob: -3.01633620262146
    4. 'right' → logprob: -4.391335964202881
    5. 'cards' → logprob: -5.141335964202881
    6. ' fen' → logprob: -5.391335964202881
    7. 'count' → logprob: -6.516335964202881
    8. 'self' → logprob: -6.641335964202881
    9. ' right' → logprob: -7.766335964202881
    10. 'not' → logprob: -8.391336441040039

Token 836: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.36313170194625854
    2. 'arrays' → logprob: -1.8631317615509033
    3. '       ' → logprob: -1.9881317615509033
    4. '   ' → logprob: -5.363131523132324
    5. 'arr' → logprob: -6.113131523132324
    6. '           ' → logprob: -6.238131523132324
    7. 'right' → logprob: -6.363131523132324
    8. 'rray' → logprob: -8.238131523132324
    9. '_array' → logprob: -8.363131523132324
    10. '               ' → logprob: -8.613131523132324

Token 837: ' length' (ID: 5517)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5964425802230835
    2. 'size' → logprob: -1.5964425802230835
    3. 'length' → logprob: -2.221442699432373
    4. 'elements' → logprob: -2.471442699432373
    5. '           ' → logprob: -4.221442699432373
    6. 'right' → logprob: -4.971442699432373
    7. ' elements' → logprob: -5.471442699432373
    8. '   ' → logprob: -5.721442699432373
    9. '               ' → logprob: -5.846442699432373
    10. 's' → logprob: -5.971442699432373

Token 838: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2844519019126892
    2. '<' → logprob: -2.534451961517334
    3. '>=' → logprob: -2.534451961517334
    4. ' <' → logprob: -3.284451961517334
    5. ' >' → logprob: -3.784451961517334
    6. ' >=' → logprob: -4.284451961517334
    7. 'ex' → logprob: -4.909451961517334
    8. '       ' → logprob: -6.784451961517334
    9. ' exceeds' → logprob: -6.784451961517334
    10. '   ' → logprob: -7.159451961517334

Token 839: ' K' (ID: 658)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011787971016019583
    2. ' self' → logprob: -6.751178741455078
    3. '1' → logprob: -12.626178741455078
    4. '(self' → logprob: -13.501178741455078
    5. '```' → logprob: -14.001178741455078
    6. '2' → logprob: -14.501178741455078
    7. '           ' → logprob: -14.626178741455078
    8. '   ' → logprob: -14.751178741455078
    9. '       ' → logprob: -15.126178741455078
    10. '               ' → logprob: -15.376178741455078

Token 840: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02145790122449398
    2. '
' → logprob: -4.646457672119141
    3. '        
' → logprob: -6.021457672119141
    4. '<|end|>' → logprob: -6.396457672119141
    5. ' while' → logprob: -6.521457672119141
    6. '  
' → logprob: -6.521457672119141
    7. '           ' → logprob: -6.771457672119141
    8. ',' → logprob: -6.896457672119141
    9. ':' → logprob: -7.771457672119141
    10. ':
' → logprob: -7.896457672119141

Token 841: ' counting' (ID: 43276)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.055559564381837845
    2. '               ' → logprob: -3.8055596351623535
    3. '       ' → logprob: -4.1805596351623535
    4. ' while' → logprob: -4.5555596351623535
    5. ' and' → logprob: -6.0555596351623535
    6. 'while' → logprob: -6.9305596351623535
    7. '                   ' → logprob: -7.6805596351623535
    8. 'and' → logprob: -8.055559158325195
    9. '
' → logprob: -8.305559158325195
    10. '   ' → logprob: -8.430559158325195

Token 842: ' how' (ID: 1495)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.2212574481964111
    2. ' fen' → logprob: -1.2212574481964111
    3. 'fen' → logprob: -1.8462574481964111
    4. ' right' → logprob: -3.346257448196411
    5. 'res' → logprob: -3.471257448196411
    6. 'sub' → logprob: -3.596257448196411
    7. 'the' → logprob: -3.721257448196411
    8. '       ' → logprob: -3.721257448196411
    9. 'Fen' → logprob: -4.346257209777832
    10. '           ' → logprob: -4.471257209777832

Token 843: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.2541465163230896
    2. ' many' → logprob: -1.5041465759277344
    3. '           ' → logprob: -7.004146575927734
    4. '       ' → logprob: -7.504146575927734
    5. '_many' → logprob: -7.629146575927734
    6. 'much' → logprob: -9.254146575927734
    7. 'Many' → logprob: -9.754146575927734
    8. '   ' → logprob: -11.004146575927734
    9. '-many' → logprob: -11.379146575927734
    10. '        ' → logprob: -11.504146575927734

Token 844: ' sub' (ID: 1543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8563069105148315
    2. '       ' → logprob: -1.4813069105148315
    3. 'while' → logprob: -2.356307029724121
    4. 'if' → logprob: -2.481307029724121
    5. '               ' → logprob: -2.731307029724121
    6. ' if' → logprob: -3.856307029724121
    7. '<=' → logprob: -4.481307029724121
    8. ' while' → logprob: -4.856307029724121
    9. 'right' → logprob: -4.981307029724121
    10. 'and' → logprob: -4.981307029724121

Token 845: 'arrays' (ID: 158630)
  Prédit: 'arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.011322021484375
    2. 'array' → logprob: -4.511322021484375
    3. '_arrays' → logprob: -9.511322021484375
    4. 'arr' → logprob: -9.511322021484375
    5. 'ar' → logprob: -9.886322021484375
    6. 'rray' → logprob: -10.761322021484375
    7. '   ' → logprob: -10.886322021484375
    8. ' arrays' → logprob: -11.636322021484375
    9. 'arra' → logprob: -12.136322021484375
    10. '_array' → logprob: -12.261322021484375

Token 846: ' have' (ID: 679)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5467304587364197
    2. '       ' → logprob: -1.6717305183410645
    3. ':
' → logprob: -3.1717305183410645
    4. 'while' → logprob: -3.7967305183410645
    5. ' that' → logprob: -3.9217305183410645
    6. '               ' → logprob: -3.9217305183410645
    7. ' with' → logprob: -4.4217305183410645
    8. ':' → logprob: -4.4217305183410645
    9. ' of' → logprob: -4.5467305183410645
    10. ' while' → logprob: -4.6717305183410645

Token 847: ' K' (ID: 658)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.958794355392456
    2. ' kth' → logprob: -1.083794355392456
    3. ' fen' → logprob: -2.208794355392456
    4. ' k' → logprob: -3.083794355392456
    5. 'K' → logprob: -3.083794355392456
    6. ' the' → logprob: -4.083794593811035
    7. ' K' → logprob: -4.083794593811035
    8. 'the' → logprob: -4.333794593811035
    9. 'fen' → logprob: -4.708794593811035
    10. 'self' → logprob: -4.958794593811035

Token 848: '-th' (ID: 14928)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.238584280014038
    2. '       ' → logprob: -1.363584280014038
    3. ' <=' → logprob: -1.488584280014038
    4. '               ' → logprob: -3.113584280014038
    5. '<=' → logprob: -3.238584280014038
    6. '```' → logprob: -3.738584280014038
    7. ' >=' → logprob: -4.113584518432617
    8. ' or' → logprob: -4.363584518432617
    9. ' and' → logprob: -4.363584518432617
    10. '-' → logprob: -5.113584518432617

Token 849: ' <=' (ID: 5017)
  Prédit: ' smallest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -0.3137008249759674
    2. 'small' → logprob: -1.438700795173645
    3. '_small' → logprob: -3.6887009143829346
    4. ' order' → logprob: -6.5637006759643555
    5. ' small' → logprob: -6.5637006759643555
    6. 'order' → logprob: -6.9387006759643555
    7. ' element' → logprob: -7.5637006759643555
    8. 'token' → logprob: -7.6887006759643555
    9. ' token' → logprob: -7.8137006759643555
    10. 'element' → logprob: -7.9387006759643555

Token 850: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.26459863781929016
    2. 'val' → logprob: -1.5145986080169678
    3. ' right' → logprob: -5.014598846435547
    4. ' x' → logprob: -6.264598846435547
    5. 'x' → logprob: -6.514598846435547
    6. 'right' → logprob: -6.889598846435547
    7. ' candidate' → logprob: -8.014598846435547
    8. ' ' → logprob: -8.639598846435547
    9. '1' → logprob: -8.952098846435547
    10. '	val' → logprob: -9.077098846435547

Token 851: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03148898854851723
    2. '
' → logprob: -3.9064888954162598
    3. '           ' → logprob: -5.40648889541626
    4. '        
' → logprob: -6.15648889541626
    5. ':
' → logprob: -7.15648889541626
    6. ' while' → logprob: -7.28148889541626
    7. '  
' → logprob: -7.28148889541626
    8. ',' → logprob: -7.53148889541626
    9. '<|end|>' → logprob: -7.78148889541626
    10. ':' → logprob: -8.531489372253418

Token 852: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02490081451833248
    2. ':' → logprob: -5.399900913238525
    3. '
' → logprob: -5.524900913238525
    4. '        
' → logprob: -5.649900913238525
    5. ':
' → logprob: -5.649900913238525
    6. ' while' → logprob: -6.274900913238525
    7. '           ' → logprob: -6.399900913238525
    8. '```' → logprob: -6.524900913238525
    9. '<|end|>' → logprob: -7.149900913238525
    10. ' 
' → logprob: -7.774900913238525

Token 853: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1110357940196991
    2. 'while' → logprob: -2.4860358238220215
    3. ' while' → logprob: -3.8610358238220215
    4. '           ' → logprob: -7.8610358238220215
    5. '```' → logprob: -7.9860358238220215
    6. '   ' → logprob: -10.111035346984863
    7. 'for' → logprob: -11.361035346984863
    8. '               ' → logprob: -11.986035346984863
    9. '
' → logprob: -12.236035346984863
    10. ' for' → logprob: -12.486035346984863

Token 854: ' For' (ID: 2214)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.014257176779210567
    2. '       ' → logprob: -5.014256954193115
    3. 'for' → logprob: -5.139256954193115
    4. ' while' → logprob: -6.514256954193115
    5. 'n' → logprob: -8.889257431030273
    6. ' for' → logprob: -11.639257431030273
    7. 'count' → logprob: -12.139257431030273
    8. 'While' → logprob: -12.764257431030273
    9. 'length' → logprob: -12.889257431030273
    10. '   ' → logprob: -13.014257431030273

Token 855: ' performance' (ID: 6198)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.21577540040016174
    2. 'while' → logprob: -3.215775489807129
    3. 'sub' → logprob: -3.340775489807129
    4. 'i' → logprob: -3.590775489807129
    5. 'each' → logprob: -4.465775489807129
    6. 'r' → logprob: -4.715775489807129
    7. 'self' → logprob: -4.715775489807129
    8. ' right' → logprob: -4.840775489807129
    9. 'k' → logprob: -4.840775489807129
    10. 'val' → logprob: -5.090775489807129

Token 856: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07862690091133118
    2. 'while' → logprob: -3.328626871109009
    3. ' while' → logprob: -3.578626871109009
    4. ':' → logprob: -5.703627109527588
    5. '   ' → logprob: -6.328627109527588
    6. '           ' → logprob: -6.453627109527588
    7. '
' → logprob: -6.953627109527588
    8. ':
' → logprob: -7.453627109527588
    9. ',' → logprob: -7.453627109527588
    10. '```' → logprob: -7.578627109527588

Token 857: ' we' (ID: 581)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.46347978711128235
    2. 'while' → logprob: -1.08847975730896
    3. '       ' → logprob: -3.46347975730896
    4. 'right' → logprob: -7.338479995727539
    5. ' right' → logprob: -7.463479995727539
    6. '           ' → logprob: -7.588479995727539
    7. 'count' → logprob: -8.963479995727539
    8. '        ' → logprob: -9.088479995727539
    9. ' for' → logprob: -9.088479995727539
    10. ' fen' → logprob: -9.213479995727539

Token 858: ' process' (ID: 2273)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5169301629066467
    2. '       ' → logprob: -1.391930103302002
    3. ' while' → logprob: -2.391930103302002
    4. 'continue' → logprob: -3.266930103302002
    5. ' continue' → logprob: -4.766930103302002
    6. '```' → logprob: -5.391930103302002
    7. 'increment' → logprob: -6.516930103302002
    8. '
' → logprob: -6.516930103302002
    9. ' will' → logprob: -6.641930103302002
    10. '   ' → logprob: -6.766930103302002

Token 859: ' all' (ID: 722)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.7947072982788086
    2. 'while' → logprob: -0.9197072982788086
    3. '       ' → logprob: -2.0447072982788086
    4. 'the' → logprob: -5.419707298278809
    5. 'self' → logprob: -5.544707298278809
    6. ' while' → logprob: -5.919707298278809
    7. ' right' → logprob: -6.044707298278809
    8. '           ' → logprob: -6.669707298278809
    9. '               ' → logprob: -7.044707298278809
    10. '   ' → logprob: -7.044707298278809

Token 860: ' sub' (ID: 1543)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.2991673946380615
    2. '       ' → logprob: -1.5491673946380615
    3. 'right' → logprob: -2.0491673946380615
    4. 'elements' → logprob: -2.5491673946380615
    5. 'self' → logprob: -2.9241673946380615
    6. 'cards' → logprob: -3.4241673946380615
    7. ' elements' → logprob: -3.5491673946380615
    8. ' while' → logprob: -3.5491673946380615
    9. '   ' → logprob: -4.049167633056641
    10. '```' → logprob: -4.049167633056641

Token 861: 'arrays' (ID: 158630)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.21299070119857788
    2. 'arrays' → logprob: -1.7129907608032227
    3. '       ' → logprob: -4.712990760803223
    4. 'arr' → logprob: -6.462990760803223
    5. '   ' → logprob: -8.462990760803223
    6. '_array' → logprob: -8.587990760803223
    7. 'rray' → logprob: -8.962990760803223
    8. 'ject' → logprob: -9.337990760803223
    9. '_arrays' → logprob: -9.587990760803223
    10. 'ar' → logprob: -9.837990760803223

Token 862: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3003445863723755
    2. ':' → logprob: -2.925344467163086
    3. ',' → logprob: -3.675344467163086
    4. ' while' → logprob: -3.675344467163086
    5. ':
' → logprob: -3.675344467163086
    6. '<|end|>' → logprob: -3.675344467163086
    7. ' =' → logprob: -3.925344467163086
    8. '=' → logprob: -4.300344467163086
    9. ' that' → logprob: -4.300344467163086
    10. '.' → logprob: -4.300344467163086

Token 863: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.025893229991197586
    2. 'size' → logprob: -4.275893211364746
    3. 'self' → logprob: -5.400893211364746
    4. ' length' → logprob: -5.400893211364746
    5. 'window' → logprob: -7.275893211364746
    6. 'the' → logprob: -7.525893211364746
    7. 'right' → logprob: -8.025893211364746
    8. 'fixed' → logprob: -8.150893211364746
    9. 'current' → logprob: -8.400893211364746
    10. '   ' → logprob: -8.650893211364746

Token 864: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.3062617778778076
    2. ' at' → logprob: -2.4312617778778076
    3. ' >=' → logprob: -2.4312617778778076
    4. '<=' → logprob: -3.6812617778778076
    5. 'at' → logprob: -4.681262016296387
    6. '=' → logprob: -4.806262016296387
    7. 'right' → logprob: -5.306262016296387
    8. ' K' → logprob: -5.306262016296387
    9. '       ' → logprob: -5.431262016296387
    10. ' <=' → logprob: -5.431262016296387

Token 865: ' K' (ID: 658)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.17299525439739227
    2. ' self' → logprob: -2.4229953289031982
    3. '1' → logprob: -3.2979953289031982
    4. 'K' → logprob: -3.6729953289031982
    5. ' K' → logprob: -5.297995090484619
    6. ' ' → logprob: -7.172995090484619
    7. '           ' → logprob: -7.422995090484619
    8. '       ' → logprob: -8.047995567321777
    9. '```' → logprob: -8.047995567321777
    10. '   ' → logprob: -8.672995567321777

Token 866: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009579830802977085
    2. ':' → logprob: -6.509579658508301
    3. ':
' → logprob: -6.634579658508301
    4. ' while' → logprob: -6.759579658508301
    5. '
' → logprob: -6.884579658508301
    6. ',' → logprob: -6.884579658508301
    7. '<|end|>' → logprob: -7.384579658508301
    8. '        
' → logprob: -7.509579658508301
    9. '```' → logprob: -7.634579658508301
    10. 'while' → logprob: -8.0095796585083

Token 867: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017360391095280647
    2. ' while' → logprob: -4.892360210418701
    3. '
' → logprob: -5.267360210418701
    4. 'while' → logprob: -6.017360210418701
    5. '        
' → logprob: -7.517360210418701
    6. '           ' → logprob: -7.767360210418701
    7. '```' → logprob: -7.892360210418701
    8. '   ' → logprob: -8.39236068725586
    9. ',' → logprob: -8.76736068725586
    10. ':
' → logprob: -9.39236068725586

Token 868: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07740817219018936
    2. 'while' → logprob: -3.0774080753326416
    3. ' while' → logprob: -3.5774080753326416
    4. '           ' → logprob: -8.577407836914062
    5. '```' → logprob: -8.702407836914062
    6. 'for' → logprob: -10.702407836914062
    7. '   ' → logprob: -10.827407836914062
    8. ' for' → logprob: -10.827407836914062
    9. '
' → logprob: -11.827407836914062
    10. ',' → logprob: -12.077407836914062

Token 869: ' Pre' (ID: 4659)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03963298350572586
    2. '       ' → logprob: -4.039632797241211
    3. ' while' → logprob: -4.664632797241211
    4. 'n' → logprob: -5.039632797241211
    5. 'for' → logprob: -5.414632797241211
    6. 'N' → logprob: -8.414632797241211
    7. 'length' → logprob: -8.664632797241211
    8. 'count' → logprob: -9.039632797241211
    9. ' n' → logprob: -9.664632797241211
    10. ' for' → logprob: -9.914632797241211

Token 870: 'processing' (ID: 41376)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12901276350021362
    2. 'vious' → logprob: -3.2540128231048584
    3. 'sum' → logprob: -3.7540128231048584
    4. 'v' → logprob: -4.004012584686279
    5. 'viously' → logprob: -4.504012584686279
    6. 's' → logprob: -5.129012584686279
    7. '   ' → logprob: -5.879012584686279
    8. 'c' → logprob: -6.004012584686279
    9. 'd' → logprob: -6.254012584686279
    10. 'process' → logprob: -6.379012584686279

Token 871: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3110432028770447
    2. 'while' → logprob: -1.6860432624816895
    3. ' while' → logprob: -3.3110432624816895
    4. 'for' → logprob: -4.4360432624816895
    5. 'count' → logprob: -4.8110432624816895
    6. ' for' → logprob: -4.9360432624816895
    7. 'window' → logprob: -6.3110432624816895
    8. 'freq' → logprob: -6.3110432624816895
    9. 'from' → logprob: -6.5610432624816895
    10. '#' → logprob: -6.8110432624816895

Token 872: ' We' (ID: 1416)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.43262022733688354
    2. '       ' → logprob: -1.8076202869415283
    3. ' while' → logprob: -2.3076202869415283
    4. 'for' → logprob: -3.0576202869415283
    5. ' for' → logprob: -4.682620048522949
    6. 'count' → logprob: -4.682620048522949
    7. 'freq' → logprob: -5.307620048522949
    8. 'counts' → logprob: -5.932620048522949
    9. 'from' → logprob: -6.182620048522949
    10. 'pass' → logprob: -6.682620048522949

Token 873: ' make' (ID: 1520)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1659216731786728
    2. 'while' → logprob: -2.040921688079834
    3. 'continue' → logprob: -4.665921688079834
    4. 'count' → logprob: -6.165921688079834
    5. 'for' → logprob: -6.290921688079834
    6. '...' → logprob: -6.290921688079834
    7. ' while' → logprob: -6.290921688079834
    8. '   ' → logprob: -6.665921688079834
    9. 'add' → logprob: -7.415921688079834
    10. 'will' → logprob: -7.790921688079834

Token 874: ' an' (ID: 448)
  Prédit: ' sure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sure' → logprob: -0.2522144615650177
    2. '       ' → logprob: -3.1272144317626953
    3. 'sure' → logprob: -3.1272144317626953
    4. 'right' → logprob: -3.8772144317626953
    5. 'self' → logprob: -4.002214431762695
    6. ' right' → logprob: -4.127214431762695
    7. 'while' → logprob: -4.377214431762695
    8. ' a' → logprob: -4.502214431762695
    9. ' while' → logprob: -4.752214431762695
    10. 'count' → logprob: -4.877214431762695

Token 875: ' array' (ID: 2644)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.669646680355072
    2. 'index' → logprob: -2.169646739959717
    3. '       ' → logprob: -2.294646739959717
    4. 'increment' → logprob: -2.294646739959717
    5. ' array' → logprob: -3.919646739959717
    6. '   ' → logprob: -4.044646739959717
    7. 'empty' → logprob: -4.044646739959717
    8. 'while' → logprob: -4.544646739959717
    9. 'if' → logprob: -4.544646739959717
    10. 'arr' → logprob: -4.794646739959717

Token 876: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5771862268447876
    2. ' =' → logprob: -1.5771862268447876
    3. '       ' → logprob: -2.452186107635498
    4. 'of' → logprob: -2.577186107635498
    5. '=' → logprob: -4.827186107635498
    6. ' where' → logprob: -4.952186107635498
    7. ' with' → logprob: -5.077186107635498
    8. ' to' → logprob: -5.077186107635498
    9. 'filtered' → logprob: -5.452186107635498
    10. ' that' → logprob: -5.702186107635498

Token 877: ' ' (ID: 220)
  Prédit: 'compressed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compressed' → logprob: -1.007778525352478
    2. 'ints' → logprob: -1.882778525352478
    3. '0' → logprob: -2.0077786445617676
    4. 'positions' → logprob: -2.5077786445617676
    5. 'self' → logprob: -2.6327786445617676
    6. 'indices' → logprob: -3.3827786445617676
    7. 'inte' → logprob: -3.6327786445617676
    8. 'indexes' → logprob: -3.7577786445617676
    9. 'bool' → logprob: -4.132778644561768
    10. '1' → logprob: -4.132778644561768

Token 878: '0' (ID: 15)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.1504164934158325
    2. 'compressed' → logprob: -1.6504164934158325
    3. 'flags' → logprob: -2.400416374206543
    4. 'self' → logprob: -2.400416374206543
    5. 'ints' → logprob: -2.775416374206543
    6. 'allowed' → logprob: -3.275416374206543
    7. '0' → logprob: -3.400416374206543
    8. 'valid' → logprob: -3.525416374206543
    9. 'indices' → logprob: -3.900416374206543
    10. 'is' → logprob: -4.150416374206543

Token 879: '/' (ID: 14)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4385995864868164
    2. 'for' → logprob: -1.9385995864868164
    3. ' or' → logprob: -1.9385995864868164
    4. 'based' → logprob: -1.9385995864868164
    5. 's' → logprob: -2.5635995864868164
    6. 'or' → logprob: -3.1885995864868164
    7. '-based' → logprob: -3.3135995864868164
    8. ' if' → logprob: -3.9385995864868164
    9. ',' → logprob: -4.063599586486816
    10. '<|end|>' → logprob: -4.063599586486816

Token 880: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005035852082073689
    2. ' ' → logprob: -7.6255035400390625
    3. 'one' → logprob: -12.625503540039062
    4. '0' → logprob: -12.875503540039062
    5. '/' → logprob: -13.250503540039062
    6. 'ones' → logprob: -13.375503540039062
    7. 's' → logprob: -13.625503540039062
    8. ' ones' → logprob: -14.000503540039062
    9. '#' → logprob: -14.625503540039062
    10. ' one' → logprob: -14.750503540039062

Token 881: ' indicating' (ID: 34700)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1065247058868408
    2. 's' → logprob: -1.2315247058868408
    3. ' flags' → logprob: -2.481524705886841
    4. '       ' → logprob: -2.981524705886841
    5. 'flags' → logprob: -2.981524705886841
    6. ' marks' → logprob: -3.606524705886841
    7. 'arr' → logprob: -3.731524705886841
    8. 'values' → logprob: -4.106524467468262
    9. ' values' → logprob: -4.606524467468262
    10. '   ' → logprob: -4.606524467468262

Token 882: ' if' (ID: 538)
  Prédit: ' whether'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' whether' → logprob: -0.568682849407196
    2. 'whether' → logprob: -0.943682849407196
    3. 'if' → logprob: -3.943682909011841
    4. 'self' → logprob: -4.443682670593262
    5. '       ' → logprob: -5.568682670593262
    6. ' if' → logprob: -5.943682670593262
    7. '           ' → logprob: -6.568682670593262
    8. '   ' → logprob: -6.693682670593262
    9. ' self' → logprob: -6.693682670593262
    10. 'elements' → logprob: -7.443682670593262

Token 883: ' element' (ID: 3577)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.523232638835907
    2. ' self' → logprob: -0.898232638835907
    3. ' the' → logprob: -10.898232460021973
    4. 'card' → logprob: -11.273232460021973
    5. ' cards' → logprob: -11.398232460021973
    6. '   ' → logprob: -11.523232460021973
    7. 'cards' → logprob: -11.523232460021973
    8. ' card' → logprob: -11.773232460021973
    9. '	self' → logprob: -12.023232460021973
    10. '(self' → logprob: -12.148232460021973

Token 884: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.15887930989265442
    2. '<=' → logprob: -2.283879280090332
    3. 'compressed' → logprob: -4.783879280090332
    4. ' at' → logprob: -5.408879280090332
    5. 'self' → logprob: -5.408879280090332
    6. '```' → logprob: -5.783879280090332
    7. '[i' → logprob: -5.908879280090332
    8. '[self' → logprob: -5.908879280090332
    9. '   ' → logprob: -6.033879280090332
    10. ' in' → logprob: -6.158879280090332

Token 885: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7030870914459229
    2. ' val' → logprob: -0.7030870914459229
    3. 'candidate' → logprob: -5.453086853027344
    4. ' candidate' → logprob: -5.828086853027344
    5. 'self' → logprob: -7.078086853027344
    6. ' self' → logprob: -7.203086853027344
    7. 'x' → logprob: -7.578086853027344
    8. ' x' → logprob: -8.078086853027344
    9. '	val' → logprob: -9.703086853027344
    10. '[val' → logprob: -10.453086853027344

Token 886: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10713867098093033
    2. '[' → logprob: -3.1071386337280273
    3. 'arr' → logprob: -4.232138633728027
    4. ',' → logprob: -5.232138633728027
    5. ' for' → logprob: -5.357138633728027
    6. ':' → logprob: -5.357138633728027
    7. '   ' → logprob: -6.107138633728027
    8. 'marks' → logprob: -6.107138633728027
    9. 'for' → logprob: -6.357138633728027
    10. ':
' → logprob: -6.482138633728027

Token 887: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12298021465539932
    2. ' or' → logprob: -3.8729801177978516
    3. 'self' → logprob: -4.372980117797852
    4. ' )' → logprob: -4.622980117797852
    5. ' True' → logprob: -4.622980117797852
    6. ' and' → logprob: -5.122980117797852
    7. '```' → logprob: -5.122980117797852
    8. ' at' → logprob: -5.247980117797852
    9. 'True' → logprob: -5.247980117797852
    10. '       ' → logprob: -5.497980117797852

Token 888: ' if' (ID: 538)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4513637125492096
    2. ')' → logprob: -1.0763636827468872
    3. 'else' → logprob: -4.201363563537598
    4. ' or' → logprob: -6.201363563537598
    5. ' if' → logprob: -6.826363563537598
    6. ' )' → logprob: -6.951363563537598
    7. ',' → logprob: -7.201363563537598
    8. '),' → logprob: -7.701363563537598
    9. '<|end|>' → logprob: -7.826363563537598
    10. '```' → logprob: -7.951363563537598

Token 889: ' yes' (ID: 14531)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12124685943126678
    2. ' self' → logprob: -2.246246814727783
    3. '```' → logprob: -6.121246814727783
    4. 'compressed' → logprob: -6.246246814727783
    5. 'arr' → logprob: -6.871246814727783
    6. 'cards' → logprob: -6.996246814727783
    7. ' compressed' → logprob: -7.746246814727783
    8. 'card' → logprob: -7.871246814727783
    9. ' cards' → logprob: -8.621247291564941
    10. 'x' → logprob: -8.871247291564941

Token 890: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6515108942985535
    2. ',' → logprob: -0.7765108942985535
    3. 'else' → logprob: -4.401510715484619
    4. ')' → logprob: -5.901510715484619
    5. '           ' → logprob: -7.026510715484619
    6. '```' → logprob: -7.026510715484619
    7. '       ' → logprob: -7.276510715484619
    8. '),' → logprob: -7.526510715484619
    9. ' ,' → logprob: -8.526511192321777
    10. ')
' → logprob: -9.151511192321777

Token 891: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11600960046052933
    2. ' ' → logprob: -2.2410097122192383
    3. '0' → logprob: -6.241009712219238
    4. '```' → logprob: -7.991009712219238
    5. ')' → logprob: -8.116009712219238
    6. ',' → logprob: -8.366009712219238
    7. ' True' → logprob: -9.116009712219238
    8. 'True' → logprob: -9.116009712219238
    9. '   ' → logprob: -9.241009712219238
    10. '``' → logprob: -11.866009712219238

Token 892: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08165336400270462
    2. '1' → logprob: -2.706653356552124
    3. ' ' → logprob: -4.456653594970703
    4. '```' → logprob: -10.331653594970703
    5. '   ' → logprob: -11.831653594970703
    6. ')' → logprob: -12.831653594970703
    7. 'True' → logprob: -13.706653594970703
    8. '`' → logprob: -14.206653594970703
    9. '``' → logprob: -14.581653594970703
    10. ',' → logprob: -14.581653594970703

Token 893: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47577422857284546
    2. ')' → logprob: -1.7257742881774902
    3. ')
' → logprob: -1.7257742881774902
    4. ',' → logprob: -4.35077428817749
    5. '   ' → logprob: -6.35077428817749
    6. ' for' → logprob: -6.35077428817749
    7. '):
' → logprob: -6.35077428817749
    8. '[' → logprob: -7.22577428817749
    9. '),' → logprob: -7.47577428817749
    10. ']' → logprob: -8.350773811340332

Token 894: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06518986821174622
    2. '```' → logprob: -4.690189838409424
    3. 'arr' → logprob: -4.940189838409424
    4. ',' → logprob: -5.065189838409424
    5. '[' → logprob: -5.190189838409424
    6. '#' → logprob: -5.565189838409424
    7. '
' → logprob: -5.940189838409424
    8. ' ' → logprob: -6.190189838409424
    9. ' is' → logprob: -6.315189838409424
    10. '   ' → logprob: -6.565189838409424

Token 895: ' binary' (ID: 15600)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4643233120441437
    2. 'arr' → logprob: -2.3393232822418213
    3. 'threshold' → logprob: -3.0893232822418213
    4. 'mask' → logprob: -3.4643232822418213
    5. 'is' → logprob: -3.7143232822418213
    6. ' is' → logprob: -3.8393232822418213
    7. 'flag' → logprob: -4.2143235206604
    8. 'flags' → logprob: -4.2143235206604
    9. 'filter' → logprob: -4.5893235206604
    10. ' arr' → logprob: -4.5893235206604

Token 896: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2742038369178772
    2. '_arr' → logprob: -1.7742037773132324
    3. '_array' → logprob: -3.7742037773132324
    4. '=' → logprob: -4.024203777313232
    5. 'arr' → logprob: -4.649203777313232
    6. '_indicator' → logprob: -5.024203777313232
    7. '_values' → logprob: -5.649203777313232
    8. '_vals' → logprob: -6.274203777313232
    9. '_cards' → logprob: -6.899203777313232
    10. '_' → logprob: -7.274203777313232

Token 897: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17589332163333893
    2. '[self' → logprob: -1.9258933067321777
    3. ' [' → logprob: -4.175893306732178
    4. '[i' → logprob: -9.175893783569336
    5. '[len' → logprob: -10.425893783569336
    6. '[class' → logprob: -11.675893783569336
    7. '   ' → logprob: -11.675893783569336
    8. '[int' → logprob: -12.050893783569336
    9. '[x' → logprob: -12.425893783569336
    10. '[(' → logprob: -12.675893783569336

Token 898: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022129806166049093
    2. 'int' → logprob: -8.875221252441406
    3. '(' → logprob: -10.250221252441406
    4. 'self' → logprob: -10.375221252441406
    5. ' ' → logprob: -12.000221252441406
    6. '0' → logprob: -12.000221252441406
    7. '   ' → logprob: -14.375221252441406
    8. '(int' → logprob: -15.125221252441406
    9. 'c' → logprob: -15.250221252441406
    10. '(self' → logprob: -15.500221252441406

Token 899: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00863123033195734
    2. 'if' → logprob: -4.758631229400635
    3. '           ' → logprob: -11.883631706237793
    4. '   ' → logprob: -13.383631706237793
    5. '            ' → logprob: -13.383631706237793
    6. '	if' → logprob: -13.508631706237793
    7. '        ' → logprob: -13.633631706237793
    8. ']' → logprob: -13.758631706237793
    9. '       ' → logprob: -13.883631706237793
    10. '          ' → logprob: -14.758631706237793

Token 900: ' x' (ID: 1215)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8206905722618103
    2. 'self' → logprob: -0.8206905722618103
    3. 'card' → logprob: -2.695690631866455
    4. 'v' → logprob: -3.570690631866455
    5. 'x' → logprob: -3.820690631866455
    6. 'cards' → logprob: -6.945690631866455
    7. ' self' → logprob: -7.695690631866455
    8. ' c' → logprob: -8.195690155029297
    9. 'num' → logprob: -8.820690155029297
    10. 'cv' → logprob: -9.320690155029297

Token 901: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4780771732330322
    2. ' <=' → logprob: -0.9780771732330322
    3. '[' → logprob: -5.853076934814453
    4. '[i' → logprob: -7.103076934814453
    5. ' ' → logprob: -9.603076934814453
    6. '   ' → logprob: -9.728076934814453
    7. '[v' → logprob: -10.478076934814453
    8. '[idx' → logprob: -10.728076934814453
    9. ']<=' → logprob: -10.853076934814453
    10. '[]' → logprob: -11.353076934814453

Token 902: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.018900517374277115
    2. 'self' → logprob: -4.143900394439697
    3. 'len' → logprob: -6.768900394439697
    4. 'fen' → logprob: -7.393900394439697
    5. 'binary' → logprob: -7.393900394439697
    6. ' val' → logprob: -8.143900871276855
    7. '(val' → logprob: -9.643900871276855
    8. '[val' → logprob: -10.393900871276855
    9. 'bin' → logprob: -10.768900871276855
    10. ' self' → logprob: -11.018900871276855

Token 903: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.07000167667865753
    2. 'else' → logprob: -2.6950016021728516
    3. '        ' → logprob: -10.820001602172852
    4. '           ' → logprob: -10.820001602172852
    5. '            ' → logprob: -12.320001602172852
    6. '       ' → logprob: -12.445001602172852
    7. '          ' → logprob: -12.945001602172852
    8. ' ' → logprob: -13.320001602172852
    9. '	else' → logprob: -13.320001602172852
    10. ' ' → logprob: -13.320001602172852

Token 904: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7446776628494263
    2. '0' → logprob: -0.8696776628494263
    3. ' ' → logprob: -2.2446775436401367
    4. 'self' → logprob: -11.244677543640137
    5. ''' → logprob: -12.057177543640137
    6. '"' → logprob: -12.182177543640137
    7. '`' → logprob: -12.494677543640137
    8. '   ' → logprob: -12.494677543640137
    9. 'True' → logprob: -12.557177543640137
    10. 'val' → logprob: -12.619677543640137

Token 905: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007357678841799498
    2. '1' → logprob: -5.007357597351074
    3. ' ' → logprob: -7.382357597351074
    4. 'self' → logprob: -11.257357597351074
    5. 'val' → logprob: -12.757357597351074
    6. '   ' → logprob: -13.382357597351074
    7. ' self' → logprob: -14.444857597351074
    8. '```' → logprob: -15.069857597351074
    9. '`' → logprob: -15.757357597351074
    10. '"' → logprob: -15.757357597351074

Token 906: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24869482219219208
    2. ' else' → logprob: -1.6236947774887085
    3. 'for' → logprob: -4.373694896697998
    4. 'else' → logprob: -4.623694896697998
    5. '           ' → logprob: -8.24869441986084
    6. '       ' → logprob: -9.12369441986084
    7. ' ' → logprob: -9.87369441986084
    8. '        ' → logprob: -10.12369441986084
    9. ' in' → logprob: -10.62369441986084
    10. '            ' → logprob: -11.12369441986084

Token 907: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013765414478257298
    2. 'c' → logprob: -7.751376628875732
    3. ' self' → logprob: -7.751376628875732
    4. 'x' → logprob: -8.501376152038574
    5. 'v' → logprob: -8.876376152038574
    6. 'card' → logprob: -9.001376152038574
    7. 'arr' → logprob: -10.501376152038574
    8. '   ' → logprob: -12.376376152038574
    9. '       ' → logprob: -12.751376152038574
    10. 'elem' → logprob: -12.876376152038574

Token 908: ' in' (ID: 306)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007002716418355703
    2. ' self' → logprob: -5.382002830505371
    3. 'in' → logprob: -6.507002830505371
    4. ' in' → logprob: -7.132002830505371
    5. 'x' → logprob: -9.507002830505371
    6. '(self' → logprob: -13.132002830505371
    7. ' x' → logprob: -13.257002830505371
    8. '=self' → logprob: -13.507002830505371
    9. 'card' → logprob: -13.757002830505371
    10. '	self' → logprob: -13.882002830505371

Token 909: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.729906196298543e-06
    2. ' self' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.125009536743164
    4. '[self' → logprob: -15.875009536743164
    5. 'range' → logprob: -16.000009536743164
    6. '(self' → logprob: -16.250009536743164
    7. '       ' → logprob: -16.500009536743164
    8. '
' → logprob: -17.250009536743164
    9. '           ' → logprob: -17.625009536743164
    10. '[' → logprob: -18.250009536743164

Token 910: '.com' (ID: 1136)
  Prédit: '.com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.com' → logprob: -0.35478320717811584
    2. 'compressed' → logprob: -1.2297831773757935
    3. 'self' → logprob: -5.354783058166504
    4. '.cards' → logprob: -6.729783058166504
    5. 'cards' → logprob: -8.854783058166504
    6. '.comp' → logprob: -9.729783058166504
    7. 'com' → logprob: -9.854783058166504
    8. '.card' → logprob: -10.479783058166504
    9. '.self' → logprob: -10.604783058166504
    10. 'card' → logprob: -10.729783058166504

Token 911: 'pressed' (ID: 26974)
  Prédit: 'pressed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pressed' → logprob: -3.953082341467962e-05
    2. 'press' → logprob: -10.500039100646973
    3. 'self' → logprob: -12.625039100646973
    4. 'p' → logprob: -12.625039100646973
    5. 'ressed' → logprob: -13.125039100646973
    6. '_pressed' → logprob: -13.750039100646973
    7. 'compressed' → logprob: -14.375039100646973
    8. '[self' → logprob: -14.625039100646973
    9. 'pr' → logprob: -14.875039100646973
    10. 'pres' → logprob: -15.375039100646973

Token 912: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007341049495153129
    2. ' ]' → logprob: -7.250734329223633
    3. '       ' → logprob: -11.375734329223633
    4. ']
' → logprob: -11.500734329223633
    5. '()]' → logprob: -13.875734329223633
    6. ')]' → logprob: -14.000734329223633
    7. '`]' → logprob: -15.625734329223633
    8. '   ' → logprob: -16.000734329223633
    9. ']
' → logprob: -16.500734329223633
    10. '.]' → logprob: -16.625734329223633

Token 913: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009915925562381744
    2. '
' → logprob: -5.259915828704834
    3. '<|end|>' → logprob: -6.384915828704834
    4. ',' → logprob: -7.259915828704834
    5. '        
' → logprob: -7.384915828704834
    6. '```' → logprob: -7.634915828704834
    7. ')' → logprob: -8.009916305541992
    8. ' while' → logprob: -8.509916305541992
    9. '<|end|>' → logprob: -8.759916305541992
    10. ' for' → logprob: -9.634916305541992

Token 914: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06431340426206589
    2. 'while' → logprob: -3.5643134117126465
    3. '
' → logprob: -3.8143134117126465
    4. ' while' → logprob: -5.5643134117126465
    5. '```' → logprob: -5.9393134117126465
    6. 'right' → logprob: -6.4393134117126465
    7. '        
' → logprob: -6.8143134117126465
    8. '   ' → logprob: -7.1893134117126465
    9. ',' → logprob: -7.3143134117126465
    10. 'for' → logprob: -8.564312934875488

Token 915: ' We' (ID: 1416)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.050856705754995346
    2. 'for' → logprob: -3.300856590270996
    3. '       ' → logprob: -4.925856590270996
    4. 'right' → logprob: -6.175856590270996
    5. 'count' → logprob: -6.925856590270996
    6. 'from' → logprob: -7.175856590270996
    7. '#' → logprob: -7.550856590270996
    8. ' while' → logprob: -8.425856590270996
    9. 'left' → logprob: -8.425856590270996
    10. 'length' → logprob: -8.550856590270996

Token 916: ' want' (ID: 1682)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2882663905620575
    2. 'while' → logprob: -2.16326642036438
    3. '=' → logprob: -3.53826642036438
    4. ' =' → logprob: -3.66326642036438
    5. 'left' → logprob: -4.163266181945801
    6. 'right' → logprob: -4.413266181945801
    7. 'continue' → logprob: -4.538266181945801
    8. 'n' → logprob: -4.663266181945801
    9. '
' → logprob: -4.788266181945801
    10. '   ' → logprob: -5.788266181945801

Token 917: ',' (ID: 11)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5717817544937134
    2. '       ' → logprob: -1.8217817544937134
    3. 'while' → logprob: -1.8217817544937134
    4. 'count' → logprob: -2.571781635284424
    5. 'sub' → logprob: -4.321781635284424
    6. ' to' → logprob: -4.821781635284424
    7. 'right' → logprob: -5.821781635284424
    8. '#' → logprob: -5.821781635284424
    9. '   ' → logprob: -6.571781635284424
    10. 'the' → logprob: -7.196781635284424

Token 918: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1441421508789062
    2. ' while' → logprob: -1.1441421508789062
    3. 'while' → logprob: -2.5191421508789062
    4. ' to' → logprob: -2.6441421508789062
    5. ' left' → logprob: -3.0191421508789062
    6. 'left' → logprob: -4.019142150878906
    7. ' for' → logprob: -4.144142150878906
    8. ' l' → logprob: -4.144142150878906
    9. ' right' → logprob: -4.394142150878906
    10. '#' → logprob: -4.769142150878906

Token 919: ' all' (ID: 722)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.3201050758361816
    2. 'sub' → logprob: -1.3201050758361816
    3. 'length' → logprob: -2.1951050758361816
    4. 'r' → logprob: -2.5701050758361816
    5. 'each' → logprob: -3.0701050758361816
    6. 'i' → logprob: -3.0701050758361816
    7. ' sub' → logprob: -3.3201050758361816
    8. ' right' → logprob: -4.070105075836182
    9. 'all' → logprob: -4.070105075836182
    10. ' length' → logprob: -4.195105075836182

Token 920: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.23665717244148254
    2. 'right' → logprob: -2.11165714263916
    3. 'length' → logprob: -2.98665714263916
    4. 'i' → logprob: -4.61165714263916
    5. ' sub' → logprob: -5.11165714263916
    6. 'valid' → logprob: -5.23665714263916
    7. 'windows' → logprob: -5.48665714263916
    8. 'r' → logprob: -5.73665714263916
    9. 'window' → logprob: -6.23665714263916
    10. '   ' → logprob: -6.48665714263916

Token 921: 'arrays' (ID: 158630)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.6953086256980896
    2. 'arrays' → logprob: -0.6953086256980896
    3. '       ' → logprob: -6.320308685302734
    4. 'arr' → logprob: -8.445308685302734
    5. 'window' → logprob: -10.695308685302734
    6. ' arrays' → logprob: -11.195308685302734
    7. '#' → logprob: -11.320308685302734
    8. 'windows' → logprob: -11.445308685302734
    9. '   ' → logprob: -11.570308685302734
    10. '[i' → logprob: -11.570308685302734

Token 922: ' length' (ID: 5517)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23994122445583344
    2. ' of' → logprob: -2.364941120147705
    3. 'of' → logprob: -2.739941120147705
    4. 'with' → logprob: -4.489941120147705
    5. '[' → logprob: -4.864941120147705
    6. ',' → logprob: -4.989941120147705
    7. '=' → logprob: -5.364941120147705
    8. ' with' → logprob: -5.614941120147705
    9. ' =' → logprob: -5.739941120147705
    10. '[left' → logprob: -5.739941120147705

Token 923: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6636963486671448
    2. ' >=' → logprob: -0.7886963486671448
    3. '       ' → logprob: -4.0386962890625
    4. '           ' → logprob: -4.7886962890625
    5. '=' → logprob: -6.2886962890625
    6. '        ' → logprob: -7.7886962890625
    7. '   ' → logprob: -7.7886962890625
    8. '[' → logprob: -8.1636962890625
    9. '≥' → logprob: -8.7886962890625
    10. ' =' → logprob: -9.0386962890625

Token 924: ' K' (ID: 658)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007929548737592995
    2. ' self' → logprob: -7.375792980194092
    3. '           ' → logprob: -10.000792503356934
    4. '```' → logprob: -10.125792503356934
    5. '       ' → logprob: -10.250792503356934
    6. '(self' → logprob: -10.875792503356934
    7. 'K' → logprob: -11.875792503356934
    8. '
' → logprob: -12.250792503356934
    9. '1' → logprob: -12.250792503356934
    10. '               ' → logprob: -13.125792503356934

Token 925: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7349485754966736
    2. '       ' → logprob: -0.8599485754966736
    3. 'while' → logprob: -3.2349486351013184
    4. ':
' → logprob: -3.9849486351013184
    5. ' while' → logprob: -4.109948635101318
    6. ':' → logprob: -4.609948635101318
    7. '
' → logprob: -4.984948635101318
    8. ',
' → logprob: -6.109948635101318
    9. ' that' → logprob: -7.734948635101318
    10. ' to' → logprob: -7.859948635101318

Token 926: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45786139369010925
    2. ' while' → logprob: -1.7078614234924316
    3. ' to' → logprob: -2.4578614234924316
    4. '           ' → logprob: -3.5828614234924316
    5. ' count' → logprob: -3.9578614234924316
    6. 'count' → logprob: -4.332861423492432
    7. 'while' → logprob: -4.457861423492432
    8. '        ' → logprob: -5.582861423492432
    9. '#' → logprob: -6.332861423492432
    10. ' length' → logprob: -6.332861423492432

Token 927: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0876339673995972
    2. ' the' → logprob: -1.4626339673995972
    3. 'self' → logprob: -1.4626339673995972
    4. ' self' → logprob: -2.4626340866088867
    5. 'binary' → logprob: -3.4626340866088867
    6. ' binary' → logprob: -3.8376340866088867
    7. '           ' → logprob: -3.9626340866088867
    8. '       ' → logprob: -4.587634086608887
    9. ' their' → logprob: -4.837634086608887
    10. 'their' → logprob: -5.087634086608887

Token 928: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.5531832575798035
    2. 'k' → logprob: -1.6781833171844482
    3. 'fen' → logprob: -2.3031833171844482
    4. ' fen' → logprob: -3.1781833171844482
    5. ' K' → logprob: -3.4281833171844482
    6. 'Fen' → logprob: -3.8031833171844482
    7. 'binary' → logprob: -4.428183078765869
    8. 'self' → logprob: -5.553183078765869
    9. 'compressed' → logprob: -5.678183078765869
    10. ' next' → logprob: -5.803183078765869

Token 929: '-th' (ID: 14928)
  Prédit: '-th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-th' → logprob: -0.04828537255525589
    2. ' -' → logprob: -3.673285484313965
    3. 'th' → logprob: -4.173285484313965
    4. '-' → logprob: -5.423285484313965
    5. '   ' → logprob: -7.798285484313965
    6. '_th' → logprob: -7.798285484313965
    7. '       ' → logprob: -8.798285484313965
    8. ''t' → logprob: -9.048285484313965
    9. '```' → logprob: -9.298285484313965
    10. '^-' → logprob: -9.423285484313965

Token 930: ' smallest' (ID: 42173)
  Prédit: ' smallest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -0.16973836719989777
    2. 'small' → logprob: -1.9197384119033813
    3. '_small' → logprob: -5.044738292694092
    4. 'compressed' → logprob: -7.294738292694092
    5. ' element' → logprob: -7.919738292694092
    6. 'element' → logprob: -8.04473876953125
    7. '-small' → logprob: -8.04473876953125
    8. ' small' → logprob: -8.04473876953125
    9. ')' → logprob: -8.54473876953125
    10. '
' → logprob: -8.91973876953125

Token 931: ' <=' (ID: 5017)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8462110757827759
    2. ' element' → logprob: -1.7212110757827759
    3. '       ' → logprob: -2.5962109565734863
    4. ' >=' → logprob: -2.9712109565734863
    5. 'element' → logprob: -3.5962109565734863
    6. ' <=' → logprob: -3.7212109565734863
    7. ' not' → logprob: -3.9712109565734863
    8. ' ==' → logprob: -4.096210956573486
    9. ' at' → logprob: -4.221210956573486
    10. '```' → logprob: -4.221210956573486

Token 932: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.32457393407821655
    2. ' val' → logprob: -1.3245739936828613
    3. 'x' → logprob: -5.074573993682861
    4. ' x' → logprob: -6.199573993682861
    5. ' binary' → logprob: -7.074573993682861
    6. 'binary' → logprob: -7.074573993682861
    7. '           ' → logprob: -8.574573516845703
    8. 'right' → logprob: -8.699573516845703
    9. ' right' → logprob: -8.824573516845703
    10. '	val' → logprob: -9.512073516845703

Token 933: '?
' (ID: 3901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031021175906062126
    2. '
' → logprob: -3.9060211181640625
    3. ' while' → logprob: -5.9060211181640625
    4. ',' → logprob: -6.0310211181640625
    5. 'while' → logprob: -6.2810211181640625
    6. '        
' → logprob: -6.6560211181640625
    7. ':
' → logprob: -7.9060211181640625
    8. '```' → logprob: -7.9060211181640625
    9. ',
' → logprob: -8.156021118164062
    10. ':' → logprob: -9.156021118164062

Token 934: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23727324604988098
    2. '
' → logprob: -1.6122732162475586
    3. '        
' → logprob: -5.362273216247559
    4. ' while' → logprob: -5.737273216247559
    5. ',' → logprob: -6.487273216247559
    6. '```' → logprob: -8.112273216247559
    7. ',
' → logprob: -8.362273216247559
    8. '  
' → logprob: -8.487273216247559
    9. 'while' → logprob: -8.487273216247559
    10. ' 
' → logprob: -8.487273216247559

Token 935: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38061752915382385
    2. '
' → logprob: -1.2556174993515015
    3. ' while' → logprob: -4.755617618560791
    4. '        
' → logprob: -4.880617618560791
    5. '```' → logprob: -5.505617618560791
    6. ',' → logprob: -5.630617618560791
    7. ' right' → logprob: -6.380617618560791
    8. 'while' → logprob: -7.005617618560791
    9. '  
' → logprob: -7.130617618560791
    10. ' 
' → logprob: -7.130617618560791

Token 936: ' That' (ID: 4569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05742489546537399
    2. ' while' → logprob: -3.182424783706665
    3. 'while' → logprob: -4.682425022125244
    4. '
' → logprob: -5.682425022125244
    5. '        
' → logprob: -7.932425022125244
    6. 'While' → logprob: -7.932425022125244
    7. '#' → logprob: -8.557424545288086
    8. '   ' → logprob: -9.182424545288086
    9. ' for' → logprob: -9.432424545288086
    10. ',' → logprob: -9.557424545288086

Token 937: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2841348648071289
    2. ' is' → logprob: -2.284134864807129
    3. '
' → logprob: -3.534134864807129
    4. ' =' → logprob: -3.534134864807129
    5. ' while' → logprob: -4.534134864807129
    6. '=' → logprob: -4.659134864807129
    7. 'while' → logprob: -4.659134864807129
    8. 'def' → logprob: -4.784134864807129
    9. ' def' → logprob: -5.034134864807129
    10. '   ' → logprob: -5.159134864807129

Token 938: ' equivalent' (ID: 23458)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06235102191567421
    2. ' the' → logprob: -4.187351226806641
    3. ' in' → logprob: -4.812351226806641
    4. ' to' → logprob: -5.062351226806641
    5. ' not' → logprob: -5.187351226806641
    6. ',' → logprob: -5.687351226806641
    7. ' for' → logprob: -5.812351226806641
    8. '           ' → logprob: -5.937351226806641
    9. ' that' → logprob: -6.562351226806641
    10. '        ' → logprob: -6.687351226806641

Token 939: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.12772326171398163
    2. ' to' → logprob: -2.127723217010498
    3. '       ' → logprob: -7.752723217010498
    4. '           ' → logprob: -8.252723693847656
    5. '```' → logprob: -10.502723693847656
    6. ',' → logprob: -10.627723693847656
    7. '
' → logprob: -11.127723693847656
    8. '   ' → logprob: -11.627723693847656
    9. '=' → logprob: -12.002723693847656
    10. '        
' → logprob: -12.377723693847656

Token 940: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.6894395351409912
    2. ' checking' → logprob: -1.9394395351409912
    3. ' counting' → logprob: -2.064439535140991
    4. 'fen' → logprob: -2.439439535140991
    5. ' fen' → logprob: -2.439439535140991
    6. 'checking' → logprob: -2.939439535140991
    7. 'count' → logprob: -3.064439535140991
    8. ' the' → logprob: -3.314439535140991
    9. ' continuing' → logprob: -3.814439535140991
    10. 'the' → logprob: -3.814439535140991

Token 941: ' in' (ID: 306)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -2.4673969745635986
    2. '       ' → logprob: -2.4673969745635986
    3. ' for' → logprob: -2.4673969745635986
    4. ' we' → logprob: -2.5923969745635986
    5. ' counting' → logprob: -2.7173969745635986
    6. ' #' → logprob: -2.8423969745635986
    7. ' fen' → logprob: -3.2173969745635986
    8. '#' → logprob: -3.3423969745635986
    9. ' count' → logprob: -3.3423969745635986
    10. ' x' → logprob: -3.4673969745635986

Token 942: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.43598079681396484
    2. 'self' → logprob: -2.060980796813965
    3. 'fen' → logprob: -3.060980796813965
    4. 'sub' → logprob: -3.060980796813965
    5. 'binary' → logprob: -3.435980796813965
    6. ' the' → logprob: -4.060980796813965
    7. 'each' → logprob: -4.060980796813965
    8. 'current' → logprob: -4.560980796813965
    9. 'a' → logprob: -4.685980796813965
    10. 'Fen' → logprob: -4.810980796813965

Token 943: ' sub' (ID: 1543)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.5163975358009338
    2. 'binary' → logprob: -1.891397476196289
    3. 'current' → logprob: -2.766397476196289
    4. 'window' → logprob: -2.891397476196289
    5. ' fen' → logprob: -3.391397476196289
    6. 'sub' → logprob: -3.641397476196289
    7. 'Fen' → logprob: -3.891397476196289
    8. 'compressed' → logprob: -4.266397476196289
    9. '       ' → logprob: -4.391397476196289
    10. ' current' → logprob: -5.391397476196289

Token 944: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.008119119331240654
    2. 'arrays' → logprob: -5.008119106292725
    3. '       ' → logprob: -7.258119106292725
    4. 'arr' → logprob: -8.133119583129883
    5. '_array' → logprob: -8.758119583129883
    6. '[' → logprob: -9.383119583129883
    7. 'arra' → logprob: -10.258119583129883
    8. '   ' → logprob: -10.383119583129883
    9. 'ar' → logprob: -11.133119583129883
    10. ' array' → logprob: -11.508119583129883

Token 945: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5666962265968323
    2. ' ,' → logprob: -1.8166961669921875
    3. ' of' → logprob: -1.9416961669921875
    4. '       ' → logprob: -3.0666961669921875
    5. ' length' → logprob: -3.8166961669921875
    6. ' binary' → logprob: -4.5666961669921875
    7. ' self' → logprob: -4.6916961669921875
    8. ' with' → logprob: -5.1916961669921875
    9. '_com' → logprob: -6.0666961669921875
    10. '
' → logprob: -6.0666961669921875

Token 946: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1205129623413086
    2. ' the' → logprob: -2.1205129623413086
    3. ' counts' → logprob: -2.1205129623413086
    4. 'count' → logprob: -2.4955129623413086
    5. 'counts' → logprob: -2.4955129623413086
    6. ' counting' → logprob: -2.9955129623413086
    7. 'the' → logprob: -2.9955129623413086
    8. ' adding' → logprob: -3.4955129623413086
    9. '           ' → logprob: -3.6205129623413086
    10. ' we' → logprob: -3.9955129623413086

Token 947: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.010084692388772964
    2. ' least' → logprob: -4.885084629058838
    3. 'length' → logprob: -7.135084629058838
    4. 'le' → logprob: -7.510084629058838
    5. '_le' → logprob: -7.760084629058838
    6. '       ' → logprob: -8.635085105895996
    7. 'self' → logprob: -8.885085105895996
    8. '#' → logprob: -8.885085105895996
    9. '```' → logprob: -9.760085105895996
    10. '           ' → logprob: -9.885085105895996

Token 948: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.25254249572753906
    2. 'self' → logprob: -1.752542495727539
    3. ' K' → logprob: -3.502542495727539
    4. 'k' → logprob: -5.127542495727539
    5. ' self' → logprob: -5.752542495727539
    6. '       ' → logprob: -5.877542495727539
    7. 'the' → logprob: -6.127542495727539
    8. '```' → logprob: -6.252542495727539
    9. '`' → logprob: -6.752542495727539
    10. 'binary' → logprob: -7.127542495727539

Token 949: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -1.1886746883392334
    2. ')' → logprob: -1.9386746883392334
    3. ' of' → logprob: -2.0636746883392334
    4. '       ' → logprob: -2.6886746883392334
    5. 'elements' → logprob: -2.6886746883392334
    6. '   ' → logprob: -3.0636746883392334
    7. 'of' → logprob: -3.6886746883392334
    8. ' counts' → logprob: -4.0636749267578125
    9. '-' → logprob: -4.3136749267578125
    10. ' <=' → logprob: -4.4386749267578125

Token 950: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7405619621276855
    2. '<=' → logprob: -1.9905619621276855
    3. ' >=' → logprob: -2.3655619621276855
    4. '       ' → logprob: -2.8655619621276855
    5. '>=' → logprob: -3.6155619621276855
    6. '           ' → logprob: -3.7405619621276855
    7. 'with' → logprob: -3.9905619621276855
    8. '```' → logprob: -4.1155619621276855
    9. '[' → logprob: -4.2405619621276855
    10. '=' → logprob: -4.2405619621276855

Token 951: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5780553221702576
    2. ' val' → logprob: -0.8280553221702576
    3. 'x' → logprob: -7.203055381774902
    4. ' x' → logprob: -7.328055381774902
    5. ''' → logprob: -8.453055381774902
    6. '`' → logprob: -8.703055381774902
    7. '```' → logprob: -9.953055381774902
    8. '_val' → logprob: -10.078055381774902
    9. '
' → logprob: -10.328055381774902
    10. ' ' → logprob: -10.453055381774902

Token 952: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0074640619568526745
    2. '
' → logprob: -5.3824639320373535
    3. ',' → logprob: -7.0074639320373535
    4. ' while' → logprob: -7.6324639320373535
    5. '        
' → logprob: -7.7574639320373535
    6. '```' → logprob: -8.007464408874512
    7. 'while' → logprob: -9.257464408874512
    8. '<|end|>' → logprob: -9.632464408874512
    9. ',
' → logprob: -9.757464408874512
    10. '.' → logprob: -9.882464408874512

Token 953: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022389277815818787
    2. '
' → logprob: -4.0223894119262695
    3. '<|end|>' → logprob: -6.7723894119262695
    4. '        
' → logprob: -6.8973894119262695
    5. ' ' → logprob: -8.39738941192627
    6. '  
' → logprob: -8.52238941192627
    7. '```' → logprob: -8.64738941192627
    8. '\n' → logprob: -8.77238941192627
    9. '   ' → logprob: -9.02238941192627
    10. ',' → logprob: -9.02238941192627

Token 954: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7319449782371521
    2. '       ' → logprob: -0.9819449782371521
    3. '\n' → logprob: -2.731945037841797
    4. ' 
' → logprob: -3.106945037841797
    5. '        
' → logprob: -4.606945037841797
    6. '\' → logprob: -5.481945037841797
    7. '```' → logprob: -5.481945037841797
    8. '' → logprob: -5.606945037841797
    9. '  
' → logprob: -5.731945037841797
    10. '\
' → logprob: -6.106945037841797

Token 955: ' Let's' (ID: 41021)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6665827035903931
    2. '       ' → logprob: -1.041582703590393
    3. 'n' → logprob: -3.1665825843811035
    4. 'for' → logprob: -3.7915825843811035
    5. '#' → logprob: -4.0415825843811035
    6. 'count' → logprob: -4.5415825843811035
    7. 'right' → logprob: -4.6665825843811035
    8. 'sub' → logprob: -5.1665825843811035
    9. ' while' → logprob: -5.4165825843811035
    10. 'left' → logprob: -5.6665825843811035

Token 956: ' use' (ID: 1199)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7946764826774597
    2. '       ' → logprob: -0.9196764826774597
    3. 'while' → logprob: -2.1696765422821045
    4. ' count' → logprob: -4.294676303863525
    5. ' while' → logprob: -4.919676303863525
    6. 'cnt' → logprob: -6.419676303863525
    7. 'l' → logprob: -6.669676303863525
    8. 'continue' → logprob: -6.919676303863525
    9. '   ' → logprob: -7.169676303863525
    10. ' l' → logprob: -7.294676303863525

Token 957: ' a' (ID: 261)
  Prédit: ' fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fen' → logprob: -0.4431598484516144
    2. 'fen' → logprob: -1.568159818649292
    3. 'count' → logprob: -3.068159818649292
    4. 'Fen' → logprob: -4.193160057067871
    5. '       ' → logprob: -4.568160057067871
    6. '0' → logprob: -4.568160057067871
    7. ' Fen' → logprob: -4.693160057067871
    8. 'right' → logprob: -4.693160057067871
    9. 'freq' → logprob: -4.818160057067871
    10. 'two' → logprob: -5.318160057067871

Token 958: ' prefix' (ID: 18633)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.45797842741012573
    2. 'fen' → logprob: -2.7079784870147705
    3. 'left' → logprob: -3.0829784870147705
    4. 'two' → logprob: -3.2079784870147705
    5. 'freq' → logprob: -3.7079784870147705
    6. 'while' → logprob: -3.8329784870147705
    7. 'Fen' → logprob: -3.9579784870147705
    8. 'prefix' → logprob: -3.9579784870147705
    9. 'from' → logprob: -4.207978248596191
    10. 'counter' → logprob: -4.332978248596191

Token 959: ' sum' (ID: 4215)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.486126184463501
    2. 'sum' → logprob: -1.236126184463501
    3. '_s' → logprob: -3.111126184463501
    4. '_count' → logprob: -3.736126184463501
    5. '_counts' → logprob: -4.486125946044922
    6. '_' → logprob: -4.611125946044922
    7. 'count' → logprob: -6.236125946044922
    8. ' sums' → logprob: -6.736125946044922
    9. 'counts' → logprob: -7.611125946044922
    10. '_cnt' → logprob: -7.736125946044922

Token 960: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.916379988193512
    2. ' =' → logprob: -1.5413799285888672
    3. '_' → logprob: -1.9163799285888672
    4. '   ' → logprob: -2.541379928588867
    5. 's' → logprob: -3.416379928588867
    6. '
' → logprob: -3.666379928588867
    7. '=' → logprob: -4.041379928588867
    8. '_sum' → logprob: -4.291379928588867
    9. 'sum' → logprob: -4.541379928588867
    10. '[' → logprob: -4.666379928588867

Token 961: ' binary' (ID: 15600)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.002242323709651828
    2. ' binary' → logprob: -6.127242088317871
    3. 'b' → logprob: -11.127242088317871
    4. 'the' → logprob: -11.252242088317871
    5. 'compressed' → logprob: -12.377242088317871
    6. 'prefix' → logprob: -12.377242088317871
    7. '   ' → logprob: -12.377242088317871
    8. '[' → logprob: -12.502242088317871
    9. '(binary' → logprob: -12.502242088317871
    10. '1' → logprob: -13.627242088317871

Token 962: ' to' (ID: 316)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1586141437292099
    2. ' =' → logprob: -2.908614158630371
    3. 's' → logprob: -3.408614158630371
    4. '_sum' → logprob: -4.533614158630371
    5. ' _' → logprob: -4.908614158630371
    6. '
' → logprob: -4.908614158630371
    7. '_
' → logprob: -5.033614158630371
    8. 'sum' → logprob: -5.408614158630371
    9. '_s' → logprob: -5.658614158630371
    10. '       ' → logprob: -5.658614158630371

Token 963: ' check' (ID: 2371)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6478337049484253
    2. ' track' → logprob: -1.6478337049484253
    3. ' count' → logprob: -2.022833824157715
    4. 'track' → logprob: -2.897833824157715
    5. 'find' → logprob: -3.522833824157715
    6. 'help' → logprob: -4.397833824157715
    7. ' find' → logprob: -4.522833824157715
    8. 'maint' → logprob: -4.897833824157715
    9. ' quickly' → logprob: -5.022833824157715
    10. ' help' → logprob: -5.522833824157715

Token 964: ' how' (ID: 1495)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6875730752944946
    2. ' prefix' → logprob: -1.1875730752944946
    3. 'prefix' → logprob: -2.437572956085205
    4. '
' → logprob: -2.562572956085205
    5. ' cumulative' → logprob: -5.812572956085205
    6. 'sum' → logprob: -5.937572956085205
    7. '        
' → logprob: -6.062572956085205
    8. ',' → logprob: -6.062572956085205
    9. 'psum' → logprob: -6.437572956085205
    10. '(prefix' → logprob: -6.812572956085205

Token 965: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.25774240493774414
    2. ' many' → logprob: -1.5077424049377441
    3. 'much' → logprob: -5.882742404937744
    4. '       ' → logprob: -6.382742404937744
    5. '   ' → logprob: -8.257741928100586
    6. ' much' → logprob: -8.632741928100586
    7. ' far' → logprob: -8.882741928100586
    8. 'count' → logprob: -9.132741928100586
    9. '           ' → logprob: -9.257741928100586
    10. '    ' → logprob: -9.632741928100586

Token 966: ' elements' (ID: 8632)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -1.2240675687789917
    2. ' elements' → logprob: -1.3490675687789917
    3. 'count' → logprob: -1.9740675687789917
    4. '<=' → logprob: -2.9740676879882812
    5. '       ' → logprob: -3.3490676879882812
    6. ' count' → logprob: -3.4740676879882812
    7. ' <=' → logprob: -3.4740676879882812
    8. 'prefix' → logprob: -4.099067687988281
    9. '   ' → logprob: -4.349067687988281
    10. '#' → logprob: -4.474067687988281

Token 967: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.0127273797988892
    2. ' <=' → logprob: -1.1377273797988892
    3. '       ' → logprob: -1.7627273797988892
    4. 'in' → logprob: -2.7627272605895996
    5. ' in' → logprob: -3.1377272605895996
    6. '```' → logprob: -4.6377272605896
    7. '   ' → logprob: -5.3877272605896
    8. 'are' → logprob: -5.7627272605896
    9. ' less' → logprob: -5.8877272605896
    10. ' are' → logprob: -6.0127272605896

Token 968: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.043482549488544464
    2. ' val' → logprob: -3.168482542037964
    3. 'x' → logprob: -9.168482780456543
    4. '```' → logprob: -9.293482780456543
    5. '[val' → logprob: -10.168482780456543
    6. ' ' → logprob: -10.168482780456543
    7. '           ' → logprob: -10.418482780456543
    8. '_val' → logprob: -10.418482780456543
    9. ' x' → logprob: -10.668482780456543
    10. '   ' → logprob: -10.793482780456543

Token 969: ' in' (ID: 306)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41187962889671326
    2. '       ' → logprob: -1.1618796586990356
    3. '[' → logprob: -6.161879539489746
    4. ':
' → logprob: -6.286879539489746
    5. '```' → logprob: -6.286879539489746
    6. ':' → logprob: -6.411879539489746
    7. '.
' → logprob: -6.536879539489746
    8. '        
' → logprob: -6.661879539489746
    9. '

' → logprob: -6.911879539489746
    10. ' prefix' → logprob: -7.036879539489746

Token 970: ' each' (ID: 2454)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.628601610660553
    2. 'sub' → logprob: -1.1286015510559082
    3. ' the' → logprob: -2.628601551055908
    4. 'self' → logprob: -4.003601551055908
    5. 'window' → logprob: -4.253601551055908
    6. ' sub' → logprob: -4.503601551055908
    7. 'current' → logprob: -4.878601551055908
    8. 'binary' → logprob: -5.378601551055908
    9. 'arr' → logprob: -6.003601551055908
    10. 'each' → logprob: -6.128601551055908

Token 971: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.41585710644721985
    2. 'self' → logprob: -2.2908570766448975
    3. 'sub' → logprob: -2.4158570766448975
    4. ' self' → logprob: -2.5408570766448975
    5. '       ' → logprob: -3.6658570766448975
    6. ' array' → logprob: -4.415857315063477
    7. ' prefix' → logprob: -4.790857315063477
    8. 'prefix' → logprob: -5.290857315063477
    9. 'array' → logprob: -5.415857315063477
    10. '   ' → logprob: -5.790857315063477

Token 972: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.00160782050807029
    2. '       ' → logprob: -7.251607894897461
    3. '   ' → logprob: -8.501607894897461
    4. ')' → logprob: -8.751607894897461
    5. 'arr' → logprob: -9.001607894897461
    6. 'rray' → logprob: -9.876607894897461
    7. '
' → logprob: -10.001607894897461
    8. 'sequence' → logprob: -10.126607894897461
    9. '[' → logprob: -10.376607894897461
    10. '           ' → logprob: -10.626607894897461

Token 973: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2494933158159256
    2. '
' → logprob: -1.8744933605194092
    3. ',' → logprob: -4.49949312210083
    4. '.' → logprob: -4.49949312210083
    5. '[' → logprob: -4.74949312210083
    6. '        
' → logprob: -4.74949312210083
    7. ':' → logprob: -5.99949312210083
    8. ' =' → logprob: -5.99949312210083
    9. '<|end|>' → logprob: -6.24949312210083
    10. '.
' → logprob: -6.37449312210083

Token 974: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5782967209815979
    2. '       ' → logprob: -0.8282967209815979
    3. '        
' → logprob: -6.328296661376953
    4. '```' → logprob: -8.578296661376953
    5. '

' → logprob: -9.578296661376953
    6. 'prefix' → logprob: -9.703296661376953
    7. '
' → logprob: -9.828296661376953
    8. '#' → logprob: -10.703296661376953
    9. '  
' → logprob: -11.078296661376953
    10. '    
' → logprob: -11.078296661376953

Token 975: ' pref' (ID: 27015)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.6297191977500916
    2. '       ' → logprob: -0.8797191977500916
    3. ' prefix' → logprob: -3.2547192573547363
    4. 'pref' (adapté à ' pref') → logprob: -4.629719257354736
    5. 'psum' → logprob: -7.004719257354736
    6. 'pre' → logprob: -7.004719257354736
    7. '
' → logprob: -7.129719257354736
    8. 'ps' → logprob: -7.629719257354736
    9. ' pref' → logprob: -8.254718780517578
    10. '#' → logprob: -9.254718780517578

Token 976: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19182747602462769
    2. 'ix' → logprob: -2.0668275356292725
    3. '_sum' → logprob: -3.8168275356292725
    4. 'sum' → logprob: -4.316827297210693
    5. '=' → logprob: -4.816827297210693
    6. '_' → logprob: -6.191827297210693
    7. 'ixed' → logprob: -7.691827297210693
    8. '=[]' → logprob: -7.691827297210693
    9. 'ixes' → logprob: -8.691827774047852
    10. '_ix' → logprob: -8.691827774047852

Token 977: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.742448022123426e-05
    2. ' [' → logprob: -9.625067710876465
    3. '0' → logprob: -14.125067710876465
    4. '[self' → logprob: -15.250067710876465
    5. '[b' → logprob: -15.500067710876465
    6. '[p' → logprob: -17.25006675720215
    7. '[len' → logprob: -17.75006675720215
    8. ' ' → logprob: -18.75006675720215
    9. '[class' → logprob: -18.75006675720215
    10. '[int' → logprob: -18.87506675720215

Token 978: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '   ' → logprob: -21.125
    4. '[' → logprob: -21.375
    5. '
' → logprob: -22.0
    6. '{' → logprob: -22.25
    7. '۰' → logprob: -22.375
    8. '(' → logprob: -22.75
    9. ' ' → logprob: -24.125
    10. '000' → logprob: -24.25

Token 979: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.5857748985290527
    2. ' for' → logprob: -1.5857748985290527
    3. '0' → logprob: -1.7107748985290527
    4. '(' → logprob: -1.8357748985290527
    5. 'for' → logprob: -2.0857748985290527
    6. '[' → logprob: -3.3357748985290527
    7. ']
' → logprob: -3.5857748985290527
    8. '       ' → logprob: -3.9607748985290527
    9. ' (' → logprob: -4.460774898529053
    10. ',' → logprob: -4.960774898529053

Token 980: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0822057723999023
    2. ' =' → logprob: -1.2072057723999023
    3. '=' → logprob: -1.5822057723999023
    4. ' for' → logprob: -2.4572057723999023
    5. 'for' → logprob: -3.4572057723999023
    6. '=[' → logprob: -4.707205772399902
    7. '0' → logprob: -4.832205772399902
    8. '(' → logprob: -5.082205772399902
    9. '       ' → logprob: -5.707205772399902
    10. '
' → logprob: -5.957205772399902

Token 981: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006719163153320551
    2. '(len' → logprob: -5.00671911239624
    3. ' (' → logprob: -12.756719589233398
    4. 'self' → logprob: -15.006719589233398
    5. '(' → logprob: -15.256719589233398
    6. '   ' → logprob: -15.881719589233398
    7. '((' → logprob: -16.0067195892334
    8. 'len' → logprob: -16.5067195892334
    9. '       ' → logprob: -16.6317195892334
    10. '[self' → logprob: -17.1317195892334

Token 982: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015309321461245418
    2. '(self' → logprob: -6.75153112411499
    3. 'len' → logprob: -8.126530647277832
    4. ' self' → logprob: -10.251530647277832
    5. '       ' → logprob: -11.126530647277832
    6. '(len' → logprob: -11.876530647277832
    7. '[self' → logprob: -12.626530647277832
    8. '
' → logprob: -13.001530647277832
    9. '   ' → logprob: -13.501530647277832
    10. '           ' → logprob: -14.501530647277832

Token 983: '.N' (ID: 4439)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.435149610042572
    2. '(len' → logprob: -1.6851496696472168
    3. '(self' → logprob: -2.560149669647217
    4. 'self' → logprob: -2.810149669647217
    5. 'N' → logprob: -4.685149669647217
    6. 'len' → logprob: -4.685149669647217
    7. '(n' → logprob: -5.310149669647217
    8. '+' → logprob: -5.685149669647217
    9. ' (' → logprob: -6.560149669647217
    10. '(' → logprob: -7.185149669647217

Token 984: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024768433067947626
    2. ' +' → logprob: -6.002476692199707
    3. '+
' → logprob: -13.752476692199707
    4. '       ' → logprob: -16.877477645874023
    5. '[' → logprob: -17.127477645874023
    6. '```' → logprob: -17.627477645874023
    7. '
' → logprob: -17.752477645874023
    8. '   ' → logprob: -18.002477645874023
    9. '＋' → logprob: -18.002477645874023
    10. '1' → logprob: -18.377477645874023

Token 985: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.750001907348633
    3. '   ' → logprob: -14.375001907348633
    4. '2' → logprob: -17.625001907348633
    5. '
' → logprob: -17.625001907348633
    6. '```' → logprob: -17.625001907348633
    7. '+' → logprob: -18.000001907348633
    8. '       ' → logprob: -18.375001907348633
    9. '{' → logprob: -19.625001907348633
    10. '           ' → logprob: -20.000001907348633

Token 986: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '   ' → logprob: -14.375000953674316
    3. ' ' → logprob: -14.625000953674316
    4. '2' → logprob: -16.750001907348633
    5. '
' → logprob: -17.250001907348633
    6. '```' → logprob: -18.125001907348633
    7. '+' → logprob: -18.625001907348633
    8. '       ' → logprob: -20.000001907348633
    9. '{' → logprob: -20.375001907348633
    10. '  ' → logprob: -20.875001907348633

Token 987: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04811645671725273
    2. ']
' → logprob: -3.298116445541382
    3. ')' → logprob: -5.298116683959961
    4. '       ' → logprob: -5.548116683959961
    5. '
' → logprob: -7.548116683959961
    6. ']' → logprob: -7.798116683959961
    7. 'for' → logprob: -9.798116683959961
    8. '```' → logprob: -10.298116683959961
    9. '   ' → logprob: -10.548116683959961
    10. '[' → logprob: -11.048116683959961

Token 988: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053084079176187515
    2. 'for' → logprob: -3.053084135055542
    3. ' for' → logprob: -5.428083896636963
    4. '   ' → logprob: -9.678084373474121
    5. '```' → logprob: -10.803084373474121
    6. '           ' → logprob: -12.178084373474121
    7. '
' → logprob: -12.303084373474121
    8. '	for' → logprob: -13.803084373474121
    9. ' ' → logprob: -14.803084373474121
    10. '               ' → logprob: -15.428084373474121

Token 989: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00018518301658332348
    2. ' for' → logprob: -9.000185012817383
    3. '       ' → logprob: -9.750185012817383
    4. '	for' → logprob: -13.375185012817383
    5. '   ' → logprob: -13.875185012817383
    6. '
' → logprob: -14.250185012817383
    7. '```' → logprob: -15.375185012817383
    8. 'For' → logprob: -17.375185012817383
    9. '        
' → logprob: -19.250185012817383
    10. '``' → logprob: -19.250185012817383

Token 990: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024781543761491776
    2. ' i' → logprob: -6.002478122711182
    3. '_' → logprob: -13.62747859954834
    4. '_i' → logprob: -14.25247859954834
    5. '   ' → logprob: -14.75247859954834
    6. '	i' → logprob: -15.62747859954834
    7. ' ' → logprob: -17.127477645874023
    8. '1' → logprob: -18.752477645874023
    9. '```' → logprob: -19.377477645874023
    10. 'I' → logprob: -19.377477645874023

Token 991: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0077567496336996555
    2. 'in' → logprob: -4.88275671005249
    3. '1' → logprob: -10.007757186889648
    4. ' i' → logprob: -10.382757186889648
    5. '   ' → logprob: -10.757757186889648
    6. 'i' → logprob: -10.882757186889648
    7. '	in' → logprob: -11.507757186889648
    8. '```' → logprob: -12.382757186889648
    9. '       ' → logprob: -12.757757186889648
    10. '(i' → logprob: -12.757757186889648

Token 992: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014164687134325504
    2. ' range' → logprob: -4.264164924621582
    3. '1' → logprob: -13.764164924621582
    4. '(range' → logprob: -16.514163970947266
    5. 'in' → logprob: -17.389163970947266
    6. '
' → logprob: -17.764163970947266
    7. '   ' → logprob: -18.389163970947266
    8. ' ' → logprob: -18.514163970947266
    9. '	range' → logprob: -18.514163970947266
    10. ' in' → logprob: -18.889163970947266

Token 993: '(self' (ID: 2402)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0734591856598854
    2. 'i' → logprob: -2.8234591484069824
    3. '(' → logprob: -4.823459148406982
    4. '(i' → logprob: -6.323459148406982
    5. '   ' → logprob: -6.948459148406982
    6. 'self' → logprob: -7.573459148406982
    7. '(self' → logprob: -9.82345962524414
    8. '       ' → logprob: -10.44845962524414
    9. ' i' → logprob: -10.57345962524414
    10. ' ' → logprob: -12.69845962524414

Token 994: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.013353974558413029
    2. 'N' → logprob: -4.5133538246154785
    3. '+' → logprob: -6.8883538246154785
    4. '   ' → logprob: -7.6383538246154785
    5. '1' → logprob: -7.7633538246154785
    6. '       ' → logprob: -8.763354301452637
    7. 'self' → logprob: -8.888354301452637
    8. '):
' → logprob: -10.888354301452637
    9. 'def' → logprob: -11.013354301452637
    10. ')' → logprob: -11.888354301452637

Token 995: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.37088069319725037
    2. '):
' → logprob: -1.2458807229995728
    3. '):' → logprob: -4.370880603790283
    4. ' +' → logprob: -4.870880603790283
    5. '1' → logprob: -7.495880603790283
    6. '   ' → logprob: -7.995880603790283
    7. '       ' → logprob: -7.995880603790283
    8. '-' → logprob: -8.245881080627441
    9. '=' → logprob: -9.120881080627441
    10. '           ' → logprob: -9.620881080627441

Token 996: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009751861798577011
    2. '   ' → logprob: -7.250975131988525
    3. '       ' → logprob: -9.000975608825684
    4. '```' → logprob: -9.125975608825684
    5. '	       ' → logprob: -11.750975608825684
    6. '(pref' → logprob: -12.250975608825684
    7. '<|end|>' → logprob: -12.250975608825684
    8. '               ' → logprob: -12.500975608825684
    9. '<|end|>' → logprob: -13.125975608825684
    10. '#' → logprob: -13.500975608825684

Token 997: ' pref' (ID: 27015)
  Prédit: 'pref'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pref' (adapté à ' pref') → logprob: -0.7302386164665222
    2. '           ' → logprob: -0.8552386164665222
    3. '               ' → logprob: -2.605238676071167
    4. ' pref' → logprob: -4.105238437652588
    5. '   ' → logprob: -6.480238437652588
    6. '(pref' → logprob: -7.230238437652588
    7. '       ' → logprob: -8.605238914489746
    8. '_pref' → logprob: -9.605238914489746
    9. '.pref' → logprob: -10.105238914489746
    10. '-pref' → logprob: -10.855238914489746

Token 998: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011832444579340518
    2. '```' → logprob: -9.625118255615234
    3. '[' → logprob: -10.125118255615234
    4. ' [' → logprob: -11.750118255615234
    5. '\[' → logprob: -13.750118255615234
    6. '[
' → logprob: -14.000118255615234
    7. '][' → logprob: -14.625118255615234
    8. '   ' → logprob: -14.625118255615234
    9. 'i' → logprob: -15.250118255615234
    10. '[++' → logprob: -16.000118255615234

Token 999: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016056541353464127
    2. ' +' → logprob: -4.141056537628174
    3. '1' → logprob: -11.391057014465332
    4. ']' → logprob: -12.266057014465332
    5. '=' → logprob: -12.641057014465332
    6. '[' → logprob: -13.391057014465332
    7. '+
' → logprob: -14.766057014465332
    8. '＋' → logprob: -15.016057014465332
    9. '+]' → logprob: -15.516057014465332
    10. '0' → logprob: -15.641057014465332

Token 1000: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.750000953674316
    3. '```' → logprob: -15.625000953674316
    4. '=' → logprob: -15.625000953674316
    5. '
' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.000001907348633
    7. 'i' → logprob: -17.125001907348633
    8. '+' → logprob: -18.375001907348633
    9. '``' → logprob: -19.125001907348633
    10. '{
' → logprob: -19.125001907348633

Token 1001: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03935199975967407
    2. ' =' → logprob: -3.4143519401550293
    3. '+=' → logprob: -5.539351940155029
    4. ' +=' → logprob: -6.914351940155029
    5. ']' → logprob: -7.914351940155029
    6. ']+=' → logprob: -8.539352416992188
    7. ']=' → logprob: -8.914352416992188
    8. ')' → logprob: -10.289352416992188
    9. '=
' → logprob: -11.414352416992188
    10. '=p' → logprob: -11.914352416992188

Token 1002: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00484162662178278
    2. ' =' → logprob: -5.6298418045043945
    3. '+=' → logprob: -6.7548418045043945
    4. ' +=' → logprob: -9.629841804504395
    5. '=
' → logprob: -12.254841804504395
    6. '=p' → logprob: -12.754841804504395
    7. ']+=' → logprob: -14.629841804504395
    8. '=int' → logprob: -15.129841804504395
    9. '```' → logprob: -15.379841804504395
    10. '=f' → logprob: -15.504841804504395

Token 1003: ' pref' (ID: 27015)
  Prédit: 'pref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pref' → logprob: -0.0019361276645213366
    2. ' pref' → logprob: -6.251935958862305
    3. '           ' → logprob: -12.126935958862305
    4. '(pref' → logprob: -13.626935958862305
    5. 'pred' → logprob: -15.751935958862305
    6. 'prem' → logprob: -15.876935958862305
    7. '-pref' → logprob: -16.126935958862305
    8. '   ' → logprob: -16.376935958862305
    9. 'prefix' → logprob: -16.501935958862305
    10. '       ' → logprob: -16.751935958862305

Token 1004: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.696889623621246e-06
    2. 'i' → logprob: -13.25000286102295
    3. '```' → logprob: -15.25000286102295
    4. 'pref' → logprob: -15.75000286102295
    5. '[' → logprob: -16.000001907348633
    6. '[
' → logprob: -16.125001907348633
    7. '(i' → logprob: -16.750001907348633
    8. '{i' → logprob: -17.125001907348633
    9. '`' → logprob: -17.375001907348633
    10. '[I' → logprob: -18.250001907348633

Token 1005: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5232687592506409
    2. ' +' → logprob: -0.8982687592506409
    3. ' if' → logprob: -9.648268699645996
    4. ']+' → logprob: -10.148268699645996
    5. '+
' → logprob: -11.398268699645996
    6. ']' → logprob: -11.648268699645996
    7. '           ' → logprob: -11.898268699645996
    8. '[' → logprob: -12.898268699645996
    9. 'if' → logprob: -12.898268699645996
    10. ')+' → logprob: -13.148268699645996

Token 1006: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03805594891309738
    2. ' +' → logprob: -3.288055896759033
    3. '+
' → logprob: -11.538056373596191
    4. '           ' → logprob: -13.288056373596191
    5. '+b' → logprob: -14.038056373596191
    6. ' if' → logprob: -14.663056373596191
    7. '+[' → logprob: -14.788056373596191
    8. '+self' → logprob: -15.788056373596191
    9. 'if' → logprob: -15.913056373596191
    10. '+x' → logprob: -15.913056373596191

Token 1007: ' binary' (ID: 15600)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.008794196881353855
    2. ' binary' → logprob: -4.75879430770874
    3. '(binary' → logprob: -8.758793830871582
    4. '1' → logprob: -10.883793830871582
    5. '(' → logprob: -13.258793830871582
    6. ' (' → logprob: -13.883793830871582
    7. '   ' → logprob: -14.883793830871582
    8. 'b' → logprob: -15.008793830871582
    9. ' ' → logprob: -15.258793830871582
    10. '.binary' → logprob: -16.3837947845459

Token 1008: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.490809417096898e-05
    2. '[' → logprob: -9.875055313110352
    3. '```' → logprob: -13.125055313110352
    4. '[
' → logprob: -14.000055313110352
    5. '[self' → logprob: -15.500055313110352
    6. '\[' → logprob: -15.875055313110352
    7. '[x' → logprob: -16.37505531311035
    8. 'i' → logprob: -16.62505531311035
    9. '(i' → logprob: -16.75005531311035
    10. '   ' → logprob: -17.00005531311035

Token 1009: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13138338923454285
    2. '<|end|>' → logprob: -2.1313834190368652
    3. '<|end|>' → logprob: -5.881383419036865
    4. ')' → logprob: -6.756383419036865
    5. '       ' → logprob: -8.631382942199707
    6. ')]' → logprob: -9.506382942199707
    7. ' ]' → logprob: -9.506382942199707
    8. ']
' → logprob: -10.381382942199707
    9. '```' → logprob: -10.881382942199707
    10. '           ' → logprob: -11.256382942199707

Token 1010: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06603943556547165
    2. '
' → logprob: -2.9410393238067627
    3. '<|end|>' → logprob: -4.941039562225342
    4. '```' → logprob: -6.066039562225342
    5. '        
' → logprob: -7.316039562225342
    6. '           ' → logprob: -8.441039085388184
    7. '   ' → logprob: -8.816039085388184
    8. '<|end|>' → logprob: -9.066039085388184
    9. ' ' → logprob: -9.191039085388184
    10. ' for' → logprob: -9.316039085388184

Token 1011: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12271537631750107
    2. 'for' → logprob: -2.372715473175049
    3. ' for' → logprob: -3.872715473175049
    4. '```' → logprob: -6.997715473175049
    5. '   ' → logprob: -8.12271499633789
    6. 'left' → logprob: -9.12271499633789
    7. 'right' → logprob: -9.87271499633789
    8. 'from' → logprob: -10.99771499633789
    9. ' left' → logprob: -11.49771499633789
    10. '
' → logprob: -11.74771499633789

Token 1012: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6010863184928894
    2. '=' → logprob: -1.8510863780975342
    3. '+=' → logprob: -1.8510863780975342
    4. ' =' → logprob: -2.101086378097534
    5. '_sub' → logprob: -4.601086139678955
    6. '_count' → logprob: -6.226086139678955
    7. '_' → logprob: -6.851086139678955
    8. '_tokens' → logprob: -6.851086139678955
    9. '+' → logprob: -8.101086616516113
    10. '
' → logprob: -8.851086616516113

Token 1013: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038384052459150553
    2. ' ' → logprob: -7.8753838539123535
    3. 'left' → logprob: -14.125383377075195
    4. '   ' → logprob: -14.375383377075195
    5. 'right' → logprob: -14.625383377075195
    6. 'self' → logprob: -14.750383377075195
    7. '       ' → logprob: -14.875383377075195
    8. '```' → logprob: -15.125383377075195
    9. '[' → logprob: -15.625383377075195
    10. '(' → logprob: -15.625383377075195

Token 1014: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.570319702499546e-05
    2. ' ' → logprob: -10.750025749206543
    3. 'self' → logprob: -12.625025749206543
    4. '   ' → logprob: -14.875025749206543
    5. '
' → logprob: -15.500025749206543
    6. '(' → logprob: -16.000024795532227
    7. '```' → logprob: -16.750024795532227
    8. '       ' → logprob: -17.000024795532227
    9. 'left' → logprob: -17.500024795532227
    10. '[' → logprob: -17.750024795532227

Token 1015: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028410006780177355
    2. '
' → logprob: -9.125284194946289
    3. '```' → logprob: -9.375284194946289
    4. '<|end|>' → logprob: -10.625284194946289
    5. '        
' → logprob: -11.125284194946289
    6. ' for' → logprob: -11.250284194946289
    7. ',' → logprob: -11.375284194946289
    8. '   ' → logprob: -11.875284194946289
    9. '	' → logprob: -12.375284194946289
    10. '           ' → logprob: -13.000284194946289

Token 1016: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009199160267598927
    2. '```' → logprob: -7.125919818878174
    3. ' for' → logprob: -9.625920295715332
    4. ',' → logprob: -10.875920295715332
    5. ' while' → logprob: -11.250920295715332
    6. '           ' → logprob: -12.500920295715332
    7. '   ' → logprob: -12.875920295715332
    8. 'while' → logprob: -13.000920295715332
    9. 'for' → logprob: -13.625920295715332
    10. '``' → logprob: -13.625920295715332

Token 1017: ' #' (ID: 1069)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.8230503797531128
    2. '       ' → logprob: -1.3230503797531128
    3. 'for' → logprob: -2.3230504989624023
    4. 'left' → logprob: -3.1980504989624023
    5. ' right' → logprob: -3.3230504989624023
    6. 'r' → logprob: -3.3230504989624023
    7. 'l' → logprob: -3.4480504989624023
    8. ' for' → logprob: -3.9480504989624023
    9. 'j' → logprob: -4.448050498962402
    10. ' l' → logprob: -5.198050498962402

Token 1018: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6537314653396606
    2. 'right' → logprob: -1.5287314653396606
    3. 'l' → logprob: -2.528731346130371
    4. 'r' → logprob: -2.528731346130371
    5. 'j' → logprob: -2.903731346130371
    6. 'left' → logprob: -3.403731346130371
    7. '       ' → logprob: -5.528731346130371
    8. ' for' → logprob: -5.528731346130371
    9. 'from' → logprob: -5.653731346130371
    10. '   ' → logprob: -6.903731346130371

Token 1019: ' each' (ID: 2454)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.0146400928497314
    2. 'r' → logprob: -1.1396400928497314
    3. 'right' → logprob: -2.0146400928497314
    4. 'start' → logprob: -3.0146400928497314
    5. 'l' → logprob: -3.1396400928497314
    6. 'i' → logprob: -3.5146400928497314
    7. ' length' → logprob: -3.6396400928497314
    8. 'end' → logprob: -4.764639854431152
    9. 'sub' → logprob: -5.139639854431152
    10. 'j' → logprob: -5.139639854431152

Token 1020: ' r' (ID: 428)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.41106539964675903
    2. 'right' → logprob: -2.0360653400421143
    3. ' length' → logprob: -2.4110653400421143
    4. 'sub' → logprob: -3.2860653400421143
    5. 'l' → logprob: -3.4110653400421143
    6. 'i' → logprob: -4.411065578460693
    7. ' right' → logprob: -4.786065578460693
    8. 'r' → logprob: -5.286065578460693
    9. 'left' → logprob: -5.411065578460693
    10. ' sub' → logprob: -5.411065578460693

Token 1021: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01281016506254673
    2. ' =' → logprob: -5.137810230255127
    3. 'in' → logprob: -5.262810230255127
    4. '=' → logprob: -7.137810230255127
    5. ' ' → logprob: -7.762810230255127
    6. '       ' → logprob: -8.387809753417969
    7. '   ' → logprob: -9.262809753417969
    8. ' for' → logprob: -10.512809753417969
    9. '        ' → logprob: -10.887809753417969
    10. ',' → logprob: -11.512809753417969

Token 1022: ' find' (ID: 1646)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.6108593344688416
    2. ' for' → logprob: -1.4858593940734863
    3. ' l' → logprob: -2.1108593940734863
    4. 'left' → logprob: -2.7358593940734863
    5. '       ' → logprob: -4.360859394073486
    6. 'for' → logprob: -4.485859394073486
    7. 'l' → logprob: -4.735859394073486
    8. ' while' → logprob: -4.860859394073486
    9. '```' → logprob: -6.360859394073486
    10. 'while' → logprob: -6.985859394073486

Token 1023: ' how' (ID: 1495)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.22211146354675293
    2. 'left' → logprob: -2.222111463546753
    3. ' l' → logprob: -2.847111463546753
    4. ' left' → logprob: -3.597111463546753
    5. '       ' → logprob: -6.722111701965332
    6. '   ' → logprob: -6.972111701965332
    7. 'import' → logprob: -7.222111701965332
    8. 'the' → logprob: -7.972111701965332
    9. '```' → logprob: -7.972111701965332
    10. ' the' → logprob: -8.222111701965332

Token 1024: ' many' (ID: 1991)
  Prédit: ' far'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' far' → logprob: -1.4498209953308105
    2. 'import' → logprob: -1.8248209953308105
    3. 's' → logprob: -1.9498209953308105
    4. 'left' → logprob: -2.1998209953308105
    5. 'many' → logprob: -2.5748209953308105
    6. '       ' → logprob: -2.6998209953308105
    7. 'l' → logprob: -2.9498209953308105
    8. 'far' → logprob: -3.0748209953308105
    9. '=' → logprob: -3.9498209953308105
    10. '   ' → logprob: -4.1998209953308105

Token 1025: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.007938535884022713
    2. ' l' → logprob: -5.007938385009766
    3. '   ' → logprob: -8.132938385009766
    4. 'left' → logprob: -8.257938385009766
    5. '```' → logprob: -9.132938385009766
    6. 'while' → logprob: -9.382938385009766
    7. '       ' → logprob: -9.382938385009766
    8. 'for' → logprob: -9.507938385009766
    9. 'r' → logprob: -9.507938385009766
    10. '
' → logprob: -10.007938385009766

Token 1026: ' such' (ID: 2238)
  Prédit: ' such'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.18233276903629303
    2. ' in' → logprob: -2.182332754135132
    3. ' =' → logprob: -3.932332754135132
    4. 'in' → logprob: -4.182332992553711
    5. 'such' → logprob: -5.432332992553711
    6. '=' → logprob: -5.807332992553711
    7. ' <=' → logprob: -6.057332992553711
    8. ' that' → logprob: -6.432332992553711
    9. '<=' → logprob: -6.432332992553711
    10. ',' → logprob: -7.432332992553711

Token 1027: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.01655966229736805
    2. ' that' → logprob: -4.141559600830078
    3. '           ' → logprob: -8.266559600830078
    4. '_that' → logprob: -8.641559600830078
    5. '       ' → logprob: -11.016559600830078
    6. 'hat' → logprob: -11.141559600830078
    7. 'def' → logprob: -11.141559600830078
    8. 'in' → logprob: -11.766559600830078
    9. '=' → logprob: -11.891559600830078
    10. '	that' → logprob: -12.141559600830078

Token 1028: ' (' (ID: 350)
  Prédit: 'pref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pref' → logprob: -0.37729454040527344
    2. ' pref' → logprob: -1.5022945404052734
    3. '(pref' → logprob: -3.1272945404052734
    4. ' binary' → logprob: -4.502294540405273
    5. '           ' → logprob: -4.877294540405273
    6. 'binary' → logprob: -4.877294540405273
    7. 'left' → logprob: -5.627294540405273
    8. ' l' → logprob: -5.752294540405273
    9. ' left' → logprob: -5.877294540405273
    10. 'l' → logprob: -6.377294540405273

Token 1029: 'r' (ID: 81)
  Prédit: 'pref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pref' → logprob: -0.04165918007493019
    2. ' pref' → logprob: -3.791659116744995
    3. 'l' → logprob: -4.791659355163574
    4. 'left' → logprob: -5.666659355163574
    5. '           ' → logprob: -6.166659355163574
    6. 'r' → logprob: -6.541659355163574
    7. '(pref' → logprob: -6.916659355163574
    8. '       ' → logprob: -7.666659355163574
    9. 'self' → logprob: -8.416659355163574
    10. '   ' → logprob: -8.541659355163574

Token 1030: '-l' (ID: 2887)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7525442838668823
    2. ' -' → logprob: -0.7525442838668823
    3. '+' → logprob: -3.627544403076172
    4. ')' → logprob: -4.502544403076172
    5. '>=' → logprob: -4.752544403076172
    6. ' >=' → logprob: -5.752544403076172
    7. '=' → logprob: -6.252544403076172
    8. ' +' → logprob: -6.502544403076172
    9. ')>=' → logprob: -6.627544403076172
    10. ')-' → logprob: -7.252544403076172

Token 1031: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04299314320087433
    2. '>=' → logprob: -3.6679930686950684
    3. ')>=' → logprob: -4.792993068695068
    4. ')' → logprob: -5.167993068695068
    5. ' +' → logprob: -7.042993068695068
    6. ' >=' → logprob: -7.167993068695068
    7. ')+' → logprob: -7.667993068695068
    8. ']>=' → logprob: -8.292993545532227
    9. '```' → logprob: -9.292993545532227
    10. '       ' → logprob: -10.542993545532227

Token 1032: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006821724819019437
    2. '=' → logprob: -7.500682353973389
    3. ' ' → logprob: -9.75068187713623
    4. ')' → logprob: -10.50068187713623
    5. '>=' → logprob: -10.87568187713623
    6. '```' → logprob: -11.37568187713623
    7. '+' → logprob: -13.00068187713623
    8. ' =' → logprob: -13.12568187713623
    9. ' >=' → logprob: -13.37568187713623
    10. '0' → logprob: -13.37568187713623

Token 1033: ')>=' (ID: 173043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02073153667151928
    2. ')>=' → logprob: -5.270731449127197
    3. '>=' → logprob: -5.645731449127197
    4. ' >=' → logprob: -5.645731449127197
    5. '<=' → logprob: -5.895731449127197
    6. ' <=' → logprob: -5.895731449127197
    7. ')<=' → logprob: -6.395731449127197
    8. '           ' → logprob: -7.270731449127197
    9. ' )' → logprob: -8.770731925964355
    10. '```' → logprob: -8.895731925964355

Token 1034: 'K' (ID: 42)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003855093673337251
    2. ' self' → logprob: -7.875385284423828
    3. '           ' → logprob: -13.125385284423828
    4. '(self' → logprob: -13.375385284423828
    5. '       ' → logprob: -14.500385284423828
    6. '```' → logprob: -14.500385284423828
    7. '
' → logprob: -15.000385284423828
    8. 'K' → logprob: -15.000385284423828
    9. '`' → logprob: -16.875385284423828
    10. '=self' → logprob: -17.375385284423828

Token 1035: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.031911786645650864
    2. 'and' → logprob: -3.906911849975586
    3. '           ' → logprob: -5.031911849975586
    4. ',' → logprob: -6.531911849975586
    5. '
' → logprob: -6.531911849975586
    6. '```' → logprob: -7.031911849975586
    7. ' for' → logprob: -7.906911849975586
    8. '       ' → logprob: -8.281911849975586
    9. '<|end|>' → logprob: -8.906911849975586
    10. ':
' → logprob: -9.906911849975586

Token 1036: ' (' (ID: 350)
  Prédit: 'pref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pref' → logprob: -0.019805284217000008
    2. ' pref' → logprob: -4.019805431365967
    3. '(pref' → logprob: -7.019805431365967
    4. '           ' → logprob: -8.019804954528809
    5. '       ' → logprob: -9.144804954528809
    6. '
' → logprob: -9.394804954528809
    7. '   ' → logprob: -9.394804954528809
    8. 'binary' → logprob: -10.519804954528809
    9. '-pref' → logprob: -10.894804954528809
    10. 'prefix' → logprob: -10.894804954528809

Token 1037: 'pref' (ID: 62021)
  Prédit: 'pref'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pref' → logprob: -0.01725541241466999
    2. ' pref' → logprob: -4.3922553062438965
    3. '           ' → logprob: -5.7672553062438965
    4. '(pref' → logprob: -7.7672553062438965
    5. 'l' → logprob: -7.8922553062438965
    6. 'r' → logprob: -8.267255783081055
    7. '       ' → logprob: -9.017255783081055
    8. '
' → logprob: -9.267255783081055
    9. '   ' → logprob: -9.517255783081055
    10. ')' → logprob: -9.642255783081055

Token 1038: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.18882878124713898
    2. '[l' → logprob: -1.9388288259506226
    3. 'r' → logprob: -4.063828945159912
    4. 'l' → logprob: -4.938828945159912
    5. '[' → logprob: -7.188828945159912
    6. '[j' → logprob: -7.188828945159912
    7. ')' → logprob: -7.313828945159912
    8. '```' → logprob: -7.313828945159912
    9. '[i' → logprob: -8.063828468322754
    10. ' [' → logprob: -8.438828468322754

Token 1039: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006947310641407967
    2. ' +' → logprob: -5.0069475173950195
    3. ']' → logprob: -9.25694751739502
    4. '-' → logprob: -10.25694751739502
    5. '```' → logprob: -10.25694751739502
    6. ' -' → logprob: -10.88194751739502
    7. '[' → logprob: -11.38194751739502
    8. ']>=' → logprob: -11.88194751739502
    9. '           ' → logprob: -12.75694751739502
    10. ']+' → logprob: -12.75694751739502

Token 1040: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4259644558478612e-05
    2. ' ' → logprob: -11.625014305114746
    3. '```' → logprob: -12.625014305114746
    4. '   ' → logprob: -14.500014305114746
    5. '
' → logprob: -14.625014305114746
    6. ')' → logprob: -15.375014305114746
    7. '``' → logprob: -15.625014305114746
    8. '2' → logprob: -15.687514305114746
    9. '0' → logprob: -16.43751335144043
    10. '`' → logprob: -16.62501335144043

Token 1041: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8907774090766907
    2. ']' → logprob: -1.140777349472046
    3. ' -' → logprob: -1.515777349472046
    4. ']-' → logprob: -3.140777349472046
    5. '```' → logprob: -6.015777587890625
    6. ']>=' → logprob: -6.765777587890625
    7. '-p' → logprob: -6.890777587890625
    8. '[' → logprob: -7.265777587890625
    9. ')' → logprob: -7.765777587890625
    10. '           ' → logprob: -8.640777587890625

Token 1042: 'pref' (ID: 62021)
  Prédit: 'pref'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pref' → logprob: -8.625866030342877e-05
    2. ' pref' → logprob: -10.000085830688477
    3. '(pref' → logprob: -10.125085830688477
    4. '           ' → logprob: -14.750085830688477
    5. '
' → logprob: -16.125085830688477
    6. 'prefix' → logprob: -16.375085830688477
    7. '   ' → logprob: -16.625085830688477
    8. '-pref' → logprob: -17.250085830688477
    9. 'pred' → logprob: -17.375085830688477
    10. 'prev' → logprob: -17.375085830688477

Token 1043: '[l' (ID: 38286)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.42955270409584045
    2. '[l' → logprob: -1.054552674293518
    3. '```' → logprob: -8.429553031921387
    4. '[
' → logprob: -8.929553031921387
    5. '   ' → logprob: -9.554553031921387
    6. ' l' → logprob: -9.554553031921387
    7. '{' → logprob: -9.679553031921387
    8. '
' → logprob: -9.679553031921387
    9. '[' → logprob: -10.054553031921387
    10. '           ' → logprob: -10.679553031921387

Token 1044: '])' (ID: 4636)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5598145127296448
    2. ')' → logprob: -1.434814453125
    3. '])' → logprob: -2.559814453125
    4. '+' → logprob: -3.059814453125
    5. ']<=' → logprob: -3.309814453125
    6. ']>=' → logprob: -4.434814453125
    7. ')<=' → logprob: -4.559814453125
    8. '[' → logprob: -5.559814453125
    9. ']<' → logprob: -6.934814453125
    10. ')>=' → logprob: -7.184814453125

Token 1045: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.4538858234882355
    2. ' >=' → logprob: -1.078885793685913
    3. '```' → logprob: -4.078886032104492
    4. ')>=' → logprob: -6.078886032104492
    5. ']>=' → logprob: -6.328886032104492
    6. '           ' → logprob: -6.578886032104492
    7. '≥' → logprob: -6.953886032104492
    8. ')' → logprob: -8.078886032104492
    9. '>' → logprob: -8.703886032104492
    10. '       ' → logprob: -8.828886032104492

Token 1046: 'K' (ID: 42)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012681044638156891
    2. 'K' → logprob: -4.387681007385254
    3. 'k' → logprob: -9.512681007385254
    4. ' self' → logprob: -9.887681007385254
    5. '(self' → logprob: -10.137681007385254
    6. '[self' → logprob: -12.887681007385254
    7. '```' → logprob: -14.262681007385254
    8. '<|end|>' → logprob: -14.387681007385254
    9. '<|end|>' → logprob: -14.637681007385254
    10. '	self' → logprob: -14.762681007385254

Token 1047: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25259482860565186
    2. '
' → logprob: -1.7525948286056519
    3. '<|end|>' → logprob: -3.8775949478149414
    4. '```' → logprob: -4.877594947814941
    5. ' for' → logprob: -5.502594947814941
    6. '<|end|>' → logprob: -5.502594947814941
    7. '           ' → logprob: -5.877594947814941
    8. ',' → logprob: -6.002594947814941
    9. ':
' → logprob: -6.002594947814941
    10. ':' → logprob: -6.877594947814941

Token 1048: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4040595591068268
    2. '       ' → logprob: -1.4040595293045044
    3. '```' → logprob: -2.779059648513794
    4. ' for' → logprob: -4.029059410095215
    5. '``' → logprob: -6.029059410095215
    6. '
' → logprob: -6.654059410095215
    7. '               ' → logprob: -7.404059410095215
    8. '   ' → logprob: -8.154059410095215
    9. '`' → logprob: -8.154059410095215
    10. ',' → logprob: -8.279059410095215

Token 1049: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1865137219429016
    2. '           ' → logprob: -2.186513662338257
    3. ' for' → logprob: -3.436513662338257
    4. '
' → logprob: -4.686513900756836
    5. '```' → logprob: -4.811513900756836
    6. ' 
' → logprob: -6.686513900756836
    7. ' ' → logprob: -6.811513900756836
    8. '   ' → logprob: -7.061513900756836
    9. '        ' → logprob: -7.186513900756836
    10. '  
' → logprob: -7.311513900756836

Token 1050: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07110901176929474
    2. ' r' → logprob: -2.6961090564727783
    3. 'l' → logprob: -7.196108818054199
    4. ' l' → logprob: -8.6961088180542
    5. 'right' → logprob: -9.4461088180542
    6. ' right' → logprob: -9.9461088180542
    7. '   ' → logprob: -10.0711088180542
    8. 'i' → logprob: -10.4461088180542
    9. '_r' → logprob: -11.4461088180542
    10. ' i' → logprob: -11.8211088180542

Token 1051: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036645643413066864
    2. 'in' → logprob: -5.628664493560791
    3. '       ' → logprob: -10.62866497039795
    4. '=' → logprob: -11.62866497039795
    5. '        ' → logprob: -12.00366497039795
    6. '0' → logprob: -12.00366497039795
    7. ' =' → logprob: -12.37866497039795
    8. '   ' → logprob: -12.50366497039795
    9. ' ' → logprob: -13.00366497039795
    10. '	in' → logprob: -13.00366497039795

Token 1052: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014195243827998638
    2. ' range' → logprob: -4.264195442199707
    3. '0' → logprob: -10.389195442199707
    4. '   ' → logprob: -14.514195442199707
    5. '(range' → logprob: -14.889195442199707
    6. '       ' → logprob: -16.26419448852539
    7. '	range' → logprob: -16.88919448852539
    8. '
' → logprob: -17.38919448852539
    9. ' ' → logprob: -20.13919448852539
    10. ')' → logprob: -20.13919448852539

Token 1053: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.022432873025536537
    2. '0' → logprob: -4.522432804107666
    3. '(self' → logprob: -4.522432804107666
    4. ' self' → logprob: -8.772433280944824
    5. '       ' → logprob: -8.772433280944824
    6. 'K' → logprob: -9.272433280944824
    7. 'r' → logprob: -11.022433280944824
    8. '(' → logprob: -11.647433280944824
    9. '1' → logprob: -12.022433280944824
    10. '           ' → logprob: -12.272433280944824

Token 1054: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.0036234736908227205
    2. '+' → logprob: -6.1286234855651855
    3. '       ' → logprob: -7.7536234855651855
    4. 'N' → logprob: -7.8786234855651855
    5. '   ' → logprob: -8.503623008728027
    6. 'self' → logprob: -8.878623008728027
    7. ' +' → logprob: -9.378623008728027
    8. 'def' → logprob: -10.128623008728027
    9. '           ' → logprob: -10.753623008728027
    10. '):
' → logprob: -10.878623008728027

Token 1055: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.29333171248435974
    2. '+' → logprob: -1.7933317422866821
    3. '       ' → logprob: -2.7933316230773926
    4. ' +' → logprob: -4.168331623077393
    5. '           ' → logprob: -5.418331623077393
    6. ':
' → logprob: -6.168331623077393
    7. '):' → logprob: -6.418331623077393
    8. ',' → logprob: -6.793331623077393
    9. ':' → logprob: -7.793331623077393
    10. '   ' → logprob: -7.918331623077393

Token 1056: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007751436438411474
    2. '   ' → logprob: -5.25775146484375
    3. '```' → logprob: -6.13275146484375
    4. ' ' → logprob: -9.00775146484375
    5. '       ' → logprob: -9.38275146484375
    6. '               ' → logprob: -10.00775146484375
    7. ' for' → logprob: -10.63275146484375
    8. ',' → logprob: -11.13275146484375
    9. '	       ' → logprob: -11.50775146484375
    10. '    ' → logprob: -11.88275146484375

Token 1057: ' min' (ID: 1349)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0840295553207397
    2. ' left' → logprob: -1.2090295553207397
    3. 'left' → logprob: -1.5840295553207397
    4. '```' → logprob: -2.3340296745300293
    5. '   ' → logprob: -3.8340296745300293
    6. 'l' → logprob: -4.084029674530029
    7. ' l' → logprob: -4.834029674530029
    8. '       ' → logprob: -5.334029674530029
    9. 'import' → logprob: -5.334029674530029
    10. '``' → logprob: -6.459029674530029

Token 1058: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.03989899903535843
    2. '_len' → logprob: -3.6648991107940674
    3. 'l' → logprob: -4.914898872375488
    4. '_length' → logprob: -5.164898872375488
    5. 'L' → logprob: -8.914898872375488
    6. '_left' → logprob: -8.914898872375488
    7. 'len' → logprob: -9.414898872375488
    8. 'length' → logprob: -10.289898872375488
    9. '_idx' → logprob: -11.289898872375488
    10. '_val' → logprob: -11.789898872375488

Token 1059: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2523707151412964
    2. ' =' → logprob: -1.5023707151412964
    3. '=int' → logprob: -7.877370834350586
    4. '=len' → logprob: -10.877370834350586
    5. '=max' → logprob: -11.877370834350586
    6. '=
' → logprob: -11.877370834350586
    7. '```' → logprob: -12.252370834350586
    8. '=r' → logprob: -12.377370834350586
    9. '           ' → logprob: -13.377370834350586
    10. '=k' → logprob: -13.502370834350586

Token 1060: ' r' (ID: 428)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.09314187616109848
    2. '0' → logprob: -2.968141794204712
    3. 'r' → logprob: -3.718141794204712
    4. ' max' → logprob: -4.343142032623291
    5. '(max' → logprob: -9.343141555786133
    6. ' r' → logprob: -9.343141555786133
    7. ' ' → logprob: -9.718141555786133
    8. '   ' → logprob: -11.968141555786133
    9. '(r' → logprob: -12.343141555786133
    10. '	max' → logprob: -12.593141555786133

Token 1061: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6640517115592957
    2. '-' → logprob: -0.7890517115592957
    3. '+' → logprob: -3.5390517711639404
    4. ' +' → logprob: -6.414051532745361
    5. '           ' → logprob: -8.78905200958252
    6. '-K' → logprob: -9.53905200958252
    7. '          ' → logprob: -11.41405200958252
    8. '       ' → logprob: -11.66405200958252
    9. '   ' → logprob: -12.03905200958252
    10. '         ' → logprob: -12.03905200958252

Token 1062: ' self' (ID: 1051)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.8417463302612305
    2. 'self' → logprob: -0.9667463302612305
    3. 'r' → logprob: -2.5917463302612305
    4. '(self' → logprob: -2.5917463302612305
    5. 'K' → logprob: -3.3417463302612305
    6. '(K' → logprob: -6.7167463302612305
    7. '(' → logprob: -7.4667463302612305
    8. ' (' → logprob: -7.5917463302612305
    9. ' self' → logprob: -7.7167463302612305
    10. '0' → logprob: -8.46674633026123

Token 1063: '.K' (ID: 14475)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.11053682863712311
    2. 'self' → logprob: -2.735536813735962
    3. '(self' → logprob: -4.110537052154541
    4. '(r' → logprob: -4.610537052154541
    5. '(K' → logprob: -4.985537052154541
    6. 'r' → logprob: -5.735537052154541
    7. '.K' → logprob: -6.860537052154541
    8. '(' → logprob: -7.735537052154541
    9. 'def' → logprob: -8.360536575317383
    10. 'L' → logprob: -8.485536575317383

Token 1064: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02975129522383213
    2. ' +' → logprob: -3.5297513008117676
    3. '```' → logprob: -15.15475082397461
    4. '＋' → logprob: -15.52975082397461
    5. '()+' → logprob: -15.65475082397461
    6. '           ' → logprob: -16.52975082397461
    7. '+
' → logprob: -17.15475082397461
    8. '+r' → logprob: -17.65475082397461
    9. '+++' → logprob: -17.77975082397461
    10. '+k' → logprob: -17.90475082397461

Token 1065: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. '2' → logprob: -11.000019073486328
    3. ' ' → logprob: -13.000019073486328
    4. '   ' → logprob: -17.625019073486328
    5. '```' → logprob: -17.875019073486328
    6. '0' → logprob: -20.000019073486328
    7. '           ' → logprob: -21.000019073486328
    8. '=' → logprob: -21.500019073486328
    9. 'import' → logprob: -21.625019073486328
    10. '  ' → logprob: -21.750019073486328

Token 1066: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '2' → logprob: -16.25
    4. '```' → logprob: -18.5
    5. '   ' → logprob: -18.875
    6. '0' → logprob: -19.125
    7. '+' → logprob: -21.875
    8. '
' → logprob: -21.9375
    9. '  ' → logprob: -22.0625
    10. '-' → logprob: -22.1875

Token 1067: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24253441393375397
    2. ' +' → logprob: -1.9925343990325928
    3. '
' → logprob: -2.8675343990325928
    4. '+' → logprob: -4.742534637451172
    5. ' if' → logprob: -5.367534637451172
    6. '<|end|>' → logprob: -5.867534637451172
    7. '       ' → logprob: -6.992534637451172
    8. ' 
' → logprob: -6.992534637451172
    9. '		' → logprob: -7.242534637451172
    10. '            
' → logprob: -7.742534637451172

Token 1068: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002860073291230947
    2. '```' → logprob: -9.875286102294922
    3. '<|end|>' → logprob: -10.125286102294922
    4. ' if' → logprob: -10.125286102294922
    5. ' while' → logprob: -10.500286102294922
    6. '       ' → logprob: -10.500286102294922
    7. 'while' → logprob: -10.750286102294922
    8. ',' → logprob: -11.750286102294922
    9. ' for' → logprob: -11.875286102294922
    10. '   ' → logprob: -11.875286102294922

Token 1069: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05802497640252113
    2. 'while' → logprob: -3.1830248832702637
    3. ' while' → logprob: -4.433024883270264
    4. ' if' → logprob: -6.933024883270264
    5. 'if' (adapté à ' if') → logprob: -7.308024883270264
    6. '```' → logprob: -7.933024883270264
    7. '       ' → logprob: -8.558025360107422
    8. ' l' → logprob: -8.683025360107422
    9. '
' → logprob: -8.933025360107422
    10. '   ' → logprob: -9.058025360107422

Token 1070: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.059200555086135864
    2. ' min' → logprob: -3.0592005252838135
    3. '0' → logprob: -4.559200763702393
    4. '           ' → logprob: -10.434200286865234
    5. ' ' → logprob: -10.934200286865234
    6. '1' → logprob: -11.809200286865234
    7. '(min' → logprob: -11.934200286865234
    8. 'pref' → logprob: -12.184200286865234
    9. '	min' → logprob: -12.434200286865234
    10. 'binary' → logprob: -12.684200286865234

Token 1071: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.9124066233634949
    2. ' >=' → logprob: -1.0374066829681396
    3. '>=' → logprob: -2.4124066829681396
    4. ' <=' → logprob: -2.7874066829681396
    5. ' <' → logprob: -3.4124066829681396
    6. '<=' → logprob: -4.2874064445495605
    7. '+' → logprob: -4.4124064445495605
    8. ' +' → logprob: -4.4124064445495605
    9. '_r' → logprob: -5.6624064445495605
    10. '>' → logprob: -5.6624064445495605

Token 1072: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.3004330396652222
    2. '>=' → logprob: -1.5504330396652222
    3. ' <' → logprob: -1.6754330396652222
    4. ' >=' → logprob: -2.0504331588745117
    5. '<=' → logprob: -2.1754331588745117
    6. ' <=' → logprob: -3.0504331588745117
    7. '>' → logprob: -4.175433158874512
    8. '+' → logprob: -4.800433158874512
    9. '```' → logprob: -5.425433158874512
    10. ' >' → logprob: -5.925433158874512

Token 1073: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '=' → logprob: -16.250001907348633
    4. '<|end|>' → logprob: -19.125001907348633
    5. '           ' → logprob: -20.250001907348633
    6. '۰' → logprob: -20.375001907348633
    7. '```' → logprob: -20.625001907348633
    8. '>' → logprob: -20.750001907348633
    9. '000' → logprob: -21.250001907348633
    10. ')' → logprob: -21.375001907348633

Token 1074: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '           ' → logprob: -18.625001907348633
    4. '   ' → logprob: -18.750001907348633
    5. '=' → logprob: -18.875001907348633
    6. '       ' → logprob: -19.875001907348633
    7. '۰' → logprob: -20.500001907348633
    8. '>' → logprob: -20.875001907348633
    9. '```' → logprob: -21.125001907348633
    10. '000' → logprob: -21.500001907348633

Token 1075: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4753125011920929
    2. '               ' → logprob: -1.4753124713897705
    3. ':' → logprob: -1.9753124713897705
    4. '           ' → logprob: -5.10031270980835
    5. '=' → logprob: -6.97531270980835
    6. '<|end|>' → logprob: -7.22531270980835
    7. '):
' → logprob: -7.47531270980835
    8. '+' → logprob: -8.100312232971191
    9. '<|end|>' → logprob: -8.100312232971191
    10. ' and' → logprob: -8.350312232971191

Token 1076: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007229181355796754
    2. 'continue' → logprob: -8.000722885131836
    3. '           ' → logprob: -8.625722885131836
    4. ' continue' → logprob: -9.250722885131836
    5. '```' → logprob: -9.500722885131836
    6. 'min' → logprob: -11.500722885131836
    7. '                   ' → logprob: -11.625722885131836
    8. ' min' → logprob: -12.125722885131836
    9. '   ' → logprob: -12.500722885131836
    10. '                       ' → logprob: -13.750722885131836

Token 1077: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.4953502118587494
    2. '               ' → logprob: -1.1203502416610718
    3. ' continue' → logprob: -2.7453501224517822
    4. '   ' → logprob: -9.370349884033203
    5. '	continue' → logprob: -9.495349884033203
    6. '           ' → logprob: -10.245349884033203
    7. ' ' → logprob: -10.745349884033203
    8. '```' → logprob: -12.245349884033203
    9. 'continu' → logprob: -12.495349884033203
    10. '_continue' → logprob: -12.495349884033203

Token 1078: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012411827920004725
    2. '
' → logprob: -6.876241207122803
    3. '               ' → logprob: -9.626240730285645
    4. '```' → logprob: -9.876240730285645
    5. '            
' → logprob: -10.501240730285645
    6. '<|end|>' → logprob: -11.501240730285645
    7. ' continue' → logprob: -11.626240730285645
    8. 'continue' → logprob: -11.626240730285645
    9. '       ' → logprob: -12.126240730285645
    10. ',' → logprob: -12.376240730285645

Token 1079: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005251537077128887
    2. '
' → logprob: -7.750524997711182
    3. '```' → logprob: -10.62552547454834
    4. '            
' → logprob: -10.75052547454834
    5. 'for' → logprob: -11.00052547454834
    6. ' for' → logprob: -11.50052547454834
    7. '<|end|>' → logprob: -12.50052547454834
    8. '               ' → logprob: -12.75052547454834
    9. 'import' → logprob: -12.87552547454834
    10. '       ' → logprob: -13.25052547454834

Token 1080: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007316163973882794
    2. '
' → logprob: -7.500731468200684
    3. '```' → logprob: -10.000731468200684
    4. '   ' → logprob: -10.625731468200684
    5. 'for' → logprob: -10.750731468200684
    6. '       ' → logprob: -10.750731468200684
    7. 'left' → logprob: -11.250731468200684
    8. 'l' → logprob: -11.500731468200684
    9. 'import' → logprob: -11.875731468200684
    10. ' for' → logprob: -12.125731468200684

Token 1081: ' We' (ID: 1416)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8384552001953125
    2. '           ' → logprob: -0.8384552001953125
    3. 'left' → logprob: -2.7134552001953125
    4. 'import' → logprob: -4.0884552001953125
    5. 'for' → logprob: -4.4634552001953125
    6. 'while' → logprob: -4.5884552001953125
    7. 'from' → logprob: -4.7134552001953125
    8. 'low' → logprob: -4.7134552001953125
    9. ' l' → logprob: -5.7134552001953125
    10. '       ' → logprob: -6.0884552001953125

Token 1082: ' want' (ID: 1682)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14184564352035522
    2. ' for' → logprob: -2.641845703125
    3. 'for' → logprob: -3.016845703125
    4. '
' → logprob: -5.891845703125
    5. '       ' → logprob: -6.891845703125
    6. ' ' → logprob: -7.266845703125
    7. ' continue' → logprob: -7.266845703125
    8. ' can' → logprob: -7.266845703125
    9. 'import' → logprob: -7.391845703125
    10. '   ' → logprob: -7.516845703125

Token 1083: ' l' (ID: 305)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21819841861724854
    2. 'l' → logprob: -1.9681984186172485
    3. ' l' → logprob: -3.718198299407959
    4. 'for' → logprob: -4.343198299407959
    5. 'left' → logprob: -4.718198299407959
    6. ' for' → logprob: -5.593198299407959
    7. 'to' → logprob: -6.718198299407959
    8. '```' → logprob: -6.968198299407959
    9. 'while' → logprob: -7.218198299407959
    10. ' to' → logprob: -7.218198299407959

Token 1084: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6673449873924255
    2. '=' → logprob: -0.7923449873924255
    3. ' in' → logprob: -4.41734504699707
    4. '           ' → logprob: -4.41734504699707
    5. 'from' → logprob: -5.29234504699707
    6. ' from' → logprob: -6.16734504699707
    7. ' for' → logprob: -7.54234504699707
    8. 'for' → logprob: -7.66734504699707
    9. ':' → logprob: -7.79234504699707
    10. 'import' → logprob: -7.91734504699707

Token 1085: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014918346889317036
    2. ' range' → logprob: -4.389918327331543
    3. '0' → logprob: -6.264918327331543
    4. '[' → logprob: -7.764918327331543
    5. '   ' → logprob: -10.764918327331543
    6. 'list' → logprob: -11.389918327331543
    7. '
' → logprob: -11.389918327331543
    8. '(range' → logprob: -11.639918327331543
    9. '[r' → logprob: -12.264918327331543
    10. '	range' → logprob: -12.764918327331543

Token 1086: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.386147626675665e-05
    2. 'min' → logprob: -10.000073432922363
    3. 'max' → logprob: -10.750073432922363
    4. 'r' → logprob: -12.875073432922363
    5. ' ' → logprob: -13.750073432922363
    6. '(min' → logprob: -14.000073432922363
    7. '   ' → logprob: -15.000073432922363
    8. '
' → logprob: -15.125073432922363
    9. '(' → logprob: -15.125073432922363
    10. '(max' → logprob: -15.375073432922363

Token 1087: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16391420364379883
    2. ',min' → logprob: -1.9139142036437988
    3. ':min' → logprob: -6.413914203643799
    4. '...' → logprob: -7.288914203643799
    5. ' ,' → logprob: -7.413914203643799
    6. 'min' → logprob: -8.16391372680664
    7. ',
' → logprob: -9.03891372680664
    8. '..' → logprob: -9.03891372680664
    9. '(min' → logprob: -9.66391372680664
    10. ',r' → logprob: -10.28891372680664

Token 1088: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0328514464199543
    2. 'r' → logprob: -3.532851457595825
    3. ' min' → logprob: -5.907851219177246
    4. '           ' → logprob: -8.157851219177246
    5. ' r' → logprob: -10.782851219177246
    6. '   ' → logprob: -10.782851219177246
    7. '               ' → logprob: -11.657851219177246
    8. '
' → logprob: -12.157851219177246
    9. '	min' → logprob: -12.407851219177246
    10. '                   ' → logprob: -12.532851219177246

Token 1089: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -5.2762428822461516e-05
    2. '_' → logprob: -11.375052452087402
    3. '_r' → logprob: -11.375052452087402
    4. 'l' → logprob: -11.750052452087402
    5. '(min' → logprob: -12.250052452087402
    6. ' _' → logprob: -12.625052452087402
    7. '_min' → logprob: -13.000052452087402
    8. '(_' → logprob: -13.125052452087402
    9. '\' → logprob: -13.250052452087402
    10. '```' → logprob: -13.250052452087402

Token 1090: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3129133880138397
    2. ']:
' → logprob: -2.437913417816162
    3. '+' → logprob: -2.687913417816162
    4. '           ' → logprob: -2.937913417816162
    5. ' +' → logprob: -4.187913417816162
    6. '-' → logprob: -4.562913417816162
    7. ',' → logprob: -4.687913417816162
    8. ']+' → logprob: -4.812913417816162
    9. '],' → logprob: -5.687913417816162
    10. '               ' → logprob: -5.812913417816162

Token 1091: ' such' (ID: 2238)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037940195761621
    2. ' for' → logprob: -6.378794193267822
    3. ',' → logprob: -7.253794193267822
    4. '<|end|>' → logprob: -8.253793716430664
    5. '```' → logprob: -8.378793716430664
    6. 'for' → logprob: -9.253793716430664
    7. '
' → logprob: -9.378793716430664
    8. ':' → logprob: -9.378793716430664
    9. '            
' → logprob: -9.503793716430664
    10. '            ' → logprob: -9.878793716430664

Token 1092: ' that' (ID: 484)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7967933416366577
    2. 'that' → logprob: -1.1717933416366577
    3. 'to' → logprob: -2.9217934608459473
    4. '=' → logprob: -3.1717934608459473
    5. ' that' → logprob: -3.4217934608459473
    6. ':' → logprob: -3.5467934608459473
    7. '               ' → logprob: -3.6717934608459473
    8. 'for' → logprob: -4.796793460845947
    9. ' =' → logprob: -5.171793460845947
    10. ' to' → logprob: -5.171793460845947

Token 1093: ' pref' (ID: 27015)
  Prédit: 'pref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pref' → logprob: -0.4210011661052704
    2. ' pref' → logprob: -1.1710011959075928
    3. '           ' → logprob: -3.7960011959075928
    4. '(pref' → logprob: -4.546000957489014
    5. 'prefix' → logprob: -9.296001434326172
    6. '   ' → logprob: -9.421001434326172
    7. ' (' → logprob: -9.796001434326172
    8. '-pref' → logprob: -10.296001434326172
    9. '```' → logprob: -10.421001434326172
    10. ' prefix' → logprob: -11.046001434326172

Token 1094: '[r' (ID: 33265)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.06114818900823593
    2. '[r' → logprob: -2.936148166656494
    3. 'l' → logprob: -6.061148166656494
    4. '[' → logprob: -6.186148166656494
    5. ']' → logprob: -7.686148166656494
    6. '```' → logprob: -8.436148643493652
    7. '           ' → logprob: -8.561148643493652
    8. '>=' → logprob: -8.686148643493652
    9. 'r' → logprob: -8.811148643493652
    10. '[min' → logprob: -8.936148643493652

Token 1095: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008628651266917586
    2. ' +' → logprob: -7.125863075256348
    3. '[' → logprob: -10.375863075256348
    4. '```' → logprob: -11.250863075256348
    5. '<|end|>' → logprob: -11.750863075256348
    6. '           ' → logprob: -13.625863075256348
    7. ']' → logprob: -13.750863075256348
    8. '-' → logprob: -14.000863075256348
    9. '{' → logprob: -14.375863075256348
    10. '``' → logprob: -14.875863075256348

Token 1096: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.250006675720215
    3. '```' → logprob: -14.375006675720215
    4. '2' → logprob: -14.625006675720215
    5. '>' → logprob: -15.625006675720215
    6. '0' → logprob: -16.0000057220459
    7. '``' → logprob: -16.1250057220459
    8. '   ' → logprob: -16.2500057220459
    9. '
' → logprob: -16.5000057220459
    10. '`' → logprob: -16.7500057220459

Token 1097: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14568805694580078
    2. '-' → logprob: -3.270688056945801
    3. ']-' → logprob: -3.645688056945801
    4. '[min' → logprob: -4.020688056945801
    5. '[l' → logprob: -4.270688056945801
    6. '[' → logprob: -4.645688056945801
    7. ']>=' → logprob: -4.770688056945801
    8. ' -' → logprob: -4.770688056945801
    9. '[r' → logprob: -4.895688056945801
    10. '```' → logprob: -6.645688056945801

Token 1098: 'pref' (ID: 62021)
  Prédit: 'pref'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pref' → logprob: -0.00016468366084154695
    2. ' pref' → logprob: -8.875164985656738
    3. '(pref' → logprob: -10.750164985656738
    4. 'prefix' → logprob: -14.250164985656738
    5. '-pref' → logprob: -14.625164985656738
    6. '   ' → logprob: -14.875164985656738
    7. 'prev' → logprob: -15.250164985656738
    8. '[p' → logprob: -15.500164985656738
    9. '           ' → logprob: -15.500164985656738
    10. '```' → logprob: -15.500164985656738

Token 1099: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.000505730917211622
    2. 'l' → logprob: -7.6255059242248535
    3. '```' → logprob: -11.500505447387695
    4. '[
' → logprob: -12.625505447387695
    5. '[' → logprob: -13.250505447387695
    6. '``' → logprob: -14.125505447387695
    7. '>' → logprob: -14.500505447387695
    8. ']' → logprob: -14.750505447387695
    9. ' l' → logprob: -15.250505447387695
    10. '>=' → logprob: -16.125505447387695

Token 1100: ']>=' (ID: 185954)
  Prédit: ']>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>=' → logprob: -0.5191733837127686
    2. ']' → logprob: -1.0191733837127686
    3. '>=' → logprob: -3.6441733837127686
    4. ' >=' → logprob: -4.144173622131348
    5. ' ]' → logprob: -6.644173622131348
    6. ')>=' → logprob: -8.144173622131348
    7. '           ' → logprob: -8.519173622131348
    8. '']' → logprob: -9.144173622131348
    9. '```' → logprob: -10.144173622131348
    10. '[' → logprob: -10.269173622131348

Token 1101: 'K' (ID: 42)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011181153357028961
    2. 'K' → logprob: -4.511181354522705
    3. ' self' → logprob: -9.386180877685547
    4. '(self' → logprob: -11.011180877685547
    5. 'k' → logprob: -11.511180877685547
    6. '1' → logprob: -11.761180877685547
    7. 'r' → logprob: -11.886180877685547
    8. '0' → logprob: -13.011180877685547
    9. '[self' → logprob: -13.261180877685547
    10. '
' → logprob: -13.511180877685547

Token 1102: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004808533936738968
    2. '
' → logprob: -5.75480842590332
    3. ',' → logprob: -7.50480842590332
    4. ' for' → logprob: -7.75480842590332
    5. 'for' → logprob: -8.50480842590332
    6. '```' → logprob: -8.50480842590332
    7. '<|end|>' → logprob: -9.75480842590332
    8. '<|end|>' → logprob: -10.50480842590332
    9. '            
' → logprob: -10.75480842590332
    10. '               ' → logprob: -10.75480842590332

Token 1103: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011162848677486181
    2. '```' → logprob: -7.6261162757873535
    3. ' for' → logprob: -8.376116752624512
    4. '               ' → logprob: -9.501116752624512
    5. ',' → logprob: -9.876116752624512
    6. ' ' → logprob: -10.251116752624512
    7. '            
' → logprob: -10.501116752624512
    8. '[' → logprob: -10.626116752624512
    9. '       ' → logprob: -10.876116752624512
    10. 'for' → logprob: -11.001116752624512

Token 1104: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005288900341838598
    2. '```' → logprob: -5.880289077758789
    3. ' for' → logprob: -6.630289077758789
    4. '
' → logprob: -7.880289077758789
    5. 'for' → logprob: -8.630289077758789
    6. ' while' → logprob: -8.630289077758789
    7. ' from' → logprob: -9.380289077758789
    8. ' ' → logprob: -9.630289077758789
    9. 'from' → logprob: -10.005289077758789
    10. 'while' → logprob: -10.130289077758789

Token 1105: ' =>' (ID: 871)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033982448279857635
    2. ' l' → logprob: -5.158982276916504
    3. 'import' → logprob: -5.283982276916504
    4. 'while' → logprob: -5.408982276916504
    5. ' while' → logprob: -5.533982276916504
    6. ' for' → logprob: -6.033982276916504
    7. 'from' → logprob: -6.283982276916504
    8. 'for' → logprob: -6.408982276916504
    9. 'l' → logprob: -6.533982276916504
    10. '
' → logprob: -6.908982276916504

Token 1106: ' pref' (ID: 27015)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.5588170289993286
    2. 'l' → logprob: -1.6838170289993286
    3. '           ' → logprob: -2.058816909790039
    4. 'left' → logprob: -2.183816909790039
    5. 'from' → logprob: -2.558816909790039
    6. 'low' → logprob: -2.683816909790039
    7. ' l' → logprob: -2.933816909790039
    8. 'pref' → logprob: -3.433816909790039
    9. 'target' → logprob: -3.808816909790039
    10. 'lo' → logprob: -4.308816909790039

Token 1107: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.0004234051739331335
    2. 'l' → logprob: -8.250423431396484
    3. '[r' → logprob: -9.625423431396484
    4. '           ' → logprob: -9.750423431396484
    5. '[' → logprob: -10.625423431396484
    6. '_l' → logprob: -12.625423431396484
    7. '	l' → logprob: -13.375423431396484
    8. ' l' → logprob: -13.500423431396484
    9. ' [' → logprob: -13.500423431396484
    10. '[
' → logprob: -13.875423431396484

Token 1108: ']' (ID: 60)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.6182894706726074
    2. ']' → logprob: -1.6182894706726074
    3. '<=' → logprob: -1.7432894706726074
    4. ']<=' → logprob: -3.6182894706726074
    5. ' <=' → logprob: -3.7432894706726074
    6. ']>=' → logprob: -4.243289470672607
    7. '>=' → logprob: -5.118289470672607
    8. '```' → logprob: -5.118289470672607
    9. '[l' → logprob: -5.618289470672607
    10. '[' → logprob: -5.868289470672607

Token 1109: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5283058881759644
    2. ' <=' → logprob: -0.9033058881759644
    3. '>=' → logprob: -6.278306007385254
    4. ' >=' → logprob: -6.403306007385254
    5. '           ' → logprob: -7.653306007385254
    6. '```' → logprob: -7.778306007385254
    7. '[r' → logprob: -8.653306007385254
    8. ']<=' → logprob: -9.028306007385254
    9. '[' → logprob: -9.153306007385254
    10. ')<=' → logprob: -9.278306007385254

Token 1110: ' pref' (ID: 27015)
  Prédit: 'pref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pref' → logprob: -0.008771627210080624
    2. ' pref' → logprob: -4.7587714195251465
    3. '(pref' → logprob: -9.008771896362305
    4. 'prefix' → logprob: -10.883771896362305
    5. '   ' → logprob: -12.508771896362305
    6. 'pred' → logprob: -12.633771896362305
    7. 'pres' → logprob: -12.758771896362305
    8. '           ' → logprob: -13.633771896362305
    9. 'prec' → logprob: -14.133771896362305
    10. '-pref' → logprob: -14.258771896362305

Token 1111: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0017270608805119991
    2. 'r' → logprob: -6.376727104187012
    3. '[' → logprob: -12.251727104187012
    4. '[l' → logprob: -12.376727104187012
    5. '   ' → logprob: -12.626727104187012
    6. '```' → logprob: -12.626727104187012
    7. '           ' → logprob: -13.126727104187012
    8. ' r' → logprob: -13.876727104187012
    9. '`' → logprob: -13.876727104187012
    10. '(r' → logprob: -14.001727104187012

Token 1112: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001105762057704851
    2. ' +' → logprob: -9.375110626220703
    3. ']' → logprob: -11.750110626220703
    4. '[' → logprob: -12.250110626220703
    5. ']+' → logprob: -12.625110626220703
    6. '+r' → logprob: -12.750110626220703
    7. '```' → logprob: -13.250110626220703
    8. 'r' → logprob: -13.250110626220703
    9. '[r' → logprob: -13.625110626220703
    10. '           ' → logprob: -14.000110626220703

Token 1113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '
' → logprob: -14.875000953674316
    3. '+' → logprob: -15.750000953674316
    4. '```' → logprob: -16.125001907348633
    5. ' ' → logprob: -16.437501907348633
    6. '0' → logprob: -16.875001907348633
    7. '`' → logprob: -17.312501907348633
    8. '``' → logprob: -17.500001907348633
    9. '   ' → logprob: -17.687501907348633
    10. '１' → logprob: -18.062501907348633

Token 1114: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7775086760520935
    2. ']' → logprob: -1.0275087356567383
    3. '-' → logprob: -2.0275087356567383
    4. ']-' → logprob: -3.7775087356567383
    5. ']+' → logprob: -4.277508735656738
    6. '           ' → logprob: -5.277508735656738
    7. ' +' → logprob: -5.527508735656738
    8. '```' → logprob: -6.402508735656738
    9. '+' → logprob: -6.652508735656738
    10. ')' → logprob: -8.152508735656738

Token 1115: 'K' (ID: 42)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31332242488861084
    2. 'K' → logprob: -1.3133224248886108
    3. ' self' → logprob: -10.563322067260742
    4. 'k' → logprob: -10.563322067260742
    5. '<|end|>' → logprob: -12.813322067260742
    6. '(self' → logprob: -13.313322067260742
    7. '```' → logprob: -13.688322067260742
    8. ' K' → logprob: -14.313322067260742
    9. '[self' → logprob: -14.688322067260742
    10. '1' → logprob: -14.688322067260742

Token 1116: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027396122459322214
    2. '
' → logprob: -6.252739429473877
    3. '```' → logprob: -7.877739429473877
    4. 'import' → logprob: -9.252739906311035
    5. 'from' → logprob: -9.252739906311035
    6. ',' → logprob: -9.752739906311035
    7. '            
' → logprob: -10.002739906311035
    8. '       ' → logprob: -10.252739906311035
    9. '   ' → logprob: -10.752739906311035
    10. 'for' → logprob: -10.877739906311035

Token 1117: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026211936492472887
    2. '```' → logprob: -6.252621173858643
    3. '
' → logprob: -9.0026216506958
    4. '            
' → logprob: -9.1276216506958
    5. '<|end|>' → logprob: -9.3776216506958
    6. ',' → logprob: -9.5026216506958
    7. ' for' → logprob: -9.8776216506958
    8. ' 
' → logprob: -10.1276216506958
    9. ' ' → logprob: -10.1276216506958
    10. '       ' → logprob: -10.7526216506958

Token 1118: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07789559662342072
    2. ' l' → logprob: -3.4528956413269043
    3. '```' → logprob: -4.452895641326904
    4. 'import' → logprob: -4.702895641326904
    5. 'from' → logprob: -5.077895641326904
    6. 'l' → logprob: -5.202895641326904
    7. ' left' → logprob: -5.952895641326904
    8. 'left' → logprob: -5.952895641326904
    9. ' from' → logprob: -6.077895641326904
    10. 'low' → logprob: -7.577895641326904

Token 1119: ' Count' (ID: 6789)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1440662145614624
    2. 'import' → logprob: -2.519066333770752
    3. '```' → logprob: -3.269066333770752
    4. 'from' → logprob: -4.894066333770752
    5. '``' → logprob: -6.394066333770752
    6. '
' → logprob: -6.519066333770752
    7. ' l' → logprob: -6.894066333770752
    8. ' import' → logprob: -7.019066333770752
    9. ' from' → logprob: -7.144066333770752
    10. 'l' → logprob: -7.644066333770752

Token 1120: ' number' (ID: 2086)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4565296769142151
    2. 'import' → logprob: -1.5815296173095703
    3. 'from' → logprob: -2.0815296173095703
    4. '```' → logprob: -4.45652961730957
    5. ' from' → logprob: -4.70652961730957
    6. ' =' → logprob: -5.95652961730957
    7. '0' → logprob: -6.20652961730957
    8. '       ' → logprob: -6.33152961730957
    9. ' import' → logprob: -6.83152961730957
    10. ' l' → logprob: -7.20652961730957

Token 1121: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.2271921634674072
    2. '=' → logprob: -1.4771921634674072
    3. '           ' → logprob: -1.7271921634674072
    4. ' =' → logprob: -2.1021921634674072
    5. 'import' → logprob: -2.7271921634674072
    6. '_of' → logprob: -3.3521921634674072
    7. 's' → logprob: -4.227191925048828
    8. '[' → logprob: -4.477191925048828
    9. ' of' → logprob: -4.477191925048828
    10. '       ' → logprob: -4.477191925048828

Token 1122: ' prefix' (ID: 18633)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.35519397258758545
    2. 'pref' → logprob: -2.105194091796875
    3. '0' → logprob: -2.855194091796875
    4. 'l' → logprob: -2.980194091796875
    5. 'prefix' → logprob: -3.730194091796875
    6. '```' → logprob: -4.980194091796875
    7. 'indices' → logprob: -5.355194091796875
    8. 'from' → logprob: -5.605194091796875
    9. '#' → logprob: -5.605194091796875
    10. 'prev' → logprob: -5.730194091796875

Token 1123: ' sums' (ID: 73121)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3288052082061768
    2. '_sum' → logprob: -1.4538052082061768
    3. 'sum' → logprob: -1.7038052082061768
    4. '_s' → logprob: -1.7038052082061768
    5. 's' → logprob: -2.3288052082061768
    6. '```' → logprob: -4.828804969787598
    7. '       ' → logprob: -5.078804969787598
    8. 'indices' → logprob: -5.703804969787598
    9. '[' → logprob: -5.828804969787598
    10. '_' → logprob: -6.328804969787598

Token 1124: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6030007600784302
    2. 'with' → logprob: -1.7280007600784302
    3. '=' → logprob: -2.9780006408691406
    4. ' =' → logprob: -3.1030006408691406
    5. '<=' → logprob: -3.2280006408691406
    6. '       ' → logprob: -3.8530006408691406
    7. 'that' → logprob: -4.103000640869141
    8. 'less' → logprob: -4.228000640869141
    9. '```' → logprob: -4.353000640869141
    10. 'le' → logprob: -4.478000640869141

Token 1125: ' pref' (ID: 27015)
  Prédit: 'pref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pref' → logprob: -0.03401678800582886
    2. ' pref' → logprob: -4.1590166091918945
    3. 'prefix' → logprob: -5.1590166091918945
    4. '0' → logprob: -5.7840166091918945
    5. '           ' → logprob: -5.9090166091918945
    6. 'binary' → logprob: -6.2840166091918945
    7. '   ' → logprob: -6.6590166091918945
    8. '       ' → logprob: -7.2840166091918945
    9. '[' → logprob: -8.034016609191895
    10. '[p' → logprob: -8.284016609191895

Token 1126: '[' (ID: 58)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0014435052871704
    2. ' =' → logprob: -2.626443386077881
    3. 'indices' → logprob: -2.751443386077881
    4. '```' → logprob: -3.376443386077881
    5. '_index' → logprob: -3.501443386077881
    6. 'with' → logprob: -3.501443386077881
    7. '_' → logprob: -3.626443386077881
    8. '_idx' → logprob: -3.751443386077881
    9. '[' → logprob: -3.751443386077881
    10. '_values' → logprob: -3.876443386077881

Token 1127: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.766811728477478
    2. ':' → logprob: -1.266811728477478
    3. ' :' → logprob: -1.891811728477478
    4. '[:' → logprob: -3.8918118476867676
    5. ' ' → logprob: -4.141811847686768
    6. '
' → logprob: -4.516811847686768
    7. '...' → logprob: -4.641811847686768
    8. 'l' → logprob: -4.766811847686768
    9. ':
' → logprob: -4.891811847686768
    10. 'r' → logprob: -5.266811847686768

Token 1128: '..' (ID: 485)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6549394726753235
    2. '..' → logprob: -1.4049394130706787
    3. '...' → logprob: -2.4049394130706787
    4. ':r' → logprob: -3.0299394130706787
    5. ' :' → logprob: -3.0299394130706787
    6. ']' → logprob: -4.154939651489258
    7. ':]' → logprob: -4.779939651489258
    8. '           ' → logprob: -5.404939651489258
    9. ':
' → logprob: -5.529939651489258
    10. ':index' → logprob: -5.904939651489258

Token 1129: 'min' (ID: 1493)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04918777942657471
    2. 'min' → logprob: -3.049187660217285
    3. '
' → logprob: -8.674187660217285
    4. 'l' → logprob: -9.299187660217285
    5. '```' → logprob: -9.424187660217285
    6. '   ' → logprob: -9.924187660217285
    7. ' min' → logprob: -10.174187660217285
    8. '           ' → logprob: -10.299187660217285
    9. ' r' → logprob: -10.549187660217285
    10. ']' → logprob: -11.299187660217285

Token 1130: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0005433809128589928
    2. '_r' → logprob: -8.250543594360352
    3. '+' → logprob: -9.375543594360352
    4. 'min' → logprob: -9.375543594360352
    5. 'l' → logprob: -10.750543594360352
    6. '[min' → logprob: -11.375543594360352
    7. '```' → logprob: -11.625543594360352
    8. ']' → logprob: -11.750543594360352
    9. ' +' → logprob: -11.875543594360352
    10. '   ' → logprob: -11.875543594360352

Token 1131: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8358168005943298
    2. '           ' → logprob: -1.9608168601989746
    3. ' that' → logprob: -2.2108168601989746
    4. ' if' → logprob: -3.0858168601989746
    5. ':
' → logprob: -3.0858168601989746
    6. ' <=' → logprob: -3.2108168601989746
    7. '
' → logprob: -3.4608168601989746
    8. '```' → logprob: -3.4608168601989746
    9. 'that' → logprob: -3.7108168601989746
    10. ' with' → logprob: -3.7108168601989746

Token 1132: ' <=' (ID: 5017)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.042929306626319885
    2. 'from' → logprob: -4.667929172515869
    3. 'import' → logprob: -4.667929172515869
    4. ' from' → logprob: -5.167929172515869
    5. '
' → logprob: -5.292929172515869
    6. '```' → logprob: -5.667929172515869
    7. '       ' → logprob: -6.167929172515869
    8. ',' → logprob: -6.292929172515869
    9. ' =' → logprob: -7.167929172515869
    10. ':' → logprob: -7.167929172515869

Token 1133: ' pref' (ID: 27015)
  Prédit: 'pref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pref' → logprob: -0.3336540758609772
    2. ' pref' → logprob: -1.3336540460586548
    3. '(pref' → logprob: -3.9586541652679443
    4. 'prefix' → logprob: -7.458653926849365
    5. ' prefix' → logprob: -8.958654403686523
    6. ' (' → logprob: -9.208654403686523
    7. '   ' → logprob: -9.583654403686523
    8. '           ' → logprob: -10.333654403686523
    9. '-pref' → logprob: -10.458654403686523
    10. 'pred' → logprob: -10.583654403686523

Token 1134: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.026573484763503075
    2. 'r' → logprob: -4.526573657989502
    3. '[l' → logprob: -4.651573657989502
    4. '[' → logprob: -6.151573657989502
    5. '_r' → logprob: -6.776573657989502
    6. '[min' → logprob: -7.401573657989502
    7. '   ' → logprob: -7.651573657989502
    8. '```' → logprob: -7.776573657989502
    9. ']' → logprob: -8.776573181152344
    10. 'l' → logprob: -8.901573181152344

Token 1135: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003988165874034166
    2. '[r' → logprob: -5.753988265991211
    3. '[' → logprob: -7.753988265991211
    4. '+r' → logprob: -8.753988265991211
    5. ' +' → logprob: -9.503988265991211
    6. ']' → logprob: -10.128988265991211
    7. 'r' → logprob: -10.253988265991211
    8. ']+' → logprob: -10.378988265991211
    9. '```' → logprob: -11.253988265991211
    10. '[
' → logprob: -11.753988265991211

Token 1136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.546478935983032e-05
    2. '+' → logprob: -11.375025749206543
    3. 'r' → logprob: -12.375025749206543
    4. '[r' → logprob: -12.875025749206543
    5. '```' → logprob: -13.125025749206543
    6. ' ' → logprob: -14.000025749206543
    7. '{' → logprob: -14.375025749206543
    8. '`' → logprob: -14.562525749206543
    9. '   ' → logprob: -14.625025749206543
    10. '(r' → logprob: -14.687525749206543

Token 1137: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6231351494789124
    2. '-K' → logprob: -1.2481350898742676
    3. '-' → logprob: -1.9981350898742676
    4. ']' → logprob: -3.7481350898742676
    5. ']-' → logprob: -4.498135089874268
    6. '-k' → logprob: -5.873135089874268
    7. '[-' → logprob: -6.623135089874268
    8. '-r' → logprob: -7.373135089874268
    9. '[r' → logprob: -7.748135089874268
    10. '   ' → logprob: -8.373135566711426

Token 1138: ' -' (ID: 533)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1721852570772171
    2. '```' → logprob: -3.297185182571411
    3. '
' → logprob: -3.422185182571411
    4. 'import' → logprob: -4.17218542098999
    5. '       ' → logprob: -4.42218542098999
    6. ' -' → logprob: -4.79718542098999
    7. ':
' → logprob: -4.79718542098999
    8. '-' → logprob: -4.92218542098999
    9. ',' → logprob: -5.29718542098999
    10. 'from' → logprob: -5.54718542098999

Token 1139: ' K' (ID: 658)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16038142144680023
    2. 'K' → logprob: -1.9103814363479614
    3. ' self' → logprob: -9.410381317138672
    4. 'k' → logprob: -9.660381317138672
    5. '(self' → logprob: -12.410381317138672
    6. ' K' → logprob: -13.160381317138672
    7. '```' → logprob: -13.785381317138672
    8. '<|end|>' → logprob: -14.160381317138672
    9. '       ' → logprob: -14.535381317138672
    10. '[self' → logprob: -14.535381317138672

Token 1140: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21379223465919495
    2. 'import' → logprob: -2.838792324066162
    3. '
' → logprob: -2.963792324066162
    4. 'from' → logprob: -3.463792324066162
    5. ',' → logprob: -4.338792324066162
    6. '       ' → logprob: -4.588792324066162
    7. ' from' → logprob: -4.963792324066162
    8. '```' → logprob: -5.838792324066162
    9. ' 
' → logprob: -6.213792324066162
    10. '\' → logprob: -6.838792324066162

Token 1141: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.055425822734832764
    2. '```' → logprob: -4.180425643920898
    3. 'from' → logprob: -4.305425643920898
    4. 'import' → logprob: -4.430425643920898
    5. '       ' → logprob: -5.680425643920898
    6. ' from' → logprob: -5.805425643920898
    7. ',' → logprob: -6.680425643920898
    8. '
' → logprob: -7.180425643920898
    9. '          ' → logprob: -7.305425643920898
    10. '``' → logprob: -7.930425643920898

Token 1142: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5699592232704163
    2. 'import' → logprob: -1.0699591636657715
    3. 'from' → logprob: -3.4449591636657715
    4. 'left' → logprob: -3.6949591636657715
    5. '```' → logprob: -4.4449591636657715
    6. ' import' → logprob: -5.8199591636657715
    7. 'idx' → logprob: -5.8199591636657715
    8. 'low' → logprob: -6.1949591636657715
    9. 'l' → logprob: -6.3199591636657715
    10. 'right' → logprob: -6.5699591636657715

Token 1143: ' We' (ID: 1416)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.029889797791838646
    2. 'from' → logprob: -4.2798895835876465
    3. 'left' → logprob: -5.1548895835876465
    4. 'low' → logprob: -5.6548895835876465
    5. 'l' → logprob: -5.7798895835876465
    6. 'lo' → logprob: -6.4048895835876465
    7. '           ' → logprob: -7.4048895835876465
    8. '#' → logprob: -7.7798895835876465
    9. ' import' → logprob: -8.529890060424805
    10. '```' → logprob: -8.904890060424805

Token 1144: ' will' (ID: 738)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.15470804274082184
    2. '           ' → logprob: -3.02970814704895
    3. '       ' → logprob: -3.90470814704895
    4. '```' → logprob: -4.029707908630371
    5. 'from' → logprob: -4.279707908630371
    6. ' can' → logprob: -4.654707908630371
    7. 'need' → logprob: -4.654707908630371
    8. ' need' → logprob: -5.029707908630371
    9. ' import' → logprob: -5.404707908630371
    10. '...' → logprob: -6.154707908630371

Token 1145: ' use' (ID: 1199)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.02830522321164608
    2. 'from' → logprob: -4.4033050537109375
    3. 'use' → logprob: -4.9033050537109375
    4. '           ' → logprob: -6.4033050537109375
    5. 'binary' → logprob: -6.7783050537109375
    6. '```' → logprob: -6.7783050537109375
    7. 'maint' → logprob: -7.5283050537109375
    8. 'perform' → logprob: -7.6533050537109375
    9. 'implement' → logprob: -7.7783050537109375
    10. 'count' → logprob: -7.9033050537109375

Token 1146: ' binary' (ID: 15600)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1073177233338356
    2. 'from' → logprob: -2.3573176860809326
    3. 'bis' → logprob: -5.232317924499512
    4. 'binary' → logprob: -7.482317924499512
    5. '
' → logprob: -7.607317924499512
    6. '           ' → logprob: -9.107317924499512
    7. 'sorted' → logprob: -9.107317924499512
    8. 'fen' → logprob: -9.232317924499512
    9. 'self' → logprob: -9.232317924499512
    10. '```' → logprob: -9.357317924499512

Token 1147: ' indexed' (ID: 44010)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.7446901202201843
    2. ' search' → logprob: -0.7446901202201843
    3. '_search' → logprob: -2.994690179824829
    4. '_' → logprob: -9.36968994140625
    5. 'import' → logprob: -10.11968994140625
    6. ' _' → logprob: -10.86968994140625
    7. '```' → logprob: -11.11968994140625
    8. '
' → logprob: -12.24468994140625
    9. '           ' → logprob: -12.49468994140625
    10. ' searching' → logprob: -12.86968994140625

Token 1148: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.10072966665029526
    2. ' tree' → logprob: -2.3507297039031982
    3. '_tree' → logprob: -7.600729465484619
    4. 'trees' → logprob: -11.850729942321777
    5. '-tree' → logprob: -12.350729942321777
    6. 'Tree' → logprob: -12.350729942321777
    7. 't' → logprob: -12.975729942321777
    8. ' trees' → logprob: -12.975729942321777
    9. 'search' → logprob: -14.475729942321777
    10. 'tre' → logprob: -14.600729942321777

Token 1149: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6973616480827332
    2. 'import' → logprob: -1.947361707687378
    3. ' fen' → logprob: -2.072361707687378
    4. 'from' → logprob: -3.322361707687378
    5. ' =' → logprob: -3.572361707687378
    6. '=' → logprob: -3.822361707687378
    7. '
' → logprob: -3.947361707687378
    8. 'class' → logprob: -3.947361707687378
    9. 'fen' → logprob: -4.197361469268799
    10. 'Fen' → logprob: -4.447361469268799

Token 1150: ' counting' (ID: 43276)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.32625266909599304
    2. 'count' → logprob: -2.7012526988983154
    3. 'None' → logprob: -3.4512526988983154
    4. 'query' → logprob: -3.7012526988983154
    5. ' None' → logprob: -3.8262526988983154
    6. 'compressed' → logprob: -3.8262526988983154
    7. 'pref' → logprob: -3.9512526988983154
    8. 'binary' → logprob: -4.201252460479736
    9. ' prefix' → logprob: -4.701252460479736
    10. '0' → logprob: -4.701252460479736

Token 1151: ' prefix' (ID: 18633)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28598228096961975
    2. ' fen' → logprob: -2.035982370376587
    3. '           ' → logprob: -3.285982370376587
    4. '
' → logprob: -4.035982131958008
    5. '```' → logprob: -4.035982131958008
    6. 'fen' → logprob: -4.410982131958008
    7. 'Fen' → logprob: -4.910982131958008
    8. 'import' → logprob: -5.160982131958008
    9. ' Fen' → logprob: -5.535982131958008
    10. 'pos' → logprob: -6.285982131958008

Token 1152: ' values' (ID: 4824)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.92819744348526
    2. '_s' → logprob: -1.1781973838806152
    3. 'sum' → logprob: -1.9281973838806152
    4. 's' → logprob: -2.3031973838806152
    5. ' sums' → logprob: -3.3031973838806152
    6. '_' → logprob: -5.053197383880615
    7. ' sum' → logprob: -6.178197383880615
    8. '   ' → logprob: -6.928197383880615
    9. '_pref' → logprob: -6.928197383880615
    10. ')' → logprob: -7.053197383880615

Token 1153: ' <=' (ID: 5017)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19586823880672455
    2. '           ' → logprob: -2.3208682537078857
    3. 'import' → logprob: -3.8208682537078857
    4. ',' → logprob: -4.195868015289307
    5. '```' → logprob: -4.195868015289307
    6. ')' → logprob: -5.820868015289307
    7. '[' → logprob: -5.820868015289307
    8. '#' → logprob: -5.820868015289307
    9. 'from' → logprob: -6.195868015289307
    10. '.' → logprob: -6.445868015289307

Token 1154: ' x' (ID: 1215)
  Prédit: 'pref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pref' → logprob: -0.23579733073711395
    2. ' pref' → logprob: -2.11079740524292
    3. '(pref' → logprob: -2.98579740524292
    4. '0' → logprob: -4.11079740524292
    5. 'prefix' → logprob: -4.73579740524292
    6. '
' → logprob: -6.11079740524292
    7. 'val' → logprob: -6.23579740524292
    8. ' val' → logprob: -6.48579740524292
    9. ' ' → logprob: -6.61079740524292
    10. ' prefix' → logprob: -6.73579740524292

Token 1155: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11903173476457596
    2. '
' → logprob: -2.9940316677093506
    3. '<|end|>' → logprob: -4.36903190612793
    4. 'import' → logprob: -4.86903190612793
    5. 'from' → logprob: -4.99403190612793
    6. '        
' → logprob: -4.99403190612793
    7. '#' → logprob: -5.24403190612793
    8. ',' → logprob: -5.49403190612793
    9. '```' → logprob: -6.36903190612793
    10. '[' → logprob: -6.36903190612793

Token 1156: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4308467209339142
    2. '       ' → logprob: -1.3058466911315918
    3. '
' → logprob: -3.055846691131592
    4. '            
' → logprob: -4.930846691131592
    5. '        
' → logprob: -4.930846691131592
    6. '```' → logprob: -5.180846691131592
    7. ' 
' → logprob: -5.805846691131592
    8. '<|end|>' → logprob: -5.930846691131592
    9. 'import' → logprob: -6.930846691131592
    10. '[' → logprob: -7.055846691131592

Token 1157: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.720615565776825
    2. ' fen' → logprob: -1.4706156253814697
    3. '           ' → logprob: -2.4706156253814697
    4. '
' → logprob: -2.9706156253814697
    5. 'from' → logprob: -2.9706156253814697
    6. 'import' → logprob: -3.8456156253814697
    7. '        
' → logprob: -3.9706156253814697
    8. 'fen' → logprob: -4.470615386962891
    9. ' from' → logprob: -4.470615386962891
    10. '```' → logprob: -4.845615386962891

Token 1158: ' Build' (ID: 10885)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20295196771621704
    2. 'from' → logprob: -2.0779519081115723
    3. ' fen' → logprob: -3.5779519081115723
    4. 'import' → logprob: -5.077951908111572
    5. 'fen' → logprob: -5.202951908111572
    6. ' from' → logprob: -5.327951908111572
    7. '
' → logprob: -5.327951908111572
    8. 'Fen' → logprob: -5.577951908111572
    9. ' Fen' → logprob: -6.452951908111572
    10. '        
' → logprob: -6.827951908111572

Token 1159: ' array' (ID: 2644)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.051896367222070694
    2. 'import' → logprob: -4.051896572113037
    3. 'fen' → logprob: -4.551896572113037
    4. 'class' → logprob: -4.676896572113037
    5. ' from' → logprob: -5.051896572113037
    6. '       ' → logprob: -5.801896572113037
    7. ' fen' → logprob: -7.051896572113037
    8. 'bit' → logprob: -7.051896572113037
    9. 'size' → logprob: -7.301896572113037
    10. 'pref' → logprob: -8.176896095275879

Token 1160: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7217769026756287
    2. '       ' → logprob: -1.4717769622802734
    3. '=' → logprob: -2.4717769622802734
    4. 'vals' → logprob: -3.2217769622802734
    5. 'pref' → logprob: -3.7217769622802734
    6. 'sorted' → logprob: -3.8467769622802734
    7. 'import' → logprob: -4.096776962280273
    8. 'indexes' → logprob: -4.471776962280273
    9. 'indices' → logprob: -4.596776962280273
    10. '_values' → logprob: -4.721776962280273

Token 1161: ' prefix' (ID: 18633)
  Prédit: '(pref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pref' → logprob: -0.570667028427124
    2. 'pref' → logprob: -1.070667028427124
    3. 'prefix' → logprob: -2.945667028427124
    4. '(prefix' → logprob: -4.570667266845703
    5. 'values' → logprob: -5.070667266845703
    6. ' pref' → logprob: -5.445667266845703
    7. 'sorted' → logprob: -5.695667266845703
    8. 'all' → logprob: -5.820667266845703
    9. '(sorted' → logprob: -6.320667266845703
    10. 'indices' → logprob: -6.445667266845703

Token 1162: ' sums' (ID: 73121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2045230269432068
    2. '_s' → logprob: -2.4545230865478516
    3. ' sums' → logprob: -3.4545230865478516
    4. 'sum' → logprob: -3.8295230865478516
    5. '_values' → logprob: -4.329523086547852
    6. 'values' → logprob: -4.454523086547852
    7. 'vals' → logprob: -4.579523086547852
    8. '_sum' → logprob: -5.454523086547852
    9. '_vals' → logprob: -6.079523086547852
    10. '
' → logprob: -6.454523086547852

Token 1163: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8009924292564392
    2. 'import' → logprob: -1.675992488861084
    3. 'pref' → logprob: -1.800992488861084
    4. 'prefix' → logprob: -2.925992488861084
    5. 'from' → logprob: -3.050992488861084
    6. ' pref' → logprob: -3.550992488861084
    7. '
' → logprob: -4.675992488861084
    8. 'indexes' → logprob: -4.800992488861084
    9. 'indices' → logprob: -4.925992488861084
    10. 'index' → logprob: -4.925992488861084

Token 1164: ' fen' (ID: 25170)
  Prédit: 'pref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pref' → logprob: -0.26763296127319336
    2. 'prefix' → logprob: -2.5176329612731934
    3. 'compressed' → logprob: -3.7676329612731934
    4. 'values' → logprob: -4.142632961273193
    5. 'coordinate' → logprob: -4.142632961273193
    6. 'all' → logprob: -4.392632961273193
    7. 'import' → logprob: -4.392632961273193
    8. ' pref' → logprob: -4.767632961273193
    9. 'binary' → logprob: -5.017632961273193
    10. 'compression' → logprob: -5.142632961273193

Token 1165: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.010638273321092129
    2. 't' → logprob: -5.010638236999512
    3. '       ' → logprob: -6.510638236999512
    4. 'tree' → logprob: -7.635638236999512
    5. '   ' → logprob: -7.760638236999512
    6. 'wick' → logprob: -8.260638236999512
    7. '
' → logprob: -8.760638236999512
    8. ' =' → logprob: -8.885638236999512
    9. '```' → logprob: -9.135638236999512
    10. 'x' → logprob: -9.385638236999512

Token 1166: ' counting' (ID: 43276)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37377339601516724
    2. 'pref' → logprob: -1.4987733364105225
    3. 'prefix' → logprob: -3.8737733364105225
    4. 'indices' → logprob: -4.623773574829102
    5. 'import' → logprob: -4.748773574829102
    6. 'index' → logprob: -4.998773574829102
    7. 'freq' → logprob: -4.998773574829102
    8. 'indexes' → logprob: -4.998773574829102
    9. '(pref' → logprob: -5.623773574829102
    10. 'sorted' → logprob: -5.748773574829102

Token 1167: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040788404643535614
    2. '
' → logprob: -4.040788173675537
    3. '        
' → logprob: -4.540788173675537
    4. 'import' → logprob: -5.790788173675537
    5. ' 
' → logprob: -6.790788173675537
    6. '[' → logprob: -6.915788173675537
    7. 'pref' → logprob: -7.290788173675537
    8. '#' → logprob: -7.540788173675537
    9. '    
' → logprob: -7.665788173675537
    10. ' ' → logprob: -7.915788173675537

Token 1168: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028850648552179337
    2. 'import' → logprob: -4.653850555419922
    3. '
' → logprob: -4.778850555419922
    4. '        
' → logprob: -5.278850555419922
    5. 'from' → logprob: -5.403850555419922
    6. ' from' → logprob: -7.903850555419922
    7. '```' → logprob: -8.903850555419922
    8. 'index' → logprob: -9.403850555419922
    9. '           ' → logprob: -10.028850555419922
    10. '#' → logprob: -10.153850555419922

Token 1169: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1288660764694214
    2. 'from' → logprob: -2.753866195678711
    3. 'import' → logprob: -3.878866195678711
    4. 'pref' → logprob: -4.003866195678711
    5. '
' → logprob: -4.628866195678711
    6. 'prefix' → logprob: -5.878866195678711
    7. ' pref' → logprob: -6.253866195678711
    8. '#' (adapté à ' #') → logprob: -7.128866195678711
    9. 'index' → logprob: -7.378866195678711
    10. '        
' → logprob: -7.878866195678711

Token 1170: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010526683181524277
    2. 'import' → logprob: -5.010526657104492
    3. 'from' → logprob: -5.760526657104492
    4. '           ' → logprob: -8.510526657104492
    5. '
' → logprob: -9.135526657104492
    6. '        
' → logprob: -9.760526657104492
    7. '#' → logprob: -9.885526657104492
    8. 'fen' → logprob: -9.885526657104492
    9. 'index' → logprob: -10.010526657104492
    10. 'pref' → logprob: -10.135526657104492

Token 1171: ' compress' (ID: 34112)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8517510890960693
    2. '       ' → logprob: -1.1017510890960693
    3. 'build' → logprob: -3.2267510890960693
    4. 'from' → logprob: -3.4767510890960693
    5. 'need' → logprob: -3.4767510890960693
    6. '
' → logprob: -3.6017510890960693
    7. ' need' → logprob: -3.9767510890960693
    8. '#' → logprob: -4.101751327514648
    9. ' import' → logprob: -4.351751327514648
    10. '   ' → logprob: -4.476751327514648

Token 1172: ' prefix' (ID: 18633)
  Prédit: 'pref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pref' → logprob: -0.21701091527938843
    2. '       ' → logprob: -1.9670109748840332
    3. ' pref' → logprob: -3.717010974884033
    4. 'self' → logprob: -4.467010974884033
    5. 'the' → logprob: -5.842010974884033
    6. '(pref' → logprob: -5.967010974884033
    7. '_pref' → logprob: -6.092010974884033
    8. 'prefix' → logprob: -6.217010974884033
    9. '{' → logprob: -6.717010974884033
    10. '{
' → logprob: -7.092010974884033

Token 1173: ' sums' (ID: 73121)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.12876273691654205
    2. '_sum' → logprob: -2.503762722015381
    3. '_' → logprob: -4.503762722015381
    4. '_vals' → logprob: -5.378762722015381
    5. 's' → logprob: -5.503762722015381
    6. '_values' → logprob: -5.628762722015381
    7. ' =' → logprob: -5.628762722015381
    8. '_counts' → logprob: -5.753762722015381
    9. '_pref' → logprob: -5.753762722015381
    10. 'sum' → logprob: -5.878762722015381

Token 1174: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018941106274724007
    2. 'pref' → logprob: -5.2689409255981445
    3. 'all' → logprob: -6.2689409255981445
    4. '
' → logprob: -6.2689409255981445
    5. ',' → logprob: -6.6439409255981445
    6. '#' → logprob: -6.7689409255981445
    7. 'import' → logprob: -7.0189409255981445
    8. ' =' → logprob: -7.2689409255981445
    9. '        
' → logprob: -7.3939409255981445
    10. 'prefix' → logprob: -7.3939409255981445

Token 1175: ' coordinates' (ID: 27933)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.25182661414146423
    2. 'list' → logprob: -2.251826524734497
    3. '{' → logprob: -3.126826524734497
    4. 'len' → logprob: -4.626826763153076
    5. '[' → logprob: -4.751826763153076
    6. '
' → logprob: -4.876826763153076
    7. 'compress' → logprob: -5.376826763153076
    8. 'all' → logprob: -5.501826763153076
    9. 'handle' → logprob: -5.876826763153076
    10. 'self' → logprob: -6.001826763153076

Token 1176: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07180256396532059
    2. '
' → logprob: -2.8218026161193848
    3. 'import' → logprob: -5.571802616119385
    4. '        
' → logprob: -6.196802616119385
    5. ',' → logprob: -7.071802616119385
    6. '#' → logprob: -7.571802616119385
    7. '```' → logprob: -7.696802616119385
    8. '           ' → logprob: -8.696802139282227
    9. 'prev' → logprob: -8.821802139282227
    10. 'pref' → logprob: -8.821802139282227

Token 1177: ' maintain' (ID: 12930)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'handle' → logprob: -1.4643430709838867
    2. 'compress' → logprob: -1.4643430709838867
    3. 'enable' → logprob: -2.5893430709838867
    4. 'coordinate' → logprob: -2.5893430709838867
    5. 'support' → logprob: -3.2143430709838867
    6. 'build' → logprob: -3.2143430709838867
    7. '```' → logprob: -3.2143430709838867
    8. 'use' → logprob: -3.3393430709838867
    9. 'allow' → logprob: -3.8393430709838867
    10. 'process' → logprob: -3.9643430709838867

Token 1178: ' fen' (ID: 25170)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.8594940900802612
    2. 'prefix' → logprob: -1.4844940900802612
    3. 'positions' → logprob: -2.734494209289551
    4. 'counts' → logprob: -2.859494209289551
    5. '{
' → logprob: -2.984494209289551
    6. 'self' → logprob: -3.234494209289551
    7. '{}' → logprob: -3.234494209289551
    8. '{}
' → logprob: -3.609494209289551
    9. '
' → logprob: -3.859494209289551
    10. 'pref' → logprob: -4.984494209289551

Token 1179: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0008151084766723216
    2. '       ' → logprob: -7.875814914703369
    3. 'wick' → logprob: -8.625815391540527
    4. '```' → logprob: -9.250815391540527
    5. '   ' → logprob: -10.000815391540527
    6. '
' → logprob: -10.750815391540527
    7. '``' → logprob: -11.125815391540527
    8. '=' → logprob: -11.500815391540527
    9. 't' → logprob: -11.875815391540527
    10. 'wit' → logprob: -12.375815391540527

Token 1180: ' indexing' (ID: 105989)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08293486386537552
    2. '
' → logprob: -2.582934856414795
    3. '        
' → logprob: -5.832934856414795
    4. ',' → logprob: -7.707934856414795
    5. 'import' → logprob: -9.207935333251953
    6. '    
' → logprob: -9.582935333251953
    7. '```' → logprob: -9.582935333251953
    8. '
' → logprob: -9.832935333251953
    9. 'indices' → logprob: -10.332935333251953
    10. '#' → logprob: -10.332935333251953

Token 1181: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14930018782615662
    2. '
' → logprob: -2.0243000984191895
    3. '        
' → logprob: -5.2743000984191895
    4. 'import' → logprob: -7.0243000984191895
    5. '    
' → logprob: -9.399300575256348
    6. '```' → logprob: -9.399300575256348
    7. '

' → logprob: -9.774300575256348
    8. ',' → logprob: -10.024300575256348
    9. '
' → logprob: -10.274300575256348
    10. '#' → logprob: -10.274300575256348

Token 1182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05035681650042534
    2. '
' → logprob: -3.175356864929199
    3. 'import' → logprob: -5.300356864929199
    4. '        
' → logprob: -6.425356864929199
    5. '```' → logprob: -8.6753568649292
    6. ',' → logprob: -9.1753568649292
    7. 'from' → logprob: -9.3003568649292
    8. '#' → logprob: -10.4253568649292
    9. '           ' → logprob: -10.5503568649292
    10. '    
' → logprob: -10.6753568649292

Token 1183: ' all' (ID: 722)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35879209637641907
    2. '
' → logprob: -2.3587920665740967
    3. 'import' → logprob: -2.6087920665740967
    4. 'prefix' → logprob: -3.2337920665740967
    5. 'from' → logprob: -3.4837920665740967
    6. 'all' (adapté à ' all') → logprob: -3.6087920665740967
    7. 'pref' → logprob: -3.6087920665740967
    8. '#' → logprob: -6.108792304992676
    9. '        
' → logprob: -6.608792304992676
    10. 'vals' → logprob: -7.108792304992676

Token 1184: '_p' (ID: 1359)
  Prédit: '_prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.7499809861183167
    2. '_pref' → logprob: -0.9999809861183167
    3. '_vals' → logprob: -2.624980926513672
    4. '_values' → logprob: -2.874980926513672
    5. ' =' → logprob: -4.499980926513672
    6. '_p' → logprob: -5.249980926513672
    7. '_pres' → logprob: -5.499980926513672
    8. '_' → logprob: -5.999980926513672
    9. '_coords' → logprob: -6.374980926513672
    10. '=' → logprob: -6.624980926513672

Token 1185: 'refs' (ID: 44463)
  Prédit: 'ref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ref' → logprob: -0.03416760265827179
    2. 'refix' → logprob: -3.534167528152466
    3. 'refs' → logprob: -6.034167766571045
    4. 're' → logprob: -6.409167766571045
    5. 'r' → logprob: -9.034167289733887
    6. ' =' → logprob: -9.159167289733887
    7. '=' → logprob: -10.409167289733887
    8. '
' → logprob: -10.534167289733887
    9. 'REFIX' → logprob: -11.159167289733887
    10. 'res' → logprob: -11.284167289733887

Token 1186: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12712296843528748
    2. ' =' → logprob: -2.1271228790283203
    3. '_values' → logprob: -8.75212287902832
    4. '_vals' → logprob: -11.12712287902832
    5. '_' → logprob: -12.25212287902832
    6. '_set' → logprob: -13.12712287902832
    7. '_sorted' → logprob: -13.12712287902832
    8. '=[' → logprob: -13.25212287902832
    9. '   ' → logprob: -13.50212287902832
    10. '=
' → logprob: -14.12712287902832

Token 1187: ' pref' (ID: 27015)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.016629304736852646
    2. ' sorted' → logprob: -4.266629219055176
    3. '[' → logprob: -6.766629219055176
    4. 'list' → logprob: -7.266629219055176
    5. 'self' → logprob: -7.891629219055176
    6. ' list' → logprob: -9.141629219055176
    7. ' [' → logprob: -10.016629219055176
    8. '   ' → logprob: -10.516629219055176
    9. '(sorted' → logprob: -11.266629219055176
    10. '[p' → logprob: -11.641629219055176

Token 1188: '[:' (ID: 7808)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -1.1930195093154907
    2. ' =' → logprob: -1.3180195093154907
    3. '=' → logprob: -1.8180195093154907
    4. '+' → logprob: -2.818019390106201
    5. '_coords' → logprob: -3.318019390106201
    6. '_' → logprob: -3.568019390106201
    7. '_com' → logprob: -3.568019390106201
    8. '_comp' → logprob: -3.693019390106201
    9. ' +' → logprob: -3.943019390106201
    10. '_values' → logprob: -4.193019390106201

Token 1189: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8508305549621582
    2. ']' → logprob: -1.3508305549621582
    3. '])' → logprob: -1.8508305549621582
    4. ']
' → logprob: -2.600830554962158
    5. '])
' → logprob: -2.850830554962158
    6. ']+' → logprob: -4.725830554962158
    7. 'len' → logprob: -4.850830554962158
    8. 'r' → logprob: -5.475830554962158
    9. ')' → logprob: -7.350830554962158
    10. '+' → logprob: -7.600830554962158

Token 1190: '.N' (ID: 4439)
  Prédit: '.__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.9831960797309875
    2. 'N' → logprob: -1.7331960201263428
    3. ']' → logprob: -1.7331960201263428
    4. '1' → logprob: -2.8581960201263428
    5. 'r' → logprob: -3.6081960201263428
    6. '.N' → logprob: -3.7331960201263428
    7. '+' → logprob: -4.108196258544922
    8. ']+' → logprob: -4.108196258544922
    9. '.index' → logprob: -4.233196258544922
    10. '])' → logprob: -4.233196258544922

Token 1191: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012647494673728943
    2. ' +' → logprob: -4.38764762878418
    3. ']' → logprob: -9.13764762878418
    4. ']+' → logprob: -11.13764762878418
    5. '+[' → logprob: -12.01264762878418
    6. ']
' → logprob: -12.63764762878418
    7. '
' → logprob: -13.63764762878418
    8. '+
' → logprob: -13.88764762878418
    9. '```' → logprob: -14.26264762878418
    10. '+n' → logprob: -14.63764762878418

Token 1192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. '
' → logprob: -13.125007629394531
    3. '2' → logprob: -13.375007629394531
    4. '+' → logprob: -13.625007629394531
    5. ' ' → logprob: -14.250007629394531
    6. '```' → logprob: -14.500007629394531
    7. '   ' → logprob: -14.875007629394531
    8. '0' → logprob: -15.812507629394531
    9. '=' → logprob: -16.06250762939453
    10. '``' → logprob: -16.50000762939453

Token 1193: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.384785920381546
    2. ' +' → logprob: -1.2597858905792236
    3. '       ' → logprob: -3.8847858905792236
    4. '+[' → logprob: -4.884786128997803
    5. '
' → logprob: -5.759786128997803
    6. '           ' → logprob: -6.884786128997803
    7. '=' → logprob: -7.009786128997803
    8. '+
' → logprob: -7.134786128997803
    9. 'sorted' → logprob: -7.759786128997803
    10. ')
' → logprob: -8.009785652160645

Token 1194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0845494344830513
    2. 'all' → logprob: -3.7095494270324707
    3. 'sorted' → logprob: -4.084549427032471
    4. '
' → logprob: -4.584549427032471
    5. ' =' → logprob: -4.959549427032471
    6. ',' → logprob: -5.709549427032471
    7. '_sorted' → logprob: -5.709549427032471
    8. '.sort' → logprob: -5.959549427032471
    9. ' +' → logprob: -6.209549427032471
    10. '+' → logprob: -6.209549427032471

Token 1195: ' sorted' (ID: 20099)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4114006757736206
    2. 'sorted' (adapté à ' sorted') → logprob: -1.7864006757736206
    3. '
' → logprob: -2.78640079498291
    4. 'coords' → logprob: -3.78640079498291
    5. 'compressed' → logprob: -3.78640079498291
    6. 'all' → logprob: -4.41140079498291
    7. '+' → logprob: -5.28640079498291
    8. ' sorted' → logprob: -5.28640079498291
    9. 'import' → logprob: -5.41140079498291
    10. 'indexes' → logprob: -5.66140079498291

Token 1196: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.06537267565727234
    2. '_pref' → logprob: -3.0653727054595947
    3. '_vals' → logprob: -4.815372467041016
    4. 'pref' → logprob: -5.940372467041016
    5. '_prefix' → logprob: -6.315372467041016
    6. 'prefs' → logprob: -6.690372467041016
    7. '_set' → logprob: -7.190372467041016
    8. '_values' → logprob: -7.440372467041016
    9. 'set' → logprob: -7.565372467041016
    10. '_coords' → logprob: -7.815372467041016

Token 1197: 'refs' (ID: 44463)
  Prédit: 'ref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ref' → logprob: -0.23169590532779694
    2. 'refs' → logprob: -1.6066958904266357
    3. 'refix' → logprob: -5.606696128845215
    4. 're' → logprob: -6.981696128845215
    5. '_all' → logprob: -7.606696128845215
    6. 'all' → logprob: -7.856696128845215
    7. '_refs' → logprob: -8.231696128845215
    8. '_ref' → logprob: -9.606696128845215
    9. 'prefs' → logprob: -9.856696128845215
    10. 'sorted' → logprob: -9.981696128845215

Token 1198: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078997299075127
    2. ' =' → logprob: -5.5040788650512695
    3. '=set' → logprob: -16.129079818725586
    4. '_sorted' → logprob: -16.254079818725586
    5. 'sorted' → logprob: -16.379079818725586
    6. '=
' → logprob: -16.754079818725586
    7. ',' → logprob: -16.879079818725586
    8. '＝' → logprob: -16.879079818725586
    9. '   ' → logprob: -17.004079818725586
    10. ')' → logprob: -17.129079818725586

Token 1199: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.00015943869948387146
    2. ' sorted' → logprob: -8.75015926361084
    3. '(sorted' → logprob: -14.50015926361084
    4. '[' → logprob: -15.12515926361084
    5. '   ' → logprob: -15.87515926361084
    6. '.sorted' → logprob: -17.000160217285156
    7. '{' → logprob: -19.500160217285156
    8. 'list' → logprob: -20.000160217285156
    9. '[-' → logprob: -20.125160217285156
    10. ' ' → logprob: -20.125160217285156

Token 1200: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.02613760717213154
    2. '(list' → logprob: -3.776137590408325
    3. 'set' → logprob: -6.026137828826904
    4. 'list' → logprob: -8.026137351989746
    5. '(all' → logprob: -9.276137351989746
    6. '({' → logprob: -10.401137351989746
    7. '((' → logprob: -12.026137351989746
    8. 'all' → logprob: -12.026137351989746
    9. '(' → logprob: -12.276137351989746
    10. '(
' → logprob: -12.776137351989746

Token 1201: '(all' (ID: 34727)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.023288218304514885
    2. '(all' → logprob: -3.7732882499694824
    3. 'pref' → logprob: -10.773287773132324
    4. '(pref' → logprob: -11.773287773132324
    5. ' all' → logprob: -12.148287773132324
    6. '   ' → logprob: -12.273287773132324
    7. '	all' → logprob: -13.773287773132324
    8. '       ' → logprob: -13.898287773132324
    9. '
' → logprob: -14.273287773132324
    10. '(
' → logprob: -14.648287773132324

Token 1202: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0004123192047700286
    2. '_pref' → logprob: -8.125411987304688
    3. 'pref' → logprob: -10.000411987304688
    4. 'prefs' → logprob: -10.500411987304688
    5. 'p' → logprob: -10.625411987304688
    6. '
' → logprob: -12.375411987304688
    7. ')' → logprob: -13.000411987304688
    8. '(pref' → logprob: -13.250411987304688
    9. '\' → logprob: -13.500411987304688
    10. 'Prefs' → logprob: -14.000411987304688

Token 1203: 'refs' (ID: 44463)
  Prédit: 'ref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ref' → logprob: -0.05509744584560394
    2. 'refs' → logprob: -2.9300973415374756
    3. 're' → logprob: -9.055097579956055
    4. 'r' → logprob: -10.555097579956055
    5. 'pref' → logprob: -10.805097579956055
    6. '
' → logprob: -11.805097579956055
    7. '   ' → logprob: -12.555097579956055
    8. ')' → logprob: -12.555097579956055
    9. '[' → logprob: -12.805097579956055
    10. '_refs' → logprob: -12.930097579956055

Token 1204: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.18522708117961884
    2. '))
' → logprob: -2.060227155685425
    3. ')' → logprob: -3.310227155685425
    4. '))' → logprob: -5.310226917266846
    5. '       ' → logprob: -9.060227394104004
    6. ')
' → logprob: -11.435227394104004
    7. '])
' → logprob: -11.560227394104004
    8. ')))
' → logprob: -11.560227394104004
    9. ' )
' → logprob: -11.935227394104004
    10. ')`
' → logprob: -11.935227394104004

Token 1205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004508800804615021
    2. 'pref' → logprob: -6.129508972167969
    3. 'index' → logprob: -7.129508972167969
    4. ' pref' → logprob: -8.004508972167969
    5. 'rank' → logprob: -8.254508972167969
    6. 'prefix' → logprob: -8.504508972167969
    7. '```' → logprob: -8.629508972167969
    8. 'compressed' → logprob: -8.879508972167969
    9. '           ' → logprob: -9.754508972167969
    10. '
' → logprob: -9.879508972167969

Token 1206: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8612675666809082
    2. 'pref' → logprob: -0.8612675666809082
    3. 'index' → logprob: -2.736267566680908
    4. 'fen' → logprob: -3.736267566680908
    5. 'pos' → logprob: -4.236267566680908
    6. 'idx' → logprob: -4.236267566680908
    7. 'prefix' → logprob: -4.611267566680908
    8. 'rank' → logprob: -5.111267566680908
    9. 'comp' → logprob: -5.361267566680908
    10. 'compressed' → logprob: -5.736267566680908

Token 1207: ' pref' (ID: 27015)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.37411290407180786
    2. '_rank' → logprob: -1.749112844467163
    3. 'compress' → logprob: -2.499112844467163
    4. ' rank' → logprob: -3.999112844467163
    5. 'idx' → logprob: -5.749113082885742
    6. ' compress' → logprob: -5.874113082885742
    7. 'get' → logprob: -5.999113082885742
    8. 'comp' → logprob: -6.124113082885742
    9. 'coord' → logprob: -6.124113082885742
    10. '_comp' → logprob: -6.249113082885742

Token 1208: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.2365840673446655
    2. '_rank' → logprob: -1.2365840673446655
    3. '_idx' → logprob: -1.7365840673446655
    4. '_indices' → logprob: -2.611584186553955
    5. '_to' → logprob: -2.736584186553955
    6. '_pos' → logprob: -3.111584186553955
    7. '_com' → logprob: -4.611584186553955
    8. '_comp' → logprob: -4.736584186553955
    9. '_coord' → logprob: -4.736584186553955
    10. '_map' → logprob: -4.986584186553955

Token 1209: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13630707561969757
    2. '(
' → logprob: -2.8863070011138916
    3. '(x' → logprob: -3.5113070011138916
    4. '(p' → logprob: -4.261307239532471
    5. '=' → logprob: -4.636307239532471
    6. '(pref' → logprob: -4.636307239532471
    7. '(val' → logprob: -6.011307239532471
    8. '(value' → logprob: -6.511307239532471
    9. ' =' → logprob: -6.886307239532471
    10. ' (' → logprob: -7.511307239532471

Token 1210: '):
' (ID: 1883)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2691359519958496
    2. '):' → logprob: -2.0191359519958496
    3. '):
' → logprob: -2.3941359519958496
    4. ' =' → logprob: -5.39413595199585
    5. ':' → logprob: -5.64413595199585
    6. '=
' → logprob: -6.89413595199585
    7. '(' → logprob: -7.01913595199585
    8. ')=' → logprob: -8.144136428833008
    9. '       ' → logprob: -8.394136428833008
    10. '           ' → logprob: -8.519136428833008

Token 1211: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.378464937210083
    2. '           ' → logprob: -1.503464937210083
    3. '=' → logprob: -2.003464937210083
    4. ' return' → logprob: -2.253464937210083
    5. '(' → logprob: -2.628464937210083
    6. '(
' → logprob: -3.253464937210083
    7. ' =' → logprob: -3.378464937210083
    8. '(return' → logprob: -3.378464937210083
    9. '       ' → logprob: -3.503464937210083
    10. '(sorted' → logprob: -4.003464698791504

Token 1212: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07839105278253555
    2. '           ' → logprob: -3.0783910751342773
    3. 'bis' → logprob: -4.703391075134277
    4. ' return' → logprob: -4.828391075134277
    5. 'import' → logprob: -5.453391075134277
    6. '       ' → logprob: -5.453391075134277
    7. '   ' → logprob: -6.328391075134277
    8. '               ' → logprob: -6.953391075134277
    9. '{return' → logprob: -8.328391075134277
    10. ' bis' → logprob: -8.328391075134277

Token 1213: ' ' (ID: 220)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.4032570421695709
    2. 'import' → logprob: -1.4032570123672485
    3. 'return' → logprob: -2.903257131576538
    4. '           ' → logprob: -3.778257131576538
    5. '   ' → logprob: -6.528256893157959
    6. '       ' → logprob: -6.653256893157959
    7. ' bis' → logprob: -6.778256893157959
    8. '```' → logprob: -6.903256893157959
    9. '
' → logprob: -7.403256893157959
    10. 'from' → logprob: -7.778256893157959

Token 1214: '1' (ID: 16)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.7756041288375854
    2. 'return' → logprob: -0.9006041288375854
    3. 'import' → logprob: -2.150604248046875
    4. '           ' → logprob: -5.650604248046875
    5. 'from' → logprob: -5.650604248046875
    6. 'def' → logprob: -5.900604248046875
    7. '       ' → logprob: -6.525604248046875
    8. 'binary' → logprob: -7.275604248046875
    9. 'b' → logprob: -7.400604248046875
    10. '
' → logprob: -7.525604248046875

Token 1215: '-based' (ID: 8235)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4401237964630127
    2. ' +' → logprob: -1.3151237964630127
    3. '           ' → logprob: -4.315123558044434
    4. ')' → logprob: -4.440123558044434
    5. 'def' → logprob: -4.690123558044434
    6. '
' → logprob: -4.940123558044434
    7. '{' → logprob: -5.190123558044434
    8. '<<' → logprob: -5.190123558044434
    9. 'return' → logprob: -5.315123558044434
    10. ']' → logprob: -5.565123558044434

Token 1216: ' fen' (ID: 25170)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5003931522369385
    2. ' return' → logprob: -1.0003931522369385
    3. ')' → logprob: -5.125392913818359
    4. 'def' → logprob: -5.250392913818359
    5. '   ' → logprob: -6.125392913818359
    6. ' =' → logprob: -6.375392913818359
    7. '_return' → logprob: -6.500392913818359
    8. ' ' → logprob: -6.625392913818359
    9. '<|end|>' → logprob: -6.750392913818359
    10. '(
' → logprob: -7.250392913818359

Token 1217: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0019492254359647632
    2. 't' → logprob: -7.126949310302734
    3. '       ' → logprob: -8.376949310302734
    4. '   ' → logprob: -8.501949310302734
    5. 'wt' → logprob: -8.626949310302734
    6. 'wick' → logprob: -8.626949310302734
    7. 'x' → logprob: -8.876949310302734
    8. 'wx' → logprob: -10.001949310302734
    9. '```' → logprob: -10.501949310302734
    10. '#' → logprob: -11.001949310302734

Token 1218: ' index' (ID: 3472)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.48064544796943665
    2. ')' → logprob: -2.7306454181671143
    3. 'def' → logprob: -2.7306454181671143
    4. '_idx' → logprob: -2.9806454181671143
    5. ' =' → logprob: -3.2306454181671143
    6. '(pref' → logprob: -3.3556454181671143
    7. '_' → logprob: -4.105645656585693
    8. ':' → logprob: -4.355645656585693
    9. '_rank' → logprob: -4.355645656585693
    10. '       ' → logprob: -4.605645656585693

Token 1219: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3566456735134125
    2. '(
' → logprob: -1.2316457033157349
    3. 'return' → logprob: -5.731645584106445
    4. '(x' → logprob: -6.356645584106445
    5. '           ' → logprob: -6.856645584106445
    6. '=' → logprob: -7.106645584106445
    7. ' =' → logprob: -7.981645584106445
    8. '(return' → logprob: -8.106645584106445
    9. ' (' → logprob: -8.606645584106445
    10. ' return' → logprob: -9.106645584106445

Token 1220: '           ' (ID: 352)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0049583911895752
    2. '(' → logprob: -1.7549583911895752
    3. '(x' → logprob: -2.004958391189575
    4. 'return' → logprob: -2.379958391189575
    5. '(
' → logprob: -2.504958391189575
    6. '           ' → logprob: -2.754958391189575
    7. ' =' → logprob: -3.379958391189575
    8. '```' → logprob: -4.379958152770996
    9. ' return' → logprob: -4.629958152770996
    10. '=
' → logprob: -5.004958152770996

Token 1221: ' import' (ID: 1588)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0684979110956192
    2. ' return' → logprob: -3.443497896194458
    3. '           ' → logprob: -3.568497896194458
    4. 'bis' → logprob: -5.568498134613037
    5. '               ' → logprob: -7.943498134613037
    6. '       ' → logprob: -8.068497657775879
    7. 'idx' → logprob: -8.193497657775879
    8. '   ' → logprob: -8.568497657775879
    9. 'pos' → logprob: -8.568497657775879
    10. 'i' → logprob: -8.693497657775879

Token 1222: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.0006466718041338027
    2. ' bis' → logprob: -7.375646591186523
    3. '       ' → logprob: -11.250646591186523
    4. '   ' → logprob: -12.875646591186523
    5. 'b' → logprob: -14.000646591186523
    6. 'collections' → logprob: -14.000646591186523
    7. '           ' → logprob: -14.375646591186523
    8. '
' → logprob: -14.500646591186523
    9. '-b' → logprob: -15.375646591186523
    10. '`' → logprob: -16.000646591186523

Token 1223: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.267068088054657
    2. 'n' → logprob: -2.6420681476593018
    3. 'r' → logprob: -3.2670681476593018
    4. '           ' → logprob: -3.3920681476593018
    5. 'p' → logprob: -4.017067909240723
    6. 'py' → logprob: -4.392067909240723
    7. 'ins' → logprob: -4.392067909240723
    8. 't' → logprob: -5.642067909240723
    9. 'ction' → logprob: -5.642067909240723
    10. '_left' → logprob: -5.642067909240723

Token 1224: '
' (ID: 198)
  Prédit: '(sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.6653276681900024
    2. '.b' → logprob: -1.5403276681900024
    3. '_left' → logprob: -2.415327548980713
    4. '           ' → logprob: -2.665327548980713
    5. '(x' → logprob: -2.790327548980713
    6. '_right' → logprob: -4.540327548980713
    7. '
' → logprob: -4.915327548980713
    8. '(b' → logprob: -5.165327548980713
    9. '(
' → logprob: -5.415327548980713
    10. '(left' → logprob: -6.040327548980713

Token 1225: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3926040232181549
    2. '.b' → logprob: -1.6426039934158325
    3. '_left' → logprob: -3.267604112625122
    4. '_right' → logprob: -4.017603874206543
    5. '
' → logprob: -4.517603874206543
    6. 'import' → logprob: -4.767603874206543
    7. 'bis' → logprob: -4.767603874206543
    8. '(sorted' → logprob: -4.767603874206543
    9. '       ' → logprob: -5.392603874206543
    10. '```' → logprob: -5.517603874206543

Token 1226: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.49435630440711975
    2. 'bis' → logprob: -1.4943562746047974
    3. '           ' → logprob: -2.119356393814087
    4. ' return' → logprob: -3.244356393814087
    5. ' bis' → logprob: -5.869356155395508
    6. '               ' → logprob: -6.369356155395508
    7. '   ' → logprob: -7.744356155395508
    8. '	return' → logprob: -8.119356155395508
    9. '       ' → logprob: -8.494356155395508
    10. '{return' → logprob: -9.119356155395508

Token 1227: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.4740787148475647
    2. 'bis' → logprob: -0.9740787148475647
    3. '           ' → logprob: -14.349079132080078
    4. '1' → logprob: -14.349079132080078
    5. '	b' → logprob: -15.099079132080078
    6. '   ' → logprob: -16.224079132080078
    7. 'b' → logprob: -16.474079132080078
    8. '               ' → logprob: -17.349079132080078
    9. ' ' → logprob: -17.849079132080078
    10. 'Bis' → logprob: -17.974079132080078

Token 1228: 'ect' (ID: 534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4942847192287445
    2. 'ct' → logprob: -0.9942847490310669
    3. 's' → logprob: -4.494284629821777
    4. 'sp' → logprob: -5.119284629821777
    5. 'ect' → logprob: -6.494284629821777
    6. 'sect' → logprob: -7.869284629821777
    7. 'с' → logprob: -8.619284629821777
    8. 'ns' → logprob: -9.119284629821777
    9. 'nd' → logprob: -9.119284629821777
    10. 't' → logprob: -9.244284629821777

Token 1229: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.590499758720398
    2. '_left' → logprob: -0.840499758720398
    3. '_right' → logprob: -4.7154998779296875
    4. '.ins' → logprob: -5.8404998779296875
    5. '.' → logprob: -6.0904998779296875
    6. '._' → logprob: -8.965499877929688
    7. '.left' → logprob: -9.465499877929688
    8. '.right' → logprob: -10.465499877929688
    9. 'import' → logprob: -10.715499877929688
    10. ' .' → logprob: -11.090499877929688

Token 1230: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0014161885483190417
    2. 'sp' → logprob: -7.501416206359863
    3. 'sorted' → logprob: -7.751416206359863
    4. 's' → logprob: -8.876416206359863
    5. 'isp' → logprob: -9.001416206359863
    6. 'ns' → logprob: -11.001416206359863
    7. 'ins' → logprob: -11.126416206359863
    8. 'a' → logprob: -11.251416206359863
    9. 'n' → logprob: -11.376416206359863
    10. 'lt' → logprob: -11.501416206359863

Token 1231: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.0013716686517000198
    2. 'ect' → logprob: -6.62637186050415
    3. 'n' → logprob: -10.126371383666992
    4. 't' → logprob: -13.251371383666992
    5. '_ct' → logprob: -13.626371383666992
    6. '(ct' → logprob: -14.001371383666992
    7. 'c' → logprob: -14.626371383666992
    8. 'ction' → logprob: -15.251371383666992
    9. 'nt' → logprob: -15.376371383666992
    10. '_left' → logprob: -15.751371383666992

Token 1232: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.19320787489414215
    2. '(sorted' → logprob: -2.1932079792022705
    3. 'sorted' → logprob: -3.4432079792022705
    4. '_right' → logprob: -3.6932079792022705
    5. 'left' → logprob: -5.068207740783691
    6. 'right' → logprob: -6.943207740783691
    7. 'Left' → logprob: -12.068207740783691
    8. 'Right' → logprob: -12.318207740783691
    9. '.b' → logprob: -13.318207740783691
    10. 'sort' → logprob: -13.443207740783691

Token 1233: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -5.633853652398102e-05
    2. '(' → logprob: -9.875056266784668
    3. 'sorted' → logprob: -13.125056266784668
    4. '(
' → logprob: -13.500056266784668
    5. ' (' → logprob: -13.625056266784668
    6. '(sort' → logprob: -15.500056266784668
    7. ' sorted' → logprob: -16.625057220458984
    8. '```' → logprob: -17.625057220458984
    9. '(selected' → logprob: -18.125057220458984
    10. '(s' → logprob: -18.375057220458984

Token 1234: '_p' (ID: 1359)
  Prédit: '(sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.4881821870803833
    2. 'sorted' → logprob: -1.4881821870803833
    3. '_p' → logprob: -2.3631820678710938
    4. 'pref' → logprob: -3.1131820678710938
    5. '(pref' → logprob: -4.988182067871094
    6. 'p' → logprob: -5.988182067871094
    7. 'all' → logprob: -5.988182067871094
    8. 'prefix' → logprob: -6.488182067871094
    9. ')' → logprob: -6.488182067871094
    10. '_pref' → logprob: -6.613182067871094

Token 1235: 'refs' (ID: 44463)
  Prédit: 'efs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'efs' → logprob: -0.9433083534240723
    2. 'pref' → logprob: -1.0683083534240723
    3. 'prefs' → logprob: -2.8183083534240723
    4. 'all' → logprob: -2.8183083534240723
    5. 'refs' → logprob: -3.4433083534240723
    6. '_pref' → logprob: -3.4433083534240723
    7. 'p' → logprob: -3.9433083534240723
    8. '_p' → logprob: -4.693308353424072
    9. 'r' → logprob: -4.818308353424072
    10. 'ef' → logprob: -4.943308353424072

Token 1236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30521997809410095
    2. '(x' → logprob: -1.4302200078964233
    3. ',x' → logprob: -3.805219888687134
    4. '(all' → logprob: -7.555220127105713
    5. ' ,' → logprob: -8.930219650268555
    6. '           ' → logprob: -8.930219650268555
    7. '(pref' → logprob: -8.930219650268555
    8. ' (' → logprob: -9.055219650268555
    9. ',p' → logprob: -9.180219650268555
    10. ')' → logprob: -9.180219650268555

Token 1237: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0430118627846241
    2. ' x' → logprob: -3.1680119037628174
    3. '           ' → logprob: -12.418011665344238
    4. '(x' → logprob: -12.668011665344238
    5. '	x' → logprob: -12.793011665344238
    6. '               ' → logprob: -14.668011665344238
    7. '   ' → logprob: -14.668011665344238
    8. ' ' → logprob: -14.918011665344238
    9. ')x' → logprob: -15.293011665344238
    10. '            ' → logprob: -15.418011665344238

Token 1238: ')' (ID: 8)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.6355899572372437
    2. ')' → logprob: -0.7605899572372437
    3. '(x' → logprob: -6.135590076446533
    4. '           ' → logprob: -8.260589599609375
    5. '```' → logprob: -8.260589599609375
    6. '+' → logprob: -9.010589599609375
    7. '(' → logprob: -10.260589599609375
    8. '       ' → logprob: -10.510589599609375
    9. ')
' → logprob: -11.135589599609375
    10. '   ' → logprob: -11.135589599609375

Token 1239: ' +' (ID: 659)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3008263409137726
    2. '           ' → logprob: -2.17582631111145
    3. '(
' → logprob: -2.55082631111145
    4. '(x' → logprob: -3.55082631111145
    5. '+' → logprob: -3.67582631111145
    6. ' +' → logprob: -5.050826549530029
    7. ')' → logprob: -6.300826549530029
    8. '```' → logprob: -6.550826549530029
    9. '       ' → logprob: -6.800826549530029
    10. ')(
' → logprob: -7.925826549530029

Token 1240: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '0' → logprob: -17.250003814697266
    4. '           ' → logprob: -17.500003814697266
    5. '   ' → logprob: -18.500003814697266
    6. '```' → logprob: -18.625003814697266
    7. '                       ' → logprob: -20.500003814697266
    8. '                   ' → logprob: -20.625003814697266
    9. '(' → logprob: -21.125003814697266
    10. '               ' → logprob: -21.375003814697266

Token 1241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -18.25
    4. '           ' → logprob: -19.25
    5. '```' → logprob: -19.625
    6. '
' → logprob: -20.375
    7. '0' → logprob: -21.5
    8. '       ' → logprob: -21.5
    9. '(' → logprob: -22.375
    10. '               ' → logprob: -22.5

Token 1242: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008472499437630177
    2. '
' → logprob: -5.508472442626953
    3. '```' → logprob: -5.883472442626953
    4. 'fen' → logprob: -7.883472442626953
    5. '<|end|>' → logprob: -7.883472442626953
    6. '        
' → logprob: -8.008472442626953
    7. '   ' → logprob: -9.008472442626953
    8. '           ' → logprob: -9.258472442626953
    9. 'Fen' → logprob: -10.133472442626953
    10. ' fen' → logprob: -10.258472442626953

Token 1243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017213537357747555
    2. '
' → logprob: -7.251721382141113
    3. 'fen' → logprob: -7.251721382141113
    4. '        
' → logprob: -8.876721382141113
    5. '```' → logprob: -9.501721382141113
    6. '   ' → logprob: -10.001721382141113
    7. 'import' → logprob: -11.376721382141113
    8. '           ' → logprob: -11.876721382141113
    9. 'from' → logprob: -11.876721382141113
    10. '    
' → logprob: -12.001721382141113

Token 1244: ' fen' (ID: 25170)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23043106496334076
    2. 'fen' (adapté à ' fen') → logprob: -1.605431079864502
    3. ' fen' → logprob: -5.730431079864502
    4. '
' → logprob: -7.230431079864502
    5. 'from' → logprob: -8.355430603027344
    6. '```' → logprob: -8.480430603027344
    7. '        
' → logprob: -8.730430603027344
    8. 'Fen' → logprob: -8.855430603027344
    9. '   ' → logprob: -8.980430603027344
    10. 'import' → logprob: -9.105430603027344

Token 1245: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0004562943649943918
    2. '       ' → logprob: -7.7504563331604
    3. '   ' → logprob: -11.375455856323242
    4. '=' → logprob: -13.125455856323242
    5. 'wick' → logprob: -13.125455856323242
    6. 'wik' → logprob: -13.625455856323242
    7. '```' → logprob: -13.750455856323242
    8. '      ' → logprob: -13.750455856323242
    9. ' w' → logprob: -14.125455856323242
    10. ' ' → logprob: -14.375455856323242

Token 1246: ' =' (ID: 314)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.023269355297088623
    2. '.' → logprob: -4.273269176483154
    3. '=' → logprob: -5.273269176483154
    4. ' =' → logprob: -5.648269176483154
    5. '_update' → logprob: -8.398269653320312
    6. '.add' → logprob: -10.398269653320312
    7. ' .' → logprob: -10.398269653320312
    8. '.query' → logprob: -10.523269653320312
    9. '.=' → logprob: -10.898269653320312
    10. ').' → logprob: -11.648269653320312

Token 1247: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.30311092734336853
    2. ' self' → logprob: -1.553110957145691
    3. 'Card' → logprob: -3.1781108379364014
    4. ' Card' → logprob: -5.0531110763549805
    5. 'Fen' → logprob: -6.6781110763549805
    6. '       ' → logprob: -7.9281110763549805
    7. '   ' → logprob: -10.17811107635498
    8. ' Fen' → logprob: -10.30311107635498
    9. 'class' → logprob: -10.67811107635498
    10. '(Card' → logprob: -10.80311107635498

Token 1248: '.F' (ID: 1737)
  Prédit: '.F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.F' → logprob: -0.31341707706451416
    2. 'Fen' → logprob: -1.3134170770645142
    3. 'F' → logprob: -9.188417434692383
    4. ' Fen' → logprob: -10.313417434692383
    5. 'class' → logprob: -12.063417434692383
    6. '.' → logprob: -12.313417434692383
    7. '.Card' → logprob: -13.063417434692383
    8. 'Class' → logprob: -13.813417434692383
    9. 'Card' → logprob: -14.063417434692383
    10. '	F' → logprob: -14.313417434692383

Token 1249: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.0031484849750995636
    2. 'Fen' → logprob: -6.378148555755615
    3. 'w' → logprob: -7.128148555755615
    4. 't' → logprob: -7.878148555755615
    5. 'e' → logprob: -9.753148078918457
    6. '{
' → logprob: -10.753148078918457
    7. '[' → logprob: -10.753148078918457
    8. 'tree' → logprob: -10.878148078918457
    9. '```' → logprob: -11.003148078918457
    10. '{' → logprob: -11.378148078918457

Token 1250: 'wick' (ID: 14105)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.12486431002616882
    2. 'wick' → logprob: -2.999864339828491
    3. '       ' → logprob: -3.374864339828491
    4. '   ' → logprob: -4.874864101409912
    5. 'ick' → logprob: -4.999864101409912
    6. '```' → logprob: -5.374864101409912
    7. 'W' → logprob: -5.749864101409912
    8. '
' → logprob: -6.124864101409912
    9. '               ' → logprob: -7.124864101409912
    10. '{
' → logprob: -7.249864101409912

Token 1251: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -5.796184723294573e-06
    2. 'tree' → logprob: -13.250005722045898
    3. '(Tree' → logprob: -13.500005722045898
    4. 'ree' → logprob: -14.250005722045898
    5. ' Tree' → logprob: -14.250005722045898
    6. '<Tree' → logprob: -14.625005722045898
    7. '```' → logprob: -15.875005722045898
    8. '       ' → logprob: -15.875005722045898
    9. '.Tree' → logprob: -16.1250057220459
    10. '_tree' → logprob: -16.1250057220459

Token 1252: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10035407543182373
    2. '(len' → logprob: -2.3503541946411133
    3. '[len' → logprob: -8.850354194641113
    4. ' len' → logprob: -13.225354194641113
    5. '           ' → logprob: -13.350354194641113
    6. '=len' → logprob: -14.975354194641113
    7. '	len' → logprob: -16.475353240966797
    8. '       ' → logprob: -16.600353240966797
    9. '(' → logprob: -16.725353240966797
    10. '<len' → logprob: -16.725353240966797

Token 1253: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.00010950337309623137
    2. 'sorted' → logprob: -9.125109672546387
    3. '_sorted' → logprob: -15.875109672546387
    4. 'fen' → logprob: -16.12510871887207
    5. '(' → logprob: -16.62510871887207
    6. 'Sorted' → logprob: -16.75010871887207
    7. '(f' → logprob: -16.87510871887207
    8. 'Fen' → logprob: -17.37510871887207
    9. ' sorted' → logprob: -17.75010871887207
    10. ')' → logprob: -17.75010871887207

Token 1254: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0007360121817328036
    2. 'sorted' → logprob: -7.750736236572266
    3. 'prefs' → logprob: -9.000736236572266
    4. 'p' → logprob: -9.000736236572266
    5. 'pref' → logprob: -10.250736236572266
    6. '(sorted' → logprob: -11.375736236572266
    7. '_pref' → logprob: -12.000736236572266
    8. 'Prefs' → logprob: -13.500736236572266
    9. ')' → logprob: -14.250736236572266
    10. '```' → logprob: -14.375736236572266

Token 1255: 'refs' (ID: 44463)
  Prédit: 'refs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'refs' → logprob: -0.282845675945282
    2. '_p' → logprob: -2.1578457355499268
    3. 'prefs' → logprob: -2.2828457355499268
    4. '_refs' → logprob: -3.7828457355499268
    5. 'Prefs' → logprob: -6.157845497131348
    6. 'p' → logprob: -6.907845497131348
    7. 'efs' → logprob: -7.782845497131348
    8. 'ref' → logprob: -8.032845497131348
    9. 'res' → logprob: -8.157845497131348
    10. 'r' → logprob: -8.157845497131348

Token 1256: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1606733202934265
    2. ')' → logprob: -1.9106733798980713
    3. '       ' → logprob: -7.910673141479492
    4. ')
' → logprob: -9.535673141479492
    5. ')

' → logprob: -12.035673141479492
    6. ')`
' → logprob: -13.285673141479492
    7. '   ' → logprob: -14.410673141479492
    8. '           ' → logprob: -14.660673141479492
    9. ')`' → logprob: -15.535673141479492
    10. '))
' → logprob: -15.785673141479492

Token 1257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014962512999773026
    2. '```' → logprob: -4.514962673187256
    3. 'for' → logprob: -6.014962673187256
    4. ' for' → logprob: -7.014962673187256
    5. 'import' → logprob: -8.639962196350098
    6. '        
' → logprob: -9.139962196350098
    7. '``' → logprob: -9.889962196350098
    8. 'fen' → logprob: -9.889962196350098
    9. ' fen' → logprob: -10.264962196350098
    10. 'left' → logprob: -10.389962196350098

Token 1258: ' ans' (ID: 3345)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.2123180329799652
    2. 'for' → logprob: -1.9623180627822876
    3. '       ' → logprob: -3.337317943572998
    4. 'res' → logprob: -4.587317943572998
    5. '```' → logprob: -6.462317943572998
    6. 'total' → logprob: -7.087317943572998
    7. 'left' → logprob: -7.087317943572998
    8. 'import' → logprob: -7.212317943572998
    9. '#' → logprob: -8.087318420410156
    10. 'result' → logprob: -8.837318420410156

Token 1259: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326894760131836
    2. ' =' → logprob: -0.7576894760131836
    3. ' +=' → logprob: -10.632689476013184
    4. '_' → logprob: -11.007689476013184
    5. ',' → logprob: -11.382689476013184
    6. '[' → logprob: -11.632689476013184
    7. '+=' → logprob: -11.757689476013184
    8. '```' → logprob: -12.632689476013184
    9. ')' → logprob: -12.757689476013184
    10. '.append' → logprob: -12.882689476013184

Token 1260: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014163628220558167
    2. ' ' → logprob: -4.264163494110107
    3. ' ' → logprob: -16.764163970947266
    4. '       ' → logprob: -17.264163970947266
    5. '   ' → logprob: -17.389163970947266
    6. '=' → logprob: -18.514163970947266
    7. '
' → logprob: -19.014163970947266
    8. '           ' → logprob: -19.264163970947266
    9. '        ' → logprob: -19.389163970947266
    10. '```' → logprob: -19.514163970947266

Token 1261: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -19.375001907348633
    4. 'ans' → logprob: -19.750001907348633
    5. '1' → logprob: -21.125001907348633
    6. '       ' → logprob: -21.625001907348633
    7. '۰' → logprob: -22.000001907348633
    8. '000' → logprob: -22.125001907348633
    9. ' ' → logprob: -22.375001907348633
    10. '=' → logprob: -22.625001907348633

Token 1262: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025540729984641075
    2. '```' → logprob: -4.150540828704834
    3. ' for' → logprob: -5.775540828704834
    4. 'for' → logprob: -5.900540828704834
    5. ' fen' → logprob: -6.150540828704834
    6. 'fen' → logprob: -7.025540828704834
    7. 'left' → logprob: -8.900540351867676
    8. ' left' → logprob: -9.025540351867676
    9. 'Fen' → logprob: -9.525540351867676
    10. '``' → logprob: -9.775540351867676

Token 1263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001394161517964676
    2. 'for' → logprob: -9.750139236450195
    3. '```' → logprob: -9.875139236450195
    4. 'import' → logprob: -10.625139236450195
    5. 'fen' → logprob: -12.875139236450195
    6. '   ' → logprob: -13.500139236450195
    7. ' for' → logprob: -14.625139236450195
    8. '        
' → logprob: -14.875139236450195
    9. '           ' → logprob: -15.750139236450195
    10. 'from' → logprob: -16.000139236450195

Token 1264: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016126571223139763
    2. '       ' → logprob: -4.26612663269043
    3. 'fen' → logprob: -7.26612663269043
    4. 'import' → logprob: -7.39112663269043
    5. '```' → logprob: -7.64112663269043
    6. 'left' → logprob: -9.14112663269043
    7. ' for' → logprob: -10.14112663269043
    8. '``' → logprob: -12.01612663269043
    9. '   ' → logprob: -12.14112663269043
    10. '#' (adapté à ' #') → logprob: -12.76612663269043

Token 1265: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023464540019631386
    2. 'fen' → logprob: -4.148464679718018
    3. '       ' → logprob: -5.023464679718018
    4. 'import' → logprob: -7.398464679718018
    5. '#' → logprob: -9.14846420288086
    6. '```' → logprob: -9.77346420288086
    7. ' for' → logprob: -11.27346420288086
    8. 'from' → logprob: -11.52346420288086
    9. '   ' → logprob: -11.77346420288086
    10. '``' → logprob: -12.14846420288086

Token 1266: ' will' (ID: 738)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7833561301231384
    2. 'for' → logprob: -0.7833561301231384
    3. '       ' → logprob: -3.033356189727783
    4. '   ' → logprob: -4.033356189727783
    5. '
' → logprob: -4.783356189727783
    6. '```' → logprob: -4.908356189727783
    7. ' ' → logprob: -7.158356189727783
    8. '    ' → logprob: -7.408356189727783
    9. '``' → logprob: -7.658356189727783
    10. ' =' → logprob: -8.033355712890625

Token 1267: ' iterate' (ID: 63166)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5769863724708557
    2. 'import' → logprob: -1.201986312866211
    3. ' for' → logprob: -2.951986312866211
    4. 'fen' → logprob: -3.326986312866211
    5. '   ' → logprob: -4.451986312866211
    6. '       ' → logprob: -4.576986312866211
    7. 'update' → logprob: -4.826986312866211
    8. '```' → logprob: -4.826986312866211
    9. ' fen' → logprob: -5.076986312866211
    10. 'insert' → logprob: -6.576986312866211

Token 1268: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5019211173057556
    2. ' over' → logprob: -1.2519211769104004
    3. ' r' → logprob: -3.2519211769104004
    4. 'over' → logprob: -4.0019211769104
    5. ' for' → logprob: -4.1269211769104
    6. 'for' → logprob: -4.3769211769104
    7. 'i' → logprob: -4.7519211769104
    8. '       ' → logprob: -5.3769211769104
    9. ' through' → logprob: -5.6269211769104
    10. '0' → logprob: -6.0019211769104

Token 1269: ' over' (ID: 1072)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5340330600738525
    2. ' =' → logprob: -1.5340330600738525
    3. 'for' → logprob: -2.1590330600738525
    4. ' in' → logprob: -3.4090330600738525
    5. ' for' → logprob: -4.034032821655273
    6. 'in' → logprob: -4.534032821655273
    7. 'from' → logprob: -5.409032821655273
    8. '
' → logprob: -5.909032821655273
    9. ' +=' → logprob: -5.909032821655273
    10. '0' → logprob: -6.284032821655273

Token 1270: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015074820257723331
    2. ' range' → logprob: -6.50150728225708
    3. '   ' → logprob: -12.251507759094238
    4. 'all' → logprob: -15.876507759094238
    5. '       ' → logprob: -16.251506805419922
    6. '(range' → logprob: -16.751506805419922
    7. '
' → logprob: -17.501506805419922
    8. 'pref' → logprob: -17.876506805419922
    9. 'self' → logprob: -18.001506805419922
    10. '	range' → logprob: -18.126506805419922

Token 1271: 'K' (ID: 42)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2538854777812958
    2. 'range' → logprob: -1.5038855075836182
    3. ' range' → logprob: -7.253885269165039
    4. 'self' → logprob: -7.378885269165039
    5. 'r' → logprob: -7.503885269165039
    6. '   ' → logprob: -10.628885269165039
    7. '(range' → logprob: -11.253885269165039
    8. '
' → logprob: -11.753885269165039
    9. ']' → logprob: -12.253885269165039
    10. '1' → logprob: -12.628885269165039

Token 1272: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.49203747510910034
    2. ',' → logprob: -1.3670375347137451
    3. ' -' → logprob: -2.992037534713745
    4. '       ' → logprob: -3.492037534713745
    5. '
' → logprob: -4.367037296295166
    6. ':' → logprob: -4.867037296295166
    7. '           ' → logprob: -4.992037296295166
    8. ':]' → logprob: -5.367037296295166
    9. '...' → logprob: -5.617037296295166
    10. ']' → logprob: -5.617037296295166

Token 1273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. 'self' → logprob: -12.125012397766113
    3. '```' → logprob: -13.250012397766113
    4. '       ' → logprob: -13.875012397766113
    5. '   ' → logprob: -13.875012397766113
    6. '-' → logprob: -14.125012397766113
    7. ' ' → logprob: -14.250012397766113
    8. '           ' → logprob: -14.500012397766113
    9. '0' → logprob: -14.500012397766113
    10. 'K' → logprob: -15.375012397766113

Token 1274: ' ..' (ID: 8548)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38327398896217346
    2. ':' → logprob: -2.2582740783691406
    3. ']:
' → logprob: -3.1332740783691406
    4. ':]' → logprob: -3.1332740783691406
    5. ']' → logprob: -3.6332740783691406
    6. ' ,' → logprob: -3.8832740783691406
    7. ',
' → logprob: -4.133274078369141
    8. '...' → logprob: -4.508274078369141
    9. ':
' → logprob: -4.508274078369141
    10. '],' → logprob: -4.633274078369141

Token 1275: ' N' (ID: 478)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0026057446375489235
    2. ' self' → logprob: -6.00260591506958
    3. '0' → logprob: -10.502605438232422
    4. '       ' → logprob: -10.627605438232422
    5. 'range' → logprob: -10.752605438232422
    6. '
' → logprob: -10.877605438232422
    7. '(self' → logprob: -11.127605438232422
    8. '           ' → logprob: -12.127605438232422
    9. 'r' → logprob: -12.127605438232422
    10. '   ' → logprob: -12.377605438232422

Token 1276: '-' (ID: 12)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.4384995698928833
    2. '):
' → logprob: -1.4384995698928833
    3. '-' → logprob: -2.8134994506835938
    4. '       ' → logprob: -3.5634994506835938
    5. ']:' → logprob: -4.313499450683594
    6. ',' → logprob: -5.938499450683594
    7. '
' → logprob: -5.938499450683594
    8. ']' → logprob: -6.063499450683594
    9. '):' → logprob: -6.313499450683594
    10. '           ' → logprob: -6.438499450683594

Token 1277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.97024549683556e-05
    2. '0' → logprob: -10.375080108642578
    3. '-' → logprob: -10.625080108642578
    4. ' ' → logprob: -11.375080108642578
    5. '```' → logprob: -12.000080108642578
    6. '   ' → logprob: -12.500080108642578
    7. '       ' → logprob: -14.250080108642578
    8. '
' → logprob: -15.125080108642578
    9. ')' → logprob: -15.375080108642578
    10. '#' → logprob: -15.750080108642578

Token 1278: '],' (ID: 2155)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6031211614608765
    2. ']:
' → logprob: -1.7281211614608765
    3. ':
' → logprob: -2.228121280670166
    4. ']' → logprob: -3.103121280670166
    5. ']
' → logprob: -3.353121280670166
    6. '
' → logprob: -3.353121280670166
    7. ',' → logprob: -3.728121280670166
    8. '           ' → logprob: -5.228121280670166
    9. '):
' → logprob: -5.478121280670166
    10. ':' → logprob: -5.478121280670166

Token 1279: ' and' (ID: 326)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -1.1685736179351807
    2. '       ' → logprob: -1.5435736179351807
    3. ' fen' → logprob: -1.6685736179351807
    4. 'for' → logprob: -1.7935736179351807
    5. ' for' → logprob: -2.4185736179351807
    6. ' and' → logprob: -4.918573379516602
    7. '   ' → logprob: -5.043573379516602
    8. 'import' → logprob: -5.418573379516602
    9. '           ' → logprob: -5.793573379516602
    10. '
' → logprob: -6.168573379516602

Token 1280: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1244179904460907
    2. 'fen' → logprob: -2.999418020248413
    3. ' for' → logprob: -3.499418020248413
    4. '       ' → logprob: -4.374417781829834
    5. '   ' → logprob: -4.499417781829834
    6. 'import' → logprob: -5.749417781829834
    7. ' fen' → logprob: -5.874417781829834
    8. '           ' → logprob: -6.499417781829834
    9. '
' → logprob: -6.624417781829834
    10. 'left' → logprob: -6.874417781829834

Token 1281: ' suitable' (ID: 13127)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9988747239112854
    2. '       ' → logprob: -1.4988746643066406
    3. ' for' → logprob: -2.1238746643066406
    4. 'left' → logprob: -2.4988746643066406
    5. 'l' → logprob: -2.8738746643066406
    6. '0' → logprob: -2.8738746643066406
    7. 'r' → logprob: -4.248874664306641
    8. '           ' → logprob: -4.248874664306641
    9. 'import' → logprob: -4.748874664306641
    10. '   ' → logprob: -4.748874664306641

Token 1282: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.35967954993247986
    2. 'r' → logprob: -1.6096795797348022
    3. 'left' → logprob: -2.7346794605255127
    4. 'for' → logprob: -3.7346794605255127
    5. '   ' → logprob: -6.109679698944092
    6. '       ' → logprob: -6.109679698944092
    7. 'prefix' → logprob: -6.359679698944092
    8. 'range' → logprob: -6.859679698944092
    9. '
' → logprob: -7.109679698944092
    10. 'indices' → logprob: -7.234679698944092

Token 1283: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10308369249105453
    2. ' for' → logprob: -2.853083610534668
    3. 'for' → logprob: -4.478083610534668
    4. ',' → logprob: -5.228083610534668
    5. ' =' → logprob: -5.353083610534668
    6. '
' → logprob: -5.853083610534668
    7. '=' → logprob: -6.103083610534668
    8. '[' → logprob: -6.478083610534668
    9. '        
' → logprob: -6.478083610534668
    10. '           ' → logprob: -6.603083610534668

Token 1284: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00028493450372479856
    2. ' range' → logprob: -8.750285148620605
    3. '   ' → logprob: -10.125285148620605
    4. 'pref' → logprob: -10.375285148620605
    5. 'prefix' → logprob: -10.625285148620605
    6. '
' → logprob: -11.500285148620605
    7. '[' → logprob: -12.125285148620605
    8. 'r' → logprob: -12.500285148620605
    9. 'sorted' → logprob: -12.625285148620605
    10. '       ' → logprob: -13.250285148620605

Token 1285: '0' (ID: 15)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6392276287078857
    2. '0' → logprob: -0.7642276287078857
    3. 'range' → logprob: -5.389227867126465
    4. 'K' → logprob: -6.389227867126465
    5. '
' → logprob: -9.639227867126465
    6. '(r' → logprob: -10.139227867126465
    7. 'min' → logprob: -10.264227867126465
    8. 'pref' → logprob: -10.264227867126465
    9. ']' → logprob: -10.514227867126465
    10. 'self' → logprob: -10.889227867126465

Token 1286: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.05490947514772415
    2. '...' → logprob: -3.3049094676971436
    3. ',' → logprob: -4.554909706115723
    4. ' ..' → logprob: -5.304909706115723
    5. 'r' → logprob: -7.929909706115723
    6. ',r' → logprob: -8.554909706115723
    7. ' ...' → logprob: -8.929909706115723
    8. '       ' → logprob: -9.179909706115723
    9. '           ' → logprob: -9.679909706115723
    10. ' ,' → logprob: -9.804909706115723

Token 1287: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0018092949176207185
    2. 'min' → logprob: -6.501809120178223
    3. '(r' → logprob: -9.126809120178223
    4. '   ' → logprob: -9.126809120178223
    5. 'K' → logprob: -10.751809120178223
    6. ' r' → logprob: -10.751809120178223
    7. '
' → logprob: -11.501809120178223
    8. '           ' → logprob: -12.251809120178223
    9. '```' → logprob: -12.251809120178223
    10. '       ' → logprob: -12.501809120178223

Token 1288: '-K' (ID: 12249)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8605779409408569
    2. ']:
' → logprob: -1.235577940940857
    3. '+' → logprob: -1.360577940940857
    4. ']
' → logprob: -4.3605780601501465
    5. ' +' → logprob: -5.1105780601501465
    6. ']:' → logprob: -5.6105780601501465
    7. ' -' → logprob: -6.7355780601501465
    8. ']+' → logprob: -6.8605780601501465
    9. '],' → logprob: -6.9855780601501465
    10. '-' → logprob: -7.1105780601501465

Token 1289: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009070320054888725
    2. ']' → logprob: -4.88407039642334
    3. ' +' → logprob: -7.25907039642334
    4. '+]' → logprob: -8.13407039642334
    5. ']+' → logprob: -8.50907039642334
    6. '+
' → logprob: -9.00907039642334
    7. ']:
' → logprob: -10.00907039642334
    8. ']
' → logprob: -10.13407039642334
    9. '```' → logprob: -11.38407039642334
    10. '       ' → logprob: -12.38407039642334

Token 1290: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000122608442325145
    2. '0' → logprob: -9.125123023986816
    3. ' ' → logprob: -12.750123023986816
    4. '```' → logprob: -12.750123023986816
    5. '
' → logprob: -13.125123023986816
    6. '+' → logprob: -13.375123023986816
    7. ')' → logprob: -14.250123023986816
    8. '   ' → logprob: -14.312623023986816
    9. '-' → logprob: -15.000123023986816
    10. '(' → logprob: -15.187623023986816

Token 1291: ']
' (ID: 1592)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.24699658155441284
    2. ']' → logprob: -1.6219966411590576
    3. ']:' → logprob: -4.6219964027404785
    4. '+' → logprob: -5.2469964027404785
    5. ']
' → logprob: -5.7469964027404785
    6. ']:

' → logprob: -6.6219964027404785
    7. '       ' → logprob: -7.6219964027404785
    8. '           ' → logprob: -8.121996879577637
    9. '],' → logprob: -8.371996879577637
    10. ' ]' → logprob: -8.871996879577637

Token 1292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005502560641616583
    2. ' for' → logprob: -5.505502700805664
    3. 'for' → logprob: -7.005502700805664
    4. '```' → logprob: -8.255502700805664
    5. '
' → logprob: -9.880502700805664
    6. '   ' → logprob: -10.130502700805664
    7. ',' → logprob: -10.130502700805664
    8. '<|end|>' → logprob: -10.255502700805664
    9. '           ' → logprob: -10.505502700805664
    10. '        
' → logprob: -11.130502700805664

Token 1293: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2304113805294037
    2. 'for' → logprob: -2.2304112911224365
    3. ' for' → logprob: -2.4804112911224365
    4. '```' → logprob: -4.355411529541016
    5. 'import' → logprob: -7.105411529541016
    6. '
' → logprob: -8.105411529541016
    7. 'fen' → logprob: -8.605411529541016
    8. '        
' → logprob: -9.105411529541016
    9. '``' → logprob: -9.105411529541016
    10. ' fen' → logprob: -9.855411529541016

Token 1294: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08302944153547287
    2. 'for' → logprob: -2.5830295085906982
    3. ' for' → logprob: -6.208029270172119
    4. '```' → logprob: -7.083029270172119
    5. '   ' → logprob: -8.083029747009277
    6. 'fen' → logprob: -8.083029747009277
    7. '
' → logprob: -8.458029747009277
    8. 'from' → logprob: -8.583029747009277
    9. '           ' → logprob: -9.208029747009277
    10. '        
' → logprob: -9.833029747009277

Token 1295: ' fen' (ID: 25170)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8481163382530212
    2. ' l' → logprob: -1.473116397857666
    3. 'r' → logprob: -1.598116397857666
    4. ' r' → logprob: -2.973116397857666
    5. 'i' → logprob: -3.223116397857666
    6. ' i' → logprob: -3.598116397857666
    7. ' fen' → logprob: -5.098116397857666
    8. '   ' → logprob: -5.223116397857666
    9. 'pos' → logprob: -6.348116397857666
    10. ' prefix' → logprob: -6.473116397857666

Token 1296: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0003001888981088996
    2. '       ' → logprob: -8.500300407409668
    3. '   ' → logprob: -9.875300407409668
    4. '
' → logprob: -10.875300407409668
    5. ' w' → logprob: -12.125300407409668
    6. 'r' → logprob: -12.375300407409668
    7. '``' → logprob: -12.500300407409668
    8. '```' → logprob: -12.750300407409668
    9. '      ' → logprob: -14.000300407409668
    10. '_w' → logprob: -14.250300407409668

Token 1297: ',' (ID: 11)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.004464654717594385
    2. 'update' → logprob: -6.879464626312256
    3. '   ' → logprob: -7.129464626312256
    4. '       ' → logprob: -7.379464626312256
    5. ' =' → logprob: -7.629464626312256
    6. 'fen' → logprob: -7.879464626312256
    7. '.query' → logprob: -8.254465103149414
    8. '.add' → logprob: -8.379465103149414
    9. ' fen' → logprob: -8.629465103149414
    10. '=' → logprob: -8.879465103149414

Token 1298: ' we' (ID: 581)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.44299179315567017
    2. 'for' → logprob: -1.1929917335510254
    3. ' fen' → logprob: -3.6929917335510254
    4. '#' → logprob: -4.817991733551025
    5. '   ' → logprob: -5.317991733551025
    6. ' for' → logprob: -5.442991733551025
    7. '       ' → logprob: -5.567991733551025
    8. 'i' → logprob: -5.817991733551025
    9. 'l' → logprob: -5.942991733551025
    10. 'left' → logprob: -6.942991733551025

Token 1299: ' add' (ID: 1147)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.9192199110984802
    2. '.update' → logprob: -1.294219970703125
    3. '       ' → logprob: -1.794219970703125
    4. '   ' → logprob: -3.169219970703125
    5. '=' → logprob: -3.669219970703125
    6. ' update' → logprob: -3.794219970703125
    7. 'for' → logprob: -4.044219970703125
    8. '
' → logprob: -4.794219970703125
    9. ' =' → logprob: -4.794219970703125
    10. ' fen' → logprob: -4.919219970703125

Token 1300: ' prefix' (ID: 18633)
  Prédit: 'pref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pref' → logprob: -0.2622591257095337
    2. '0' → logprob: -1.7622591257095337
    3. 'r' → logprob: -4.012259006500244
    4. '   ' → logprob: -4.387259006500244
    5. '(pref' → logprob: -5.137259006500244
    6. '(' → logprob: -5.137259006500244
    7. '       ' → logprob: -5.512259006500244
    8. ' pref' → logprob: -5.637259006500244
    9. '           ' → logprob: -6.012259006500244
    10. 'prefix' → logprob: -6.512259006500244

Token 1301: ' sums' (ID: 73121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2688088417053223
    2. '_sum' → logprob: -1.7688088417053223
    3. 'i' → logprob: -2.1438088417053223
    4. 'sum' → logprob: -2.3938088417053223
    5. '   ' → logprob: -2.5188088417053223
    6. '[i' → logprob: -2.7688088417053223
    7. '_index' → logprob: -3.3938088417053223
    8. '_s' → logprob: -3.5188088417053223
    9. ' sums' → logprob: -3.6438088417053223
    10. 'r' → logprob: -3.6438088417053223

Token 1302: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3547712564468384
    2. '[' → logprob: -1.4797712564468384
    3. ' at' → logprob: -1.9797712564468384
    4. 'for' → logprob: -2.479771137237549
    5. '(' → logprob: -3.104771137237549
    6. '(pref' → logprob: -3.479771137237549
    7. '=' → logprob: -3.604771137237549
    8. 'at' → logprob: -3.604771137237549
    9. '   ' → logprob: -3.854771137237549
    10. '[i' → logprob: -4.354771137237549

Token 1303: ' l' (ID: 305)
  Prédit: 'pref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pref' → logprob: -0.48794645071029663
    2. 'r' → logprob: -1.2379465103149414
    3. 'l' → logprob: -2.9879465103149414
    4. '0' → logprob: -3.6129465103149414
    5. 'prefix' → logprob: -4.987946510314941
    6. 'range' → logprob: -5.112946510314941
    7. ' pref' → logprob: -7.112946510314941
    8. '[' → logprob: -7.487946510314941
    9. '(pref' → logprob: -7.487946510314941
    10. 'i' → logprob: -7.737946510314941

Token 1304: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3679561913013458
    2. ' for' → logprob: -1.6179561614990234
    3. 'for' → logprob: -2.8679561614990234
    4. '```' → logprob: -4.242956161499023
    5. 'r' → logprob: -5.242956161499023
    6. '
' → logprob: -5.492956161499023
    7. '           ' → logprob: -5.617956161499023
    8. ' =' → logprob: -5.867956161499023
    9. ')' → logprob: -5.867956161499023
    10. '   ' → logprob: -6.117956161499023

Token 1305: ' we' (ID: 581)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2761816084384918
    2. '0' → logprob: -1.9011815786361694
    3. 'we' → logprob: -3.151181697845459
    4. 'l' → logprob: -3.401181697845459
    5. 'fen' → logprob: -5.276181697845459
    6. '1' → logprob: -6.026181697845459
    7. 'indices' → logprob: -6.651181697845459
    8. '   ' → logprob: -7.026181697845459
    9. ' we' → logprob: -7.276181697845459
    10. 'right' → logprob: -7.401181697845459

Token 1306: ' go' (ID: 810)
  Prédit: 'advance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'advance' → logprob: -1.441519021987915
    2. 'increment' → logprob: -1.691519021987915
    3. 'for' → logprob: -2.316519021987915
    4. 'go' → logprob: -2.316519021987915
    5. 'iterate' → logprob: -2.316519021987915
    6. 'add' → logprob: -3.066519021987915
    7. ' for' → logprob: -3.316519021987915
    8. ' iterate' → logprob: -3.566519021987915
    9. '
' → logprob: -3.566519021987915
    10. 'r' → logprob: -3.691519021987915

Token 1307: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11348243802785873
    2. 'for' → logprob: -2.7384824752807617
    3. ' for' → logprob: -3.7384824752807617
    4. '        
' → logprob: -5.113482475280762
    5. '```' → logprob: -5.738482475280762
    6. '0' → logprob: -6.113482475280762
    7. ',' → logprob: -6.488482475280762
    8. '
' → logprob: -6.613482475280762
    9. '   ' → logprob: -7.113482475280762
    10. '=' → logprob: -7.363482475280762

Token 1308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3757995367050171
    2. '```' → logprob: -1.250799536705017
    3. ' for' → logprob: -4.000799655914307
    4. '``' → logprob: -5.625799655914307
    5. 'for' → logprob: -6.375799655914307
    6. '           ' → logprob: -6.750799655914307
    7. '        
' → logprob: -6.875799655914307
    8. '
' → logprob: -8.375799179077148
    9. '`' → logprob: -8.625799179077148
    10. '   ' → logprob: -8.750799179077148

Token 1309: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9191491007804871
    2. 'for' → logprob: -1.0441491603851318
    3. ' for' → logprob: -2.044149160385132
    4. 'fen' → logprob: -3.044149160385132
    5. '```' → logprob: -3.419149160385132
    6. ' fen' → logprob: -3.544149160385132
    7. 'r' → logprob: -5.794148921966553
    8. '        
' → logprob: -6.544148921966553
    9. '
' → logprob: -6.669148921966553
    10. '   ' → logprob: -6.669148921966553

Token 1310: ' Add' (ID: 4063)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46847450733184814
    2. 'fen' → logprob: -1.2184745073318481
    3. '       ' → logprob: -2.8434743881225586
    4. 'import' → logprob: -5.468474388122559
    5. 'left' → logprob: -5.718474388122559
    6. 'r' → logprob: -5.843474388122559
    7. 'l' → logprob: -6.093474388122559
    8. ' fen' → logprob: -6.218474388122559
    9. 'i' → logprob: -6.593474388122559
    10. '   ' → logprob: -6.718474388122559

Token 1311: ' prefix' (ID: 18633)
  Prédit: ' fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fen' → logprob: -0.39904704689979553
    2. 'fen' → logprob: -1.6490470170974731
    3. '0' → logprob: -2.8990471363067627
    4. '       ' → logprob: -3.2740471363067627
    5. 'pref' → logprob: -3.6490471363067627
    6. ' pref' → logprob: -5.024046897888184
    7. '   ' → logprob: -5.899046897888184
    8. '           ' → logprob: -6.274046897888184
    9. '(pref' → logprob: -6.524046897888184
    10. 'left' → logprob: -7.399046897888184

Token 1312: ' sums' (ID: 73121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1059595346450806
    2. '_s' → logprob: -1.4809595346450806
    3. '   ' → logprob: -2.105959415435791
    4. 'sum' → logprob: -2.230959415435791
    5. '_sum' → logprob: -2.855959415435791
    6. '_' → logprob: -2.980959415435791
    7. '[' → logprob: -3.230959415435791
    8. ' sums' → logprob: -4.605959415435791
    9. '       ' → logprob: -4.605959415435791
    10. '(' → logprob: -4.980959415435791

Token 1313: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4075400233268738
    2. '0' → logprob: -1.7825400829315186
    3. '(' → logprob: -2.4075400829315186
    4. '       ' → logprob: -2.9075400829315186
    5. 'for' → logprob: -5.1575398445129395
    6. ' =' → logprob: -5.5325398445129395
    7. '=' → logprob: -5.6575398445129395
    8. '   ' → logprob: -6.0325398445129395
    9. '[r' → logprob: -6.6575398445129395
    10. 'r' → logprob: -7.2825398445129395

Token 1314: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19177363812923431
    2. 'l' → logprob: -2.5667736530303955
    3. 'r' → logprob: -2.9417736530303955
    4. 'i' → logprob: -3.6917736530303955
    5. ' l' → logprob: -4.566773414611816
    6. ' i' → logprob: -5.691773414611816
    7. ' r' → logprob: -5.941773414611816
    8. ' ' → logprob: -6.191773414611816
    9. '```' → logprob: -7.941773414611816
    10. 'left' → logprob: -8.316773414611816

Token 1315: ' <' (ID: 464)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.979834258556366
    2. '0' → logprob: -1.7298343181610107
    3. '=' → logprob: -1.8548343181610107
    4. ' =' → logprob: -2.2298343181610107
    5. '       ' → logprob: -2.3548343181610107
    6. '[' → logprob: -2.6048343181610107
    7. '   ' → logprob: -5.479834079742432
    8. 'for' → logprob: -5.979834079742432
    9. '           ' → logprob: -6.979834079742432
    10. 'def' → logprob: -7.104834079742432

Token 1316: ' K' (ID: 658)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30964770913124084
    2. 'r' → logprob: -1.8096476793289185
    3. 'K' → logprob: -3.184647798538208
    4. '0' → logprob: -4.184647560119629
    5. 'self' → logprob: -4.434647560119629
    6. '=r' → logprob: -5.184647560119629
    7. 'left' → logprob: -5.434647560119629
    8. ' =' → logprob: -5.434647560119629
    9. 'len' → logprob: -5.434647560119629
    10. ' K' → logprob: -5.684647560119629

Token 1317: '-' (ID: 12)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10598661005496979
    2. ' for' → logprob: -3.1059865951538086
    3. 'for' → logprob: -3.7309865951538086
    4. '
' → logprob: -3.8559865951538086
    5. '        
' → logprob: -6.105986595153809
    6. '   ' → logprob: -6.730986595153809
    7. ' =' → logprob: -7.105986595153809
    8. '           ' → logprob: -7.230986595153809
    9. '=' → logprob: -7.355986595153809
    10. ' 
' → logprob: -7.605986595153809

Token 1318: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.3179194927215576
    2. '1' → logprob: -1.6929194927215576
    3. '           ' → logprob: -1.6929194927215576
    4. '       ' → logprob: -1.9429194927215576
    5. 'r' → logprob: -2.9429194927215576
    6. 'K' → logprob: -3.0679194927215576
    7. '```' → logprob: -3.4429194927215576
    8. '=' → logprob: -3.6929194927215576
    9. ' -' → logprob: -4.442919731140137
    10. '+' → logprob: -4.692919731140137

Token 1319: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014811472967267036
    2. ' for' → logprob: -5.1398115158081055
    3. 'for' → logprob: -5.5148115158081055
    4. '
' → logprob: -6.0148115158081055
    5. '```' → logprob: -6.7648115158081055
    6. '           ' → logprob: -8.014811515808105
    7. '        
' → logprob: -8.389811515808105
    8. '   ' → logprob: -8.639811515808105
    9. ',' → logprob: -9.264811515808105
    10. '``' → logprob: -10.014811515808105

Token 1320: ' start' (ID: 1604)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8239153027534485
    2. 'K' → logprob: -0.8239153027534485
    3. ' K' → logprob: -3.0739152431488037
    4. 'l' → logprob: -3.4489152431488037
    5. 'r' → logprob: -3.5739152431488037
    6. ' l' → logprob: -5.198915481567383
    7. ' r' → logprob: -5.948915481567383
    8. ' ' → logprob: -6.198915481567383
    9. '       ' → logprob: -6.573915481567383
    10. '   ' → logprob: -6.698915481567383

Token 1321: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2107897251844406
    2. '       ' → logprob: -1.710789680480957
    3. ' for' → logprob: -4.835789680480957
    4. 'while' → logprob: -7.710789680480957
    5. '```' → logprob: -8.085789680480957
    6. 'fen' → logprob: -8.335789680480957
    7. 'i' → logprob: -8.585789680480957
    8. '   ' → logprob: -9.460789680480957
    9. '        
' → logprob: -10.460789680480957
    10. '
' → logprob: -10.585789680480957

Token 1322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011447181925177574
    2. '```' → logprob: -4.636446952819824
    3. 'for' → logprob: -7.136446952819824
    4. ' for' → logprob: -7.636446952819824
    5. ' fen' → logprob: -9.386446952819824
    6. '   ' → logprob: -9.386446952819824
    7. '
' → logprob: -9.636446952819824
    8. '        
' → logprob: -9.886446952819824
    9. '           ' → logprob: -10.136446952819824
    10. '``' → logprob: -10.511446952819824

Token 1323: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.38184064626693726
    2. '       ' → logprob: -1.881840705871582
    3. ' for' → logprob: -1.881840705871582
    4. ' fen' → logprob: -5.131840705871582
    5. 'fen' → logprob: -5.506840705871582
    6. '```' → logprob: -6.006840705871582
    7. '   ' → logprob: -8.756840705871582
    8. '``' → logprob: -9.631840705871582
    9. '        
' → logprob: -10.506840705871582
    10. 'i' → logprob: -10.881840705871582

Token 1324: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0175824873149395
    2. 'l' → logprob: -4.642582416534424
    3. ' i' → logprob: -5.267582416534424
    4. '_' → logprob: -7.017582416534424
    5. '_i' → logprob: -7.392582416534424
    6. '   ' → logprob: -7.642582416534424
    7. '0' → logprob: -7.892582416534424
    8. ' l' → logprob: -9.017582893371582
    9. '_l' → logprob: -10.392582893371582
    10. 'idx' → logprob: -10.392582893371582

Token 1325: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055241961032152176
    2. 'in' → logprob: -2.9302420616149902
    3. '0' → logprob: -8.305241584777832
    4. '(' → logprob: -9.680241584777832
    5. '=' → logprob: -10.555241584777832
    6. '```' → logprob: -12.430241584777832
    7. '1' → logprob: -12.555241584777832
    8. ' i' → logprob: -13.055241584777832
    9. 'range' → logprob: -13.055241584777832
    10. ',' → logprob: -13.180241584777832

Token 1326: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1595829725265503
    2. '0' → logprob: -2.15958309173584
    3. ' range' → logprob: -3.78458309173584
    4. 'K' → logprob: -4.78458309173584
    5. 'i' → logprob: -7.78458309173584
    6. 'self' → logprob: -8.28458309173584
    7. ' ' → logprob: -9.28458309173584
    8. 'in' → logprob: -9.28458309173584
    9. ' K' → logprob: -9.53458309173584
    10. '1' → logprob: -10.28458309173584

Token 1327: '(self' (ID: 2402)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5460240840911865
    2. 'self' → logprob: -0.9210240840911865
    3. 'K' → logprob: -4.421024322509766
    4. '1' → logprob: -5.796024322509766
    5. '(self' → logprob: -6.296024322509766
    6. 'Card' → logprob: -6.421024322509766
    7. '(K' → logprob: -6.546024322509766
    8. '(' → logprob: -7.046024322509766
    9. '(C' → logprob: -7.921024322509766
    10. ' self' → logprob: -8.046024322509766

Token 1328: '.K' (ID: 14475)
  Prédit: '.K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.K' → logprob: -0.016475824639201164
    2. 'K' → logprob: -4.266475677490234
    3. 'self' → logprob: -6.391475677490234
    4. '.L' → logprob: -7.766475677490234
    5. 'def' → logprob: -9.641475677490234
    6. 'left' → logprob: -9.766475677490234
    7. '.Card' → logprob: -11.141475677490234
    8. '.left' → logprob: -11.516475677490234
    9. '   ' → logprob: -11.641475677490234
    10. '_K' → logprob: -11.766475677490234

Token 1329: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25687533617019653
    2. ' -' → logprob: -1.6318752765655518
    3. '):
' → logprob: -3.8818752765655518
    4. '):' → logprob: -4.881875514984131
    5. ',' → logprob: -7.006875514984131
    6. '   ' → logprob: -7.256875514984131
    7. '       ' → logprob: -7.256875514984131
    8. '           ' → logprob: -8.756875038146973
    9. ' ' → logprob: -10.131875038146973
    10. '  ' → logprob: -10.256875038146973

Token 1330: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -15.000000953674316
    3. '   ' → logprob: -15.250000953674316
    4. '2' → logprob: -15.500000953674316
    5. '```' → logprob: -17.250001907348633
    6. '-' → logprob: -17.375001907348633
    7. '
' → logprob: -17.375001907348633
    8. '       ' → logprob: -17.375001907348633
    9. '           ' → logprob: -17.875001907348633
    10. '0' → logprob: -18.125001907348633

Token 1331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018411019118502736
    2. '2' → logprob: -8.625184059143066
    3. '0' → logprob: -12.625184059143066
    4. '```' → logprob: -14.875184059143066
    5. ' ' → logprob: -15.000184059143066
    6. '-' → logprob: -15.500184059143066
    7. '   ' → logprob: -15.625184059143066
    8. '
' → logprob: -16.437685012817383
    9. '3' → logprob: -16.500185012817383
    10. '       ' → logprob: -17.312685012817383

Token 1332: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.031479641795158386
    2. '+' → logprob: -3.656479597091675
    3. '):' → logprob: -5.531479835510254
    4. '           ' → logprob: -7.781479835510254
    5. '       ' → logprob: -7.906479835510254
    6. ' +' → logprob: -8.031479835510254
    7. '   ' → logprob: -9.906479835510254
    8. ':
' → logprob: -10.906479835510254
    9. '):
' → logprob: -11.906479835510254
    10. '```' → logprob: -12.031479835510254

Token 1333: '           ' (ID: 352)
  Prédit: ' fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fen' → logprob: -1.0300620794296265
    2. '           ' → logprob: -1.1550620794296265
    3. 'fen' → logprob: -1.2800620794296265
    4. '       ' → logprob: -3.405062198638916
    5. '   ' → logprob: -4.405062198638916
    6. '```' → logprob: -5.905062198638916
    7. ':
' → logprob: -7.405062198638916
    8. '):
' → logprob: -8.280061721801758
    9. ':' → logprob: -8.780061721801758
    10. 'Fen' → logprob: -8.905061721801758

Token 1334: ' fen' (ID: 25170)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' (adapté à ' fen') → logprob: -0.006177394650876522
    2. ' fen' → logprob: -5.3811774253845215
    3. 'idx' → logprob: -7.2561774253845215
    4. '           ' → logprob: -7.7561774253845215
    5. '```' → logprob: -8.006176948547363
    6. 'pos' → logprob: -10.756176948547363
    7. 'Fen' → logprob: -11.256176948547363
    8. 'pref' → logprob: -11.506176948547363
    9. '       ' → logprob: -11.631176948547363
    10. 'fi' → logprob: -11.881176948547363

Token 1335: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.4272752852994017e-05
    2. '.update' → logprob: -11.37502384185791
    3. 'f' → logprob: -12.00002384185791
    4. '   ' → logprob: -13.75002384185791
    5. '       ' → logprob: -13.87502384185791
    6. '.' → logprob: -14.12502384185791
    7. '.w' → logprob: -14.25002384185791
    8. '_update' → logprob: -14.75002384185791
    9. '._' → logprob: -15.00002384185791
    10. '=' → logprob: -15.00002384185791

Token 1336: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.000636308453977108
    2. '.' → logprob: -7.375636100769043
    3. ' .' → logprob: -12.375636100769043
    4. 'update' → logprob: -13.000636100769043
    5. '.add' → logprob: -13.125636100769043
    6. ').' → logprob: -15.375636100769043
    7. '```' → logprob: -15.500636100769043
    8. '.insert' → logprob: -16.00063705444336
    9. '.
' → logprob: -16.25063705444336
    10. '   ' → logprob: -16.25063705444336

Token 1337: '(pref' (ID: 175719)
  Prédit: 'pref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pref' → logprob: -0.6934314966201782
    2. '(pref' → logprob: -0.6934314966201782
    3. ' pref' → logprob: -8.193431854248047
    4. '.pref' → logprob: -12.568431854248047
    5. 'Pref' → logprob: -14.068431854248047
    6. '   ' → logprob: -14.318431854248047
    7. '(
' → logprob: -14.443431854248047
    8. '       ' → logprob: -14.693431854248047
    9. '-pref' → logprob: -14.693431854248047
    10. '(' → logprob: -14.818431854248047

Token 1338: '_index' (ID: 7748)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006622650660574436
    2. '_index' → logprob: -5.256622791290283
    3. 'i' → logprob: -7.506622791290283
    4. '
' → logprob: -7.881622791290283
    5. 'index' → logprob: -9.006622314453125
    6. '[
' → logprob: -9.131622314453125
    7. '(i' → logprob: -9.756622314453125
    8. '```' → logprob: -10.006622314453125
    9. '[' → logprob: -10.631622314453125
    10. '   ' → logprob: -11.381622314453125

Token 1339: '(pref' (ID: 175719)
  Prédit: '(pref'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pref' → logprob: -0.00015276329941116273
    2. '(sorted' → logprob: -9.125152587890625
    3. 'pref' → logprob: -10.250152587890625
    4. '(p' → logprob: -12.500152587890625
    5. '(
' → logprob: -13.625152587890625
    6. '(' → logprob: -13.875152587890625
    7. '(prefix' → logprob: -14.625152587890625
    8. ' (' → logprob: -14.625152587890625
    9. '(pre' → logprob: -14.750152587890625
    10. '(all' → logprob: -15.125152587890625

Token 1340: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008478637901134789
    2. 'i' → logprob: -7.125847816467285
    3. '(i' → logprob: -10.625847816467285
    4. '[
' → logprob: -12.375847816467285
    5. ')' → logprob: -12.875847816467285
    6. '```' → logprob: -13.000847816467285
    7. '   ' → logprob: -13.125847816467285
    8. '
' → logprob: -13.125847816467285
    9. '{i' → logprob: -13.250847816467285
    10. '[' → logprob: -13.500847816467285

Token 1341: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6439090371131897
    2. '(i' → logprob: -1.393908977508545
    3. '[i' → logprob: -1.643908977508545
    4. ']),' → logprob: -3.643908977508545
    5. '(' → logprob: -6.893908977508545
    6. '],' → logprob: -7.018908977508545
    7. ')],' → logprob: -7.268908977508545
    8. ')' → logprob: -7.393908977508545
    9. '   ' → logprob: -7.518908977508545
    10. '           ' → logprob: -7.518908977508545

Token 1342: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '           ' → logprob: -16.125001907348633
    4. '   ' → logprob: -16.875001907348633
    5. '+' → logprob: -17.500001907348633
    6. '```' → logprob: -18.750001907348633
    7. '               ' → logprob: -19.750001907348633
    8. '       ' → logprob: -20.000001907348633
    9. '                   ' → logprob: -20.125001907348633
    10. ')' → logprob: -20.375001907348633

Token 1343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -16.625
    4. '           ' → logprob: -18.25
    5. '+' → logprob: -18.875
    6. '  ' → logprob: -20.25
    7. '       ' → logprob: -20.25
    8. '               ' → logprob: -21.125
    9. '```' → logprob: -21.125
    10. '    ' → logprob: -21.375

Token 1344: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05613056942820549
    2. ')
' → logprob: -2.9311306476593018
    3. '       ' → logprob: -6.806130409240723
    4. '           ' → logprob: -9.306130409240723
    5. ')

' → logprob: -10.806130409240723
    6. '<|end|>' → logprob: -11.806130409240723
    7. '
' → logprob: -12.056130409240723
    8. '```' → logprob: -12.931130409240723
    9. '   ' → logprob: -13.056130409240723
    10. ')
' → logprob: -13.181130409240723

Token 1345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011987750418484211
    2. '```' → logprob: -5.136987686157227
    3. 'for' → logprob: -5.511987686157227
    4. ' for' → logprob: -6.261987686157227
    5. '           ' → logprob: -9.886987686157227
    6. '``' → logprob: -11.136987686157227
    7. '   ' → logprob: -11.261987686157227
    8. '
' → logprob: -11.386987686157227
    9. 'For' → logprob: -13.511987686157227
    10. '\' → logprob: -14.136987686157227

Token 1346: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06342052668333054
    2. '       ' → logprob: -2.813420534133911
    3. ' for' → logprob: -7.188420295715332
    4. '```' → logprob: -7.313420295715332
    5. 'from' → logprob: -11.438420295715332
    6. '   ' → logprob: -11.688420295715332
    7. 'import' → logprob: -11.938420295715332
    8. '``' → logprob: -13.438420295715332
    9. '	for' → logprob: -14.063420295715332
    10. 'For' → logprob: -14.313420295715332

Token 1347: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.14552894234657288
    2. ' r' → logprob: -2.02052903175354
    3. 'i' → logprob: -6.520528793334961
    4. ' i' → logprob: -6.645528793334961
    5. '   ' → logprob: -9.645528793334961
    6. '       ' → logprob: -12.520528793334961
    7. '     ' → logprob: -13.270528793334961
    8. '    ' → logprob: -13.395528793334961
    9. '           ' → logprob: -13.520528793334961
    10. ' ' → logprob: -14.395528793334961

Token 1348: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001516173011623323
    2. 'in' → logprob: -6.501516342163086
    3. ' ' → logprob: -12.251516342163086
    4. '	in' → logprob: -13.126516342163086
    5. '   ' → logprob: -13.376516342163086
    6. ' r' → logprob: -13.751516342163086
    7. '=' → logprob: -14.126516342163086
    8. '    ' → logprob: -14.251516342163086
    9. '        ' → logprob: -14.501516342163086
    10. 'r' → logprob: -14.501516342163086

Token 1349: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029786480590701103
    2. ' range' → logprob: -3.5297865867614746
    3. '(range' → logprob: -10.529786109924316
    4. 'self' → logprob: -11.654786109924316
    5. '   ' → logprob: -15.154786109924316
    6. '(self' → logprob: -16.029787063598633
    7. ' self' → logprob: -16.654787063598633
    8. '       ' → logprob: -17.154787063598633
    9. '
' → logprob: -17.404787063598633
    10. '	range' → logprob: -17.404787063598633

Token 1350: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.023334693163633347
    2. 'self' → logprob: -3.7733347415924072
    3. '       ' → logprob: -9.648334503173828
    4. '           ' → logprob: -11.523334503173828
    5. '[self' → logprob: -12.023334503173828
    6. ' self' → logprob: -12.273334503173828
    7. '               ' → logprob: -13.898334503173828
    8. '   ' → logprob: -14.273334503173828
    9. '(
' → logprob: -14.398334503173828
    10. '=self' → logprob: -14.523334503173828

Token 1351: '.K' (ID: 14475)
  Prédit: '.K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.K' → logprob: -0.023300684988498688
    2. 'K' → logprob: -3.7733006477355957
    3. 'self' → logprob: -10.398301124572754
    4. '(K' → logprob: -11.523301124572754
    5. '   ' → logprob: -12.148301124572754
    6. '[K' → logprob: -13.148301124572754
    7. '	K' → logprob: -13.273301124572754
    8. '.k' → logprob: -13.398301124572754
    9. 'k' → logprob: -13.898301124572754
    10. '_K' → logprob: -14.023301124572754

Token 1352: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16182392835617065
    2. '-' → logprob: -1.9118239879608154
    3. '       ' → logprob: -7.161823749542236
    4. ',' → logprob: -7.786823749542236
    5. '           ' → logprob: -8.161824226379395
    6. '   ' → logprob: -9.536824226379395
    7. '```' → logprob: -11.411824226379395
    8. ' ' → logprob: -11.536824226379395
    9. '               ' → logprob: -11.786824226379395
    10. ')' → logprob: -12.536824226379395

Token 1353: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. '   ' → logprob: -12.625006675720215
    3. ' ' → logprob: -13.500006675720215
    4. '```' → logprob: -14.250006675720215
    5. '       ' → logprob: -14.375006675720215
    6. 'r' → logprob: -14.875006675720215
    7. '2' → logprob: -15.625006675720215
    8. '
' → logprob: -15.875006675720215
    9. '           ' → logprob: -16.12500762939453
    10. '0' → logprob: -17.37500762939453

Token 1354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. '   ' → logprob: -12.875003814697266
    3. ' ' → logprob: -14.125003814697266
    4. '```' → logprob: -15.375003814697266
    5. '
' → logprob: -15.875003814697266
    6. '       ' → logprob: -16.125003814697266
    7. '2' → logprob: -16.500003814697266
    8. 'r' → logprob: -16.500003814697266
    9. '-' → logprob: -17.562503814697266
    10. '           ' → logprob: -17.687503814697266

Token 1355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01591951958835125
    2. '+' → logprob: -4.6409196853637695
    3. ' +' → logprob: -5.7659196853637695
    4. '       ' → logprob: -6.2659196853637695
    5. '           ' → logprob: -7.5159196853637695
    6. ' ,' → logprob: -8.14091968536377
    7. '   ' → logprob: -9.51591968536377
    8. '```' → logprob: -10.14091968536377
    9. '+,' → logprob: -10.76591968536377
    10. ',len' → logprob: -10.76591968536377

Token 1356: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00035262384335510433
    2. ' self' → logprob: -8.00035285949707
    3. '       ' → logprob: -11.87535285949707
    4. '
' → logprob: -12.62535285949707
    5. 'len' → logprob: -13.12535285949707
    6. '           ' → logprob: -13.37535285949707
    7. '(self' → logprob: -13.50035285949707
    8. '   ' → logprob: -14.00035285949707
    9. 'r' → logprob: -15.37535285949707
    10. '               ' → logprob: -15.50035285949707

Token 1357: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.002819851040840149
    2. 'N' → logprob: -5.877820014953613
    3. '+' → logprob: -12.502820014953613
    4. '_N' → logprob: -13.002820014953613
    5. '   ' → logprob: -13.127820014953613
    6. '	N' → logprob: -13.252820014953613
    7. '```' → logprob: -13.377820014953613
    8. '
' → logprob: -13.752820014953613
    9. '<N' → logprob: -13.877820014953613
    10. ' N' → logprob: -15.252820014953613

Token 1358: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.464133620262146
    2. '):
' → logprob: -1.214133620262146
    3. ' +' → logprob: -3.2141337394714355
    4. '):' → logprob: -3.4641337394714355
    5. '       ' → logprob: -6.7141337394714355
    6. '```' → logprob: -7.2141337394714355
    7. '   ' → logprob: -8.089133262634277
    8. ':' → logprob: -8.714133262634277
    9. ':
' → logprob: -8.964133262634277
    10. '           ' → logprob: -9.089133262634277

Token 1359: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006667535286396742
    2. '```' → logprob: -5.756667613983154
    3. ' fen' → logprob: -6.006667613983154
    4. 'fen' → logprob: -7.631667613983154
    5. '       ' → logprob: -8.256667137145996
    6. '   ' → logprob: -8.631667137145996
    7. '``' → logprob: -10.756667137145996
    8. '            
' → logprob: -10.881667137145996
    9. '
' → logprob: -11.756667137145996
    10. '               ' → logprob: -12.256667137145996

Token 1360: ' fen' (ID: 25170)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -1.2976213693618774
    2. 'fen' (adapté à ' fen') → logprob: -1.2976213693618774
    3. 'x' → logprob: -1.9226213693618774
    4. 'while' → logprob: -2.547621250152588
    5. 'needed' → logprob: -2.547621250152588
    6. 'val' → logprob: -2.922621250152588
    7. 'threshold' → logprob: -3.547621250152588
    8. 'need' → logprob: -3.797621250152588
    9. 'idx' → logprob: -4.047621250152588
    10. 'required' → logprob: -4.797621250152588

Token 1361: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -4.320199877838604e-07
    2. '       ' → logprob: -15.375
    3. '   ' → logprob: -16.0
    4. '.update' → logprob: -17.75
    5. '
' → logprob: -17.875
    6. '.w' → logprob: -17.875
    7. '```' → logprob: -18.375
    8. '	w' → logprob: -19.125
    9. '           ' → logprob: -19.25
    10. ' w' → logprob: -20.0

Token 1362: '_val' (ID: 13694)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.0004699954588431865
    2. '.' → logprob: -7.750470161437988
    3. 'update' → logprob: -10.750470161437988
    4. '.add' → logprob: -11.750470161437988
    5. '_update' → logprob: -12.250470161437988
    6. ' .' → logprob: -13.500470161437988
    7. '_index' → logprob: -13.625470161437988
    8. '.query' → logprob: -14.000470161437988
    9. '```' → logprob: -14.625470161437988
    10. '   ' → logprob: -15.375470161437988

Token 1363: ' =' (ID: 314)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.5352517366409302
    2. ' =' → logprob: -2.0352516174316406
    3. '_index' → logprob: -2.1602516174316406
    4. '_val' → logprob: -3.1602516174316406
    5. '=' → logprob: -3.2852516174316406
    6. '.' → logprob: -3.6602516174316406
    7. '_idx' → logprob: -3.7852516174316406
    8. '.query' → logprob: -4.035251617431641
    9. '_value' → logprob: -5.660251617431641
    10. '   ' → logprob: -5.910251617431641

Token 1364: ' pref' (ID: 27015)
  Prédit: 'pref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pref' → logprob: -0.04285062104463577
    2. ' pref' → logprob: -3.6678507328033447
    3. 'fen' → logprob: -4.167850494384766
    4. ' fen' → logprob: -7.167850494384766
    5. '(pref' → logprob: -9.667850494384766
    6. '   ' → logprob: -9.917850494384766
    7. '           ' → logprob: -11.042850494384766
    8. '       ' → logprob: -12.042850494384766
    9. 'pf' → logprob: -12.667850494384766
    10. 'prefix' → logprob: -12.792850494384766

Token 1365: '[r' (ID: 33265)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0003389190824236721
    2. 'index' → logprob: -8.250338554382324
    3. '[r' → logprob: -9.750338554382324
    4. '   ' → logprob: -12.250338554382324
    5. 'r' → logprob: -12.875338554382324
    6. '[' → logprob: -13.250338554382324
    7. '
' → logprob: -13.375338554382324
    8. '.index' → logprob: -13.875338554382324
    9. 'Index' → logprob: -13.875338554382324
    10. ')' → logprob: -14.000338554382324

Token 1366: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010700657032430172
    2. '_index' → logprob: -5.010700702667236
    3. 'Index' → logprob: -6.885700702667236
    4. '[' → logprob: -6.885700702667236
    5. ' +' → logprob: -7.385700702667236
    6. ']' → logprob: -8.135700225830078
    7. '   ' → logprob: -8.385700225830078
    8. '1' → logprob: -8.885700225830078
    9. '```' → logprob: -8.885700225830078
    10. '-' → logprob: -9.385700225830078

Token 1367: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.580929347255733e-05
    2. ' ' → logprob: -11.500016212463379
    3. '
' → logprob: -12.625016212463379
    4. '```' → logprob: -14.000016212463379
    5. '   ' → logprob: -14.687516212463379
    6. '0' → logprob: -15.625016212463379
    7. '           ' → logprob: -16.437515258789062
    8. '       ' → logprob: -16.625015258789062
    9. '``' → logprob: -16.625015258789062
    10. '#' → logprob: -16.937515258789062

Token 1368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.250007629394531
    3. '
' → logprob: -13.250007629394531
    4. '   ' → logprob: -15.250007629394531
    5. '```' → logprob: -16.31250762939453
    6. '0' → logprob: -16.43750762939453
    7. '2' → logprob: -17.00000762939453
    8. '`' → logprob: -17.06250762939453
    9. '``' → logprob: -17.43750762939453
    10. '
' → logprob: -17.56250762939453

Token 1369: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7198461890220642
    2. ')' → logprob: -1.094846248626709
    3. '-' → logprob: -1.969846248626709
    4. '           ' → logprob: -4.094846248626709
    5. ',' → logprob: -4.219846248626709
    6. ')
' → logprob: -5.594846248626709
    7. '       ' → logprob: -6.969846248626709
    8. ']' → logprob: -6.969846248626709
    9. '),' → logprob: -7.844846248626709
    10. '```' → logprob: -8.21984577178955

Token 1370: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22243472933769226
    2. ' -' → logprob: -1.7224347591400146
    3. '           ' → logprob: -4.7224345207214355
    4. ')' → logprob: -5.2224345207214355
    5. '=' → logprob: -5.7224345207214355
    6. ' =' → logprob: -6.9724345207214355
    7. '       ' → logprob: -7.3474345207214355
    8. '<|end|>' → logprob: -7.5974345207214355
    9. ')-' → logprob: -8.722434997558594
    10. '               ' → logprob: -8.972434997558594

Token 1371: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005001319805160165
    2. 'K' → logprob: -8.375499725341797
    3. ' self' → logprob: -8.875499725341797
    4. '<|end|>' → logprob: -9.625499725341797
    5. '(self' → logprob: -11.250499725341797
    6. 'k' → logprob: -11.625499725341797
    7. '[self' → logprob: -12.250499725341797
    8. '```' → logprob: -12.375499725341797
    9. '   ' → logprob: -12.750499725341797
    10. '<|end|>' → logprob: -12.875499725341797

Token 1372: '.K' (ID: 14475)
  Prédit: '.K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.K' → logprob: -0.47439730167388916
    2. 'K' → logprob: -0.9743973016738892
    3. '.L' → logprob: -8.349397659301758
    4. 'L' → logprob: -10.224397659301758
    5. ' K' → logprob: -11.474397659301758
    6. 'self' → logprob: -11.599397659301758
    7. '	K' → logprob: -11.974397659301758
    8. '_K' → logprob: -12.474397659301758
    9. '<K' → logprob: -12.849397659301758
    10. ',K' → logprob: -13.099397659301758

Token 1373: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.627282440662384
    2. '<|end|>' → logprob: -1.2522823810577393
    3. ')' → logprob: -2.6272823810577393
    4. ',' → logprob: -3.7522823810577393
    5. '+' → logprob: -3.7522823810577393
    6. '<|end|>' → logprob: -3.8772823810577393
    7. ' +' → logprob: -4.752282619476318
    8. '       ' → logprob: -5.127282619476318
    9. '
' → logprob: -5.502282619476318
    10. '_index' → logprob: -6.252282619476318

Token 1374: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031584516167640686
    2. '<|end|>' → logprob: -5.156584739685059
    3. ')' → logprob: -5.406584739685059
    4. 'idx' → logprob: -5.531584739685059
    5. '_index' → logprob: -6.031584739685059
    6. 'index' → logprob: -6.156584739685059
    7. ' =' → logprob: -6.281584739685059
    8. 'pos' → logprob: -6.781584739685059
    9. '```' → logprob: -7.156584739685059
    10. '=' → logprob: -7.156584739685059

Token 1375: ' x' (ID: 1215)
  Prédit: ' fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fen' → logprob: -0.5629745721817017
    2. 'idx' → logprob: -1.5629745721817017
    3. 'fen' → logprob: -1.6879745721817017
    4. 'pos' → logprob: -3.812974452972412
    5. ' idx' → logprob: -4.687974452972412
    6. '           ' → logprob: -5.812974452972412
    7. ' pos' → logprob: -7.937974452972412
    8. 'ind' → logprob: -8.18797492980957
    9. 'x' (adapté à ' x') → logprob: -8.31297492980957
    10. 'i' → logprob: -9.06297492980957

Token 1376: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4814441502094269
    2. '_idx' → logprob: -1.1064441204071045
    3. '_index' → logprob: -3.6064441204071045
    4. '=' → logprob: -3.8564441204071045
    5. 'idx' → logprob: -5.981444358825684
    6. '_val' → logprob: -8.606444358825684
    7. '_ind' → logprob: -8.856444358825684
    8. '_pos' → logprob: -9.606444358825684
    9. '_i' → logprob: -9.981444358825684
    10. 'index' → logprob: -10.606444358825684

Token 1377: ' pref' (ID: 27015)
  Prédit: 'pref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pref' → logprob: -0.003641049610450864
    2. ' pref' → logprob: -5.628641128540039
    3. 'fen' → logprob: -10.753641128540039
    4. '           ' → logprob: -11.378641128540039
    5. '(pref' → logprob: -12.128641128540039
    6. 'bis' → logprob: -14.253641128540039
    7. '.pref' → logprob: -14.753641128540039
    8. 'prec' → logprob: -15.503641128540039
    9. 'pred' → logprob: -15.503641128540039
    10. '   ' → logprob: -15.753641128540039

Token 1378: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0033860031981021166
    2. '[r' → logprob: -6.3783860206604
    3. 'index' → logprob: -6.5033860206604
    4. 'Index' → logprob: -10.128385543823242
    5. 'val' → logprob: -10.753385543823242
    6. ')' → logprob: -11.378385543823242
    7. '```' → logprob: -11.378385543823242
    8. 'r' → logprob: -11.503385543823242
    9. '   ' → logprob: -11.628385543823242
    10. '_indices' → logprob: -11.753385543823242

Token 1379: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.000645360560156405
    2. '(x' → logprob: -7.375645160675049
    3. '(' → logprob: -11.125645637512207
    4. 'fen' → logprob: -13.125645637512207
    5. '((' → logprob: -14.250645637512207
    6. '(
' → logprob: -14.375645637512207
    7. '(max' → logprob: -15.375645637512207
    8. ' fen' → logprob: -15.750645637512207
    9. '(fid' → logprob: -16.62564468383789
    10. '(fi' → logprob: -16.87564468383789

Token 1380: 'en' (ID: 262)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.0009887460619211197
    2. '(f' → logprob: -7.250988960266113
    3. 'en' → logprob: -8.875988960266113
    4. ' fen' → logprob: -9.250988960266113
    5. 'x' → logprob: -10.875988960266113
    6. 'f' → logprob: -11.875988960266113
    7. 'fer' → logprob: -12.750988960266113
    8. '[' → logprob: -12.875988960266113
    9. '[f' → logprob: -13.000988960266113
    10. 'Fen' → logprob: -13.500988960266113

Token 1381: 'w' (ID: 86)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.3378984332084656
    2. '_val' → logprob: -1.7128984928131104
    3. 'w' → logprob: -2.5878984928131104
    4. 'r' → logprob: -4.212898254394531
    5. 'val' → logprob: -4.337898254394531
    6. '[w' → logprob: -5.962898254394531
    7. '_value' → logprob: -8.587898254394531
    8. '(r' → logprob: -9.212898254394531
    9. 'Val' → logprob: -9.337898254394531
    10. '_w' → logprob: -9.587898254394531

Token 1382: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.009991579689085484
    2. '[r' → logprob: -5.259991645812988
    3. 'val' → logprob: -5.759991645812988
    4. '(r' → logprob: -7.384991645812988
    5. '[f' → logprob: -7.384991645812988
    6. '(f' → logprob: -9.134991645812988
    7. '[val' → logprob: -9.884991645812988
    8. 'Val' → logprob: -10.009991645812988
    9. ')' → logprob: -10.134991645812988
    10. '[' → logprob: -10.509991645812988

Token 1383: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034319774713367224
    2. ')
' → logprob: -5.753431797027588
    3. '-' → logprob: -9.003432273864746
    4. ' -' → logprob: -10.128432273864746
    5. '           ' → logprob: -10.628432273864746
    6. ' )' → logprob: -10.628432273864746
    7. '(' → logprob: -11.878432273864746
    8. '       ' → logprob: -12.128432273864746
    9. '<|end|>' → logprob: -12.378432273864746
    10. ')-' → logprob: -12.503432273864746

Token 1384: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020227449014782906
    2. 'count' → logprob: -4.895227432250977
    3. 'fen' → logprob: -5.270227432250977
    4. '       ' → logprob: -6.270227432250977
    5. 'while' → logprob: -6.395227432250977
    6. ' fen' → logprob: -6.520227432250977
    7. '               ' → logprob: -7.770227432250977
    8. 'result' → logprob: -8.020227432250977
    9. '```' → logprob: -8.270227432250977
    10. ' while' → logprob: -8.520227432250977

Token 1385: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.007263713050633669
    2. 'count' → logprob: -6.007263660430908
    3. 'cnt' → logprob: -6.007263660430908
    4. 'res' → logprob: -6.257263660430908
    5. ' ans' → logprob: -9.007264137268066
    6. '           ' → logprob: -9.382264137268066
    7. 'answer' → logprob: -9.632264137268066
    8. 'idx' → logprob: -10.507264137268066
    9. 'pos' → logprob: -11.132264137268066
    10. 'left' → logprob: -11.507264137268066

Token 1386: ' Count' (ID: 6789)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.002435354981571436
    2. 'count' → logprob: -7.002435207366943
    3. 'res' → logprob: -7.377435207366943
    4. ' ans' → logprob: -7.877435207366943
    5. 'cnt' → logprob: -7.877435207366943
    6. '           ' → logprob: -9.627435684204102
    7. 'answer' → logprob: -10.627435684204102
    8. 'idx' → logprob: -11.627435684204102
    9. 'fen' → logprob: -12.252435684204102
    10. 'while' → logprob: -12.877435684204102

Token 1387: ' l' (ID: 305)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.15847671031951904
    2. 'fen' → logprob: -2.2834768295288086
    3. ' fen' → logprob: -4.158476829528809
    4. 'res' → logprob: -4.533476829528809
    5. 'count' → logprob: -4.533476829528809
    6. 'cnt' → logprob: -5.283476829528809
    7. 'answer' → logprob: -7.658476829528809
    8. ' ans' → logprob: -7.783476829528809
    9. '(ans' → logprob: -8.158476829528809
    10. 'freq' → logprob: -8.158476829528809

Token 1388: ' <=' (ID: 5017)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.040430132299661636
    2. ' =' → logprob: -3.2904300689697266
    3. '           ' → logprob: -6.915430068969727
    4. '<=' → logprob: -7.040430068969727
    5. '```' → logprob: -9.915430068969727
    6. '_le' → logprob: -10.040430068969727
    7. '≤' → logprob: -10.165430068969727
    8. 'count' → logprob: -10.165430068969727
    9. 'le' → logprob: -10.290430068969727
    10. '_count' → logprob: -10.415430068969727

Token 1389: ' r' (ID: 428)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005155839025974274
    2. 'fen' → logprob: -5.50515604019165
    3. 'len' → logprob: -7.25515604019165
    4. ' x' → logprob: -8.505155563354492
    5. 'sorted' → logprob: -9.880155563354492
    6. '   ' → logprob: -10.505155563354492
    7. 'r' → logprob: -10.505155563354492
    8. ' fen' → logprob: -10.880155563354492
    9. 'bis' → logprob: -11.880155563354492
    10. 'binary' → logprob: -12.130155563354492

Token 1390: ' -' (ID: 533)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6293908357620239
    2. ' fen' → logprob: -1.754390835762024
    3. 'fen' → logprob: -2.5043907165527344
    4. '+' → logprob: -2.7543907165527344
    5. ' +' → logprob: -3.0043907165527344
    6. ' =' → logprob: -3.3793907165527344
    7. '_count' → logprob: -5.004390716552734
    8. '
' → logprob: -5.129390716552734
    9. ')' → logprob: -5.254390716552734
    10. ',' → logprob: -5.379390716552734

Token 1391: ' K' (ID: 658)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04869751259684563
    2. '(self' → logprob: -3.1736974716186523
    3. '(K' → logprob: -5.798697471618652
    4. 'K' → logprob: -6.923697471618652
    5. 'x' → logprob: -6.923697471618652
    6. '(' → logprob: -8.798697471618652
    7. ' (' → logprob: -8.798697471618652
    8. '1' → logprob: -9.298697471618652
    9. '(x' → logprob: -9.423697471618652
    10. ' self' → logprob: -9.923697471618652

Token 1392: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08152646571397781
    2. ' +' → logprob: -2.581526517868042
    3. '           ' → logprob: -7.706526279449463
    4. '       ' → logprob: -7.956526279449463
    5. '```' → logprob: -8.206526756286621
    6. '   ' → logprob: -8.456526756286621
    7. '
' → logprob: -8.581526756286621
    8. '_index' → logprob: -8.581526756286621
    9. '_plus' → logprob: -9.456526756286621
    10. ':' → logprob: -9.456526756286621

Token 1393: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.375004768371582
    3. '0' → logprob: -14.500004768371582
    4. '   ' → logprob: -16.8750057220459
    5. '```' → logprob: -17.1250057220459
    6. '+' → logprob: -17.8750057220459
    7. '
' → logprob: -18.0000057220459
    8. '           ' → logprob: -19.1250057220459
    9. '       ' → logprob: -19.6250057220459
    10. 'r' → logprob: -19.7500057220459

Token 1394: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.125006675720215
    3. '0' → logprob: -15.000006675720215
    4. '```' → logprob: -15.625006675720215
    5. '
' → logprob: -15.875006675720215
    6. '   ' → logprob: -16.6250057220459
    7. '(' → logprob: -17.1875057220459
    8. '2' → logprob: -17.5000057220459
    9. '+' → logprob: -17.5625057220459
    10. '``' → logprob: -19.3750057220459

Token 1395: ' prefix' (ID: 18633)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5607632398605347
    2. 'fen' → logprob: -1.8107632398605347
    3. ' fen' → logprob: -2.560763359069824
    4. '           ' → logprob: -2.810763359069824
    5. '=' → logprob: -2.810763359069824
    6. 'count' → logprob: -4.685763359069824
    7. '(f' → logprob: -4.685763359069824
    8. '_count' → logprob: -4.935763359069824
    9. ')' → logprob: -5.185763359069824
    10. '
' → logprob: -5.560763359069824

Token 1396: ' sums' (ID: 73121)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7501365542411804
    2. ' sums' → logprob: -1.6251366138458252
    3. '_sum' → logprob: -2.125136613845825
    4. 's' → logprob: -2.250136613845825
    5. '_index' → logprob: -2.625136613845825
    6. ')' → logprob: -5.125136375427246
    7. '_s' → logprob: -5.250136375427246
    8. '_count' → logprob: -5.500136375427246
    9. '_idx' → logprob: -5.625136375427246
    10. '```' → logprob: -6.125136375427246

Token 1397: ' <=' (ID: 5017)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27222445607185364
    2. '=' → logprob: -2.0222244262695312
    3. '_count' → logprob: -3.5222244262695312
    4. '           ' → logprob: -3.6472244262695312
    5. 'count' → logprob: -4.022224426269531
    6. ' fen' → logprob: -5.022224426269531
    7. 'fen' → logprob: -5.272224426269531
    8. ',' → logprob: -6.022224426269531
    9. '(f' → logprob: -6.147224426269531
    10. '(' → logprob: -6.272224426269531

Token 1398: ' fen' (ID: 25170)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001979378139367327
    2. ' x' → logprob: -8.625198364257812
    3. 'fen' → logprob: -11.125198364257812
    4. '(x' → logprob: -14.125198364257812
    5. '
' → logprob: -14.750198364257812
    6. 'xf' → logprob: -14.750198364257812
    7. 'pref' → logprob: -15.000198364257812
    8. '```' → logprob: -15.250198364257812
    9. 'xfe' → logprob: -15.375198364257812
    10. '	x' → logprob: -15.500198364257812

Token 1399: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.07911549508571625
    2. 'x' → logprob: -2.579115390777588
    3. '_index' → logprob: -8.954115867614746
    4. 'ow' → logprob: -10.829115867614746
    5. '   ' → logprob: -11.454115867614746
    6. 'val' → logprob: -11.579115867614746
    7. '
' → logprob: -11.829115867614746
    8. '       ' → logprob: -12.079115867614746
    9. 'wx' → logprob: -12.204115867614746
    10. 'v' → logprob: -12.454115867614746

Token 1400: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.6652556657791138
    2. '.update' → logprob: -1.0402556657791138
    3. '_index' → logprob: -2.290255546569824
    4. '.query' → logprob: -5.165255546569824
    5. ')' → logprob: -5.290255546569824
    6. 'x' → logprob: -5.665255546569824
    7. 'index' → logprob: -6.165255546569824
    8. '._' → logprob: -6.165255546569824
    9. 'val' → logprob: -6.290255546569824
    10. 'Val' → logprob: -6.415255546569824

Token 1401: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.198925256729126
    2. 'fen' → logprob: -1.198925256729126
    3. ' fen' → logprob: -1.573925256729126
    4. 'count' → logprob: -2.448925256729126
    5. '
' → logprob: -3.198925256729126
    6. ')' → logprob: -4.823925018310547
    7. '```' → logprob: -4.823925018310547
    8. 'res' → logprob: -4.823925018310547
    9. 'ans' → logprob: -4.948925018310547
    10. ',' → logprob: -5.448925018310547

Token 1402: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18304935097694397
    2. 'fen' → logprob: -2.058049440383911
    3. ' fen' → logprob: -4.183049201965332
    4. '```' → logprob: -5.058049201965332
    5. 'count' → logprob: -5.683049201965332
    6. ',' → logprob: -6.058049201965332
    7. '(' → logprob: -6.308049201965332
    8. ')' → logprob: -6.808049201965332
    9. ' =' → logprob: -6.933049201965332
    10. '(f' → logprob: -7.183049201965332

Token 1403: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06115962937474251
    2. 'count' → logprob: -3.561159610748291
    3. 'res' → logprob: -3.686159610748291
    4. ' ans' → logprob: -6.061159610748291
    5. 'cnt' → logprob: -6.561159610748291
    6. '           ' → logprob: -6.811159610748291
    7. 'answer' → logprob: -7.936159610748291
    8. 'result' → logprob: -8.43616008758545
    9. ' res' → logprob: -9.18616008758545
    10. '	ans' → logprob: -9.93616008758545

Token 1404: ' fen' (ID: 25170)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03293783962726593
    2. ' ans' → logprob: -3.78293776512146
    3. '           ' → logprob: -5.532938003540039
    4. 'res' → logprob: -6.032938003540039
    5. 'count' → logprob: -6.032938003540039
    6. 'cnt' → logprob: -7.907938003540039
    7. ' res' → logprob: -9.032938003540039
    8. 'answer' → logprob: -9.032938003540039
    9. '	ans' → logprob: -10.407938003540039
    10. 'counts' → logprob: -10.407938003540039

Token 1405: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -6.704273118884885e-07
    2. '.update' → logprob: -15.375000953674316
    3. '.query' → logprob: -16.25
    4. '   ' → logprob: -16.875
    5. '       ' → logprob: -17.125
    6. '.write' → logprob: -17.5
    7. '.w' → logprob: -17.5
    8. '
' → logprob: -17.875
    9. ' =' → logprob: -17.875
    10. 'q' → logprob: -18.125

Token 1406: ' holds' (ID: 18305)
  Prédit: '.query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.query' → logprob: -0.009339636191725731
    2. '.update' → logprob: -5.634339809417725
    3. 'query' → logprob: -5.759339809417725
    4. '.' → logprob: -6.259339809417725
    5. '_query' → logprob: -8.009339332580566
    6. '=query' → logprob: -8.509339332580566
    7. '=' → logprob: -10.759339332580566
    8. ' .' → logprob: -11.259339332580566
    9. ' query' → logprob: -11.259339332580566
    10. '```' → logprob: -11.384339332580566

Token 1407: ' counts' (ID: 28991)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01438185852020979
    2. 'fen' → logprob: -4.2643818855285645
    3. ' fen' → logprob: -9.014381408691406
    4. 'pref' → logprob: -10.389381408691406
    5. ' x' → logprob: -10.639381408691406
    6. '   ' → logprob: -11.389381408691406
    7. 'Fen' → logprob: -11.514381408691406
    8. '(x' → logprob: -11.764381408691406
    9. 'xf' → logprob: -13.014381408691406
    10. '           ' → logprob: -13.139381408691406

Token 1408: ' of' (ID: 328)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.5348447561264038
    2. ' up' → logprob: -2.2848448753356934
    3. 'of' → logprob: -2.9098448753356934
    4. ' =' → logprob: -3.0348448753356934
    5. '<=' → logprob: -3.1598448753356934
    6. '           ' → logprob: -3.2848448753356934
    7. ' of' → logprob: -3.5348448753356934
    8. 'upt' → logprob: -3.7848448753356934
    9. '=' → logprob: -3.9098448753356934
    10. ' at' → logprob: -4.409844875335693

Token 1409: ' prefix' (ID: 18633)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003231067443266511
    2. 'pref' → logprob: -6.628231048583984
    3. 'prefix' → logprob: -6.878231048583984
    4. 'fen' → logprob: -7.878231048583984
    5. ' x' → logprob: -8.128231048583984
    6. '(x' → logprob: -9.378231048583984
    7. 'sorted' → logprob: -9.878231048583984
    8. '   ' → logprob: -10.753231048583984
    9. '(pref' → logprob: -12.378231048583984
    10. '{x' → logprob: -12.628231048583984

Token 1410: ' sums' (ID: 73121)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.07121236622333527
    2. 's' → logprob: -2.8212122917175293
    3. ' sums' → logprob: -5.571212291717529
    4. 'sum' → logprob: -5.946212291717529
    5. 'val' → logprob: -7.696212291717529
    6. '_sum' → logprob: -7.696212291717529
    7. 'index' → logprob: -7.696212291717529
    8. '_val' → logprob: -8.196212768554688
    9. '   ' → logprob: -8.571212768554688
    10. '[' → logprob: -8.571212768554688

Token 1411: ' pref' (ID: 27015)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3311755359172821
    2. ' up' → logprob: -2.5811755657196045
    3. '[x' → logprob: -3.2061755657196045
    4. ' at' → logprob: -3.7061755657196045
    5. '<=' → logprob: -3.7061755657196045
    6. '(' → logprob: -3.8311755657196045
    7. 'x' → logprob: -4.331175327301025
    8. '<x' → logprob: -4.706175327301025
    9. '```' → logprob: -4.956175327301025
    10. ' (' → logprob: -4.956175327301025

Token 1412: '[' (ID: 58)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.29997462034225464
    2. '[r' → logprob: -2.0499746799468994
    3. 'x' → logprob: -3.0499746799468994
    4. 'Index' → logprob: -3.9249746799468994
    5. '[x' → logprob: -4.17497444152832
    6. 'index' → logprob: -4.42497444152832
    7. '_idx' → logprob: -5.29997444152832
    8. '   ' → logprob: -5.29997444152832
    9. 'r' → logprob: -5.42497444152832
    10. 'idx' → logprob: -5.67497444152832

Token 1413: '0' (ID: 15)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07790607959032059
    2. 'x' → logprob: -2.7029061317443848
    3. '[r' → logprob: -5.577906131744385
    4. 'l' → logprob: -7.077906131744385
    5. 'i' → logprob: -7.452906131744385
    6. '_index' → logprob: -7.702906131744385
    7. '```' → logprob: -7.702906131744385
    8. '
' → logprob: -7.827906131744385
    9. '0' → logprob: -8.202905654907227
    10. 'pref' → logprob: -8.452905654907227

Token 1414: '..' (ID: 485)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2711352109909058
    2. '           ' → logprob: -1.3961352109909058
    3. '...' → logprob: -1.8961352109909058
    4. ']+' → logprob: -3.0211353302001953
    5. '..' → logprob: -3.1461353302001953
    6. 'x' → logprob: -3.3961353302001953
    7. ':' → logprob: -3.5211353302001953
    8. ',' → logprob: -3.8961353302001953
    9. ':x' → logprob: -4.021135330200195
    10. '],' → logprob: -4.021135330200195

Token 1415: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005438300780951977
    2. '(r' → logprob: -5.255438327789307
    3. 'x' → logprob: -9.130437850952148
    4. 'pref' → logprob: -10.505437850952148
    5. '
' → logprob: -11.630437850952148
    6. '   ' → logprob: -11.755437850952148
    7. '[r' → logprob: -11.880437850952148
    8. 'fen' → logprob: -12.005437850952148
    9. '(pref' → logprob: -12.005437850952148
    10. '(x' → logprob: -12.380437850952148

Token 1416: '-K' (ID: 12249)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.724592387676239
    2. '-' → logprob: -1.5995924472808838
    3. ' -' → logprob: -1.8495924472808838
    4. '_index' → logprob: -2.474592447280884
    5. ' +' → logprob: -3.099592447280884
    6. ']' → logprob: -4.474592208862305
    7. '-K' → logprob: -5.474592208862305
    8. '-index' → logprob: -5.599592208862305
    9. '_idx' → logprob: -6.724592208862305
    10. '-k' → logprob: -6.849592208862305

Token 1417: '],' (ID: 2155)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00018494461255613714
    2. ' +' → logprob: -9.250185012817383
    3. ']' → logprob: -9.625185012817383
    4. ']+' → logprob: -11.875185012817383
    5. '+]' → logprob: -12.500185012817383
    6. '_' → logprob: -13.250185012817383
    7. '[' → logprob: -13.250185012817383
    8. '1' → logprob: -13.625185012817383
    9. '```' → logprob: -13.625185012817383
    10. '   ' → logprob: -14.250185012817383

Token 1418: ' so' (ID: 813)
  Prédit: ' fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fen' → logprob: -0.3416993319988251
    2. 'fen' → logprob: -1.4666993618011475
    3. '           ' → logprob: -3.3416993618011475
    4. 'x' → logprob: -5.216699123382568
    5. ' so' → logprob: -5.591699123382568
    6. ')' → logprob: -5.841699123382568
    7. ' x' → logprob: -6.091699123382568
    8. 'res' → logprob: -6.591699123382568
    9. ' and' → logprob: -6.716699123382568
    10. 'count' → logprob: -7.341699123382568

Token 1419: ' we' (ID: 581)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.006402000784873962
    2. ' ans' → logprob: -5.881402015686035
    3. 'res' → logprob: -6.006402015686035
    4. 'count' → logprob: -8.381402015686035
    5. 'x' → logprob: -8.631402015686035
    6. 'fen' → logprob: -8.881402015686035
    7. 'answer' → logprob: -9.256402015686035
    8. '
' → logprob: -9.256402015686035
    9. 'result' → logprob: -9.256402015686035
    10. '	ans' → logprob: -9.256402015686035

Token 1420: ' query' (ID: 5703)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.13354574143886566
    2. ' fen' → logprob: -2.7585456371307373
    3. 'query' → logprob: -4.008545875549316
    4. '.query' → logprob: -4.133545875549316
    5. '.update' → logprob: -4.758545875549316
    6. 'res' → logprob: -4.883545875549316
    7. '.' → logprob: -6.383545875549316
    8. '           ' → logprob: -6.508545875549316
    9. 'continue' → logprob: -6.883545875549316
    10. 'answer' → logprob: -7.133545875549316

Token 1421: ' fen' (ID: 25170)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00012475410767365247
    2. '(x' → logprob: -9.12512493133545
    3. 'fen' → logprob: -11.75012493133545
    4. ' x' → logprob: -12.12512493133545
    5. '```' → logprob: -13.75012493133545
    6. '
' → logprob: -15.25012493133545
    7. '   ' → logprob: -15.37512493133545
    8. 'xf' → logprob: -15.75012493133545
    9. '(' → logprob: -16.125123977661133
    10. '`' → logprob: -16.375123977661133

Token 1422: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.04162167012691498
    2. 'x' → logprob: -3.541621685028076
    3. '(x' → logprob: -4.541621685028076
    4. '[x' → logprob: -7.041621685028076
    5. '       ' → logprob: -9.916621208190918
    6. 'wx' → logprob: -10.291621208190918
    7. 'ow' → logprob: -10.916621208190918
    8. 'fen' → logprob: -11.041621208190918
    9. '(w' → logprob: -11.041621208190918
    10. '           ' → logprob: -11.166621208190918

Token 1423: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.08905801177024841
    2. '(f' → logprob: -3.4640579223632812
    3. '(' → logprob: -3.5890579223632812
    4. '.' → logprob: -4.964057922363281
    5. '(
' → logprob: -5.214057922363281
    6. '           ' → logprob: -5.589057922363281
    7. '(pref' → logprob: -6.464057922363281
    8. ')' → logprob: -6.589057922363281
    9. ' =' → logprob: -7.089057922363281
    10. ' (' → logprob: -7.214057922363281

Token 1424: ' indices' (ID: 30378)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.9040898880339228e-05
    2. ' x' → logprob: -10.500028610229492
    3. '
' → logprob: -14.625028610229492
    4. 'fen' → logprob: -14.875028610229492
    5. '(x' → logprob: -15.250028610229492
    6. '```' → logprob: -16.000028610229492
    7. '   ' → logprob: -16.250028610229492
    8. '	x' → logprob: -16.750028610229492
    9. '           ' → logprob: -17.750028610229492
    10. '       ' → logprob: -17.875028610229492

Token 1425: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5058935284614563
    2. 'up' → logprob: -1.7558934688568115
    3. 'x' → logprob: -2.1308934688568115
    4. ' up' → logprob: -3.2558934688568115
    5. '[x' → logprob: -3.5058934688568115
    6. 'less' → logprob: -4.630893707275391
    7. '=' → logprob: -4.755893707275391
    8. '(x' → logprob: -5.380893707275391
    9. ' <=' → logprob: -5.505893707275391
    10. '≤' → logprob: -6.005893707275391

Token 1426: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2352385965641588e-05
    2. ' x' → logprob: -11.375012397766113
    3. '
' → logprob: -14.250012397766113
    4. '   ' → logprob: -16.125011444091797
    5. '```' → logprob: -16.250011444091797
    6. '	x' → logprob: -17.750011444091797
    7. '`' → logprob: -18.000011444091797
    8. '(x' → logprob: -18.000011444091797
    9. ' ' → logprob: -18.250011444091797
    10. '       ' → logprob: -18.250011444091797

Token 1427: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1224019527435303
    2. '           ' → logprob: -1.1224019527435303
    3. '<|end|>' → logprob: -2.4974019527435303
    4. '```' → logprob: -2.9974019527435303
    5. 'fen' → logprob: -3.1224019527435303
    6. '<|end|>' → logprob: -3.7474019527435303
    7. ' fen' → logprob: -3.9974019527435303
    8. '
' → logprob: -4.247402191162109
    9. '+' → logprob: -4.497402191162109
    10. '               ' → logprob: -4.997402191162109

Token 1428: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005287003703415394
    2. 'ans' → logprob: -5.630287170410156
    3. '```' → logprob: -7.130287170410156
    4. ' ans' → logprob: -8.380287170410156
    5. 'res' → logprob: -8.630287170410156
    6. '(ans' → logprob: -9.380287170410156
    7. '
' → logprob: -9.880287170410156
    8. 'result' → logprob: -9.880287170410156
    9. 'count' → logprob: -10.005287170410156
    10. 'answer' → logprob: -10.130287170410156

Token 1429: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.010701841674745083
    2. 'res' → logprob: -5.510701656341553
    3. ' ans' → logprob: -5.510701656341553
    4. '           ' → logprob: -6.260701656341553
    5. '(ans' → logprob: -8.510702133178711
    6. 'count' → logprob: -8.885702133178711
    7. '	ans' → logprob: -9.260702133178711
    8. 'fen' → logprob: -9.635702133178711
    9. 'answer' → logprob: -10.260702133178711
    10. '```' → logprob: -10.635702133178711

Token 1430: ' Query' (ID: 18574)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.000541592831723392
    2. '           ' → logprob: -8.000541687011719
    3. ' ans' → logprob: -8.750541687011719
    4. 'res' → logprob: -10.375541687011719
    5. '
' → logprob: -11.375541687011719
    6. '(ans' → logprob: -13.375541687011719
    7. 'answer' → logprob: -14.000541687011719
    8. '	ans' → logprob: -14.125541687011719
    9. '   ' → logprob: -14.750541687011719
    10. '            
' → logprob: -14.875541687011719

Token 1431: ' frequency' (ID: 19813)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.024328675121068954
    2. ' fen' → logprob: -3.8993287086486816
    3. 'ans' → logprob: -5.774328708648682
    4. 'x' → logprob: -7.649328708648682
    5. 'res' → logprob: -9.274328231811523
    6. '=' → logprob: -10.524328231811523
    7. '           ' → logprob: -10.524328231811523
    8. ' =' → logprob: -11.149328231811523
    9. 'Fen' → logprob: -11.649328231811523
    10. 'result' → logprob: -12.149328231811523

Token 1432: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8035695552825928
    2. '(x' → logprob: -1.3035695552825928
    3. '=' → logprob: -1.6785695552825928
    4. 'x' → logprob: -2.4285695552825928
    5. '(' → logprob: -6.178569793701172
    6. '           ' → logprob: -6.303569793701172
    7. 'up' → logprob: -7.928569793701172
    8. ')' → logprob: -8.928569793701172
    9. 'fen' → logprob: -8.928569793701172
    10. '=x' → logprob: -8.928569793701172

Token 1433: ' prefix' (ID: 18633)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.392824874026701e-05
    2. ' x' → logprob: -10.37503433227539
    3. 'fen' → logprob: -13.37503433227539
    4. '(x' → logprob: -14.00003433227539
    5. '	x' → logprob: -16.75003433227539
    6. '
' → logprob: -16.75003433227539
    7. 'pref' → logprob: -17.00003433227539
    8. '   ' → logprob: -17.25003433227539
    9. '[x' → logprob: -17.62503433227539
    10. '```' → logprob: -18.00003433227539

Token 1434: ' sums' (ID: 73121)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0363142266869545
    2. '(x' → logprob: -3.4113142490386963
    3. '_index' → logprob: -6.536314010620117
    4. 'indices' → logprob: -8.411314010620117
    5. '_x' → logprob: -8.786314010620117
    6. 'index' → logprob: -9.036314010620117
    7. 's' → logprob: -9.286314010620117
    8. ' =' → logprob: -9.536314010620117
    9. 'fen' → logprob: -9.536314010620117
    10. ' x' → logprob: -9.536314010620117

Token 1435: ' <=' (ID: 5017)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12919402122497559
    2. 'x' → logprob: -2.2541940212249756
    3. '=' → logprob: -4.754194259643555
    4. ' =' → logprob: -5.504194259643555
    5. '(' → logprob: -6.504194259643555
    6. 'fen' → logprob: -7.004194259643555
    7. '(f' → logprob: -8.504194259643555
    8. '(
' → logprob: -8.754194259643555
    9. '```' → logprob: -8.754194259643555
    10. '=x' → logprob: -9.254194259643555

Token 1436: ' fen' (ID: 25170)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.088346359931165e-07
    2. ' x' → logprob: -14.000000953674316
    3. '
' → logprob: -20.625
    4. '   ' → logprob: -20.75
    5. '           ' → logprob: -20.75
    6. '	x' → logprob: -20.875
    7. '               ' → logprob: -21.875
    8. '       ' → logprob: -21.875
    9. '```' → logprob: -22.125
    10. '(x' → logprob: -22.25

Token 1437: 'w' (ID: 86)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04870477691292763
    2. 'w' → logprob: -3.0487048625946045
    3. '_index' → logprob: -9.798705101013184
    4. '```' → logprob: -11.298705101013184
    5. '   ' → logprob: -11.673705101013184
    6. 'ow' → logprob: -11.798705101013184
    7. '       ' → logprob: -12.548705101013184
    8. 'dex' → logprob: -12.798705101013184
    9. ' ' → logprob: -12.923705101013184
    10. '(x' → logprob: -12.923705101013184

Token 1438: '_val' (ID: 13694)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.11747444421052933
    2. 'x' → logprob: -2.9924745559692383
    3. '_val' → logprob: -3.1174745559692383
    4. '(x' → logprob: -4.742474555969238
    5. '_x' → logprob: -5.492474555969238
    6. 'val' → logprob: -6.742474555969238
    7. '[x' → logprob: -7.367474555969238
    8. '
' → logprob: -8.242474555969238
    9. '_value' → logprob: -8.242474555969238
    10. '_idx' → logprob: -8.742474555969238

Token 1439: '
' (ID: 198)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.6887243390083313
    2. ' fen' → logprob: -1.9387242794036865
    3. ' =' → logprob: -2.1887242794036865
    4. '           ' → logprob: -2.4387242794036865
    5. '=' → logprob: -2.9387242794036865
    6. '(x' → logprob: -3.1887242794036865
    7. 'x' → logprob: -3.1887242794036865
    8. 'ans' → logprob: -5.063724517822266
    9. 'res' → logprob: -6.438724517822266
    10. ')' → logprob: -6.813724517822266

Token 1440: '           ' (ID: 352)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.09893472492694855
    2. '```' → logprob: -3.0989346504211426
    3. ' fen' → logprob: -3.4739346504211426
    4. '           ' → logprob: -4.848934650421143
    5. '(x' → logprob: -5.473934650421143
    6. 'x' → logprob: -6.598934650421143
    7. '(f' → logprob: -7.098934650421143
    8. '`' → logprob: -7.223934650421143
    9. ')' → logprob: -7.223934650421143
    10. '(' → logprob: -7.473934650421143

Token 1441: ' c' (ID: 274)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.31247591972351074
    2. 'res' → logprob: -1.5624759197235107
    3. 'fen' → logprob: -2.9374759197235107
    4. '           ' → logprob: -6.31247615814209
    5. ' fen' → logprob: -6.68747615814209
    6. 'result' → logprob: -7.18747615814209
    7. 'count' → logprob: -7.31247615814209
    8. ' ans' → logprob: -7.68747615814209
    9. 'answer' → logprob: -8.68747615814209
    10. 'freq' → logprob: -8.93747615814209

Token 1442: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1815604269504547
    2. '=' → logprob: -1.8065603971481323
    3. ' +=' → logprob: -6.556560516357422
    4. '+=' → logprob: -8.806560516357422
    5. '           ' → logprob: -9.181560516357422
    6. 'c' → logprob: -10.806560516357422
    7. ')' → logprob: -11.306560516357422
    8. ' =
' → logprob: -11.306560516357422
    9. '=
' → logprob: -11.431560516357422
    10. '   ' → logprob: -11.431560516357422

Token 1443: ' fen' (ID: 25170)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.008614926598966122
    2. ' fen' → logprob: -4.758615016937256
    3. 'Fen' → logprob: -15.508614540100098
    4. '           ' → logprob: -16.508615493774414
    5. 'c' → logprob: -17.008615493774414
    6. 'fel' → logprob: -17.508615493774414
    7. 'fe' → logprob: -17.758615493774414
    8. 'phen' → logprob: -17.758615493774414
    9. 'fet' → logprob: -18.258615493774414
    10. '0' → logprob: -18.383615493774414

Token 1444: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -16.125
    3. '``' → logprob: -16.5
    4. ' w' → logprob: -16.625
    5. '(w' → logprob: -16.75
    6. '	w' → logprob: -17.125
    7. '[w' → logprob: -17.125
    8. '
' → logprob: -17.375
    9. '       ' → logprob: -17.625
    10. 'ｗ' → logprob: -17.875

Token 1445: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -0.0003034074034076184
    2. '.' → logprob: -8.500303268432617
    3. 'query' → logprob: -9.250303268432617
    4. ' .' → logprob: -13.500303268432617
    5. '=query' → logprob: -14.375303268432617
    6. '.update' → logprob: -14.500303268432617
    7. '```' → logprob: -15.000303268432617
    8. '	query' → logprob: -15.500303268432617
    9. ' query' → logprob: -15.500303268432617
    10. '.
' → logprob: -15.750303268432617

Token 1446: '(x' (ID: 4061)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25195086002349854
    2. '(x' → logprob: -1.5019508600234985
    3. ' x' → logprob: -11.126951217651367
    4. 'c' → logprob: -13.251951217651367
    5. '[x' → logprob: -13.376951217651367
    6. '{x' → logprob: -13.626951217651367
    7. '(c' → logprob: -14.251951217651367
    8. '(' → logprob: -14.376951217651367
    9. ')x' → logprob: -14.876951217651367
    10. '	x' → logprob: -15.251951217651367

Token 1447: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001698094274615869
    2. ')
' → logprob: -8.87516975402832
    3. '<|end|>' → logprob: -11.12516975402832
    4. '           ' → logprob: -12.12516975402832
    5. ' )' → logprob: -12.50016975402832
    6. '+' → logprob: -13.37516975402832
    7. ')+' → logprob: -14.00016975402832
    8. '       ' → logprob: -14.25016975402832
    9. '())' → logprob: -14.87516975402832
    10. '```' → logprob: -14.87516975402832

Token 1448: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011210629716515541
    2. '
' → logprob: -4.6362104415893555
    3. '            
' → logprob: -7.1362104415893555
    4. '```' → logprob: -8.261210441589355
    5. '       ' → logprob: -8.636210441589355
    6. ' fen' → logprob: -10.011210441589355
    7. '<|end|>' → logprob: -10.386210441589355
    8. '   ' → logprob: -10.886210441589355
    9. ')' → logprob: -11.011210441589355
    10. 'fen' → logprob: -11.136210441589355

Token 1449: ' ans' (ID: 3345)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015943335369229317
    2. 'ans' (adapté à ' ans') → logprob: -4.26594352722168
    3. ' ans' → logprob: -6.89094352722168
    4. 'res' → logprob: -7.51594352722168
    5. '
' → logprob: -9.64094352722168
    6. '            
' → logprob: -10.14094352722168
    7. '```' → logprob: -11.01594352722168
    8. '               ' → logprob: -11.14094352722168
    9. '(ans' → logprob: -11.14094352722168
    10. '\' → logprob: -11.14094352722168

Token 1450: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7697725892066956
    2. '+=' → logprob: -0.8947725892066956
    3. '           ' → logprob: -2.144772529602051
    4. '          ' → logprob: -5.519772529602051
    5. '               ' → logprob: -5.644772529602051
    6. '+' → logprob: -6.894772529602051
    7. '```' → logprob: -6.894772529602051
    8. '<|end|>' → logprob: -8.26977252960205
    9. '       ' → logprob: -8.39477252960205
    10. '=' → logprob: -8.64477252960205

Token 1451: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011050770990550518
    2. ' c' → logprob: -4.511050701141357
    3. '           ' → logprob: -13.011051177978516
    4. '	c' → logprob: -14.636051177978516
    5. '               ' → logprob: -16.511051177978516
    6. '(c' → logprob: -16.636051177978516
    7. '
' → logprob: -17.136051177978516
    8. ')c' → logprob: -18.011051177978516
    9. '$c' → logprob: -18.636051177978516
    10. '   ' → logprob: -18.761051177978516

Token 1452: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23612874746322632
    2. '
' → logprob: -1.611128807067871
    3. '            
' → logprob: -4.861128807067871
    4. '```' → logprob: -7.111128807067871
    5. '       ' → logprob: -7.861128807067871
    6. '  
' → logprob: -8.236128807067871
    7. '
' → logprob: -8.361128807067871
    8. '        
' → logprob: -8.361128807067871
    9. 'fen' → logprob: -8.611128807067871
    10. ' 
' → logprob: -8.611128807067871

Token 1453: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6504352688789368
    2. '
' → logprob: -0.9004352688789368
    3. '```' → logprob: -2.900435209274292
    4. '            
' → logprob: -5.150435447692871
    5. '\n' → logprob: -5.525435447692871
    6. '  
' → logprob: -6.400435447692871
    7. '       ' → logprob: -6.525435447692871
    8. '    
' → logprob: -7.025435447692871
    9. '``' → logprob: -7.400435447692871
    10. '        
' → logprob: -7.650435447692871

Token 1454: ' if' (ID: 538)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.01294656191021204
    2. 'if' (adapté à ' if') → logprob: -4.887946605682373
    3. '           ' → logprob: -5.512946605682373
    4. ' fen' → logprob: -6.762946605682373
    5. ' if' → logprob: -10.512946128845215
    6. '   ' → logprob: -10.637946128845215
    7. '       ' → logprob: -10.762946128845215
    8. 'Fen' → logprob: -10.762946128845215
    9. '#' → logprob: -11.012946128845215
    10. '```' → logprob: -11.387946128845215

Token 1455: ' r' (ID: 428)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.5563423037528992
    2. 'r' → logprob: -0.9313423037528992
    3. 'pref' → logprob: -3.556342363357544
    4. '   ' → logprob: -6.181342124938965
    5. ' fen' → logprob: -6.681342124938965
    6. '           ' → logprob: -8.056342124938965
    7. ' r' → logprob: -9.556342124938965
    8. '       ' → logprob: -9.556342124938965
    9. 'True' → logprob: -9.681342124938965
    10. ' pref' → logprob: -9.806342124938965

Token 1456: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9774087071418762
    2. ' -' → logprob: -1.1024086475372314
    3. '-' → logprob: -1.6024086475372314
    4. ' +' → logprob: -2.7274086475372314
    5. '-K' → logprob: -5.2274088859558105
    6. 'r' → logprob: -5.8524088859558105
    7. '-r' → logprob: -5.9774088859558105
    8. '```' → logprob: -6.2274088859558105
    9. '<|end|>' → logprob: -6.3524088859558105
    10. ' <' → logprob: -6.4774088859558105

Token 1457: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08694841712713242
    2. '(self' → logprob: -2.5869483947753906
    3. '(C' → logprob: -5.086948394775391
    4. ' (' → logprob: -7.086948394775391
    5. '(Card' → logprob: -8.21194839477539
    6. ' self' → logprob: -8.46194839477539
    7. '(' → logprob: -8.58694839477539
    8. 'Card' → logprob: -9.33694839477539
    9. '(K' → logprob: -9.96194839477539
    10. 'r' → logprob: -10.21194839477539

Token 1458: '.K' (ID: 14475)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0002929174806922674
    2. '_K' → logprob: -8.750292778015137
    3. '.K' → logprob: -9.125292778015137
    4. ' K' → logprob: -11.000292778015137
    5. '-K' → logprob: -12.500292778015137
    6. '(K' → logprob: -13.750292778015137
    7. '<K' → logprob: -13.875292778015137
    8. 'k' → logprob: -14.000292778015137
    9. '	K' → logprob: -15.125292778015137
    10. ' -' → logprob: -15.500292778015137

Token 1459: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00046165118692442775
    2. ' +' → logprob: -7.750461578369141
    3. '```' → logprob: -10.50046157836914
    4. '>' → logprob: -14.00046157836914
    5. '>=' → logprob: -14.12546157836914
    6. '+
' → logprob: -14.50046157836914
    7. '[' → logprob: -15.62546157836914
    8. '＋' → logprob: -15.62546157836914
    9. '+++' → logprob: -15.62546157836914
    10. '+r' → logprob: -15.62546157836914

Token 1460: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013346440391615033
    2. '2' → logprob: -6.6263346672058105
    3. ' ' → logprob: -11.876334190368652
    4. '=' → logprob: -13.751334190368652
    5. '```' → logprob: -15.001334190368652
    6. '0' → logprob: -15.501334190368652
    7. '>' → logprob: -16.75133514404297
    8. '   ' → logprob: -17.00133514404297
    9. '<|end|>' → logprob: -19.25133514404297
    10. ' =' → logprob: -19.37633514404297

Token 1461: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013439236208796501
    2. '2' → logprob: -6.626343727111816
    3. '0' → logprob: -11.001343727111816
    4. '```' → logprob: -14.376343727111816
    5. ' ' → logprob: -15.251343727111816
    6. '   ' → logprob: -15.376343727111816
    7. '=' → logprob: -16.813844680786133
    8. '
' → logprob: -16.876344680786133
    9. '-' → logprob: -16.938844680786133
    10. '>' → logprob: -17.001344680786133

Token 1462: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.0015686750411987
    2. '+' → logprob: -1.5015686750411987
    3. '>=' → logprob: -1.7515686750411987
    4. ' +' → logprob: -1.7515686750411987
    5. '>' → logprob: -3.2515687942504883
    6. ' >' → logprob: -4.626568794250488
    7. ' <' → logprob: -5.626568794250488
    8. ' ==' → logprob: -6.001568794250488
    9. ')' → logprob: -6.001568794250488
    10. '==' → logprob: -6.751568794250488

Token 1463: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020544764993246645
    2. ' self' → logprob: -8.625205039978027
    3. 'len' → logprob: -10.750205039978027
    4. '(self' → logprob: -13.000205039978027
    5. '=self' → logprob: -14.500205039978027
    6. '	self' → logprob: -14.875205039978027
    7. '
' → logprob: -15.125205039978027
    8. '[self' → logprob: -15.375205039978027
    9. '```' → logprob: -15.750205039978027
    10. '   ' → logprob: -15.750205039978027

Token 1464: '.N' (ID: 4439)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0052717034704983234
    2. '.N' → logprob: -5.255271911621094
    3. '_N' → logprob: -11.630271911621094
    4. 'size' → logprob: -12.255271911621094
    5. '	N' → logprob: -12.505271911621094
    6. ' N' → logprob: -12.505271911621094
    7. '   ' → logprob: -12.505271911621094
    8. '<N' → logprob: -13.130271911621094
    9. '.' → logprob: -13.380271911621094
    10. '
' → logprob: -13.505271911621094

Token 1465: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6147465705871582
    2. ':' → logprob: -0.8647465705871582
    3. '+' → logprob: -3.489746570587158
    4. '           ' → logprob: -5.614746570587158
    5. ' +' → logprob: -6.989746570587158
    6. ' and' → logprob: -7.114746570587158
    7. '-' → logprob: -7.239746570587158
    8. '       ' → logprob: -7.614746570587158
    9. '```' → logprob: -7.989746570587158
    10. '):
' → logprob: -8.61474609375

Token 1466: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2583557665348053
    2. ' fen' → logprob: -1.758355736732483
    3. 'fen' → logprob: -3.0083558559417725
    4. '           ' → logprob: -5.383355617523193
    5. '```' → logprob: -6.633355617523193
    6. '   ' → logprob: -10.883356094360352
    7. '                   ' → logprob: -11.633356094360352
    8. '       ' → logprob: -11.758356094360352
    9. '``' → logprob: -12.133356094360352
    10. '            ' → logprob: -12.383356094360352

Token 1467: ' fen' (ID: 25170)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' (adapté à ' fen') → logprob: -9.710618905955926e-05
    2. ' fen' → logprob: -9.250097274780273
    3. '           ' → logprob: -14.250097274780273
    4. 'Fen' → logprob: -15.500097274780273
    5. 'idx' → logprob: -17.875097274780273
    6. '   ' → logprob: -17.875097274780273
    7. '               ' → logprob: -19.250097274780273
    8. 'index' → logprob: -19.250097274780273
    9. 'phen' → logprob: -19.625097274780273
    10. '```' → logprob: -20.000097274780273

Token 1468: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: 0.0
    2. '```' → logprob: -18.375
    3. '.w' → logprob: -19.0
    4. '``' → logprob: -19.125
    5. '	w' → logprob: -19.125
    6. '_w' → logprob: -19.25
    7. ' w' → logprob: -19.375
    8. '(w' → logprob: -19.5
    9. '
' → logprob: -19.875
    10. '       ' → logprob: -19.875

Token 1469: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.00038991993642412126
    2. '.' → logprob: -7.87539005279541
    3. 'update' → logprob: -11.75039005279541
    4. ' .' → logprob: -14.12539005279541
    5. '.increment' → logprob: -15.12539005279541
    6. '```' → logprob: -15.12539005279541
    7. '   ' → logprob: -15.25039005279541
    8. '_update' → logprob: -15.37539005279541
    9. '.add' → logprob: -15.62539005279541
    10. '更新' → logprob: -17.375389099121094

Token 1470: '(pref' (ID: 175719)
  Prédit: '(pref'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pref' → logprob: -0.0007108822464942932
    2. 'pref' → logprob: -7.250710964202881
    3. '(' → logprob: -15.000710487365723
    4. '(
' → logprob: -15.500710487365723
    5. ' pref' → logprob: -15.750710487365723
    6. '.pref' → logprob: -16.62571144104004
    7. 'Pref' → logprob: -16.75071144104004
    8. '   ' → logprob: -16.87571144104004
    9. '_pref' → logprob: -17.25071144104004
    10. '       ' → logprob: -17.25071144104004

Token 1471: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -6.790129555156454e-05
    2. 'index' → logprob: -9.625067710876465
    3. 'Index' → logprob: -13.500067710876465
    4. '```' → logprob: -16.00006866455078
    5. '   ' → logprob: -16.37506866455078
    6. '
' → logprob: -17.00006866455078
    7. '[r' → logprob: -17.12506866455078
    8. 'idx' → logprob: -17.25006866455078
    9. 'i' → logprob: -17.25006866455078
    10. '\' → logprob: -17.37506866455078

Token 1472: '(pref' (ID: 175719)
  Prédit: '(pref'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pref' → logprob: -0.03804366663098335
    2. 'pref' → logprob: -3.288043737411499
    3. ' pref' → logprob: -13.913043975830078
    4. '(prefix' → logprob: -15.288043975830078
    5. '.pref' → logprob: -15.663043975830078
    6. 'prefix' → logprob: -15.663043975830078
    7. '   ' → logprob: -15.663043975830078
    8. '(' → logprob: -15.913043975830078
    9. '_pref' → logprob: -15.913043975830078
    10. 'Pref' → logprob: -16.163043975830078

Token 1473: '[r' (ID: 33265)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.31334659457206726
    2. '[r' → logprob: -1.3133466243743896
    3. '   ' → logprob: -10.563346862792969
    4. '[
' → logprob: -10.938346862792969
    5. '```' → logprob: -11.188346862792969
    6. '[' → logprob: -11.563346862792969
    7. '(r' → logprob: -12.188346862792969
    8. '_r' → logprob: -12.813346862792969
    9. '
' → logprob: -12.938346862792969
    10. '[(' → logprob: -13.063346862792969

Token 1474: ' -' (ID: 533)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06304106116294861
    2. '-' → logprob: -3.6880409717559814
    3. '[r' → logprob: -3.6880409717559814
    4. ' -' → logprob: -5.0630412101745605
    5. '-r' → logprob: -6.0630412101745605
    6. '+' → logprob: -6.9380412101745605
    7. '   ' → logprob: -7.4380412101745605
    8. '(r' → logprob: -7.6880412101745605
    9. ' r' → logprob: -9.188040733337402
    10. ']' → logprob: -9.938040733337402

Token 1475: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.24179228907451e-05
    2. 'K' → logprob: -10.500061988830566
    3. ' self' → logprob: -11.000061988830566
    4. '(self' → logprob: -11.000061988830566
    5. 'k' → logprob: -14.625061988830566
    6. '1' → logprob: -15.375061988830566
    7. '0' → logprob: -15.625061988830566
    8. 'r' → logprob: -15.750061988830566
    9. '   ' → logprob: -15.875061988830566
    10. '(' → logprob: -16.375062942504883

Token 1476: '.K' (ID: 14475)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.6581125855445862
    2. 'self' → logprob: -0.7831125855445862
    3. '+' → logprob: -3.9081125259399414
    4. '```' → logprob: -6.033112525939941
    5. '1' → logprob: -6.658112525939941
    6. 'k' → logprob: -7.283112525939941
    7. '-' → logprob: -8.908112525939941
    8. '``' → logprob: -9.283112525939941
    9. ' self' → logprob: -9.658112525939941
    10. '   ' → logprob: -9.658112525939941

Token 1477: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006554892170242965
    2. ' +' → logprob: -7.375655651092529
    3. '1' → logprob: -11.000655174255371
    4. '+r' → logprob: -12.250655174255371
    5. '```' → logprob: -12.625655174255371
    6. '   ' → logprob: -14.125655174255371
    7. ']+' → logprob: -14.375655174255371
    8. ']' → logprob: -14.500655174255371
    9. '       ' → logprob: -15.375655174255371
    10. '+l' → logprob: -15.375655174255371

Token 1478: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.791440293658525e-05
    2. '2' → logprob: -9.875078201293945
    3. ' ' → logprob: -11.500078201293945
    4. '```' → logprob: -12.125078201293945
    5. '+' → logprob: -12.500078201293945
    6. '0' → logprob: -12.625078201293945
    7. '   ' → logprob: -13.125078201293945
    8. '
' → logprob: -14.812578201293945
    9. '``' → logprob: -15.437578201293945
    10. '       ' → logprob: -15.937578201293945

Token 1479: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. '2' → logprob: -11.750011444091797
    3. '0' → logprob: -12.625011444091797
    4. ' ' → logprob: -15.250011444091797
    5. '```' → logprob: -16.000011444091797
    6. '   ' → logprob: -16.125011444091797
    7. '
' → logprob: -17.500011444091797
    8. '``' → logprob: -19.375011444091797
    9. '3' → logprob: -19.500011444091797
    10. '+' → logprob: -19.687511444091797

Token 1480: ']),' (ID: 19560)
  Prédit: ']),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.04400777816772461
    2. '(pref' → logprob: -3.5440077781677246
    3. '```' → logprob: -5.794007778167725
    4. '),' → logprob: -6.169007778167725
    5. '()' → logprob: -6.294007778167725
    6. '       ' → logprob: -6.544007778167725
    7. '],' → logprob: -6.919007778167725
    8. '           ' → logprob: -7.169007778167725
    9. ']' → logprob: -7.294007778167725
    10. ')],' → logprob: -7.419007778167725

Token 1481: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.250017166137695
    3. '+' → logprob: -13.125017166137695
    4. '```' → logprob: -14.375017166137695
    5. '               ' → logprob: -14.625017166137695
    6. '           ' → logprob: -14.750017166137695
    7. '                   ' → logprob: -15.250017166137695
    8. '-' → logprob: -15.375017166137695
    9. '   ' → logprob: -15.875017166137695
    10. '                       ' → logprob: -17.875017166137695

Token 1482: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '           ' → logprob: -17.875
    4. '+' → logprob: -18.25
    5. '   ' → logprob: -18.5
    6. '               ' → logprob: -19.25
    7. '                   ' → logprob: -20.75
    8. '
' → logprob: -21.5
    9. '       ' → logprob: -21.75
    10. '```' → logprob: -21.75

Token 1483: ')

' (ID: 1029)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1484: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1485: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004176833899691701
    2. 'return' (adapté à ' return') → logprob: -8.000417709350586
    3. '   ' → logprob: -10.375417709350586
    4. ' return' → logprob: -11.250417709350586
    5. '<|end|>' → logprob: -11.375417709350586
    6. '           ' → logprob: -12.000417709350586
    7. '```' → logprob: -12.000417709350586
    8. '	' → logprob: -12.375417709350586
    9. '	return' → logprob: -13.000417709350586
    10. ')' → logprob: -13.625417709350586

Token 1486: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -9.65101717156358e-05
    2. ' ans' → logprob: -9.250096321105957
    3. '(ans' → logprob: -15.625096321105957
    4. '	ans' → logprob: -15.750096321105957
    5. '   ' → logprob: -17.250097274780273
    6. '```' → logprob: -20.625097274780273
    7. '_ans' → logprob: -20.875097274780273
    8. '       ' → logprob: -21.125097274780273
    9. 'answer' → logprob: -21.500097274780273
    10. '  ' → logprob: -21.875097274780273

Token 1487: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1488: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1489: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.0602654218673706
    2. ' ' → logprob: -1.4352654218673706
    3. '__' → logprob: -2.18526554107666
    4. ' Card' → logprob: -2.43526554107666
    5. ' solve' → logprob: -3.56026554107666
    6. 'main' → logprob: -3.56026554107666
    7. '_' → logprob: -3.56026554107666
    8. ' __' → logprob: -3.68526554107666
    9. 'Card' → logprob: -3.81026554107666
    10. '<|end|>' → logprob: -3.81026554107666

Token 1490: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.061988864094018936
    2. '():
' → logprob: -2.8119888305664062
    3. '()' → logprob: -11.436988830566406
    4. '():
' → logprob: -11.811988830566406
    5. '():

' → logprob: -13.436988830566406
    6. 'def' → logprob: -14.186988830566406
    7. '().' → logprob: -15.811988830566406
    8. '()>' → logprob: -16.311988830566406
    9. ' ():' → logprob: -16.436988830566406
    10. ':' → logprob: -16.686988830566406

Token 1491: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019583076238632202
    2. ' game' → logprob: -4.769583225250244
    3. 'game' → logprob: -5.269583225250244
    4. '```' → logprob: -5.519583225250244
    5. 'def' → logprob: -7.519583225250244
    6. ' if' → logprob: -7.894583225250244
    7. ' def' → logprob: -9.019582748413086
    8. 'if' → logprob: -9.144582748413086
    9. ' cg' → logprob: -9.269582748413086
    10. 'import' → logprob: -9.519582748413086

Token 1492: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.7105976343154907
    2. '   ' → logprob: -0.8355976343154907
    3. ' import' → logprob: -2.835597515106201
    4. 'game' → logprob: -4.960597515106201
    5. 'n' → logprob: -5.585597515106201
    6. '```' → logprob: -6.085597515106201
    7. ' n' → logprob: -6.835597515106201
    8. 'N' → logprob: -7.210597515106201
    9. ' N' → logprob: -7.585597515106201
    10. ' game' → logprob: -7.835597515106201

Token 1493: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -4.320199877838604e-07
    2. ' sys' → logprob: -15.25
    3. 'bis' → logprob: -15.75
    4. 'math' → logprob: -21.0
    5. '=sys' → logprob: -22.0
    6. 'heap' → logprob: -22.75
    7. '```' → logprob: -23.125
    8. '(sys' → logprob: -23.5
    9. 'stdin' → logprob: -24.0
    10. '
' → logprob: -24.25

Token 1494: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2543036639690399
    2. '```' → logprob: -1.6293036937713623
    3. '
' → logprob: -4.004303455352783
    4. 'input' → logprob: -5.754303455352783
    5. '``' → logprob: -5.879303455352783
    6. '    
' → logprob: -6.254303455352783
    7. 'def' → logprob: -6.629303455352783
    8. '`' → logprob: -8.504303932189941
    9. '(
' → logprob: -8.754303932189941
    10. 'for' → logprob: -9.129303932189941

Token 1495: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01713460311293602
    2. '```' → logprob: -4.767134666442871
    3. 'input' → logprob: -5.267134666442871
    4. '
' → logprob: -6.267134666442871
    5. 'data' → logprob: -7.517134666442871
    6. '    
' → logprob: -8.142134666442871
    7. '``' → logprob: -8.267134666442871
    8. ' input' → logprob: -9.142134666442871
    9. ' readline' → logprob: -9.892134666442871
    10. '`' → logprob: -10.392134666442871

Token 1496: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05738009884953499
    2. 'input' (adapté à ' input') → logprob: -3.432380199432373
    3. 'data' → logprob: -4.057380199432373
    4. '```' → logprob: -5.432380199432373
    5. '
' → logprob: -6.682380199432373
    6. ' input' → logprob: -8.807379722595215
    7. 'line' → logprob: -9.557379722595215
    8. '``' → logprob: -9.682379722595215
    9. ' readline' → logprob: -9.682379722595215
    10. '    
' → logprob: -9.807379722595215

Token 1497: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6124130487442017
    2. '()' → logprob: -0.8624130487442017
    3. ' =' → logprob: -3.737412929534912
    4. '_line' → logprob: -5.112412929534912
    5. '_data' → logprob: -6.112412929534912
    6. '().' → logprob: -6.737412929534912
    7. '=sys' → logprob: -7.737412929534912
    8. '   ' → logprob: -7.862412929534912
    9. '.readline' → logprob: -8.11241340637207
    10. '()
' → logprob: -8.11241340637207

Token 1498: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.16023783385753632
    2. ' sys' → logprob: -1.9102377891540527
    3. '=sys' → logprob: -11.410238265991211
    4. 'input' → logprob: -13.410238265991211
    5. '	sys' → logprob: -14.535238265991211
    6. 'lambda' → logprob: -14.785238265991211
    7. '(sys' → logprob: -16.03523826599121
    8. ' input' → logprob: -17.16023826599121
    9. ' lambda' → logprob: -17.41023826599121
    10. '   ' → logprob: -17.41023826599121

Token 1499: '.stdin' (ID: 93480)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1972302496433258
    2. '.readline' → logprob: -2.572230339050293
    3. '.stdin' → logprob: -2.697230339050293
    4. '.' → logprob: -3.447230339050293
    5. 'stdin' → logprob: -6.947230339050293
    6. '.read' → logprob: -7.822230339050293
    7. '   ' → logprob: -8.197230339050293
    8. ' .' → logprob: -8.447230339050293
    9. '=sys' → logprob: -8.447230339050293
    10. '(stdin' → logprob: -8.822230339050293

Token 1500: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.02026483602821827
    2. '```' → logprob: -4.020264625549316
    3. '().' → logprob: -6.395264625549316
    4. '.' → logprob: -9.270264625549316
    5. '()' → logprob: -9.520264625549316
    6. '.read' → logprob: -9.770264625549316
    7. 'read' → logprob: -9.895264625549316
    8. '.readlines' → logprob: -10.270264625549316
    9. ' readline' → logprob: -10.645264625549316
    10. '()
' → logprob: -10.645264625549316

Token 1501: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03475670516490936
    2. '```' → logprob: -4.034756660461426
    3. '
' → logprob: -4.409756660461426
    4. '    
' → logprob: -6.784756660461426
    5. '``' → logprob: -7.159756660461426
    6. 'n' → logprob: -7.284756660461426
    7. 'N' → logprob: -7.909756660461426
    8. '()
' → logprob: -8.159756660461426
    9. '(n' → logprob: -8.409756660461426
    10. '(
' → logprob: -8.659756660461426

Token 1502: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09074660390615463
    2. '```' → logprob: -3.4657466411590576
    3. '
' → logprob: -3.5907466411590576
    4. 'N' → logprob: -4.0907464027404785
    5. 'n' → logprob: -4.9657464027404785
    6. '``' → logprob: -6.7157464027404785
    7. '    
' → logprob: -6.9657464027404785
    8. 'def' → logprob: -7.2157464027404785
    9. 'data' → logprob: -7.3407464027404785
    10. '(n' → logprob: -8.715746879577637

Token 1503: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.1979689747095108
    2. 'n' → logprob: -1.9479689598083496
    3. '   ' → logprob: -3.3229689598083496
    4. '
' → logprob: -7.19796895980835
    5. '```' → logprob: -9.322969436645508
    6. 'def' → logprob: -10.197969436645508
    7. '    
' → logprob: -10.822969436645508
    8. ' n' → logprob: -10.822969436645508
    9. '``' → logprob: -10.822969436645508
    10. ' N' → logprob: -10.947969436645508

Token 1504: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002988776541315019
    2. '=' → logprob: -8.750298500061035
    3. '   ' → logprob: -9.875298500061035
    4. ' ,' → logprob: -10.375298500061035
    5. ' =' → logprob: -10.750298500061035
    6. ',N' → logprob: -10.875298500061035
    7. ',K' → logprob: -12.500298500061035
    8. ',int' → logprob: -12.750298500061035
    9. '=int' → logprob: -13.250298500061035
    10. 'int' → logprob: -13.500298500061035

Token 1505: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00013572083844337612
    2. ' K' → logprob: -9.00013542175293
    3. 'M' → logprob: -11.50013542175293
    4. '   ' → logprob: -13.25013542175293
    5. 'int' → logprob: -16.50013542175293
    6. '=' → logprob: -16.75013542175293
    7. '  ' → logprob: -17.12513542175293
    8. 'L' → logprob: -17.50013542175293
    9. ',K' → logprob: -17.62513542175293
    10. 'T' → logprob: -17.75013542175293

Token 1506: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01256792712956667
    2. '=' → logprob: -4.38756799697876
    3. ' =' → logprob: -10.762567520141602
    4. ',K' → logprob: -10.887567520141602
    5. ' ,' → logprob: -11.137567520141602
    6. ',N' → logprob: -14.137567520141602
    7. '   ' → logprob: -14.512567520141602
    8. '<|end|>' → logprob: -14.887567520141602
    9. ',Q' → logprob: -15.012567520141602
    10. ',C' → logprob: -15.137567520141602

Token 1507: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0003361774142831564
    2. ' L' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.250336647033691
    4. 'M' → logprob: -17.500335693359375
    5. '    ' → logprob: -18.125335693359375
    6. ' ' → logprob: -18.375335693359375
    7. '=' → logprob: -18.500335693359375
    8. ' =' → logprob: -18.750335693359375
    9. ' ' → logprob: -19.000335693359375
    10. '=L' → logprob: -19.000335693359375

Token 1508: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08907055109739304
    2. ' =' → logprob: -2.4640705585479736
    3. ',' → logprob: -8.964070320129395
    4. '   ' → logprob: -14.214070320129395
    5. '=input' → logprob: -14.339070320129395
    6. '=line' → logprob: -14.964070320129395
    7. '=
' → logprob: -15.214070320129395
    8. ' ' → logprob: -15.464070320129395
    9. ')' → logprob: -15.589070320129395
    10. '    ' → logprob: -16.08907127380371

Token 1509: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.47408074140548706
    2. 'map' → logprob: -0.9740807414054871
    3. 'input' → logprob: -12.724081039428711
    4. ' input' → logprob: -15.474081039428711
    5. '[' → logprob: -15.599081039428711
    6. 'list' → logprob: -16.34908103942871
    7. '
' → logprob: -16.59908103942871
    8. '	map' → logprob: -16.59908103942871
    9. '(map' → logprob: -16.72408103942871
    10. ' list' → logprob: -17.22408103942871

Token 1510: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00029041420202702284
    2. 'int' → logprob: -8.375290870666504
    3. '(input' → logprob: -10.500290870666504
    4. '(str' → logprob: -11.125290870666504
    5. '=int' → logprob: -12.000290870666504
    6. '[int' → logprob: -12.500290870666504
    7. 'input' → logprob: -12.625290870666504
    8. '<int' → logprob: -13.500290870666504
    9. '```' → logprob: -13.750290870666504
    10. '(lambda' → logprob: -14.125290870666504

Token 1511: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4760422110557556
    2. '(int' → logprob: -1.7260422706604004
    3. ',' → logprob: -2.7260422706604004
    4. 'input' → logprob: -2.7260422706604004
    5. ',input' → logprob: -3.3510422706604004
    6. '=input' → logprob: -4.3510422706604
    7. '(' → logprob: -4.6010422706604
    8. ',int' → logprob: -5.8510422706604
    9. '(),' → logprob: -5.9760422706604
    10. '()' → logprob: -6.2260422706604

Token 1512: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.7610454708337784e-05
    2. ' input' → logprob: -10.500027656555176
    3. '=input' → logprob: -17.87502670288086
    4. '<input' → logprob: -18.50002670288086
    5. '
' → logprob: -18.87502670288086
    6. 'sys' → logprob: -19.37502670288086
    7. '(input' → logprob: -19.50002670288086
    8. '```' → logprob: -19.87502670288086
    9. 'int' → logprob: -21.37502670288086
    10. ',input' → logprob: -21.75002670288086

Token 1513: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.1080467781284824e-05
    2. '()' → logprob: -10.125041007995605
    3. '())' → logprob: -14.125041007995605
    4. '()
' → logprob: -15.375041007995605
    5. ' ().' → logprob: -17.750041961669922
    6. '   ' → logprob: -18.250041961669922
    7. ')' → logprob: -18.500041961669922
    8. '())
' → logprob: -18.625041961669922
    9. '()[' → logprob: -18.875041961669922
    10. '(' → logprob: -19.000041961669922

Token 1514: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00039588010986335576
    2. 'strip' → logprob: -7.875395774841309
    3. 'rstrip' → logprob: -11.750395774841309
    4. '().' → logprob: -12.000395774841309
    5. '(split' → logprob: -14.375395774841309
    6. ' split' → logprob: -14.500395774841309
    7. '()' → logprob: -15.000395774841309
    8. ')' → logprob: -16.375396728515625
    9. '_split' → logprob: -16.375396728515625
    10. '```' → logprob: -16.875396728515625

Token 1515: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7035501599311829
    2. ')
' → logprob: -0.7035501599311829
    3. '())
' → logprob: -4.828550338745117
    4. '())' → logprob: -6.453550338745117
    5. '   ' → logprob: -7.328550338745117
    6. '()' → logprob: -9.328550338745117
    7. '()
' → logprob: -11.703550338745117
    8. ')
' → logprob: -11.703550338745117
    9. ')`
' → logprob: -12.078550338745117
    10. '       ' → logprob: -13.078550338745117

Token 1516: '   ' (ID: 271)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.27007290720939636
    2. '   ' → logprob: -1.6450729370117188
    3. ' cards' → logprob: -3.1450729370117188
    4. '```' → logprob: -7.770072937011719
    5. '(cards' → logprob: -10.145072937011719
    6. '.cards' → logprob: -10.145072937011719
    7. '_cards' → logprob: -10.520072937011719
    8. 'c' → logprob: -10.895072937011719
    9. '
' → logprob: -10.895072937011719
    10. '``' → logprob: -11.270072937011719

Token 1517: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' (adapté à ' cards') → logprob: -0.0020114334765821695
    2. ' cards' → logprob: -6.502011299133301
    3. '   ' → logprob: -7.627011299133301
    4. '```' → logprob: -11.6270112991333
    5. '
' → logprob: -12.5020112991333
    6. 'A' → logprob: -12.7520112991333
    7. '_cards' → logprob: -13.3770112991333
    8. '.cards' → logprob: -13.6270112991333
    9. 'Cards' → logprob: -13.7520112991333
    10. '(cards' → logprob: -14.0020112991333

Token 1518: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2367853969335556
    2. ' =' → logprob: -1.6117854118347168
    3. '   ' → logprob: -4.486785411834717
    4. ',' → logprob: -11.611784934997559
    5. ')' → logprob: -12.236784934997559
    6. '```' → logprob: -12.236784934997559
    7. '[' → logprob: -12.611784934997559
    8. '=
' → logprob: -12.736784934997559
    9. '(cards' → logprob: -12.736784934997559
    10. '    ' → logprob: -12.986784934997559

Token 1519: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02324652671813965
    2. ' list' → logprob: -3.7732465267181396
    3. '[list' → logprob: -13.773246765136719
    4. '[' → logprob: -18.14824676513672
    5. '	list' → logprob: -18.39824676513672
    6. '=list' → logprob: -18.39824676513672
    7. '   ' → logprob: -19.27324676513672
    8. '(list' → logprob: -20.27324676513672
    9. 'List' → logprob: -20.39824676513672
    10. ' [' → logprob: -21.77324676513672

Token 1520: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.735893965815194e-05
    2. ' int' → logprob: -11.250017166137695
    3. '*' → logprob: -13.250017166137695
    4. '   ' → logprob: -13.250017166137695
    5. '
' → logprob: -14.500017166137695
    6. '```' → logprob: -16.625017166137695
    7. '  ' → logprob: -17.000017166137695
    8. ' ' → logprob: -17.875017166137695
    9. '<int' → logprob: -18.375017166137695
    10. '(int' → logprob: -18.500017166137695

Token 1521: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2018851488828659
    2. 'input' → logprob: -1.7018851041793823
    3. '()' → logprob: -8.451885223388672
    4. '(x' → logprob: -9.076885223388672
    5. '(' → logprob: -9.701885223388672
    6. ' input' → logprob: -10.326885223388672
    7. 'x' → logprob: -11.326885223388672
    8. '=input' → logprob: -11.326885223388672
    9. '()]' → logprob: -11.451885223388672
    10. '(
' → logprob: -11.951885223388672

Token 1522: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2912275493144989
    2. '())' → logprob: -1.5412275791168213
    3. '().' → logprob: -3.2912275791168213
    4. '()
' → logprob: -6.791227340698242
    5. '()]' → logprob: -8.791227340698242
    6. '())
' → logprob: -10.041227340698242
    7. '()),' → logprob: -13.166227340698242
    8. ' ()' → logprob: -13.541227340698242
    9. '()]
' → logprob: -13.666227340698242
    10. '().
' → logprob: -13.916227340698242

Token 1523: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012879748828709126
    2. ' for' → logprob: -7.376287937164307
    3. 'for' → logprob: -7.626287937164307
    4. '().' → logprob: -9.126288414001465
    5. '())' → logprob: -10.626288414001465
    6. '()]' → logprob: -11.376288414001465
    7. '   ' → logprob: -11.876288414001465
    8. ')' → logprob: -11.876288414001465
    9. '()
' → logprob: -12.376288414001465
    10. ' ()' → logprob: -12.501288414001465

Token 1524: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00016396844875998795
    2. '_i' → logprob: -9.375164031982422
    3. '_in' → logprob: -9.875164031982422
    4. '_range' → logprob: -11.250164031982422
    5. '_
' → logprob: -12.250164031982422
    6. '_=' → logprob: -13.500164031982422
    7. '
' → logprob: -14.250164031982422
    8. 'i' → logprob: -14.250164031982422
    9. '_N' → logprob: -14.250164031982422
    10. '_ans' → logprob: -14.500164031982422

Token 1525: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023561766371130943
    2. 'in' → logprob: -3.773561716079712
    3. '_' → logprob: -8.273561477661133
    4. ' range' → logprob: -9.898561477661133
    5. 'i' → logprob: -12.273561477661133
    6. '_range' → logprob: -12.898561477661133
    7. ' in' → logprob: -13.648561477661133
    8. '	range' → logprob: -14.523561477661133
    9. '(range' → logprob: -14.898561477661133
    10. '0' → logprob: -14.898561477661133

Token 1526: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.5048530030981055e-06
    2. ' range' → logprob: -13.500001907348633
    3. '(range' → logprob: -21.125001907348633
    4. '	range' → logprob: -22.250001907348633
    5. '.range' → logprob: -24.250001907348633
    6. '   ' → logprob: -24.625001907348633
    7. '```' → logprob: -25.000001907348633
    8. '_range' → logprob: -25.625001907348633
    9. '  ' → logprob: -26.125001907348633
    10. 'rang' → logprob: -26.125001907348633

Token 1527: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00596636114642024
    2. '(N' → logprob: -5.2559661865234375
    3. 'range' → logprob: -7.2559661865234375
    4. ' range' → logprob: -11.380966186523438
    5. ' N' → logprob: -11.755966186523438
    6. '_N' → logprob: -12.755966186523438
    7. '	N' → logprob: -13.630966186523438
    8. 'n' → logprob: -13.880966186523438
    9. '0' → logprob: -14.255966186523438
    10. 'Q' → logprob: -14.630966186523438

Token 1528: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.038563281297683716
    2. ']' → logprob: -3.2885632514953613
    3. ')' → logprob: -7.788563251495361
    4. '   ' → logprob: -9.41356372833252
    5. '()]' → logprob: -11.66356372833252
    6. '])' → logprob: -12.03856372833252
    7. '])]' → logprob: -12.66356372833252
    8. ' ]' → logprob: -12.78856372833252
    9. ')])' → logprob: -13.66356372833252
    10. '`]' → logprob: -13.78856372833252

Token 1529: '   ' (ID: 271)
  Prédit: 'game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'game' → logprob: -0.38733112812042236
    2. '   ' → logprob: -1.1373311281204224
    3. ' game' → logprob: -7.887331008911133
    4. 'cg' → logprob: -10.262331008911133
    5. '
' → logprob: -10.762331008911133
    6. '```' → logprob: -11.387331008911133
    7. 'card' → logprob: -12.137331008911133
    8. '    
' → logprob: -12.762331008911133
    9. '	game' → logprob: -13.262331008911133
    10. 'solution' → logprob: -14.012331008911133

Token 1530: ' game' (ID: 2813)
  Prédit: 'game'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'game' (adapté à ' game') → logprob: -0.0014230913948267698
    2. '   ' → logprob: -6.751422882080078
    3. ' game' → logprob: -8.876422882080078
    4. 'cg' → logprob: -9.126422882080078
    5. 'solver' → logprob: -13.501422882080078
    6. 'g' → logprob: -14.126422882080078
    7. '
' → logprob: -14.376422882080078
    8. '    
' → logprob: -14.626422882080078
    9. 'obj' → logprob: -15.126422882080078
    10. 'solution' → logprob: -15.501422882080078

Token 1531: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759490728378296
    2. ' =' → logprob: -0.8259490728378296
    3. '.' → logprob: -13.200948715209961
    4. '=
' → logprob: -13.700948715209961
    5. '<|end|>' → logprob: -13.950948715209961
    6. ' ' → logprob: -14.075948715209961
    7. '   ' → logprob: -14.450948715209961
    8. ' ' → logprob: -14.450948715209961
    9. '	' → logprob: -14.575948715209961
    10. ' =
' → logprob: -14.825948715209961

Token 1532: ' Card' (ID: 9958)
  Prédit: 'Card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -0.00020354038861114532
    2. ' Card' → logprob: -8.500203132629395
    3. 'Car' → logprob: -18.37520408630371
    4. '   ' → logprob: -20.37520408630371
    5. '<Card' → logprob: -20.75020408630371
    6. 'Cards' → logprob: -21.37520408630371
    7. '(Card' → logprob: -21.75020408630371
    8. 'Code' → logprob: -21.87520408630371
    9. 'Game' → logprob: -22.37520408630371
    10. '_card' → logprob: -23.00020408630371

Token 1533: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -6.704273118884885e-07
    2. '(Game' → logprob: -15.375000953674316
    3. '<Game' → logprob: -15.750000953674316
    4. 'game' → logprob: -16.625
    5. ' Game' → logprob: -16.875
    6. '_Game' → logprob: -16.875
    7. '_game' → logprob: -18.125
    8. '	Game' → logprob: -18.25
    9. 'Card' → logprob: -18.5
    10. '.Game' → logprob: -18.625

Token 1534: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2669163942337036
    2. 'N' → logprob: -1.8919163942337036
    3. 'Card' → logprob: -2.516916275024414
    4. 'Game' → logprob: -6.891916275024414
    5. 'Cards' → logprob: -6.891916275024414
    6. '(Card' → logprob: -8.516916275024414
    7. 'cards' → logprob: -8.641916275024414
    8. '   ' → logprob: -8.766916275024414
    9. '(
' → logprob: -9.766916275024414
    10. '(' → logprob: -10.391916275024414

Token 1535: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036846695002168417
    2. ',K' → logprob: -8.500368118286133
    3. ',N' → logprob: -8.875368118286133
    4. '   ' → logprob: -11.125368118286133
    5. ' ,' → logprob: -12.500368118286133
    6. ')' → logprob: -12.625368118286133
    7. ',
' → logprob: -13.000368118286133
    8. '‌,' → logprob: -15.375368118286133
    9. ',None' → logprob: -16.000368118286133
    10. ',C' → logprob: -16.250368118286133

Token 1536: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -7.896309739408025e-07
    2. ' K' → logprob: -14.500000953674316
    3. '   ' → logprob: -15.375000953674316
    4. '       ' → logprob: -20.5
    5. 'game' → logprob: -21.0
    6. '	K' → logprob: -21.125
    7. '  ' → logprob: -21.25
    8. '
' → logprob: -21.75
    9. '```' → logprob: -21.75
    10. 'cards' → logprob: -22.25

Token 1537: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.56233171664644e-05
    2. ',L' → logprob: -9.875055313110352
    3. ' ,' → logprob: -13.125055313110352
    4. 'L' → logprob: -13.250055313110352
    5. '   ' → logprob: -15.750055313110352
    6. ',
' → logprob: -15.750055313110352
    7. ')' → logprob: -17.25005531311035
    8. '```' → logprob: -18.62505531311035
    9. ',K' → logprob: -19.00005531311035
    10. '),' → logprob: -19.87505531311035

Token 1538: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -7.896309739408025e-07
    2. ' L' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.75
    4. '       ' → logprob: -19.875
    5. '	L' → logprob: -21.5
    6. '           ' → logprob: -21.625
    7. '
' → logprob: -22.0
    8. '    ' → logprob: -22.5
    9. '```' → logprob: -22.75
    10. '  ' → logprob: -22.875

Token 1539: ',' (ID: 11)
  Prédit: '(cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.08612082153558731
    2. ')' → logprob: -2.711120843887329
    3. ')
' → logprob: -4.33612060546875
    4. '   ' → logprob: -6.33612060546875
    5. '(' → logprob: -7.21112060546875
    6. '(
' → logprob: -8.46112060546875
    7. 'cards' → logprob: -9.33612060546875
    8. '(game' → logprob: -9.83612060546875
    9. '(c' → logprob: -10.46112060546875
    10. '.cards' → logprob: -11.46112060546875

Token 1540: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -2.15310683415737e-05
    2. ' cards' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.12502098083496
    4. '(cards' → logprob: -19.00002098083496
    5. '.cards' → logprob: -19.00002098083496
    6. '
' → logprob: -19.62502098083496
    7. '       ' → logprob: -21.75002098083496
    8. '           ' → logprob: -21.87502098083496
    9. 'card' → logprob: -22.00002098083496
    10. '    ' → logprob: -22.37502098083496

Token 1541: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8303648233413696
    2. ')
' → logprob: -1.2053648233413696
    3. '   ' → logprob: -1.3303648233413696
    4. '(game' → logprob: -10.205365180969238
    5. '    
' → logprob: -11.080365180969238
    6. ')
' → logprob: -11.080365180969238
    7. '()
' → logprob: -11.330365180969238
    8. '()' → logprob: -11.580365180969238
    9. ').' → logprob: -11.830365180969238
    10. '
' → logprob: -11.830365180969238

Token 1542: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3869333863258362
    2. '   ' → logprob: -1.1369333267211914
    3. '```' → logprob: -9.886933326721191
    4. ' print' → logprob: -12.636933326721191
    5. 'result' → logprob: -12.761933326721191
    6. '	print' → logprob: -12.886933326721191
    7. '    
' → logprob: -13.386933326721191
    8. '
' → logprob: -14.136933326721191
    9. '``' → logprob: -15.386933326721191
    10. 'return' → logprob: -16.136934280395508

Token 1543: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0036981776356697083
    2. '   ' → logprob: -5.628698348999023
    3. 'game' → logprob: -10.503698348999023
    4. 'result' → logprob: -10.628698348999023
    5. '```' → logprob: -10.878698348999023
    6. 'res' → logprob: -11.253698348999023
    7. ' print' → logprob: -11.878698348999023
    8. '
' → logprob: -12.253698348999023
    9. '    
' → logprob: -13.253698348999023
    10. '``' → logprob: -15.003698348999023

Token 1544: '(game' (ID: 29509)
  Prédit: '(game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(game' → logprob: -9.253090865968261e-06
    2. 'game' → logprob: -11.750009536743164
    3. '(' → logprob: -13.625009536743164
    4. '(g' → logprob: -18.625009536743164
    5. ' game' → logprob: -19.125009536743164
    6. '()' → logprob: -19.625009536743164
    7. '(f' → logprob: -19.750009536743164
    8. '	game' → logprob: -19.875009536743164
    9. '(Game' → logprob: -20.000009536743164
    10. '((' → logprob: -20.625009536743164

Token 1545: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -6.2729995988775045e-06
    2. '.s' → logprob: -12.875006675720215
    3. ').' → logprob: -13.000006675720215
    4. '.sol' → logprob: -14.625006675720215
    5. '.' → logprob: -15.250006675720215
    6. '.run' → logprob: -15.500006675720215
    7. ' .' → logprob: -15.500006675720215
    8. '.solution' → logprob: -17.0000057220459
    9. 'solve' → logprob: -17.5000057220459
    10. ')' → logprob: -18.0000057220459

Token 1546: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004990624263882637
    2. '()' → logprob: -5.504990577697754
    3. ')' → logprob: -7.004990577697754
    4. '())
' → logprob: -12.879990577697754
    5. ' ())' → logprob: -14.254990577697754
    6. '()
' → logprob: -14.754990577697754
    7. '();)' → logprob: -15.254990577697754
    8. '()))' → logprob: -15.504990577697754
    9. '(' → logprob: -16.12999153137207
    10. '   ' → logprob: -16.75499153137207

Token 1547: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002032611286267638
    2. '```' → logprob: -7.12703275680542
    3. ' if' → logprob: -7.37703275680542
    4. '<|end|>' → logprob: -7.75203275680542
    5. '#' → logprob: -9.252032279968262
    6. 'main' → logprob: -10.877032279968262
    7. ')' → logprob: -11.127032279968262
    8. '   ' → logprob: -11.627032279968262
    9. '<|end|>' → logprob: -11.877032279968262
    10. '__' → logprob: -12.127032279968262

Token 1548: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.014165511354804039
    2. ' __' → logprob: -4.26416540145874
    3. '_name' → logprob: -14.014165878295898
    4. '___' → logprob: -14.139165878295898
    5. 'if' → logprob: -15.514165878295898
    6. 'name' → logprob: -16.5141658782959
    7. '.__' → logprob: -16.7641658782959
    8. '```' → logprob: -17.1391658782959
    9. '____' → logprob: -17.3891658782959
    10. '/__' → logprob: -17.5141658782959

Token 1549: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.049607936292886734
    2. '==' → logprob: -3.674607992172241
    3. ' ==' → logprob: -4.049607753753662
    4. '=="' → logprob: -6.049607753753662
    5. 'name' → logprob: -6.299607753753662
    6. '```' → logprob: -7.799607753753662
    7. '_name' → logprob: -8.92460823059082
    8. '.__' → logprob: -9.04960823059082
    9. '=='' → logprob: -9.04960823059082
    10. '__":
' → logprob: -9.42460823059082

Token 1550: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00014597235713154078
    2. '__.__' → logprob: -9.25014591217041
    3. '=="' → logprob: -10.50014591217041
    4. '==' → logprob: -11.25014591217041
    5. '__.' → logprob: -12.62514591217041
    6. '```' → logprob: -13.75014591217041
    7. '__["' → logprob: -14.00014591217041
    8. ' ==' → logprob: -14.25014591217041
    9. '__('' → logprob: -14.25014591217041
    10. '__
' → logprob: -14.62514591217041

Token 1551: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1798768788576126
    2. '=="' → logprob: -2.0548768043518066
    3. '=='' → logprob: -4.304876804351807
    4. ' ==' → logprob: -4.429876804351807
    5. '__' → logprob: -4.554876804351807
    6. '```' → logprob: -8.179877281188965
    7. '==
' → logprob: -9.179877281188965
    8. '.__' → logprob: -10.304877281188965
    9. '==="' → logprob: -10.554877281188965
    10. '===' → logprob: -10.554877281188965

Token 1552: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1602879911661148
    2. ''' → logprob: -1.9102879762649536
    3. '__' → logprob: -9.660287857055664
    4. ' "__' → logprob: -17.035287857055664
    5. '"name' → logprob: -18.910287857055664
    6. 'main' → logprob: -19.160287857055664
    7. '"user' → logprob: -19.160287857055664
    8. '`' → logprob: -19.910287857055664
    9. ' '__' → logprob: -19.910287857055664
    10. '"<?' → logprob: -19.910287857055664

Token 1553: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0041299303993582726
    2. '"' → logprob: -6.129129886627197
    3. 'main' → logprob: -6.254129886627197
    4. ''' → logprob: -11.004130363464355
    5. '__":
' → logprob: -13.504130363464355
    6. '___' → logprob: -14.254130363464355
    7. '```' → logprob: -14.629130363464355
    8. '__
' → logprob: -15.254130363464355
    9. '____' → logprob: -15.504130363464355
    10. ' "__' → logprob: -15.629130363464355

Token 1554: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.3165114223957062
    2. '__' → logprob: -1.3165113925933838
    3. '__':
' → logprob: -6.691511631011963
    4. '__.' → logprob: -6.941511631011963
    5. '__.__' → logprob: -7.816511631011963
    6. '__["' → logprob: -8.191511154174805
    7. '__
' → logprob: -8.816511154174805
    8. '.' → logprob: -10.316511154174805
    9. '__()
' → logprob: -10.441511154174805
    10. '.__' → logprob: -10.566511154174805

Token 1555: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.5048530030981055e-06
    2. '	main' → logprob: -14.125001907348633
    3. ' main' → logprob: -14.375001907348633
    4. '   ' → logprob: -16.875001907348633
    5. '```' → logprob: -18.500001907348633
    6. '_main' → logprob: -19.000001907348633
    7. '(main' → logprob: -20.625001907348633
    8. '.main' → logprob: -20.750001907348633
    9. '__' → logprob: -22.000001907348633
    10. 'import' → logprob: -22.250001907348633

Token 1556: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.704273118884885e-07
    2. ' main' → logprob: -15.000000953674316
    3. '   ' → logprob: -15.375000953674316
    4. '	main' → logprob: -18.125
    5. 'import' → logprob: -18.875
    6. '```' → logprob: -19.25
    7. '(main' → logprob: -21.875
    8. 'game' → logprob: -22.25
    9. '_main' → logprob: -22.75
    10. '
' → logprob: -23.25

Token 1557: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1555
Tokens correctement prédits (1ère position, stricte): 503
Tokens correctement prédits (1ère position, avec adaptation): 542
Tokens correctement prédits (top 10): 1127
Précision stricte (1ère position): 32.35%
Précision adaptée (1ère position): 34.86%
Précision (top 10): 72.48%
================================================================================
