================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import bisect

input = sys.stdin.readline

# Solution basée sur un index des valeurs uniques et positions associées
# Pour chaque valeur de dureté rencontrée a_i, on stocke la liste triée des positions i où elle apparaît.
# Pour chaque requête (l, r, D), on cherche les valeurs a_i proches de D dans cet ensemble unique.
# Comme on veut la valeur a_i telle que |a_i - D| soit minimale, on examine les valeurs a_i immédiates autour de D dans la liste triée des valeurs uniques.
# Pour ces candidats on fait une recherche binaire sur les indices des positions pour voir s’il y a une occurrence entre l et r.
# On prend la distance minimale de |a_i - D| parmi ces occurrences valides.
# Cette méthode permet de répondre efficacement à Q requêtes sans passer par un segment tree sophistiqué.

N = int(input())
a = list(map(int, input().split()))
Q = int(input())

# Construction du dictionnaire valeur -> positions triées
pos_dict = {}
for i, val in enumerate(a):
    if val not in pos_dict:
        pos_dict[val] = []
    pos_dict[val].append(i)

# Liste triée des valeurs uniques
unique_vals = sorted(pos_dict.keys())

def check_in_range(arr, l, r):
    """
    Vérifie si un élément de la liste arr (déjà triée)
    se trouve dans l'intervalle [l, r].
    Utilise une recherche binaire.
    Renvoie True si oui, False sinon.
    """
    # Cherche la plus petite position >= l
    idx = bisect.bisect_left(arr, l)
    if idx < len(arr) and arr[idx] <= r:
        return True
    return False

for _ in range(Q):
    l, r, D = map(int, input().split())

    # Trouver la position d'insertion de D dans unique_vals
    idx = bisect.bisect_left(unique_vals, D)

    candidates = []

    # Valeur immédiatement >= D (ou égale à D)
    if idx < len(unique_vals):
        val = unique_vals[idx]
        if check_in_range(pos_dict[val], l, r):
            candidates.append(abs(val - D))

    # Valeur immédiatement < D
    if idx > 0:
        val = unique_vals[idx - 1]
        if check_in_range(pos_dict[val], l, r):
            candidates.append(abs(val - D))

    # Si aucun candidat trouvé, cela signifie que dans [l,r] il n'y a pas de valeurs proches à D ?
    # Ce cas ne se produit pas si a contient au moins une valeur dans [l,r].
    # Néanmoins, on couvre le cas où aucune position n'est dans [l,r] en cherchant manuellement.
    # Optionnel, car la contrainte garantit a dans [l,r].
    # Pour la sécurité, on peut faire une recherche complète (plus lente) si on veut,
    # mais on suppose que ça ne sera pas nécessaire dans ce problème.

    # Afficher la plus petite différence trouvée
    print(min(candidates))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0006273718317970634
    2. 'os' → logprob: -7.375627517700195
    3. ' re' → logprob: -15.375627517700195
    4. ' math' → logprob: -15.625627517700195
    5. '_os' → logprob: -15.750627517700195
    6. '"os' → logprob: -15.875627517700195
    7. ' json' → logprob: -16.250627517700195
    8. '	os' → logprob: -17.125627517700195
    9. ' ' → logprob: -18.125627517700195
    10. ' argparse' → logprob: -18.125627517700195

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.2664456789934775e-06
    2. 'ec' → logprob: -14.375000953674316
    3. 't' → logprob: -15.375000953674316
    4. 'e' → logprob: -15.625000953674316
    5. 'ected' → logprob: -15.875000953674316
    6. 'ection' → logprob: -16.375001907348633
    7. 'ectl' → logprob: -17.750001907348633
    8. 'ex' → logprob: -18.000001907348633
    9. '```' → logprob: -18.125001907348633
    10. 'truct' → logprob: -18.375001907348633

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3930354118347168
    2. '
' → logprob: -2.393035411834717
    3. 'import' → logprob: -3.143035411834717
    4. '\' → logprob: -3.518035411834717
    5. '\n' → logprob: -3.518035411834717
    6. '

' → logprob: -3.768035411834717
    7. '' → logprob: -3.768035411834717
    8. '<|end|>' → logprob: -3.768035411834717
    9. 'newline' → logprob: -3.893035411834717
    10. '```' → logprob: -4.018035411834717

Token 7: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2112246751785278
    2. 'def' → logprob: -1.4612246751785278
    3. '
' → logprob: -1.8362246751785278
    4. '\n' → logprob: -2.3362245559692383
    5. '

' → logprob: -2.7112245559692383
    6. '```' → logprob: -3.2112245559692383
    7. 'import' → logprob: -3.7112245559692383
    8. '\' → logprob: -4.211224555969238
    9. '`' → logprob: -4.586224555969238
    10. '' → logprob: -4.836224555969238

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007320747245103121
    2. '.' → logprob: -5.632320880889893
    3. ')' → logprob: -6.007320880889893
    4. '=' → logprob: -7.632320880889893
    5. '()' → logprob: -9.007320404052734
    6. '_' → logprob: -9.382320404052734
    7. ' =' → logprob: -9.382320404052734
    8. '```' → logprob: -9.632320404052734
    9. '[' → logprob: -9.882320404052734
    10. ' (' → logprob: -10.132320404052734

Token 9: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1432906687259674
    2. ' sys' → logprob: -2.1432907581329346
    3. 'input' → logprob: -4.1432905197143555
    4. ' input' → logprob: -8.018290519714355
    5. '	sys' → logprob: -11.018290519714355
    6. '```' → logprob: -12.393290519714355
    7. '=sys' → logprob: -12.393290519714355
    8. 'lambda' → logprob: -12.768290519714355
    9. ' ' → logprob: -14.643290519714355
    10. '(sys' → logprob: -14.643290519714355

Token 10: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.08069731295108795
    2. '.' → logprob: -2.5806972980499268
    3. '.stdout' → logprob: -6.705697536468506
    4. ' .' → logprob: -8.455697059631348
    5. '.input' → logprob: -8.955697059631348
    6. '.path' → logprob: -9.705697059631348
    7. '.argv' → logprob: -9.955697059631348
    8. '.std' → logprob: -9.955697059631348
    9. '.readline' → logprob: -10.205697059631348
    10. '.stderr' → logprob: -11.705697059631348

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.065513476729393
    2. '.read' → logprob: -2.9405133724212646
    3. '.' → logprob: -4.565513610839844
    4. '.readlines' → logprob: -9.190513610839844
    5. '.Read' → logprob: -10.315513610839844
    6. 'read' → logprob: -11.065513610839844
    7. '.buffer' → logprob: -12.065513610839844
    8. '.reader' → logprob: -12.940513610839844
    9. ' readline' → logprob: -13.190513610839844
    10. '_read' → logprob: -13.565513610839844

Token 12: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44913533329963684
    2. '()' → logprob: -1.3241353034973145
    3. '
' → logprob: -3.0741353034973145
    4. '(
' → logprob: -3.8241353034973145
    5. 'def' → logprob: -5.1991353034973145
    6. '\n' → logprob: -5.3241353034973145
    7. '()
' → logprob: -5.5741353034973145
    8. '

' → logprob: -6.4491353034973145
    9. '()

' → logprob: -6.9491353034973145
    10. 'a' → logprob: -6.9491353034973145

Token 13: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5769510865211487
    2. 'n' → logprob: -0.8269510865211487
    3. 'N' → logprob: -7.076951026916504
    4. 'data' → logprob: -9.326951026916504
    5. 'from' → logprob: -11.326951026916504
    6. '\' → logprob: -11.576951026916504
    7. 'nums' → logprob: -11.701951026916504
    8. 'a' → logprob: -12.076951026916504
    9. 'num' → logprob: -12.076951026916504
    10. 'arr' → logprob: -12.326951026916504

Token 14: ' Solution' (ID: 20858)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.36382582783699036
    2. 'def' → logprob: -1.363825798034668
    3. 'N' → logprob: -4.238825798034668
    4. ' n' → logprob: -4.488825798034668
    5. 'd' → logprob: -4.863825798034668
    6. 'data' → logprob: -5.238825798034668
    7. 'class' → logprob: -5.863825798034668
    8. 's' → logprob: -6.488825798034668
    9. ' def' → logprob: -6.988825798034668
    10. '#' → logprob: -7.113825798034668

Token 15: ' basée' (ID: 153941)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011127048172056675
    2. 'class' → logprob: -5.13612699508667
    3. 's' → logprob: -6.01112699508667
    4. '```' → logprob: -6.51112699508667
    5. ':' → logprob: -7.63612699508667
    6. 'n' → logprob: -7.88612699508667
    7. 'from' → logprob: -9.136127471923828
    8. '#' → logprob: -9.886127471923828
    9. '\' → logprob: -10.511127471923828
    10. '``' → logprob: -10.636127471923828

Token 16: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.17381353676319122
    2. 'sur' → logprob: -2.048813581466675
    3. '_sur' → logprob: -3.673813581466675
    4. ' ' → logprob: -5.423813343048096
    5. '_' → logprob: -7.548813343048096
    6. '  ' → logprob: -8.673813819885254
    7. 's' → logprob: -10.048813819885254
    8. ' ' → logprob: -10.048813819885254
    9. '_s' → logprob: -10.673813819885254
    10. '-sur' → logprob: -11.423813819885254

Token 17: ' un' (ID: 537)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5136837363243103
    2. 'une' → logprob: -1.763683795928955
    3. ' une' → logprob: -2.638683795928955
    4. ' la' → logprob: -2.763683795928955
    5. ' l' → logprob: -3.138683795928955
    6. 'la' → logprob: -3.263683795928955
    7. 'les' → logprob: -5.263683795928955
    8. ' des' → logprob: -6.138683795928955
    9. 'le' → logprob: -6.263683795928955
    10. ' ' → logprob: -7.138683795928955

Token 18: ' index' (ID: 3472)
  Prédit: ' tableau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tableau' → logprob: -2.0477702617645264
    2. ' alg' → logprob: -2.1727702617645264
    3. 'alg' → logprob: -2.1727702617645264
    4. ' tri' → logprob: -2.2977702617645264
    5. ' trie' → logprob: -2.5477702617645264
    6. 'e' → logprob: -2.6727702617645264
    7. ' arbre' → logprob: -3.1727702617645264
    8. 'appro' → logprob: -3.2977702617645264
    9. ' table' → logprob: -3.6727702617645264
    10. 'tri' → logprob: -3.6727702617645264

Token 19: ' des' (ID: 731)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -1.8629788160324097
    2. 's' → logprob: -2.112978935241699
    3. ' de' → logprob: -2.112978935241699
    4. 'ation' → logprob: -2.362978935241699
    5. 'de' → logprob: -2.487978935241699
    6. '[]' → logprob: -2.487978935241699
    7. 'in' → logprob: -2.987978935241699
    8. ' invers' → logprob: -3.237978935241699
    9. '_' → logprob: -3.362978935241699
    10. 'd' → logprob: -3.987978935241699

Token 20: ' valeurs' (ID: 73668)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.4709315299987793
    2. 'élé' → logprob: -1.7209315299987793
    3. 'val' → logprob: -2.0959315299987793
    4. 'prix' → logprob: -4.720931529998779
    5. 'm' → logprob: -4.970931529998779
    6. ' mots' → logprob: -5.220931529998779
    7. 'occ' → logprob: -5.595931529998779
    8. 'points' → logprob: -5.720931529998779
    9. ' positions' → logprob: -5.720931529998779
    10. 's' → logprob: -5.720931529998779

Token 21: ' uniques' (ID: 156848)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.844291627407074
    2. ':' → logprob: -2.4692916870117188
    3. 's' → logprob: -3.0942916870117188
    4. 'de' → logprob: -3.0942916870117188
    5. 'import' → logprob: -3.4692916870117188
    6. '.' → logprob: -3.7192916870117188
    7. 'unique' → logprob: -3.7192916870117188
    8. 'sorted' → logprob: -3.8442916870117188
    9. 'values' → logprob: -3.9692916870117188
    10. 'def' → logprob: -3.9692916870117188

Token 22: ' et' (ID: 859)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -1.1031193733215332
    2. 'sorted' → logprob: -1.6031193733215332
    3. ',' → logprob: -2.478119373321533
    4. 's' → logprob: -2.853119373321533
    5. 'unique' → logprob: -3.103119373321533
    6. 'def' → logprob: -3.228119373321533
    7. 'des' → logprob: -3.228119373321533
    8. 'de' → logprob: -3.353119373321533
    9. 'class' → logprob: -3.728119373321533
    10. 'import' → logprob: -4.103119373321533

Token 23: ' positions' (ID: 15897)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.359073519706726
    2. 'leurs' → logprob: -2.2340736389160156
    3. 'bis' → logprob: -2.6090736389160156
    4. ' leurs' → logprob: -2.7340736389160156
    5. 'leur' → logprob: -2.8590736389160156
    6. ' leur' → logprob: -3.1090736389160156
    7. ' des' → logprob: -3.2340736389160156
    8. 'des' → logprob: -3.6090736389160156
    9. 'les' → logprob: -3.6090736389160156
    10. 'le' → logprob: -3.7340736389160156

Token 24: ' associ' (ID: 5516)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8830168843269348
    2. 'def' → logprob: -1.00801682472229
    3. 'de' → logprob: -3.13301682472229
    4. ',' → logprob: -3.88301682472229
    5. ':' → logprob: -3.88301682472229
    6. '_unique' → logprob: -3.88301682472229
    7. ' ' → logprob: -4.133017063140869
    8. '.' → logprob: -4.633017063140869
    9. 'des' → logprob: -4.758017063140869
    10. 'u' → logprob: -4.883017063140869

Token 25: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.018964966759085655
    2. 'é' → logprob: -4.018964767456055
    3. 'ée' → logprob: -7.143964767456055
    4. 'és' → logprob: -11.018964767456055
    5. 'è' → logprob: -12.768964767456055
    6. '```' → logprob: -12.893964767456055
    7. '#' → logprob: -13.143964767456055
    8. 'É' → logprob: -14.768964767456055
    9. '́' → logprob: -15.143964767456055
    10. 'à' → logprob: -15.393964767456055

Token 26: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48107120394706726
    2. 's' → logprob: -1.6060712337493896
    3. ':' → logprob: -2.8560712337493896
    4. ',' → logprob: -3.6060712337493896
    5. 'des' → logprob: -4.1060709953308105
    6. 'unique' → logprob: -4.2310709953308105
    7. 'de' → logprob: -4.3560709953308105
    8. '_unique' → logprob: -4.4810709953308105
    9. '
' → logprob: -5.1060709953308105
    10. '#' → logprob: -5.3560709953308105

Token 27: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16819114983081818
    2. 'class' → logprob: -2.1681911945343018
    3. '\' → logprob: -4.543190956115723
    4. '
' → logprob: -5.043190956115723
    5. '\n' → logprob: -5.918190956115723
    6. '

' → logprob: -5.918190956115723
    7. '#' → logprob: -6.043190956115723
    8. ':' → logprob: -6.293190956115723
    9. 'unique' → logprob: -6.418190956115723
    10. 'n' → logprob: -6.543190956115723

Token 28: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3170975148677826
    2. 'class' → logprob: -1.317097544670105
    3. 'from' → logprob: -6.3170976638793945
    4. 'n' → logprob: -7.3170976638793945
    5. 'unique' → logprob: -8.192097663879395
    6. 'import' → logprob: -8.692097663879395
    7. '#' → logprob: -8.942097663879395
    8. 'values' → logprob: -9.067097663879395
    9. 'sorted' → logprob: -9.192097663879395
    10. '```' → logprob: -9.192097663879395

Token 29: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.05313042551279068
    2. ' gérer' → logprob: -3.6781303882598877
    3. 'tr' → logprob: -5.303130626678467
    4. ' traiter' → logprob: -5.678130626678467
    5. ' tr' → logprob: -5.803130626678467
    6. ' each' → logprob: -6.428130626678467
    7. 'r' → logprob: -6.928130626678467
    8. 'cha' → logprob: -7.053130626678467
    9. ' trouver' → logprob: -7.053130626678467
    10. ' rechercher' → logprob: -7.053130626678467

Token 30: ' valeur' (ID: 41664)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -1.2771364450454712
    2. ' valeur' → logprob: -1.6521364450454712
    3. 'élé' → logprob: -1.7771364450454712
    4. ' élément' → logprob: -2.2771363258361816
    5. 'val' → logprob: -2.4021363258361816
    6. 'nombre' → logprob: -3.1521363258361816
    7. 'mot' → logprob: -4.464636325836182
    8. ' numéro' → logprob: -4.652136325836182
    9. ' mot' → logprob: -4.964636325836182
    10. 's' → logprob: -5.152136325836182

Token 31: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07719654589891434
    2. ' unique' → logprob: -3.7021965980529785
    3. ' de' → logprob: -3.8271965980529785
    4. ' ,' → logprob: -4.7021965980529785
    5. ' dans' → logprob: -5.7021965980529785
    6. ' du' → logprob: -6.2021965980529785
    7. ' v' → logprob: -6.2021965980529785
    8. 'unique' → logprob: -6.2021965980529785
    9. 'de' → logprob: -6.3271965980529785
    10. '_unique' → logprob: -6.7021965980529785

Token 32: ' dure' (ID: 58941)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.023817539215088
    2. 'a' → logprob: -1.648817539215088
    3. ' l' → logprob: -1.773817539215088
    4. ' la' → logprob: -2.148817539215088
    5. 'la' → logprob: -4.023817539215088
    6. 'A' → logprob: -4.148817539215088
    7. ' tableau' → logprob: -4.336317539215088
    8. ' A' → logprob: -4.398817539215088
    9. ' a' → logprob: -4.523817539215088
    10. 's' → logprob: -4.648817539215088

Token 33: 'té' (ID: 54949)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.003748179180547595
    2. 'é' → logprob: -5.753748416900635
    3. 'es' → logprob: -7.628748416900635
    4. 'ée' → logprob: -10.378747940063477
    5. 'ur' → logprob: -11.628747940063477
    6. '_e' → logprob: -11.753747940063477
    7. 'е' → logprob: -12.128747940063477
    8. 'er' → logprob: -12.628747940063477
    9. '```' → logprob: -12.628747940063477
    10. '#' → logprob: -12.878747940063477

Token 34: ' rencontr' (ID: 49751)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15662816166877747
    2. ' ,' → logprob: -2.031628131866455
    3. ' d' → logprob: -5.156628131866455
    4. ' ' → logprob: -6.156628131866455
    5. 'd' → logprob: -7.031628131866455
    6. 's' → logprob: -7.156628131866455
    7. ' de' → logprob: -7.281628131866455
    8. ' donnée' → logprob: -7.281628131866455
    9. ' (' → logprob: -7.781628131866455
    10. ' du' → logprob: -8.156628608703613

Token 35: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.01361013576388359
    2. 'ee' → logprob: -5.138610363006592
    3. 'é' → logprob: -5.138610363006592
    4. 'e' → logprob: -6.513610363006592
    5. 'ées' → logprob: -8.638609886169434
    6. ',' → logprob: -10.138609886169434
    7. 'ue' → logprob: -10.513609886169434
    8. 'es' → logprob: -11.888609886169434
    9. '#' → logprob: -12.138609886169434
    10. '```' → logprob: -12.138609886169434

Token 36: ' a' (ID: 261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04391971603035927
    2. ' ,' → logprob: -3.168919801712036
    3. ' ' → logprob: -7.293919563293457
    4. ':' → logprob: -9.293919563293457
    5. ' :' → logprob: -10.168919563293457
    6. ',
' → logprob: -10.918919563293457
    7. 's' → logprob: -11.168919563293457
    8. ' dans' → logprob: -11.543919563293457
    9. ' (' → logprob: -11.793919563293457
    10. ',d' → logprob: -12.168919563293457

Token 37: '_i' (ID: 10853)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.08110872656106949
    2. 'vec' → logprob: -3.581108808517456
    3. 'j' → logprob: -4.081108570098877
    4. 'n' → logprob: -4.331108570098877
    5. ',' → logprob: -4.956108570098877
    6. 'r' → logprob: -5.956108570098877
    7. 'p' → logprob: -6.331108570098877
    8. ' ' → logprob: -6.831108570098877
    9. 'ux' → logprob: -7.206108570098877
    10. 'l' → logprob: -7.331108570098877

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013261053711175919
    2. ' ,' → logprob: -4.388260841369629
    3. ':' → logprob: -7.638260841369629
    4. ' ' → logprob: -9.138260841369629
    5. ' :' → logprob: -9.513260841369629
    6. 's' → logprob: -11.263260841369629
    7. ',a' → logprob: -11.513260841369629
    8. 'a' → logprob: -11.888260841369629
    9. ',i' → logprob: -12.013260841369629
    10. ',b' → logprob: -12.263260841369629

Token 39: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.020944606512784958
    2. ' je' → logprob: -4.770944595336914
    3. ' ' → logprob: -5.145944595336914
    4. ' ' → logprob: -6.145944595336914
    5. 'on' → logprob: -7.020944595336914
    6. ' #' → logprob: -7.020944595336914
    7. ' il' → logprob: -7.895944595336914
    8. ' a' → logprob: -8.020944595336914
    9. ' positions' → logprob: -8.020944595336914
    10. '#' → logprob: -8.395944595336914

Token 40: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.7371671199798584
    2. ' cherche' → logprob: -2.6121671199798584
    3. ' va' → logprob: -2.6121671199798584
    4. ' recherche' → logprob: -2.7371671199798584
    5. 'stock' → logprob: -2.8621671199798584
    6. ' crée' → logprob: -3.2371671199798584
    7. 'cherche' → logprob: -3.2371671199798584
    8. ' ajoute' → logprob: -3.3621671199798584
    9. ' récup' → logprob: -3.8621671199798584
    10. ' ins' → logprob: -3.9871671199798584

Token 41: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.019299212843179703
    2. 'é' → logprob: -4.394299030303955
    3. 'ée' → logprob: -5.019299030303955
    4. 'ées' → logprob: -9.894299507141113
    5. 'a' → logprob: -10.019299507141113
    6. 'er' → logprob: -10.269299507141113
    7. 'ee' → logprob: -12.269299507141113
    8. 'è' → logprob: -12.519299507141113
    9. 'és' → logprob: -12.894299507141113
    10. '#' → logprob: -12.894299507141113

Token 42: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27051058411598206
    2. 's' → logprob: -2.270510673522949
    3. ' la' → logprob: -3.645510673522949
    4. ' les' → logprob: -3.770510673522949
    5. ',' → logprob: -4.020510673522949
    6. ' l' → logprob: -4.645510673522949
    7. '  ' → logprob: -4.770510673522949
    8. '<|end|>' → logprob: -5.020510673522949
    9. 'positions' → logprob: -5.395510673522949
    10. ' its' → logprob: -5.520510673522949

Token 43: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.6618297696113586
    2. ' position' → logprob: -0.9118297696113586
    3. 'position' → logprob: -3.161829710006714
    4. 'liste' → logprob: -3.786829710006714
    5. 's' → logprob: -5.036829948425293
    6. ' ' → logprob: -5.536829948425293
    7. ' list' → logprob: -6.661829948425293
    8. 'positions' → logprob: -6.911829948425293
    9. ' positions' → logprob: -6.911829948425293
    10. ' valeur' → logprob: -7.911829948425293

Token 44: ' tri' (ID: 12665)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.14608757197856903
    2. '<|end|>' → logprob: -2.396087646484375
    3. 's' → logprob: -3.646087646484375
    4. 'des' → logprob: -5.146087646484375
    5. ' ' → logprob: -5.771087646484375
    6. ' de' → logprob: -6.271087646484375
    7. '<|end|>' → logprob: -6.396087646484375
    8. ' complète' → logprob: -6.646087646484375
    9. 'd' → logprob: -6.646087646484375
    10. ' d' → logprob: -7.271087646484375

Token 45: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.5293218493461609
    2. 'st' → logprob: -1.0293219089508057
    3. 's' → logprob: -4.154321670532227
    4. 'é' → logprob: -4.279321670532227
    5. 'ste' → logprob: -4.779321670532227
    6. 'ées' → logprob: -5.529321670532227
    7. 'e' → logprob: -5.779321670532227
    8. 'ed' → logprob: -6.404321670532227
    9. 'née' → logprob: -6.904321670532227
    10. 'd' → logprob: -7.029321670532227

Token 46: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.017872467637062073
    2. 'des' → logprob: -4.892872333526611
    3. ' ' → logprob: -5.017872333526611
    4. '<|end|>' → logprob: -7.017872333526611
    5. '_des' → logprob: -7.142872333526611
    6. 's' → logprob: -7.392872333526611
    7. ' de' → logprob: -8.01787281036377
    8. '  ' → logprob: -9.14287281036377
    9. '(s' → logprob: -9.14287281036377
    10. 'e' → logprob: -9.26787281036377

Token 47: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.8425807356834412
    2. 'positions' → logprob: -1.217580795288086
    3. ' indices' → logprob: -1.717580795288086
    4. 'indices' → logprob: -2.717580795288086
    5. ' indexes' → logprob: -4.342580795288086
    6. '<|end|>' → logprob: -5.342580795288086
    7. 'indexes' → logprob: -6.342580795288086
    8. 'index' → logprob: -6.342580795288086
    9. ' index' → logprob: -6.467580795288086
    10. ' ' → logprob: -6.717580795288086

Token 48: ' i' (ID: 575)
  Prédit: ' où'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' où' → logprob: -0.6358749270439148
    2. 'où' → logprob: -1.1358749866485596
    3. '<|end|>' → logprob: -3.5108749866485596
    4. ' where' → logprob: -3.6358749866485596
    5. 'a' → logprob: -4.2608747482299805
    6. '```' → logprob: -4.2608747482299805
    7. ' ' → logprob: -4.2608747482299805
    8. ' dans' → logprob: -5.2608747482299805
    9. 'i' → logprob: -5.3858747482299805
    10. 's' → logprob: -5.3858747482299805

Token 49: ' où' (ID: 15113)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -1.2995704412460327
    2. 'où' → logprob: -1.2995704412460327
    3. ' où' → logprob: -1.9245704412460327
    4. 's' → logprob: -2.5495705604553223
    5. ',' → logprob: -2.6745705604553223
    6. '.' → logprob: -3.4245705604553223
    7. ' dans' → logprob: -3.4245705604553223
    8. ' where' → logprob: -3.9245705604553223
    9. ' ' → logprob: -4.174570560455322
    10. 'where' → logprob: -4.674570560455322

Token 50: ' elle' (ID: 11451)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25420817732810974
    2. ' elle' → logprob: -2.6292080879211426
    3. ' cette' → logprob: -2.6292080879211426
    4. 'c' → logprob: -3.1292080879211426
    5. 'celle' → logprob: -4.629208087921143
    6. ' a' → logprob: -4.754208087921143
    7. 'elle' → logprob: -4.879208087921143
    8. ''elle' → logprob: -5.629208087921143
    9. 'l' → logprob: -6.629208087921143
    10. 'il' → logprob: -7.129208087921143

Token 51: ' apparaît' (ID: 147656)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.5077768564224243
    2. 'appar' → logprob: -1.3827768564224243
    3. ' apparaît' → logprob: -2.3827767372131348
    4. 'a' → logprob: -4.007776737213135
    5. ' est' → logprob: -4.507776737213135
    6. ' appar' → logprob: -4.882776737213135
    7. 'est' → logprob: -5.007776737213135
    8. 'app' → logprob: -6.132776737213135
    9. ' a' → logprob: -6.382776737213135
    10. ' appara' → logprob: -6.382776737213135

Token 52: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3270230293273926
    2. '\n' → logprob: -1.3270230293273926
    3. '
' → logprob: -2.0770230293273926
    4. 'a' → logprob: -2.4520230293273926
    5. '\' → logprob: -2.5770230293273926
    6. 'def' → logprob: -3.2020230293273926
    7. '.' → logprob: -3.7020230293273926
    8. '

' → logprob: -3.7020230293273926
    9. ':' → logprob: -4.077023029327393
    10. ',' → logprob: -4.202023029327393

Token 53: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0429627895355225
    2. 'def' → logprob: -1.0429627895355225
    3. 's' → logprob: -2.5429627895355225
    4. '

' → logprob: -2.5429627895355225
    5. 'a' → logprob: -3.2929627895355225
    6. '\n' → logprob: -3.5429627895355225
    7. '```' → logprob: -3.7929627895355225
    8. '\' → logprob: -4.167963027954102
    9. '
' → logprob: -4.917963027954102
    10. 'd' → logprob: -5.042963027954102

Token 54: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43618154525756836
    2. '
' → logprob: -1.9361815452575684
    3. 'positions' → logprob: -3.1861815452575684
    4. 'a' → logprob: -3.3111815452575684
    5. 's' → logprob: -3.5611815452575684
    6. '

' → logprob: -3.6861815452575684
    7. ' 

' → logprob: -4.061181545257568
    8. 'class' → logprob: -4.436181545257568
    9. '\n' → logprob: -4.811181545257568
    10. '\' → logprob: -5.061181545257568

Token 55: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.028454814106225967
    2. ' chacune' → logprob: -5.403454780578613
    3. ' pouvoir' → logprob: -5.778454780578613
    4. 'cha' → logprob: -5.903454780578613
    5. ' each' → logprob: -6.028454780578613
    6. ' cha' → logprob: -6.278454780578613
    7. ' rechercher' → logprob: -6.278454780578613
    8. ' chercher' → logprob: -6.778454780578613
    9. 'chercher' → logprob: -6.778454780578613
    10. ' ' → logprob: -6.778454780578613

Token 56: ' requ' (ID: 7028)
  Prédit: ' requ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' requ' → logprob: -0.12145327031612396
    2. 'requ' → logprob: -3.496453285217285
    3. ' query' → logprob: -3.996453285217285
    4. 'a' → logprob: -4.246453285217285
    5. 'query' → logprob: -4.746453285217285
    6. ' valeur' → logprob: -4.746453285217285
    7. ' a' → logprob: -5.308953285217285
    8. ' interval' → logprob: -5.683953285217285
    9. ' nouvelle' → logprob: -6.183953285217285
    10. ' ' → logprob: -6.246453285217285

Token 57: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.002847909927368164
    2. 'ete' → logprob: -6.502847671508789
    3. 'êtes' → logprob: -6.752847671508789
    4. 'ète' → logprob: -9.252847671508789
    5. '#' → logprob: -11.127847671508789
    6. 'ê' → logprob: -11.252847671508789
    7. 'êt' → logprob: -11.377847671508789
    8. '?' → logprob: -11.377847671508789
    9. '�' → logprob: -12.252847671508789
    10. '^' → logprob: -12.252847671508789

Token 58: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08907512575387955
    2. ' ,' → logprob: -2.5890750885009766
    3. ' (' → logprob: -5.964075088500977
    4. 'a' → logprob: -6.839075088500977
    5. ' a' → logprob: -6.964075088500977
    6. 's' → logprob: -7.089075088500977
    7. '(' → logprob: -7.589075088500977
    8. ' on' → logprob: -7.589075088500977
    9. ':' → logprob: -7.964075088500977
    10. '[' → logprob: -8.089075088500977

Token 59: 'l' (ID: 75)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6234970688819885
    2. 'l' → logprob: -1.3734970092773438
    3. ',' → logprob: -2.2484970092773438
    4. ' L' → logprob: -3.7484970092773438
    5. 'L' → logprob: -3.9984970092773438
    6. ' ,' → logprob: -4.373497009277344
    7. 'a' → logprob: -5.248497009277344
    8. 'p' → logprob: -5.748497009277344
    9. ')' → logprob: -5.748497009277344
    10. 'm' → logprob: -5.748497009277344

Token 60: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2984890937805176
    2. ',' → logprob: -2.1734890937805176
    3. ''' → logprob: -3.0484890937805176
    4. 'e' → logprob: -3.1734890937805176
    5. 'iste' → logprob: -4.673489093780518
    6. '')' → logprob: -5.048489093780518
    7. ''a' → logprob: -5.298489093780518
    8. 'i' → logprob: -5.548489093780518
    9. '=' → logprob: -5.923489093780518
    10. 'o' → logprob: -6.423489093780518

Token 61: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1275886446237564
    2. ' r' → logprob: -2.1275887489318848
    3. ' ' → logprob: -8.252588272094727
    4. ' ' → logprob: -8.502588272094727
    5. '```' → logprob: -9.752588272094727
    6. 'h' → logprob: -10.502588272094727
    7. '   ' → logprob: -10.502588272094727
    8. ',' → logprob: -10.752588272094727
    9. '  ' → logprob: -11.252588272094727
    10. '	r' → logprob: -11.815088272094727

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03674488142132759
    2. '),' → logprob: -3.6617448329925537
    3. ')' → logprob: -4.786745071411133
    4. '):' → logprob: -6.911745071411133
    5. ' ,' → logprob: -7.036745071411133
    6. ' ),' → logprob: -9.286745071411133
    7. ' ' → logprob: -10.536745071411133
    8. ' )' → logprob: -10.911745071411133
    9. ' ):' → logprob: -12.536745071411133
    10. ',),' → logprob: -12.849245071411133

Token 63: ' D' (ID: 415)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.0803507566452026
    2. 'x' → logprob: -1.4553507566452026
    3. 'k' → logprob: -2.330350875854492
    4. ' k' → logprob: -2.455350875854492
    5. ' v' → logprob: -2.955350875854492
    6. 'v' → logprob: -3.080350875854492
    7. ' d' → logprob: -3.205350875854492
    8. 'd' → logprob: -3.580350875854492
    9. ',' → logprob: -4.205350875854492
    10. ' val' → logprob: -4.330350875854492

Token 64: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.37473636865615845
    2. ')' → logprob: -1.9997363090515137
    3. ',' → logprob: -2.2497363090515137
    4. '):' → logprob: -2.7497363090515137
    5. ' ),' → logprob: -5.374736309051514
    6. ' )' → logprob: -7.499736309051514
    7. ' ):' → logprob: -7.874736309051514
    8. 'e' → logprob: -7.999736309051514
    9. ' ,' → logprob: -7.999736309051514
    10. 'a' → logprob: -8.624736785888672

Token 65: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.003956936299800873
    2. 'on' → logprob: -6.3789567947387695
    3. ' ' → logprob: -6.7539567947387695
    4. ' je' → logprob: -7.8789567947387695
    5. ' we' → logprob: -9.00395679473877
    6. ' ' → logprob: -9.12895679473877
    7. ' nous' → logprob: -9.37895679473877
    8. ' #' → logprob: -9.50395679473877
    9. ' il' → logprob: -9.50395679473877
    10. '#' → logprob: -10.37895679473877

Token 66: ' cherche' (ID: 52345)
  Prédit: ' cherche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cherche' → logprob: -0.9944721460342407
    2. ' recherche' → logprob: -1.3694721460342407
    3. 'cherche' → logprob: -2.494472026824951
    4. ' effect' → logprob: -2.494472026824951
    5. 'effect' → logprob: -2.619472026824951
    6. ' utilise' → logprob: -3.619472026824951
    7. ''effect' → logprob: -3.744472026824951
    8. ' réalise' → logprob: -4.119472026824951
    9. ' fait' → logprob: -4.494472026824951
    10. ' va' → logprob: -4.869472026824951

Token 67: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.705484926700592
    2. ' ' → logprob: -1.5804848670959473
    3. ' à' → logprob: -2.3304848670959473
    4. ' l' → logprob: -3.4554848670959473
    5. ' dans' → logprob: -3.4554848670959473
    6. ',' → logprob: -3.9554848670959473
    7. ' the' → logprob: -3.9554848670959473
    8. ' a' → logprob: -4.080484867095947
    9. ' les' → logprob: -4.580484867095947
    10. ' le' → logprob: -4.830484867095947

Token 68: ' valeurs' (ID: 73668)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.7052756547927856
    2. ' positions' → logprob: -1.8302756547927856
    3. 'positions' → logprob: -1.9552756547927856
    4. 'indices' → logprob: -2.205275535583496
    5. ' valeurs' → logprob: -4.205275535583496
    6. ' nombres' → logprob: -4.455275535583496
    7. 'index' → logprob: -4.830275535583496
    8. 'val' → logprob: -5.142775535583496
    9. ' index' → logprob: -5.267775535583496
    10. ' plus' → logprob: -5.580275535583496

Token 69: ' a' (ID: 261)
  Prédit: ' uniques'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' uniques' → logprob: -1.3294148445129395
    2. ' de' → logprob: -1.7044148445129395
    3. ' unique' → logprob: -1.9544148445129395
    4. 'strict' → logprob: -2.4544148445129395
    5. '>' → logprob: -2.7044148445129395
    6. ' a' → logprob: -3.2044148445129395
    7. 'unique' → logprob: -3.4544148445129395
    8. 'a' → logprob: -3.5794148445129395
    9. ' des' → logprob: -3.7044148445129395
    10. 'de' → logprob: -4.2044148445129395

Token 70: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0118961026892066
    2. '_' → logprob: -5.011896133422852
    3. '[i' → logprob: -6.386896133422852
    4. '[' → logprob: -7.636896133422852
    5. '_t' → logprob: -7.636896133422852
    6. '_s' → logprob: -7.636896133422852
    7. '_j' → logprob: -8.136896133422852
    8. 's' → logprob: -8.386896133422852
    9. 'i' → logprob: -8.636896133422852
    10. '>=' → logprob: -8.886896133422852

Token 71: ' proches' (ID: 91241)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -1.1483856439590454
    2. ' >=' → logprob: -1.3983856439590454
    3. 'strict' → logprob: -1.6483856439590454
    4. '>' → logprob: -2.273385524749756
    5. ' >' → logprob: -3.523385524749756
    6. ' qui' → logprob: -4.273385524749756
    7. ' telles' → logprob: -4.398385524749756
    8. ' strict' → logprob: -4.773385524749756
    9. 'sup' → logprob: -4.898385524749756
    10. ' sup' → logprob: -4.898385524749756

Token 72: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.014292197301983833
    2. 'de' → logprob: -4.514292240142822
    3. ' ' → logprob: -7.389292240142822
    4. ' du' → logprob: -8.014291763305664
    5. 's' → logprob: -8.389291763305664
    6. ',' → logprob: -8.389291763305664
    7. ' a' → logprob: -8.514291763305664
    8. ' à' → logprob: -8.764291763305664
    9. 'e' → logprob: -8.764291763305664
    10. ' des' → logprob: -9.014291763305664

Token 73: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.230832040309906
    2. 'D' → logprob: -1.6058320999145508
    3. ' ' → logprob: -6.480832099914551
    4. ' a' → logprob: -6.855832099914551
    5. 'a' → logprob: -7.230832099914551
    6. ' l' → logprob: -7.355832099914551
    7. ' la' → logprob: -7.355832099914551
    8. 'l' → logprob: -8.23083209991455
    9. ' ' → logprob: -8.85583209991455
    10. 'd' → logprob: -10.04333209991455

Token 74: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4136734902858734
    2. ',' → logprob: -2.1636734008789062
    3. ' ,' → logprob: -2.9136734008789062
    4. ' (' → logprob: -3.1636734008789062
    5. ' dans' → logprob: -3.4136734008789062
    6. '.' → logprob: -3.5386734008789062
    7. 'dans' → logprob: -4.288673400878906
    8. '```' → logprob: -5.288673400878906
    9. ':' → logprob: -5.663673400878906
    10. ' à' → logprob: -5.788673400878906

Token 75: ' cet' (ID: 19505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0787243843078613
    2. ' l' → logprob: -1.3287243843078613
    3. ' [' → logprob: -2.2037243843078613
    4. 'a' → logprob: -2.7037243843078613
    5. 'l' → logprob: -2.7037243843078613
    6. ' a' → logprob: -3.3287243843078613
    7. 'la' → logprob: -3.7037243843078613
    8. ' ' → logprob: -3.8287243843078613
    9. '[' → logprob: -4.078724384307861
    10. ' le' → logprob: -4.578724384307861

Token 76: ' ensemble' (ID: 33081)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.17184317111968994
    2. ' interval' → logprob: -1.92184317111969
    3. 'index' → logprob: -6.2968430519104
    4. '_interval' → logprob: -6.2968430519104
    5. 'a' → logprob: -6.6718430519104
    6. 'e' → logprob: -6.6718430519104
    7. ' espace' → logprob: -6.6718430519104
    8. 'es' → logprob: -7.0468430519104
    9. '_' → logprob: -7.2968430519104
    10. ' intervalo' → logprob: -7.7968430519104

Token 77: ' unique' (ID: 5746)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.299282968044281
    2. '.' → logprob: -2.799283027648926
    3. '_' → logprob: -3.299283027648926
    4. 'import' → logprob: -3.674283027648926
    5. ':' → logprob: -3.799283027648926
    6. ' ,' → logprob: -4.174283027648926
    7. ' (' → logprob: -4.549283027648926
    8. 'a' → logprob: -4.549283027648926
    9. ' ' → logprob: -4.549283027648926
    10. ',
' → logprob: -4.674283027648926

Token 78: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2799184322357178
    2. ',' → logprob: -1.4049184322357178
    3. 's' → logprob: -2.4049184322357178
    4. ' ' → logprob: -2.5299184322357178
    5. 'es' → logprob: -3.2799184322357178
    6. 'import' → logprob: -3.2799184322357178
    7. 'a' → logprob: -3.2799184322357178
    8. ':' → logprob: -3.4049184322357178
    9. '_' → logprob: -3.7799184322357178
    10. 'e' → logprob: -3.7799184322357178

Token 79: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1374030113220215
    2. '_' → logprob: -1.8874030113220215
    3. '```' → logprob: -1.8874030113220215
    4. 'a' → logprob: -2.3874030113220215
    5. '
' → logprob: -3.2624030113220215
    6. '\' → logprob: -3.2624030113220215
    7. 's' → logprob: -3.5124030113220215
    8. ',' → logprob: -3.8874030113220215
    9. '#' → logprob: -3.8874030113220215
    10. '\n' → logprob: -4.1374030113220215

Token 80: ' Comme' (ID: 53252)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.986730694770813
    2. 'a' → logprob: -1.111730694770813
    3. '\n' → logprob: -2.9867305755615234
    4. '#' → logprob: -3.1117305755615234
    5. 'import' → logprob: -3.3617305755615234
    6. '\' → logprob: -3.3617305755615234
    7. '```' → logprob: -3.6117305755615234
    8. 'unique' → logprob: -4.111730575561523
    9. '
' → logprob: -4.236730575561523
    10. 'd' → logprob: -4.736730575561523

Token 81: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.4863163232803345
    2. ' les' → logprob: -1.9863163232803345
    3. 'les' → logprob: -2.861316204071045
    4. ' la' → logprob: -3.111316204071045
    5. ' l' → logprob: -3.736316204071045
    6. 'la' → logprob: -3.986316204071045
    7. 'on' → logprob: -4.111316204071045
    8. ' elles' → logprob: -4.111316204071045
    9. 'l' → logprob: -4.486316204071045
    10. ' le' → logprob: -4.736316204071045

Token 82: ' veut' (ID: 41653)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9204866290092468
    2. 'a' → logprob: -1.1704866886138916
    3. 'n' → logprob: -3.0454866886138916
    4. 's' → logprob: -3.4204866886138916
    5. ' n' → logprob: -3.4204866886138916
    6. ' peut' → logprob: -3.9204866886138916
    7. ' utilise' → logprob: -4.0454864501953125
    8. ' stock' → logprob: -4.2954864501953125
    9. ' cherche' → logprob: -4.6704864501953125
    10. ' sait' → logprob: -4.7954864501953125

Token 83: ' la' (ID: 557)
  Prédit: ' trouver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -0.841924786567688
    2. 'tr' → logprob: -2.3419246673583984
    3. 'les' → logprob: -3.3419246673583984
    4. ' une' → logprob: -3.5919246673583984
    5. ' vérifier' → logprob: -3.7169246673583984
    6. ' les' → logprob: -3.9044246673583984
    7. 'l' → logprob: -4.029424667358398
    8. ' savoir' → logprob: -4.091924667358398
    9. 'chercher' → logprob: -4.154424667358398
    10. ' pouvoir' → logprob: -4.279424667358398

Token 84: ' valeur' (ID: 41664)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -1.0212711095809937
    2. ' distance' → logprob: -1.5212711095809937
    3. ' valeur' → logprob: -2.146271228790283
    4. 's' → logprob: -2.771271228790283
    5. 'distance' → logprob: -3.646271228790283
    6. ' proximité' → logprob: -3.771271228790283
    7. ' différence' → logprob: -4.083771228790283
    8. ' moindre' → logprob: -4.396271228790283
    9. 'plus' → logprob: -4.646271228790283
    10. ' ' → logprob: -4.708771228790283

Token 85: ' a' (ID: 261)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.2529577016830444
    2. '_' → logprob: -1.3779577016830444
    3. ' a' → logprob: -1.8779577016830444
    4. ' ' → logprob: -1.8779577016830444
    5. ' closest' → logprob: -3.377957820892334
    6. 'a' → logprob: -4.127957820892334
    7. ' minimale' → logprob: -4.252957820892334
    8. ' d' → logprob: -4.752957820892334
    9. ' plus' → logprob: -4.877957820892334
    10. ' _' → logprob: -4.877957820892334

Token 86: '_i' (ID: 10853)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.8528756499290466
    2. 'pro' → logprob: -1.6028757095336914
    3. 'p' → logprob: -2.2278757095336914
    4. 'près' → logprob: -2.4778757095336914
    5. 'i' → logprob: -2.6028757095336914
    6. '_i' → logprob: -3.9778757095336914
    7. 'u' → logprob: -4.477875709533691
    8. ' p' → logprob: -4.477875709533691
    9. 'plus' → logprob: -4.477875709533691
    10. '_pro' → logprob: -4.852875709533691

Token 87: ' telle' (ID: 70904)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.21552559733390808
    2. ' qui' → logprob: -2.7155256271362305
    3. ' proche' → logprob: -2.9655256271362305
    4. ' plus' → logprob: -4.7155256271362305
    5. 's' → logprob: -4.8405256271362305
    6. 'pro' → logprob: -5.5905256271362305
    7. ' à' → logprob: -5.7155256271362305
    8. 'strict' → logprob: -5.7155256271362305
    9. ' au' → logprob: -5.8405256271362305
    10. ',' → logprob: -6.0905256271362305

Token 88: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.04475342854857445
    2. 'que' → logprob: -3.294753313064575
    3. ' that' → logprob: -6.044753551483154
    4. 'qu' → logprob: -6.169753551483154
    5. ' qu' → logprob: -6.919753551483154
    6. '#' → logprob: -7.794753551483154
    7. ' ' → logprob: -7.794753551483154
    8. ' #' → logprob: -9.169753074645996
    9. 'qui' → logprob: -9.169753074645996
    10. 'that' → logprob: -10.294753074645996

Token 89: ' |' (ID: 1022)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6363058090209961
    2. ' abs' → logprob: -0.8863058090209961
    3. ' la' → logprob: -4.136305809020996
    4. 'a' → logprob: -4.636305809020996
    5. 'la' → logprob: -4.886305809020996
    6. 'l' → logprob: -4.886305809020996
    7. ' l' → logprob: -4.886305809020996
    8. ' a' → logprob: -5.011305809020996
    9. '|' → logprob: -6.761305809020996
    10. ' ' → logprob: -7.511305809020996

Token 90: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07903046160936356
    2. ' a' → logprob: -2.5790305137634277
    3. ' ' → logprob: -9.45403003692627
    4. 'd' → logprob: -11.20403003692627
    5. 'ai' → logprob: -11.20403003692627
    6. ' ' → logprob: -11.82903003692627
    7. 'D' → logprob: -12.45403003692627
    8. ' ai' → logprob: -12.45403003692627
    9. '	a' → logprob: -12.57903003692627
    10. '   ' → logprob: -12.57903003692627

Token 91: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.003665275638923049
    2. '[i' → logprob: -5.628665447235107
    3. 'i' → logprob: -10.25366497039795
    4. '[' → logprob: -10.87866497039795
    5. '_' → logprob: -12.12866497039795
    6. '_j' → logprob: -12.75366497039795
    7. ' -' → logprob: -14.37866497039795
    8. '[_' → logprob: -14.50366497039795
    9. ' _' → logprob: -15.50366497039795
    10. '[]' → logprob: -15.75366497039795

Token 92: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25260934233665466
    2. '-' → logprob: -1.502609372138977
    3. '-D' → logprob: -7.7526092529296875
    4. '_' → logprob: -9.002609252929688
    5. '−' → logprob: -10.002609252929688
    6. ' ' → logprob: -10.877609252929688
    7. ' ' → logprob: -10.877609252929688
    8. ' −' → logprob: -11.502609252929688
    9. '[' → logprob: -12.377609252929688
    10. 's' → logprob: -12.502609252929688

Token 93: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.04301038011908531
    2. ' D' → logprob: -3.1680104732513428
    3. ' ' → logprob: -12.168010711669922
    4. ' ' → logprob: -12.543010711669922
    5. '|' → logprob: -13.793010711669922
    6. 'd' → logprob: -14.543010711669922
    7. '>D' → logprob: -15.293010711669922
    8. '	D' → logprob: -15.418010711669922
    9. '   ' → logprob: -15.668010711669922
    10. '_D' → logprob: -15.793010711669922

Token 94: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.00012154294381616637
    2. ' |' → logprob: -9.125121116638184
    3. 'le' → logprob: -12.250121116638184
    4. ')|' → logprob: -13.000121116638184
    5. '|\' → logprob: -14.250121116638184
    6. ' -' → logprob: -14.375121116638184
    7. '-' → logprob: -14.375121116638184
    8. ')' → logprob: -14.375121116638184
    9. '-|' → logprob: -14.875121116638184
    10. ' ' → logprob: -15.062621116638184

Token 95: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.27515581250190735
    2. ' est' → logprob: -1.775155782699585
    3. ' <=' → logprob: -3.900155782699585
    4. 'est' → logprob: -4.275156021118164
    5. '<=' → logprob: -4.525156021118164
    6. ' is' → logprob: -4.775156021118164
    7. ' minimal' → logprob: -5.150156021118164
    8. 'so' → logprob: -5.900156021118164
    9. ' minimale' → logprob: -6.400156021118164
    10. '|' → logprob: -6.900156021118164

Token 96: ' minimale' (ID: 143217)
  Prédit: ' minimale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimale' → logprob: -0.4210243225097656
    2. 'min' → logprob: -1.2960243225097656
    3. ' minimal' → logprob: -3.1710243225097656
    4. 'minimal' → logprob: -4.796024322509766
    5. ' la' → logprob: -4.921024322509766
    6. ' minim' → logprob: -5.421024322509766
    7. 'la' → logprob: -6.171024322509766
    8. ' minimum' → logprob: -6.421024322509766
    9. 'minimum' → logprob: -6.546024322509766
    10. ' min' → logprob: -7.296024322509766

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02939727157354355
    2. ' ' → logprob: -4.904397487640381
    3. ')' → logprob: -5.404397487640381
    4. '.' → logprob: -5.654397487640381
    5. ' et' → logprob: -6.029397487640381
    6. ',
' → logprob: -6.029397487640381
    7. ':' → logprob: -6.279397487640381
    8. ' dans' → logprob: -6.654397487640381
    9. ' ,' → logprob: -6.779397487640381
    10. 'a' → logprob: -7.154397487640381

Token 98: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.06948792934417725
    2. '#' → logprob: -3.194488048553467
    3. 'on' → logprob: -3.694488048553467
    4. ' #' → logprob: -7.694488048553467
    5. ' il' → logprob: -8.444487571716309
    6. ' je' → logprob: -8.569487571716309
    7. ' nous' → logprob: -9.319487571716309
    8. ',' → logprob: -9.569487571716309
    9. ' ' → logprob: -9.694487571716309
    10. ''on' → logprob: -10.069487571716309

Token 99: ' examine' (ID: 28035)
  Prédit: 'cherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cherche' → logprob: -0.9188147783279419
    2. ' cherche' → logprob: -1.168814778327942
    3. ' regarde' → logprob: -2.1688146591186523
    4. ' recherche' → logprob: -2.7938146591186523
    5. 'effect' → logprob: -3.5438146591186523
    6. 'v' → logprob: -4.418814659118652
    7. ' cherch' → logprob: -5.043814659118652
    8. ' peux' → logprob: -5.043814659118652
    9. ' utilise' → logprob: -5.168814659118652
    10. 'util' → logprob: -5.168814659118652

Token 100: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.42042940855026245
    2. ' au' → logprob: -2.1704294681549072
    3. 'les' → logprob: -2.2954294681549072
    4. ' ' → logprob: -2.9204294681549072
    5. ' la' → logprob: -3.5454294681549072
    6. ' deux' → logprob: -3.9204294681549072
    7. 'au' → logprob: -5.045429229736328
    8. ' à' → logprob: -5.420429229736328
    9. 'la' → logprob: -5.670429229736328
    10. ' soit' → logprob: -6.045429229736328

Token 101: ' valeurs' (ID: 73668)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.2795431613922119
    2. ' ' → logprob: -2.904543161392212
    3. 'de' → logprob: -2.904543161392212
    4. 'val' → logprob: -3.279543161392212
    5. ' valeurs' → logprob: -3.529543161392212
    6. ' positions' → logprob: -3.654543161392212
    7. ' candidates' → logprob: -4.904542922973633
    8. ' voisins' → logprob: -5.279542922973633
    9. '2' → logprob: -5.529542922973633
    10. ' candidats' → logprob: -5.654542922973633

Token 102: ' a' (ID: 261)
  Prédit: 'uni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uni' → logprob: -1.0776442289352417
    2. ' uniques' → logprob: -1.3276442289352417
    3. 'a' → logprob: -2.2026443481445312
    4. ' proches' → logprob: -2.8276443481445312
    5. ' juste' → logprob: -3.3276443481445312
    6. '_unique' → logprob: -3.5776443481445312
    7. ' unique' → logprob: -3.7026443481445312
    8. ' a' → logprob: -3.8276443481445312
    9. ' immédiatement' → logprob: -3.8276443481445312
    10. 'unique' → logprob: -4.077644348144531

Token 103: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.04101521521806717
    2. 'pro' → logprob: -4.166015148162842
    3. '_pro' → logprob: -4.166015148162842
    4. '_' → logprob: -5.916015148162842
    5. 'i' → logprob: -6.291015148162842
    6. 'près' → logprob: -6.541015148162842
    7. 'pp' → logprob: -6.916015148162842
    8. 'prox' → logprob: -8.291015625
    9. '_pp' → logprob: -8.291015625
    10. '_u' → logprob: -8.791015625

Token 104: ' immédi' (ID: 69896)
  Prédit: ' juste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' juste' → logprob: -1.3635085821151733
    2. ' just' → logprob: -1.4885085821151733
    3. ' proches' → logprob: -1.6135085821151733
    4. ' vois' → logprob: -2.238508701324463
    5. 'just' → logprob: -2.488508701324463
    6. ' les' → logprob: -3.363508701324463
    7. 'pro' → logprob: -3.738508701324463
    8. 'adj' → logprob: -4.238508701324463
    9. 'aut' → logprob: -4.613508701324463
    10. 'les' → logprob: -5.113508701324463

Token 105: 'ates' (ID: 1381)
  Prédit: 'atement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atement' → logprob: -0.3539823591709137
    2. 'ates' → logprob: -1.2289823293685913
    3. 'atem' → logprob: -6.353982448577881
    4. '```' → logprob: -7.478982448577881
    5. '``' → logprob: -8.353981971740723
    6. 'ate' → logprob: -8.353981971740723
    7. 's' → logprob: -8.353981971740723
    8. 'usement' → logprob: -8.478981971740723
    9. 'ativement' → logprob: -8.478981971740723
    10. 'at' → logprob: -8.478981971740723

Token 106: ' autour' (ID: 39420)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.17403952777385712
    2. ' autour' → logprob: -2.549039602279663
    3. 's' → logprob: -3.799039602279663
    4. ' adj' → logprob: -4.549039363861084
    5. 'adj' → logprob: -4.924039363861084
    6. ' proches' → logprob: -4.924039363861084
    7. 'es' → logprob: -5.049039363861084
    8. 'ments' → logprob: -5.299039363861084
    9. ' au' → logprob: -5.424039363861084
    10. ' vois' → logprob: -5.674039363861084

Token 107: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.04072854667901993
    2. 'de' → logprob: -3.2907285690307617
    3. ' du' → logprob: -6.665728569030762
    4. 'D' → logprob: -7.040728569030762
    5. ' ' → logprob: -8.415728569030762
    6. ' D' → logprob: -8.915728569030762
    7. 'du' → logprob: -9.040728569030762
    8. 'd' → logprob: -10.915728569030762
    9. ' of' → logprob: -11.290728569030762
    10. 's' → logprob: -12.665728569030762

Token 108: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.22771130502223969
    2. 'D' → logprob: -1.6027113199234009
    3. ' la' → logprob: -6.727711200714111
    4. ' bis' → logprob: -7.727711200714111
    5. 'bis' → logprob: -8.22771167755127
    6. ' ' → logprob: -8.97771167755127
    7. 'la' → logprob: -9.60271167755127
    8. 'l' → logprob: -9.85271167755127
    9. ' l' → logprob: -10.22771167755127
    10. 'd' → logprob: -11.10271167755127

Token 109: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.689944863319397
    2. ' dans' → logprob: -1.314944863319397
    3. ',' → logprob: -2.6899447441101074
    4. '.' → logprob: -3.0649447441101074
    5. '#' → logprob: -3.0649447441101074
    6. 'import' → logprob: -3.6899447441101074
    7. ':' → logprob: -5.189944744110107
    8. 'en' → logprob: -5.314944744110107
    9. ' (' → logprob: -5.439944744110107
    10. 'sur' → logprob: -5.939944744110107

Token 110: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8186411261558533
    2. ' l' → logprob: -1.193641185760498
    3. 'la' → logprob: -1.943641185760498
    4. 'l' → logprob: -2.443641185760498
    5. ' le' → logprob: -4.943641185760498
    6. ' unique' → logprob: -5.568641185760498
    7. ' sorted' → logprob: -5.818641185760498
    8. ' the' → logprob: -6.568641185760498
    9. 'unique' → logprob: -6.568641185760498
    10. ' notre' → logprob: -6.818641185760498

Token 111: ' liste' (ID: 31719)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.8087429404258728
    2. 'sorted' → logprob: -1.5587430000305176
    3. ' unique' → logprob: -1.6837430000305176
    4. 'unique' → logprob: -3.1837430000305176
    5. ' liste' → logprob: -3.4337430000305176
    6. 'liste' → logprob: -3.6837430000305176
    7. ' array' → logprob: -4.433743000030518
    8. ' set' → logprob: -4.933743000030518
    9. ' list' → logprob: -5.058743000030518
    10. 'val' → logprob: -5.308743000030518

Token 112: ' tri' (ID: 12665)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -1.0430207252502441
    2. '_unique' → logprob: -1.6680207252502441
    3. ' des' → logprob: -1.7930207252502441
    4. ' unique' → logprob: -1.7930207252502441
    5. 'des' → logprob: -3.043020725250244
    6. 'a' → logprob: -3.668020725250244
    7. 'import' → logprob: -4.168020725250244
    8. '#' → logprob: -4.668020725250244
    9. 'sorted' → logprob: -5.293020725250244
    10. 'uni' → logprob: -5.543020725250244

Token 113: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.045130420476198196
    2. 'ées' → logprob: -3.545130491256714
    3. 'é' → logprob: -5.420130252838135
    4. 'e' → logprob: -5.795130252838135
    5. 'ee' → logprob: -6.295130252838135
    6. '-' → logprob: -6.420130252838135
    7. 'ed' → logprob: -7.545130252838135
    8. '#' → logprob: -7.920130252838135
    9. 'es' → logprob: -8.045130729675293
    10. 'nées' → logprob: -8.170130729675293

Token 114: ' des' (ID: 731)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.9729560017585754
    2. 'des' → logprob: -1.3479559421539307
    3. ' des' → logprob: -2.0979559421539307
    4. 'a' → logprob: -2.2229559421539307
    5. '#' → logprob: -2.9729559421539307
    6. ' unique' → logprob: -3.8479559421539307
    7. 'uni' → logprob: -3.8479559421539307
    8. 'import' → logprob: -4.47295618057251
    9. '_unique' → logprob: -5.34795618057251
    10. '.' → logprob: -5.72295618057251

Token 115: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3721122443675995
    2. ' valeurs' → logprob: -2.497112274169922
    3. ' unique' → logprob: -2.622112274169922
    4. ' uniques' → logprob: -3.122112274169922
    5. 'unique' → logprob: -3.372112274169922
    6. ' val' → logprob: -3.622112274169922
    7. 'a' → logprob: -3.872112274169922
    8. 'values' → logprob: -4.747112274169922
    9. ' a' → logprob: -4.872112274169922
    10. 'uni' → logprob: -5.497112274169922

Token 116: ' uniques' (ID: 156848)
  Prédit: '_unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_unique' → logprob: -0.09739784151315689
    2. '_' → logprob: -3.222397804260254
    3. 'uni' → logprob: -4.097397804260254
    4. '_uni' → logprob: -4.222397804260254
    5. ' uniques' → logprob: -4.472397804260254
    6. 'unique' → logprob: -5.097397804260254
    7. ' unique' → logprob: -6.222397804260254
    8. 'import' → logprob: -7.722397804260254
    9. '_a' → logprob: -7.847397804260254
    10. 'uniq' → logprob: -8.097397804260254

Token 117: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5531953573226929
    2. 'unique' → logprob: -1.6781953573226929
    3. '.' → logprob: -2.1781954765319824
    4. 's' → logprob: -2.3031954765319824
    5. 'a' → logprob: -2.4281954765319824
    6. 'import' → logprob: -2.5531954765319824
    7. '#' → logprob: -2.6781954765319824
    8. '_unique' → logprob: -3.3031954765319824
    9. '
' → logprob: -3.8031954765319824
    10. 'sorted' → logprob: -4.303195476531982

Token 118: '#' (ID: 2)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -1.4690157175064087
    2. '
' → logprob: -1.5940157175064087
    3. 's' → logprob: -1.7190157175064087
    4. 'def' → logprob: -1.8440157175064087
    5. '_unique' → logprob: -2.719015598297119
    6. 'values' → logprob: -3.094015598297119
    7. 'a' → logprob: -3.719015598297119
    8. 'import' → logprob: -3.719015598297119
    9. '\n' → logprob: -4.719015598297119
    10. '```' → logprob: -4.719015598297119

Token 119: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3973391354084015
    2. 'unique' → logprob: -2.022339105606079
    3. 'values' → logprob: -2.772339105606079
    4. 'a' → logprob: -3.272339105606079
    5. 'import' → logprob: -3.647339105606079
    6. '#' → logprob: -4.147339344024658
    7. 'n' → logprob: -4.147339344024658
    8. '
' → logprob: -4.772339344024658
    9. 'class' → logprob: -4.897339344024658
    10. '```' → logprob: -6.147339344024658

Token 120: ' ces' (ID: 10532)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7394036650657654
    2. 'i' → logprob: -1.2394037246704102
    3. ' continuer' → logprob: -2.48940372467041
    4. 'v' → logprob: -3.48940372467041
    5. ' val' → logprob: -3.61440372467041
    6. 'val' → logprob: -3.86440372467041
    7. ' trouver' → logprob: -4.11440372467041
    8. ' idx' → logprob: -5.36440372467041
    9. 'a' → logprob: -5.61440372467041
    10. ' v' → logprob: -5.73940372467041

Token 121: ' candidats' (ID: 100182)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.0381031036376953
    2. ' valeurs' → logprob: -1.1631031036376953
    3. ' val' → logprob: -1.7881031036376953
    4. 'a' → logprob: -2.9131031036376953
    5. ' uniques' → logprob: -3.2881031036376953
    6. ' a' → logprob: -4.288103103637695
    7. 'values' → logprob: -4.663103103637695
    8. ' lignes' → logprob: -5.163103103637695
    9. ' unique' → logprob: -5.663103103637695
    10. 'positions' → logprob: -5.788103103637695

Token 122: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018427111208438873
    2. ' ,' → logprob: -5.018426895141602
    3. ':' → logprob: -5.393426895141602
    4. 's' → logprob: -6.393426895141602
    5. ' ' → logprob: -6.768426895141602
    6. ')' → logprob: -7.143426895141602
    7. 'import' → logprob: -7.768426895141602
    8. 'es' → logprob: -8.393426895141602
    9. 'def' → logprob: -8.393426895141602
    10. '_unique' → logprob: -8.393426895141602

Token 123: ' fait' (ID: 7473)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.933713436126709
    2. ' va' → logprob: -2.058713436126709
    3. 'continue' → logprob: -2.683713436126709
    4. ' recherche' → logprob: -2.683713436126709
    5. ' cherche' → logprob: -3.058713436126709
    6. ' vér' → logprob: -3.058713436126709
    7. 'cherche' → logprob: -3.058713436126709
    8. ' regarde' → logprob: -3.308713436126709
    9. ' récup' → logprob: -3.558713436126709
    10. 'for' → logprob: -4.058713436126709

Token 124: ' une' (ID: 2463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.6865580081939697
    2. ' une' → logprob: -1.9365580081939697
    3. ' un' → logprob: -2.5615580081939697
    4. 'un' → logprob: -2.6865580081939697
    5. '
' → logprob: -2.8115580081939697
    6. '#' → logprob: -3.5615580081939697
    7. 'une' → logprob: -3.6865580081939697
    8. ' ' → logprob: -3.6865580081939697
    9. 'import' → logprob: -3.9365580081939697
    10. 'les' → logprob: -3.9365580081939697

Token 125: ' recherche' (ID: 24975)
  Prédit: ' recherche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recherche' → logprob: -0.807532548904419
    2. 're' → logprob: -1.307532548904419
    3. 'rech' → logprob: -2.557532548904419
    4. 'search' → logprob: -2.932532548904419
    5. 'cherche' → logprob: -3.307532548904419
    6. 'binary' → logprob: -3.682532548904419
    7. 'bis' → logprob: -3.682532548904419
    8. 'b' → logprob: -4.30753231048584
    9. 'count' → logprob: -4.43253231048584
    10. 'par' → logprob: -4.80753231048584

Token 126: ' b' (ID: 287)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -1.2165614366531372
    2. 'b' → logprob: -1.3415614366531372
    3. ' dans' → logprob: -2.0915613174438477
    4. 'dans' → logprob: -2.2165613174438477
    5. 'd' → logprob: -2.9665613174438477
    6. ' b' → logprob: -3.7165613174438477
    7. 'binary' → logprob: -3.9665613174438477
    8. 'bin' → logprob: -4.216561317443848
    9. 'de' → logprob: -4.216561317443848
    10. 'positions' → logprob: -4.341561317443848

Token 127: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.3747004568576813
    2. 'in' → logprob: -1.9997004270553589
    3. 'inary' → logprob: -2.3747005462646484
    4. 'is' → logprob: -2.8747005462646484
    5. 'orn' → logprob: -4.124700546264648
    6. 'orne' → logprob: -5.749700546264648
    7. '_' → logprob: -6.374700546264648
    8. 'etween' → logprob: -6.874700546264648
    9. 'inar' → logprob: -7.124700546264648
    10. 'ina' → logprob: -7.624700546264648

Token 128: ' sur' (ID: 1512)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.2260938882827759
    2. ' les' → logprob: -1.4760938882827759
    3. ' la' → logprob: -1.4760938882827759
    4. ' leurs' → logprob: -2.3510937690734863
    5. 'la' → logprob: -2.4760937690734863
    6. 'leurs' → logprob: -3.9760937690734863
    7. 'positions' → logprob: -4.226093769073486
    8. 'leur' → logprob: -4.601093769073486
    9. ' leur' → logprob: -4.726093769073486
    10. 'the' → logprob: -5.351093769073486

Token 130: ' indices' (ID: 30378)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.204325869679451
    2. ' positions' → logprob: -2.2043259143829346
    3. 'indices' → logprob: -3.5793259143829346
    4. ' indices' → logprob: -3.9543259143829346
    5. ' listes' → logprob: -4.0793256759643555
    6. 'list' → logprob: -5.5793256759643555
    7. 'liste' → logprob: -6.5793256759643555
    8. 'index' → logprob: -7.4543256759643555
    9. 'pos' → logprob: -7.5793256759643555
    10. 'indexes' → logprob: -7.8293256759643555

Token 131: ' des' (ID: 731)
  Prédit: '_unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_unique' → logprob: -1.3248084783554077
    2. ',' → logprob: -1.9498084783554077
    3. 'import' → logprob: -2.4498085975646973
    4. 'unique' → logprob: -2.6998085975646973
    5. 'def' → logprob: -2.9498085975646973
    6. 'a' → logprob: -2.9498085975646973
    7. ' uniques' → logprob: -3.0748085975646973
    8. 's' → logprob: -3.3248085975646973
    9. ' unique' → logprob: -3.6998085975646973
    10. ' des' → logprob: -3.6998085975646973

Token 132: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.01777632348239422
    2. 'occ' → logprob: -4.6427764892578125
    3. 'appar' → logprob: -6.0177764892578125
    4. ' positions' → logprob: -6.0177764892578125
    5. 'occur' → logprob: -6.2677764892578125
    6. 'pos' → logprob: -7.7677764892578125
    7. ' occurrences' → logprob: -8.267776489257812
    8. 'a' → logprob: -8.517776489257812
    9. 'val' → logprob: -9.392776489257812
    10. 'appear' → logprob: -10.267776489257812

Token 133: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2445706129074097
    2. ',' → logprob: -1.7445706129074097
    3. 's' → logprob: -1.8695706129074097
    4. 'import' → logprob: -2.119570732116699
    5. 'a' → logprob: -2.494570732116699
    6. '_unique' → logprob: -3.369570732116699
    7. '

' → logprob: -4.494570732116699
    8. ')' → logprob: -4.744570732116699
    9. 'unique' → logprob: -4.869570732116699
    10. '
' → logprob: -4.869570732116699

Token 134: ' voir' (ID: 20611)
  Prédit: ' trouver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -0.39766982197761536
    2. ' vérifier' → logprob: -1.522669792175293
    3. 'tr' → logprob: -3.147669792175293
    4. ' déterminer' → logprob: -4.147669792175293
    5. 'voir' → logprob: -4.397669792175293
    6. ' voir' → logprob: -4.397669792175293
    7. ' savoir' → logprob: -4.647669792175293
    8. 'v' → logprob: -5.397669792175293
    9. ' compter' → logprob: -6.022669792175293
    10. ' s' → logprob: -7.022669792175293

Token 135: ' s' (ID: 265)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.31573593616485596
    2. ' s' → logprob: -2.0657358169555664
    3. 'si' → logprob: -3.0657358169555664
    4. ' if' → logprob: -3.1907358169555664
    5. ' combien' → logprob: -3.3157358169555664
    6. '#' → logprob: -4.690735816955566
    7. 's' → logprob: -5.065735816955566
    8. 'if' → logprob: -6.440735816955566
    9. ' ' → logprob: -7.440735816955566
    10. ' #' → logprob: -7.815735816955566

Token 136: '’il' (ID: 14828)
  Prédit: ''il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.13663998246192932
    2. ''ils' → logprob: -2.7616400718688965
    3. ' il' → logprob: -3.5116400718688965
    4. 'il' → logprob: -5.1366400718688965
    5. '#' → logprob: -5.2616400718688965
    6. '’il' → logprob: -5.5116400718688965
    7. 'u' → logprob: -5.5116400718688965
    8. 'i' → logprob: -5.8866400718688965
    9. ' ils' → logprob: -6.3866400718688965
    10. ''elles' → logprob: -6.5116400718688965

Token 137: ' y' (ID: 342)
  Prédit: ' existe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' existe' → logprob: -0.21192201972007751
    2. ' y' → logprob: -1.7119220495224
    3. 'ex' → logprob: -4.9619221687316895
    4. 'y' → logprob: -6.3369221687316895
    5. ' se' → logprob: -7.2119221687316895
    6. 'exist' → logprob: -8.211921691894531
    7. ' a' → logprob: -8.836921691894531
    8. ' exist' → logprob: -9.336921691894531
    9. 'se' → logprob: -9.461921691894531
    10. ' ex' → logprob: -9.836921691894531

Token 138: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20510436594486237
    2. ' a' → logprob: -1.7051043510437012
    3. 'ex' → logprob: -5.830104351043701
    4. ' existe' → logprob: -7.455104351043701
    5. 'exist' → logprob: -9.58010482788086
    6. 'existent' → logprob: -10.70510482788086
    7. ''a' → logprob: -10.83010482788086
    8. 'avait' → logprob: -11.70510482788086
    9. 'est' → logprob: -11.83010482788086
    10. 'en' → logprob: -12.45510482788086

Token 139: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.49207332730293274
    2. 'une' → logprob: -1.3670732975006104
    3. ' au' → logprob: -2.3670732975006104
    4. ' des' → logprob: -4.3670735359191895
    5. 'au' → logprob: -4.3670735359191895
    6. 'un' → logprob: -5.2420735359191895
    7. ' un' → logprob: -5.3670735359191895
    8. 'des' → logprob: -5.6170735359191895
    9. ' ' → logprob: -8.242073059082031
    10. '#' → logprob: -8.867073059082031

Token 140: ' occurrence' (ID: 55807)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.13855107128620148
    2. ' position' → logprob: -2.2635509967803955
    3. 'pos' → logprob: -4.513551235198975
    4. 'indice' → logprob: -4.763551235198975
    5. 'occ' → logprob: -6.388551235198975
    6. 'val' → logprob: -6.638551235198975
    7. 'index' → logprob: -7.138551235198975
    8. ' valeur' → logprob: -7.263551235198975
    9. ' occurrence' → logprob: -8.263550758361816
    10. ' ' → logprob: -8.513550758361816

Token 141: ' entre' (ID: 3853)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2437418699264526
    2. ',' → logprob: -1.9937418699264526
    3. ' ' → logprob: -2.493741989135742
    4. 's' → logprob: -2.493741989135742
    5. '<|end|>' → logprob: -2.868741989135742
    6. '_unique' → logprob: -2.993741989135742
    7. ' unique' → logprob: -3.368741989135742
    8. ')' → logprob: -3.368741989135742
    9. 'import' → logprob: -3.368741989135742
    10. ' dans' → logprob: -3.743741989135742

Token 142: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.02632642723619938
    2. 'l' → logprob: -3.6513264179229736
    3. ' ' → logprob: -11.651326179504395
    4. '[l' → logprob: -11.651326179504395
    5. '	l' → logprob: -13.151326179504395
    6. ' ' → logprob: -13.401326179504395
    7. '_l' → logprob: -13.776326179504395
    8. ' [' → logprob: -14.026326179504395
    9. 'r' → logprob: -14.276326179504395
    10. '(l' → logprob: -14.401326179504395

Token 143: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.45963457226753235
    2. ' et' → logprob: -1.08463454246521
    3. ' and' → logprob: -4.459634780883789
    4. ' ' → logprob: -4.959634780883789
    5. ',' → logprob: -5.334634780883789
    6. 'and' → logprob: -6.084634780883789
    7. '<=' → logprob: -6.834634780883789
    8. ' <=' → logprob: -6.959634780883789
    9. ' ' → logprob: -7.834634780883789
    10. ' ,' → logprob: -8.084634780883789

Token 144: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.11283167451620102
    2. 'r' → logprob: -2.2378315925598145
    3. ' ' → logprob: -12.112832069396973
    4. ' ' → logprob: -12.987832069396973
    5. '```' → logprob: -14.737832069396973
    6. '_r' → logprob: -15.112832069396973
    7. '	r' → logprob: -15.862832069396973
    8. ',r' → logprob: -15.987832069396973
    9. ',' → logprob: -16.362831115722656
    10. ' ' → logprob: -16.800331115722656

Token 145: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2034667283296585
    2. 'def' → logprob: -2.8284666538238525
    3. '

' → logprob: -3.0784666538238525
    4. 's' → logprob: -3.3284666538238525
    5. 'a' → logprob: -4.328466892242432
    6. 'import' → logprob: -4.703466892242432
    7. '\n' → logprob: -5.578466892242432
    8. '_unique' → logprob: -5.828466892242432
    9. 'unique' → logprob: -5.953466892242432
    10. '```' → logprob: -6.078466892242432

Token 146: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5142027139663696
    2. 'a' → logprob: -1.7642027139663696
    3. '
' → logprob: -3.01420259475708
    4. 'n' → logprob: -3.13920259475708
    5. 'import' → logprob: -3.26420259475708
    6. '\n' → logprob: -3.51420259475708
    7. '\' → logprob: -4.13920259475708
    8. '```' → logprob: -4.26420259475708
    9. 'class' → logprob: -4.51420259475708
    10. '

' → logprob: -5.26420259475708

Token 147: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04501738026738167
    2. 'class' → logprob: -3.5450174808502197
    3. 'n' → logprob: -4.545017242431641
    4. '
' → logprob: -6.295017242431641
    5. 'from' → logprob: -7.420017242431641
    6. ' 
' → logprob: -7.670017242431641
    7. 'a' → logprob: -7.920017242431641
    8. '  
' → logprob: -7.920017242431641
    9. 'import' → logprob: -8.42001724243164
    10. '#' → logprob: -8.79501724243164

Token 148: ' prend' (ID: 37463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6204395294189453
    2. ' continue' → logprob: -1.6204395294189453
    3. 'continue' → logprob: -1.8704395294189453
    4. ' def' → logprob: -3.3704395294189453
    5. 'for' → logprob: -4.120439529418945
    6. 'contin' → logprob: -4.245439529418945
    7. ' peux' → logprob: -4.995439529418945
    8. '#' → logprob: -5.370439529418945
    9. ' continues' → logprob: -5.370439529418945
    10. ' for' → logprob: -5.495439529418945

Token 149: ' la' (ID: 557)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9105527997016907
    2. 'la' → logprob: -1.035552740097046
    3. 'le' → logprob: -2.410552740097046
    4. ' la' → logprob: -2.535552740097046
    5. ' min' → logprob: -4.160552978515625
    6. ' le' → logprob: -4.285552978515625
    7. 'celle' → logprob: -4.410552978515625
    8. ' celle' → logprob: -4.910552978515625
    9. 'minimum' → logprob: -5.410552978515625
    10. 'les' → logprob: -5.660552978515625

Token 150: ' distance' (ID: 9324)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3960493206977844
    2. ' min' → logprob: -2.2710492610931396
    3. 'best' → logprob: -3.0210492610931396
    4. ' minimal' → logprob: -3.3960492610931396
    5. 'me' → logprob: -3.8960492610931396
    6. 'max' → logprob: -3.8960492610931396
    7. ' meilleure' → logprob: -4.271049499511719
    8. 'minimum' → logprob: -4.271049499511719
    9. 'val' → logprob: -4.521049499511719
    10. ' best' → logprob: -4.521049499511719

Token 151: ' minimale' (ID: 143217)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8806493282318115
    2. 's' → logprob: -1.3806493282318115
    3. '_' → logprob: -2.3806493282318115
    4. ',' → logprob: -3.0056493282318115
    5. ')' → logprob: -3.2556493282318115
    6. '_max' → logprob: -3.6306493282318115
    7. ' maximale' → logprob: -4.130649566650391
    8. ' s' → logprob: -4.380649566650391
    9. '_min' → logprob: -4.505649566650391
    10. ' _' → logprob: -4.630649566650391

Token 152: ' de' (ID: 334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13572418689727783
    2. 's' → logprob: -3.0107240676879883
    3. '

' → logprob: -3.5107240676879883
    4. 'def' → logprob: -4.135724067687988
    5. 'import' → logprob: -4.635724067687988
    6. 'a' → logprob: -5.260724067687988
    7. '\n' → logprob: -5.510724067687988
    8. '
 
' → logprob: -6.260724067687988
    9. '
' → logprob: -6.385724067687988
    10. ',
' → logprob: -6.635724067687988

Token 153: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.7456492781639099
    2. 'ces' → logprob: -1.7456493377685547
    3. ' ces' → logprob: -1.8706493377685547
    4. ' ' → logprob: -3.1206493377685547
    5. ' |' → logprob: -3.3706493377685547
    6. 'l' → logprob: -4.370649337768555
    7. 'abs' → logprob: -4.495649337768555
    8. 'val' → logprob: -4.620649337768555
    9. ' l' → logprob: -4.745649337768555
    10. 'diff' → logprob: -4.745649337768555

Token 154: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05637656897306442
    2. ' a' → logprob: -2.9313764572143555
    3. 'D' → logprob: -7.9313764572143555
    4. 'val' → logprob: -8.181376457214355
    5. 'ai' → logprob: -8.431376457214355
    6. 'l' → logprob: -8.556376457214355
    7. ' D' → logprob: -9.556376457214355
    8. ' l' → logprob: -9.681376457214355
    9. ' la' → logprob: -9.681376457214355
    10. ' ai' → logprob: -10.181376457214355

Token 155: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -2.2246291337069124e-05
    2. '[i' → logprob: -10.875021934509277
    3. '_ai' → logprob: -13.500021934509277
    4. 'i' → logprob: -13.875021934509277
    5. '[' → logprob: -15.375021934509277
    6. '_a' → logprob: -15.875021934509277
    7. ' -' → logprob: -16.250022888183594
    8. '_j' → logprob: -16.375022888183594
    9. 'import' → logprob: -16.375022888183594
    10. 'a' → logprob: -16.625022888183594

Token 156: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06238485127687454
    2. '-' → logprob: -2.812384843826294
    3. '-D' → logprob: -7.812385082244873
    4. ' ' → logprob: -11.937384605407715
    5. ' ' → logprob: -12.562384605407715
    6. '−' → logprob: -13.937384605407715
    7. ' −' → logprob: -15.437384605407715
    8. 's' → logprob: -15.937384605407715
    9. '   ' → logprob: -15.937384605407715
    10. '  ' → logprob: -16.31238555908203

Token 157: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0549028255045414
    2. ' D' → logprob: -2.9299027919769287
    3. ' ' → logprob: -11.304903030395508
    4. ' ' → logprob: -12.054903030395508
    5. 'd' → logprob: -13.804903030395508
    6. '|' → logprob: -15.429903030395508
    7. '_D' → logprob: -15.804903030395508
    8. 's' → logprob: -15.929903030395508
    9. '	D' → logprob: -15.929903030395508
    10. '
' → logprob: -16.304903030395508

Token 158: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.00036906293826177716
    2. ' |' → logprob: -8.37536907196045
    3. ')|' → logprob: -9.00036907196045
    4. ')' → logprob: -12.50036907196045
    5. '|
' → logprob: -12.87536907196045
    6. '|

' → logprob: -13.12536907196045
    7. '|\' → logprob: -13.37536907196045
    8. '}|' → logprob: -13.37536907196045
    9. ']|' → logprob: -14.50036907196045
    10. '|,
' → logprob: -14.50036907196045

Token 159: ' parmi' (ID: 51713)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10119453817605972
    2. 's' → logprob: -2.9761946201324463
    3. '

' → logprob: -4.601194381713867
    4. 'a' → logprob: -4.726194381713867
    5. 'n' → logprob: -5.101194381713867
    6. 'def' → logprob: -5.351194381713867
    7. '\n' → logprob: -5.476194381713867
    8. '
' → logprob: -6.101194381713867
    9. 'import' → logprob: -6.101194381713867
    10. 'unique' → logprob: -6.351194381713867

Token 160: ' ces' (ID: 10532)
  Prédit: 'ces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ces' → logprob: -1.0046977996826172
    2. 'les' → logprob: -1.5046977996826172
    3. ' celles' → logprob: -1.8796977996826172
    4. ' ces' → logprob: -2.129697799682617
    5. 'c' → logprob: -2.254697799682617
    6. ' les' → logprob: -3.754697799682617
    7. ' ceux' → logprob: -5.629697799682617
    8. 't' → logprob: -6.254697799682617
    9. ' toutes' → logprob: -6.754697799682617
    10. 'ce' → logprob: -6.754697799682617

Token 161: ' occurrences' (ID: 108073)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8935141563415527
    2. ' candidats' → logprob: -1.0185141563415527
    3. ' valeurs' → logprob: -2.7685141563415527
    4. 'positions' → logprob: -3.2685141563415527
    5. 'val' → logprob: -3.5185141563415527
    6. 'occ' → logprob: -3.6435141563415527
    7. ' deux' → logprob: -4.143514156341553
    8. 'de' → logprob: -4.268514156341553
    9. ' candidates' → logprob: -4.393514156341553
    10. 'indices' → logprob: -5.018514156341553

Token 162: ' val' (ID: 1459)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08449794352054596
    2. '

' → logprob: -3.2094979286193848
    3. 'a' → logprob: -4.584497928619385
    4. 's' → logprob: -4.709497928619385
    5. 'def' → logprob: -4.834497928619385
    6. 'import' → logprob: -5.334497928619385
    7. '
' → logprob: -6.209497928619385
    8. 'unique' → logprob: -6.334497928619385
    9. '


' → logprob: -6.959497928619385
    10. '\n' → logprob: -7.084497928619385

Token 163: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.16844351589679718
    2. 'ide' → logprob: -2.043443441390991
    3. 'ues' → logprob: -4.41844367980957
    4. 'id' → logprob: -4.91844367980957
    5. '#' → logprob: -6.66844367980957
    6. '```' → logprob: -7.04344367980957
    7. 'ue' → logprob: -7.85594367980957
    8. '|' → logprob: -8.04344367980957
    9. 'ider' → logprob: -8.54344367980957
    10. '1' → logprob: -9.04344367980957

Token 164: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7259002923965454
    2. '
' → logprob: -1.8509002923965454
    3. 's' → logprob: -2.100900173187256
    4. 'n' → logprob: -2.350900173187256
    5. 'a' → logprob: -2.725900173187256
    6. '\n' → logprob: -3.975900173187256
    7. '\' → logprob: -4.225900173187256
    8. 'import' → logprob: -4.225900173187256
    9. 'from' → logprob: -4.725900173187256
    10. '

' → logprob: -5.725900173187256

Token 165: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29885998368263245
    2. 'a' → logprob: -2.5488600730895996
    3. 's' → logprob: -2.6738600730895996
    4. '

' → logprob: -3.2988600730895996
    5. 'def' → logprob: -4.2988600730896
    6. 'unique' → logprob: -4.2988600730896
    7. 'import' → logprob: -4.4238600730896
    8. '\n' → logprob: -4.5488600730896
    9. '
' → logprob: -5.6738600730896
    10. 'values' → logprob: -5.7988600730896

Token 166: ' Cette' (ID: 27383)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3520349264144897
    2. 'from' → logprob: -1.3520349264144897
    3. 'def' → logprob: -1.6020349264144897
    4. 'a' → logprob: -2.6020350456237793
    5. '
' → logprob: -2.6020350456237793
    6. 'import' → logprob: -2.9770350456237793
    7. 's' → logprob: -3.1020350456237793
    8. '\n' → logprob: -4.727035045623779
    9. '\' → logprob: -5.227035045623779
    10. '```' → logprob: -5.602035045623779

Token 167: ' méthode' (ID: 71490)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.8109482526779175
    2. ' solution' → logprob: -1.9359482526779175
    3. ' approche' → logprob: -2.185948371887207
    4. ' #' → logprob: -2.185948371887207
    5. ' approach' → logprob: -2.685948371887207
    6. ' def' → logprob: -3.185948371887207
    7. ' ' → logprob: -3.185948371887207
    8. ' ' → logprob: -3.185948371887207
    9. 'def' → logprob: -3.310948371887207
    10. ' version' → logprob: -3.810948371887207

Token 168: ' permet' (ID: 11798)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7705386281013489
    2. ':' → logprob: -1.520538568496704
    3. ' def' → logprob: -3.145538568496704
    4. ' permet' → logprob: -3.270538568496704
    5. ' est' → logprob: -3.395538568496704
    6. ' continue' → logprob: -3.395538568496704
    7. 's' → logprob: -3.895538568496704
    8. ' :' → logprob: -4.145538806915283
    9. ' va' → logprob: -4.270538806915283
    10. ',' → logprob: -4.270538806915283

Token 169: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0585894584655762
    2. 'de' → logprob: -1.3085894584655762
    3. ' d' → logprob: -1.4335894584655762
    4. ' de' → logprob: -2.183589458465576
    5. ' une' → logprob: -4.558589458465576
    6. '#' → logprob: -5.308589458465576
    7. 'def' → logprob: -5.558589458465576
    8. 'une' → logprob: -5.933589458465576
    9. '_' → logprob: -6.308589458465576
    10. '_d' → logprob: -6.308589458465576

Token 170: ' répondre' (ID: 53201)
  Prédit: ' gérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.9195626378059387
    2. 'ré' → logprob: -1.419562578201294
    3. 'g' → logprob: -1.919562578201294
    4. ' traiter' → logprob: -2.294562578201294
    5. 'trait' → logprob: -3.919562578201294
    6. 'optim' → logprob: -4.794562816619873
    7. 'pass' → logprob: -4.794562816619873
    8. 'rés' → logprob: -4.919562816619873
    9. ' répondre' → logprob: -5.169562816619873
    10. 'faire' → logprob: -5.169562816619873

Token 171: ' efficacement' (ID: 155449)
  Prédit: ' efficacement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' efficacement' → logprob: -0.5112329125404358
    2. ' rapidement' → logprob: -1.136232852935791
    3. ' effic' → logprob: -4.386232852935791
    4. 'à' → logprob: -4.636232852935791
    5. ' à' → logprob: -4.636232852935791
    6. 'efficient' → logprob: -4.761232852935791
    7. ' aux' → logprob: -4.886232852935791
    8. ' en' → logprob: -4.886232852935791
    9. ' très' → logprob: -5.136232852935791
    10. 'aux' → logprob: -5.386232852935791

Token 172: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.1229195594787598
    2. ' aux' → logprob: -1.6229195594787598
    3. 'aux' → logprob: -1.6229195594787598
    4. 'au' → logprob: -1.7479195594787598
    5. ' à' → logprob: -2.4979195594787598
    6. ' au' → logprob: -4.12291955947876
    7. ' rapidement' → logprob: -5.62291955947876
    8. 'import' → logprob: -7.12291955947876
    9. '```' → logprob: -7.74791955947876
    10. ' efficacement' → logprob: -7.99791955947876

Token 173: ' Q' (ID: 1486)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'O' → logprob: -1.1681296825408936
    2. 'l' → logprob: -1.7931296825408936
    3. 't' → logprob: -1.9181296825408936
    4. 'la' → logprob: -2.5431296825408936
    5. 'un' → logprob: -2.7931296825408936
    6. 'des' → logprob: -3.1681296825408936
    7. 'une' → logprob: -3.6681296825408936
    8. ' chaque' → logprob: -3.6681296825408936
    9. ' O' → logprob: -3.7931296825408936
    10. 'large' → logprob: -3.9181296825408936

Token 174: ' requ' (ID: 7028)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3866254389286041
    2. ' s' → logprob: -2.2616255283355713
    3. ' ' → logprob: -3.0116255283355713
    4. ' queries' → logprob: -3.5116255283355713
    5. '_' → logprob: -4.136625289916992
    6. ',' → logprob: -4.136625289916992
    7. 'u' → logprob: -4.761625289916992
    8. 'e' → logprob: -5.011625289916992
    9. 'es' → logprob: -5.136625289916992
    10. ' les' → logprob: -5.261625289916992

Token 175: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.00041208078619092703
    2. 'etes' → logprob: -8.125411987304688
    3. 'êt' → logprob: -9.625411987304688
    4. 'ê' → logprob: -10.125411987304688
    5. 'ètes' → logprob: -12.625411987304688
    6. 'êts' → logprob: -13.125411987304688
    7. 'ête' → logprob: -13.375411987304688
    8. 'et' → logprob: -14.000411987304688
    9. 'estions' → logprob: -14.375411987304688
    10. '#' → logprob: -15.250411987304688

Token 176: ' sans' (ID: 9828)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20713867247104645
    2. 'def' → logprob: -2.707138776779175
    3. '

' → logprob: -2.832138776779175
    4. 's' → logprob: -3.457138776779175
    5. 'import' → logprob: -4.832138538360596
    6. '\n' → logprob: -5.207138538360596
    7. '
 
' → logprob: -5.332138538360596
    8. '


' → logprob: -5.957138538360596
    9. '
' → logprob: -6.332138538360596
    10. '\' → logprob: -6.957138538360596

Token 177: ' passer' (ID: 27727)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.16295833885669708
    2. 'ré' → logprob: -2.7879583835601807
    3. '```' → logprob: -4.037958145141602
    4. 'faire' → logprob: -4.162958145141602
    5. 'import' → logprob: -4.162958145141602
    6. 'tr' → logprob: -4.662958145141602
    7. 't' → logprob: -5.037958145141602
    8. 'T' → logprob: -5.662958145141602
    9. 'timeout' → logprob: -5.912958145141602
    10. 'l' → logprob: -6.912958145141602

Token 178: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.28724241256713867
    2. 'en' → logprob: -2.1622424125671387
    3. 'à' → logprob: -3.0372424125671387
    4. ' par' → logprob: -3.1622424125671387
    5. '#' → logprob: -4.662242412567139
    6. 'tout' → logprob: -4.662242412567139
    7. 'la' → logprob: -5.787242412567139
    8. 's' → logprob: -6.162242412567139
    9. 'for' → logprob: -6.162242412567139
    10. 'ent' → logprob: -6.287242412567139

Token 179: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.15955939888954163
    2. 'un' → logprob: -2.284559488296509
    3. ' une' → logprob: -3.784559488296509
    4. 'la' → logprob: -4.90955924987793
    5. 'des' → logprob: -5.40955924987793
    6. 'l' → logprob: -6.03455924987793
    7. 't' → logprob: -6.28455924987793
    8. 'du' → logprob: -6.53455924987793
    9. ' un' → logprob: -6.78455924987793
    10. 'le' → logprob: -7.28455924987793

Token 180: ' segment' (ID: 14806)
  Prédit: ' tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tri' → logprob: -0.9086383581161499
    2. 'for' → logprob: -1.53363835811615
    3. ' for' → logprob: -2.5336384773254395
    4. 'tri' → logprob: -2.9086384773254395
    5. ' passage' → logprob: -3.5336384773254395
    6. '#' → logprob: -3.5336384773254395
    7. 'e' → logprob: -4.0336384773254395
    8. 'br' → logprob: -4.2836384773254395
    9. ' trie' → logprob: -4.2836384773254395
    10. ' parcours' → logprob: -4.4086384773254395

Token 181: ' tree' (ID: 8165)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2526010274887085
    2. '_tree' → logprob: -1.6276010274887085
    3. 'tree' → logprob: -4.002601146697998
    4. ' tree' → logprob: -6.752601146697998
    5. 's' → logprob: -6.752601146697998
    6. '[' → logprob: -7.502601146697998
    7. '_unique' → logprob: -7.752601146697998
    8. ']' → logprob: -7.752601146697998
    9. '[]' → logprob: -8.12760066986084
    10. ' _' → logprob: -8.25260066986084

Token 182: ' sophist' (ID: 96686)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13034561276435852
    2. '

' → logprob: -2.755345582962036
    3. 'a' → logprob: -4.130345821380615
    4. 's' → logprob: -4.255345821380615
    5. '\n' → logprob: -4.505345821380615
    6. 'import' → logprob: -5.005345821380615
    7. 'def' → logprob: -6.005345821380615
    8. '
' → logprob: -6.380345821380615
    9. '


' → logprob: -6.880345821380615
    10. '\' → logprob: -7.130345821380615

Token 183: 'iqué' (ID: 47907)
  Prédit: 'iqué'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iqué' → logprob: -0.1321130394935608
    2. 'ique' → logprob: -3.007112979888916
    3. 'ifié' → logprob: -3.382112979888916
    4. 'ément' → logprob: -4.507112979888916
    5. 'iqu' → logprob: -4.507112979888916
    6. 'ic' → logprob: -5.132112979888916
    7. '#' → logprob: -5.757112979888916
    8. 'icot' → logprob: -6.382112979888916
    9. 'iquant' → logprob: -7.257112979888916
    10. 'lex' → logprob: -7.257112979888916

Token 184: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30140089988708496
    2. 's' → logprob: -1.926400899887085
    3. 'a' → logprob: -3.301400899887085
    4. '\n' → logprob: -3.551400899887085
    5. '

' → logprob: -4.051401138305664
    6. 'import' → logprob: -4.926401138305664
    7. 'def' → logprob: -5.426401138305664
    8. '
' → logprob: -5.801401138305664
    9. '\' → logprob: -6.176401138305664
    10. ' 
' → logprob: -6.301401138305664

Token 185: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3066212832927704
    2. 'def' → logprob: -1.4316213130950928
    3. 'from' → logprob: -4.431621074676514
    4. 'class' → logprob: -5.056621074676514
    5. 'import' → logprob: -5.181621074676514
    6. 'a' → logprob: -7.306621074676514
    7. 'N' → logprob: -8.306621551513672
    8. '#' → logprob: -8.556621551513672
    9. '```' → logprob: -9.806621551513672
    10. '\' → logprob: -10.931621551513672

Token 186: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0877329632639885
    2. '#' → logprob: -3.087733030319214
    3. ' =' → logprob: -3.462733030319214
    4. '=sys' → logprob: -6.212732791900635
    5. '_' → logprob: -6.837732791900635
    6. '=#' → logprob: -6.962732791900635
    7. 'def' → logprob: -7.337732791900635
    8. '=int' → logprob: -7.837732791900635
    9. 'MAX' → logprob: -8.087733268737793
    10. '_MAX' → logprob: -8.212733268737793

Token 187: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.693183958530426
    2. ' int' → logprob: -0.693183958530426
    3. '10' → logprob: -11.193183898925781
    4. '=int' → logprob: -11.693183898925781
    5. '[int' → logprob: -12.068183898925781
    6. ' ' → logprob: -12.818183898925781
    7. ' map' → logprob: -12.818183898925781
    8. 'map' → logprob: -13.818183898925781
    9. '0' → logprob: -14.318183898925781
    10. '(int' → logprob: -14.443183898925781

Token 188: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.015046465210616589
    2. '(' → logprob: -4.2650465965271
    3. '(sys' → logprob: -7.1400465965271
    4. 'input' → logprob: -9.515046119689941
    5. '()' → logprob: -11.765046119689941
    6. ' (' → logprob: -13.015046119689941
    7. '=input' → logprob: -13.265046119689941
    8. '('' → logprob: -13.390046119689941
    9. '(
' → logprob: -13.765046119689941
    10. '("' → logprob: -14.765046119689941

Token 189: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005548559129238129
    2. '()' → logprob: -5.255548477172852
    3. ')' → logprob: -8.755548477172852
    4. '().' → logprob: -8.880548477172852
    5. '())
' → logprob: -11.755548477172852
    6. ' ())' → logprob: -11.755548477172852
    7. '(' → logprob: -13.630548477172852
    8. '())

' → logprob: -14.880548477172852
    9. '()
' → logprob: -15.505548477172852
    10. '();)' → logprob: -15.630548477172852

Token 190: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02240011654794216
    2. 'A' → logprob: -4.64739990234375
    3. 'values' → logprob: -5.02239990234375
    4. ' a' → logprob: -6.39739990234375
    5. 'data' → logprob: -6.64739990234375
    6. 'arr' → logprob: -6.77239990234375
    7. 'Q' → logprob: -7.77239990234375
    8. '
' → logprob: -7.89739990234375
    9. 'positions' → logprob: -8.27239990234375
    10. 'ai' → logprob: -8.89739990234375

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11467991769313812
    2. '=' → logprob: -2.2396798133850098
    3. '_' → logprob: -6.86467981338501
    4. 's' → logprob: -8.114680290222168
    5. ')' → logprob: -8.489680290222168
    6. '[]' → logprob: -9.114680290222168
    7. '[' → logprob: -9.739680290222168
    8. '_list' → logprob: -10.614680290222168
    9. ' ' → logprob: -10.864680290222168
    10. ',' → logprob: -11.364680290222168

Token 192: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03804550692439079
    2. ' list' → logprob: -3.2880454063415527
    3. '[' → logprob: -13.038045883178711
    4. '[list' → logprob: -13.288045883178711
    5. ' [' → logprob: -15.663045883178711
    6. '[]' → logprob: -18.53804588317871
    7. 'List' → logprob: -19.03804588317871
    8. '(list' → logprob: -19.41304588317871
    9. '	list' → logprob: -19.41304588317871
    10. '=list' → logprob: -19.66304588317871

Token 193: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00034356804098933935
    2. '(' → logprob: -8.000343322753906
    3. '(int' → logprob: -12.375343322753906
    4. 'map' → logprob: -13.000343322753906
    5. '()' → logprob: -14.000343322753906
    6. '_map' → logprob: -15.000343322753906
    7. ' map' → logprob: -15.375343322753906
    8. '(ma' → logprob: -16.625343322753906
    9. '	map' → logprob: -16.875343322753906
    10. '(list' → logprob: -17.375343322753906

Token 194: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004330532974563539
    2. '(' → logprob: -7.875432968139648
    3. '(str' → logprob: -10.625432968139648
    4. 'int' → logprob: -11.000432968139648
    5. '=int' → logprob: -12.875432968139648
    6. '(input' → logprob: -13.250432968139648
    7. ' int' → logprob: -13.250432968139648
    8. ')' → logprob: -13.500432968139648
    9. '<int' → logprob: -13.750432968139648
    10. ',int' → logprob: -14.000432968139648

Token 195: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04795113950967789
    2. ',input' → logprob: -3.1729512214660645
    3. ',' → logprob: -5.7979512214660645
    4. '(' → logprob: -6.9229512214660645
    5. 'input' → logprob: -7.0479512214660645
    6. ' input' → logprob: -10.797950744628906
    7. '=input' → logprob: -11.547950744628906
    8. ' (' → logprob: -11.797950744628906
    9. ' ,' → logprob: -12.422950744628906
    10. '(
' → logprob: -12.672950744628906

Token 196: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002613358374219388
    2. ' input' → logprob: -8.250261306762695
    3. 'sys' → logprob: -17.625261306762695
    4. '(input' → logprob: -18.250261306762695
    5. ' ' → logprob: -19.750261306762695
    6. '	input' → logprob: -20.250261306762695
    7. ',input' → logprob: -20.250261306762695
    8. '<input' → logprob: -20.375261306762695
    9. '=input' → logprob: -20.500261306762695
    10. '
' → logprob: -20.750261306762695

Token 197: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.13388703338569e-06
    2. '()' → logprob: -11.625009536743164
    3. '()))' → logprob: -17.125009536743164
    4. ' ().' → logprob: -17.375009536743164
    5. '(' → logprob: -17.500009536743164
    6. '()
' → logprob: -18.250009536743164
    7. 'split' → logprob: -18.875009536743164
    8. '())' → logprob: -19.000009536743164
    9. '.split' → logprob: -19.000009536743164
    10. '.readline' → logprob: -19.375009536743164

Token 198: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.049115028232336044
    2. 'strip' → logprob: -3.049114942550659
    3. 'rstrip' → logprob: -7.549115180969238
    4. 'read' → logprob: -14.424115180969238
    5. ' split' → logprob: -15.424115180969238
    6. '(split' → logprob: -16.299114227294922
    7. ' strip' → logprob: -17.424114227294922
    8. 'spl' → logprob: -17.549114227294922
    9. '().' → logprob: -18.674114227294922
    10. 'decode' → logprob: -19.174114227294922

Token 199: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03694664314389229
    2. '()' → logprob: -3.6619465351104736
    3. '))' → logprob: -5.036946773529053
    4. '())' → logprob: -5.786946773529053
    5. '(' → logprob: -7.036946773529053
    6. ')' → logprob: -9.786946296691895
    7. '()));' → logprob: -10.161946296691895
    8. '()))
' → logprob: -11.161946296691895
    9. '())))' → logprob: -11.286946296691895
    10. '(),' → logprob: -11.911946296691895

Token 200: 'Q' (ID: 48)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -1.0205068588256836
    2. 'from' → logprob: -1.3955068588256836
    3. 'values' → logprob: -1.5205068588256836
    4. 'val' → logprob: -3.2705068588256836
    5. 'vals' → logprob: -3.2705068588256836
    6. 'value' → logprob: -3.3955068588256836
    7. 'positions' → logprob: -3.5205068588256836
    8. 'uni' → logprob: -4.645506858825684
    9. '#' → logprob: -4.895506858825684
    10. 'uniq' → logprob: -5.395506858825684

Token 201: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932404637336731
    2. ' =' → logprob: -0.6932404637336731
    3. '=int' → logprob: -9.31824016571045
    4. ' ' → logprob: -13.69324016571045
    5. '=input' → logprob: -13.81824016571045
    6. ')' → logprob: -14.06824016571045
    7. ',' → logprob: -15.56824016571045
    8. ' =
' → logprob: -15.69324016571045
    9. '  ' → logprob: -16.443241119384766
    10. '=
' → logprob: -16.568241119384766

Token 202: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38687121868133545
    2. ' int' → logprob: -1.1368712186813354
    3. '=int' → logprob: -16.261871337890625
    4. '(int' → logprob: -16.636871337890625
    5. '[int' → logprob: -18.136871337890625
    6. '<int' → logprob: -18.761871337890625
    7. ' ' → logprob: -20.386871337890625
    8. '	int' → logprob: -21.011871337890625
    9. ':int' → logprob: -21.261871337890625
    10. ',int' → logprob: -22.011871337890625

Token 203: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10085716098546982
    2. '(' → logprob: -2.3508572578430176
    3. '(int' → logprob: -7.600857257843018
    4. '()' → logprob: -8.97585678100586
    5. ' (' → logprob: -11.47585678100586
    6. '(
' → logprob: -11.60085678100586
    7. 'input' → logprob: -13.47585678100586
    8. '=input' → logprob: -13.97585678100586
    9. '(INPUT' → logprob: -15.22585678100586
    10. '()(' → logprob: -15.47585678100586

Token 204: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009938823990523815
    2. '()' → logprob: -4.759938716888428
    3. ')' → logprob: -6.634938716888428
    4. '())
' → logprob: -12.134939193725586
    5. '()
' → logprob: -12.884939193725586
    6. '();)' → logprob: -14.384939193725586
    7. ' ())' → logprob: -14.384939193725586
    8. '())

' → logprob: -15.259939193725586
    9. '(' → logprob: -15.634939193725586
    10. '()))' → logprob: -16.384939193725586

Token 205: '#' (ID: 2)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.7566726207733154
    2. 'from' → logprob: -1.2566726207733154
    3. 'unique' → logprob: -2.7566726207733154
    4. 'vals' → logprob: -3.0066726207733154
    5. 'value' → logprob: -3.2566726207733154
    6. 'val' → logprob: -3.2566726207733154
    7. 'positions' → logprob: -3.3816726207733154
    8. '#' → logprob: -4.3816728591918945
    9. 'uni' → logprob: -5.6316728591918945
    10. 'uniq' → logprob: -6.5066728591918945

Token 206: ' Construction' (ID: 31452)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9228214621543884
    2. 'values' → logprob: -1.6728215217590332
    3. 'vals' → logprob: -2.422821521759033
    4. 'val' → logprob: -2.547821521759033
    5. 'value' → logprob: -2.672821521759033
    6. 'positions' → logprob: -2.797821521759033
    7. 'unique' → logprob: -3.047821521759033
    8. 'pos' → logprob: -3.172821521759033
    9. '#' → logprob: -3.797821521759033
    10. 'uniq' → logprob: -6.047821521759033

Token 207: ' du' (ID: 1462)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.935728132724762
    2. 'from' → logprob: -0.935728132724762
    3. 'val' → logprob: -2.060728073120117
    4. 'values' → logprob: -3.685728073120117
    5. 'unique' → logprob: -3.935728073120117
    6. 'pos' → logprob: -4.310728073120117
    7. 'positions' → logprob: -4.310728073120117
    8. 'd' → logprob: -4.935728073120117
    9. 'vals' → logprob: -5.310728073120117
    10. '#' → logprob: -6.435728073120117

Token 208: ' diction' (ID: 155259)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.1272525787353516
    2. 'positions' → logprob: -1.1272525787353516
    3. 'val' → logprob: -1.7522525787353516
    4. 'value' → logprob: -2.5022525787353516
    5. 'from' → logprob: -3.3772525787353516
    6. 'd' → logprob: -3.6272525787353516
    7. 'dict' → logprob: -4.377252578735352
    8. 'values' → logprob: -5.127252578735352
    9. 'vals' → logprob: -5.377252578735352
    10. 'indices' → logprob: -5.502252578735352

Token 209: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -7.314625690924004e-05
    2. 'naires' → logprob: -10.000073432922363
    3. 'na' → logprob: -11.250073432922363
    4. 'n' → logprob: -11.500073432922363
    5. 'aire' → logprob: -12.375073432922363
    6. 'ary' → logprob: -15.875073432922363
    7. 'nale' → logprob: -16.750072479248047
    8. 'nar' → logprob: -17.250072479248047
    9. 'nable' → logprob: -17.625072479248047
    10. 'a' → logprob: -18.125072479248047

Token 210: ' valeur' (ID: 41664)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5811139345169067
    2. 'pos' → logprob: -1.4561139345169067
    3. 'val' → logprob: -2.206113815307617
    4. 'value' → logprob: -2.581113815307617
    5. 'values' → logprob: -4.831113815307617
    6. 'd' → logprob: -5.081113815307617
    7. 'from' → logprob: -5.331113815307617
    8. 'vals' → logprob: -7.456113815307617
    9. 'position' → logprob: -7.831113815307617
    10. 'occ' → logprob: -8.206113815307617

Token 211: ' ->' (ID: 2747)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.12745097279548645
    2. '_pos' → logprob: -2.627450942993164
    3. 'positions' → logprob: -4.002450942993164
    4. '_val' → logprob: -4.502450942993164
    5. 'pos' → logprob: -4.752450942993164
    6. ' =' → logprob: -6.002450942993164
    7. '_to' → logprob: -6.127450942993164
    8. 'val' → logprob: -6.752450942993164
    9. '_indices' → logprob: -6.877450942993164
    10. '_des' → logprob: -7.502450942993164

Token 212: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.011445540003478527
    2. 'indices' → logprob: -4.63644552230835
    3. ' positions' → logprob: -7.13644552230835
    4. '[]' → logprob: -7.63644552230835
    5. '[' → logprob: -8.386445999145508
    6. 'list' → logprob: -9.886445999145508
    7. 'indexes' → logprob: -9.886445999145508
    8. ' indices' → logprob: -10.261445999145508
    9. 'liste' → logprob: -10.886445999145508
    10. 'pos' → logprob: -11.761445999145508

Token 213: ' tri' (ID: 12665)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5425033569335938
    2. 'value' → logprob: -1.4175033569335938
    3. 'pos' → logprob: -2.1675033569335938
    4. 'val' → logprob: -2.9175033569335938
    5. 'values' → logprob: -5.667503356933594
    6. 'd' → logprob: -6.042503356933594
    7. 'position' → logprob: -7.417503356933594
    8. 'from' → logprob: -7.667503356933594
    9. 'vals' → logprob: -8.292503356933594
    10. ' positions' → logprob: -8.917503356933594

Token 214: 'ées' (ID: 5161)
  Prédit: 'nées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nées' → logprob: -0.6009104251861572
    2. 'ées' → logprob: -2.2259104251861572
    3. 'dict' → logprob: -2.4759104251861572
    4. '{}' → logprob: -2.7259104251861572
    5. 'es' → logprob: -3.4759104251861572
    6. 'pos' → logprob: -3.6009104251861572
    7. 'positions' → logprob: -3.6009104251861572
    8. '{' → logprob: -3.7259104251861572
    9. 'tes' → logprob: -4.350910186767578
    10. 'tees' → logprob: -4.600910186767578

Token 215: '
' (ID: 198)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5158370137214661
    2. 'pos' → logprob: -1.1408369541168213
    3. 'value' → logprob: -2.8908369541168213
    4. 'from' → logprob: -4.3908371925354
    5. 'val' → logprob: -4.5158371925354
    6. 'values' → logprob: -5.7658371925354
    7. 'position' → logprob: -7.6408371925354
    8. 'd' → logprob: -7.7658371925354
    9. 'vals' → logprob: -8.140836715698242
    10. ' positions' → logprob: -9.640836715698242

Token 216: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.45712214708328247
    2. 'positions' → logprob: -1.2071220874786377
    3. 'value' → logprob: -3.2071220874786377
    4. 'from' → logprob: -4.332122325897217
    5. 'val' → logprob: -4.457122325897217
    6. 'values' → logprob: -6.332122325897217
    7. 'vals' → logprob: -7.707122325897217
    8. 'd' → logprob: -8.582121849060059
    9. 'position' → logprob: -8.957121849060059
    10. 'occ' → logprob: -10.457121849060059

Token 217: '_dict' (ID: 11295)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31450003385543823
    2. ' =' → logprob: -1.314500093460083
    3. 'itions' → logprob: -6.939499855041504
    4. '={}' → logprob: -9.814499855041504
    5. 'ition' → logprob: -10.064499855041504
    6. '={}
' → logprob: -10.189499855041504
    7. '_dict' → logprob: -10.439499855041504
    8. '={' → logprob: -10.564499855041504
    9. 's' → logprob: -11.064499855041504
    10. '={
' → logprob: -11.189499855041504

Token 218: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004104523453861475
    2. ' =' → logprob: -5.5041046142578125
    3. '={}' → logprob: -10.629104614257812
    4. '={' → logprob: -13.379104614257812
    5. '={}
' → logprob: -16.129104614257812
    6. ' ={' → logprob: -16.379104614257812
    7. '＝' → logprob: -16.754104614257812
    8. '{}' → logprob: -17.254104614257812
    9. '{' → logprob: -17.629104614257812
    10. '.setdefault' → logprob: -17.754104614257812

Token 219: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -4.127333340875339e-06
    2. 'dict' → logprob: -13.500003814697266
    3. '{}
' → logprob: -13.500003814697266
    4. ' {}' → logprob: -13.750003814697266
    5. '{}

' → logprob: -16.625003814697266
    6. '{' → logprob: -16.750003814697266
    7. '{})' → logprob: -17.875003814697266
    8. 'default' → logprob: -18.125003814697266
    9. '{}\' → logprob: -18.625003814697266
    10. '{},' → logprob: -19.125003814697266

Token 220: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.517272024415433e-05
    2. ' for' → logprob: -9.500075340270996
    3. '
' → logprob: -15.125075340270996
    4. 'from' → logprob: -16.87507438659668
    5. '	for' → logprob: -17.50007438659668
    6. '<|end|>' → logprob: -17.62507438659668
    7. '```' → logprob: -19.75007438659668
    8. 'For' → logprob: -19.87507438659668
    9. '=' → logprob: -20.50007438659668
    10. '{' → logprob: -21.00007438659668

Token 221: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1276499181985855
    2. ' i' → logprob: -2.127650022506714
    3. ' idx' → logprob: -7.627649784088135
    4. 'idx' → logprob: -8.377650260925293
    5. 'index' → logprob: -12.752650260925293
    6. 'v' → logprob: -14.752650260925293
    7. 'val' → logprob: -14.877650260925293
    8. ' index' → logprob: -15.252650260925293
    9. 'value' → logprob: -15.252650260925293
    10. ' ' → logprob: -15.627650260925293

Token 222: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1803530752658844
    2. 'in' → logprob: -1.805353045463562
    3. ' ' → logprob: -7.555353164672852
    4. ',' → logprob: -9.555353164672852
    5. ' ,' → logprob: -12.305353164672852
    6. '	in' → logprob: -12.930353164672852
    7. 'n' → logprob: -13.430353164672852
    8. '  ' → logprob: -13.805353164672852
    9. '```' → logprob: -14.805353164672852
    10. '_' → logprob: -14.805353164672852

Token 223: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.13758975267410278
    2. ' val' → logprob: -2.387589693069458
    3. 'v' → logprob: -3.387589693069458
    4. 'value' → logprob: -6.512589931488037
    5. 'x' → logprob: -7.262589931488037
    6. ' v' → logprob: -7.387589931488037
    7. ' value' → logprob: -10.512589454650879
    8. 'ai' → logprob: -10.512589454650879
    9. ' x' → logprob: -10.637589454650879
    10. 'num' → logprob: -11.387589454650879

Token 224: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22549064457416534
    2. 'in' → logprob: -1.600490689277649
    3. ' ' → logprob: -9.85049057006836
    4. ',' → logprob: -11.22549057006836
    5. '	in' → logprob: -12.72549057006836
    6. '  ' → logprob: -14.10049057006836
    7. 's' → logprob: -14.10049057006836
    8. '=' → logprob: -14.47549057006836
    9. 'not' → logprob: -14.47549057006836
    10. ')' → logprob: -14.60049057006836

Token 225: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.02324547804892063
    2. ' enumerate' → logprob: -3.7732455730438232
    3. 'en' → logprob: -17.148244857788086
    4. 'range' → logprob: -18.398244857788086
    5. '.enumer' → logprob: -18.523244857788086
    6. 'enum' → logprob: -18.898244857788086
    7. '```' → logprob: -19.523244857788086
    8. '(en' → logprob: -20.148244857788086
    9. 'enqueue' → logprob: -20.398244857788086
    10. '
' → logprob: -20.773244857788086

Token 226: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00013417120499070734
    2. 'a' → logprob: -9.125134468078613
    3. '(en' → logprob: -11.500134468078613
    4. ' a' → logprob: -11.875134468078613
    5. 'enumer' → logprob: -12.625134468078613
    6. '(' → logprob: -12.875134468078613
    7. ' (' → logprob: -14.250134468078613
    8. '(range' → logprob: -15.125134468078613
    9. ')a' → logprob: -15.750134468078613
    10. ' enumerate' → logprob: -15.750134468078613

Token 227: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3134096562862396
    2. '):' → logprob: -1.313409686088562
    3. '):
' → logprob: -9.188409805297852
    4. ' ):
' → logprob: -10.938409805297852
    5. ' ):' → logprob: -11.063409805297852
    6. ':' → logprob: -12.063409805297852
    7. ')' → logprob: -12.688409805297852
    8. ',' → logprob: -13.563409805297852
    9. ':
' → logprob: -14.188409805297852
    10. '):

' → logprob: -14.438409805297852

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43447625637054443
    2. ' if' → logprob: -1.0594762563705444
    3. '	if' → logprob: -6.184476375579834
    4. 'if' → logprob: -6.684476375579834
    5. ' pos' → logprob: -7.434476375579834
    6. ' ' → logprob: -7.809476375579834
    7. ' 
' → logprob: -8.184475898742676
    8. '    
' → logprob: -8.309475898742676
    9. '	pos' → logprob: -8.934475898742676
    10. '
' → logprob: -9.059475898742676

Token 229: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3336576223373413
    2. 'pos' → logprob: -1.8336576223373413
    3. ' if' → logprob: -2.458657741546631
    4. '   ' → logprob: -3.333657741546631
    5. ' pos' → logprob: -5.958657741546631
    6. 'positions' → logprob: -10.333657264709473
    7. '	pos' → logprob: -11.458657264709473
    8. '	if' → logprob: -11.458657264709473
    9. ' ' → logprob: -11.833657264709473
    10. ' positions' → logprob: -12.083657264709473

Token 230: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.3868772089481354
    2. 'val' → logprob: -1.136877179145813
    3. '	val' → logprob: -12.261877059936523
    4. ' not' → logprob: -14.511877059936523
    5. '   ' → logprob: -15.011877059936523
    6. 'not' → logprob: -15.261877059936523
    7. '(val' → logprob: -15.261877059936523
    8. '[val' → logprob: -16.761877059936523
    9. ' ' → logprob: -17.011877059936523
    10. '_val' → logprob: -17.136877059936523

Token 231: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.28121882677078247
    2. 'not' → logprob: -1.4062187671661377
    3. 'in' → logprob: -10.406218528747559
    4. ' in' → logprob: -10.406218528747559
    5. ')' → logprob: -12.781218528747559
    6. ']' → logprob: -13.406218528747559
    7. '	not' → logprob: -13.781218528747559
    8. ' no' → logprob: -13.906218528747559
    9. 'no' → logprob: -14.406218528747559
    10. 'n' → logprob: -15.156218528747559

Token 232: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10097431391477585
    2. 'in' → logprob: -2.3509743213653564
    3. 'pos' → logprob: -7.225974082946777
    4. ' pos' → logprob: -10.225974082946777
    5. '   ' → logprob: -14.100974082946777
    6. '[pos' → logprob: -14.475974082946777
    7. 'to' → logprob: -14.975974082946777
    8. ' в' → logprob: -15.225974082946777
    9. ' ' → logprob: -15.350974082946777
    10. ',pos' → logprob: -15.600974082946777

Token 233: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0009114635176956654
    2. ' pos' → logprob: -7.000911235809326
    3. '	pos' → logprob: -19.250911712646484
    4. '_pos' → logprob: -19.750911712646484
    5. '[pos' → logprob: -21.875911712646484
    6. '(pos' → logprob: -22.125911712646484
    7. 'Pos' → logprob: -22.250911712646484
    8. '.pos' → logprob: -22.875911712646484
    9. ',pos' → logprob: -23.125911712646484
    10. ' ' → logprob: -23.375911712646484

Token 234: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -5.512236498361744e-07
    2. 'dict' → logprob: -14.625000953674316
    3. '_DICT' → logprob: -17.625
    4. '_pos' → logprob: -17.875
    5. '_' → logprob: -18.5
    6. '_dic' → logprob: -18.75
    7. 'ict' → logprob: -19.75
    8. '
' → logprob: -19.75
    9. 'edict' → logprob: -20.875
    10. 'Dict' → logprob: -21.125

Token 235: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11285340040922165
    2. ':
' → logprob: -2.2378532886505127
    3. ']:' → logprob: -11.237853050231934
    4. ':
' → logprob: -12.487853050231934
    5. ']' → logprob: -12.862853050231934
    6. ']:
' → logprob: -12.862853050231934
    7. '=' → logprob: -13.112853050231934
    8. ':

' → logprob: -13.237853050231934
    9. '   ' → logprob: -13.612853050231934
    10. '):' → logprob: -13.737853050231934

Token 236: '       ' (ID: 309)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.9594836235046387
    2. 'pos' → logprob: -1.0844836235046387
    3. '       ' → logprob: -1.3344836235046387
    4. '   ' → logprob: -4.334483623504639
    5. '	pos' → logprob: -6.084483623504639
    6. '[pos' → logprob: -9.584484100341797
    7. ',pos' → logprob: -11.209484100341797
    8. '	   ' → logprob: -11.584484100341797
    9. '_pos' → logprob: -11.709484100341797
    10. '    ' → logprob: -11.959484100341797

Token 237: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.02324839122593403
    2. ' pos' → logprob: -3.7732484340667725
    3. '	pos' → logprob: -12.898248672485352
    4. '   ' → logprob: -15.648248672485352
    5. '[pos' → logprob: -16.02324867248535
    6. '_pos' → logprob: -17.02324867248535
    7. '
' → logprob: -17.27324867248535
    8. ',pos' → logprob: -18.14824867248535
    9. '.pos' → logprob: -18.64824867248535
    10. 'positions' → logprob: -19.27324867248535

Token 238: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -2.696889623621246e-06
    2. 'dict' → logprob: -13.12500286102295
    3. '_DICT' → logprob: -15.00000286102295
    4. 'Dict' → logprob: -16.500001907348633
    5. 'edict' → logprob: -16.500001907348633
    6. '```' → logprob: -16.875001907348633
    7. '       ' → logprob: -18.125001907348633
    8. 'o' → logprob: -18.250001907348633
    9. '   ' → logprob: -18.375001907348633
    10. '_val' → logprob: -18.750001907348633

Token 239: '[val' (ID: 162482)
  Prédit: '[val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[val' → logprob: -9.491498531133402e-06
    2. '[pos' → logprob: -11.625009536743164
    3. '=' → logprob: -15.250009536743164
    4. '[' → logprob: -16.125009536743164
    5. ' =' → logprob: -16.500009536743164
    6. 'val' → logprob: -16.750009536743164
    7. ' [' → logprob: -17.500009536743164
    8. '   ' → logprob: -17.625009536743164
    9. '[i' → logprob: -18.625009536743164
    10. '[key' → logprob: -18.750009536743164

Token 240: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0033665162045508623
    2. ']=' → logprob: -6.128366470336914
    3. '=' → logprob: -6.878366470336914
    4. ' =' → logprob: -8.878366470336914
    5. '=[]' → logprob: -11.628366470336914
    6. ' ]' → logprob: -13.628366470336914
    7. ')' → logprob: -15.128366470336914
    8. '']' → logprob: -15.378366470336914
    9. '   ' → logprob: -15.753366470336914
    10. '"]' → logprob: -16.003366470336914

Token 241: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0012007086770609021
    2. ' =' → logprob: -6.7512006759643555
    3. '=[]' → logprob: -10.751200675964355
    4. ']' → logprob: -12.251200675964355
    5. ']=' → logprob: -12.501200675964355
    6. '=[' → logprob: -14.876200675964355
    7. '=[]
' → logprob: -15.501200675964355
    8. '=
' → logprob: -17.501201629638672
    9. '=

' → logprob: -17.876201629638672
    10. '[' → logprob: -18.376201629638672

Token 242: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00027706706896424294
    2. '[]
' → logprob: -8.750277519226074
    3. ' []' → logprob: -9.250277519226074
    4. '[' → logprob: -10.750277519226074
    5. '[]}' → logprob: -14.250277519226074
    6. '[]

' → logprob: -14.875277519226074
    7. '[]>' → logprob: -16.875276565551758
    8. ' []
' → logprob: -18.000276565551758
    9. '[]"' → logprob: -18.250276565551758
    10. '[i' → logprob: -18.750276565551758

Token 243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.278864359250292e-05
    2. 'pos' → logprob: -9.625072479248047
    3. ' pos' → logprob: -12.375072479248047
    4. '  ' → logprob: -13.750072479248047
    5. '    
' → logprob: -14.375072479248047
    6. '	pos' → logprob: -14.750072479248047
    7. '
' → logprob: -16.000072479248047
    8. ' ' → logprob: -16.500072479248047
    9. '       ' → logprob: -16.625072479248047
    10. '_pos' → logprob: -17.125072479248047

Token 244: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.008795973844826221
    2. ' pos' → logprob: -4.758795738220215
    3. '   ' → logprob: -8.633795738220215
    4. '	pos' → logprob: -12.758795738220215
    5. '_pos' → logprob: -15.883795738220215
    6. '       ' → logprob: -16.00879669189453
    7. '    
' → logprob: -16.25879669189453
    8. '[pos' → logprob: -16.88379669189453
    9. '
' → logprob: -17.25879669189453
    10. '.pos' → logprob: -17.63379669189453

Token 245: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -6.153795766294934e-06
    2. 'dict' → logprob: -12.250005722045898
    3. '_DICT' → logprob: -14.000005722045898
    4. '   ' → logprob: -15.500005722045898
    5. 'Dict' → logprob: -16.1250057220459
    6. '```' → logprob: -16.3750057220459
    7. '       ' → logprob: -17.8750057220459
    8. '_' → logprob: -18.6250057220459
    9. ' ' → logprob: -18.8750057220459
    10. 'edict' → logprob: -19.2500057220459

Token 246: '[val' (ID: 162482)
  Prédit: '[val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[val' → logprob: 0.0
    2. 'val' → logprob: -16.875
    3. '[' → logprob: -19.25
    4. ' [' → logprob: -20.5
    5. '	val' → logprob: -20.5
    6. '[pos' → logprob: -21.0
    7. '[var' → logprob: -21.5
    8. '[col' → logprob: -22.375
    9. '   ' → logprob: -22.5
    10. '
' → logprob: -22.5

Token 247: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0630306601524353
    2. '.append' → logprob: -2.81303071975708
    3. ').' → logprob: -6.93803071975708
    4. ' ].' → logprob: -10.188030242919922
    5. '.' → logprob: -10.438030242919922
    6. 'append' → logprob: -11.438030242919922
    7. '.app' → logprob: -12.563030242919922
    8. '   ' → logprob: -12.563030242919922
    9. '.Append' → logprob: -13.813030242919922
    10. ']' → logprob: -13.813030242919922

Token 248: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. ' append' → logprob: -15.75
    3. 'app' → logprob: -16.5
    4. '.append' → logprob: -16.625
    5. 'appen' → logprob: -19.625
    6. '_append' → logprob: -20.0
    7. '	append' → logprob: -20.5
    8. 'Append' → logprob: -21.75
    9. 'add' → logprob: -22.875
    10. 'insert' → logprob: -23.0

Token 249: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0005543439765460789
    2. 'i' → logprob: -7.50055456161499
    3. '(' → logprob: -13.625554084777832
    4. ' i' → logprob: -15.750554084777832
    5. ' (' → logprob: -17.37555503845215
    6. '(
' → logprob: -19.87555503845215
    7. '	i' → logprob: -20.75055503845215
    8. ')i' → logprob: -20.75055503845215
    9. ',i' → logprob: -21.87555503845215
    10. '[i' → logprob: -22.25055503845215

Token 250: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.721228368813172e-05
    2. ' )' → logprob: -9.500086784362793
    3. '+' → logprob: -11.375086784362793
    4. ')
' → logprob: -14.375086784362793
    5. '+)' → logprob: -15.875086784362793
    6. '))' → logprob: -17.50008773803711
    7. ' +' → logprob: -17.87508773803711
    8. '   ' → logprob: -18.12508773803711
    9. ' ' → logprob: -18.12508773803711
    10. '}' → logprob: -18.50008773803711

Token 251: '#' (ID: 2)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.44848132133483887
    2. 'sorted' → logprob: -1.4484813213348389
    3. 'vals' → logprob: -2.698481321334839
    4. 'values' → logprob: -3.323481321334839
    5. 'uniq' → logprob: -4.573481559753418
    6. 'val' → logprob: -4.698481559753418
    7. 'uni' → logprob: -6.073481559753418
    8. '#' → logprob: -8.198481559753418
    9. 'keys' → logprob: -8.323481559753418
    10. '
' → logprob: -8.948481559753418

Token 252: ' Liste' (ID: 61030)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.5529927611351013
    2. 'sorted' → logprob: -1.427992820739746
    3. 'vals' → logprob: -2.552992820739746
    4. 'values' → logprob: -2.927992820739746
    5. 'uniq' → logprob: -3.427992820739746
    6. 'uni' → logprob: -4.427992820739746
    7. 'val' → logprob: -4.927992820739746
    8. '#' → logprob: -7.052992820739746
    9. 'keys' → logprob: -7.927992820739746
    10. 'import' → logprob: -9.052992820739746

Token 253: ' tri' (ID: 12665)
  Prédit: '_unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_unique' → logprob: -0.91306072473526
    2. 'val' → logprob: -1.4130606651306152
    3. 'unique' → logprob: -1.6630606651306152
    4. '_val' → logprob: -2.1630606651306152
    5. 'des' → logprob: -4.038060665130615
    6. '_des' → logprob: -5.038060665130615
    7. '_vals' → logprob: -5.288060665130615
    8. 'vals' → logprob: -5.538060665130615
    9. '_' → logprob: -5.663060665130615
    10. 'uni' → logprob: -5.788060665130615

Token 254: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.6448397040367126
    2. 'e' → logprob: -1.6448397636413574
    3. 'unique' → logprob: -2.1448397636413574
    4. 'uniq' → logprob: -3.5198397636413574
    5. 'val' → logprob: -3.7698397636413574
    6. 'ee' → logprob: -4.019839763641357
    7. 'quée' → logprob: -4.019839763641357
    8. '_unique' → logprob: -4.269839763641357
    9. 'es' → logprob: -4.269839763641357
    10. '_val' → logprob: -4.769839763641357

Token 255: ' des' (ID: 731)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.8526203036308289
    2. 'unique' → logprob: -1.2276203632354736
    3. 'vals' → logprob: -1.8526203632354736
    4. 'des' → logprob: -2.6026203632354736
    5. 'values' → logprob: -4.2276201248168945
    6. 'sorted' → logprob: -4.2276201248168945
    7. '_unique' → logprob: -5.3526201248168945
    8. ' des' → logprob: -5.7276201248168945
    9. ' unique' → logprob: -6.1026201248168945
    10. 'uniq' → logprob: -6.2276201248168945

Token 256: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0066948845051229
    2. 'sorted' → logprob: -6.131694793701172
    3. ' valeurs' → logprob: -6.131694793701172
    4. 'vals' → logprob: -6.756694793701172
    5. 'values' → logprob: -7.756694793701172
    6. ' val' → logprob: -8.381694793701172
    7. 'cl' → logprob: -8.506694793701172
    8. 'unique' → logprob: -9.006694793701172
    9. ' sorted' → logprob: -9.756694793701172
    10. ' unique' → logprob: -10.131694793701172

Token 257: ' uniques' (ID: 156848)
  Prédit: 'uni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uni' → logprob: -0.2229325771331787
    2. 'unique' → logprob: -1.7229325771331787
    3. 'uniq' → logprob: -4.597932815551758
    4. ' uniques' → logprob: -5.597932815551758
    5. '_uni' → logprob: -6.222932815551758
    6. '_unique' → logprob: -6.472932815551758
    7. ' unique' → logprob: -6.597932815551758
    8. 'val' → logprob: -6.847932815551758
    9. 'sorted' → logprob: -7.472932815551758
    10. 'values' → logprob: -8.222932815551758

Token 258: '
' (ID: 198)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.7826866507530212
    2. 'vals' → logprob: -1.407686710357666
    3. 'sorted' → logprob: -1.907686710357666
    4. 'uniq' → logprob: -2.657686710357666
    5. 'values' → logprob: -3.032686710357666
    6. 'uni' → logprob: -3.657686710357666
    7. 'val' → logprob: -5.657686710357666
    8. 'keys' → logprob: -6.407686710357666
    9. ' unique' → logprob: -8.907686233520508
    10. 'v' → logprob: -9.782686233520508

Token 259: 'unique' (ID: 22365)
  Prédit: 'unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.1300046443939209
    2. 'uniq' → logprob: -3.130004644393921
    3. 'sorted' → logprob: -3.380004644393921
    4. 'vals' → logprob: -3.380004644393921
    5. 'values' → logprob: -5.0050048828125
    6. 'uni' → logprob: -5.7550048828125
    7. 'val' → logprob: -9.3800048828125
    8. 'keys' → logprob: -9.6300048828125
    9. ' unique' → logprob: -10.0050048828125
    10. '```' → logprob: -12.1300048828125

Token 260: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.063755564391613
    2. '_values' → logprob: -2.813755512237549
    3. ' =' → logprob: -6.938755512237549
    4. '_val' → logprob: -7.563755512237549
    5. 's' → logprob: -9.563755989074707
    6. '_a' → logprob: -9.688755989074707
    7. 'vals' → logprob: -9.813755989074707
    8. '=' → logprob: -10.188755989074707
    9. '_sorted' → logprob: -10.688755989074707
    10. '_' → logprob: -11.188755989074707

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759415626525879
    2. '=' → logprob: -0.8259415626525879
    3. 'sorted' → logprob: -13.57594108581543
    4. ' ' → logprob: -15.07594108581543
    5. ',' → logprob: -15.82594108581543
    6. ' sorted' → logprob: -15.95094108581543
    7. '_sorted' → logprob: -16.20094108581543
    8. 's' → logprob: -16.70094108581543
    9. ')' → logprob: -17.07594108581543
    10. '＝' → logprob: -17.20094108581543

Token 262: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.06196768581867218
    2. ' sorted' → logprob: -2.811967611312866
    3. '(sorted' → logprob: -17.311967849731445
    4. ' ' → logprob: -18.186967849731445
    5. '.sorted' → logprob: -18.311967849731445
    6. '   ' → logprob: -19.061967849731445
    7. 'list' → logprob: -20.436967849731445
    8. 'sort' → logprob: -20.436967849731445
    9. 'Sorted' → logprob: -20.561967849731445
    10. '  ' → logprob: -20.686967849731445

Token 263: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0024856459349393845
    2. 'pos' → logprob: -6.252485752105713
    3. '(set' → logprob: -7.502485752105713
    4. '(list' → logprob: -12.752485275268555
    5. 'set' → logprob: -13.752485275268555
    6. '(' → logprob: -14.127485275268555
    7. '(unique' → logprob: -16.002485275268555
    8. ' pos' → logprob: -16.252485275268555
    9. '(val' → logprob: -16.377485275268555
    10. '[pos' → logprob: -16.627485275268555

Token 264: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.06282568722963333
    2. 'pos' → logprob: -3.4378256797790527
    3. 'dict' → logprob: -4.687825679779053
    4. 'ict' → logprob: -5.062825679779053
    5. '(pos' → logprob: -5.687825679779053
    6. 'val' → logprob: -5.812825679779053
    7. 'unique' → logprob: -6.187825679779053
    8. 'vals' → logprob: -6.812825679779053
    9. ')' → logprob: -7.312825679779053
    10. 'int' → logprob: -7.812825679779053

Token 265: '.keys' (ID: 18392)
  Prédit: '.keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.keys' → logprob: -0.02327529713511467
    2. ')' → logprob: -3.773275375366211
    3. 'keys' → logprob: -10.648275375366211
    4. '.items' → logprob: -12.898275375366211
    5. '.' → logprob: -13.023275375366211
    6. '.values' → logprob: -14.148275375366211
    7. '	keys' → logprob: -15.273275375366211
    8. ' keys' → logprob: -15.773275375366211
    9. '.Keys' → logprob: -16.52327537536621
    10. ' )' → logprob: -16.64827537536621

Token 266: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0010482928482815623
    2. ')' → logprob: -7.5010480880737305
    3. '()' → logprob: -7.6260480880737305
    4. '())
' → logprob: -12.37604808807373
    5. ' ())' → logprob: -13.12604808807373
    6. '(' → logprob: -15.00104808807373
    7. '();)' → logprob: -15.12604808807373
    8. ' )' → logprob: -15.75104808807373
    9. '(),' → logprob: -15.87604808807373
    10. '()
' → logprob: -15.87604808807373

Token 267: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006668062414973974
    2. 'output' → logprob: -7.500666618347168
    3. 'results' → logprob: -9.375666618347168
    4. 'def' → logprob: -11.625666618347168
    5. 'result' → logprob: -11.750666618347168
    6. 'outputs' → logprob: -11.875666618347168
    7. 'out' → logprob: -13.250666618347168
    8. 'res' → logprob: -13.500666618347168
    9. ' for' → logprob: -14.375666618347168
    10. 'import' → logprob: -14.500666618347168

Token 268: ' check' (ID: 2371)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.18070058524608612
    2. ' query' → logprob: -2.8057005405426025
    3. 'closest' → logprob: -3.6807005405426025
    4. 'query' → logprob: -3.8057005405426025
    5. ' closest' → logprob: -3.9307005405426025
    6. 'find' → logprob: -4.055700778961182
    7. ' minimal' → logprob: -5.180700778961182
    8. ' get' → logprob: -5.805700778961182
    9. 'search' → logprob: -6.805700778961182
    10. 'def' → logprob: -6.805700778961182

Token 269: '_in' (ID: 2267)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7866625785827637
    2. '(val' → logprob: -1.0366625785827637
    3. '(value' → logprob: -2.2866625785827637
    4. '_val' → logprob: -3.5366625785827637
    5. '_range' → logprob: -4.161662578582764
    6. '(pos' → logprob: -4.286662578582764
    7. '_value' → logprob: -5.036662578582764
    8. '_pos' → logprob: -5.411662578582764
    9. '_candidate' → logprob: -5.536662578582764
    10. '_distance' → logprob: -5.911662578582764

Token 270: '_range' (ID: 22022)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06289543211460114
    2. '_range' → logprob: -3.4378955364227295
    3. 'dex' → logprob: -3.6878955364227295
    4. 'ter' → logprob: -6.06289529800415
    5. 'r' → logprob: -7.06289529800415
    6. 't' → logprob: -9.062895774841309
    7. 'interval' → logprob: -9.562895774841309
    8. '_interval' → logprob: -9.562895774841309
    9. '```' → logprob: -9.687895774841309
    10. 'val' → logprob: -10.312895774841309

Token 271: '(arr' (ID: 19646)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.007166897412389517
    2. '(value' → logprob: -5.757166862487793
    3. '(' → logprob: -5.882166862487793
    4. '(pos' → logprob: -7.632166862487793
    5. '(l' → logprob: -7.757166862487793
    6. '(v' → logprob: -9.757166862487793
    7. ' (' → logprob: -10.382166862487793
    8. '(vals' → logprob: -10.507166862487793
    9. '(a' → logprob: -10.632166862487793
    10. '(D' → logprob: -10.757166862487793

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014342782087624073
    2. ',val' → logprob: -6.626434326171875
    3. ' ,' → logprob: -9.251434326171875
    4. ',pos' → logprob: -12.001434326171875
    5. ',value' → logprob: -13.001434326171875
    6. ',l' → logprob: -14.251434326171875
    7. ',left' → logprob: -14.501434326171875
    8. ',v' → logprob: -15.001434326171875
    9. ',index' → logprob: -15.251434326171875
    10. ',array' → logprob: -15.251434326171875

Token 273: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.32403016090393066
    2. 'left' → logprob: -1.3240301609039307
    3. ' left' → logprob: -5.199029922485352
    4. 'low' → logprob: -6.074029922485352
    5. ' l' → logprob: -6.574029922485352
    6. 'x' → logprob: -6.949029922485352
    7. 'L' → logprob: -8.199029922485352
    8. 'target' → logprob: -9.574029922485352
    9. 'start' → logprob: -9.699029922485352
    10. 'lo' → logprob: -9.949029922485352

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010556964843999594
    2. ' ,' → logprob: -9.875105857849121
    3. ',r' → logprob: -10.750105857849121
    4. ',b' → logprob: -11.125105857849121
    5. ',int' → logprob: -13.375105857849121
    6. ',u' → logprob: -13.375105857849121
    7. ',right' → logprob: -13.500105857849121
    8. ',
' → logprob: -13.500105857849121
    9. ',pos' → logprob: -13.500105857849121
    10. ',val' → logprob: -13.500105857849121

Token 275: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0019286326132714748
    2. ' r' → logprob: -6.251928806304932
    3. 'u' → logprob: -18.501928329467773
    4. '   ' → logprob: -18.626928329467773
    5. 'arr' → logprob: -18.876928329467773
    6. '	r' → logprob: -18.876928329467773
    7. '0' → logprob: -20.376928329467773
    8. '```' → logprob: -20.876928329467773
    9. 'rans' → logprob: -21.126928329467773
    10. ' ' → logprob: -21.251928329467773

Token 276: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5439320206642151
    2. '):' → logprob: -0.9189320206642151
    3. '):
' → logprob: -3.9189319610595703
    4. ')' → logprob: -8.04393196105957
    5. ' ,' → logprob: -8.66893196105957
    6. '   ' → logprob: -9.41893196105957
    7. '):
' → logprob: -9.54393196105957
    8. ' ):' → logprob: -9.79393196105957
    9. '):

' → logprob: -11.79393196105957
    10. ' ' → logprob: -12.41893196105957

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013131031300872564
    2. '    
' → logprob: -10.250131607055664
    3. '
' → logprob: -10.750131607055664
    4. '   ' → logprob: -10.875131607055664
    5. '	pos' → logprob: -11.375131607055664
    6. '	b' → logprob: -11.750131607055664
    7. '	return' → logprob: -12.000131607055664
    8. '	idx' → logprob: -12.125131607055664
    9. '    ' → logprob: -12.250131607055664
    10. '\t' → logprob: -13.000131607055664

Token 278: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8046189546585083
    2. ' idx' → logprob: -1.3046189546585083
    3. 'idx' → logprob: -1.4296189546585083
    4. ' left' → logprob: -3.9296188354492188
    5. 'left' → logprob: -4.929618835449219
    6. 'pos' → logprob: -5.804618835449219
    7. ' lo' → logprob: -6.054618835449219
    8. ' ind' → logprob: -6.179618835449219
    9. ' pos' → logprob: -6.429618835449219
    10. 'index' → logprob: -6.429618835449219

Token 279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2686714828014374
    2. 'bis' → logprob: -2.3936715126037598
    3. 'left' → logprob: -2.7686715126037598
    4. 'idx' → logprob: -3.1436715126037598
    5. 'pos' → logprob: -4.01867151260376
    6. 'import' → logprob: -4.39367151260376
    7. 'l' → logprob: -5.51867151260376
    8. 'lo' → logprob: -6.26867151260376
    9. 'index' → logprob: -7.26867151260376
    10. 'i' → logprob: -7.89367151260376

Token 280: ' Vér' (ID: 159169)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.0674257278442383
    2. 'idx' → logprob: -1.0674257278442383
    3. 'left' → logprob: -2.3174257278442383
    4. '   ' → logprob: -2.8174257278442383
    5. 'bis' → logprob: -3.1924257278442383
    6. 'return' → logprob: -3.8174257278442383
    7. 'index' → logprob: -3.9424257278442383
    8. 'l' → logprob: -4.192425727844238
    9. '
' → logprob: -4.317425727844238
    10. '#' → logprob: -4.317425727844238

Token 281: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.015418751165270805
    2. 'if' → logprob: -4.515418529510498
    3. '   ' → logprob: -5.515418529510498
    4. 'f' → logprob: -8.515419006347656
    5. 'def' → logprob: -10.265419006347656
    6. 'ifies' → logprob: -11.265419006347656
    7. 'ifiez' → logprob: -11.390419006347656
    8. 'rif' → logprob: -11.515419006347656
    9. 'ifier' → logprob: -11.515419006347656
    10. 'ifi' → logprob: -11.890419006347656

Token 282: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9248030185699463
    2. ' si' → logprob: -1.0498030185699463
    3. 'bis' → logprob: -2.4248030185699463
    4. '   ' → logprob: -3.0498030185699463
    5. ' la' → logprob: -3.1748030185699463
    6. 'si' → logprob: -3.7998030185699463
    7. ' bis' → logprob: -4.049802780151367
    8. 'if' → logprob: -4.049802780151367
    9. 'pos' → logprob: -5.299802780151367
    10. ' ' → logprob: -6.299802780151367

Token 283: ' un' (ID: 537)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.5831843614578247
    2. ' bis' → logprob: -0.8331843614578247
    3. 'len' → logprob: -5.333184242248535
    4. ' len' → logprob: -7.458184242248535
    5. ' there' → logprob: -7.833184242248535
    6. ' il' → logprob: -8.083184242248535
    7. '   ' → logprob: -8.458184242248535
    8. ' la' → logprob: -8.708184242248535
    9. 'l' → logprob: -8.833184242248535
    10. '
' → logprob: -9.208184242248535

Token 284: ' élément' (ID: 99627)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5129954218864441
    2. 'index' → logprob: -1.5129954814910889
    3. 'indice' → logprob: -2.387995481491089
    4. ' idx' → logprob: -3.262995481491089
    5. 'ind' → logprob: -3.887995481491089
    6. ' index' → logprob: -4.38799524307251
    7. 'bis' → logprob: -5.63799524307251
    8. ' indice' → logprob: -5.76299524307251
    9. 'élé' → logprob: -6.01299524307251
    10. 'pos' → logprob: -6.01299524307251

Token 285: ' de' (ID: 334)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -1.0241472721099854
    2. '>=' → logprob: -2.1491472721099854
    3. ' existe' → logprob: -2.1491472721099854
    4. 'exists' → logprob: -2.2741472721099854
    5. ' est' → logprob: -3.0241472721099854
    6. 'prés' → logprob: -3.0241472721099854
    7. 'dans' → logprob: -3.6491472721099854
    8. ' exists' → logprob: -3.7741472721099854
    9. 'est' → logprob: -3.8991472721099854
    10. ' présent' → logprob: -4.149147033691406

Token 286: ' la' (ID: 557)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0003931384126190096
    2. ' arr' → logprob: -7.875392913818359
    3. 'l' → logprob: -11.87539291381836
    4. '	arr' → logprob: -12.75039291381836
    5. '(arr' → logprob: -13.75039291381836
    6. '[arr' → logprob: -13.75039291381836
    7. 'pos' → logprob: -15.50039291381836
    8. '
' → logprob: -16.00039291381836
    9. '$arr' → logprob: -16.12539291381836
    10. '<arr' → logprob: -16.25039291381836

Token 287: ' liste' (ID: 31719)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.03187714144587517
    2. 'liste' → logprob: -4.406877040863037
    3. 'list' → logprob: -4.531877040863037
    4. 'array' → logprob: -4.906877040863037
    5. 'pos' → logprob: -8.031877517700195
    6. '
' → logprob: -8.281877517700195
    7. ' arr' → logprob: -8.906877517700195
    8. ' liste' → logprob: -9.156877517700195
    9. '```' → logprob: -10.656877517700195
    10. 'lista' → logprob: -10.656877517700195

Token 288: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.10296818614006042
    2. ' est' → logprob: -3.102968215942383
    3. ' arr' → logprob: -3.852968215942383
    4. '(arr' → logprob: -4.602968215942383
    5. '[arr' → logprob: -4.852968215942383
    6. '   ' → logprob: -5.977968215942383
    7. 'd' → logprob: -5.977968215942383
    8. 'bis' → logprob: -6.102968215942383
    9. 'pos' → logprob: -6.727968215942383
    10. '
' → logprob: -7.352968215942383

Token 289: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.332558035850525
    2. '
' → logprob: -1.957558035850525
    3. ' existe' → logprob: -2.3325581550598145
    4. ' est' → logprob: -2.7075581550598145
    5. 'ex' → logprob: -3.0825581550598145
    6. ')' → logprob: -3.0825581550598145
    7. 'indices' → logprob: -3.2075581550598145
    8. ' peut' → logprob: -3.4575581550598145
    9. 'bis' → logprob: -3.5825581550598145
    10. ' a' → logprob: -3.7075581550598145

Token 290: 'dé' (ID: 98340)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.6506348848342896
    2. ')' → logprob: -0.7756348848342896
    3. ' bis' → logprob: -5.150634765625
    4. 'pos' → logprob: -5.900634765625
    5. '>=' → logprob: -6.150634765625
    6. '
' → logprob: -7.525634765625
    7. 'avec' → logprob: -7.525634765625
    8. '[pos' → logprob: -7.650634765625
    9. ')>=' → logprob: -7.900634765625
    10. 'au' → logprob: -7.900634765625

Token 291: 'jà' (ID: 19483)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.04769453406333923
    2. 'jà' → logprob: -3.672694444656372
    3. 'pass' → logprob: -4.672694683074951
    4. 'fin' → logprob: -4.672694683074951
    5. 'j' → logprob: -6.922694683074951
    6. 'pas' → logprob: -7.047694683074951
    7. 'bord' → logprob: -8.797694206237793
    8. 'plac' → logprob: -9.922694206237793
    9. ')' → logprob: -10.047694206237793
    10. '
' → logprob: -10.172694206237793

Token 292: ' tri' (ID: 12665)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tri' → logprob: -0.12140744924545288
    2. ' tri' → logprob: -2.4964075088500977
    3. 'tr' → logprob: -3.8714075088500977
    4. 'prés' → logprob: -5.621407508850098
    5. 'bis' → logprob: -6.371407508850098
    6. 'tris' → logprob: -6.496407508850098
    7. 'sorted' → logprob: -6.746407508850098
    8. 'dans' → logprob: -7.621407508850098
    9. 'import' → logprob: -7.746407508850098
    10. 'class' → logprob: -8.121407508850098

Token 293: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.05301150307059288
    2. 'é' → logprob: -3.553011417388916
    3. 's' → logprob: -5.053011417388916
    4. 'érée' → logprob: -5.803011417388916
    5. 'rée' → logprob: -6.053011417388916
    6. 'st' → logprob: -6.053011417388916
    7. 'ss' → logprob: -6.428011417388916
    8. 'quée' → logprob: -6.803011417388916
    9. 'cée' → logprob: -6.928011417388916
    10. 'née' → logprob: -7.053011417388916

Token 294: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009370702900923789
    2. ' )' → logprob: -7.125936985015869
    3. ',' → logprob: -9.625937461853027
    4. ')
' → logprob: -10.500937461853027
    5. '   ' → logprob: -11.375937461853027
    6. ' dans' → logprob: -12.000937461853027
    7. '")' → logprob: -12.625937461853027
    8. '),' → logprob: -13.125937461853027
    9. ' est' → logprob: -13.500937461853027
    10. '')' → logprob: -13.500937461853027

Token 295: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40690532326698303
    2. '   ' → logprob: -1.9069052934646606
    3. ' est' → logprob: -2.28190541267395
    4. ' se' → logprob: -3.40690541267395
    5. ' entre' → logprob: -4.531905174255371
    6. ' existe' → logprob: -5.281905174255371
    7. ' dans' → logprob: -5.406905174255371
    8. ' a' → logprob: -5.656905174255371
    9. ' )' → logprob: -5.656905174255371
    10. ',' → logprob: -5.781905174255371

Token 296: ' se' (ID: 458)
  Prédit: ' se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' se' → logprob: -0.443462610244751
    2. ' est' → logprob: -1.318462610244751
    3. ' existe' → logprob: -3.443462610244751
    4. 'est' → logprob: -3.943462610244751
    5. 'se' (adapté à ' se') → logprob: -4.693462371826172
    6. ' a' → logprob: -4.818462371826172
    7. 'a' → logprob: -5.943462371826172
    8. ' present' → logprob: -6.068462371826172
    9. 'ex' → logprob: -6.068462371826172
    10. ' entre' → logprob: -6.068462371826172

Token 297: ' trouve' (ID: 30913)
  Prédit: ' trouve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouve' → logprob: -0.05308057367801666
    2. 'tr' → logprob: -3.0530805587768555
    3. 'r' → logprob: -6.6780805587768555
    4. 't' → logprob: -6.8030805587768555
    5. 'found' → logprob: -7.6780805587768555
    6. ' situe' → logprob: -8.303080558776855
    7. 'tro' → logprob: -9.303080558776855
    8. 'at' → logprob: -9.428080558776855
    9. 'range' → logprob: -9.553080558776855
    10. 'nt' → logprob: -9.553080558776855

Token 298: ' dans' (ID: 2671)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.1045827642083168
    2. ' dans' → logprob: -3.1045827865600586
    3. ' between' → logprob: -3.2295827865600586
    4. 'dans' → logprob: -5.229582786560059
    5. ' ' → logprob: -6.104582786560059
    6. 'entre' → logprob: -6.479582786560059
    7. 'between' → logprob: -7.229582786560059
    8. ' in' → logprob: -7.354582786560059
    9. ' au' → logprob: -7.479582786560059
    10. ')' → logprob: -7.604582786560059

Token 299: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4338054656982422
    2. 'arr' → logprob: -1.8088054656982422
    3. 'l' → logprob: -3.058805465698242
    4. 'la' → logprob: -3.433805465698242
    5. ' range' → logprob: -3.558805465698242
    6. ' l' → logprob: -3.808805465698242
    7. 'range' → logprob: -4.558805465698242
    8. ' arr' → logprob: -4.808805465698242
    9. '[arr' → logprob: -5.183805465698242
    10. ' les' → logprob: -5.183805465698242

Token 300: ''' (ID: 6)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0104690790176392
    2. '   ' → logprob: -1.6354690790176392
    3. 'range' → logprob: -2.3854689598083496
    4. 'e' → logprob: -2.3854689598083496
    5. 'arr' → logprob: -3.0104689598083496
    6. ' [' → logprob: -3.6354689598083496
    7. '
' → logprob: -3.7604689598083496
    8. '[arr' → logprob: -4.01046895980835
    9. '_range' → logprob: -4.13546895980835
    10. ' range' → logprob: -4.13546895980835

Token 301: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.03633445128798485
    2. 'range' → logprob: -3.91133451461792
    3. '[' → logprob: -4.66133451461792
    4. 'inter' → logprob: -6.28633451461792
    5. '
' → logprob: -6.78633451461792
    6. ''' → logprob: -6.78633451461792
    7. '   ' → logprob: -7.53633451461792
    8. '`' → logprob: -7.53633451461792
    9. ' interval' → logprob: -8.536334037780762
    10. '```' → logprob: -8.911334037780762

Token 302: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.11143865436315536
    2. 'le' → logprob: -2.986438751220703
    3. 've' → logprob: -2.986438751220703
    4. 'v' → logprob: -6.611438751220703
    5. '[' → logprob: -6.861438751220703
    6. 'val' → logprob: -7.111438751220703
    7. 're' → logprob: -7.236438751220703
    8. 'vre' → logprob: -9.236438751220703
    9. '[e' → logprob: -9.611438751220703
    10. '   ' → logprob: -9.736438751220703

Token 303: ' [' (ID: 723)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.1487780511379242
    2. ' [' → logprob: -2.023777961730957
    3. ' l' → logprob: -6.023777961730957
    4. '[' → logprob: -6.273777961730957
    5. '(l' → logprob: -7.273777961730957
    6. '   ' → logprob: -8.148777961730957
    7. 'l' → logprob: -8.148777961730957
    8. ' ' → logprob: -8.273777961730957
    9. ' (' → logprob: -10.273777961730957
    10. '  ' → logprob: -10.398777961730957

Token 304: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.34851378202438354
    2. ' l' → logprob: -1.2235138416290283
    3. '	l' → logprob: -10.59851360321045
    4. ',' → logprob: -10.97351360321045
    5. '   ' → logprob: -11.47351360321045
    6. '_l' → logprob: -12.09851360321045
    7. ',l' → logprob: -12.72351360321045
    8. '
' → logprob: -12.72351360321045
    9. ' ' → logprob: -13.97351360321045
    10. '    ' → logprob: -14.72351360321045

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008527511963620782
    2. ' ,' → logprob: -7.500852584838867
    3. ',r' → logprob: -8.125852584838867
    4. ',
' → logprob: -13.625852584838867
    5. 'r' → logprob: -14.125852584838867
    6. '   ' → logprob: -14.625852584838867
    7. ' ' → logprob: -14.875852584838867
    8. ';' → logprob: -15.000852584838867
    9. ' r' → logprob: -15.875852584838867
    10. ';r' → logprob: -16.250852584838867

Token 306: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6326025724411011
    2. ' r' → logprob: -0.7576025724411011
    3. ',' → logprob: -14.00760269165039
    4. '   ' → logprob: -14.38260269165039
    5. ' ' → logprob: -14.50760269165039
    6. ' ' → logprob: -14.63260269165039
    7. '
' → logprob: -15.25760269165039
    8. ',r' → logprob: -15.25760269165039
    9. '    ' → logprob: -16.13260269165039
    10. '	r' → logprob: -16.69510269165039

Token 307: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00411829212680459
    2. '].' → logprob: -6.3791184425354
    3. ' ]' → logprob: -6.5041184425354
    4. ']
' → logprob: -7.8791184425354
    5. ']:' → logprob: -8.629117965698242
    6. '   ' → logprob: -8.879117965698242
    7. ')' → logprob: -9.379117965698242
    8. '])' → logprob: -10.004117965698242
    9. ']:
' → logprob: -10.129117965698242
    10. '],' → logprob: -11.754117965698242

Token 308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001026854501105845
    2. '
' → logprob: -7.376026630401611
    3. ')' → logprob: -9.00102710723877
    4. '    
' → logprob: -9.00102710723877
    5. '"""' → logprob: -9.62602710723877
    6. '\n' → logprob: -10.37602710723877
    7. '```' → logprob: -11.12602710723877
    8. '  
' → logprob: -11.50102710723877
    9. '"""
' → logprob: -12.00102710723877
    10. '   
' → logprob: -12.62602710723877

Token 309: ' Util' (ID: 13564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012259919196367264
    2. '
' → logprob: -4.5122599601745605
    3. '    
' → logprob: -7.2622599601745605
    4. '\n' → logprob: -8.887259483337402
    5. ' 
' → logprob: -9.387259483337402
    6. '  
' → logprob: -9.762259483337402
    7. '   
' → logprob: -10.137259483337402
    8. '```' → logprob: -10.387259483337402
    9. ')' → logprob: -10.512259483337402
    10. '"""' → logprob: -10.887259483337402

Token 310: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.011180450208485126
    2. 'se' → logprob: -4.511180400848389
    3. '```' → logprob: -10.261180877685547
    4. 's' → logprob: -11.011180877685547
    5. 'e' → logprob: -11.386180877685547
    6. 'is' → logprob: -11.511180877685547
    7. 'isez' → logprob: -11.511180877685547
    8. '#' → logprob: -11.511180877685547
    9. 'iser' → logprob: -12.136180877685547
    10. 'isant' → logprob: -12.511180877685547

Token 311: ' une' (ID: 2463)
  Prédit: ' bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.25472837686538696
    2. 'bis' → logprob: -1.5047283172607422
    3. ' binary' → logprob: -7.254728317260742
    4. ' la' → logprob: -7.379728317260742
    5. 'import' → logprob: -7.504728317260742
    6. 'def' → logprob: -8.129728317260742
    7. 'binary' → logprob: -8.254728317260742
    8. 'b' → logprob: -8.629728317260742
    9. ' une' → logprob: -10.379728317260742
    10. 'la' → logprob: -10.629728317260742

Token 312: ' recherche' (ID: 24975)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.12151608616113663
    2. ' bis' → logprob: -2.621515989303589
    3. 'position' → logprob: -4.121516227722168
    4. 'b' → logprob: -4.996516227722168
    5. 'binary' → logprob: -5.246516227722168
    6. 'import' → logprob: -5.371516227722168
    7. ' recherche' → logprob: -6.496516227722168
    8. 'pos' → logprob: -6.621516227722168
    9. ' binary' → logprob: -6.621516227722168
    10. ' position' → logprob: -7.371516227722168

Token 313: ' b' (ID: 287)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.07613219320774078
    2. 'b' → logprob: -3.576132297515869
    3. '_b' → logprob: -3.701132297515869
    4. '_' → logprob: -4.451132297515869
    5. ' bis' → logprob: -5.201132297515869
    6. 'sorted' → logprob: -6.826132297515869
    7. 'import' → logprob: -7.826132297515869
    8. 'binary' → logprob: -7.826132297515869
    9. '_left' → logprob: -7.826132297515869
    10. '=b' → logprob: -8.576131820678711

Token 314: 'inaire' (ID: 41465)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5644053816795349
    2. 'in' → logprob: -1.1894054412841797
    3. 'inary' → logprob: -2.1894054412841797
    4. 'inaire' → logprob: -4.81440544128418
    5. 'search' → logprob: -6.18940544128418
    6. 'a' → logprob: -6.93940544128418
    7. 'n' → logprob: -7.06440544128418
    8. '```' → logprob: -7.81440544128418
    9. 's' → logprob: -7.93940544128418
    10. 'bis' → logprob: -8.18940544128418

Token 315: '.
' (ID: 558)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.30431580543518066
    2. '   ' → logprob: -1.5543158054351807
    3. ')' → logprob: -4.804315567016602
    4. 'def' → logprob: -4.929315567016602
    5. ' pour' → logprob: -5.054315567016602
    6. 'arr' → logprob: -5.179315567016602
    7. ' (' → logprob: -5.679315567016602
    8. '
' → logprob: -5.804315567016602
    9. ':' → logprob: -6.054315567016602
    10. ',' → logprob: -6.054315567016602

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014789276756346226
    2. '
' → logprob: -4.38978910446167
    3. '    
' → logprob: -6.38978910446167
    4. '  
' → logprob: -8.764789581298828
    5. ' 
' → logprob: -8.889789581298828
    6. '\n' → logprob: -9.514789581298828
    7. '   
' → logprob: -9.514789581298828
    8. ')' → logprob: -10.014789581298828
    9. '```' → logprob: -10.764789581298828
    10. '     
' → logprob: -11.264789581298828

Token 317: ' Ren' (ID: 17631)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0053084660321474075
    2. 'idx' → logprob: -6.255308628082275
    3. 'pos' → logprob: -6.630308628082275
    4. '
' → logprob: -7.255308628082275
    5. ' idx' → logprob: -7.755308628082275
    6. ' pos' → logprob: -8.255308151245117
    7. 'index' → logprob: -8.630308151245117
    8. '    
' → logprob: -8.755308151245117
    9. '  
' → logprob: -10.255308151245117
    10. '	pos' → logprob: -10.380308151245117

Token 318: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.09438086301088333
    2. 'sert' → logprob: -3.8443808555603027
    3. 'return' → logprob: -4.094380855560303
    4. 't' → logprob: -4.219380855560303
    5. 'tour' → logprob: -4.469380855560303
    6. 'voit' → logprob: -5.094380855560303
    7. '
' → logprob: -5.719380855560303
    8. 'turn' → logprob: -5.844380855560303
    9. '   ' → logprob: -5.969380855560303
    10. 'urn' → logprob: -5.969380855560303

Token 319: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.10021314769983292
    2. ' True' → logprob: -2.350213050842285
    3. 'bool' → logprob: -12.975213050842285
    4. '(True' → logprob: -13.225213050842285
    5. 'False' → logprob: -13.350213050842285
    6. '   ' → logprob: -14.850213050842285
    7. 'true' → logprob: -15.975213050842285
    8. ' bool' → logprob: -15.975213050842285
    9. ' ' → logprob: -16.9752140045166
    10. ' False' → logprob: -17.3502140045166

Token 320: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05473726987838745
    2. ',' → logprob: -3.9297373294830322
    3. ' si' → logprob: -3.9297373294830322
    4. 'if' → logprob: -4.804737091064453
    5. ' or' → logprob: -6.054737091064453
    6. ' ou' → logprob: -6.554737091064453
    7. '   ' → logprob: -7.804737091064453
    8. ')' → logprob: -7.804737091064453
    9. 'si' → logprob: -8.054737091064453
    10. ' ' → logprob: -8.554737091064453

Token 321: ' oui' (ID: 50908)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.2722834050655365
    2. ' bis' → logprob: -1.7722834348678589
    3. 'il' → logprob: -4.022283554077148
    4. ' any' → logprob: -4.397283554077148
    5. 'len' → logprob: -4.897283554077148
    6. ' True' → logprob: -4.897283554077148
    7. ' il' → logprob: -5.022283554077148
    8. 'True' → logprob: -5.022283554077148
    9. 'any' → logprob: -5.147283554077148
    10. '   ' → logprob: -7.397283554077148

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009371895575895905
    2. '   ' → logprob: -7.875936985015869
    3. ' ,' → logprob: -8.125937461853027
    4. ',
' → logprob: -9.375937461853027
    5. ' else' → logprob: -9.750937461853027
    6. 'else' → logprob: -9.750937461853027
    7. '```' → logprob: -10.500937461853027
    8. '
' → logprob: -12.125937461853027
    9. 'def' → logprob: -12.125937461853027
    10. '.' → logprob: -12.250937461853027

Token 323: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.5827479362487793
    2. 'False' → logprob: -0.8327479362487793
    3. ' sinon' → logprob: -5.332747936248779
    4. ' else' → logprob: -6.832747936248779
    5. 'else' → logprob: -7.332747936248779
    6. '   ' → logprob: -8.582748413085938
    7. 'otherwise' → logprob: -11.957748413085938
    8. ' otherwise' → logprob: -11.957748413085938
    9. '    ' → logprob: -12.457748413085938
    10. '```' → logprob: -12.707748413085938

Token 324: ' sinon' (ID: 52915)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039959944784641266
    2. ' sinon' → logprob: -3.9149599075317383
    3. '```' → logprob: -4.789959907531738
    4. 'else' → logprob: -5.039959907531738
    5. ' else' → logprob: -5.789959907531738
    6. ')' → logprob: -7.289959907531738
    7. ' autrement' → logprob: -9.164959907531738
    8. '.' → logprob: -9.164959907531738
    9. '   ' → logprob: -9.289959907531738
    10. 'Sinon' → logprob: -9.664959907531738

Token 325: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21678827702999115
    2. '):
' → logprob: -1.9667882919311523
    3. ':
' → logprob: -3.8417882919311523
    4. '
' → logprob: -4.341788291931152
    5. ')' → logprob: -4.841788291931152
    6. '```' → logprob: -5.841788291931152
    7. ',' → logprob: -6.341788291931152
    8. '.
' → logprob: -6.341788291931152
    9. ',
' → logprob: -6.716788291931152
    10. '.' → logprob: -6.716788291931152

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008276373147964478
    2. ')' → logprob: -5.883276462554932
    3. '):
' → logprob: -5.883276462554932
    4. '):' → logprob: -7.133276462554932
    5. '
' → logprob: -7.383276462554932
    6. '```' → logprob: -8.008275985717773
    7. '"""' → logprob: -8.133275985717773
    8. '    
' → logprob: -8.508275985717773
    9. ':' → logprob: -9.133275985717773
    10. '"""
' → logprob: -9.133275985717773

Token 327: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012986564077436924
    2. 'idx' → logprob: -5.637986660003662
    3. 'pos' → logprob: -5.887986660003662
    4. '
' → logprob: -5.887986660003662
    5. ' idx' → logprob: -6.512986660003662
    6. ' pos' → logprob: -7.012986660003662
    7. '```' → logprob: -8.012986183166504
    8. 'index' → logprob: -8.262986183166504
    9. 'def' → logprob: -8.512986183166504
    10. ')' → logprob: -8.637986183166504

Token 328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004671376198530197
    2. 'idx' → logprob: -6.129671573638916
    3. 'pos' → logprob: -7.129671573638916
    4. ' idx' → logprob: -7.629671573638916
    5. '	idx' → logprob: -8.254671096801758
    6. '	pos' → logprob: -8.379671096801758
    7. ' pos' → logprob: -8.754671096801758
    8. 'left' → logprob: -8.879671096801758
    9. 'index' → logprob: -9.004671096801758
    10. ' left' → logprob: -9.129671096801758

Token 329: ' #' (ID: 1069)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0038779813330620527
    2. 'index' → logprob: -6.753878116607666
    3. ' idx' → logprob: -6.753878116607666
    4. '   ' → logprob: -7.003878116607666
    5. 'left' → logprob: -8.378877639770508
    6. 'i' → logprob: -8.878877639770508
    7. 'ind' → logprob: -9.003877639770508
    8. 'import' → logprob: -9.628877639770508
    9. 'pos' → logprob: -10.253877639770508
    10. '	idx' → logprob: -11.253877639770508

Token 330: ' Cher' (ID: 48756)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0635853260755539
    2. ' idx' → logprob: -2.9385852813720703
    3. 'index' → logprob: -5.43858528137207
    4. '   ' → logprob: -6.81358528137207
    5. 'ind' → logprob: -6.93858528137207
    6. 'pos' → logprob: -7.18858528137207
    7. 'left' → logprob: -7.68858528137207
    8. ' index' → logprob: -8.31358528137207
    9. 'indx' → logprob: -8.56358528137207
    10. 'i' → logprob: -8.68858528137207

Token 331: 'che' (ID: 926)
  Prédit: 'cher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cher' → logprob: -1.120253324508667
    2. 'ch' → logprob: -1.245253324508667
    3. '   ' → logprob: -1.370253324508667
    4. 'che' → logprob: -2.620253324508667
    5. 'rch' → logprob: -2.995253324508667
    6. 'ck' → logprob: -5.870253562927246
    7. 'r' → logprob: -5.995253562927246
    8. 'c' → logprob: -6.870253562927246
    9. '#' → logprob: -7.620253562927246
    10. 'arch' → logprob: -7.745253562927246

Token 332: ' la' (ID: 557)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5483940243721008
    2. '   ' → logprob: -1.548393964767456
    3. ' idx' → logprob: -1.798393964767456
    4. 'pos' → logprob: -4.048394203186035
    5. 'index' → logprob: -4.423394203186035
    6. 'left' → logprob: -5.298394203186035
    7. 'import' → logprob: -5.673394203186035
    8. ' index' → logprob: -6.298394203186035
    9. ' left' → logprob: -6.548394203186035
    10. ' pos' → logprob: -7.423394203186035

Token 333: ' plus' (ID: 2932)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.32418957352638245
    2. 'bis' → logprob: -2.0741896629333496
    3. 'pos' → logprob: -2.6991896629333496
    4. 'index' → logprob: -3.0741896629333496
    5. 'import' → logprob: -3.9491896629333496
    6. ' idx' → logprob: -5.07418966293335
    7. 'left' → logprob: -5.44918966293335
    8. 'indice' → logprob: -6.19918966293335
    9. 'ind' → logprob: -6.44918966293335
    10. 'i' → logprob: -7.19918966293335

Token 334: ' petite' (ID: 28119)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.3427617847919464
    2. 'gr' → logprob: -2.217761754989624
    3. 'à' → logprob: -3.217761754989624
    4. 'left' → logprob: -3.467761754989624
    5. 'import' → logprob: -3.717761754989624
    6. 'pet' → logprob: -3.967761754989624
    7. 'dro' → logprob: -4.092761993408203
    8. 'large' → logprob: -4.217761993408203
    9. ' gauche' → logprob: -4.467761993408203
    10. 'grand' → logprob: -5.842761993408203

Token 335: ' position' (ID: 4010)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.38945871591567993
    2. 'idx' → logprob: -1.7644586563110352
    3. 'pos' → logprob: -2.389458656311035
    4. ' index' → logprob: -3.264458656311035
    5. 'position' → logprob: -4.389458656311035
    6. 'indice' → logprob: -5.389458656311035
    7. ' idx' → logprob: -5.889458656311035
    8. 'i' → logprob: -7.139458656311035
    9. ' position' → logprob: -8.014458656311035
    10. ' pos' → logprob: -8.764458656311035

Token 336: ' >=' (ID: 5064)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.849875271320343
    2. 'pos' → logprob: -1.3498752117156982
    3. '   ' → logprob: -2.0998752117156982
    4. 'index' → logprob: -2.3498752117156982
    5. ' idx' → logprob: -3.2248752117156982
    6. 'possible' → logprob: -4.724875450134277
    7. ' index' → logprob: -4.849875450134277
    8. ' pos' → logprob: -5.224875450134277
    9. 'import' → logprob: -5.224875450134277
    10. 'in' → logprob: -5.349875450134277

Token 337: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.003606005571782589
    2. ' l' → logprob: -5.628605842590332
    3. '	l' → logprob: -12.378605842590332
    4. '   ' → logprob: -13.503605842590332
    5. '_l' → logprob: -15.628605842590332
    6. '```' → logprob: -16.00360679626465
    7. ' ' → logprob: -16.75360679626465
    8. '(l' → logprob: -17.25360679626465
    9. '`' → logprob: -17.37860679626465
    10. '[l' → logprob: -18.00360679626465

Token 338: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019329620525240898
    2. 'idx' → logprob: -4.39432954788208
    3. 'pos' → logprob: -5.26932954788208
    4. ' idx' → logprob: -6.89432954788208
    5. ' pos' → logprob: -8.144330024719238
    6. 'index' → logprob: -8.519330024719238
    7. 'ind' → logprob: -10.769330024719238
    8. '	idx' → logprob: -10.894330024719238
    9. '	pos' → logprob: -10.894330024719238
    10. '
' → logprob: -11.269330024719238

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001515100128017366
    2. 'idx' → logprob: -7.001514911651611
    3. 'pos' → logprob: -8.00151538848877
    4. ' idx' → logprob: -8.75151538848877
    5. ' pos' → logprob: -9.75151538848877
    6. 'index' → logprob: -11.37651538848877
    7. '    
' → logprob: -11.62651538848877
    8. '	pos' → logprob: -12.25151538848877
    9. '	idx' → logprob: -12.25151538848877
    10. 'ind' → logprob: -12.62651538848877

Token 340: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.698749303817749
    2. ' idx' → logprob: -0.698749303817749
    3. '   ' → logprob: -5.698749542236328
    4. 'index' → logprob: -6.823749542236328
    5. ' index' → logprob: -7.823749542236328
    6. 'pos' → logprob: -7.948749542236328
    7. 'ind' → logprob: -9.073749542236328
    8. ' pos' → logprob: -9.323749542236328
    9. ' ind' → logprob: -9.448749542236328
    10. 'i' → logprob: -10.448749542236328

Token 341: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141343772411346
    2. '=' → logprob: -1.7014133930206299
    3. '=b' → logprob: -16.076414108276367
    4. ' ' → logprob: -18.701414108276367
    5. '＝' → logprob: -18.701414108276367
    6. ' =
' → logprob: -18.701414108276367
    7. '	' → logprob: -19.076414108276367
    8. ')' → logprob: -19.326414108276367
    9. ' =
' → logprob: -19.326414108276367
    10. '=
' → logprob: -19.451414108276367

Token 342: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -1.9361264946837764e-07
    2. ' bis' → logprob: -16.125
    3. 'b' → logprob: -21.125
    4. 'bs' → logprob: -21.25
    5. 'bi' → logprob: -23.0
    6. '0' → logprob: -23.5
    7. '
' → logprob: -24.0
    8. 'Bis' → logprob: -24.0
    9. '	b' → logprob: -24.375
    10. 'bil' → logprob: -25.125

Token 343: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.01039939746260643
    2. 'sect' → logprob: -4.635399341583252
    3. 'ct' → logprob: -7.635399341583252
    4. 'lect' → logprob: -10.26039981842041
    5. 'ce' → logprob: -10.88539981842041
    6. 'e' → logprob: -11.13539981842041
    7. '```' → logprob: -11.13539981842041
    8. 's' → logprob: -11.38539981842041
    9. 'ects' → logprob: -11.38539981842041
    10. 'left' → logprob: -11.51039981842041

Token 344: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.12694092094898224
    2. '_left' → logprob: -2.126940965652466
    3. '_right' → logprob: -11.501940727233887
    4. 'left' → logprob: -13.501940727233887
    5. 'Left' → logprob: -13.876940727233887
    6. '.left' → logprob: -15.751940727233887
    7. '_LEFT' → logprob: -16.251941680908203
    8. 'arr' → logprob: -17.251941680908203
    9. '-left' → logprob: -17.501941680908203
    10. '.arr' → logprob: -17.626941680908203

Token 345: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.008292687125504017
    2. 's' → logprob: -4.8832926750183105
    3. 'sect' → logprob: -7.7582926750183105
    4. 'ect' → logprob: -9.508293151855469
    5. 'ct' → logprob: -10.758293151855469
    6. 'left' → logprob: -10.883293151855469
    7. 'n' → logprob: -11.008293151855469
    8. 'sc' → logprob: -11.008293151855469
    9. '```' → logprob: -11.008293151855469
    10. 'search' → logprob: -11.258293151855469

Token 346: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.08956113457679749
    2. 'ect' → logprob: -2.4645612239837646
    3. 'sect' → logprob: -8.214561462402344
    4. 'n' → logprob: -8.714561462402344
    5. 's' → logprob: -9.839561462402344
    6. '```' → logprob: -10.589561462402344
    7. 'с' → logprob: -11.089561462402344
    8. '#' → logprob: -11.339561462402344
    9. '<' → logprob: -11.464561462402344
    10. '[' → logprob: -12.089561462402344

Token 347: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.023281820118427277
    2. 'left' → logprob: -3.7732818126678467
    3. 'arr' → logprob: -10.273282051086426
    4. 'Left' → logprob: -14.273282051086426
    5. '(arr' → logprob: -14.273282051086426
    6. '_right' → logprob: -15.148282051086426
    7. '-left' → logprob: -16.52328109741211
    8. 'l' → logprob: -18.02328109741211
    9. 'le' → logprob: -18.02328109741211
    10. '_LEFT' → logprob: -18.27328109741211

Token 348: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -4.60414821645827e-06
    2. 'arr' → logprob: -12.375004768371582
    3. '(' → logprob: -16.125003814697266
    4. '[arr' → logprob: -17.125003814697266
    5. '	arr' → logprob: -18.000003814697266
    6. '   ' → logprob: -18.000003814697266
    7. '<arr' → logprob: -18.000003814697266
    8. ' (' → logprob: -18.500003814697266
    9. ' arr' → logprob: -18.500003814697266
    10. '(pos' → logprob: -19.375003814697266

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.249780638725497e-05
    2. ' ,' → logprob: -10.750032424926758
    3. '(arr' → logprob: -12.375032424926758
    4. ',l' → logprob: -12.625032424926758
    5. ',val' → logprob: -13.250032424926758
    6. 'arr' → logprob: -14.000032424926758
    7. '   ' → logprob: -15.375032424926758
    8. '(' → logprob: -16.000032424926758
    9. ',pos' → logprob: -16.125032424926758
    10. ',
' → logprob: -16.500032424926758

Token 350: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.038042064756155014
    2. ' l' → logprob: -3.2880420684814453
    3. '	l' → logprob: -14.538042068481445
    4. '(l' → logprob: -16.038042068481445
    5. '_l' → logprob: -17.163042068481445
    6. ',l' → logprob: -17.788042068481445
    7. '[l' → logprob: -17.913042068481445
    8. ')' → logprob: -18.288042068481445
    9. ' л' → logprob: -19.538042068481445
    10. '$l' → logprob: -19.538042068481445

Token 351: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006725317798554897
    2. ')
' → logprob: -5.006725311279297
    3. ' )' → logprob: -12.131725311279297
    4. '   ' → logprob: -12.506725311279297
    5. ')
' → logprob: -15.256725311279297
    6. ')

' → logprob: -15.631725311279297
    7. ' )
' → logprob: -15.756725311279297
    8. ' ' → logprob: -16.256725311279297
    9. ')return' → logprob: -17.506725311279297
    10. '))' → logprob: -18.381725311279297

Token 352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009696004912257195
    2. ' if' → logprob: -5.134696006774902
    3. 'if' → logprob: -5.634696006774902
    4. '    
' → logprob: -9.009696006774902
    5. '
' → logprob: -10.884696006774902
    6. '    ' → logprob: -11.509696006774902
    7. '  
' → logprob: -11.884696006774902
    8. '	if' → logprob: -12.134696006774902
    9. '  ' → logprob: -12.259696006774902
    10. '<|end|>' → logprob: -12.634696006774902

Token 353: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1633366495370865
    2. '   ' → logprob: -1.9133366346359253
    3. 'return' → logprob: -6.163336753845215
    4. ' if' → logprob: -6.913336753845215
    5. ' return' → logprob: -12.288336753845215
    6. '	if' → logprob: -13.288336753845215
    7. '```' → logprob: -13.913336753845215
    8. '    
' → logprob: -15.538336753845215
    9. '
' → logprob: -15.663336753845215
    10. '  ' → logprob: -15.788336753845215

Token 354: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -4.6087021473795176e-05
    2. ' idx' → logprob: -10.000045776367188
    3. '	idx' → logprob: -14.250045776367188
    4. '(idx' → logprob: -17.250045776367188
    5. '_idx' → logprob: -19.625045776367188
    6. '   ' → logprob: -19.750045776367188
    7. '[idx' → logprob: -20.375045776367188
    8. 'index' → logprob: -21.000045776367188
    9. '.idx' → logprob: -21.250045776367188
    10. ' ' → logprob: -21.750045776367188

Token 355: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.13862039148807526
    2. '<len' → logprob: -2.138620376586914
    3. ' <' → logprob: -5.013620376586914
    4. '==' → logprob: -5.388620376586914
    5. ' ==' → logprob: -8.263620376586914
    6. '>=' → logprob: -9.388620376586914
    7. 'len' → logprob: -10.388620376586914
    8. '<size' → logprob: -11.638620376586914
    9. '!=' → logprob: -11.888620376586914
    10. '<n' → logprob: -11.888620376586914

Token 356: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00020354038861114532
    2. ' len' → logprob: -8.500203132629395
    3. '(len' → logprob: -18.25020408630371
    4. '=len' → logprob: -18.37520408630371
    5. '[len' → logprob: -21.00020408630371
    6. '	len' → logprob: -21.25020408630371
    7. ' ' → logprob: -21.87520408630371
    8. '   ' → logprob: -21.87520408630371
    9. '
' → logprob: -22.00020408630371
    10. '<len' → logprob: -22.25020408630371

Token 357: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.006716555915772915
    2. 'arr' → logprob: -5.006716728210449
    3. ' arr' → logprob: -13.63171672821045
    4. '[arr' → logprob: -16.881715774536133
    5. '	arr' → logprob: -17.756715774536133
    6. '<arr' → logprob: -18.006715774536133
    7. '_arr' → logprob: -18.881715774536133
    8. '(' → logprob: -19.756715774536133
    9. '$arr' → logprob: -20.381715774536133
    10. 'Arr' → logprob: -21.256715774536133

Token 358: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014549863524734974
    2. 'and' → logprob: -4.264549732208252
    3. ' and' → logprob: -8.01455020904541
    4. ' )' → logprob: -9.88955020904541
    5. 'a' → logprob: -13.76455020904541
    6. '")' → logprob: -14.38955020904541
    7. '):
' → logprob: -14.38955020904541
    8. 'et' → logprob: -14.51455020904541
    9. '   ' → logprob: -14.76455020904541
    10. '')' → logprob: -15.13955020904541

Token 359: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.04858850687742233
    2. ' and' → logprob: -3.048588514328003
    3. '   ' → logprob: -13.798588752746582
    4. '	and' → logprob: -16.798587799072266
    5. ' ' → logprob: -17.673587799072266
    6. ' и' → logprob: -17.923587799072266
    7. ' ' → logprob: -18.423587799072266
    8. 'andr' → logprob: -18.673587799072266
    9. '  ' → logprob: -18.923587799072266
    10. '    ' → logprob: -19.423587799072266

Token 360: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -4.246537173457909e-06
    2. ' arr' → logprob: -12.375003814697266
    3. '   ' → logprob: -17.750003814697266
    4. 'r' → logprob: -19.500003814697266
    5. '	arr' → logprob: -19.500003814697266
    6. '(arr' → logprob: -20.375003814697266
    7. ' ' → logprob: -21.500003814697266
    8. '  ' → logprob: -22.000003814697266
    9. '[arr' → logprob: -22.250003814697266
    10. '_arr' → logprob: -22.500003814697266

Token 361: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -9.014684110297821e-06
    2. 'idx' → logprob: -12.500008583068848
    3. '[' → logprob: -13.500008583068848
    4. '[arr' → logprob: -13.500008583068848
    5. '(idx' → logprob: -14.625008583068848
    6. ' idx' → logprob: -14.750008583068848
    7. 'arr' → logprob: -14.750008583068848
    8. ' [' → logprob: -14.875008583068848
    9. '	idx' → logprob: -15.375008583068848
    10. '[
' → logprob: -15.875008583068848

Token 362: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2016138881444931
    2. '<=' → logprob: -1.7016139030456543
    3. ')' → logprob: -9.326613426208496
    4. ')<=' → logprob: -9.326613426208496
    5. ']<=' → logprob: -10.826613426208496
    6. ']' → logprob: -13.826613426208496
    7. ' ' → logprob: -14.326613426208496
    8. '>=' → logprob: -15.201613426208496
    9. ' >=' → logprob: -15.576613426208496
    10. ' ' → logprob: -15.701613426208496

Token 363: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.006715728435665369
    2. ' <=' → logprob: -5.006715774536133
    3. '>=' → logprob: -15.881715774536133
    4. ')<=' → logprob: -15.881715774536133
    5. ']<=' → logprob: -16.256715774536133
    6. '```' → logprob: -18.256715774536133
    7. '≤' → logprob: -18.631715774536133
    8. ' ' → logprob: -19.006715774536133
    9. ' ' → logprob: -19.881715774536133
    10. 'le' → logprob: -21.381715774536133

Token 364: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.048587486147880554
    2. ' r' → logprob: -3.0485875606536865
    3. '	r' → logprob: -16.673587799072266
    4. ' ' → logprob: -18.173587799072266
    5. ' ' → logprob: -18.298587799072266
    6. '   ' → logprob: -18.798587799072266
    7. '_r' → logprob: -18.923587799072266
    8. '(r' → logprob: -20.736087799072266
    9. '[r' → logprob: -20.923587799072266
    10. 's' → logprob: -21.173587799072266

Token 365: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.317815899848938
    2. ':' → logprob: -1.317815899848938
    3. ':return' → logprob: -6.067815780639648
    4. '       ' → logprob: -6.442815780639648
    5. '   ' → logprob: -7.442815780639648
    6. '):
' → logprob: -10.817815780639648
    7. ':
' → logprob: -11.317815780639648
    8. ' :
' → logprob: -12.192815780639648
    9. 'return' → logprob: -12.317815780639648
    10. ' return' → logprob: -13.067815780639648

Token 366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002955399686470628
    2. ' return' → logprob: -8.500295639038086
    3. 'return' → logprob: -10.000295639038086
    4. '
' → logprob: -10.375295639038086
    5. '   ' → logprob: -12.250295639038086
    6. '	return' → logprob: -13.125295639038086
    7. ':return' → logprob: -13.125295639038086
    8. '	' → logprob: -13.375295639038086
    9. '        
' → logprob: -13.500295639038086
    10. ':' → logprob: -14.375295639038086

Token 367: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4855472147464752
    2. '       ' → logprob: -0.9855471849441528
    3. ' return' → logprob: -4.485547065734863
    4. '           ' → logprob: -9.235547065734863
    5. '	return' → logprob: -10.860547065734863
    6. '   ' → logprob: -11.485547065734863
    7. '
' → logprob: -12.235547065734863
    8. ':return' → logprob: -13.735547065734863
    9. 'eturn' → logprob: -15.235547065734863
    10. '{return' → logprob: -15.735547065734863

Token 368: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.001170225441455841
    2. ' True' → logprob: -6.7511701583862305
    3. '   ' → logprob: -20.876171112060547
    4. '(True' → logprob: -21.626171112060547
    5. 'true' → logprob: -22.751171112060547
    6. '=True' → logprob: -24.376171112060547
    7. '1' → logprob: -25.251171112060547
    8. 'TRUE' → logprob: -25.376171112060547
    9. 'False' → logprob: -25.876171112060547
    10. '_true' → logprob: -26.501171112060547

Token 369: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1398757123970427e-05
    2. '    
' → logprob: -11.875011444091797
    3. 'return' → logprob: -13.125011444091797
    4. '
' → logprob: -13.250011444091797
    5. ' return' → logprob: -15.250011444091797
    6. '       ' → logprob: -16.375011444091797
    7. '<|end|>' → logprob: -16.625011444091797
    8. '	return' → logprob: -16.750011444091797
    9. '```' → logprob: -17.500011444091797
    10. '  
' → logprob: -17.500011444091797

Token 370: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.664371848164592e-05
    2. 'return' → logprob: -11.250016212463379
    3. '    
' → logprob: -12.875016212463379
    4. '
' → logprob: -14.750016212463379
    5. ' return' → logprob: -15.125016212463379
    6. '	return' → logprob: -15.875016212463379
    7. '       ' → logprob: -16.625017166137695
    8. '   ' → logprob: -17.625017166137695
    9. '```' → logprob: -17.625017166137695
    10. 'else' → logprob: -18.125017166137695

Token 371: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3881375193595886
    2. 'return' (adapté à ' return') → logprob: -1.1381375789642334
    3. ' return' → logprob: -6.763137340545654
    4. 'else' → logprob: -9.388137817382812
    5. 'False' → logprob: -11.763137817382812
    6. '    
' → logprob: -12.013137817382812
    7. '	return' → logprob: -12.138137817382812
    8. '
' → logprob: -13.138137817382812
    9. '```' → logprob: -13.513137817382812
    10. ' ' → logprob: -13.513137817382812

Token 372: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.001170225441455841
    2. ' False' → logprob: -6.7511701583862305
    3. '(False' → logprob: -21.001171112060547
    4. 'false' → logprob: -22.626171112060547
    5. '=False' → logprob: -23.501171112060547
    6. '_false' → logprob: -23.876171112060547
    7. '   ' → logprob: -24.126171112060547
    8. '.False' → logprob: -24.501171112060547
    9. 'None' → logprob: -26.501171112060547
    10. 'FALSE' → logprob: -26.501171112060547

Token 373: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23210391402244568
    2. '
' → logprob: -1.732103943824768
    3. 'def' → logprob: -3.9821038246154785
    4. '<|end|>' → logprob: -5.6071038246154785
    5. '```' → logprob: -5.7321038246154785
    6. ' for' → logprob: -6.4821038246154785
    7. '  
' → logprob: -6.7321038246154785
    8. '

' → logprob: -6.9821038246154785
    9. ' 
' → logprob: -8.107104301452637
    10. '    
' → logprob: -8.857104301452637

Token 374: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0020421291701495647
    2. 'output' → logprob: -6.502042293548584
    3. 'results' → logprob: -7.877042293548584
    4. 'outputs' → logprob: -9.752041816711426
    5. 'def' → logprob: -9.877041816711426
    6. 'result' → logprob: -10.377041816711426
    7. 'answers' → logprob: -11.252041816711426
    8. '
' → logprob: -13.252041816711426
    9. 'answer' → logprob: -13.502041816711426
    10. 'res' → logprob: -13.877041816711426

Token 375: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.008645178750157356
    2. '_' → logprob: -4.758645057678223
    3. ' ' → logprob: -10.508645057678223
    4. '  ' → logprob: -14.133645057678223
    5. ' range' → logprob: -14.508645057678223
    6. ' ' → logprob: -14.508645057678223
    7. ' Q' → logprob: -14.633645057678223
    8. ' q' → logprob: -14.758645057678223
    9. ' in' → logprob: -15.883645057678223
    10. 'Q' → logprob: -16.50864601135254

Token 376: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3135533332824707
    2. 'in' → logprob: -1.3135533332824707
    3. ' ' → logprob: -9.063552856445312
    4. 's' → logprob: -9.813552856445312
    5. ',' → logprob: -10.688552856445312
    6. '_' → logprob: -10.813552856445312
    7. 'range' → logprob: -11.063552856445312
    8. '  ' → logprob: -11.188552856445312
    9. '	in' → logprob: -11.688552856445312
    10. 'n' → logprob: -11.938552856445312

Token 377: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234356038272381
    2. ' range' → logprob: -5.255234241485596
    3. '(range' → logprob: -14.880234718322754
    4. '	range' → logprob: -16.380233764648438
    5. 'sys' → logprob: -16.755233764648438
    6. ' ' → logprob: -17.130233764648438
    7. 'Q' → logprob: -17.380233764648438
    8. 'input' → logprob: -17.755233764648438
    9. '[' → logprob: -17.880233764648438
    10. 'r' → logprob: -18.005233764648438

Token 378: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.026525191962718964
    2. ' Q' → logprob: -4.526525020599365
    3. ' (' → logprob: -5.276525020599365
    4. '(' → logprob: -5.276525020599365
    5. 'Q' → logprob: -5.276525020599365
    6. '(int' → logprob: -11.401525497436523
    7. '()' → logprob: -11.651525497436523
    8. ')' → logprob: -12.901525497436523
    9. '(N' → logprob: -13.651525497436523
    10. ' ' → logprob: -13.901525497436523

Token 379: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.033821236342191696
    2. '):
' → logprob: -3.4088213443756104
    3. ',' → logprob: -9.033821105957031
    4. ')' → logprob: -10.658821105957031
    5. ':' → logprob: -11.158821105957031
    6. '):
' → logprob: -11.533821105957031
    7. ' ):' → logprob: -12.408821105957031
    8. '():' → logprob: -13.533821105957031
    9. '):

' → logprob: -14.283821105957031
    10. '():
' → logprob: -14.283821105957031

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007006624713540077
    2. '	l' → logprob: -5.507006645202637
    3. 'l' → logprob: -6.132006645202637
    4. ' l' → logprob: -7.632006645202637
    5. '	line' → logprob: -8.757006645202637
    6. ' line' → logprob: -10.007006645202637
    7. 'line' → logprob: -11.132006645202637
    8. ',l' → logprob: -11.257006645202637
    9. '   ' → logprob: -11.382006645202637
    10. '	t' → logprob: -12.382006645202637

Token 381: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.0005417120410129428
    2. ' l' → logprob: -7.625541687011719
    3. '   ' → logprob: -10.375541687011719
    4. 'L' → logprob: -11.125541687011719
    5. '	l' → logprob: -11.875541687011719
    6. '_l' → logprob: -14.875541687011719
    7. 'line' → logprob: -15.125541687011719
    8. ',l' → logprob: -16.00054168701172
    9. ' L' → logprob: -17.25054168701172
    10. '.l' → logprob: -17.87554168701172

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008632226963527501
    2. ',r' → logprob: -7.125863075256348
    3. ' ,' → logprob: -10.000863075256348
    4. ',v' → logprob: -12.500863075256348
    5. ',d' → logprob: -12.625863075256348
    6. ',t' → logprob: -13.875863075256348
    7. ',s' → logprob: -13.875863075256348
    8. ',val' → logprob: -14.625863075256348
    9. ',u' → logprob: -14.875863075256348
    10. ',int' → logprob: -15.000863075256348

Token 383: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.4740772247314453
    2. 'r' → logprob: -0.9740772247314453
    3. ',r' → logprob: -15.974077224731445
    4. ' ' → logprob: -16.974077224731445
    5. ',' → logprob: -17.224077224731445
    6. '	r' → logprob: -17.849077224731445
    7. '   ' → logprob: -17.974077224731445
    8. ' ' → logprob: -17.974077224731445
    9. '_r' → logprob: -18.099077224731445
    10. '=r' → logprob: -19.724077224731445

Token 384: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004697476513683796
    2. '=' → logprob: -5.379697322845459
    3. ' ,' → logprob: -10.129697799682617
    4. ' =' → logprob: -10.254697799682617
    5. ',l' → logprob: -13.879697799682617
    6. '   ' → logprob: -14.504697799682617
    7. ',d' → logprob: -16.129697799682617
    8. ' ' → logprob: -16.504697799682617
    9. ',r' → logprob: -16.504697799682617
    10. '_,' → logprob: -17.004697799682617

Token 385: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.2280508279800415
    2. ' D' → logprob: -1.6030508279800415
    3. 'd' → logprob: -6.228050708770752
    4. ' d' → logprob: -7.353050708770752
    5. ',' → logprob: -11.85305118560791
    6. ',D' → logprob: -12.60305118560791
    7. ' ' → logprob: -12.72805118560791
    8. ' =' → logprob: -13.47805118560791
    9. '   ' → logprob: -13.47805118560791
    10. '  ' → logprob: -13.97805118560791

Token 386: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01814994215965271
    2. ' =' → logprob: -4.0181498527526855
    3. '=int' → logprob: -17.393150329589844
    4. '=input' → logprob: -17.393150329589844
    5. '＝' → logprob: -18.018150329589844
    6. '=line' → logprob: -18.143150329589844
    7. ')' → logprob: -18.643150329589844
    8. ' ' → logprob: -18.643150329589844
    9. ',' → logprob: -18.768150329589844
    10. ')=' → logprob: -18.893150329589844

Token 387: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4740791916847229
    2. 'map' → logprob: -0.9740791916847229
    3. '[' → logprob: -13.974079132080078
    4. '	map' → logprob: -14.724079132080078
    5. 'list' → logprob: -15.099079132080078
    6. ' [' → logprob: -15.224079132080078
    7. 'input' → logprob: -15.724079132080078
    8. ' list' → logprob: -16.224079132080078
    9. '(map' → logprob: -16.599079132080078
    10. ' input' → logprob: -16.599079132080078

Token 388: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00082309142453596
    2. 'int' → logprob: -7.125823020935059
    3. '(' → logprob: -11.250823020935059
    4. '=int' → logprob: -13.125823020935059
    5. '<int' → logprob: -13.750823020935059
    6. '```' → logprob: -13.750823020935059
    7. '[int' → logprob: -14.125823020935059
    8. ' int' → logprob: -15.000823020935059
    9. ',int' → logprob: -15.125823020935059
    10. ' (' → logprob: -16.500823974609375

Token 389: ',' (ID: 11)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.082626461982727
    2. ',input' → logprob: -1.332626461982727
    3. ',' → logprob: -1.707626461982727
    4. ')' → logprob: -1.832626461982727
    5. 'input' → logprob: -3.8326263427734375
    6. '()' → logprob: -4.0826263427734375
    7. '(input' → logprob: -4.5826263427734375
    8. '(),' → logprob: -5.7076263427734375
    9. ' input' → logprob: -6.2076263427734375
    10. '(' → logprob: -7.2076263427734375

Token 390: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0015023599844425917
    2. ' input' → logprob: -6.501502513885498
    3. ')' → logprob: -18.376502990722656
    4. '(input' → logprob: -19.251502990722656
    5. '=input' → logprob: -19.876502990722656
    6. ',input' → logprob: -19.876502990722656
    7. ' ' → logprob: -21.126502990722656
    8. '	input' → logprob: -21.626502990722656
    9. '[input' → logprob: -21.626502990722656
    10. '   ' → logprob: -21.751502990722656

Token 391: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.088346359931165e-07
    2. '()' → logprob: -14.125000953674316
    3. ' ().' → logprob: -16.375
    4. '(' → logprob: -17.125
    5. ')' → logprob: -17.5
    6. '()
' → logprob: -18.125
    7. '.split' → logprob: -18.5
    8. '())' → logprob: -19.25
    9. '.readline' → logprob: -19.5
    10. 'split' → logprob: -19.5

Token 392: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.572941179503687e-05
    2. 'strip' → logprob: -10.000045776367188
    3. ' split' → logprob: -16.250045776367188
    4. 'rstrip' → logprob: -16.375045776367188
    5. '(split' → logprob: -17.875045776367188
    6. '.split' → logprob: -19.875045776367188
    7. '().' → logprob: -20.500045776367188
    8. 'spl' → logprob: -20.875045776367188
    9. ')' → logprob: -22.125045776367188
    10. '```' → logprob: -23.125045776367188

Token 393: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003602917306125164
    2. ')
' → logprob: -5.628602981567383
    3. '   ' → logprob: -13.878602981567383
    4. ' )' → logprob: -14.003602981567383
    5. '())' → logprob: -14.628602981567383
    6. '()' → logprob: -15.378602981567383
    7. ')
' → logprob: -16.003602981567383
    8. ')

' → logprob: -16.503602981567383
    9. ')**' → logprob: -17.503602981567383
    10. '())
' → logprob: -17.503602981567383

Token 394: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021688169799745083
    2. 'pos' → logprob: -6.502168655395508
    3. 'idx' → logprob: -7.877168655395508
    4. 'i' → logprob: -9.877168655395508
    5. ' pos' → logprob: -9.877168655395508
    6. '    
' → logprob: -10.127168655395508
    7. 'l' → logprob: -10.252168655395508
    8. ' idx' → logprob: -10.877168655395508
    9. '```' → logprob: -11.127168655395508
    10. 'ind' → logprob: -11.252168655395508

Token 395: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7967070937156677
    2. 'pos' → logprob: -0.9217070937156677
    3. 'idx' → logprob: -2.4217071533203125
    4. '#' (adapté à ' #') → logprob: -3.4217071533203125
    5. 'res' → logprob: -4.1717071533203125
    6. 'li' → logprob: -5.5467071533203125
    7. 'ans' → logprob: -5.5467071533203125
    8. 'left' → logprob: -6.1717071533203125
    9. 'ind' → logprob: -6.4217071533203125
    10. 'i' → logprob: -7.5467071533203125

Token 396: ' Trou' (ID: 58947)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6120245456695557
    2. 'pos' → logprob: -1.4870245456695557
    3. 'res' → logprob: -2.1120245456695557
    4. 'idx' → logprob: -2.9870245456695557
    5. 'ans' → logprob: -3.6120245456695557
    6. '#' → logprob: -4.112024307250977
    7. 'best' → logprob: -5.862024307250977
    8. 'left' → logprob: -6.362024307250977
    9. 'import' → logprob: -6.612024307250977
    10. 'ind' → logprob: -6.737024307250977

Token 397: 'ver' (ID: 445)
  Prédit: 've'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 've' → logprob: -0.36315250396728516
    2. 'te' → logprob: -1.9881525039672852
    3. 'v' → logprob: -2.488152503967285
    4. 'ver' → logprob: -3.363152503967285
    5. '   ' → logprob: -4.113152503967285
    6. 'tes' → logprob: -4.613152503967285
    7. 'vez' → logprob: -4.863152503967285
    8. 'ter' → logprob: -5.863152503967285
    9. 'vant' → logprob: -5.863152503967285
    10. 'ves' → logprob: -6.738152503967285

Token 398: ' la' (ID: 557)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.023466166108846664
    2. 'idx' → logprob: -3.773466110229492
    3. '   ' → logprob: -9.023466110229492
    4. 'ind' → logprob: -10.648466110229492
    5. 'index' → logprob: -10.648466110229492
    6. 'insert' → logprob: -10.648466110229492
    7. ' pos' → logprob: -11.523466110229492
    8. '#' → logprob: -11.898466110229492
    9. 'p' → logprob: -12.648466110229492
    10. ' idx' → logprob: -12.773466110229492

Token 399: ' position' (ID: 4010)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.004103692714124918
    2. 'idx' → logprob: -5.504103660583496
    3. 'insert' → logprob: -11.629103660583496
    4. 'index' → logprob: -12.129103660583496
    5. '#' → logprob: -12.504103660583496
    6. 'ind' → logprob: -13.129103660583496
    7. 'd' → logprob: -13.879103660583496
    8. 'position' → logprob: -14.379103660583496
    9. 'val' → logprob: -14.504103660583496
    10. 'p' → logprob: -14.629103660583496

Token 400: ' d' (ID: 272)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.12595921754837036
    2. ' pos' → logprob: -2.3759591579437256
    3. '   ' → logprob: -4.500959396362305
    4. 'idx' → logprob: -4.500959396362305
    5. ' idx' → logprob: -6.125959396362305
    6. ' of' → logprob: -8.250959396362305
    7. 'insert' → logprob: -8.625959396362305
    8. 'in' → logprob: -8.875959396362305
    9. 'of' → logprob: -9.250959396362305
    10. 'dp' → logprob: -9.875959396362305

Token 401: ''in' (ID: 17942)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.7562791705131531
    2. 'D' → logprob: -0.8812791705131531
    3. ' bis' → logprob: -2.756279230117798
    4. ' D' → logprob: -3.506279230117798
    5. ' =' → logprob: -5.256278991699219
    6. '   ' → logprob: -6.006278991699219
    7. 'import' → logprob: -6.256278991699219
    8. 'b' → logprob: -6.631278991699219
    9. '#' → logprob: -6.631278991699219
    10. '(D' → logprob: -6.756278991699219

Token 402: 'sertion' (ID: 21747)
  Prédit: 'sertion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sertion' → logprob: -0.029990218579769135
    2. 'sert' → logprob: -3.5299901962280273
    3. 'ter' → logprob: -8.654990196228027
    4. 'bis' → logprob: -10.654990196228027
    5. 't' → logprob: -10.779990196228027
    6. ' bis' → logprob: -12.154990196228027
    7. 'ser' → logprob: -12.279990196228027
    8. 's' → logprob: -13.029990196228027
    9. 'dex' → logprob: -13.404990196228027
    10. ' insertion' → logprob: -13.654990196228027

Token 403: ' de' (ID: 334)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.9465053677558899
    2. ' dans' → logprob: -1.5715053081512451
    3. '   ' → logprob: -2.321505308151245
    4. 'idx' → logprob: -3.196505308151245
    5. 'in' → logprob: -3.196505308151245
    6. ' =' → logprob: -3.321505308151245
    7. 'unique' → logprob: -3.571505308151245
    8. 'pos' → logprob: -3.696505308151245
    9. '(' → logprob: -3.821505308151245
    10. ' (' → logprob: -4.321505546569824

Token 404: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0127636743709445
    2. ' D' → logprob: -4.387763500213623
    3. 'unique' → logprob: -8.512763977050781
    4. ' unique' → logprob: -9.887763977050781
    5. '(unique' → logprob: -13.762763977050781
    6. '(D' → logprob: -14.512763977050781
    7. ' ' → logprob: -15.137763977050781
    8. '	D' → logprob: -15.387763977050781
    9. ',D' → logprob: -16.51276397705078
    10. '[D' → logprob: -17.13776397705078

Token 405: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11749978363513947
    2. ' dans' → logprob: -3.242499828338623
    3. '=' → logprob: -3.492499828338623
    4. '   ' → logprob: -3.492499828338623
    5. 'dans' → logprob: -5.367499828338623
    6. ' in' → logprob: -5.867499828338623
    7. 'in' → logprob: -6.867499828338623
    8. ' unique' → logprob: -7.367499828338623
    9. 'unique' → logprob: -7.742499828338623
    10. 'idx' → logprob: -7.742499828338623

Token 406: ' unique' (ID: 5746)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.014163747429847717
    2. ' unique' → logprob: -4.264163970947266
    3. '(unique' → logprob: -15.389163970947266
    4. '_unique' → logprob: -17.514163970947266
    5. '.unique' → logprob: -18.389163970947266
    6. ' ' → logprob: -19.889163970947266
    7. 'the' → logprob: -20.389163970947266
    8. '   ' → logprob: -20.639163970947266
    9. 'Unique' → logprob: -20.639163970947266
    10. ' уник' → logprob: -20.639163970947266

Token 407: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -2.6895233531831764e-05
    2. 'unique' → logprob: -11.25002670288086
    3. '_val' → logprob: -12.75002670288086
    4. '(unique' → logprob: -12.75002670288086
    5. '_unique' → logprob: -13.12502670288086
    6. '_' → logprob: -13.12502670288086
    7. 'vals' → logprob: -13.50002670288086
    8. '(_' → logprob: -14.12502670288086
    9. '_values' → logprob: -15.12502670288086
    10. ' _' → logprob: -15.12502670288086

Token 408: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03475451469421387
    2. ' pos' → logprob: -4.284754753112793
    3. 'pos' → logprob: -4.284754753112793
    4. 'idx' → logprob: -5.659754753112793
    5. ' idx' → logprob: -6.034754753112793
    6. ' =' → logprob: -8.784754753112793
    7. '(pos' → logprob: -9.159754753112793
    8. '	pos' → logprob: -9.159754753112793
    9. ',' → logprob: -9.534754753112793
    10. 'in' → logprob: -10.034754753112793

Token 409: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05524049326777458
    2. 'pos' → logprob: -3.0552403926849365
    3. 'idx' → logprob: -5.680240631103516
    4. ' pos' → logprob: -6.055240631103516
    5. ' idx' → logprob: -8.180240631103516
    6. ' =' → logprob: -8.680240631103516
    7. '	pos' → logprob: -8.930240631103516
    8. ',' → logprob: -9.680240631103516
    9. '(pos' → logprob: -9.805240631103516
    10. 'in' → logprob: -10.430240631103516

Token 410: ' idx' (ID: 14016)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.17475326359272003
    2. 'idx' (adapté à ' idx') → logprob: -1.9247533082962036
    3. ' pos' → logprob: -4.924753189086914
    4. ' idx' → logprob: -5.174753189086914
    5. '   ' → logprob: -6.674753189086914
    6. 'ind' → logprob: -8.924753189086914
    7. 'index' → logprob: -9.674753189086914
    8. 'insert' → logprob: -11.299753189086914
    9. ' ind' → logprob: -11.924753189086914
    10. 'p' → logprob: -11.924753189086914

Token 411: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031777136027812958
    2. '=' → logprob: -5.753177642822266
    3. ' ' → logprob: -18.503177642822266
    4. ' =
' → logprob: -18.503177642822266
    5. '=b' → logprob: -19.378177642822266
    6. ')' → logprob: -19.628177642822266
    7. ' ' → logprob: -19.753177642822266
    8. '   ' → logprob: -20.253177642822266
    9. 's' → logprob: -20.503177642822266
    10. '=int' → logprob: -21.128177642822266

Token 412: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.07889000326395035
    2. ' bis' → logprob: -2.578890085220337
    3. 'b' → logprob: -15.328889846801758
    4. 'Bis' → logprob: -17.953889846801758
    5. '	b' → logprob: -19.328889846801758
    6. 'bs' → logprob: -20.578889846801758
    7. 'bi' → logprob: -20.953889846801758
    8. ' ' → logprob: -21.328889846801758
    9. '0' → logprob: -21.703889846801758
    10. '-b' → logprob: -21.828889846801758

Token 413: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.7012466192245483
    2. 'ect' → logprob: -0.7012466192245483
    3. 'sect' → logprob: -4.826246738433838
    4. 'lect' → logprob: -10.95124626159668
    5. 'cut' → logprob: -12.07624626159668
    6. '```' → logprob: -12.20124626159668
    7. 'с' → logprob: -12.32624626159668
    8. '<' → logprob: -12.57624626159668
    9. '#' → logprob: -13.45124626159668
    10. 's' → logprob: -13.45124626159668

Token 414: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.00010914575977949426
    2. '.' → logprob: -9.25010871887207
    3. '_left' → logprob: -11.37510871887207
    4. '.ins' → logprob: -13.75010871887207
    5. '_right' → logprob: -15.00010871887207
    6. ' .' → logprob: -16.87510871887207
    7. '.unique' → logprob: -17.00010871887207
    8. '._' → logprob: -17.62510871887207
    9. '.left' → logprob: -18.00010871887207
    10. '_unique' → logprob: -18.25010871887207

Token 415: 'is' (ID: 276)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.03965074196457863
    2. 'sect' → logprob: -3.7896506786346436
    3. 'ct' → logprob: -4.164650917053223
    4. 'is' → logprob: -8.039650917053223
    5. 'ist' → logprob: -8.789650917053223
    6. 's' → logprob: -10.164650917053223
    7. 'ict' → logprob: -10.414650917053223
    8. 'ort' → logprob: -10.664650917053223
    9. 'bis' → logprob: -10.664650917053223
    10. '```' → logprob: -10.789650917053223

Token 416: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.029769811779260635
    2. 'ct' → logprob: -3.5297698974609375
    3. 'sect' → logprob: -11.654769897460938
    4. 'ort' → logprob: -12.029769897460938
    5. 't' → logprob: -13.529769897460938
    6. 'с' → logprob: -15.154769897460938
    7. 'rect' → logprob: -15.154769897460938
    8. 'e' → logprob: -15.154769897460938
    9. 'ects' → logprob: -15.154769897460938
    10. 'n' → logprob: -15.279769897460938

Token 417: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.006885631009936333
    2. 'unique' → logprob: -5.381885528564453
    3. 'left' → logprob: -6.756885528564453
    4. '(unique' → logprob: -7.131885528564453
    5. '_right' → logprob: -8.131885528564453
    6. '_unique' → logprob: -12.506885528564453
    7. 'Left' → logprob: -13.756885528564453
    8. 'right' → logprob: -14.131885528564453
    9. 'uni' → logprob: -14.756885528564453
    10. ' unique' → logprob: -15.006885528564453

Token 418: '(unique' (ID: 110064)
  Prédit: '(unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(unique' → logprob: -3.666993507067673e-05
    2. 'unique' → logprob: -10.250036239624023
    3. ' (' → logprob: -14.375036239624023
    4. '(' → logprob: -14.750036239624023
    5. ' unique' → logprob: -16.000036239624023
    6. '(
' → logprob: -17.750036239624023
    7. '_unique' → logprob: -19.250036239624023
    8. '   ' → logprob: -19.750036239624023
    9. '.unique' → logprob: -19.750036239624023
    10. '```' → logprob: -19.750036239624023

Token 419: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.0002469158498570323
    2. '(unique' → logprob: -8.62524700164795
    3. '_val' → logprob: -10.62524700164795
    4. '_unique' → logprob: -10.75024700164795
    5. 'unique' → logprob: -12.12524700164795
    6. '(_' → logprob: -12.37524700164795
    7. '_values' → logprob: -13.37524700164795
    8. 'vals' → logprob: -13.37524700164795
    9. ' _' → logprob: -13.50024700164795
    10. '_' → logprob: -13.87524700164795

Token 420: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.576873758807778e-05
    2. ',D' → logprob: -10.375075340270996
    3. ' ,' → logprob: -10.750075340270996
    4. '(unique' → logprob: -11.250075340270996
    5. '(D' → logprob: -11.750075340270996
    6. '(' → logprob: -13.750075340270996
    7. ',(' → logprob: -14.875075340270996
    8. 'unique' → logprob: -15.500075340270996
    9. '   ' → logprob: -15.750075340270996
    10. ',d' → logprob: -15.875075340270996

Token 421: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.006715370807796717
    2. ' D' → logprob: -5.006715297698975
    3. '   ' → logprob: -18.506715774536133
    4. ' ' → logprob: -18.506715774536133
    5. '	D' → logprob: -18.631715774536133
    6. '(D' → logprob: -18.756715774536133
    7. '_D' → logprob: -20.756715774536133
    8. ')' → logprob: -21.506715774536133
    9. ',D' → logprob: -21.881715774536133
    10. 'd' → logprob: -21.881715774536133

Token 422: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9623810658231378e-05
    2. ')
' → logprob: -11.375020027160645
    3. ' )' → logprob: -11.875020027160645
    4. '   ' → logprob: -13.750020027160645
    5. ')

' → logprob: -17.250019073486328
    6. '))' → logprob: -17.250019073486328
    7. ')`' → logprob: -17.750019073486328
    8. ' ' → logprob: -17.875019073486328
    9. ')#' → logprob: -18.875019073486328
    10. ')**' → logprob: -19.125019073486328

Token 423: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0018666447140276432
    2. '   ' → logprob: -6.751866817474365
    3. 'res' → logprob: -8.001866340637207
    4. ' candidates' → logprob: -8.751866340637207
    5. 'cand' → logprob: -9.501866340637207
    6. 'candidate' → logprob: -10.126866340637207
    7. 'best' → logprob: -10.126866340637207
    8. 'ans' → logprob: -11.376866340637207
    9. '_candidates' → logprob: -12.126866340637207
    10. 'possible' → logprob: -12.126866340637207

Token 424: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06752797216176987
    2. 'res' → logprob: -2.817528009414673
    3. 'best' → logprob: -5.567527770996094
    4. 'ans' → logprob: -6.942527770996094
    5. 'candidate' → logprob: -8.067527770996094
    6. 'cand' → logprob: -8.692527770996094
    7. 'answers' → logprob: -9.442527770996094
    8. 'answer' → logprob: -9.567527770996094
    9. '   ' → logprob: -10.442527770996094
    10. 'result' → logprob: -10.567527770996094

Token 425: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023245826363563538
    2. '=' → logprob: -3.7732458114624023
    3. '=[]' → logprob: -16.39824676513672
    4. ' ' → logprob: -16.64824676513672
    5. '_' → logprob: -17.02324676513672
    6. 's' → logprob: -17.52324676513672
    7. ':' → logprob: -17.64824676513672
    8. ' ' → logprob: -17.64824676513672
    9. '_candidates' → logprob: -17.64824676513672
    10. '=[' → logprob: -18.02324676513672

Token 426: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.20154528319835663
    2. '[]
' → logprob: -1.701545238494873
    3. '[]

' → logprob: -8.951545715332031
    4. 'set' → logprob: -13.201545715332031
    5. '[' → logprob: -15.201545715332031
    6. '[]}' → logprob: -15.576545715332031
    7. ' []' → logprob: -15.951545715332031
    8. ' []
' → logprob: -16.32654571533203
    9. '[])
' → logprob: -17.70154571533203
    10. '[])' → logprob: -17.82654571533203

Token 427: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.016508890315890312
    2. '   ' → logprob: -4.766509056091309
    3. 'for' → logprob: -5.016509056091309
    4. ' if' → logprob: -7.516509056091309
    5. '#' → logprob: -7.766509056091309
    6. 'tokens' → logprob: -8.766509056091309
    7. '```' → logprob: -9.766509056091309
    8. '	if' → logprob: -10.391509056091309
    9. '    
' → logprob: -11.141509056091309
    10. ' for' → logprob: -12.766509056091309

Token 428: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014718687161803246
    2. 'for' → logprob: -4.264718532562256
    3. '#' (adapté à ' #') → logprob: -7.514718532562256
    4. '   ' → logprob: -11.639719009399414
    5. ' if' → logprob: -13.639719009399414
    6. '
' → logprob: -17.139719009399414
    7. '#if' → logprob: -17.389719009399414
    8. '	if' → logprob: -17.639719009399414
    9. '```' → logprob: -17.889719009399414
    10. 'c' → logprob: -18.014719009399414

Token 429: ' Vale' (ID: 55242)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03873807191848755
    2. 'for' → logprob: -3.2887380123138428
    3. '#' → logprob: -7.288738250732422
    4. '   ' → logprob: -11.663738250732422
    5. ' if' → logprob: -13.038738250732422
    6. 'c' → logprob: -13.663738250732422
    7. '
' → logprob: -15.538738250732422
    8. 'indices' → logprob: -15.663738250732422
    9. '    
' → logprob: -15.788738250732422
    10. 'If' → logprob: -16.163738250732422

Token 430: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.07907430082559586
    2. 'urs' → logprob: -2.5790743827819824
    3. 'if' → logprob: -9.329073905944824
    4. '#' → logprob: -10.079073905944824
    5. 'u' → logprob: -10.079073905944824
    6. 'for' → logprob: -12.454073905944824
    7. '   ' → logprob: -12.829073905944824
    8. 'eurs' → logprob: -12.954073905944824
    9. 'rs' → logprob: -13.954073905944824
    10. 'ure' → logprob: -14.954073905944824

Token 431: ' immédiatement' (ID: 100743)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7171096205711365
    2. 'if' → logprob: -0.8421096205711365
    3. ' if' → logprob: -3.2171096801757812
    4. 'for' → logprob: -3.5921096801757812
    5. 'si' → logprob: -5.467109680175781
    6. '   ' → logprob: -5.592109680175781
    7. ' for' → logprob: -6.467109680175781
    8. 'es' → logprob: -6.467109680175781
    9. ' ' → logprob: -7.842109680175781
    10. ' si' → logprob: -8.092109680175781

Token 432: ' >=' (ID: 5064)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.0612456314265728
    2. 'avant' → logprob: -2.9362456798553467
    3. 'g' → logprob: -5.186245441436768
    4. 'vo' → logprob: -8.811245918273926
    5. '```' → logprob: -9.061245918273926
    6. ' à' → logprob: -9.061245918273926
    7. 'a' → logprob: -9.436245918273926
    8. 'inf' → logprob: -9.561245918273926
    9. 'au' → logprob: -10.186245918273926
    10. '#' → logprob: -10.311245918273926

Token 433: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.014977779239416122
    2. ' D' → logprob: -4.764977931976318
    3. 'unique' → logprob: -5.639977931976318
    4. ' unique' → logprob: -7.389977931976318
    5. '   ' → logprob: -7.639977931976318
    6. ' ' → logprob: -7.764977931976318
    7. 'if' → logprob: -8.38997745513916
    8. '=D' → logprob: -8.63997745513916
    9. ' =' → logprob: -8.76497745513916
    10. 'idx' → logprob: -9.01497745513916

Token 434: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05586805194616318
    2. '   ' → logprob: -3.055868148803711
    3. ' if' → logprob: -4.930868148803711
    4. ',' → logprob: -11.430868148803711
    5. ':' → logprob: -11.680868148803711
    6. '	if' → logprob: -11.930868148803711
    7. '
' → logprob: -13.180868148803711
    8. ' ' → logprob: -13.555868148803711
    9. '    
' → logprob: -13.680868148803711
    10. '```' → logprob: -13.805868148803711

Token 435: 'ou' (ID: 283)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001134858699515462
    2. ' if' → logprob: -7.126134872436523
    3. '   ' → logprob: -8.251134872436523
    4. ')' → logprob: -9.751134872436523
    5. ')
' → logprob: -12.376134872436523
    6. '
' → logprob: -12.876134872436523
    7. '):
' → logprob: -13.626134872436523
    8. '),' → logprob: -14.251134872436523
    9. '```' → logprob: -14.251134872436523
    10. '):' → logprob: -14.376134872436523

Token 436: ' ég' (ID: 33150)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0731416866183281
    2. ' idx' → logprob: -2.823141574859619
    3. 'exact' → logprob: -5.073141574859619
    4. 'unique' → logprob: -5.823141574859619
    5. ')' → logprob: -7.948141574859619
    6. 'equal' → logprob: -8.073142051696777
    7. 'à' → logprob: -8.073142051696777
    8. ' unique' → logprob: -8.823142051696777
    9. 'index' → logprob: -9.198142051696777
    10. '=' → logprob: -9.198142051696777

Token 437: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -6.511406809295295e-06
    2. 'al' → logprob: -12.125006675720215
    3. 'uale' → logprob: -14.875006675720215
    4. 'але' → logprob: -15.500006675720215
    5. 'aule' → logprob: -16.1250057220459
    6. 'a' → logprob: -16.2500057220459
    7. 'ales' → logprob: -16.2500057220459
    8. '```' → logprob: -17.0000057220459
    9. 'alez' → logprob: -17.1250057220459
    10. 'alee' → logprob: -17.7500057220459

Token 438: ' à' (ID: 1221)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17542549967765808
    2. ')' → logprob: -1.9254255294799805
    3. ' if' → logprob: -4.9254255294799805
    4. '   ' → logprob: -5.5504255294799805
    5. '):' → logprob: -6.8004255294799805
    6. 'si' → logprob: -7.3004255294799805
    7. 'à' → logprob: -7.4254255294799805
    8. ' à' → logprob: -8.17542552947998
    9. 's' → logprob: -8.42542552947998
    10. ',' → logprob: -8.55042552947998

Token 439: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.3220745027065277
    2. 'unique' → logprob: -2.0720744132995605
    3. ')' → logprob: -2.1970744132995605
    4. ' D' → logprob: -4.3220744132995605
    5. ' unique' → logprob: -4.5720744132995605
    6. 'idx' → logprob: -5.6970744132995605
    7. ' )' → logprob: -5.9470744132995605
    8. ')
' → logprob: -6.6970744132995605
    9. ' idx' → logprob: -6.8220744132995605
    10. '')' → logprob: -7.1970744132995605

Token 440: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2955954074859619
    2. 'if' → logprob: -2.295595407485962
    3. ')
' → logprob: -2.545595407485962
    4. '   ' → logprob: -2.795595407485962
    5. ' if' → logprob: -4.295595169067383
    6. '):' → logprob: -6.545595169067383
    7. '):
' → logprob: -7.795595169067383
    8. '),' → logprob: -9.920595169067383
    9. ',' → logprob: -10.045595169067383
    10. ')**' → logprob: -10.045595169067383

Token 441: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05663478747010231
    2. ' if' → logprob: -3.1816349029541016
    3. '   ' → logprob: -4.306634902954102
    4. '```' → logprob: -10.681634902954102
    5. '	if' → logprob: -11.056634902954102
    6. 'tokens' → logprob: -11.931634902954102
    7. '    
' → logprob: -12.556634902954102
    8. 'token' → logprob: -12.931634902954102
    9. 'for' → logprob: -12.931634902954102
    10. ' ' → logprob: -13.181634902954102

Token 442: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -4.429896944202483e-05
    2. ' if' → logprob: -10.500043869018555
    3. '   ' → logprob: -11.000043869018555
    4. '```' → logprob: -19.250043869018555
    5. 'If' → logprob: -20.000043869018555
    6. '	if' → logprob: -20.125043869018555
    7. ' ' → logprob: -21.125043869018555
    8. '
' → logprob: -21.500043869018555
    9. 'for' → logprob: -21.500043869018555
    10. 'i' → logprob: -22.375043869018555

Token 443: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.5759404897689819
    2. 'idx' → logprob: -0.8259404897689819
    3. '	idx' → logprob: -14.325940132141113
    4. '(idx' → logprob: -15.700940132141113
    5. '   ' → logprob: -16.07594108581543
    6. ' ' → logprob: -17.07594108581543
    7. 'index' → logprob: -17.57594108581543
    8. '_idx' → logprob: -17.82594108581543
    9. '[idx' → logprob: -18.45094108581543
    10. '.idx' → logprob: -18.82594108581543

Token 444: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10129009932279587
    2. ' <' → logprob: -2.351289987564087
    3. '<len' → logprob: -6.851290225982666
    4. '<n' → logprob: -11.101289749145508
    5. '<size' → logprob: -12.351289749145508
    6. '<num' → logprob: -12.976289749145508
    7. '<N' → logprob: -14.976289749145508
    8. ' ' → logprob: -15.101289749145508
    9. '!=' → logprob: -15.226289749145508
    10. '<int' → logprob: -15.476289749145508

Token 445: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.5491004129871726e-05
    2. ' len' → logprob: -10.000045776367188
    3. '(len' → logprob: -20.750045776367188
    4. '=len' → logprob: -21.000045776367188
    5. '   ' → logprob: -22.125045776367188
    6. '[len' → logprob: -22.500045776367188
    7. '	len' → logprob: -23.500045776367188
    8. '<len' → logprob: -24.000045776367188
    9. 'length' → logprob: -24.250045776367188
    10. ',len' → logprob: -24.625045776367188

Token 446: '(unique' (ID: 110064)
  Prédit: '(unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(unique' → logprob: -0.0015122429467737675
    2. 'unique' → logprob: -6.501512050628662
    3. ' unique' → logprob: -11.87651252746582
    4. '(' → logprob: -12.87651252746582
    5. ' (' → logprob: -15.50151252746582
    6. '_unique' → logprob: -16.12651252746582
    7. '(
' → logprob: -17.50151252746582
    8. ')' → logprob: -17.62651252746582
    9. 'uni' → logprob: -17.87651252746582
    10. 'Unique' → logprob: -18.87651252746582

Token 447: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -7.226628895296017e-06
    2. 'unique' → logprob: -12.750007629394531
    3. 'vals' → logprob: -13.250007629394531
    4. '(unique' → logprob: -13.875007629394531
    5. '_unique' → logprob: -15.125007629394531
    6. '(vals' → logprob: -15.125007629394531
    7. ')' → logprob: -15.375007629394531
    8. '_' → logprob: -15.625007629394531
    9. ')_' → logprob: -16.25000762939453
    10. '(_' → logprob: -16.25000762939453

Token 448: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1708398163318634
    2. '):' → logprob: -1.920839786529541
    3. ')' → logprob: -4.670839786529541
    4. ' and' → logprob: -6.920839786529541
    5. 'and' → logprob: -9.4208402633667
    6. ':' → logprob: -10.0458402633667
    7. '):
' → logprob: -10.4208402633667
    8. '   ' → logprob: -10.6708402633667
    9. ':
' → logprob: -11.2958402633667
    10. ' ):
' → logprob: -11.5458402633667

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09979991614818573
    2. ' candidates' → logprob: -3.099799871444702
    3. 'c' → logprob: -3.599799871444702
    4. '   ' → logprob: -3.849799871444702
    5. 'val' → logprob: -8.099800109863281
    6. ' c' → logprob: -8.349800109863281
    7. ' val' → logprob: -8.474800109863281
    8. '	c' → logprob: -8.724800109863281
    9. '```' → logprob: -8.974800109863281
    10. ' if' → logprob: -10.349800109863281

Token 450: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.5195274949073792
    2. ' val' → logprob: -1.1445274353027344
    3. 'c' → logprob: -2.6445274353027344
    4. ' candidates' → logprob: -4.769527435302734
    5. 'cand' → logprob: -5.644527435302734
    6. '   ' → logprob: -6.394527435302734
    7. 'candidate' → logprob: -6.644527435302734
    8. 'v' → logprob: -8.394527435302734
    9. ' c' → logprob: -8.519527435302734
    10. ' candidate' → logprob: -8.769527435302734

Token 451: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759448409080505
    2. ' =' → logprob: -0.8259448409080505
    3. '_candidates' → logprob: -12.700944900512695
    4. 's' → logprob: -13.700944900512695
    5. '   ' → logprob: -14.450944900512695
    6. ')' → logprob: -15.325944900512695
    7. ' ' → logprob: -15.950944900512695
    8. '＝' → logprob: -16.575944900512695
    9. ' ' → logprob: -17.075944900512695
    10. '_val' → logprob: -17.075944900512695

Token 452: ' unique' (ID: 5746)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.07888989895582199
    2. ' unique' → logprob: -2.578889846801758
    3. '   ' → logprob: -16.578889846801758
    4. '(unique' → logprob: -16.828889846801758
    5. '_unique' → logprob: -17.203889846801758
    6. '.unique' → logprob: -18.203889846801758
    7. 'Unique' → logprob: -19.953889846801758
    8. 'uni' → logprob: -20.828889846801758
    9. 'uniq' → logprob: -21.078889846801758
    10. ' уник' → logprob: -21.203889846801758

Token 453: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -8.470901229884475e-05
    2. 'vals' → logprob: -9.50008487701416
    3. 's' → logprob: -11.62508487701416
    4. 'Vals' → logprob: -15.62508487701416
    5. '_val' → logprob: -16.125083923339844
    6. '_' → logprob: -16.125083923339844
    7. '_vars' → logprob: -16.125083923339844
    8. '_s' → logprob: -16.875083923339844
    9. ' vals' → logprob: -17.250083923339844
    10. 'als' → logprob: -17.250083923339844

Token 454: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.45848218582978e-06
    2. 'idx' → logprob: -13.50000286102295
    3. '[' → logprob: -14.50000286102295
    4. ' [' → logprob: -15.12500286102295
    5. '   ' → logprob: -16.750001907348633
    6. ' idx' → logprob: -16.750001907348633
    7. '
' → logprob: -17.750001907348633
    8. '(idx' → logprob: -18.500001907348633
    9. '[
' → logprob: -18.500001907348633
    10. '[val' → logprob: -18.500001907348633

Token 455: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.42836982011795044
    2. ')' → logprob: -1.4283697605133057
    3. ']' → logprob: -2.8033697605133057
    4. ']
' → logprob: -3.0533697605133057
    5. ')
' → logprob: -8.553369522094727
    6. '   ' → logprob: -8.553369522094727
    7. ')]' → logprob: -8.678369522094727
    8. ' )
' → logprob: -8.803369522094727
    9. '])' → logprob: -9.928369522094727
    10. '])
' → logprob: -10.053369522094727

Token 456: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41637030243873596
    2. '       ' → logprob: -1.4163702726364136
    3. ' if' → logprob: -2.916370391845703
    4. 'if' → logprob: -3.666370391845703
    5. ' candidates' → logprob: -4.291370391845703
    6. '
' → logprob: -6.291370391845703
    7. 'c' → logprob: -7.416370391845703
    8. '    
' → logprob: -7.416370391845703
    9. '        
' → logprob: -7.666370391845703
    10. '_candidates' → logprob: -8.791370391845703

Token 457: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4465063810348511
    2. 'c' → logprob: -1.571506381034851
    3. '   ' → logprob: -2.0715065002441406
    4. ' if' → logprob: -4.446506500244141
    5. 'pos' → logprob: -4.446506500244141
    6. ' candidates' → logprob: -6.321506500244141
    7. '       ' → logprob: -7.696506500244141
    8. 'positions' → logprob: -8.94650650024414
    9. 'cand' → logprob: -8.94650650024414
    10. 'diff' → logprob: -9.32150650024414

Token 458: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0011604580795392394
    2. ' check' → logprob: -7.376160621643066
    3. 'val' → logprob: -7.626160621643066
    4. 'len' → logprob: -11.126160621643066
    5. '   ' → logprob: -11.251160621643066
    6. 'pos' → logprob: -11.626160621643066
    7. 'any' → logprob: -12.626160621643066
    8. '  ' → logprob: -13.626160621643066
    9. 'l' → logprob: -14.001160621643066
    10. ' ' → logprob: -14.126160621643066

Token 459: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -8.578184497309849e-05
    2. 'in' → logprob: -9.375085830688477
    3. '(pos' → logprob: -14.125085830688477
    4. 'In' → logprob: -16.625085830688477
    5. 'pos' → logprob: -17.125085830688477
    6. ' in' → logprob: -17.375085830688477
    7. '_' → logprob: -17.625085830688477
    8. '_pos' → logprob: -18.375085830688477
    9. 'int' → logprob: -18.625085830688477
    10. ')' → logprob: -18.750085830688477

Token 460: '_range' (ID: 22022)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132769465446472
    2. '_range' → logprob: -1.313277006149292
    3. 'pos' → logprob: -12.188277244567871
    4. 'Range' → logprob: -12.438277244567871
    5. ' range' → logprob: -12.688277244567871
    6. 'rang' → logprob: -13.563277244567871
    7. 'r' → logprob: -13.938277244567871
    8. '	range' → logprob: -14.313277244567871
    9. 'check' → logprob: -16.438276290893555
    10. 'ranges' → logprob: -16.938276290893555

Token 461: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -4.596781946020201e-05
    2. '(' → logprob: -10.375045776367188
    3. ' (' → logprob: -11.750045776367188
    4. 'pos' → logprob: -12.250045776367188
    5. ',pos' → logprob: -14.625045776367188
    6. '(
' → logprob: -14.625045776367188
    7. ' pos' → logprob: -14.750045776367188
    8. '[pos' → logprob: -14.875045776367188
    9. '(val' → logprob: -15.000045776367188
    10. '(Pos' → logprob: -17.750045776367188

Token 462: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -4.4849443838757e-06
    2. 'dict' → logprob: -12.625004768371582
    3. '_DICT' → logprob: -14.000004768371582
    4. '_dic' → logprob: -15.375004768371582
    5. '_' → logprob: -17.875003814697266
    6. 's' → logprob: -18.125003814697266
    7. '[' → logprob: -18.250003814697266
    8. 'Dict' → logprob: -18.625003814697266
    9. '[_' → logprob: -19.125003814697266
    10. '_[' → logprob: -19.125003814697266

Token 463: '[val' (ID: 162482)
  Prédit: '[val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[val' → logprob: -0.00016420685278717428
    2. '[pos' → logprob: -8.750164031982422
    3. '(val' → logprob: -12.250164031982422
    4. ',val' → logprob: -15.125164031982422
    5. 'val' → logprob: -15.375164031982422
    6. '[' → logprob: -15.500164031982422
    7. '[var' → logprob: -16.375164031982422
    8. '[col' → logprob: -16.375164031982422
    9. ' [' → logprob: -18.000164031982422
    10. ')[' → logprob: -18.375164031982422

Token 464: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026937808841466904
    2. ',val' → logprob: -3.65193772315979
    3. ' ,' → logprob: -7.401937961578369
    4. 'val' → logprob: -11.901937484741211
    5. '[val' → logprob: -12.026937484741211
    6. ',pos' → logprob: -12.526937484741211
    7. '   ' → logprob: -13.401937484741211
    8. ',[' → logprob: -13.526937484741211
    9. '(val' → logprob: -13.651937484741211
    10. ' val' → logprob: -13.901937484741211

Token 465: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01416398212313652
    2. ' l' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.014163970947266
    4. '	l' → logprob: -15.764163970947266
    5. '    ' → logprob: -19.514163970947266
    6. ')' → logprob: -20.514163970947266
    7. '(l' → logprob: -20.639163970947266
    8. ' ' → logprob: -20.764163970947266
    9. ',l' → logprob: -21.139163970947266
    10. '_l' → logprob: -21.264163970947266

Token 466: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015602122293785214
    2. ' ,' → logprob: -6.751560211181641
    3. ',r' → logprob: -7.876560211181641
    4. '   ' → logprob: -12.25156021118164
    5. ',
' → logprob: -13.37656021118164
    6. '       ' → logprob: -14.00156021118164
    7. ')' → logprob: -14.12656021118164
    8. '-' → logprob: -14.37656021118164
    9. '_,' → logprob: -16.00156021118164
    10. '+' → logprob: -16.00156021118164

Token 467: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.000553151941858232
    2. ' r' → logprob: -7.500553131103516
    3. '   ' → logprob: -15.750553131103516
    4. '	r' → logprob: -18.125553131103516
    5. ')' → logprob: -18.375553131103516
    6. '
' → logprob: -18.750553131103516
    7. ' ' → logprob: -18.875553131103516
    8. '    ' → logprob: -19.250553131103516
    9. ' ' → logprob: -19.750553131103516
    10. ',' → logprob: -19.750553131103516

Token 468: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12709441781044006
    2. '):' → logprob: -2.1270945072174072
    3. '):
' → logprob: -9.752094268798828
    4. '       ' → logprob: -10.002094268798828
    5. '   ' → logprob: -10.627094268798828
    6. ')' → logprob: -10.752094268798828
    7. ' ):
' → logprob: -11.502094268798828
    8. '           ' → logprob: -13.127094268798828
    9. ' ):' → logprob: -13.377094268798828
    10. ':' → logprob: -13.752094268798828

Token 469: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024751186720095575
    2. ' candidates' → logprob: -8.750247955322266
    3. '	       ' → logprob: -10.875247955322266
    4. '       ' → logprob: -11.250247955322266
    5. '               ' → logprob: -11.250247955322266
    6. 'c' → logprob: -11.375247955322266
    7. '```' → logprob: -12.000247955322266
    8. 'tokens' → logprob: -12.500247955322266
    9. '
' → logprob: -12.625247955322266
    10. ',' → logprob: -12.625247955322266

Token 470: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4851318895816803
    2. ' candidates' → logprob: -0.9851318597793579
    3. '   ' → logprob: -4.735131740570068
    4. '           ' → logprob: -6.360131740570068
    5. '	c' → logprob: -9.110132217407227
    6. ' c' → logprob: -9.360132217407227
    7. 'candidate' → logprob: -9.485132217407227
    8. '_candidates' → logprob: -9.735132217407227
    9. '               ' → logprob: -10.110132217407227
    10. '       ' → logprob: -10.485132217407227

Token 471: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011723674833774567
    2. '.' → logprob: -6.7511725425720215
    3. ' .' → logprob: -13.501172065734863
    4. '.app' → logprob: -15.126172065734863
    5. '.ap' → logprob: -15.876172065734863
    6. ').' → logprob: -16.50117301940918
    7. 'append' → logprob: -16.62617301940918
    8. '.add' → logprob: -16.62617301940918
    9. '.Append' → logprob: -16.75117301940918
    10. '   ' → logprob: -17.12617301940918

Token 472: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.4061242341995239
    2. 'abs' → logprob: -1.656124234199524
    3. '(val' → logprob: -2.1561241149902344
    4. 'val' → logprob: -3.6561241149902344
    5. ' abs' → logprob: -6.781124114990234
    6. ' val' → logprob: -9.156124114990234
    7. '(' → logprob: -10.656124114990234
    8. ' (' → logprob: -11.656124114990234
    9. '((' → logprob: -11.781124114990234
    10. '   ' → logprob: -12.531124114990234

Token 473: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -6.861651490908116e-05
    2. 'val' → logprob: -10.375068664550781
    3. '(D' → logprob: -10.625068664550781
    4. '(a' → logprob: -11.625068664550781
    5. '(' → logprob: -12.750068664550781
    6. ' val' → logprob: -14.625068664550781
    7. ',val' → logprob: -15.250068664550781
    8. '[val' → logprob: -15.375068664550781
    9. 'a' → logprob: -16.37506866455078
    10. 'D' → logprob: -16.50006866455078

Token 474: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18229790031909943
    2. '(D' → logprob: -2.557297945022583
    3. '(' → logprob: -3.057297945022583
    4. ' -' → logprob: -3.432297945022583
    5. '(val' → logprob: -5.182297706604004
    6. '-D' → logprob: -5.557297706604004
    7. ')' → logprob: -8.807297706604004
    8. 'val' → logprob: -9.557297706604004
    9. '-val' → logprob: -10.182297706604004
    10. 'D' → logprob: -10.807297706604004

Token 475: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -3.547789674485102e-05
    2. ' D' → logprob: -10.250035285949707
    3. ')' → logprob: -19.250036239624023
    4. '   ' → logprob: -19.625036239624023
    5. '	D' → logprob: -19.625036239624023
    6. '(D' → logprob: -20.750036239624023
    7. ' ' → logprob: -20.875036239624023
    8. '>D' → logprob: -21.875036239624023
    9. '```' → logprob: -22.000036239624023
    10. '.D' → logprob: -22.375036239624023

Token 476: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -6.539801688631997e-05
    2. ' ))' → logprob: -10.625065803527832
    3. ')' → logprob: -10.875065803527832
    4. '))
' → logprob: -11.250065803527832
    5. ')))' → logprob: -12.000065803527832
    6. '   ' → logprob: -13.125065803527832
    7. '       ' → logprob: -15.125065803527832
    8. '()))' → logprob: -15.375065803527832
    9. ' ' → logprob: -15.500065803527832
    10. ' ' → logprob: -16.125064849853516

Token 477: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0715973898768425
    2. '#' → logprob: -2.6965973377227783
    3. '```' → logprob: -6.946597576141357
    4. 'if' → logprob: -7.571597576141357
    5. '
' → logprob: -8.8215970993042
    6. '    
' → logprob: -11.0715970993042
    7. ' #' → logprob: -11.8215970993042
    8. ' ' → logprob: -12.9465970993042
    9. ' if' → logprob: -13.0715970993042
    10. '  ' → logprob: -13.3215970993042

Token 478: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.11085878312587738
    2. '   ' → logprob: -2.360858678817749
    3. 'if' → logprob: -4.735858917236328
    4. '```' → logprob: -6.360858917236328
    5. '
' → logprob: -10.360858917236328
    6. ' #' → logprob: -10.485858917236328
    7. ' ' → logprob: -11.610858917236328
    8. '    
' → logprob: -11.860858917236328
    9. ' if' → logprob: -12.110858917236328
    10. '  ' → logprob: -12.485858917236328

Token 479: ' Vale' (ID: 55242)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0008278522291220725
    2. '#' → logprob: -7.125827789306641
    3. ' if' → logprob: -11.12582778930664
    4. '   ' → logprob: -11.87582778930664
    5. 'val' → logprob: -13.75082778930664
    6. '
' → logprob: -15.50082778930664
    7. 'for' → logprob: -16.12582778930664
    8. 'si' → logprob: -16.37582778930664
    9. '```' → logprob: -16.50082778930664
    10. '#if' → logprob: -16.75082778930664

Token 480: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.0001438266917830333
    2. 'urs' → logprob: -9.000144004821777
    3. 'u' → logprob: -11.625144004821777
    4. 'r' → logprob: -12.250144004821777
    5. 'rs' → logprob: -12.750144004821777
    6. 'ure' → logprob: -13.250144004821777
    7. '#' → logprob: -14.625144004821777
    8. 'idx' → logprob: -14.625144004821777
    9. 'if' → logprob: -14.750144004821777
    10. '_idx' → logprob: -16.25014305114746

Token 481: ' immédiatement' (ID: 100743)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.6342108845710754
    2. '=' → logprob: -1.6342108249664307
    3. '   ' → logprob: -2.5092108249664307
    4. ' =' → logprob: -2.5092108249664307
    5. ' if' → logprob: -2.7592108249664307
    6. 'idx' → logprob: -3.7592108249664307
    7. 'if' → logprob: -5.25921106338501
    8. ' ' → logprob: -5.75921106338501
    9. ' si' → logprob: -6.13421106338501
    10. '>' → logprob: -6.13421106338501

Token 482: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.8155946135520935
    2. ' <' → logprob: -1.3155946731567383
    3. '>' → logprob: -1.6905946731567383
    4. '-' → logprob: -2.5655946731567383
    5. ' >' → logprob: -4.065594673156738
    6. '>=' → logprob: -5.690594673156738
    7. '<=' → logprob: -5.690594673156738
    8. ' -' → logprob: -6.190594673156738
    9. ' <=' → logprob: -7.190594673156738
    10. ' >=' → logprob: -7.440594673156738

Token 483: ' D' (ID: 415)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5572409629821777
    2. ' idx' → logprob: -1.0572409629821777
    3. '(idx' → logprob: -3.1822409629821777
    4. 'if' → logprob: -3.9322409629821777
    5. ' if' → logprob: -4.432240962982178
    6. ' unique' → logprob: -5.682240962982178
    7. 'unique' → logprob: -6.057240962982178
    8. ' (' → logprob: -8.182241439819336
    9. '[idx' → logprob: -8.182241439819336
    10. '(unique' → logprob: -8.932241439819336

Token 484: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5780096054077148
    2. 'if' → logprob: -0.9530096054077148
    3. '   ' → logprob: -2.953009605407715
    4. ' =' → logprob: -6.953009605407715
    5. '
' → logprob: -9.203009605407715
    6. '=' → logprob: -9.828009605407715
    7. '```' → logprob: -10.203009605407715
    8. ',' → logprob: -10.828009605407715
    9. '    
' → logprob: -11.328009605407715
    10. ' and' → logprob: -11.578009605407715

Token 485: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08000537753105164
    2. ' if' → logprob: -2.580005407333374
    3. '   ' → logprob: -7.205005168914795
    4. '```' → logprob: -7.955005168914795
    5. '``' → logprob: -12.080005645751953
    6. ',' → logprob: -12.080005645751953
    7. ':' → logprob: -12.705005645751953
    8. ' =' → logprob: -13.455005645751953
    9. 'elif' → logprob: -13.830005645751953
    10. '    
' → logprob: -13.955005645751953

Token 486: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014172324910759926
    2. ' if' → logprob: -4.264172554016113
    3. '   ' → logprob: -11.639172554016113
    4. '```' → logprob: -17.264171600341797
    5. '    
' → logprob: -17.639171600341797
    6. 'elif' → logprob: -17.764171600341797
    7. '	if' → logprob: -18.514171600341797
    8. 'idx' → logprob: -19.264171600341797
    9. ' ' → logprob: -19.264171600341797
    10. ',' → logprob: -19.264171600341797

Token 487: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.47408029437065125
    2. ' idx' → logprob: -0.9740803241729736
    3. '	idx' → logprob: -13.349080085754395
    4. '(idx' → logprob: -13.849080085754395
    5. ' ' → logprob: -14.724080085754395
    6. '0' → logprob: -15.974080085754395
    7. '   ' → logprob: -16.72408103942871
    8. '[idx' → logprob: -16.84908103942871
    9. 'index' → logprob: -17.59908103942871
    10. '_idx' → logprob: -17.97408103942871

Token 488: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1603686362504959
    2. '>' → logprob: -1.9103686809539795
    3. '-' → logprob: -8.910368919372559
    4. ' -' → logprob: -11.785368919372559
    5. '   ' → logprob: -14.535368919372559
    6. '()>' → logprob: -14.910368919372559
    7. ' ' → logprob: -15.160368919372559
    8. '0' → logprob: -15.660368919372559
    9. '>-' → logprob: -16.035367965698242
    10. ':' → logprob: -16.660367965698242

Token 489: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007606270257383585
    2. ' ' → logprob: -4.882606506347656
    3. '=' → logprob: -17.257606506347656
    4. '<|end|>' → logprob: -17.382606506347656
    5. '   ' → logprob: -17.507606506347656
    6. '  ' → logprob: -18.007606506347656
    7. ' ' → logprob: -18.382606506347656
    8. ',' → logprob: -19.507606506347656
    9. '۰' → logprob: -19.507606506347656
    10. '1' → logprob: -19.757606506347656

Token 490: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.875075340270996
    4. 'idx' → logprob: -16.00007438659668
    5. '  ' → logprob: -18.00007438659668
    6. '1' → logprob: -18.12507438659668
    7. '=' → logprob: -18.37507438659668
    8. '
' → logprob: -18.62507438659668
    9. '```' → logprob: -18.75007438659668
    10. ' idx' → logprob: -19.68757438659668

Token 491: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06280956417322159
    2. ':
' → logprob: -2.812809467315674
    3. '   ' → logprob: -7.687809467315674
    4. '       ' → logprob: -8.937809944152832
    5. ' :' → logprob: -9.062809944152832
    6. ' :
' → logprob: -9.937809944152832
    7. '<|end|>' → logprob: -11.062809944152832
    8. '=' → logprob: -11.062809944152832
    9. '):
' → logprob: -11.437809944152832
    10. ':

' → logprob: -11.437809944152832

Token 492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34566986560821533
    2. ' val' → logprob: -1.4706698656082153
    3. 'val' → logprob: -2.845669746398926
    4. '   ' → logprob: -5.720669746398926
    5. '	val' → logprob: -6.845669746398926
    6. ',val' → logprob: -10.720669746398926
    7. '[val' → logprob: -12.095669746398926
    8. '_val' → logprob: -12.720669746398926
    9. '.val' → logprob: -12.845669746398926
    10. '```' → logprob: -12.970669746398926

Token 493: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.07920613884925842
    2. ' val' → logprob: -2.5792062282562256
    3. '   ' → logprob: -8.454206466674805
    4. '	val' → logprob: -9.579206466674805
    5. '       ' → logprob: -10.329206466674805
    6. '_val' → logprob: -13.954206466674805
    7. '.val' → logprob: -15.454206466674805
    8. '```' → logprob: -15.954206466674805
    9. ',val' → logprob: -16.079206466674805
    10. '[val' → logprob: -16.454206466674805

Token 494: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750604182481766
    2. '=' → logprob: -3.5297505855560303
    3. '   ' → logprob: -16.65475082397461
    4. ' ' → logprob: -18.15475082397461
    5. ' ' → logprob: -18.90475082397461
    6. ' =
' → logprob: -19.65475082397461
    7. '	' → logprob: -19.77975082397461
    8. '    ' → logprob: -20.02975082397461
    9. '＝' → logprob: -20.02975082397461
    10. '=
' → logprob: -20.27975082397461

Token 495: ' unique' (ID: 5746)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.16022492945194244
    2. ' unique' → logprob: -1.9102249145507812
    3. '(unique' → logprob: -14.785224914550781
    4. '_unique' → logprob: -15.160224914550781
    5. '.unique' → logprob: -16.53522491455078
    6. '   ' → logprob: -17.53522491455078
    7. 'Unique' → logprob: -18.28522491455078
    8. ' уник' → logprob: -18.91022491455078
    9. 'uniq' → logprob: -19.53522491455078
    10. '```' → logprob: -19.53522491455078

Token 496: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -8.947715832618997e-05
    2. 'vals' → logprob: -9.500089645385742
    3. '_idxs' → logprob: -12.250089645385742
    4. 'Vals' → logprob: -12.625089645385742
    5. '_unique' → logprob: -13.750089645385742
    6. '_idx' → logprob: -13.750089645385742
    7. 's' → logprob: -14.125089645385742
    8. 'unique' → logprob: -14.250089645385742
    9. '_vars' → logprob: -14.500089645385742
    10. '(vals' → logprob: -15.125089645385742

Token 497: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.008350854739546776
    2. ' =' → logprob: -5.008350849151611
    3. '=' → logprob: -6.758350849151611
    4. '[' → logprob: -8.13335132598877
    5. 'idx' → logprob: -8.75835132598877
    6. '_idx' → logprob: -11.50835132598877
    7. '   ' → logprob: -12.38335132598877
    8. ' idx' → logprob: -13.50835132598877
    9. 'unique' → logprob: -13.75835132598877
    10. '	idx' → logprob: -13.88335132598877

Token 498: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008614926598966122
    2. ' -' → logprob: -4.758615016937256
    3. '[idx' → logprob: -15.508614540100098
    4. '[' → logprob: -15.883614540100098
    5. '   ' → logprob: -16.883615493774414
    6. '[-' → logprob: -17.008615493774414
    7. '[ind' → logprob: -18.133615493774414
    8. ' ' → logprob: -18.258615493774414
    9. '1' → logprob: -18.383615493774414
    10. '–' → logprob: -18.508615493774414

Token 499: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.375003814697266
    4. '```' → logprob: -18.500003814697266
    5. ']' → logprob: -19.750003814697266
    6. ')' → logprob: -20.437503814697266
    7. '۱' → logprob: -20.687503814697266
    8. '<|end|>' → logprob: -20.750003814697266
    9. '  ' → logprob: -21.312503814697266
    10. '...' → logprob: -21.375003814697266

Token 500: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.7500057220459
    4. '```' → logprob: -18.0000057220459
    5. '<|end|>' → logprob: -20.5000057220459
    6. '  ' → logprob: -20.5625057220459
    7. ')' → logprob: -20.5625057220459
    8. '۱' → logprob: -20.8750057220459
    9. ']' → logprob: -20.9375057220459
    10. '2' → logprob: -21.0000057220459

Token 501: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.39118626713752747
    2. ']
' → logprob: -2.141186237335205
    3. '   ' → logprob: -2.641186237335205
    4. '       ' → logprob: -2.766186237335205
    5. ')' → logprob: -3.016186237335205
    6. ']' → logprob: -4.016186237335205
    7. '
' → logprob: -6.266186237335205
    8. 'if' → logprob: -6.891186237335205
    9. ' if' → logprob: -7.766186237335205
    10. ',' → logprob: -7.891186237335205

Token 502: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8267457485198975
    2. '       ' → logprob: -1.2017457485198975
    3. ' if' → logprob: -1.8267457485198975
    4. 'if' → logprob: -2.3267457485198975
    5. ' ' → logprob: -6.951745986938477
    6. '	if' → logprob: -7.326745986938477
    7. '```' → logprob: -7.326745986938477
    8. '<|end|>' → logprob: -7.326745986938477
    9. '  ' → logprob: -8.951745986938477
    10. '    ' → logprob: -9.701745986938477

Token 503: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -7.576873758807778e-05
    2. ' if' → logprob: -9.500075340270996
    3. '       ' → logprob: -14.125075340270996
    4. '   ' → logprob: -16.625076293945312
    5. '	if' → logprob: -20.125076293945312
    6. '```' → logprob: -20.125076293945312
    7. '
' → logprob: -20.875076293945312
    8. '           ' → logprob: -21.000076293945312
    9. ' ' → logprob: -21.750076293945312
    10. '        
' → logprob: -22.000076293945312

Token 504: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.07889044284820557
    2. ' check' → logprob: -2.578890323638916
    3. '(check' → logprob: -14.453890800476074
    4. '	check' → logprob: -16.453889846801758
    5. ' ' → logprob: -18.328889846801758
    6. '.check' → logprob: -18.453889846801758
    7. 'chec' → logprob: -18.703889846801758
    8. '   ' → logprob: -18.828889846801758
    9. '_check' → logprob: -19.203889846801758
    10. ' ' → logprob: -19.328889846801758

Token 505: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -7.624555291840807e-05
    2. 'in' → logprob: -9.750076293945312
    3. 'check' → logprob: -12.000076293945312
    4. '(check' → logprob: -12.625076293945312
    5. '(pos' → logprob: -12.750076293945312
    6. 'In' → logprob: -14.000076293945312
    7. 'pos' → logprob: -14.125076293945312
    8. '[pos' → logprob: -14.625076293945312
    9. 'val' → logprob: -15.000076293945312
    10. '_check' → logprob: -15.125076293945312

Token 506: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.005271584261208773
    2. 'range' → logprob: -5.2552714347839355
    3. 'check' → logprob: -10.880271911621094
    4. 'pos' → logprob: -11.255271911621094
    5. '_in' → logprob: -13.630271911621094
    6. 'in' → logprob: -13.755271911621094
    7. 'rang' → logprob: -14.005271911621094
    8. 'r' → logprob: -14.755271911621094
    9. 'place' → logprob: -14.880271911621094
    10. 'Range' → logprob: -15.130271911621094

Token 507: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -7.3458322731312364e-06
    2. 'pos' → logprob: -12.000007629394531
    3. '[pos' → logprob: -14.375007629394531
    4. ' pos' → logprob: -14.875007629394531
    5. ' (' → logprob: -15.750007629394531
    6. ',pos' → logprob: -16.50000762939453
    7. '(' → logprob: -18.00000762939453
    8. '	pos' → logprob: -18.87500762939453
    9. '```' → logprob: -19.12500762939453
    10. '(po' → logprob: -19.12500762939453

Token 508: '_dict' (ID: 11295)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.16215908527374268
    2. '[pos' → logprob: -2.287158966064453
    3. 'pos' → logprob: -3.037158966064453
    4. ' pos' → logprob: -9.662158966064453
    5. ',pos' → logprob: -9.912158966064453
    6. '_pos' → logprob: -10.412158966064453
    7. '.pos' → logprob: -11.537158966064453
    8. '   ' → logprob: -12.412158966064453
    9. '```' → logprob: -12.912158966064453
    10. '	pos' → logprob: -12.912158966064453

Token 509: '[val' (ID: 162482)
  Prédit: '[val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[val' → logprob: -0.31334370374679565
    2. '[pos' → logprob: -1.3133437633514404
    3. '(val' → logprob: -9.81334400177002
    4. '(pos' → logprob: -10.56334400177002
    5. 'val' → logprob: -14.31334400177002
    6. ',val' → logprob: -15.43834400177002
    7. 'pos' → logprob: -15.56334400177002
    8. '[' → logprob: -15.81334400177002
    9. '```' → logprob: -15.81334400177002
    10. ' [' → logprob: -17.438343048095703

Token 510: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008942846208810806
    2. ',val' → logprob: -5.2589430809021
    3. '[val' → logprob: -6.1339430809021
    4. ' ,' → logprob: -6.5089430809021
    5. '(val' → logprob: -10.758942604064941
    6. ',pos' → logprob: -11.883942604064941
    7. '[pos' → logprob: -12.008942604064941
    8. ',l' → logprob: -12.258942604064941
    9. ',[' → logprob: -13.258942604064941
    10. '[l' → logprob: -13.508942604064941

Token 511: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0059726424515247345
    2. 'pos' → logprob: -5.255972862243652
    3. ' l' → logprob: -7.255972862243652
    4. ' pos' → logprob: -10.505972862243652
    5. '[l' → logprob: -13.005972862243652
    6. 'val' → logprob: -13.380972862243652
    7. '	l' → logprob: -14.505972862243652
    8. ',l' → logprob: -15.130972862243652
    9. '(l' → logprob: -15.380972862243652
    10. '   ' → logprob: -15.880972862243652

Token 512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000990295666269958
    2. ',r' → logprob: -7.000990390777588
    3. ' ,' → logprob: -9.62598991394043
    4. 'r' → logprob: -11.50098991394043
    5. '[r' → logprob: -14.75098991394043
    6. '   ' → logprob: -14.87598991394043
    7. '(r' → logprob: -14.87598991394043
    8. ',
' → logprob: -15.00098991394043
    9. '```' → logprob: -15.25098991394043
    10. ',l' → logprob: -15.37598991394043

Token 513: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002475777640938759
    2. ' r' → logprob: -6.002475738525391
    3. '```' → logprob: -17.75247573852539
    4. '   ' → logprob: -17.87747573852539
    5. ' ' → logprob: -19.00247573852539
    6. ',' → logprob: -19.62747573852539
    7. '	r' → logprob: -19.87747573852539
    8. '[r' → logprob: -20.62747573852539
    9. '    ' → logprob: -20.62747573852539
    10. '  ' → logprob: -21.25247573852539

Token 514: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06293662637472153
    2. '):
' → logprob: -2.937936544418335
    3. '):' → logprob: -5.312936782836914
    4. ' ,' → logprob: -6.562936782836914
    5. '       ' → logprob: -7.312936782836914
    6. '   ' → logprob: -7.437936782836914
    7. ',r' → logprob: -8.187936782836914
    8. 'r' → logprob: -10.562936782836914
    9. '):
' → logprob: -10.812936782836914
    10. ':
' → logprob: -10.937936782836914

Token 515: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018454594537615776
    2. '       ' → logprob: -6.376845359802246
    3. ' candidates' → logprob: -9.376845359802246
    4. 'c' → logprob: -10.001845359802246
    5. '               ' → logprob: -12.501845359802246
    6. '          ' → logprob: -13.251845359802246
    7. '	       ' → logprob: -13.251845359802246
    8. '```' → logprob: -13.751845359802246
    9. '		' → logprob: -14.126845359802246
    10. '   ' → logprob: -14.251845359802246

Token 516: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005579506512731314
    2. '       ' → logprob: -5.630579471588135
    3. ' candidates' → logprob: -6.380579471588135
    4. '           ' → logprob: -8.380579948425293
    5. '   ' → logprob: -10.005579948425293
    6. '	c' → logprob: -12.755579948425293
    7. 'candidate' → logprob: -13.380579948425293
    8. ' c' → logprob: -13.755579948425293
    9. '               ' → logprob: -14.005579948425293
    10. '_candidates' → logprob: -14.130579948425293

Token 517: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000556012790184468
    2. '.' → logprob: -7.500555992126465
    3. '.app' → logprob: -13.875555992126465
    4. '.setdefault' → logprob: -14.125555992126465
    5. ' .' → logprob: -14.500555992126465
    6. '.add' → logprob: -15.000555992126465
    7. ').' → logprob: -16.00055694580078
    8. '.Append' → logprob: -16.25055694580078
    9. '.extend' → logprob: -16.62555694580078
    10. '.ap' → logprob: -16.75055694580078

Token 518: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.00043972869752906263
    2. 'abs' → logprob: -7.750439643859863
    3. ' abs' → logprob: -11.625439643859863
    4. '(' → logprob: -16.37544059753418
    5. ' (' → logprob: -17.75044059753418
    6. '.abs' → logprob: -18.62544059753418
    7. '```' → logprob: -20.37544059753418
    8. '_abs' → logprob: -20.50044059753418
    9. '(ab' → logprob: -20.87544059753418
    10. '   ' → logprob: -20.87544059753418

Token 519: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -1.8624639324116288e-06
    2. 'val' → logprob: -13.250001907348633
    3. ' val' → logprob: -17.250001907348633
    4. '[val' → logprob: -18.125001907348633
    5. '(' → logprob: -18.875001907348633
    6. ',val' → logprob: -19.125001907348633
    7. '(D' → logprob: -19.125001907348633
    8. '	val' → logprob: -20.500001907348633
    9. '_val' → logprob: -22.125001907348633
    10. 'Val' → logprob: -22.375001907348633

Token 520: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10059978067874908
    2. ' -' → logprob: -2.350599765777588
    3. '(val' → logprob: -8.975600242614746
    4. '-D' → logprob: -9.725600242614746
    5. '(' → logprob: -9.850600242614746
    6. 'val' → logprob: -9.850600242614746
    7. '(D' → logprob: -10.100600242614746
    8. '[val' → logprob: -10.600600242614746
    9. '[' → logprob: -10.975600242614746
    10. ' val' → logprob: -11.600600242614746

Token 521: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0031881670001894236
    2. ' D' → logprob: -5.753188133239746
    3. '(D' → logprob: -11.503188133239746
    4. ' (' → logprob: -15.378188133239746
    5. '(' → logprob: -15.628188133239746
    6. ')' → logprob: -17.628189086914062
    7. ' ' → logprob: -17.878189086914062
    8. '[D' → logprob: -18.628189086914062
    9. '[' → logprob: -18.878189086914062
    10. '	D' → logprob: -19.128189086914062

Token 522: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.790129555156454e-05
    2. '))' → logprob: -9.625067710876465
    3. ')`' → logprob: -13.875067710876465
    4. ' )' → logprob: -15.125067710876465
    5. ')
' → logprob: -15.750067710876465
    6. '   ' → logprob: -16.00006866455078
    7. ')}' → logprob: -16.25006866455078
    8. '())' → logprob: -17.62506866455078
    9. '       ' → logprob: -17.62506866455078
    10. ')]' → logprob: -18.25006866455078

Token 523: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1581297218799591
    2. 'if' → logprob: -2.4081296920776367
    3. '   ' → logprob: -2.9081296920776367
    4. ' if' → logprob: -7.033129692077637
    5. ' print' → logprob: -7.283129692077637
    6. '```' → logprob: -9.033129692077637
    7. '
' → logprob: -12.033129692077637
    8. '    
' → logprob: -12.783129692077637
    9. '``' → logprob: -13.408129692077637
    10. '`' → logprob: -15.408129692077637

Token 524: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023409338667988777
    2. 'if' → logprob: -3.773409366607666
    3. '   ' → logprob: -9.398408889770508
    4. ' print' → logprob: -9.898408889770508
    5. ' if' → logprob: -10.773408889770508
    6. '```' → logprob: -12.148408889770508
    7. '    
' → logprob: -12.898408889770508
    8. 'answer' → logprob: -13.898408889770508
    9. '#' (adapté à ' #') → logprob: -14.898408889770508
    10. 'min' → logprob: -15.773408889770508

Token 525: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.313283234834671
    2. 'print' → logprob: -1.3132832050323486
    3. '   ' → logprob: -11.81328296661377
    4. ' if' → logprob: -12.31328296661377
    5. '
' → logprob: -12.81328296661377
    6. '#' → logprob: -13.18828296661377
    7. '```' → logprob: -13.31328296661377
    8. '    
' → logprob: -13.43828296661377
    9. 'result' → logprob: -14.06328296661377
    10. ' print' → logprob: -14.18828296661377

Token 526: ' aucun' (ID: 41678)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06201697885990143
    2. ' candidates' → logprob: -2.8120169639587402
    3. 'len' → logprob: -10.312017440795898
    4. ' len' → logprob: -11.812017440795898
    5. ' candidats' → logprob: -12.562017440795898
    6. ' not' → logprob: -13.187017440795898
    7. ' c' → logprob: -13.187017440795898
    8. 'not' → logprob: -13.937017440795898
    9. '_candidates' → logprob: -15.437017440795898
    10. 'cand' → logprob: -16.0620174407959

Token 527: ' candidat' (ID: 97443)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0041683875024318695
    2. ' candidates' → logprob: -5.504168510437012
    3. ' candidats' → logprob: -9.754168510437012
    4. 'candidate' → logprob: -11.004168510437012
    5. ' candidat' → logprob: -12.254168510437012
    6. ' c' → logprob: -12.254168510437012
    7. '_candidates' → logprob: -12.379168510437012
    8. ' candidatos' → logprob: -15.129168510437012
    9. ' candidate' → logprob: -15.254168510437012
    10. '   ' → logprob: -15.379168510437012

Token 528: ' trouvé' (ID: 60081)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1666780710220337
    2. ' ==' → logprob: -1.9166780710220337
    3. ':' → logprob: -5.791677951812744
    4. '=' → logprob: -6.166677951812744
    5. '   ' → logprob: -7.166677951812744
    6. 'print' → logprob: -8.416678428649902
    7. '>' → logprob: -8.666678428649902
    8. ' =' → logprob: -10.541678428649902
    9. ':
' → logprob: -11.041678428649902
    10. '==
' → logprob: -11.041678428649902

Token 529: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.658493161201477
    2. '   ' → logprob: -1.033493161201477
    3. ':
' → logprob: -2.1584930419921875
    4. 'print' → logprob: -5.5334930419921875
    5. 'if' → logprob: -5.6584930419921875
    6. ' and' → logprob: -6.7834930419921875
    7. 'and' → logprob: -7.0334930419921875
    8. ' if' → logprob: -7.9084930419921875
    9. ',' → logprob: -8.158493041992188
    10. ' print' → logprob: -8.408493041992188

Token 530: ' cela' (ID: 17542)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0560835637152195
    2. '   ' → logprob: -2.9310836791992188
    3. ' print' → logprob: -6.806083679199219
    4. '#' → logprob: -10.681083679199219
    5. '```' → logprob: -11.056083679199219
    6. '	print' → logprob: -11.306083679199219
    7. '    
' → logprob: -11.431083679199219
    8. 'for' → logprob: -12.306083679199219
    9. '
' → logprob: -12.681083679199219
    10. 'while' → logprob: -12.931083679199219

Token 531: ' signifie' (ID: 81149)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.42164891958236694
    2. '   ' → logprob: -1.6716489791870117
    3. 'continue' → logprob: -2.5466489791870117
    4. ' continue' → logprob: -3.5466489791870117
    5. ' print' → logprob: -3.5466489791870117
    6. ':' → logprob: -4.921648979187012
    7. '#' → logprob: -5.296648979187012
    8. ' =' → logprob: -6.546648979187012
    9. 'else' → logprob: -6.671648979187012
    10. '=' → logprob: -6.671648979187012

Token 532: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2386399656534195
    2. 'print' → logprob: -1.7386399507522583
    3. '-' → logprob: -3.488640069961548
    4. 'que' → logprob: -6.363639831542969
    5. ' que' → logprob: -6.488639831542969
    6. '    ' → logprob: -7.488639831542969
    7. '#' → logprob: -7.488639831542969
    8. '  ' → logprob: -7.613639831542969
    9. ' print' → logprob: -8.363639831542969
    10. '0' → logprob: -8.488639831542969

Token 533: ' dans' (ID: 2671)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7266079783439636
    2. 'c' → logprob: -0.8516079783439636
    3. '   ' → logprob: -3.2266080379486084
    4. 'print' → logprob: -3.3516080379486084
    5. 'l' → logprob: -4.601607799530029
    6. 'la' → logprob: -7.226607799530029
    7. 'auc' → logprob: -7.226607799530029
    8. 'for' → logprob: -7.476607799530029
    9. 'pass' → logprob: -7.726607799530029
    10. 'les' → logprob: -7.851607799530029

Token 534: ' [' (ID: 723)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.14519722759723663
    2. 'pos' → logprob: -2.6451971530914307
    3. 'a' → logprob: -4.02019739151001
    4. 'r' → logprob: -4.27019739151001
    5. 'unique' → logprob: -4.77019739151001
    6. '#' → logprob: -4.77019739151001
    7. 'la' → logprob: -5.14519739151001
    8. 'range' → logprob: -5.77019739151001
    9. 'c' → logprob: -6.39519739151001
    10. ' l' → logprob: -7.02019739151001

Token 535: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -7.896309739408025e-07
    2. ' l' → logprob: -14.250000953674316
    3. ',' → logprob: -17.125
    4. ',l' → logprob: -18.25
    5. '```' → logprob: -18.75
    6. '_l' → logprob: -18.75
    7. '	l' → logprob: -19.0
    8. ']' → logprob: -19.125
    9. ')' → logprob: -19.5
    10. '[l' → logprob: -19.5

Token 536: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042054426739923656
    2. ',r' → logprob: -7.875420570373535
    3. ' ,' → logprob: -10.625420570373535
    4. 'r' → logprob: -11.250420570373535
    5. ',
' → logprob: -13.500420570373535
    6. '-' → logprob: -15.000420570373535
    7. ' r' → logprob: -16.00041961669922
    8. '=' → logprob: -16.25041961669922
    9. '```' → logprob: -16.25041961669922
    10. 'a' → logprob: -16.31291961669922

Token 537: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14083035290241241
    2. '],' → logprob: -2.2658302783966064
    3. ',' → logprob: -3.7658302783966064
    4. ' il' → logprob: -6.3908305168151855
    5. 'il' → logprob: -6.5158305168151855
    6. 'auc' → logprob: -8.140830039978027
    7. ' aucun' → logprob: -8.265830039978027
    8. ']
' → logprob: -9.015830039978027
    9. ' aucune' → logprob: -9.015830039978027
    10. 'there' → logprob: -9.890830039978027

Token 538: ' il' (ID: 1793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9830296039581299
    2. ',' → logprob: -1.4830296039581299
    3. ' il' → logprob: -1.4830296039581299
    4. ':' → logprob: -2.73302960395813
    5. 'il' → logprob: -3.85802960395813
    6. '#' → logprob: -3.98302960395813
    7. 'print' → logprob: -3.98302960395813
    8. ':
' → logprob: -4.733029365539551
    9. 'continue' → logprob: -4.983029365539551
    10. 'auc' → logprob: -5.358029365539551

Token 539: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009465526789426804
    2. ' n' → logprob: -5.13446569442749
    3. 'y' → logprob: -6.00946569442749
    4. '   ' → logprob: -7.63446569442749
    5. 'a' → logprob: -8.884465217590332
    6. 'n't' → logprob: -9.134465217590332
    7. 'ny' → logprob: -10.009465217590332
    8. '```' → logprob: -10.134465217590332
    9. '    ' → logprob: -10.384465217590332
    10. 'ex' → logprob: -10.634465217590332

Token 540: ''y' (ID: 27913)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3897348642349243
    2. 'y' → logprob: -1.8897348642349243
    3. ''y' → logprob: -1.8897348642349243
    4. ''ex' → logprob: -4.389734745025635
    5. 'ex' → logprob: -6.389734745025635
    6. 'a' → logprob: -6.639734745025635
    7. ''' → logprob: -6.764734745025635
    8. '```' → logprob: -6.764734745025635
    9. 'e' → logprob: -7.139734745025635
    10. ' n' → logprob: -7.139734745025635

Token 541: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004700087942183018
    2. ' a' → logprob: -5.379700183868408
    3. 'avait' → logprob: -10.12969970703125
    4. ''a' → logprob: -11.75469970703125
    5. ' avait' → logprob: -11.75469970703125
    6. 'pas' → logprob: -11.75469970703125
    7. ' pas' → logprob: -12.50469970703125
    8. '```' → logprob: -12.87969970703125
    9. 'auc' → logprob: -13.12969970703125
    10. 'has' → logprob: -13.25469970703125

Token 542: ' pas' (ID: 2173)
  Prédit: ' aucune'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aucune' → logprob: -0.9472386837005615
    2. ' pas' → logprob: -1.3222386837005615
    3. 'pas' → logprob: -1.5722386837005615
    4. 'auc' → logprob: -2.6972386837005615
    5. ' aucun' → logprob: -2.6972386837005615
    6. 'no' → logprob: -6.947238922119141
    7. 'au' → logprob: -7.822238922119141
    8. 'plus' → logprob: -7.947238922119141
    9. 'a' → logprob: -8.19723892211914
    10. ' rien' → logprob: -8.94723892211914

Token 543: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.1970679610967636
    2. ' de' → logprob: -1.9470679759979248
    3. 'd' → logprob: -3.447067975997925
    4. ')' → logprob: -6.697067737579346
    5. ' d' → logprob: -6.822067737579346
    6. ' ' → logprob: -7.572067737579346
    7. 'une' → logprob: -7.947067737579346
    8. 'un' → logprob: -8.447068214416504
    9. 'auc' → logprob: -8.947068214416504
    10. 'a' → logprob: -9.072068214416504

Token 544: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.018451575189828873
    2. 'élé' → logprob: -4.143451690673828
    3. 'a' → logprob: -6.518451690673828
    4. ' valeur' → logprob: -8.768451690673828
    5. '```' → logprob: -8.768451690673828
    6. 'point' → logprob: -9.143451690673828
    7. 'element' → logprob: -9.643451690673828
    8. 'points' → logprob: -10.018451690673828
    9. 'value' → logprob: -10.143451690673828
    10. ' valeurs' → logprob: -10.268451690673828

Token 545: ' proches' (ID: 91241)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.745361328125
    2. '   ' → logprob: -2.370361328125
    3. 'cor' → logprob: -2.870361328125
    4. 'c' → logprob: -3.495361328125
    5. ' correspondant' → logprob: -3.495361328125
    6. ' correspond' → logprob: -3.745361328125
    7. 'strict' → logprob: -3.745361328125
    8. 'val' → logprob: -3.995361328125
    9. 'prés' → logprob: -4.120361328125
    10. ' présentes' → logprob: -4.120361328125

Token 546: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4614821672439575
    2. 'de' → logprob: -1.9614821672439575
    3. ',' → logprob: -2.211482048034668
    4. ' de' → logprob: -2.586482048034668
    5. '.' → logprob: -4.586482048034668
    6. 'du' → logprob: -5.336482048034668
    7. 'à' → logprob: -6.086482048034668
    8. '#' → logprob: -6.211482048034668
    9. ' des' → logprob: -6.211482048034668
    10. 'from' → logprob: -6.211482048034668

Token 547: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.009794222190976143
    2. 'l' → logprob: -5.634794235229492
    3. 'la' → logprob: -6.259794235229492
    4. ' D' → logprob: -6.634794235229492
    5. 'trait' → logprob: -8.134794235229492
    6. 'val' → logprob: -8.259794235229492
    7. 'signal' → logprob: -8.634794235229492
    8. 'a' → logprob: -8.884794235229492
    9. 'd' → logprob: -8.884794235229492
    10. 'sign' → logprob: -9.009794235229492

Token 548: ' ?
' (ID: 19740)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05778917297720909
    2. 'print' → logprob: -3.0577890872955322
    3. ':' → logprob: -5.682789325714111
    4. 'continue' → logprob: -5.807789325714111
    5. ':
' → logprob: -6.807789325714111
    6. ' print' → logprob: -7.307789325714111
    7. ' continue' → logprob: -7.932789325714111
    8. ',' → logprob: -8.182788848876953
    9. '       ' → logprob: -9.307788848876953
    10. '    
' → logprob: -10.182788848876953

Token 549: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.599159300327301
    2. '   ' → logprob: -0.849159300327301
    3. ' print' → logprob: -4.224159240722656
    4. 'if' → logprob: -5.974159240722656
    5. '
' → logprob: -6.224159240722656
    6. ' if' → logprob: -6.974159240722656
    7. 'min' → logprob: -7.349159240722656
    8. '```' → logprob: -7.474159240722656
    9. '#' → logprob: -7.599159240722656
    10. 'answer' → logprob: -8.474159240722656

Token 550: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6748948693275452
    2. '   ' → logprob: -1.4248948097229004
    3. 'print' → logprob: -1.6748948097229004
    4. ' if' → logprob: -3.2998948097229004
    5. '
' → logprob: -4.6748948097229
    6. '#' (adapté à ' #') → logprob: -5.4248948097229
    7. 'min' → logprob: -6.0498948097229
    8. ' print' → logprob: -6.2998948097229
    9. 'answer' → logprob: -6.4248948097229
    10. 'possible' → logprob: -6.7998948097229

Token 551: ' Ce' (ID: 14228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9912959337234497
    2. 'if' → logprob: -1.1162959337234497
    3. 'print' → logprob: -1.3662959337234497
    4. '
' → logprob: -4.11629581451416
    5. '#' → logprob: -4.24129581451416
    6. ' if' → logprob: -4.99129581451416
    7. 'min' → logprob: -5.74129581451416
    8. 'else' → logprob: -6.74129581451416
    9. ' print' → logprob: -6.99129581451416
    10. '```' → logprob: -6.99129581451416

Token 552: ' cas' (ID: 2108)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03580758720636368
    2. 'print' → logprob: -4.5358076095581055
    3. 'continue' → logprob: -5.7858076095581055
    4. 'else' → logprob: -6.0358076095581055
    5. 'elif' → logprob: -6.1608076095581055
    6. 's' → logprob: -6.4108076095581055
    7. 'n' → logprob: -6.4108076095581055
    8. ' #' → logprob: -6.5358076095581055
    9. 'l' → logprob: -6.5358076095581055
    10. '```' → logprob: -6.6608076095581055

Token 553: ' ne' (ID: 453)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16122885048389435
    2. '   ' → logprob: -2.161228895187378
    3. ' continue' → logprob: -5.036228656768799
    4. 'continue' → logprob: -5.161228656768799
    5. ':
' → logprob: -5.286228656768799
    6. ' continues' → logprob: -5.911228656768799
    7. ' n' → logprob: -5.911228656768799
    8. '=' → logprob: -6.286228656768799
    9. ' :' → logprob: -6.411228656768799
    10. ' =' → logprob: -6.536228656768799

Token 554: ' se' (ID: 458)
  Prédit: ' semble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' semble' → logprob: -0.9455174207687378
    2. ' peut' → logprob: -1.8205174207687378
    3. ' devrait' → logprob: -1.9455174207687378
    4. ' pas' → logprob: -2.6955175399780273
    5. 'pas' → logprob: -2.8205175399780273
    6. '#' → logprob: -3.4455175399780273
    7. 's' → logprob: -3.8205175399780273
    8. 'print' → logprob: -3.9455175399780273
    9. 'should' → logprob: -4.195517539978027
    10. ' se' → logprob: -4.445517539978027

Token 555: ' produit' (ID: 29429)
  Prédit: 'produ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'produ' → logprob: -0.0213535837829113
    2. 'prés' → logprob: -5.271353721618652
    3. 'prod' → logprob: -5.396353721618652
    4. 'pas' → logprob: -6.021353721618652
    5. 'produce' → logprob: -6.521353721618652
    6. 'p' → logprob: -6.771353721618652
    7. 'rait' → logprob: -6.771353721618652
    8. 'man' → logprob: -7.396353721618652
    9. '```' → logprob: -7.396353721618652
    10. ' produit' → logprob: -7.646353721618652

Token 556: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.5446938276290894
    2. 'pas' → logprob: -1.2946938276290894
    3. ' jamais' → logprob: -2.044693946838379
    4. ' probablement' → logprob: -5.169693946838379
    5. 'jam' → logprob: -5.919693946838379
    6. ' rarement' → logprob: -6.169693946838379
    7. ' généralement' → logprob: -6.919693946838379
    8. ' presque' → logprob: -7.419693946838379
    9. ' normalement' → logprob: -7.419693946838379
    10. '   ' → logprob: -7.669693946838379

Token 557: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14361289143562317
    2. 'print' → logprob: -2.018612861633301
    3. ' print' → logprob: -7.518612861633301
    4. 'else' → logprob: -8.2686128616333
    5. '
' → logprob: -9.3936128616333
    6. ',' → logprob: -11.2686128616333
    7. '    
' → logprob: -11.5186128616333
    8. '#' → logprob: -11.7686128616333
    9. ' else' → logprob: -11.8936128616333
    10. '  ' → logprob: -13.0186128616333

Token 558: ' a' (ID: 261)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8669036626815796
    2. 'l' → logprob: -1.2419036626815796
    3. ' ' → logprob: -2.241903781890869
    4. '1' → logprob: -2.491903781890869
    5. ' l' → logprob: -2.491903781890869
    6. 'len' → logprob: -4.741903781890869
    7. 'a' → logprob: -5.741903781890869
    8. ' len' → logprob: -6.241903781890869
    9. 'True' → logprob: -6.616903781890869
    10. ' True' → logprob: -7.491903781890869

Token 559: ' contient' (ID: 89067)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.11458329111337662
    2. '[' → logprob: -3.2395832538604736
    3. 'll' → logprob: -4.239583492279053
    4. '[min' → logprob: -4.239583492279053
    5. 's' → logprob: -4.489583492279053
    6. 'l' → logprob: -4.489583492279053
    7. '[i' → logprob: -5.739583492279053
    8. '[pos' → logprob: -6.114583492279053
    9. '[:]' → logprob: -6.364583492279053
    10. '[a' → logprob: -6.989583492279053

Token 560: ' au' (ID: 2791)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.366943120956421
    2. 'au' → logprob: -1.491943120956421
    3. 'une' → logprob: -1.991943120956421
    4. ' au' → logprob: -2.241943120956421
    5. 'D' → logprob: -2.366943120956421
    6. 'val' → logprob: -3.741943120956421
    7. ' toutes' → logprob: -3.741943120956421
    8. 'des' → logprob: -3.991943120956421
    9. 'values' → logprob: -4.366943359375
    10. 'all' → logprob: -4.491943359375

Token 561: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.006736453622579575
    2. ' moins' → logprob: -5.1317362785339355
    3. 'm' → logprob: -8.256736755371094
    4. 'mo' → logprob: -8.756736755371094
    5. 'menos' → logprob: -9.006736755371094
    6. 'minimum' → logprob: -9.006736755371094
    7. 'less' → logprob: -10.131736755371094
    8. 'least' → logprob: -10.131736755371094
    9. 'min' → logprob: -11.256736755371094
    10. '-mo' → logprob: -11.381736755371094

Token 562: ' une' (ID: 2463)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.1825089007616043
    2. 'l' → logprob: -2.432508945465088
    3. ' one' → logprob: -3.432508945465088
    4. 'un' → logprob: -3.807508945465088
    5. 'une' → logprob: -3.932508945465088
    6. '1' → logprob: -6.057508945465088
    7. '[l' → logprob: -6.807508945465088
    8. ' une' → logprob: -7.932508945465088
    9. ' un' → logprob: -7.932508945465088
    10. ''un' → logprob: -8.30750846862793

Token 563: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.11588869243860245
    2. 'occ' → logprob: -2.8658885955810547
    3. 'élé' → logprob: -3.4908885955810547
    4. 'value' → logprob: -5.115888595581055
    5. 'occur' → logprob: -5.115888595581055
    6. ' valeur' → logprob: -5.365888595581055
    7. 'position' → logprob: -5.490888595581055
    8. ' occurrence' → logprob: -8.490888595581055
    9. 'entrée' → logprob: -8.990888595581055
    10. 'instance' → logprob: -9.115888595581055

Token 564: ' dans' (ID: 2671)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18771791458129883
    2. '   ' → logprob: -2.062717914581299
    3. ' print' → logprob: -3.187717914581299
    4. '
' → logprob: -6.187717914581299
    5. 'if' → logprob: -7.812717914581299
    6. ' if' → logprob: -8.43771743774414
    7. '```' → logprob: -10.43771743774414
    8. '    
' → logprob: -10.56271743774414
    9. '#' → logprob: -11.31271743774414
    10. ',' → logprob: -11.56271743774414

Token 565: ' [' (ID: 723)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6968234777450562
    2. 'range' → logprob: -1.0718234777450562
    3. ' range' → logprob: -2.8218235969543457
    4. '[l' → logprob: -2.9468235969543457
    5. ' l' → logprob: -3.3218235969543457
    6. '   ' → logprob: -5.321823596954346
    7. ' la' → logprob: -6.571823596954346
    8. ' [' → logprob: -6.571823596954346
    9. 'r' → logprob: -6.696823596954346
    10. '[r' → logprob: -6.821823596954346

Token 566: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.001934469910338521
    2. ' l' → logprob: -6.25193452835083
    3. ',' → logprob: -12.876934051513672
    4. ',l' → logprob: -13.751934051513672
    5. '	l' → logprob: -14.251934051513672
    6. '   ' → logprob: -14.626934051513672
    7. ']' → logprob: -15.251934051513672
    8. '```' → logprob: -16.001934051513672
    9. '
' → logprob: -16.126934051513672
    10. ')' → logprob: -16.126934051513672

Token 567: ',r' (ID: 33654)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08178200572729111
    2. ',' → logprob: -3.456782102584839
    3. 'r' → logprob: -3.581782102584839
    4. ',l' → logprob: -4.08178186416626
    5. ',r' → logprob: -6.33178186416626
    6. 'a' → logprob: -8.081782341003418
    7. ']' → logprob: -10.081782341003418
    8. '[l' → logprob: -10.456782341003418
    9. ' ,' → logprob: -10.456782341003418
    10. ',a' → logprob: -10.956782341003418

Token 568: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03459007665514946
    2. ']:' → logprob: -3.534590005874634
    3. ')' → logprob: -6.284590244293213
    4. '):' → logprob: -6.909590244293213
    5. '].' → logprob: -7.159590244293213
    6. ']):' → logprob: -8.159589767456055
    7. '])' → logprob: -8.909589767456055
    8. '],' → logprob: -9.034589767456055
    9. ']:
' → logprob: -9.034589767456055
    10. 'e' → logprob: -9.409589767456055

Token 569: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1609954684972763
    2. '   ' → logprob: -2.1609954833984375
    3. 'if' → logprob: -3.5359954833984375
    4. ' print' → logprob: -6.1609954833984375
    5. ' if' → logprob: -6.5359954833984375
    6. '```' → logprob: -7.4109954833984375
    7. 'min' → logprob: -9.535995483398438
    8. '
' → logprob: -10.285995483398438
    9. 'else' → logprob: -10.910995483398438
    10. '    
' → logprob: -10.910995483398438

Token 570: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01992436870932579
    2. 'if' → logprob: -4.019924163818359
    3. '   ' → logprob: -6.519924163818359
    4. 'min' → logprob: -9.14492416381836
    5. ' print' → logprob: -9.14492416381836
    6. ' if' → logprob: -10.26992416381836
    7. 'answer' → logprob: -11.01992416381836
    8. '```' → logprob: -11.14492416381836
    9. 'result' → logprob: -12.39492416381836
    10. '
' → logprob: -12.39492416381836

Token 571: ' N' (ID: 478)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.052152808755636215
    2. 'if' → logprob: -3.0521528720855713
    3. '   ' → logprob: -5.927152633666992
    4. ' print' → logprob: -7.677152633666992
    5. ' if' → logprob: -8.802152633666992
    6. '
' → logprob: -9.052152633666992
    7. 'min' → logprob: -9.177152633666992
    8. '```' → logprob: -11.177152633666992
    9. '#' → logprob: -11.552152633666992
    10. 'answer' → logprob: -11.802152633666992

Token 572: 'éanmoins' (ID: 176785)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.38574105501174927
    2. '   ' → logprob: -2.3857409954071045
    3. 'print' → logprob: -2.3857409954071045
    4. 'if' → logprob: -2.3857409954071045
    5. 'ext' → logprob: -4.510741233825684
    6. 'elif' → logprob: -4.885741233825684
    7. '#' → logprob: -5.010741233825684
    8. ' else' → logprob: -5.010741233825684
    9. ' if' → logprob: -5.385741233825684
    10. '```' → logprob: -5.885741233825684

Token 573: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5569409728050232
    2. 'print' → logprob: -1.556941032409668
    3. 'else' → logprob: -2.181941032409668
    4. ' print' → logprob: -2.806941032409668
    5. ' else' → logprob: -3.806941032409668
    6. ' if' → logprob: -4.806941032409668
    7. 'if' → logprob: -5.181941032409668
    8. '#' → logprob: -5.931941032409668
    9. '
' → logprob: -6.806941032409668
    10. ',' → logprob: -7.306941032409668

Token 574: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017112337052822113
    2. '   ' → logprob: -5.0171122550964355
    3. '#' → logprob: -5.1421122550964355
    4. ' print' → logprob: -5.7671122550964355
    5. 'if' → logprob: -6.7671122550964355
    6. ' if' → logprob: -9.642112731933594
    7. ' #' → logprob: -10.517112731933594
    8. 'else' → logprob: -10.767112731933594
    9. '```' → logprob: -11.142112731933594
    10. 'pass' → logprob: -11.267112731933594

Token 575: ' couvre' (ID: 137218)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.12518274784088135
    2. 'continue' → logprob: -2.875182628631592
    3. '   ' → logprob: -3.125182628631592
    4. ' else' → logprob: -5.250182628631592
    5. 'else' → logprob: -5.500182628631592
    6. '#' → logprob: -6.375182628631592
    7. '    ' → logprob: -6.625182628631592
    8. ' #' → logprob: -6.875182628631592
    9. ' for' → logprob: -7.000182628631592
    10. 'for' → logprob: -7.625182628631592

Token 576: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.613257884979248
    2. ' ' → logprob: -2.363257884979248
    3. ' le' → logprob: -2.363257884979248
    4. ' the' → logprob: -2.988257884979248
    5. '   ' → logprob: -3.613257884979248
    6. '<|end|>' → logprob: -3.613257884979248
    7. ' l' → logprob: -3.863257884979248
    8. ' les' → logprob: -3.988257884979248
    9. ' par' → logprob: -4.113257884979248
    10. 'the' → logprob: -4.238257884979248

Token 577: ' cas' (ID: 2108)
  Prédit: ' cas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cas' → logprob: -0.649876594543457
    2. 'cas' → logprob: -0.899876594543457
    3. 'else' → logprob: -3.024876594543457
    4. ' else' → logprob: -4.899876594543457
    5. 'case' → logprob: -5.524876594543457
    6. ' code' → logprob: -5.774876594543457
    7. 'code' → logprob: -6.024876594543457
    8. '```' → logprob: -6.274876594543457
    9. 'print' → logprob: -7.274876594543457
    10. 'edge' → logprob: -8.024876594543457

Token 578: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1402075290679932
    2. 'else' → logprob: -1.3902075290679932
    3. ' ' → logprob: -2.140207529067993
    4. ' d' → logprob: -3.140207529067993
    5. 'print' → logprob: -3.140207529067993
    6. ' where' → logprob: -3.265207529067993
    7. 'for' → logprob: -3.765207529067993
    8. ' else' → logprob: -3.765207529067993
    9. ' for' → logprob: -4.015207290649414
    10. '  ' → logprob: -4.015207290649414

Token 579: ' aucune' (ID: 51173)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5305899381637573
    2. 'len' → logprob: -1.2805899381637573
    3. 'c' → logprob: -2.405590057373047
    4. ' not' → logprob: -3.280590057373047
    5. 'False' → logprob: -5.405590057373047
    6. 'True' → logprob: -7.155590057373047
    7. 'l' → logprob: -8.030590057373047
    8. ' len' → logprob: -8.155590057373047
    9. ' False' → logprob: -9.905590057373047
    10. ' candidates' → logprob: -10.030590057373047

Token 580: ' position' (ID: 4010)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8635271787643433
    2. 'candidate' → logprob: -0.9885271787643433
    3. ' candidate' → logprob: -2.238527297973633
    4. 'val' → logprob: -3.738527297973633
    5. ' valeur' → logprob: -3.863527297973633
    6. ' candidat' → logprob: -4.863527297973633
    7. '```' → logprob: -5.113527297973633
    8. 'value' → logprob: -5.113527297973633
    9. 'token' → logprob: -5.488527297973633
    10. ' c' → logprob: -5.613527297973633

Token 581: ' n' (ID: 297)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 582: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.7694158554077148
    2. ' n' → logprob: -2.269415855407715
    3. 'est' → logprob: -2.394415855407715
    4. 'a' → logprob: -2.894415855407715
    5. 'n' → logprob: -3.019415855407715
    6. ' is' → logprob: -3.269415855407715
    7. 'e' → logprob: -3.394415855407715
    8. 'in' → logprob: -3.394415855407715
    9. ' in' → logprob: -3.894415855407715
    10. ''entre' → logprob: -4.019415855407715

Token 583: ' dans' (ID: 2671)
  Prédit: ' trouv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trouv' → logprob: -0.20766521990299225
    2. 'tr' → logprob: -2.207665205001831
    3. 'dans' → logprob: -3.707665205001831
    4. ' présente' → logprob: -3.957665205001831
    5. 'valid' → logprob: -4.83266544342041
    6. 'prés' → logprob: -4.95766544342041
    7. 'found' → logprob: -5.33266544342041
    8. 'incl' → logprob: -5.95766544342041
    9. 'strict' → logprob: -6.70766544342041
    10. 'pas' → logprob: -6.70766544342041

Token 584: ' [' (ID: 723)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.4888317286968231
    2. 'range' → logprob: -1.6138317584991455
    3. 'l' → logprob: -2.2388317584991455
    4. '[r' → logprob: -2.7388317584991455
    5. 'r' → logprob: -4.738831520080566
    6. 'la' → logprob: -6.488831520080566
    7. '[' → logprob: -6.988831520080566
    8. ' range' → logprob: -6.988831520080566
    9. 'the' → logprob: -7.363831520080566
    10. ' [' → logprob: -7.363831520080566

Token 585: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00016229959146585315
    2. ' l' → logprob: -8.750162124633789
    3. ',' → logprob: -13.125162124633789
    4. ',l' → logprob: -13.375162124633789
    5. ']' → logprob: -16.12516212463379
    6. 'r' → logprob: -17.37516212463379
    7. '	l' → logprob: -17.87516212463379
    8. '_l' → logprob: -18.25016212463379
    9. '```' → logprob: -18.87516212463379
    10. '[l' → logprob: -19.12516212463379

Token 586: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03484627231955528
    2. ',r' → logprob: -3.409846305847168
    3. 'r' → logprob: -7.159846305847168
    4. ' ,' → logprob: -7.784846305847168
    5. '],' → logprob: -13.284846305847168
    6. ' r' → logprob: -13.784846305847168
    7. '   ' → logprob: -14.159846305847168
    8. '_r' → logprob: -14.534846305847168
    9. '(r' → logprob: -15.159846305847168
    10. '_,' → logprob: -15.284846305847168

Token 587: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5078343749046326
    2. ']:' → logprob: -2.1328344345092773
    3. '].' → logprob: -2.1328344345092773
    4. ')' → logprob: -3.0078344345092773
    5. '   ' → logprob: -3.2578344345092773
    6. '):' → logprob: -3.3828344345092773
    7. ']:
' → logprob: -4.257834434509277
    8. '],' → logprob: -5.132834434509277
    9. '):
' → logprob: -5.257834434509277
    10. ').' → logprob: -5.507834434509277

Token 588: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009684675373136997
    2. 'if' → logprob: -5.1346845626831055
    3. ' if' → logprob: -5.8846845626831055
    4. '
' → logprob: -7.7596845626831055
    5. '    
' → logprob: -7.8846845626831055
    6. ',' → logprob: -10.384684562683105
    7. 'min' → logprob: -10.884684562683105
    8. 'possible' → logprob: -11.009684562683105
    9. 'print' → logprob: -11.384684562683105
    10. 'import' → logprob: -11.634684562683105

Token 589: ' cher' (ID: 17824)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19606521725654602
    2. 'continue' → logprob: -2.4460651874542236
    3. '   ' → logprob: -2.9460651874542236
    4. 'continu' → logprob: -3.6960651874542236
    5. 'pass' → logprob: -5.446065425872803
    6. ' print' → logprob: -6.071065425872803
    7. ' continu' → logprob: -6.196065425872803
    8. 'contin' → logprob: -6.571065425872803
    9. '```' → logprob: -6.696065425872803
    10. ' continue' → logprob: -7.571065425872803

Token 590: 'chant' (ID: 15311)
  Prédit: 'chant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chant' → logprob: -0.011352312751114368
    2. '#' → logprob: -5.5113525390625
    3. 'cher' → logprob: -6.0113525390625
    4. 'ch' → logprob: -6.1363525390625
    5. 'che' → logprob: -6.5113525390625
    6. 'ant' → logprob: -8.2613525390625
    7. '   ' → logprob: -8.7613525390625
    8. 'geant' → logprob: -8.7613525390625
    9. 'rch' → logprob: -9.7613525390625
    10. '```' → logprob: -9.7613525390625

Token 591: ' man' (ID: 873)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.346475601196289
    2. 'un' → logprob: -1.596475601196289
    3. 'for' → logprob: -2.096475601196289
    4. 'val' → logprob: -2.846475601196289
    5. ' la' → logprob: -3.096475601196289
    6. 'dans' → logprob: -3.221475601196289
    7. '   ' → logprob: -3.596475601196289
    8. 'le' → logprob: -3.846475601196289
    9. 'une' → logprob: -3.971475601196289
    10. 'l' → logprob: -4.346475601196289

Token 592: 'uellement' (ID: 36026)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.8756287693977356
    2. 'quant' → logprob: -1.5006287097930908
    3. 'ge' → logprob: -2.250628709793091
    4. 'ière' → logprob: -2.625628709793091
    5. 'quer' → logprob: -2.875628709793091
    6. 'qu' → logprob: -3.500628709793091
    7. 'qué' → logprob: -4.00062894821167
    8. '```' → logprob: -4.37562894821167
    9. 'te' → logprob: -4.75062894821167
    10. 'u' → logprob: -4.87562894821167

Token 593: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2231801152229309
    2. ' if' → logprob: -3.348180055618286
    3. ' for' → logprob: -3.348180055618286
    4. 'for' → logprob: -3.973180055618286
    5. '
' → logprob: -4.098180294036865
    6. 'if' → logprob: -4.848180294036865
    7. ',' → logprob: -4.848180294036865
    8. 'val' → logprob: -4.973180294036865
    9. ' i' → logprob: -5.098180294036865
    10. '    
' → logprob: -5.098180294036865

Token 594: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07924435287714005
    2. 'if' → logprob: -3.829244375228882
    3. ' if' → logprob: -4.079244136810303
    4. 'min' → logprob: -4.454244136810303
    5. '```' → logprob: -4.579244136810303
    6. 'print' → logprob: -5.704244136810303
    7. 'val' → logprob: -6.454244136810303
    8. ' min' → logprob: -6.579244136810303
    9. '    
' → logprob: -6.704244136810303
    10. 'pos' → logprob: -6.829244136810303

Token 595: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7328649759292603
    2. '   ' → logprob: -1.3578649759292603
    3. 'if' → logprob: -2.1078648567199707
    4. 'pos' → logprob: -3.3578648567199707
    5. 'found' → logprob: -3.8578648567199707
    6. 'possible' → logprob: -4.232864856719971
    7. 'val' → logprob: -4.607864856719971
    8. ' min' → logprob: -4.732864856719971
    9. 'c' → logprob: -4.982864856719971
    10. ' if' → logprob: -5.232864856719971

Token 596: ' Option' (ID: 17796)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39950838685035706
    2. 'if' → logprob: -2.149508476257324
    3. 'min' → logprob: -2.524508476257324
    4. 'found' → logprob: -3.274508476257324
    5. 'pos' → logprob: -4.024508476257324
    6. ' if' → logprob: -4.524508476257324
    7. 'possible' → logprob: -4.524508476257324
    8. '```' → logprob: -4.899508476257324
    9. ' min' → logprob: -5.024508476257324
    10. 'val' → logprob: -5.149508476257324

Token 597: 'nel' (ID: 10085)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2055506706237793
    2. 'al' → logprob: -1.9555506706237793
    3. ' =' → logprob: -3.7055506706237793
    4. '=' → logprob: -5.080550670623779
    5. '    
' → logprob: -6.080550670623779
    6. ':' → logprob: -6.205550670623779
    7. 'if' → logprob: -6.830550670623779
    8. 'else' → logprob: -6.955550670623779
    9. '       ' → logprob: -7.205550670623779
    10. 'ally' → logprob: -7.330550670623779

Token 598: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11101990193128586
    2. ' if' → logprob: -3.4860198497772217
    3. 'if' → logprob: -3.4860198497772217
    4. '    
' → logprob: -4.736020088195801
    5. 'val' → logprob: -5.486020088195801
    6. ' for' → logprob: -5.486020088195801
    7. '    ' → logprob: -5.611020088195801
    8. 'for' → logprob: -5.861020088195801
    9. 'indices' → logprob: -6.111020088195801
    10. ':' → logprob: -6.611020088195801

Token 599: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1920692920684814
    2. 'continue' → logprob: -2.1920692920684814
    3. ' continue' → logprob: -2.3170692920684814
    4. '#' → logprob: -2.4420692920684814
    5. 'pass' → logprob: -2.5670692920684814
    6. 'if' → logprob: -2.8170692920684814
    7. ' if' → logprob: -3.0670692920684814
    8. ' pass' → logprob: -3.1920692920684814
    9. 'print' → logprob: -3.4420692920684814
    10. 'min' → logprob: -3.9420692920684814

Token 600: ' la' (ID: 557)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.6250418424606323
    2. 'a' → logprob: -2.000041961669922
    3. 'l' → logprob: -2.250041961669922
    4. 'pass' → logprob: -2.250041961669922
    5. ' la' → logprob: -2.625041961669922
    6. 'print' → logprob: -3.000041961669922
    7. 'le' → logprob: -3.125041961669922
    8. ' a' → logprob: -3.500041961669922
    9. ' le' → logprob: -3.500041961669922
    10. ' les' → logprob: -3.875041961669922

Token 601: ' contr' (ID: 6030)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1271002292633057
    2. ' code' → logprob: -2.0021002292633057
    3. 'range' → logprob: -2.8771002292633057
    4. ' input' → logprob: -3.1271002292633057
    5. 'input' → logprob: -3.2521002292633057
    6. 'a' → logprob: -3.3771002292633057
    7. 'r' → logprob: -3.3771002292633057
    8. 's' → logprob: -3.5021002292633057
    9. ' #' → logprob: -3.7521002292633057
    10. ' a' → logprob: -3.8771002292633057

Token 602: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.002442596945911646
    2. 'aint' → logprob: -6.252442359924316
    3. 'a' → logprob: -9.002442359924316
    4. 'ain' → logprob: -9.252442359924316
    5. 'aine' → logprob: -9.252442359924316
    6. 'ôle' → logprob: -9.377442359924316
    7. '#' → logprob: -10.002442359924316
    8. 'aints' → logprob: -11.127442359924316
    9. 'aise' → logprob: -11.252442359924316
    10. 'e' → logprob: -12.377442359924316

Token 603: ' garantit' (ID: 182078)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25835850834846497
    2. '    ' → logprob: -2.5083584785461426
    3. '<|end|>' → logprob: -2.6333584785461426
    4. 'continue' → logprob: -4.258358478546143
    5. ' continues' → logprob: -4.258358478546143
    6. ' continue' → logprob: -5.133358478546143
    7. ':' → logprob: -5.258358478546143
    8. ' ' → logprob: -5.383358478546143
    9. 's' → logprob: -5.758358478546143
    10. 'if' → logprob: -5.758358478546143

Token 604: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5362548232078552
    2. ' que' → logprob: -2.1612548828125
    3. '    ' → logprob: -2.5362548828125
    4. '<|end|>' → logprob: -2.5362548828125
    5. ' that' → logprob: -3.2862548828125
    6. ' l' → logprob: -4.1612548828125
    7. 'a' → logprob: -4.1612548828125
    8. ' la' → logprob: -4.4112548828125
    9. '_' → logprob: -4.5362548828125
    10. ' ' → logprob: -4.6612548828125

Token 605: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43161022663116455
    2. ')' → logprob: -2.681610107421875
    3. '[' → logprob: -3.681610107421875
    4. ' that' → logprob: -3.806610107421875
    5. 'a' → logprob: -3.931610107421875
    6. ' a' → logprob: -3.931610107421875
    7. ' l' → logprob: -4.181610107421875
    8. ' que' → logprob: -4.306610107421875
    9. '[i' → logprob: -4.431610107421875
    10. ' ' → logprob: -4.556610107421875

Token 606: ' [' (ID: 723)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.5741512775421143
    2. '[' → logprob: -1.0741512775421143
    3. '[r' → logprob: -2.9491512775421143
    4. 'range' → logprob: -3.5741512775421143
    5. ' [' → logprob: -5.324151039123535
    6. 'l' → logprob: -5.824151039123535
    7. '[a' → logprob: -5.949151039123535
    8. 'r' → logprob: -6.699151039123535
    9. '1' → logprob: -7.824151039123535
    10. '```' → logprob: -8.074151039123535

Token 607: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.004255407955497503
    2. '0' → logprob: -5.504255294799805
    3. ']' → logprob: -9.754255294799805
    4. 'n' → logprob: -10.504255294799805
    5. ' l' → logprob: -11.004255294799805
    6. '<|end|>' → logprob: -11.004255294799805
    7. '1' → logprob: -11.379255294799805
    8. 'a' → logprob: -11.504255294799805
    9. 'r' → logprob: -11.879255294799805
    10. 'len' → logprob: -12.379255294799805

Token 608: ',r' (ID: 33654)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2295846790075302
    2. ',' → logprob: -1.9795846939086914
    3. ',l' → logprob: -2.8545846939086914
    4. 'r' → logprob: -4.854584693908691
    5. ',r' → logprob: -7.729584693908691
    6. ' l' → logprob: -8.229584693908691
    7. '[l' → logprob: -8.729584693908691
    8. '0' → logprob: -8.854584693908691
    9. '(l' → logprob: -9.104584693908691
    10. 'a' → logprob: -9.229584693908691

Token 609: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022949129343032837
    2. '])' → logprob: -4.64794921875
    3. ']:' → logprob: -5.64794921875
    4. ']):' → logprob: -5.77294921875
    5. '],' → logprob: -6.39794921875
    6. '+' → logprob: -6.39794921875
    7. '].' → logprob: -6.52294921875
    8. ')' → logprob: -7.89794921875
    9. ' ]' → logprob: -8.39794921875
    10. ']==' → logprob: -8.64794921875

Token 610: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10647424310445786
    2. 'print' → logprob: -2.6064741611480713
    3. 'if' → logprob: -4.23147439956665
    4. ' if' → logprob: -5.10647439956665
    5. ' print' → logprob: -5.85647439956665
    6. 'min' → logprob: -6.48147439956665
    7. '    
' → logprob: -7.10647439956665
    8. '
' → logprob: -7.60647439956665
    9. 'answer' → logprob: -8.106473922729492
    10. 'result' → logprob: -8.731473922729492

Token 611: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.29304611682891846
    2. '   ' → logprob: -2.168045997619629
    3. 'if' → logprob: -2.793045997619629
    4. ' print' → logprob: -3.293045997619629
    5. ' if' → logprob: -3.918045997619629
    6. 'min' → logprob: -4.543045997619629
    7. 'answer' → logprob: -5.668045997619629
    8. ' min' → logprob: -6.043045997619629
    9. 'result' → logprob: -6.293045997619629
    10. '```' → logprob: -7.793045997619629

Token 612: ' Pour' (ID: 13931)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7049990892410278
    2. 'print' → logprob: -0.9549990892410278
    3. '   ' → logprob: -2.9549989700317383
    4. 'min' → logprob: -3.8299989700317383
    5. ' if' → logprob: -4.079998970031738
    6. 'answer' → logprob: -4.454998970031738
    7. ' print' → logprob: -5.204998970031738
    8. 'result' → logprob: -5.829998970031738
    9. 'ans' → logprob: -5.829998970031738
    10. 'res' → logprob: -6.204998970031738

Token 613: ' la' (ID: 557)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0433131642639637
    2. ' val' → logprob: -3.7933132648468018
    3. '_' → logprob: -5.293313026428223
    4. 'i' → logprob: -5.668313026428223
    5. 'pos' → logprob: -6.043313026428223
    6. 'c' → logprob: -6.543313026428223
    7. '_val' → logprob: -6.543313026428223
    8. 'v' → logprob: -6.793313026428223
    9. 'candidate' → logprob: -7.418313026428223
    10. 'l' → logprob: -7.543313026428223

Token 614: ' sécurité' (ID: 32375)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2459646612405777
    2. '_' → logprob: -2.495964765548706
    3. 'i' → logprob: -3.245964765548706
    4. 'pos' → logprob: -3.745964765548706
    5. 'continue' → logprob: -3.870964765548706
    6. 'v' → logprob: -4.495964527130127
    7. ' val' → logprob: -4.870964527130127
    8. 'else' → logprob: -5.245964527130127
    9. 'l' → logprob: -5.620964527130127
    10. 'print' → logprob: -5.870964527130127

Token 615: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02991016022861004
    2. 'if' → logprob: -3.904910087585449
    3. ' if' → logprob: -5.529910087585449
    4. '    
' → logprob: -6.154910087585449
    5. '
' → logprob: -7.029910087585449
    6. 'print' → logprob: -7.279910087585449
    7. ',' → logprob: -8.15491008758545
    8. 'min' → logprob: -8.52991008758545
    9. 'val' → logprob: -9.02991008758545
    10. '       ' → logprob: -9.27991008758545

Token 616: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.43134546279907227
    2. 'if' → logprob: -1.9313454627990723
    3. ' if' → logprob: -2.1813454627990723
    4. ' print' → logprob: -2.5563454627990723
    5. '   ' → logprob: -4.431345462799072
    6. 'min' → logprob: -6.931345462799072
    7. '#' → logprob: -7.681345462799072
    8. ' min' → logprob: -8.181344985961914
    9. 'import' → logprob: -8.681344985961914
    10. 'continue' → logprob: -8.806344985961914

Token 617: ' peut' (ID: 9216)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7515080571174622
    2. 'print' → logprob: -1.2515079975128174
    3. 'continue' → logprob: -2.3765079975128174
    4. ' continue' → logprob: -2.8765079975128174
    5. ' else' → logprob: -2.8765079975128174
    6. ' print' → logprob: -4.3765082359313965
    7. 'if' → logprob: -4.7515082359313965
    8. '   ' → logprob: -5.1265082359313965
    9. 'elif' → logprob: -5.6265082359313965
    10. ' if' → logprob: -6.1265082359313965

Token 618: ' faire' (ID: 8119)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.28798916935920715
    2. 'continue' → logprob: -1.9129891395568848
    3. 'pass' → logprob: -3.0379891395568848
    4. 'contin' → logprob: -3.6629891395568848
    5. ' print' → logprob: -4.662989139556885
    6. '   ' → logprob: -5.037989139556885
    7. ' continue' → logprob: -5.787989139556885
    8. ' continuer' → logprob: -6.037989139556885
    9. 'import' → logprob: -6.662989139556885
    10. '```' → logprob: -6.787989139556885

Token 619: ' une' (ID: 2463)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14661100506782532
    2. 'min' → logprob: -3.021610975265503
    3. 'pass' → logprob: -3.146610975265503
    4. 'continue' → logprob: -3.896610975265503
    5. 'if' → logprob: -4.896611213684082
    6. 'result' → logprob: -5.896611213684082
    7. 'ans' → logprob: -6.521611213684082
    8. '   ' → logprob: -6.521611213684082
    9. ' print' → logprob: -6.521611213684082
    10. 'val' → logprob: -6.646611213684082

Token 620: ' recherche' (ID: 24975)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5600810647010803
    2. 'print' → logprob: -1.1850810050964355
    3. 'pass' → logprob: -2.5600810050964355
    4. 'min' → logprob: -4.1850810050964355
    5. 'val' → logprob: -4.6850810050964355
    6. 'while' → logprob: -5.1850810050964355
    7. 'for' → logprob: -6.0600810050964355
    8. 'import' → logprob: -6.0600810050964355
    9. '#' → logprob: -6.4350810050964355
    10. 'contin' → logprob: -6.4350810050964355

Token 621: ' complète' (ID: 75660)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5592763423919678
    2. 'bis' → logprob: -1.1842763423919678
    3. 'sur' → logprob: -4.559276580810547
    4. 'man' → logprob: -4.559276580810547
    5. 'dans' → logprob: -4.559276580810547
    6. 'continue' → logprob: -5.059276580810547
    7. 'for' → logprob: -5.059276580810547
    8. 'if' → logprob: -5.059276580810547
    9. 'b' → logprob: -5.184276580810547
    10. 'in' → logprob: -5.309276580810547

Token 622: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0480639711022377
    2. ' for' → logprob: -4.7980637550354
    3. 'for' → logprob: -5.1730637550354
    4. ' if' → logprob: -5.5480637550354
    5. 'if' → logprob: -5.5480637550354
    6. 'pos' → logprob: -5.9230637550354
    7. '#' → logprob: -6.1730637550354
    8. 'min' → logprob: -6.1730637550354
    9. 'unique' → logprob: -6.4230637550354
    10. '
' → logprob: -6.4230637550354

Token 623: 'plus' (ID: 11601)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -1.6915175914764404
    2. '   ' → logprob: -1.8165175914764404
    3. 'for' → logprob: -1.8165175914764404
    4. '#' → logprob: -2.4415175914764404
    5. ' for' → logprob: -2.6915175914764404
    6. 'pass' → logprob: -3.0665175914764404
    7. 'continue' → logprob: -3.0665175914764404
    8. 'min' → logprob: -3.0665175914764404
    9. ')' → logprob: -3.4415175914764404
    10. ' min' → logprob: -3.5665175914764404

Token 624: ' lente' (ID: 91524)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7480542063713074
    2. 'safe' → logprob: -1.8730542659759521
    3. ')' → logprob: -2.998054265975952
    4. '=' → logprob: -3.248054265975952
    5. 'for' → logprob: -3.248054265975952
    6. 'ine' → logprob: -3.748054265975952
    7. ' sûre' → logprob: -3.873054265975952
    8. ' lente' → logprob: -3.998054265975952
    9. ' sûr' → logprob: -4.123054027557373
    10. 'rare' → logprob: -4.123054027557373

Token 625: ')' (ID: 8)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021271424368023872
    2. ')' → logprob: -4.396271228790283
    3. ',' → logprob: -5.896271228790283
    4. '):
' → logprob: -6.146271228790283
    5. ' for' → logprob: -6.396271228790283
    6. 'for' → logprob: -7.771271228790283
    7. ')
' → logprob: -8.021271705627441
    8. '):' → logprob: -8.521271705627441
    9. ' if' → logprob: -9.021271705627441
    10. '...' → logprob: -9.021271705627441

Token 626: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01509966142475605
    2. '    
' → logprob: -6.26509952545166
    3. 'if' → logprob: -6.39009952545166
    4. ' if' → logprob: -6.39009952545166
    5. 'min' → logprob: -6.51509952545166
    6. '
' → logprob: -7.26509952545166
    7. ' for' → logprob: -7.26509952545166
    8. 'pos' → logprob: -7.39009952545166
    9. 'found' → logprob: -7.39009952545166
    10. 'for' → logprob: -7.64009952545166

Token 627: ' on' (ID: 402)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.007252703886479139
    2. 'len' → logprob: -5.0072526931762695
    3. ' not' → logprob: -7.6322526931762695
    4. 'c' → logprob: -10.13225269317627
    5. 'False' → logprob: -12.13225269317627
    6. 'non' → logprob: -12.13225269317627
    7. '   ' → logprob: -14.00725269317627
    8. '```' → logprob: -15.63225269317627
    9. '	not' → logprob: -15.75725269317627
    10. 'True' → logprob: -15.75725269317627

Token 628: ' veut' (ID: 41653)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.481999009847641
    2. 'c' → logprob: -1.6069990396499634
    3. 'not' → logprob: -1.7319990396499634
    4. ' not' → logprob: -6.106998920440674
    5. 'n' → logprob: -6.231998920440674
    6. ' len' → logprob: -7.856998920440674
    7. 'pas' → logprob: -8.356999397277832
    8. 'cand' → logprob: -10.231999397277832
    9. ' candidates' → logprob: -10.481999397277832
    10. '```' → logprob: -11.106999397277832

Token 629: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007249272894114256
    2. '    
' → logprob: -6.257249355316162
    3. ' if' → logprob: -6.507249355316162
    4. 'if' → logprob: -7.132249355316162
    5. '
' → logprob: -7.382249355316162
    6. '```' → logprob: -7.882249355316162
    7. ',' → logprob: -8.007248878479004
    8. 'else' → logprob: -8.257248878479004
    9. 'print' → logprob: -8.507248878479004
    10. ')' → logprob: -8.632248878479004

Token 630: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020332036074250937
    2. '    
' → logprob: -7.377033233642578
    3. '#' → logprob: -7.502033233642578
    4. '
' → logprob: -7.627033233642578
    5. 'else' → logprob: -9.252033233642578
    6. '```' → logprob: -10.127033233642578
    7. ' but' → logprob: -10.377033233642578
    8. '    ' → logprob: -10.502033233642578
    9. '       ' → logprob: -10.502033233642578
    10. 'print' → logprob: -10.627033233642578

Token 631: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057695332914590836
    2. 'else' → logprob: -3.6826953887939453
    3. 'continue' → logprob: -4.182695388793945
    4. '#' (adapté à ' #') → logprob: -4.932695388793945
    5. 'print' → logprob: -5.682695388793945
    6. 'if' → logprob: -6.932695388793945
    7. 'val' → logprob: -7.057695388793945
    8. '    
' → logprob: -7.057695388793945
    9. ' else' → logprob: -7.807695388793945
    10. '
' → logprob: -7.807695388793945

Token 632: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04832172393798828
    2. 'else' → logprob: -4.298321723937988
    3. 'print' → logprob: -4.298321723937988
    4. 'continue' → logprob: -4.548321723937988
    5. '#' → logprob: -5.173321723937988
    6. 'if' → logprob: -6.548321723937988
    7. ' else' → logprob: -7.048321723937988
    8. ' continue' → logprob: -7.923321723937988
    9. '
' → logprob: -8.298321723937988
    10. ' if' → logprob: -8.673321723937988

Token 633: ' on' (ID: 402)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5241021513938904
    2. 'pass' → logprob: -1.8991022109985352
    3. 'print' → logprob: -2.149102210998535
    4. ' continue' → logprob: -2.524102210998535
    5. '#' → logprob: -3.149102210998535
    6. 'else' → logprob: -5.149102210998535
    7. ' pass' → logprob: -5.274102210998535
    8. '   ' → logprob: -5.649102210998535
    9. ' print' → logprob: -6.024102210998535
    10. '
' → logprob: -8.274102210998535

Token 634: ' suppose' (ID: 35968)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.2538161277770996
    2. 'continue' → logprob: -1.5038161277770996
    3. '   ' → logprob: -7.7538161277771
    4. 'contin' → logprob: -8.003816604614258
    5. 'pass' → logprob: -8.753816604614258
    6. ' can' → logprob: -9.003816604614258
    7. ' pass' → logprob: -9.128816604614258
    8. ' continues' → logprob: -9.628816604614258
    9. ' peut' → logprob: -9.753816604614258
    10. 'est' → logprob: -9.878816604614258

Token 635: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.6343749761581421
    2. '   ' → logprob: -1.134374976158142
    3. ' ici' → logprob: -2.5093750953674316
    4. 'que' → logprob: -3.2593750953674316
    5. ' ' → logprob: -5.259375095367432
    6. ' here' → logprob: -5.634375095367432
    7. 'qu' → logprob: -5.884375095367432
    8. '    ' → logprob: -6.009375095367432
    9. 'not' → logprob: -6.259375095367432
    10. 'that' → logprob: -6.509375095367432

Token 636: ' ça' (ID: 13590)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.5267183184623718
    2. 'True' → logprob: -1.2767183780670166
    3. 'l' → logprob: -3.0267183780670166
    4. 'c' → logprob: -3.2767183780670166
    5. 'a' → logprob: -4.1517181396484375
    6. 'len' → logprob: -4.4017181396484375
    7. ' False' → logprob: -5.1517181396484375
    8. 'pos' → logprob: -5.5267181396484375
    9. ' True' → logprob: -5.6517181396484375
    10. '0' → logprob: -6.9017181396484375

Token 637: ' ne' (ID: 453)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.40087276697158813
    2. 'ne' → logprob: -1.1508727073669434
    3. ' n' → logprob: -5.025872707366943
    4. ' ne' → logprob: -5.400872707366943
    5. 'never' → logprob: -6.775872707366943
    6. 'n't' → logprob: -6.900872707366943
    7. 'not' → logprob: -8.650873184204102
    8. ' won't' → logprob: -8.775873184204102
    9. '```' → logprob: -9.150873184204102
    10. ' never' → logprob: -10.025873184204102

Token 638: ' sera' (ID: 15511)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.447428822517395
    2. 'se' → logprob: -1.697428822517395
    3. 'sera' → logprob: -2.6974287033081055
    4. 'sur' → logprob: -3.0724287033081055
    5. 's' → logprob: -3.4474287033081055
    6. 'sert' → logprob: -4.9474287033081055
    7. ' se' → logprob: -5.0724287033081055
    8. 'f' → logprob: -5.4474287033081055
    9. ''arrive' → logprob: -5.9474287033081055
    10. 'do' → logprob: -6.1974287033081055

Token 639: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.1252267062664032
    2. ' jamais' → logprob: -2.6252267360687256
    3. ' pas' → logprob: -3.1252267360687256
    4. 'jam' → logprob: -6.7502264976501465
    5. 'p' → logprob: -10.125226974487305
    6. 'not' → logprob: -10.125226974487305
    7. '```' → logprob: -10.500226974487305
    8. 'j' → logprob: -10.875226974487305
    9. 't' → logprob: -11.500226974487305
    10. '
' → logprob: -11.750226974487305

Token 640: ' nécessaire' (ID: 43098)
  Prédit: 'né'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'né' → logprob: -1.0366274118423462
    2. ' nécessaire' → logprob: -1.7866274118423462
    3. 'necessary' → logprob: -1.9116274118423462
    4. 'necess' → logprob: -2.5366272926330566
    5. 'needed' → logprob: -2.5366272926330566
    6. 'le' → logprob: -3.0366272926330566
    7. 'appel' → logprob: -3.1616272926330566
    8. 'util' → logprob: -4.036627292633057
    9. 'n' → logprob: -4.161627292633057
    10. ' demandé' → logprob: -4.536627292633057

Token 641: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004487327300012112
    2. 'print' → logprob: -5.75448751449585
    3. ' if' → logprob: -7.75448751449585
    4. 'if' → logprob: -8.254487037658691
    5. '
' → logprob: -8.379487037658691
    6. '    
' → logprob: -8.754487037658691
    7. ' print' → logprob: -9.629487037658691
    8. ')' → logprob: -10.129487037658691
    9. ',' → logprob: -10.379487037658691
    10. '       ' → logprob: -10.879487037658691

Token 642: ' ce' (ID: 2357)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.7221962809562683
    2. 'le' → logprob: -1.597196340560913
    3. 'cet' → logprob: -1.722196340560913
    4. 'les' → logprob: -2.972196340560913
    5. 'l' → logprob: -3.597196340560913
    6. 'c' → logprob: -3.722196340560913
    7. 'la' → logprob: -3.847196340560913
    8. ' ce' → logprob: -5.222196102142334
    9. ' cet' → logprob: -6.847196102142334
    10. 'un' → logprob: -7.597196102142334

Token 643: ' problème' (ID: 35630)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.3980894982814789
    2. 'pro' → logprob: -1.6480895280838013
    3. 'code' → logprob: -2.6480894088745117
    4. 'contest' → logprob: -3.1480894088745117
    5. '```' → logprob: -5.273089408874512
    6. 'test' → logprob: -5.523089408874512
    7. 'proble' → logprob: -5.523089408874512
    8. 'cas' → logprob: -5.898089408874512
    9. 'problem' → logprob: -6.148089408874512
    10. 'programme' → logprob: -7.273089408874512

Token 644: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010729423956945539
    2. 'print' → logprob: -7.251072883605957
    3. '    
' → logprob: -9.001072883605957
    4. '
' → logprob: -9.876072883605957
    5. ' if' → logprob: -9.876072883605957
    6. ',' → logprob: -10.501072883605957
    7. '<|end|>' → logprob: -10.751072883605957
    8. ')' → logprob: -10.876072883605957
    9. ' print' → logprob: -11.126072883605957
    10. 'if' → logprob: -11.126072883605957

Token 645: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24100355803966522
    2. '   ' → logprob: -1.8660035133361816
    3. 'if' → logprob: -2.8660035133361816
    4. ' print' → logprob: -6.616003513336182
    5. ' if' → logprob: -6.991003513336182
    6. '
' → logprob: -8.74100399017334
    7. 'min' → logprob: -10.49100399017334
    8. 'result' → logprob: -10.99100399017334
    9. '    
' → logprob: -11.49100399017334
    10. '```' → logprob: -11.86600399017334

Token 646: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.025357332080602646
    2. '   ' → logprob: -3.775357246398926
    3. 'if' → logprob: -6.275357246398926
    4. ' print' → logprob: -8.775357246398926
    5. '
' → logprob: -9.775357246398926
    6. '    
' → logprob: -11.900357246398926
    7. '```' → logprob: -12.150357246398926
    8. ' if' → logprob: -13.275357246398926
    9. '	print' → logprob: -14.400357246398926
    10. '#' (adapté à ' #') → logprob: -14.900357246398926

Token 647: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0839853435754776
    2. 'if' → logprob: -2.5839853286743164
    3. '   ' → logprob: -5.458985328674316
    4. ' print' → logprob: -7.458985328674316
    5. ' if' → logprob: -8.333985328674316
    6. '
' → logprob: -13.208985328674316
    7. 'result' → logprob: -13.333985328674316
    8. '```' → logprob: -13.583985328674316
    9. 'min' → logprob: -14.208985328674316
    10. '    
' → logprob: -14.208985328674316

Token 648: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.6039659380912781
    2. 'ich' → logprob: -1.7289659976959229
    3. 'iche' → logprob: -2.228965997695923
    4. '#' → logprob: -2.603965997695923
    5. 'ichage' → logprob: -2.853965997695923
    6. 'print' → logprob: -3.978965997695923
    7. '   ' → logprob: -4.353965759277344
    8. 'ic' → logprob: -6.478965759277344
    9. '```' → logprob: -6.478965759277344
    10. ' print' → logprob: -7.478965759277344

Token 649: ' la' (ID: 557)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0313044972717762
    2. '(min' → logprob: -3.5313045978546143
    3. ' min' → logprob: -6.531304359436035
    4. 'print' → logprob: -9.281304359436035
    5. 'c' → logprob: -14.156304359436035
    6. '[min' → logprob: -14.406304359436035
    7. '=min' → logprob: -14.656304359436035
    8. '(' → logprob: -15.656304359436035
    9. '   ' → logprob: -15.781304359436035
    10. ':min' → logprob: -16.28130531311035

Token 650: ' plus' (ID: 2932)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3887971043586731
    2. 'print' → logprob: -1.1387970447540283
    3. '(min' → logprob: -6.513797283172607
    4. ' min' → logprob: -8.01379680633545
    5. ' print' → logprob: -9.51379680633545
    6. 'minimum' → logprob: -10.76379680633545
    7. '   ' → logprob: -12.13879680633545
    8. 'ans' → logprob: -13.26379680633545
    9. '[min' → logprob: -13.26379680633545
    10. '=min' → logprob: -13.38879680633545

Token 651: ' petite' (ID: 28119)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.019882410764694214
    2. 'small' → logprob: -4.5198822021484375
    3. 'min' → logprob: -5.1448822021484375
    4. ' petite' → logprob: -6.5198822021484375
    5. 'pro' → logprob: -7.0198822021484375
    6. 'c' → logprob: -8.894882202148438
    7. '```' → logprob: -9.019882202148438
    8. '_small' → logprob: -10.144882202148438
    9. 'val' → logprob: -10.144882202148438
    10. 'print' → logprob: -10.644882202148438

Token 652: ' différence' (ID: 79196)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.21528887748718262
    2. '(' → logprob: -2.0902888774871826
    3. '(min' → logprob: -3.9652888774871826
    4. 'candidate' → logprob: -3.9652888774871826
    5. 'c' → logprob: -4.340289115905762
    6. '(candidate' → logprob: -4.590289115905762
    7. 'min' → logprob: -4.965289115905762
    8. '(abs' → logprob: -7.215289115905762
    9. '()' → logprob: -7.590289115905762
    10. '(
' → logprob: -8.465289115905762

Token 653: ' trouv' (ID: 40254)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.026890341192483902
    2. '   ' → logprob: -3.776890277862549
    3. ' print' → logprob: -6.276890277862549
    4. 'min' → logprob: -6.401890277862549
    5. '```' → logprob: -10.526890754699707
    6. 'if' → logprob: -10.776890754699707
    7. ')' → logprob: -11.026890754699707
    8. ' min' → logprob: -11.526890754699707
    9. ',' → logprob: -11.526890754699707
    10. '`' → logprob: -12.776890754699707

Token 654: 'ée' (ID: 2894)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18741552531719208
    2. 'ée' → logprob: -2.562415599822998
    3. 'e' → logprob: -3.062415599822998
    4. '   ' → logprob: -3.687415599822998
    5. 'ie' → logprob: -4.187415599822998
    6. 'é' → logprob: -5.812415599822998
    7. 'ee' → logprob: -6.187415599822998
    8. 'min' → logprob: -7.687415599822998
    9. ' print' → logprob: -8.31241512298584
    10. ')' → logprob: -8.56241512298584

Token 655: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16430290043354034
    2. '   ' → logprob: -1.914302945137024
    3. 'if' → logprob: -5.539302825927734
    4. ' print' → logprob: -9.164302825927734
    5. '```' → logprob: -10.664302825927734
    6. ' if' → logprob: -12.164302825927734
    7. '
' → logprob: -12.539302825927734
    8. '    
' → logprob: -12.789302825927734
    9. '	print' → logprob: -14.539302825927734
    10. 'min' → logprob: -14.914302825927734

Token 656: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06500768661499023
    2. '   ' → logprob: -2.8150076866149902
    3. ' print' → logprob: -5.81500768661499
    4. '```' → logprob: -10.190008163452148
    5. 'if' → logprob: -11.940008163452148
    6. '    
' → logprob: -12.315008163452148
    7. '
' → logprob: -13.315008163452148
    8. 'min' → logprob: -13.565008163452148
    9. '	print' → logprob: -15.440008163452148
    10. ' if' → logprob: -15.815008163452148

Token 657: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0006531051476486027
    2. '   ' → logprob: -7.500653266906738
    3. ' print' → logprob: -9.375653266906738
    4. 'if' → logprob: -11.125653266906738
    5. '```' → logprob: -14.375653266906738
    6. '
' → logprob: -16.375652313232422
    7. ' if' → logprob: -17.375652313232422
    8. '	print' → logprob: -18.000652313232422
    9. '    
' → logprob: -18.500652313232422
    10. 'printf' → logprob: -19.250652313232422

Token 658: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0009345670696347952
    2. '(c' → logprob: -7.125934600830078
    3. '(' → logprob: -9.375934600830078
    4. 'min' → logprob: -10.125934600830078
    5. 'c' → logprob: -12.875934600830078
    6. ' min' → logprob: -13.750934600830078
    7. '(candidate' → logprob: -14.375934600830078
    8. '('' → logprob: -15.125934600830078
    9. '()' → logprob: -15.375934600830078
    10. '(max' → logprob: -15.625934600830078

Token 659: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00014251544780563563
    2. ')' → logprob: -9.750142097473145
    3. '(' → logprob: -10.000142097473145
    4. 'c' → logprob: -10.500142097473145
    5. ')c' → logprob: -11.750142097473145
    6. '(candidate' → logprob: -13.625142097473145
    7. '())' → logprob: -14.500142097473145
    8. '(
' → logprob: -14.750142097473145
    9. '[c' → logprob: -15.375142097473145
    10. ' (' → logprob: -15.375142097473145

Token 660: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.00019936825265176594
    2. '(c' → logprob: -8.875199317932129
    3. 'and' → logprob: -10.000199317932129
    4. 'andid' → logprob: -11.750199317932129
    5. '{' → logprob: -12.500199317932129
    6. '[c' → logprob: -14.250199317932129
    7. '(' → logprob: -14.500199317932129
    8. '[' → logprob: -14.750199317932129
    9. 'c' → logprob: -15.500199317932129
    10. 'andidat' → logprob: -15.750199317932129

Token 661: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0110715227201581
    2. ')' → logprob: -4.511071681976318
    3. '()))' → logprob: -11.51107120513916
    4. ')))' → logprob: -11.63607120513916
    5. ' ))' → logprob: -12.51107120513916
    6. '))
' → logprob: -14.76107120513916
    7. '())' → logprob: -15.01107120513916
    8. '   ' → logprob: -15.88607120513916
    9. ' )' → logprob: -16.511072158813477
    10. ')}' → logprob: -16.636072158813477


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 659
Tokens correctement prédits (1ère position, stricte): 204
Tokens correctement prédits (1ère position, avec adaptation): 219
Tokens correctement prédits (top 10): 455
Précision stricte (1ère position): 30.96%
Précision adaptée (1ère position): 33.23%
Précision (top 10): 69.04%
================================================================================
