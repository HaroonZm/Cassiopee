================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import Counter
import sys

nums = [int(line) for line in sys.stdin if line.strip()]
counts = Counter(nums)
max_freq = max(counts.values())
modes = sorted(k for k, v in counts.items() if v == max_freq)
print('\n'.join(map(str, modes)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Counter' (ID: 32251)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.41044583916664124
    2. ' abc' → logprob: -1.9104458093643188
    3. 'deque' → logprob: -2.4104459285736084
    4. ' defaultdict' → logprob: -2.5354459285736084
    5. 'default' → logprob: -4.660445690155029
    6. ' deque' → logprob: -6.035445690155029
    7. 'Counter' → logprob: -6.160445690155029
    8. '```' → logprob: -6.160445690155029
    9. ' Counter' → logprob: -6.660445690155029
    10. ' named' → logprob: -7.035445690155029

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001766040368238464
    2. '(
' → logprob: -10.125176429748535
    3. '\(' → logprob: -10.500176429748535
    4. '()' → logprob: -10.750176429748535
    5. '```' → logprob: -10.750176429748535
    6. '.' → logprob: -11.125176429748535
    7. 'import' → logprob: -11.500176429748535
    8. 'newline' → logprob: -11.625176429748535
    9. '\' → logprob: -12.000176429748535
    10. '`' → logprob: -12.250176429748535

Token 5: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007879403419792652
    2. '(
' → logprob: -6.257879257202148
    3. '\n' → logprob: -6.757879257202148
    4. '.' → logprob: -7.382879257202148
    5. '\' → logprob: -7.507879257202148
    6. 'a' → logprob: -7.632879257202148
    7. 'newline' → logprob: -7.632879257202148
    8. 'import' → logprob: -7.882879257202148
    9. '\(' → logprob: -8.132879257202148
    10. ',' → logprob: -8.382879257202148

Token 6: ' sys' (ID: 12228)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.8478734493255615
    2. ' os' → logprob: -0.9728734493255615
    3. ' re' → logprob: -2.4728734493255615
    4. ' sys' → logprob: -2.9728734493255615
    5. ' ' → logprob: -3.8478734493255615
    6. ' pandas' → logprob: -4.472873687744141
    7. ' itertools' → logprob: -4.597873687744141
    8. ' json' → logprob: -4.722873687744141
    9. ' math' → logprob: -6.097873687744141
    10. 'collections' → logprob: -6.847873687744141

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8854286074638367
    2. '.' → logprob: -1.0104286670684814
    3. '\' → logprob: -1.7604286670684814
    4. '
' → logprob: -4.260428428649902
    5. '```' → logprob: -4.510428428649902
    6. 'newline' → logprob: -4.885428428649902
    7. 'print' → logprob: -5.010428428649902
    8. 'for' → logprob: -6.385428428649902
    9. 'import' → logprob: -6.510428428649902
    10. '.readline' → logprob: -6.510428428649902

Token 8: 'nums' (ID: 44465)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3000144362449646
    2. 'for' → logprob: -2.5500144958496094
    3. 'data' → logprob: -3.1750144958496094
    4. '`' → logprob: -3.6750144958496094
    5. '```' → logprob: -3.9250144958496094
    6. '[' → logprob: -4.050014495849609
    7. 'print' → logprob: -4.300014495849609
    8. '\' → logprob: -4.425014495849609
    9. ',' → logprob: -4.800014495849609
    10. 'def' → logprob: -5.050014495849609

Token 9: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006909898947924376
    2. '(' → logprob: -8.000691413879395
    3. '.' → logprob: -8.875691413879395
    4. '=' → logprob: -9.625691413879395
    5. ')' → logprob: -9.875691413879395
    6. '[]' → logprob: -10.375691413879395
    7. '[:]' → logprob: -10.875691413879395
    8. ']' → logprob: -11.000691413879395
    9. '\[' → logprob: -11.125691413879395
    10. '[
' → logprob: -12.250691413879395

Token 10: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5152162909507751
    2. ' [' → logprob: -1.64021635055542
    3. ' list' → logprob: -1.76521635055542
    4. '[' → logprob: -4.76521635055542
    5. '[]' → logprob: -4.76521635055542
    6. ' ' → logprob: -4.76521635055542
    7. 'list' → logprob: -5.01521635055542
    8. ' Counter' → logprob: -5.64021635055542
    9. ' map' → logprob: -7.51521635055542
    10. ' input' → logprob: -8.140215873718262

Token 11: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6049337387084961
    2. '1' → logprob: -0.8549337387084961
    3. 'i' → logprob: -5.104933738708496
    4. ']' → logprob: -5.354933738708496
    5. ']int' → logprob: -5.479933738708496
    6. '7' → logprob: -5.604933738708496
    7. '0' → logprob: -5.854933738708496
    8. ')' → logprob: -6.729933738708496
    9. '2' → logprob: -6.854933738708496
    10. '3' → logprob: -7.104933738708496

Token 12: '(line' (ID: 18178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003025729674845934
    2. '(x' → logprob: -8.7503023147583
    3. '(sys' → logprob: -9.7503023147583
    4. '(line' → logprob: -10.6253023147583
    5. '(input' → logprob: -11.0003023147583
    6. '(s' → logprob: -11.0003023147583
    7. '()' → logprob: -11.8753023147583
    8. '(i' → logprob: -12.2503023147583
    9. ' (' → logprob: -13.0003023147583
    10. '('' → logprob: -13.0003023147583

Token 13: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.626912534236908
    2. '())' → logprob: -1.0019125938415527
    3. '()' → logprob: -2.6269125938415527
    4. '()]' → logprob: -4.251912593841553
    5. '(' → logprob: -4.751912593841553
    6. '.readline' → logprob: -7.001912593841553
    7. ')]' → logprob: -7.126912593841553
    8. ']' → logprob: -7.626912593841553
    9. '(line' → logprob: -8.626912117004395
    10. '(sys' → logprob: -8.751912117004395

Token 14: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6423556208610535
    2. ' for' → logprob: -0.8923556208610535
    3. '.strip' → logprob: -4.017355442047119
    4. '.readline' → logprob: -4.267355442047119
    5. '.rstrip' → logprob: -4.392355442047119
    6. 'for' → logprob: -4.767355442047119
    7. '(sys' → logprob: -5.517355442047119
    8. '(line' → logprob: -5.517355442047119
    9. '=sys' → logprob: -7.517355442047119
    10. ' )' → logprob: -7.642355442047119

Token 15: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.025220412760972977
    2. ' sys' → logprob: -4.0252203941345215
    3. 'line' → logprob: -5.0252203941345215
    4. ' ' → logprob: -8.27522087097168
    5. 'sys' → logprob: -8.90022087097168
    6. '	line' → logprob: -10.40022087097168
    7. ' open' → logprob: -10.65022087097168
    8. '_' → logprob: -12.27522087097168
    9. '=sys' → logprob: -12.27522087097168
    10. ' in' → logprob: -12.40022087097168

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005946459714323282
    2. 'in' → logprob: -5.130946636199951
    3. '<|end|>' → logprob: -12.005946159362793
    4. ' ' → logprob: -12.380946159362793
    5. '	in' → logprob: -13.130946159362793
    6. '<|end|>' → logprob: -13.630946159362793
    7. ' ' → logprob: -14.130946159362793
    8. 'import' → logprob: -14.380946159362793
    9. 's' → logprob: -14.630946159362793
    10. '=sys' → logprob: -15.068446159362793

Token 17: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.251935213804245
    2. 'sys' → logprob: -1.5019352436065674
    3. '=sys' → logprob: -12.376935005187988
    4. '	sys' → logprob: -13.626935005187988
    5. '(sys' → logprob: -14.876935005187988
    6. 'stdin' → logprob: -16.126935958862305
    7. ' ' → logprob: -16.251935958862305
    8. ' ' → logprob: -17.751935958862305
    9. '```' → logprob: -17.751935958862305
    10. ' open' → logprob: -17.876935958862305

Token 18: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0011258102022111416
    2. '.argv' → logprob: -7.251125812530518
    3. '.' → logprob: -7.876125812530518
    4. ' .' → logprob: -11.00112533569336
    5. '.stdout' → logprob: -11.75112533569336
    6. '.readline' → logprob: -12.12612533569336
    7. '.std' → logprob: -12.37612533569336
    8. 'stdin' → logprob: -14.12612533569336
    9. '.input' → logprob: -15.25112533569336
    10. '.stderr' → logprob: -15.25112533569336

Token 19: ' if' (ID: 538)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.29418596625328064
    2. ']' → logprob: -1.419185996055603
    3. ')' → logprob: -4.919186115264893
    4. '.readline' → logprob: -5.544186115264893
    5. '()]' → logprob: -7.169186115264893
    6. '.readlines' → logprob: -7.919186115264893
    7. '])]' → logprob: -8.419185638427734
    8. '])' → logprob: -8.544185638427734
    9. ')])' → logprob: -10.169185638427734
    10. 'if' → logprob: -10.669185638427734

Token 20: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.31329724192619324
    2. 'line' → logprob: -1.3132972717285156
    3. ' ' → logprob: -11.438297271728516
    4. ' len' → logprob: -11.563297271728516
    5. 'len' → logprob: -12.188297271728516
    6. '	line' → logprob: -12.313297271728516
    7. '(line' → logprob: -12.813297271728516
    8. '   ' → logprob: -14.063297271728516
    9. '=line' → logprob: -14.563297271728516
    10. '  ' → logprob: -15.063297271728516

Token 21: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.004685614723712206
    2. '.' → logprob: -6.004685401916504
    3. '.rstrip' → logprob: -6.129685401916504
    4. 'strip' → logprob: -11.629685401916504
    5. 'rstrip' → logprob: -12.254685401916504
    6. '.startswith' → logprob: -12.504685401916504
    7. ']' → logprob: -12.754685401916504
    8. '.readline' → logprob: -12.754685401916504
    9. '[:-' → logprob: -13.379685401916504
    10. '.split' → logprob: -13.504685401916504

Token 22: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00014299227041192353
    2. '()' → logprob: -9.500143051147461
    3. ']' → logprob: -9.625143051147461
    4. '()!=' → logprob: -14.875143051147461
    5. '()]
' → logprob: -15.000143051147461
    6. ']()' → logprob: -15.250143051147461
    7. '()>' → logprob: -15.250143051147461
    8. '()][' → logprob: -15.625143051147461
    9. '`]' → logprob: -15.625143051147461
    10. '']' → logprob: -15.875143051147461

Token 23: 'counts' (ID: 99089)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9897298216819763
    2. ']' → logprob: -0.9897298216819763
    3. '.' → logprob: -2.864729881286621
    4. 'Counter' → logprob: -3.489729881286621
    5. '\n' → logprob: -3.489729881286621
    6. '
' → logprob: -3.489729881286621
    7. 'counter' → logprob: -3.489729881286621
    8. ' ' → logprob: -4.239729881286621
    9. '```' → logprob: -4.239729881286621
    10. '(' → logprob: -4.614729881286621

Token 24: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23851308226585388
    2. '[' → logprob: -1.6135131120681763
    3. '.' → logprob: -4.988512992858887
    4. ']' → logprob: -5.238512992858887
    5. '=' → logprob: -7.863512992858887
    6. '[
' → logprob: -9.363512992858887
    7. ')' → logprob: -9.613512992858887
    8. '(

' → logprob: -9.738512992858887
    9. '(.)' → logprob: -9.738512992858887
    10. '(
' → logprob: -9.863512992858887

Token 25: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.34845292568206787
    2. ' Counter' → logprob: -1.2234529256820679
    3. '.Counter' → logprob: -12.3484525680542
    4. ' ' → logprob: -13.5984525680542
    5. 'Counters' → logprob: -13.8484525680542
    6. ' counter' → logprob: -14.4734525680542
    7. ' ' → logprob: -15.0984525680542
    8. 'counter' → logprob: -15.2234525680542
    9. '_counter' → logprob: -15.3484525680542
    10. 'C' → logprob: -16.098453521728516

Token 26: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.07889551669359207
    2. '(' → logprob: -2.5788955688476562
    3. '(num' → logprob: -12.703895568847656
    4. ' (' → logprob: -13.453895568847656
    5. '(
' → logprob: -14.078895568847656
    6. '(numbers' → logprob: -15.703895568847656
    7. '(

' → logprob: -16.828895568847656
    8. '(ids' → logprob: -17.328895568847656
    9. '("("' → logprob: -17.328895568847656
    10. '('' → logprob: -17.578895568847656

Token 27: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4378848391061183e-05
    2. ').' → logprob: -12.125014305114746
    3. '[' → logprob: -12.875014305114746
    4. ' )' → logprob: -13.125014305114746
    5. '))' → logprob: -13.500014305114746
    6. '`)' → logprob: -13.750014305114746
    7. ')`' → logprob: -14.625014305114746
    8. ')
' → logprob: -14.625014305114746
    9. ']' → logprob: -15.000014305114746
    10. '])' → logprob: -15.625014305114746

Token 28: 'max' (ID: 3228)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17431926727294922
    2. 'for' → logprob: -2.174319267272949
    3. 'print' → logprob: -3.799319267272949
    4. '\n' → logprob: -5.049319267272949
    5. '<|end|>' → logprob: -5.549319267272949
    6. 'most' → logprob: -6.299319267272949
    7. '.' → logprob: -6.424319267272949
    8. '' → logprob: -6.674319267272949
    9. ' for' → logprob: -6.674319267272949
    10. ')' → logprob: -6.674319267272949

Token 29: '_freq' (ID: 51889)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11950817704200745
    2. '_' → logprob: -2.4945082664489746
    3. '(count' → logprob: -4.119508266448975
    4. '_counts' → logprob: -4.619508266448975
    5. '(max' → logprob: -6.244508266448975
    6. ')' → logprob: -7.369508266448975
    7. '_count' → logprob: -8.619507789611816
    8. ' ' → logprob: -8.744507789611816
    9. '(`' → logprob: -9.119507789611816
    10. '_space' → logprob: -9.369507789611816

Token 30: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3010987937450409
    2. ' =' → logprob: -1.6760988235473633
    3. '=' → logprob: -2.6760988235473633
    4. ')' → logprob: -6.801098823547363
    5. '_counts' → logprob: -7.051098823547363
    6. '_count' → logprob: -7.551098823547363
    7. '(' → logprob: -7.801098823547363
    8. '_freq' → logprob: -8.676098823547363
    9. ' ' → logprob: -8.926098823547363
    10. '_val' → logprob: -9.051098823547363

Token 31: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08351446688175201
    2. ' max' → logprob: -2.583514451980591
    3. 'counts' → logprob: -5.45851469039917
    4. ' counts' → logprob: -7.95851469039917
    5. 'count' → logprob: -12.958514213562012
    6. '=max' → logprob: -14.208514213562012
    7. '(max' → logprob: -14.708514213562012
    8. 'counter' → logprob: -14.958514213562012
    9. ' ' → logprob: -15.708514213562012
    10. '[max' → logprob: -15.708514213562012

Token 32: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.2815811336040497
    2. '(' → logprob: -1.406581163406372
    3. ' (' → logprob: -8.531580924987793
    4. '(max' → logprob: -9.406580924987793
    5. '(
' → logprob: -9.531580924987793
    6. 'counts' → logprob: -10.781580924987793
    7. '_counts' → logprob: -11.281580924987793
    8. '(_' → logprob: -11.656580924987793
    9. '(

' → logprob: -11.906580924987793
    10. '(nums' → logprob: -12.031580924987793

Token 33: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.656383680412546e-05
    2. 'ts' → logprob: -11.000046730041504
    3. '_s' → logprob: -11.750046730041504
    4. 'sts' → logprob: -11.875046730041504
    5. '_freq' → logprob: -12.125046730041504
    6. ' s' → logprob: -13.750046730041504
    7. '_counts' → logprob: -14.125046730041504
    8. 'nts' → logprob: -14.125046730041504
    9. 'counts' → logprob: -14.125046730041504
    10. ')' → logprob: -14.375046730041504

Token 34: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.00017529279284644872
    2. '.' → logprob: -9.000175476074219
    3. '.value' → logprob: -11.000175476074219
    4. ').' → logprob: -11.250175476074219
    5. ')' → logprob: -11.375175476074219
    6. ' .' → logprob: -12.250175476074219
    7. 'values' → logprob: -12.250175476074219
    8. ' values' → logprob: -14.875175476074219
    9. '.Values' → logprob: -15.000175476074219
    10. '.)' → logprob: -16.62517547607422

Token 35: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002360902028158307
    2. ')' → logprob: -6.752360820770264
    3. '()' → logprob: -6.752360820770264
    4. ' ())' → logprob: -10.877361297607422
    5. '(),' → logprob: -14.252361297607422
    6. ' )' → logprob: -14.377361297607422
    7. '()))' → logprob: -14.377361297607422
    8. '())
' → logprob: -14.627361297607422
    9. '()]' → logprob: -15.877361297607422
    10. '(' → logprob: -16.002361297607422

Token 36: 'm' (ID: 76)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4559818506240845
    2. 'max' → logprob: -1.8309818506240845
    3. ' 
' → logprob: -2.455981731414795
    4. 'most' → logprob: -2.955981731414795
    5. ' most' → logprob: -3.955981731414795
    6. '<|end|>' → logprob: -4.705981731414795
    7. '  
' → logprob: -5.080981731414795
    8. '' → logprob: -5.205981731414795
    9. '```' → logprob: -5.455981731414795
    10. ' max' → logprob: -5.580981731414795

Token 37: 'odes' (ID: 3821)
  Prédit: 'ost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.2730254530906677
    2. 'ax' → logprob: -2.0230255126953125
    3. 'odes' → logprob: -2.7730255126953125
    4. 'ode' → logprob: -3.1480255126953125
    5. '#' → logprob: -8.523025512695312
    6. 'a' → logprob: -8.773025512695312
    7. '```' → logprob: -8.773025512695312
    8. 'odal' → logprob: -9.148025512695312
    9. 'odus' → logprob: -9.523025512695312
    10. 'most' → logprob: -10.148025512695312

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.000433291686931625
    2. '=' → logprob: -7.750433444976807
    3. '_' → logprob: -14.000432968139648
    4. ' =[' → logprob: -14.250432968139648
    5. 's' → logprob: -15.250432968139648
    6. ' ' → logprob: -15.375432968139648
    7. ' ' → logprob: -15.500432968139648
    8. ' =
' → logprob: -15.625432968139648
    9. '=[]' → logprob: -16.00043296813965
    10. ',' → logprob: -17.12543296813965

Token 39: ' sorted' (ID: 20099)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.20674701035022736
    2. '[key' → logprob: -2.581747055053711
    3. '[' → logprob: -2.706747055053711
    4. '[k' → logprob: -3.581747055053711
    5. '[count' → logprob: -5.456747055053711
    6. '[num' → logprob: -6.206747055053711
    7. '[token' → logprob: -6.331747055053711
    8. '[counter' → logprob: -6.456747055053711
    9. '[i' → logprob: -7.206747055053711
    10. '[node' → logprob: -7.456747055053711

Token 40: '(k' (ID: 12125)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.01902088150382042
    2. '(' → logprob: -4.644021034240723
    3. '(k' → logprob: -5.019021034240723
    4. '(key' → logprob: -6.769021034240723
    5. '(num' → logprob: -7.269021034240723
    6. '((' → logprob: -7.769021034240723
    7. '(token' → logprob: -9.769021034240723
    8. '(count' → logprob: -9.894021034240723
    9. '[' → logprob: -10.144021034240723
    10. '(i' → logprob: -10.394021034240723

Token 41: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04300878196954727
    2. 'for' → logprob: -3.168008804321289
    3. '	for' → logprob: -12.418008804321289
    4. ' ' → logprob: -12.668008804321289
    5. '```' → logprob: -13.293008804321289
    6. '   ' → logprob: -15.543008804321289
    7. 'f' → logprob: -16.91800880432129
    8. '
' → logprob: -17.04300880432129
    9. '  ' → logprob: -17.16800880432129
    10. ' f' → logprob: -17.16800880432129

Token 42: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.20511166751384735
    2. ',' → logprob: -1.8301116228103638
    3. ' k' → logprob: -3.8301117420196533
    4. ',k' → logprob: -5.705111503601074
    5. 'counts' → logprob: -12.955111503601074
    6. ' counts' → logprob: -13.455111503601074
    7. 'v' → logprob: -13.455111503601074
    8. ',v' → logprob: -13.580111503601074
    9. 'c' → logprob: -13.705111503601074
    10. '	k' → logprob: -14.080111503601074

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035580198746174574
    2. ',v' → logprob: -6.128558158874512
    3. ',count' → logprob: -6.878558158874512
    4. ',value' → logprob: -8.628558158874512
    5. ' in' → logprob: -9.628558158874512
    6. ',c' → logprob: -11.003558158874512
    7. ' ,' → logprob: -11.253558158874512
    8. ',k' → logprob: -11.253558158874512
    9. ',in' → logprob: -11.753558158874512
    10. ',num' → logprob: -11.878558158874512

Token 44: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2519298195838928
    2. ' v' → logprob: -1.501929759979248
    3. '	v' → logprob: -14.376930236816406
    4. ' ' → logprob: -15.876930236816406
    5. ',v' → logprob: -16.876930236816406
    6. '_v' → logprob: -18.001930236816406
    7. ')v' → logprob: -19.626930236816406
    8. ' ' → logprob: -20.126930236816406
    9. '(v' → logprob: -20.126930236816406
    10. '.v' → logprob: -20.126930236816406

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05489762872457504
    2. 'in' → logprob: -2.9298975467681885
    3. ' ' → logprob: -12.92989730834961
    4. 'import' → logprob: -13.42989730834961
    5. '<|end|>' → logprob: -13.42989730834961
    6. 'n' → logprob: -13.67989730834961
    7. ')' → logprob: -13.92989730834961
    8. 'v' → logprob: -14.05489730834961
    9. 'ine' → logprob: -14.17989730834961
    10. 'inthe' → logprob: -14.36739730834961

Token 46: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.029755808413028717
    2. ' counts' → logprob: -3.5297558307647705
    3. 'count' → logprob: -12.279755592346191
    4. '_counts' → logprob: -15.154755592346191
    5. ' ' → logprob: -15.279755592346191
    6. '```' → logprob: -16.404756546020508
    7. 'counter' → logprob: -16.904756546020508
    8. 'ount' → logprob: -17.779756546020508
    9. 'items' → logprob: -18.279756546020508
    10. 'c' → logprob: -18.529756546020508

Token 47: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.01612117327749729
    2. ' in' → logprob: -4.8911213874816895
    3. 'items' → logprob: -4.8911213874816895
    4. 'in' → logprob: -7.3911213874816895
    5. '.iteritems' → logprob: -8.641120910644531
    6. 'if' → logprob: -9.766120910644531
    7. ' .' → logprob: -10.391120910644531
    8. ' items' → logprob: -10.391120910644531
    9. ' if' → logprob: -10.766120910644531
    10. '.values' → logprob: -11.141120910644531

Token 48: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000495605927426368
    2. ' ()' → logprob: -8.625495910644531
    3. 'if' → logprob: -9.000495910644531
    4. ' if' → logprob: -9.250495910644531
    5. ')' → logprob: -10.625495910644531
    6. '())' → logprob: -10.875495910644531
    7. '(' → logprob: -11.125495910644531
    8. '```' → logprob: -11.125495910644531
    9. 'items' → logprob: -11.500495910644531
    10. '().' → logprob: -12.750495910644531

Token 49: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.005931289400905371
    2. 'if' → logprob: -5.130931377410889
    3. ' ' → logprob: -13.50593090057373
    4. ')' → logprob: -13.88093090057373
    5. ' in' → logprob: -16.130931854248047
    6. '	if' → logprob: -16.505931854248047
    7. 'If' → logprob: -16.880931854248047
    8. '=' → logprob: -17.005931854248047
    9. ' If' → logprob: -17.130931854248047
    10. '```' → logprob: -17.505931854248047

Token 50: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.16022484004497528
    2. 'v' → logprob: -1.9102247953414917
    3. ' ' → logprob: -14.910224914550781
    4. '	v' → logprob: -15.410224914550781
    5. ')v' → logprob: -17.16022491455078
    6. '_v' → logprob: -17.53522491455078
    7. ' ' → logprob: -17.53522491455078
    8. '(v' → logprob: -17.66022491455078
    9. '$v' → logprob: -17.78522491455078
    10. '```' → logprob: -18.41022491455078

Token 51: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2014501839876175
    2. ' ==' → logprob: -1.701450228691101
    3. '=' → logprob: -10.32645034790039
    4. '===' → logprob: -13.32645034790039
    5. '==
' → logprob: -14.07645034790039
    6. ')==' → logprob: -14.32645034790039
    7. ']==' → logprob: -14.95145034790039
    8. ' ' → logprob: -14.95145034790039
    9. ' =' → logprob: -15.45145034790039
    10. '()==' → logprob: -16.07645034790039

Token 52: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.20141392946243286
    2. 'max' → logprob: -1.701413869857788
    3. ' ' → logprob: -15.576414108276367
    4. '=max' → logprob: -16.076414108276367
    5. '(max' → logprob: -16.326414108276367
    6. '[max' → logprob: -16.826414108276367
    7. '	max' → logprob: -16.826414108276367
    8. ' ' → logprob: -16.951414108276367
    9. 'm' → logprob: -17.076414108276367
    10. '_max' → logprob: -17.326414108276367

Token 53: '_freq' (ID: 51889)
  Prédit: '_freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_freq' → logprob: -1.0280383548888494e-06
    2. 'freq' → logprob: -14.250000953674316
    3. '_FREQ' → logprob: -16.250001907348633
    4. '_f' → logprob: -16.625001907348633
    5. '_prob' → logprob: -17.375001907348633
    6. ')' → logprob: -17.375001907348633
    7. '_' → logprob: -17.750001907348633
    8. '```' → logprob: -18.000001907348633
    9. '(freq' → logprob: -18.125001907348633
    10. 'Freq' → logprob: -18.250001907348633

Token 54: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3676733690081164e-05
    2. ' )' → logprob: -11.12502384185791
    3. '))' → logprob: -12.50002384185791
    4. ')
' → logprob: -12.75002384185791
    5. '])' → logprob: -14.50002384185791
    6. '})' → logprob: -15.12502384185791
    7. ')return' → logprob: -15.37502384185791
    8. ')`' → logprob: -15.75002384185791
    9. ']' → logprob: -15.87502384185791
    10. '}' → logprob: -16.125022888183594

Token 55: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06501270830631256
    2. 'for' → logprob: -2.8150126934051514
    3. 'if' → logprob: -6.3150129318237305
    4. ' for' → logprob: -7.3150129318237305
    5. '
' → logprob: -8.56501293182373
    6. ' print' → logprob: -8.56501293182373
    7. '```' → logprob: -9.31501293182373
    8. ')' → logprob: -10.81501293182373
    9. ' if' → logprob: -10.94001293182373
    10. '[' → logprob: -11.19001293182373

Token 56: '('\' (ID: 24345)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026132849976420403
    2. '(m' → logprob: -4.276133060455322
    3. '(*' → logprob: -5.276133060455322
    4. '('' → logprob: -5.651133060455322
    5. '("("' → logprob: -5.776133060455322
    6. '(f' → logprob: -9.526132583618164
    7. '("' → logprob: -10.901132583618164
    8. '((' → logprob: -11.151132583618164
    9. '(len' → logprob: -11.276132583618164
    10. '()' → logprob: -11.776132583618164

Token 57: 'n' (ID: 77)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12405602633953094
    2. ''.' → logprob: -2.374056100845337
    3. '',' → logprob: -4.249055862426758
    4. ' '.' → logprob: -6.124055862426758
    5. 'n' → logprob: -6.249055862426758
    6. ',' → logprob: -6.374055862426758
    7. ''\' → logprob: -6.624055862426758
    8. '','.' → logprob: -7.124055862426758
    9. '','' → logprob: -7.624055862426758
    10. '')' → logprob: -8.249055862426758

Token 58: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.006567587610334158
    2. '.join' → logprob: -5.256567478179932
    3. '".' → logprob: -7.006567478179932
    4. ').' → logprob: -9.00656795501709
    5. ''' → logprob: -9.25656795501709
    6. '.' → logprob: -9.50656795501709
    7. '''.' → logprob: -10.00656795501709
    8. 'join' → logprob: -10.50656795501709
    9. '`.' → logprob: -10.63156795501709
    10. 'print' → logprob: -11.25656795501709

Token 59: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.1517960956552997e-05
    2. 'print' → logprob: -12.000011444091797
    3. 'jo' → logprob: -12.250011444091797
    4. 'j' → logprob: -14.625011444091797
    5. ' join' → logprob: -16.125011444091797
    6. ' ' → logprob: -19.125011444091797
    7. '```' → logprob: -19.250011444091797
    8. 'write' → logprob: -19.625011444091797
    9. 'joint' → logprob: -19.625011444091797
    10. '(join' → logprob: -20.500011444091797

Token 60: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.02013515867292881
    2. '(str' → logprob: -4.020134925842285
    3. '(m' → logprob: -6.270134925842285
    4. 'map' → logprob: -9.645134925842285
    5. '(' → logprob: -11.020134925842285
    6. '(mode' → logprob: -12.270134925842285
    7. '([' → logprob: -13.270134925842285
    8. '(list' → logprob: -13.270134925842285
    9. ' (' → logprob: -14.145134925842285
    10. ')' → logprob: -14.520134925842285

Token 61: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00028398085851222277
    2. 'str' → logprob: -8.750284194946289
    3. '(' → logprob: -9.000284194946289
    4. ' str' → logprob: -13.375284194946289
    5. ')' → logprob: -15.625284194946289
    6. '	str' → logprob: -16.25028419494629
    7. '```' → logprob: -16.62528419494629
    8. ' (' → logprob: -16.75028419494629
    9. '(chr' → logprob: -16.75028419494629
    10. '=str' → logprob: -16.87528419494629

Token 62: ',' (ID: 11)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.05290962755680084
    2. 'm' → logprob: -3.0529096126556396
    3. ',m' → logprob: -6.177909851074219
    4. ',' → logprob: -6.927909851074219
    5. ')' → logprob: -7.552909851074219
    6. ' modes' → logprob: -8.552909851074219
    7. ')m' → logprob: -8.552909851074219
    8. ')(' → logprob: -9.302909851074219
    9. '(' → logprob: -9.427909851074219
    10. '_modes' → logprob: -10.052909851074219

Token 63: ' modes' (ID: 32057)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0337090939283371
    2. ' modes' → logprob: -3.4087090492248535
    3. 'mode' → logprob: -10.533709526062012
    4. '_modes' → logprob: -11.533709526062012
    5. ' m' → logprob: -12.033709526062012
    6. '(m' → logprob: -12.533709526062012
    7. ' ' → logprob: -12.533709526062012
    8. '   ' → logprob: -12.783709526062012
    9. '	m' → logprob: -13.033709526062012
    10. 'Modes' → logprob: -13.533709526062012

Token 64: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12695908546447754
    2. ')))' → logprob: -2.1269590854644775
    3. ')' → logprob: -10.501958847045898
    4. '))))' → logprob: -13.001958847045898
    5. '))
' → logprob: -14.251958847045898
    6. ' ))' → logprob: -15.126958847045898
    7. ')))
' → logprob: -16.3769588470459
    8. ')));' → logprob: -17.1269588470459
    9. '}))' → logprob: -17.1269588470459
    10. ' ' → logprob: -17.5019588470459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 62
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 50
Précision stricte (1ère position): 43.55%
Précision adaptée (1ère position): 43.55%
Précision (top 10): 80.65%
================================================================================
