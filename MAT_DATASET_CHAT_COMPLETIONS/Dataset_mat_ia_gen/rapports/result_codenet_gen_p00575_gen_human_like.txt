================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:30:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A, B, C = map(int, input().split())

# On essaie de trouver le minimum de jours n tel que les pièces obtenues >= C
# Les pièces obtenues se calculent par:
# - pièces journalières: n * A
# - bonus pour chaque semaine complète (7 jours): (n // 7) * B

def coins(n):
    return n * A + (n // 7) * B

# Recherche binaire pour trouver le plus petit n avec coins(n) >= C
low, high = 1, 10**7  # borne haute suffisamment grande
while low < high:
    mid = (low + high) // 2
    if coins(mid) >= C:
        high = mid
    else:
        low = mid + 1

print(low)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' B' (ID: 418)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12668059766292572
    2. '.' → logprob: -3.126680612564087
    3. '+' → logprob: -3.501680612564087
    4. ' =' → logprob: -4.376680374145508
    5. ',' → logprob: -4.876680374145508
    6. ')' → logprob: -5.126680374145508
    7. '[' → logprob: -5.251680374145508
    8. ';' → logprob: -5.626680374145508
    9. '(' → logprob: -5.751680374145508
    10. '<|end|>' → logprob: -6.251680374145508

Token 4: ' C' (ID: 363)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8137774467468262
    2. '=' → logprob: -0.8137774467468262
    3. ' =' → logprob: -2.938777446746826
    4. 'C' → logprob: -3.563777446746826
    5. '.' → logprob: -4.313777446746826
    6. ' ' → logprob: -4.563777446746826
    7. ')' → logprob: -5.563777446746826
    8. ' ,' → logprob: -6.813777446746826
    9. ':' → logprob: -6.938777446746826
    10. '<|end|>' → logprob: -7.563777446746826

Token 5: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8415653705596924
    2. ';' → logprob: -1.8415653705596924
    3. 'D' → logprob: -1.9665653705596924
    4. ',' → logprob: -2.7165653705596924
    5. '(' → logprob: -2.9665653705596924
    6. '=' → logprob: -2.9665653705596924
    7. '.' → logprob: -3.7165653705596924
    8. '```' → logprob: -3.7165653705596924
    9. '[' → logprob: -3.9665653705596924
    10. '<|end|>' → logprob: -4.216565132141113

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2253360748291016
    2. '1' → logprob: -1.6003360748291016
    3. '0' → logprob: -1.7253360748291016
    4. ' [' → logprob: -1.9753360748291016
    5. '[]' → logprob: -3.2253360748291016
    6. '[' → logprob: -3.2253360748291016
    7. ' []' → logprob: -3.2253360748291016
    8. '10' → logprob: -4.600336074829102
    9. ' map' → logprob: -4.600336074829102
    10. 'input' → logprob: -4.850336074829102

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09760298579931259
    2. '(lambda' → logprob: -2.7226030826568604
    3. '<|end|>' → logprob: -3.8476030826568604
    4. '```' → logprob: -6.097602844238281
    5. '(int' → logprob: -6.972602844238281
    6. ')' → logprob: -7.597602844238281
    7. '(token' → logprob: -8.222602844238281
    8. '<|end|>' → logprob: -8.597602844238281
    9. '(
' → logprob: -8.722602844238281
    10. '(user' → logprob: -8.972602844238281

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07081340998411179
    2. ')' → logprob: -3.0708134174346924
    3. 'input' → logprob: -4.070813179016113
    4. '(' → logprob: -5.570813179016113
    5. ' input' → logprob: -7.945813179016113
    6. '<|end|>' → logprob: -8.570813179016113
    7. '=input' → logprob: -9.320813179016113
    8. ',input' → logprob: -9.320813179016113
    9. '```' → logprob: -9.320813179016113
    10. '[input' → logprob: -9.820813179016113

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023266326636075974
    2. ' input' → logprob: -3.773266315460205
    3. '(input' → logprob: -11.023266792297363
    4. ')' → logprob: -12.523266792297363
    5. ',input' → logprob: -14.898266792297363
    6. '=input' → logprob: -15.773266792297363
    7. ' ' → logprob: -16.273265838623047
    8. '```' → logprob: -16.773265838623047
    9. '	input' → logprob: -17.023265838623047
    10. '<input' → logprob: -17.148265838623047

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.9107692241668701
    2. '(' → logprob: -1.2857692241668701
    3. ')' → logprob: -1.7857692241668701
    4. '()' → logprob: -2.53576922416687
    5. '('' → logprob: -3.91076922416687
    6. '(token' → logprob: -4.410769462585449
    7. '(""))' → logprob: -4.535769462585449
    8. '(()' → logprob: -5.285769462585449
    9. '`()' → logprob: -5.660769462585449
    10. '>>()' → logprob: -6.160769462585449

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002124806633219123
    2. 'strip' → logprob: -8.500212669372559
    3. ' split' → logprob: -12.375212669372559
    4. 'rstrip' → logprob: -12.500212669372559
    5. ')' → logprob: -14.625212669372559
    6. '(split' → logprob: -15.250212669372559
    7. 'read' → logprob: -15.625212669372559
    8. 'spl' → logprob: -16.000211715698242
    9. 'startswith' → logprob: -16.875211715698242
    10. '```' → logprob: -17.125211715698242

Token 12: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06278885900974274
    2. '())' → logprob: -2.937788963317871
    3. '))' → logprob: -5.062788963317871
    4. '(' → logprob: -7.437788963317871
    5. '()' → logprob: -7.687788963317871
    6. '`)' → logprob: -8.187788963317871
    7. '()))' → logprob: -9.437788963317871
    8. ')`' → logprob: -10.312788963317871
    9. '```' → logprob: -10.812788963317871
    10. '`()' → logprob: -11.437788963317871

Token 13: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1287597119808197
    2. 'i' → logprob: -2.3787596225738525
    3. '+' → logprob: -4.378759860992432
    4. '#' → logprob: -5.253759860992432
    5. ' if' → logprob: -6.003759860992432
    6. '*' → logprob: -6.628759860992432
    7. 'x' → logprob: -6.878759860992432
    8. 'd' → logprob: -7.003759860992432
    9. ':' → logprob: -7.378759860992432
    10. '```' → logprob: -7.503759860992432

Token 14: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7890825867652893
    2. 'print' → logprob: -0.7890825867652893
    3. 'result' → logprob: -3.4140825271606445
    4. 'sum' → logprob: -3.6640825271606445
    5. ' if' → logprob: -4.6640825271606445
    6. 'max' → logprob: -4.9140825271606445
    7. '#' → logprob: -5.2890825271606445
    8. 'D' → logprob: -6.5390825271606445
    9. 'ans' → logprob: -6.9140825271606445
    10. 'total' → logprob: -7.0390825271606445

Token 15: ' essa' (ID: 19417)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7487859725952148
    2. 'ly' → logprob: -1.4987859725952148
    3. 'line' → logprob: -1.7487859725952148
    4. '_' → logprob: -2.748785972595215
    5. 'eline' → logprob: -4.748785972595215
    6. 'the' → logprob: -5.123785972595215
    7. 'A' → logprob: -5.123785972595215
    8. '```' → logprob: -5.498785972595215
    9. '_next' → logprob: -5.498785972595215
    10. 'ce' → logprob: -5.748785972595215

Token 16: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.16664113104343414
    2. 'ye' → logprob: -2.4166412353515625
    3. 'y' → logprob: -2.7916412353515625
    4. 'i' → logprob: -7.1666412353515625
    5. 'ille' → logprob: -7.9166412353515625
    6. 'yer' → logprob: -7.9166412353515625
    7. 'iye' → logprob: -7.9166412353515625
    8. 'yez' → logprob: -8.916641235351562
    9. 'ile' → logprob: -9.291641235351562
    10. 'lie' → logprob: -9.291641235351562

Token 17: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7894701957702637
    2. 'd' → logprob: -1.9144701957702637
    3. ' de' → logprob: -2.0394701957702637
    4. 'de' → logprob: -2.2894701957702637
    5. 'try' → logprob: -2.5394701957702637
    6. ' d' → logprob: -2.7894701957702637
    7. ' ' → logprob: -5.414470195770264
    8. 't' → logprob: -5.789470195770264
    9. ' :' → logprob: -5.914470195770264
    10. '#' → logprob: -6.039470195770264

Token 18: ' trouver' (ID: 23195)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.5602719783782959
    2. 'rés' → logprob: -2.310271978378296
    3. 'r' → logprob: -3.185271978378296
    4. 'l' → logprob: -3.185271978378296
    5. 'calcul' → logprob: -3.185271978378296
    6. 'res' → logprob: -3.560271978378296
    7. ' trouver' → logprob: -3.685271978378296
    8. ' résoudre' → logprob: -3.935271978378296
    9. ' calcul' → logprob: -4.185272216796875
    10. 'faire' → logprob: -4.310272216796875

Token 19: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9812667965888977
    2. ' un' → logprob: -1.481266736984253
    3. ' la' → logprob: -2.356266736984253
    4. ':' → logprob: -3.106266736984253
    5. '<|end|>' → logprob: -3.106266736984253
    6. '```' → logprob: -3.731266736984253
    7. 's' → logprob: -4.106266975402832
    8. ' une' → logprob: -4.231266975402832
    9. ',' → logprob: -4.231266975402832
    10. ' ' → logprob: -4.231266975402832

Token 20: ' minimum' (ID: 11085)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'me' → logprob: -1.1590659618377686
    2. 'maximum' → logprob: -1.2840659618377686
    3. 'max' → logprob: -2.2840659618377686
    4. 'plus' → logprob: -2.2840659618377686
    5. 'nombre' → logprob: -3.2840659618377686
    6. '#' → logprob: -3.2840659618377686
    7. 's' → logprob: -3.4090659618377686
    8. 'prem' → logprob: -3.9090659618377686
    9. 'minimum' → logprob: -3.9090659618377686
    10. ' maximum' → logprob: -4.784066200256348

Token 21: ' de' (ID: 334)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.16053950786590576
    2. 'minimum' → logprob: -2.6605396270751953
    3. 'possible' → logprob: -3.1605396270751953
    4. 'm' → logprob: -4.660539627075195
    5. 'x' → logprob: -5.035539627075195
    6. ' =' → logprob: -5.410539627075195
    7. 's' → logprob: -5.785539627075195
    8. '=' → logprob: -6.410539627075195
    9. '_' → logprob: -6.535539627075195
    10. 'result' → logprob: -6.535539627075195

Token 22: ' jours' (ID: 21323)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.300701379776001
    2. 'l' → logprob: -1.425701379776001
    3. 'A' → logprob: -2.050701379776001
    4. 'la' → logprob: -2.675701379776001
    5. 'coins' → logprob: -3.175701379776001
    6. 'temps' → logprob: -3.300701379776001
    7. 'max' → logprob: -3.550701379776001
    8. 'co' → logprob: -3.800701379776001
    9. ' A' → logprob: -3.800701379776001
    10. 'cout' → logprob: -4.800701141357422

Token 23: ' n' (ID: 297)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7408745288848877
    2. 'possible' → logprob: -2.2408745288848877
    3. 'days' → logprob: -2.4908745288848877
    4. 'for' → logprob: -2.7408745288848877
    5. ' jours' → logprob: -2.7408745288848877
    6. ' d' → logprob: -2.9908745288848877
    7. ' ' → logprob: -3.3658745288848877
    8. ' days' → logprob: -3.6158745288848877
    9. ' for' → logprob: -3.7408745288848877
    10. 'jours' → logprob: -3.8658745288848877

Token 24: ' tel' (ID: 10716)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3314554989337921
    2. ' =' → logprob: -2.0814554691314697
    3. ',' → logprob: -2.4564554691314697
    4. '=' → logprob: -3.2064554691314697
    5. ' pour' → logprob: -4.831455707550049
    6. 's' → logprob: -5.331455707550049
    7. ' ,' → logprob: -5.581455707550049
    8. ':' → logprob: -5.956455707550049
    9. 'for' → logprob: -6.206455707550049
    10. ' for' → logprob: -6.331455707550049

Token 25: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.030799265950918198
    2. '```' → logprob: -4.405799388885498
    3. 'that' → logprob: -4.780799388885498
    4. 'qu' → logprob: -5.655799388885498
    5. 'quel' → logprob: -6.280799388885498
    6. ' que' → logprob: -6.780799388885498
    7. 'q' → logprob: -7.155799388885498
    8. 'u' → logprob: -8.15579891204834
    9. 'quele' → logprob: -8.28079891204834
    10. 'qui' → logprob: -8.53079891204834

Token 26: ' les' (ID: 1341)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.2669275104999542
    2. 'A' → logprob: -2.016927480697632
    3. ' (' → logprob: -2.641927480697632
    4. '(A' → logprob: -4.516927719116211
    5. ' n' → logprob: -4.891927719116211
    6. 'n' → logprob: -5.516927719116211
    7. '(' → logprob: -5.766927719116211
    8. '(n' → logprob: -5.766927719116211
    9. ' ' → logprob: -8.141927719116211
    10. ' B' → logprob: -8.391927719116211

Token 27: ' pièces' (ID: 49165)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.2489964962005615
    2. ' n' → logprob: -1.9989964962005615
    3. 'n' → logprob: -2.1239964962005615
    4. ' A' → logprob: -2.2489964962005615
    5. ' trois' → logprob: -2.2489964962005615
    6. 'jours' → logprob: -3.2489964962005615
    7. ' jours' → logprob: -3.2489964962005615
    8. '3' → logprob: -3.3739964962005615
    9. 'tro' → logprob: -4.123996734619141
    10. 't' → logprob: -4.623996734619141

Token 28: ' obten' (ID: 28150)
  Prédit: 'produ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'produ' → logprob: -0.49039289355278015
    2. '_' → logprob: -2.4903929233551025
    3. 'de' → logprob: -3.3653929233551025
    4. ' nécessaires' → logprob: -3.8653929233551025
    5. ' fabri' → logprob: -3.8653929233551025
    6. ' ' → logprob: -4.240392684936523
    7. 'tot' → logprob: -4.240392684936523
    8. 's' → logprob: -4.365392684936523
    9. ' produ' → logprob: -4.615392684936523
    10. 'rest' → logprob: -4.615392684936523

Token 29: 'ues' (ID: 1406)
  Prédit: 'ues'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.00046832661610096693
    2. 'u' → logprob: -8.500468254089355
    3. 'es' → logprob: -8.625468254089355
    4. '```' → logprob: -10.250468254089355
    5. 'us' → logprob: -11.000468254089355
    6. '>' → logprob: -11.625468254089355
    7. '#' → logprob: -12.375468254089355
    8. 'aient' → logprob: -12.500468254089355
    9. 't' → logprob: -12.750468254089355
    10. 'ant' → logprob: -13.250468254089355

Token 30: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.8263925313949585
    2. '>=' → logprob: -1.4513925313949585
    3. ' soient' → logprob: -2.451392650604248
    4. ' n' → logprob: -2.701392650604248
    5. 'n' → logprob: -3.326392650604248
    6. '+' → logprob: -4.076392650604248
    7. ',' → logprob: -4.451392650604248
    8. 's' → logprob: -4.451392650604248
    9. ' =' → logprob: -4.701392650604248
    10. '>' → logprob: -4.701392650604248

Token 31: ' C' (ID: 363)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8184640407562256
    2. ' A' → logprob: -1.1934640407562256
    3. 'C' → logprob: -1.6934640407562256
    4. ' C' → logprob: -2.8184640407562256
    5. 'B' → logprob: -5.193464279174805
    6. ' B' → logprob: -5.943464279174805
    7. ' ' → logprob: -6.818464279174805
    8. '100' → logprob: -7.068464279174805
    9. 'max' → logprob: -8.193464279174805
    10. 'n' → logprob: -8.443464279174805

Token 32: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1840214729309082
    2. 'while' → logprob: -2.309021472930908
    3. 'for' → logprob: -3.809021472930908
    4. 'd' → logprob: -4.184021472930908
    5. '
' → logprob: -4.434021472930908
    6. 'def' → logprob: -5.309021472930908
    7. '```' → logprob: -5.684021472930908
    8. ' n' → logprob: -6.559021472930908
    9. ':' → logprob: -6.559021472930908
    10. 'x' → logprob: -6.684021472930908

Token 33: '#' (ID: 2)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9452311396598816
    2. 'n' → logprob: -1.3202311992645264
    3. '```' → logprob: -1.5702311992645264
    4. 'def' → logprob: -2.4452311992645264
    5. 'd' → logprob: -4.070230960845947
    6. 'for' → logprob: -4.695230960845947
    7. ' while' → logprob: -5.445230960845947
    8. 'l' → logprob: -5.695230960845947
    9. 'left' → logprob: -5.695230960845947
    10. '``' → logprob: -5.945230960845947

Token 34: ' Les' (ID: 7029)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6060160994529724
    2. 'left' → logprob: -1.2310161590576172
    3. 'def' → logprob: -2.731016159057617
    4. 'l' → logprob: -3.606016159057617
    5. 'n' → logprob: -3.731016159057617
    6. 'low' → logprob: -3.981016159057617
    7. 'from' → logprob: -4.481016159057617
    8. 'import' → logprob: -5.106016159057617
    9. 'for' → logprob: -5.731016159057617
    10. '```' → logprob: -6.356016159057617

Token 35: ' pièces' (ID: 49165)
  Prédit: ' jours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jours' → logprob: -0.1696888655424118
    2. 'jours' → logprob: -2.5446889400482178
    3. ' pièces' → logprob: -3.5446889400482178
    4. 'def' → logprob: -4.169688701629639
    5. 'A' → logprob: -5.419688701629639
    6. 'jour' → logprob: -5.544688701629639
    7. ' jour' → logprob: -5.669688701629639
    8. '```' → logprob: -6.044688701629639
    9. ' pieces' → logprob: -6.169688701629639
    10. ' billets' → logprob: -6.294688701629639

Token 36: ' obten' (ID: 28150)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49178647994995117
    2. ' =' → logprob: -1.1167864799499512
    3. '+=' → logprob: -4.491786479949951
    4. 'produ' → logprob: -4.866786479949951
    5. 'tot' → logprob: -5.241786479949951
    6. ' obten' → logprob: -5.741786479949951
    7. ' +=' → logprob: -5.991786479949951
    8. 'ob' → logprob: -5.991786479949951
    9. ' tot' → logprob: -6.116786479949951
    10. 'ac' → logprob: -6.241786479949951

Token 37: 'ues' (ID: 1406)
  Prédit: 'ues'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.014180435799062252
    2. 'es' → logprob: -4.389180660247803
    3. 'u' → logprob: -7.264180660247803
    4. 't' → logprob: -8.389180183410645
    5. 'ées' → logprob: -8.514180183410645
    6. '```' → logprob: -8.639180183410645
    7. 'us' → logprob: -8.764180183410645
    8. '=' → logprob: -9.639180183410645
    9. 's' → logprob: -10.264180183410645
    10. 'tes' → logprob: -10.389180183410645

Token 38: ' se' (ID: 458)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5803700089454651
    2. ' =' → logprob: -0.8303700089454651
    3. ',' → logprob: -7.33036994934082
    4. 's' → logprob: -7.58036994934082
    5. 'au' → logprob: -8.20536994934082
    6. ' au' → logprob: -8.20536994934082
    7. '>=' → logprob: -8.45536994934082
    8. ' sont' → logprob: -8.58036994934082
    9. '+=' → logprob: -8.58036994934082
    10. '```' → logprob: -8.95536994934082

Token 39: ' calcul' (ID: 7559)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.18071870505809784
    2. 'nt' → logprob: -3.5557186603546143
    3. 'n' → logprob: -4.305718898773193
    4. '```' → logprob: -4.430718898773193
    5. '=' → logprob: -4.805718898773193
    6. 's' → logprob: -4.930718898773193
    7. 'acc' → logprob: -5.055718898773193
    8. 'obt' → logprob: -5.180718898773193
    9. 'com' → logprob: -5.430718898773193
    10. 'ach' → logprob: -5.555718898773193

Token 40: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0035799918696284294
    2. 'lent' → logprob: -6.378580093383789
    3. '#' → logprob: -7.378580093383789
    4. 'e' → logprob: -7.628580093383789
    5. 'é' → logprob: -8.003580093383789
    6. 'ée' → logprob: -9.503580093383789
    7. '```' → logprob: -9.628580093383789
    8. '=' → logprob: -10.003580093383789
    9. 'aient' → logprob: -10.128580093383789
    10. '(ent' → logprob: -10.378580093383789

Token 41: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5991595983505249
    2. '=' → logprob: -0.9741595983505249
    3. ' par' → logprob: -3.3491597175598145
    4. ' au' → logprob: -4.0991597175598145
    5. 'par' → logprob: -4.7241597175598145
    6. ' n' → logprob: -6.0991597175598145
    7. 'au' → logprob: -6.7241597175598145
    8. ',' → logprob: -6.9741597175598145
    9. 'n' → logprob: -6.9741597175598145
    10. ' comme' → logprob: -6.9741597175598145

Token 42: ':
' (ID: 734)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8305442333221436
    2. ' (' → logprob: -1.2055442333221436
    3. 'n' → logprob: -2.4555442333221436
    4. ' A' → logprob: -2.8305442333221436
    5. 'A' → logprob: -3.8305442333221436
    6. ' ' → logprob: -4.455544471740723
    7. '(' → logprob: -4.580544471740723
    8. ' min' → logprob: -4.580544471740723
    9. '(n' → logprob: -4.830544471740723
    10. ' B' → logprob: -4.830544471740723

Token 43: '#' (ID: 2)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.683387815952301
    2. ' max' → logprob: -2.1833877563476562
    3. ' n' → logprob: -2.3083877563476562
    4. ' ' → logprob: -2.4333877563476562
    5. 'n' → logprob: -3.1833877563476562
    6. ' A' → logprob: -3.8083877563476562
    7. '1' → logprob: -3.8083877563476562
    8. ' min' → logprob: -3.9333877563476562
    9. 'max' → logprob: -3.9333877563476562
    10. '(' → logprob: -5.183387756347656

Token 44: ' -' (ID: 533)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.1141682863235474
    2. ' (' → logprob: -1.3641682863235474
    3. 'n' → logprob: -1.6141682863235474
    4. ' A' → logprob: -2.239168167114258
    5. 'A' → logprob: -3.114168167114258
    6. ' max' → logprob: -4.114168167114258
    7. ' \' → logprob: -4.739168167114258
    8. ' min' → logprob: -5.114168167114258
    9. 'max' → logprob: -5.614168167114258
    10. '\' → logprob: -5.864168167114258

Token 45: ' pièces' (ID: 49165)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.9904595017433167
    2. ' n' → logprob: -1.2404594421386719
    3. 'n' → logprob: -2.240459442138672
    4. ' (' → logprob: -2.490459442138672
    5. 'A' → logprob: -2.615459442138672
    6. ' la' → logprob: -4.115459442138672
    7. ' min' → logprob: -4.240459442138672
    8. ' jours' → logprob: -4.990459442138672
    9. '(A' → logprob: -4.990459442138672
    10. '(n' → logprob: -5.365459442138672

Token 46: ' journ' (ID: 22923)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.9021450281143188
    2. '_par' → logprob: -2.0271449089050293
    3. '_g' → logprob: -2.0271449089050293
    4. '_ob' → logprob: -2.1521449089050293
    5. ' +=' → logprob: -2.9021449089050293
    6. '_j' → logprob: -3.0271449089050293
    7. '_ac' → logprob: -3.1521449089050293
    8. '+=' → logprob: -3.1521449089050293
    9. ' gagn' → logprob: -3.2771449089050293
    10. 'par' → logprob: -3.9021449089050293

Token 47: 'ali' (ID: 3010)
  Prédit: 'ali'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ali' → logprob: -0.05353434756398201
    2. 'li' → logprob: -3.9285342693328857
    3. 'al' → logprob: -4.053534507751465
    4. 'ières' → logprob: -5.678534507751465
    5. 'ales' → logprob: -5.928534507751465
    6. 'ères' → logprob: -6.178534507751465
    7. 'el' → logprob: -6.303534507751465
    8. '```' → logprob: -6.928534507751465
    9. 'eli' → logprob: -7.178534507751465
    10. 'elles' → logprob: -7.428534507751465

Token 48: 'ères' (ID: 12614)
  Prédit: 'ères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ères' → logprob: -0.052027881145477295
    2. 'eres' → logprob: -4.052027702331543
    3. 'è' → logprob: -4.177027702331543
    4. 'es' → logprob: -5.427027702331543
    5. 'res' → logprob: -5.802027702331543
    6. 'ère' → logprob: -6.177027702331543
    7. '`' → logprob: -6.427027702331543
    8. 'èrement' → logprob: -6.552027702331543
    9. 'e' → logprob: -7.302027702331543
    10. '```' → logprob: -7.427027702331543

Token 49: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6796812415122986
    2. ' *' → logprob: -1.3046813011169434
    3. '*' → logprob: -2.5546813011169434
    4. 'A' → logprob: -3.1796813011169434
    5. '=' → logprob: -3.1796813011169434
    6. ' +' → logprob: -3.5546813011169434
    7. '+' → logprob: -4.429681301116943
    8. ' +=' → logprob: -5.304681301116943
    9. ',' → logprob: -5.679681301116943
    10. ':' → logprob: -5.804681301116943

Token 50: ' n' (ID: 297)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.7832092046737671
    2. ' n' → logprob: -1.533209204673767
    3. 'A' → logprob: -1.908209204673767
    4. 'n' → logprob: -2.0332093238830566
    5. ' (' → logprob: -4.283209323883057
    6. ' min' → logprob: -4.533209323883057
    7. ' B' → logprob: -4.533209323883057
    8. 'B' → logprob: -5.533209323883057
    9. 'min' → logprob: -6.033209323883057
    10. ' max' → logprob: -6.408209323883057

Token 51: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.17989163100719452
    2. ' *' → logprob: -1.804891586303711
    3. '*A' → logprob: -9.054891586303711
    4. '**' → logprob: -11.054891586303711
    5. ' ' → logprob: -13.554891586303711
    6. '*
' → logprob: -13.554891586303711
    7. '*n' → logprob: -13.554891586303711
    8. '+' → logprob: -13.679891586303711
    9. '//' → logprob: -13.679891586303711
    10. '`' → logprob: -14.054891586303711

Token 52: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03838696703314781
    2. ' A' → logprob: -3.2883870601654053
    3. 'B' → logprob: -8.038387298583984
    4. ' ' → logprob: -11.788387298583984
    5. ' B' → logprob: -11.788387298583984
    6. '	A' → logprob: -13.538387298583984
    7. '(A' → logprob: -13.538387298583984
    8. '*A' → logprob: -13.913387298583984
    9. ' (' → logprob: -14.350887298583984
    10. '`' → logprob: -14.475887298583984

Token 53: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47435900568962097
    2. '+' → logprob: -0.9743590354919434
    3. ' +
' → logprob: -8.974358558654785
    4. '+
' → logprob: -10.224358558654785
    5. '+n' → logprob: -10.224358558654785
    6. ' ' → logprob: -11.099358558654785
    7. ' ' → logprob: -11.474358558654785
    8. ' +

' → logprob: -11.474358558654785
    9. '<|end|>' → logprob: -11.724358558654785
    10. ')' → logprob: -12.099358558654785

Token 54: '#' (ID: 2)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5311418175697327
    2. ' +' → logprob: -0.9061418175697327
    3. ' ' → logprob: -6.031141757965088
    4. '+
' → logprob: -6.781141757965088
    5. ' +
' → logprob: -7.031141757965088
    6. ',' → logprob: -7.031141757965088
    7. '#' → logprob: -7.531141757965088
    8. '<|end|>' → logprob: -7.781141757965088
    9. ')' → logprob: -7.906141757965088
    10. '*' → logprob: -8.031142234802246

Token 55: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.41215091943740845
    2. ' +' → logprob: -1.1621508598327637
    3. '#' → logprob: -4.287150859832764
    4. '+
' → logprob: -5.287150859832764
    5. ' +
' → logprob: -6.412150859832764
    6. ' #' → logprob: -6.787150859832764
    7. 'import' → logprob: -6.912150859832764
    8. 'if' → logprob: -8.037151336669922
    9. ' if' → logprob: -8.162151336669922
    10. '-' → logprob: -8.537151336669922

Token 56: ' bonus' (ID: 11181)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3859863877296448
    2. '(n' → logprob: -2.010986328125
    3. ' n' → logprob: -2.135986328125
    4. ' max' → logprob: -3.760986328125
    5. 'n' → logprob: -4.135986328125
    6. '(max' → logprob: -4.760986328125
    7. '(' → logprob: -5.135986328125
    8. 'max' → logprob: -5.135986328125
    9. ' B' → logprob: -5.760986328125
    10. ' ' → logprob: -6.260986328125

Token 57: ' pour' (ID: 1930)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4700155258178711
    2. ':' → logprob: -1.845015525817871
    3. ' +' → logprob: -2.970015525817871
    4. ' :' → logprob: -3.095015525817871
    5. '*' → logprob: -3.220015525817871
    6. 'n' → logprob: -4.595015525817871
    7. ' n' → logprob: -4.595015525817871
    8. ' ' → logprob: -4.720015525817871
    9. ' =' → logprob: -5.345015525817871
    10. 'max' → logprob: -5.470015525817871

Token 58: ' chaque' (ID: 21194)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.07938814163208
    2. ' n' → logprob: -1.57938814163208
    3. 'les' → logprob: -1.82938814163208
    4. ' (' → logprob: -1.95438814163208
    5. ' les' → logprob: -2.95438814163208
    6. '(n' → logprob: -3.45438814163208
    7. '(' → logprob: -3.45438814163208
    8. ' chaque' → logprob: -4.45438814163208
    9. 'le' → logprob: -4.95438814163208
    10. 'jours' → logprob: -5.57938814163208

Token 59: ' semaine' (ID: 34450)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jour' → logprob: -1.5066486597061157
    2. 'B' → logprob: -1.7566486597061157
    3. ' ' → logprob: -1.7566486597061157
    4. ' jour' → logprob: -2.006648540496826
    5. ' B' → logprob: -2.131648540496826
    6. '100' → logprob: -3.006648540496826
    7. 'n' → logprob: -3.131648540496826
    8. 'interval' → logprob: -4.756648540496826
    9. 'multip' → logprob: -4.881648540496826
    10. ' n' → logprob: -5.131648540496826

Token 60: ' complète' (ID: 75660)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8382217884063721
    2. ':' → logprob: -0.9632217884063721
    3. ' :' → logprob: -2.713221788406372
    4. ' n' → logprob: -3.338221788406372
    5. '(n' → logprob: -3.838221788406372
    6. ' *' → logprob: -3.963221788406372
    7. 'n' → logprob: -4.338221549987793
    8. '(' → logprob: -4.463221549987793
    9. '*' → logprob: -5.338221549987793
    10. ' ' → logprob: -5.338221549987793

Token 61: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12073119729757309
    2. '(' → logprob: -3.7457311153411865
    3. '(n' → logprob: -3.7457311153411865
    4. ' n' → logprob: -3.9957311153411865
    5. 'n' → logprob: -3.9957311153411865
    6. '*' → logprob: -4.370731353759766
    7. ' *' → logprob: -5.120731353759766
    8. ' +' → logprob: -5.495731353759766
    9. ' ' → logprob: -6.620731353759766
    10. ' ((' → logprob: -6.745731353759766

Token 62: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.0671257972717285
    2. 'n' → logprob: -1.0671257972717285
    3. ' (' → logprob: -1.9421257972717285
    4. ' n' → logprob: -2.4421257972717285
    5. ' ' → logprob: -3.4421257972717285
    6. '(' → logprob: -3.9421257972717285
    7. ')' → logprob: -4.4421257972717285
    8. '(n' → logprob: -4.5671257972717285
    9. 'B' → logprob: -6.5671257972717285
    10. '```' → logprob: -6.9421257972717285

Token 63: ' jours' (ID: 21323)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6376621723175049
    2. ')' → logprob: -1.3876621723175049
    3. '*' → logprob: -2.137662172317505
    4. ' jours' → logprob: -2.387662172317505
    5. '*n' → logprob: -5.387661933898926
    6. ')*' → logprob: -6.512661933898926
    7. '*j' → logprob: -6.512661933898926
    8. ' )' → logprob: -7.012661933898926
    9. ' days' → logprob: -7.387661933898926
    10. 'n' → logprob: -7.387661933898926

Token 64: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3953820466995239
    2. '):' → logprob: -1.145382046699524
    3. ' )' → logprob: -6.020381927490234
    4. '#' → logprob: -6.770381927490234
    5. '*' → logprob: -6.895381927490234
    6. ' *' → logprob: -6.895381927490234
    7. '//' → logprob: -7.020381927490234
    8. ':' → logprob: -8.145381927490234
    9. ')*' → logprob: -8.145381927490234
    10. '),' → logprob: -8.395381927490234

Token 65: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.15420597791671753
    2. '(n' → logprob: -2.2792060375213623
    3. '(' → logprob: -3.6542060375213623
    4. 'n' → logprob: -5.404205799102783
    5. ' n' → logprob: -5.654205799102783
    6. '(B' → logprob: -5.779205799102783
    7. ' B' → logprob: -6.779205799102783
    8. ' ' → logprob: -6.904205799102783
    9. '(A' → logprob: -7.404205799102783
    10. 'B' → logprob: -7.404205799102783

Token 66: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009395726956427097
    2. ' n' → logprob: -5.384395599365234
    3. 'B' → logprob: -5.634395599365234
    4. '(n' → logprob: -7.009395599365234
    5. 'A' → logprob: -9.759395599365234
    6. ' (' → logprob: -9.759395599365234
    7. '(' → logprob: -9.884395599365234
    8. ' B' → logprob: -10.509395599365234
    9. ' ' → logprob: -11.009395599365234
    10. ')n' → logprob: -11.134395599365234

Token 67: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.034570153802633286
    2. '//' → logprob: -3.5345702171325684
    3. ' ' → logprob: -5.409570217132568
    4. ')' → logprob: -8.90956974029541
    5. '```' → logprob: -9.90956974029541
    6. '`' → logprob: -10.28456974029541
    7. ' `' → logprob: -10.40956974029541
    8. '7' → logprob: -10.53456974029541
    9. ' //
' → logprob: -12.03456974029541
    10. 'div' → logprob: -12.09706974029541

Token 68: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.029767265543341637
    2. ' ' → logprob: -3.5297672748565674
    3. ')' → logprob: -11.654767036437988
    4. ' ' → logprob: -13.154767036437988
    5. '<|end|>' → logprob: -13.279767036437988
    6. '```' → logprob: -13.654767036437988
    7. '  ' → logprob: -14.154767036437988
    8. '>' → logprob: -14.842267036437988
    9. '' → logprob: -15.342267036437988
    10. '۷' → logprob: -15.779767036437988

Token 69: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -16.62501335144043
    4. ')' → logprob: -16.75001335144043
    5. '۷' → logprob: -17.68751335144043
    6. '٧' → logprob: -17.75001335144043
    7. '' → logprob: -17.75001335144043
    8. '1' → logprob: -17.87501335144043
    9. '７' → logprob: -18.68751335144043
    10. '७' → logprob: -18.81251335144043

Token 70: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019607478752732277
    2. ' )' → logprob: -6.376960754394531
    3. '*' → logprob: -9.001960754394531
    4. ')*' → logprob: -9.251960754394531
    5. ' *' → logprob: -10.626960754394531
    6. '*)' → logprob: -11.751960754394531
    7. '`)' → logprob: -13.001960754394531
    8. ' ' → logprob: -13.376960754394531
    9. '```' → logprob: -14.001960754394531
    10. '   ' → logprob: -14.376960754394531

Token 71: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4289036691188812
    2. ' *' → logprob: -1.0539036989212036
    3. ')' → logprob: -9.053903579711914
    4. '`' → logprob: -10.553903579711914
    5. '**' → logprob: -10.678903579711914
    6. ')*' → logprob: -11.178903579711914
    7. ' ' → logprob: -11.803903579711914
    8. '```' → logprob: -12.303903579711914
    9. ' ' → logprob: -13.553903579711914
    10. '<|end|>' → logprob: -13.678903579711914

Token 72: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0019377965945750475
    2. ' B' → logprob: -6.2519378662109375
    3. ' ' → logprob: -12.751937866210938
    4. '	B' → logprob: -13.251937866210938
    5. '7' → logprob: -13.751937866210938
    6. '20' → logprob: -14.126937866210938
    7. '10' → logprob: -14.501937866210938
    8. '>B' → logprob: -14.751937866210938
    9. ')' → logprob: -15.001937866210938
    10. '```' → logprob: -15.251937866210938

Token 73: '

' (ID: 279)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6524162292480469
    2. '
' → logprob: -1.2774162292480469
    3. ':' → logprob: -2.652416229248047
    4. 'while' → logprob: -3.277416229248047
    5. '<|end|>' → logprob: -3.402416229248047
    6. ':
' → logprob: -4.152416229248047
    7. 'def' → logprob: -4.777416229248047
    8. '\n' → logprob: -4.902416229248047
    9. ' n' → logprob: -5.527416229248047
    10. '=' → logprob: -5.777416229248047

Token 74: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0034939926117658615
    2. '
' → logprob: -6.128493785858154
    3. 'def' → logprob: -7.378493785858154
    4. '```' → logprob: -8.753494262695312
    5. 'while' → logprob: -9.253494262695312
    6. 'd' → logprob: -9.503494262695312
    7. 'from' → logprob: -9.753494262695312
    8. 'for' → logprob: -9.753494262695312
    9. '=' → logprob: -9.878494262695312
    10. '\n' → logprob: -10.253494262695312

Token 75: ' coins' (ID: 28969)
  Prédit: ' minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.5569095015525818
    2. ' min' → logprob: -1.4319095611572266
    3. ' jours' → logprob: -3.1819095611572266
    4. ' find' → logprob: -3.1819095611572266
    5. ' days' → logprob: -3.8069095611572266
    6. ' nombre' → logprob: -3.9319095611572266
    7. ' trouver' → logprob: -4.181909561157227
    8. ' ' → logprob: -4.431909561157227
    9. ' minimal' → logprob: -4.431909561157227
    10. ' calcul' → logprob: -5.306909561157227

Token 76: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7373932003974915
    2. '(' → logprob: -1.2373931407928467
    3. '_to' → logprob: -2.6123931407928467
    4. '_' → logprob: -2.8623931407928467
    5. '_needed' → logprob: -3.6123931407928467
    6. '_ac' → logprob: -4.112393379211426
    7. '_required' → logprob: -4.737393379211426
    8. '_(' → logprob: -5.237393379211426
    9. '_days' → logprob: -5.237393379211426
    10. '_col' → logprob: -5.362393379211426

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018237387761473656
    2. ')' → logprob: -4.018237590789795
    3. ':' → logprob: -9.518237113952637
    4. ' ):' → logprob: -12.018237113952637
    5. '):
' → logprob: -12.268237113952637
    6. '=' → logprob: -14.768237113952637
    7. ',' → logprob: -15.018237113952637
    8. '*' → logprob: -15.143237113952637
    9. '():' → logprob: -15.143237113952637
    10. '）：' → logprob: -15.643237113952637

Token 78: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01911911740899086
    2. '   ' → logprob: -4.2691192626953125
    3. ':return' → logprob: -6.2691192626953125
    4. '):' → logprob: -6.5191192626953125
    5. ' return' → logprob: -7.7691192626953125
    6. ':
' → logprob: -8.019119262695312
    7. ' :' → logprob: -8.769119262695312
    8. '	return' → logprob: -8.769119262695312
    9. '():' → logprob: -9.019119262695312
    10. '=' → logprob: -9.519119262695312

Token 79: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2523747980594635
    2. ' return' → logprob: -1.7523747682571411
    3. '   ' → logprob: -3.0023748874664307
    4. '	return' → logprob: -11.252374649047852
    5. ' ' → logprob: -14.502374649047852
    6. '   ' → logprob: -14.502374649047852
    7. '    
' → logprob: -14.877374649047852
    8. '    ' → logprob: -14.877374649047852
    9. '```' → logprob: -15.002374649047852
    10. ' ' → logprob: -15.627374649047852

Token 80: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04869557544589043
    2. ' n' → logprob: -3.0486955642700195
    3. 'A' → logprob: -9.29869556427002
    4. ' A' → logprob: -11.42369556427002
    5. '   ' → logprob: -12.67369556427002
    6. '(n' → logprob: -13.17369556427002
    7. ' ' → logprob: -15.29869556427002
    8. '	n' → logprob: -15.79869556427002
    9. ' ' → logprob: -16.548696517944336
    10. '(' → logprob: -16.673696517944336

Token 81: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.18253639340400696
    2. ' *' → logprob: -1.8075363636016846
    3. '*A' → logprob: -6.057536602020264
    4. ')' → logprob: -9.182536125183105
    5. ' ' → logprob: -9.307536125183105
    6. '**' → logprob: -9.307536125183105
    7. '`' → logprob: -9.932536125183105
    8. ' ' → logprob: -10.557536125183105
    9. '	' → logprob: -11.057536125183105
    10. ' A' → logprob: -11.182536125183105

Token 82: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.011047935113310814
    2. ' A' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.38604736328125
    4. '	A' → logprob: -18.63604736328125
    5. '`' → logprob: -18.76104736328125
    6. '```' → logprob: -19.13604736328125
    7. '*A' → logprob: -19.26104736328125
    8. '_A' → logprob: -19.63604736328125
    9. ' ' → logprob: -19.88604736328125
    10. '   ' → logprob: -20.13604736328125

Token 83: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1002156138420105
    2. '+' → logprob: -2.3502156734466553
    3. ' ' → logprob: -12.475215911865234
    4. '+B' → logprob: -13.100215911865234
    5. ' +
' → logprob: -13.725215911865234
    6. ' ' → logprob: -13.725215911865234
    7. ' plus' → logprob: -14.975215911865234
    8. '+A' → logprob: -15.850215911865234
    9. '+
' → logprob: -16.350215911865234
    10. '+b' → logprob: -16.975215911865234

Token 84: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.05504341423511505
    2. '(n' → logprob: -2.9300434589385986
    3. '(' → logprob: -9.68004322052002
    4. ' ' → logprob: -9.93004322052002
    5. ' ((' → logprob: -10.30504322052002
    6. '((' → logprob: -11.80504322052002
    7. ' ' → logprob: -11.93004322052002
    8. 'B' → logprob: -13.93004322052002
    9. ' B' → logprob: -15.30504322052002
    10. '  ' → logprob: -15.68004322052002

Token 85: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.043298445641994476
    2. ' n' → logprob: -3.1682984828948975
    3. '(n' → logprob: -8.293298721313477
    4. ' (' → logprob: -10.043298721313477
    5. ' ' → logprob: -13.043298721313477
    6. '7' → logprob: -13.918298721313477
    7. ' ' → logprob: -14.168298721313477
    8. '	n' → logprob: -14.668298721313477
    9. ')n' → logprob: -14.793298721313477
    10. '(' → logprob: -14.793298721313477

Token 86: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.011337812058627605
    2. '//' → logprob: -4.636337757110596
    3. ' ' → logprob: -6.761337757110596
    4. '<|end|>' → logprob: -8.261338233947754
    5. ' ' → logprob: -9.386338233947754
    6. ')' → logprob: -10.011338233947754
    7. '<|end|>' → logprob: -11.136338233947754
    8. ' //
' → logprob: -12.261338233947754
    9. '```' → logprob: -12.511338233947754
    10. ')//' → logprob: -12.886338233947754

Token 87: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.009756677784025669
    2. ' ' → logprob: -4.634756565093994
    3. ' ' → logprob: -14.759757041931152
    4. '```' → logprob: -15.634757041931152
    5. '<|end|>' → logprob: -16.322256088256836
    6. '۷' → logprob: -17.259756088256836
    7. '' → logprob: -17.822256088256836
    8. ')' → logprob: -17.947256088256836
    9. '٧' → logprob: -17.947256088256836
    10. '  ' → logprob: -18.134756088256836

Token 88: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -16.500001907348633
    4. '<|end|>' → logprob: -18.125001907348633
    5. '۷' → logprob: -19.125001907348633
    6. '٧' → logprob: -19.750001907348633
    7. '৭' → logprob: -19.750001907348633
    8. '' → logprob: -19.937501907348633
    9. 'seven' → logprob: -20.000001907348633
    10. '  ' → logprob: -20.062501907348633

Token 89: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019531534053385258
    2. ' )' → logprob: -8.625195503234863
    3. ')*' → logprob: -11.125195503234863
    4. '*' → logprob: -15.250195503234863
    5. '*)' → logprob: -15.375195503234863
    6. ' *' → logprob: -15.375195503234863
    7. '   ' → logprob: -16.000194549560547
    8. ' ' → logprob: -16.375194549560547
    9. '`)' → logprob: -16.875194549560547
    10. '）' → logprob: -17.000194549560547

Token 90: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07042207568883896
    2. '*' → logprob: -2.6954221725463867
    3. '`' → logprob: -8.320422172546387
    4. ' ' → logprob: -9.570422172546387
    5. ' ' → logprob: -9.820422172546387
    6. '"' → logprob: -10.445422172546387
    7. ')' → logprob: -10.570422172546387
    8. 'B' → logprob: -10.570422172546387
    9. ''' → logprob: -11.445422172546387
    10. ' B' → logprob: -12.320422172546387

Token 91: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.6326031684875488
    2. 'B' → logprob: -0.7576031684875488
    3. ' ' → logprob: -12.63260269165039
    4. ' ' → logprob: -14.88260269165039
    5. '<|end|>' → logprob: -16.13260269165039
    6. '_B' → logprob: -16.63260269165039
    7. 'b' → logprob: -16.75760269165039
    8. ')' → logprob: -16.82010269165039
    9. '	B' → logprob: -17.63260269165039
    10. '```' → logprob: -18.19510269165039

Token 92: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18215923011302948
    2. 'def' → logprob: -2.057159185409546
    3. 'low' → logprob: -4.057159423828125
    4. 'left' → logprob: -4.682159423828125
    5. '#' → logprob: -5.682159423828125
    6. 'while' → logprob: -6.182159423828125
    7. 'min' → logprob: -6.682159423828125
    8. 'l' → logprob: -6.682159423828125
    9. 'from' → logprob: -6.932159423828125
    10. '```' → logprob: -7.557159423828125

Token 94: ' Recherche' (ID: 114815)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.06759538501501083
    2. 'low' → logprob: -2.8175954818725586
    3. 'def' → logprob: -6.442595481872559
    4. 'lo' → logprob: -6.942595481872559
    5. 'n' → logprob: -7.192595481872559
    6. 'from' → logprob: -7.317595481872559
    7. 'l' → logprob: -7.317595481872559
    8. ' left' → logprob: -7.317595481872559
    9. '#' → logprob: -9.067595481872559
    10. ' low' → logprob: -9.317595481872559

Token 95: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07096853852272034
    2. 'binary' → logprob: -4.0709686279296875
    3. 'bin' → logprob: -4.1959686279296875
    4. ' b' → logprob: -4.5709686279296875
    5. '_binary' → logprob: -4.8209686279296875
    6. 'd' → logprob: -4.8209686279296875
    7. 'n' → logprob: -5.8209686279296875
    8. '_b' → logprob: -6.6959686279296875
    9. 'v' → logprob: -6.8209686279296875
    10. 'def' → logprob: -7.0709686279296875

Token 96: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.31690511107444763
    2. 'in' → logprob: -1.31690514087677
    3. 'inary' → logprob: -5.9419050216674805
    4. '#' → logprob: -8.06690502166748
    5. '   ' → logprob: -9.19190502166748
    6. 'i' → logprob: -9.31690502166748
    7. 'ina' → logprob: -9.56690502166748
    8. 'inar' → logprob: -9.81690502166748
    9. '	' → logprob: -10.06690502166748
    10. 'iné' → logprob: -10.31690502166748

Token 97: ' pour' (ID: 1930)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.12981799244880676
    2. 'low' → logprob: -2.7548179626464844
    3. 'l' → logprob: -3.2548179626464844
    4. 'lo' → logprob: -4.129817962646484
    5. ' left' → logprob: -6.254817962646484
    6. 'n' → logprob: -7.504817962646484
    7. ' lo' → logprob: -8.379817962646484
    8. ' low' → logprob: -8.754817962646484
    9. 'def' → logprob: -8.879817962646484
    10. '
' → logprob: -8.879817962646484

Token 98: ' trouver' (ID: 23195)
  Prédit: ' trouver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -0.3594464063644409
    2. 'min' → logprob: -1.484446406364441
    3. 'n' → logprob: -3.2344465255737305
    4. 'tr' → logprob: -4.3594465255737305
    5. ' min' → logprob: -4.8594465255737305
    6. ' n' → logprob: -5.2344465255737305
    7. 'chercher' → logprob: -6.6094465255737305
    8. 'def' → logprob: -6.6094465255737305
    9. '#' → logprob: -6.7344465255737305
    10. ' minimal' → logprob: -7.1094465255737305

Token 99: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6677888035774231
    2. ' le' → logprob: -1.2927887439727783
    3. ' la' → logprob: -1.6677887439727783
    4. 'la' → logprob: -4.542788982391357
    5. ' the' → logprob: -5.042788982391357
    6. 'the' → logprob: -5.417788982391357
    7. 'n' → logprob: -6.917788982391357
    8. ' minimal' → logprob: -7.917788982391357
    9. ' n' → logprob: -8.2927885055542
    10. 'min' → logprob: -8.2927885055542

Token 100: ' plus' (ID: 2932)
  Prédit: ' minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.9360765218734741
    2. 'minimum' → logprob: -1.4360765218734741
    3. ' minimal' → logprob: -1.8110765218734741
    4. ' plus' → logprob: -2.0610766410827637
    5. 'plus' → logprob: -3.6860766410827637
    6. 'minimal' → logprob: -4.061076641082764
    7. 'min' → logprob: -4.311076641082764
    8. 'n' → logprob: -4.686076641082764
    9. ' nombre' → logprob: -5.436076641082764
    10. 'nombre' → logprob: -5.561076641082764

Token 101: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.10409680008888245
    2. ' petit' → logprob: -2.3540968894958496
    3. 'small' → logprob: -6.22909688949585
    4. 'pro' → logprob: -6.72909688949585
    5. 'court' → logprob: -8.354096412658691
    6. ' small' → logprob: -9.229096412658691
    7. 'grand' → logprob: -9.354096412658691
    8. ' pet' → logprob: -9.729096412658691
    9. 'minimal' → logprob: -10.354096412658691
    10. 'prem' → logprob: -10.604096412658691

Token 102: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.34953123331069946
    2. ' n' → logprob: -1.2245311737060547
    3. ' ' → logprob: -7.099531173706055
    4. '```' → logprob: -9.349531173706055
    5. ' entier' → logprob: -9.349531173706055
    6. '  ' → logprob: -11.599531173706055
    7. '	n' → logprob: -11.724531173706055
    8. '`' → logprob: -11.849531173706055
    9. '   ' → logprob: -11.974531173706055
    10. ' jour' → logprob: -11.974531173706055

Token 103: ' avec' (ID: 3937)
  Prédit: 'lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lo' → logprob: -0.5813733339309692
    2. 'left' → logprob: -1.4563733339309692
    3. 'low' → logprob: -1.8313733339309692
    4. 'l' → logprob: -3.2063732147216797
    5. 'def' → logprob: -5.45637321472168
    6. 'le' → logprob: -7.33137321472168
    7. ' lo' → logprob: -7.58137321472168
    8. '
' → logprob: -8.20637321472168
    9. '(low' → logprob: -8.33137321472168
    10. ' left' → logprob: -8.45637321472168

Token 104: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.14271670579910278
    2. ' coins' → logprob: -2.017716646194458
    3. '```' → logprob: -10.767716407775879
    4. 'coin' → logprob: -12.017716407775879
    5. 'pieces' → logprob: -12.767716407775879
    6. 'co' → logprob: -13.517716407775879
    7. ' pieces' → logprob: -13.517716407775879
    8. '#' → logprob: -13.767716407775879
    9. '
' → logprob: -13.892716407775879
    10. 'def' → logprob: -14.330216407775879

Token 105: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.33639535307884216
    2. 'def' → logprob: -1.7113953828811646
    3. '>=' → logprob: -3.211395263671875
    4. ' >=' → logprob: -4.086395263671875
    5. '(' → logprob: -4.336395263671875
    6. '(low' → logprob: -4.711395263671875
    7. 'left' → logprob: -4.961395263671875
    8. ' ' → logprob: -5.586395263671875
    9. 'lo' → logprob: -5.711395263671875
    10. 'low' → logprob: -6.336395263671875

Token 106: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00025228000595234334
    2. ')>=' → logprob: -8.500252723693848
    3. '(n' → logprob: -11.250252723693848
    4. ' )' → logprob: -11.375252723693848
    5. '`)' → logprob: -11.625252723693848
    6. '')' → logprob: -12.500252723693848
    7. '>=' → logprob: -12.875252723693848
    8. '")' → logprob: -13.125252723693848
    9. '）' → logprob: -13.375252723693848
    10. ')
' → logprob: -14.250252723693848

Token 107: ' >=' (ID: 5064)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6193060278892517
    2. 'left' → logprob: -1.6193060874938965
    3. 'lo' → logprob: -1.7443060874938965
    4. 'low' → logprob: -2.6193060874938965
    5. ' =' → logprob: -4.9943060874938965
    6. '=' → logprob: -5.2443060874938965
    7. '
' → logprob: -6.8693060874938965
    8. '(low' → logprob: -7.2443060874938965
    9. ':' → logprob: -7.4943060874938965
    10. 'l' → logprob: -7.4943060874938965

Token 108: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0024756586644798517
    2. ' C' → logprob: -6.002475738525391
    3. ' ' → logprob: -17.00247573852539
    4. '
' → logprob: -17.00247573852539
    5. '	C' → logprob: -18.50247573852539
    6. '```' → logprob: -18.62747573852539
    7. '   ' → logprob: -19.00247573852539
    8. '>C' → logprob: -19.00247573852539
    9. 'c' → logprob: -19.25247573852539
    10. '`' → logprob: -20.25247573852539

Token 109: '
' (ID: 198)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.13860805332660675
    2. 'low' → logprob: -2.888607978820801
    3. '
' → logprob: -3.263607978820801
    4. 'def' → logprob: -3.763607978820801
    5. 'lo' → logprob: -4.638607978820801
    6. 'l' → logprob: -6.013607978820801
    7. ' left' → logprob: -9.5136079788208
    8. 'n' → logprob: -10.2636079788208
    9. '```' → logprob: -10.7636079788208
    10. 'L' → logprob: -11.5136079788208

Token 110: 'low' (ID: 14739)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.10192159563302994
    2. 'low' → logprob: -2.351921558380127
    3. 'lo' → logprob: -6.851921558380127
    4. 'def' → logprob: -7.351921558380127
    5. 'l' → logprob: -11.851922035217285
    6. '```' → logprob: -12.976922035217285
    7. ' left' → logprob: -13.101922035217285
    8. '
' → logprob: -13.226922035217285
    9. 'lower' → logprob: -14.976922035217285
    10. 'start' → logprob: -14.976922035217285

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47187069058418274
    2. ' =' → logprob: -1.0968706607818604
    3. ' ,' → logprob: -3.2218706607818604
    4. '=' → logprob: -6.0968708992004395
    5. ' ' → logprob: -9.096870422363281
    6. '  ' → logprob: -12.596870422363281
    7. ' ' → logprob: -13.471870422363281
    8. '```' → logprob: -14.096870422363281
    9. ',n' → logprob: -14.284370422363281
    10. 's' → logprob: -14.596870422363281

Token 112: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.048587825149297714
    2. ' high' → logprob: -3.0485877990722656
    3. 'hi' → logprob: -15.423587799072266
    4. '_high' → logprob: -16.298587799072266
    5. 'High' → logprob: -16.298587799072266
    6. '(high' → logprob: -16.548587799072266
    7. '.high' → logprob: -18.048587799072266
    8. ' ' → logprob: -19.423587799072266
    9. 'up' → logprob: -19.423587799072266
    10. '```' → logprob: -19.798587799072266

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023258639499545097
    2. '=' → logprob: -3.773258686065674
    3. ',' → logprob: -11.273258209228516
    4. ' ' → logprob: -14.898258209228516
    5. ' ,' → logprob: -16.648258209228516
    6. ' =
' → logprob: -19.523258209228516
    7. ' ' → logprob: -19.523258209228516
    8. '＝' → logprob: -19.648258209228516
    9. ' =
' → logprob: -19.773258209228516
    10. '```' → logprob: -19.898258209228516

Token 114: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2475375384092331
    2. ' ' → logprob: -1.6225374937057495
    3. 'C' → logprob: -4.622537612915039
    4. '1' → logprob: -4.997537612915039
    5. ' C' → logprob: -5.247537612915039
    6. '100' → logprob: -10.872537612915039
    7. 'int' → logprob: -11.747537612915039
    8. '0' → logprob: -12.872537612915039
    9. 'max' → logprob: -13.122537612915039
    10. ' ' → logprob: -13.247537612915039

Token 115: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.028112957254052162
    2. '1' → logprob: -3.9031128883361816
    3. 'C' → logprob: -4.903112888336182
    4. ' ' → logprob: -9.90311336517334
    5. 'int' → logprob: -10.52811336517334
    6. '100' → logprob: -10.65311336517334
    7. '0' → logprob: -11.40311336517334
    8. 'max' → logprob: -12.52811336517334
    9. ' C' → logprob: -13.02811336517334
    10. '2' → logprob: -13.77811336517334

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005250006448477507
    2. ' ,' → logprob: -5.255249977111816
    3. ' =' → logprob: -11.630249977111816
    4. '=' → logprob: -12.255249977111816
    5. ' ' → logprob: -13.005249977111816
    6. ',
' → logprob: -17.380250930786133
    7. ' low' → logprob: -17.380250930786133
    8. ',n' → logprob: -17.755250930786133
    9. '100' → logprob: -18.067750930786133
    10. 'low' → logprob: -18.130250930786133

Token 117: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0030775293707847595
    2. 'C' → logprob: -5.878077507019043
    3. ' ' → logprob: -8.628077507019043
    4. 'max' → logprob: -9.878077507019043
    5. '2' → logprob: -11.003077507019043
    6. ' C' → logprob: -11.253077507019043
    7. '100' → logprob: -11.753077507019043
    8. '1' → logprob: -12.753077507019043
    9. 'int' → logprob: -13.628077507019043
    10. ' max' → logprob: -14.503077507019043

Token 118: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004035776015371084
    2. 'C' → logprob: -5.629035949707031
    3. '100' → logprob: -8.379035949707031
    4. '2' → logprob: -8.879035949707031
    5. 'max' → logprob: -9.754035949707031
    6. 'int' → logprob: -12.254035949707031
    7. '1' → logprob: -13.254035949707031
    8. '200' → logprob: -13.629035949707031
    9. ' ' → logprob: -14.754035949707031
    10. 'c' → logprob: -15.254035949707031

Token 119: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.11545363813638687
    2. '10' → logprob: -2.7404537200927734
    3. '12' → logprob: -4.115453720092773
    4. '15' → logprob: -4.365453720092773
    5. '18' → logprob: -4.865453720092773
    6. '**' → logprob: -4.990453720092773
    7. '7' → logprob: -7.490453720092773
    8. '14' → logprob: -8.490453720092773
    9. '13' → logprob: -9.115453720092773
    10. '8' → logprob: -10.240453720092773

Token 120: '7' (ID: 22)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -0.2511923313140869
    2. '18' → logprob: -2.001192331314087
    3. '12' → logprob: -3.501192331314087
    4. '9' → logprob: -3.626192331314087
    5. '10' → logprob: -3.876192331314087
    6. '14' → logprob: -5.126192092895508
    7. '13' → logprob: -6.251192092895508
    8. '16' → logprob: -6.626192092895508
    9. '11' → logprob: -8.501192092895508
    10. '17' → logprob: -10.751192092895508

Token 121: ' ' (ID: 220)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.009708168916404247
    2. ' while' → logprob: -4.884708404541016
    3. 'mid' → logprob: -6.509708404541016
    4. '
' → logprob: -7.634708404541016
    5. '<|end|>' → logprob: -9.884708404541016
    6. '  
' → logprob: -10.759708404541016
    7. ' 
' → logprob: -11.009708404541016
    8. '```' → logprob: -11.509708404541016
    9. '	while' → logprob: -11.759708404541016
    10. ' mid' → logprob: -12.009708404541016

Token 122: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.16220703721046448
    2. '
' → logprob: -1.912207007408142
    3. ' while' → logprob: -6.287207126617432
    4. '<|end|>' → logprob: -9.912206649780273
    5. '```' → logprob: -10.412206649780273
    6. '
' → logprob: -10.537206649780273
    7. 'While' → logprob: -12.162206649780273
    8. '  
' → logprob: -12.537206649780273
    9. 'mid' → logprob: -13.287206649780273
    10. '	while' → logprob: -13.412206649780273

Token 123: ' borne' (ID: 111819)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.044668495655059814
    2. ' while' → logprob: -3.169668436050415
    3. '
' → logprob: -7.294668674468994
    4. ' 
' → logprob: -7.919668674468994
    5. 'mid' → logprob: -8.294668197631836
    6. '<|end|>' → logprob: -9.044668197631836
    7. 'ans' → logprob: -9.294668197631836
    8. '  
' → logprob: -10.044668197631836
    9. 'While' → logprob: -10.044668197631836
    10. ' ' → logprob: -11.044668197631836

Token 124: ' haute' (ID: 49646)
  Prédit: ' supérieure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' supérieure' → logprob: -0.3093825578689575
    2. '_inf' → logprob: -2.309382438659668
    3. '_sup' → logprob: -2.434382438659668
    4. 'sup' → logprob: -3.684382438659668
    5. 's' → logprob: -3.934382438659668
    6. 'inf' → logprob: -4.184382438659668
    7. '_max' → logprob: -5.559382438659668
    8. '_upper' → logprob: -6.309382438659668
    9. '_' → logprob: -6.434382438659668
    10. 'infer' → logprob: -6.559382438659668

Token 125: ' suffisamment' (ID: 124434)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.11218453198671341
    2. 'large' → logprob: -2.362184524536133
    3. 'import' → logprob: -4.862184524536133
    4. 'ha' → logprob: -5.987184524536133
    5. 'grand' → logprob: -7.237184524536133
    6. 'é' → logprob: -7.362184524536133
    7. ' grande' → logprob: -9.862184524536133
    8. 'larg' → logprob: -9.987184524536133
    9. ' élevée' → logprob: -9.987184524536133
    10. ' haute' → logprob: -10.362184524536133

Token 127: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.014974257908761501
    2. '
' → logprob: -5.014974117279053
    3. ' while' → logprob: -5.139974117279053
    4. '<|end|>' → logprob: -6.139974117279053
    5. '```' → logprob: -9.014974594116211
    6. 'mid' → logprob: -10.514974594116211
    7. '<|end|>' → logprob: -10.639974594116211
    8. 'While' → logprob: -11.514974594116211
    9. '  
' → logprob: -11.639974594116211
    10. '	while' → logprob: -12.014974594116211

Token 128: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.003919295500963926
    2. ' while' → logprob: -6.1289191246032715
    3. 'mid' → logprob: -6.3789191246032715
    4. '```' → logprob: -11.00391960144043
    5. '<|end|>' → logprob: -11.75391960144043
    6. ' mid' → logprob: -12.25391960144043
    7. '
' → logprob: -13.37891960144043
    8. 'middle' → logprob: -13.50391960144043
    9. '	while' → logprob: -14.12891960144043
    10. 'While' → logprob: -14.12891960144043

Token 129: ' low' (ID: 4465)
  Prédit: ' low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.3868864178657532
    2. 'low' → logprob: -1.1368863582611084
    3. '(low' → logprob: -11.261886596679688
    4. 'Low' → logprob: -13.261886596679688
    5. '低' → logprob: -14.636886596679688
    6. '_low' → logprob: -15.511886596679688
    7. '```' → logprob: -16.261886596679688
    8. '1' → logprob: -18.011886596679688
    9. 'True' → logprob: -18.011886596679688
    10. ' ' → logprob: -18.511886596679688

Token 130: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04759451746940613
    2. '<=' → logprob: -3.1725945472717285
    3. ' <' → logprob: -5.4225945472717285
    4. '<' → logprob: -8.92259407043457
    5. ' ≤' → logprob: -10.54759407043457
    6. ')<=' → logprob: -12.54759407043457
    7. ' ' → logprob: -12.79759407043457
    8. '≤' → logprob: -13.79759407043457
    9. ' <=",' → logprob: -14.54759407043457
    10. ']<=' → logprob: -14.67259407043457

Token 131: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.011048170737922192
    2. ' high' → logprob: -4.511048316955566
    3. '_high' → logprob: -16.26104736328125
    4. 'High' → logprob: -16.51104736328125
    5. 'igh' → logprob: -17.38604736328125
    6. ' ' → logprob: -17.51104736328125
    7. '(high' → logprob: -17.51104736328125
    8. '=' → logprob: -17.63604736328125
    9. '-high' → logprob: -17.88604736328125
    10. '.high' → logprob: -18.26104736328125

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0380612351000309
    2. ':
' → logprob: -3.2880611419677734
    3. ':

' → logprob: -12.038061141967773
    4. '):
' → logprob: -12.538061141967773
    5. ':
' → logprob: -12.663061141967773
    6. '<|end|>' → logprob: -12.913061141967773
    7. ' :' → logprob: -13.663061141967773
    8. '<|end|>' → logprob: -14.163061141967773
    9. ' :
' → logprob: -14.538061141967773
    10. '():
' → logprob: -14.913061141967773

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2468285709619522
    2. ' mid' → logprob: -1.621828556060791
    3. 'mid' → logprob: -3.871828556060791
    4. '    
' → logprob: -8.37182903289795
    5. '	m' → logprob: -9.87182903289795
    6. 'm' → logprob: -11.12182903289795
    7. '  ' → logprob: -11.37182903289795
    8. '    ' → logprob: -11.49682903289795
    9. '[mid' → logprob: -11.74682903289795
    10. '_mid' → logprob: -11.87182903289795

Token 134: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.07909081876277924
    2. 'mid' (adapté à ' mid') → logprob: -2.5790908336639404
    3. '   ' → logprob: -8.70409107208252
    4. 'm' → logprob: -11.20409107208252
    5. '(mid' → logprob: -11.95409107208252
    6. '_mid' → logprob: -12.07909107208252
    7. '[mid' → logprob: -13.20409107208252
    8. '
' → logprob: -13.45409107208252
    9. '.mid' → logprob: -13.82909107208252
    10. 'Mid' → logprob: -13.82909107208252

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016135482117533684
    2. '=' → logprob: -4.1411356925964355
    3. '<|end|>' → logprob: -9.766135215759277
    4. ' ' → logprob: -10.391135215759277
    5. ')' → logprob: -11.891135215759277
    6. '<|end|>' → logprob: -13.266135215759277
    7. '=int' → logprob: -13.766135215759277
    8. ' =)' → logprob: -14.016135215759277
    9. ' =
' → logprob: -14.641135215759277
    10. ' ' → logprob: -14.953635215759277

Token 136: ' (' (ID: 350)
  Prédit: '(low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(low' → logprob: -0.12693557143211365
    2. ' (' → logprob: -2.1269354820251465
    3. '(lower' → logprob: -13.126935958862305
    4. '(left' → logprob: -13.251935958862305
    5. '(' → logprob: -13.376935958862305
    6. ' low' → logprob: -14.126935958862305
    7. '(lo' → logprob: -14.126935958862305
    8. ' ' → logprob: -15.126935958862305
    9. '   ' → logprob: -15.876935958862305
    10. '(l' → logprob: -16.126935958862305

Token 137: 'low' (ID: 14739)
  Prédit: 'low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.0001234428636962548
    2. ' low' → logprob: -9.000123023986816
    3. '(low' → logprob: -19.750123977661133
    4. 'l' → logprob: -21.750123977661133
    5. '.low' → logprob: -21.875123977661133
    6. ' ' → logprob: -22.000123977661133
    7. 'high' → logprob: -22.000123977661133
    8. 'Low' → logprob: -22.125123977661133
    9. 'lo' → logprob: -22.125123977661133
    10. '_low' → logprob: -22.250123977661133

Token 138: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10020667314529419
    2. ' +' → logprob: -2.3502066135406494
    3. '＋' → logprob: -19.60020637512207
    4. ' ' → logprob: -21.22520637512207
    5. ' ' → logprob: -21.60020637512207
    6. '=' → logprob: -21.72520637512207
    7. '[' → logprob: -21.85020637512207
    8. '+
' → logprob: -21.97520637512207
    9. '```' → logprob: -21.97520637512207
    10. '+b' → logprob: -22.22520637512207

Token 139: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.00861456897109747
    2. ' high' → logprob: -4.758614540100098
    3. ' ' → logprob: -17.758615493774414
    4. '(high' → logprob: -18.008615493774414
    5. '   ' → logprob: -19.258615493774414
    6. '.high' → logprob: -19.758615493774414
    7. 'High' → logprob: -19.883615493774414
    8. '高' → logprob: -20.258615493774414
    9. '
' → logprob: -20.383615493774414
    10. '  ' → logprob: -20.883615493774414

Token 140: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9623810658231378e-05
    2. ')//' → logprob: -11.000020027160645
    3. ' )' → logprob: -12.750020027160645
    4. ')>>' → logprob: -17.750019073486328
    5. ')
' → logprob: -19.250019073486328
    6. '）' → logprob: -21.125019073486328
    7. '   ' → logprob: -21.250019073486328
    8. '//' → logprob: -21.625019073486328
    9. ']' → logprob: -21.625019073486328
    10. ' ' → logprob: -22.250019073486328

Token 141: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.11392484605312347
    2. '//' → logprob: -2.238924741744995
    3. ')' → logprob: -6.863924980163574
    4. ')//' → logprob: -10.363924980163574
    5. '>>' → logprob: -11.488924980163574
    6. '#' → logprob: -12.363924980163574
    7. '```' → logprob: -12.613924980163574
    8. '   ' → logprob: -13.363924980163574
    9. ' ' → logprob: -13.613924980163574
    10. '
' → logprob: -13.863924980163574

Token 142: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -17.12520408630371
    4. '۲' → logprob: -17.25020408630371
    5. '２' → logprob: -18.06270408630371
    6. '```' → logprob: -18.31270408630371
    7. '  ' → logprob: -18.93770408630371
    8. '२' → logprob: -19.06270408630371
    9. '٢' → logprob: -19.06270408630371
    10. '২' → logprob: -19.31270408630371

Token 143: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '۲' → logprob: -19.625
    4. '２' → logprob: -20.25
    5. '```' → logprob: -21.0
    6. '   ' → logprob: -21.125
    7. '२' → logprob: -21.125
    8. '২' → logprob: -21.375
    9. '٢' → logprob: -21.75
    10. '₂' → logprob: -23.5625

Token 144: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21007542312145233
    2. '<|end|>' → logprob: -2.4600753784179688
    3. ' if' → logprob: -3.0850753784179688
    4. '
' → logprob: -3.5850753784179688
    5. 'if' → logprob: -3.8350753784179688
    6. ' ' → logprob: -5.960075378417969
    7. '  
' → logprob: -6.210075378417969
    8. '<|end|>' → logprob: -6.210075378417969
    9. '    
' → logprob: -6.835075378417969
    10. '  ' → logprob: -7.960075378417969

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007161212153732777
    2. ' if' → logprob: -6.1321611404418945
    3. '
' → logprob: -6.2571611404418945
    4. 'if' → logprob: -6.3821611404418945
    5. '<|end|>' → logprob: -7.0071611404418945
    6. '    
' → logprob: -8.257161140441895
    7. '  
' → logprob: -9.882161140441895
    8. '```' → logprob: -10.007161140441895
    9. '<|end|>' → logprob: -10.632161140441895
    10. '  ' → logprob: -10.882161140441895

Token 146: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15917742252349854
    2. 'if' (adapté à ' if') → logprob: -2.159177303314209
    3. '   ' → logprob: -3.534177303314209
    4. '
' → logprob: -6.534177303314209
    5. ' ' → logprob: -7.659177303314209
    6. ' 
' → logprob: -8.909177780151367
    7. '<|end|>' → logprob: -8.909177780151367
    8. '	if' → logprob: -9.034177780151367
    9. '    
' → logprob: -9.534177780151367
    10. '  ' → logprob: -10.159177780151367

Token 147: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.008614808320999146
    2. ' coins' → logprob: -4.758615016937256
    3. 'coin' → logprob: -15.258614540100098
    4. '   ' → logprob: -18.383615493774414
    5. 'co' → logprob: -19.008615493774414
    6. ' ' → logprob: -19.383615493774414
    7. ' ' → logprob: -21.258615493774414
    8. '	' → logprob: -21.508615493774414
    9. 'Coins' → logprob: -21.633615493774414
    10. ' coin' → logprob: -22.258615493774414

Token 148: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -2.339278580620885e-06
    2. ' (' → logprob: -13.375001907348633
    3. '[mid' → logprob: -14.625001907348633
    4. '(' → logprob: -15.625001907348633
    5. '(m' → logprob: -17.375001907348633
    6. ' mid' → logprob: -18.375001907348633
    7. '(min' → logprob: -19.000001907348633
    8. ')' → logprob: -19.500001907348633
    9. 'mid' → logprob: -19.500001907348633
    10. '(mi' → logprob: -20.250001907348633

Token 149: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6468016505241394
    2. '>=' → logprob: -1.1468017101287842
    3. ' >=' → logprob: -1.8968017101287842
    4. ')>=' → logprob: -4.896801471710205
    5. ' )' → logprob: -7.396801471710205
    6. ' <' → logprob: -8.271801948547363
    7. '<' → logprob: -8.521801948547363
    8. ']>=' → logprob: -10.396801948547363
    9. ' ' → logprob: -11.771801948547363
    10. ')<' → logprob: -12.771801948547363

Token 150: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.10448000580072403
    2. ' >=' → logprob: -2.354480028152466
    3. '<' → logprob: -5.604479789733887
    4. ' <' → logprob: -7.479479789733887
    5. ')>=' → logprob: -11.729479789733887
    6. ']>=' → logprob: -11.854479789733887
    7. ' ' → logprob: -13.729479789733887
    8. '≥' → logprob: -13.979479789733887
    9. ' ' → logprob: -14.479479789733887
    10. '<n' → logprob: -15.604479789733887

Token 151: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.1602245420217514
    2. ' C' → logprob: -1.9102245569229126
    3. ' ' → logprob: -15.535224914550781
    4. '	C' → logprob: -16.16022491455078
    5. ' ' → logprob: -17.41022491455078
    6. '_C' → logprob: -18.03522491455078
    7. '   ' → logprob: -18.03522491455078
    8. '>C' → logprob: -18.28522491455078
    9. '  ' → logprob: -19.16022491455078
    10. '*C' → logprob: -19.53522491455078

Token 152: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022086622193455696
    2. ':
' → logprob: -6.127208709716797
    3. ' :' → logprob: -10.877208709716797
    4. '):' → logprob: -13.127208709716797
    5. ')' → logprob: -14.127208709716797
    6. ' :
' → logprob: -14.377208709716797
    7. '):
' → logprob: -14.752208709716797
    8. '   ' → logprob: -15.002208709716797
    9. ':
' → logprob: -15.502208709716797
    10. ',' → logprob: -15.502208709716797

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08468077331781387
    2. ' high' → logprob: -2.8346807956695557
    3. '   ' → logprob: -4.084680557250977
    4. 'high' → logprob: -5.834680557250977
    5. '
' → logprob: -5.959680557250977
    6. '    
' → logprob: -10.209680557250977
    7. '_high' → logprob: -10.709680557250977
    8. '(high' → logprob: -10.709680557250977
    9. '        
' → logprob: -11.459680557250977
    10. '```' → logprob: -11.584680557250977

Token 154: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' (adapté à ' high') → logprob: -0.1002236008644104
    2. ' high' → logprob: -2.3502235412597656
    3. '   ' → logprob: -11.100223541259766
    4. '
' → logprob: -13.475223541259766
    5. '_high' → logprob: -15.725223541259766
    6. 'High' → logprob: -15.725223541259766
    7. '(high' → logprob: -16.850223541259766
    8. '.high' → logprob: -17.100223541259766
    9. '       ' → logprob: -17.725223541259766
    10. '/high' → logprob: -19.100223541259766

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00861456897109747
    2. '=' → logprob: -4.758614540100098
    3. ' ' → logprob: -19.383615493774414
    4. ')' → logprob: -20.633615493774414
    5. '＝' → logprob: -20.758615493774414
    6. ' =
' → logprob: -20.883615493774414
    7. ' =)' → logprob: -21.758615493774414
    8. '=end' → logprob: -22.008615493774414
    9. '    ' → logprob: -22.758615493774414
    10. '   ' → logprob: -23.133615493774414

Token 156: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0031777136027812958
    2. ' mid' → logprob: -5.753177642822266
    3. '[mid' → logprob: -21.378177642822266
    4. 'middle' → logprob: -21.753177642822266
    5. '(mid' → logprob: -22.253177642822266
    6. 'm' → logprob: -23.128177642822266
    7. '_mid' → logprob: -23.628177642822266
    8. '   ' → logprob: -25.253177642822266
    9. 'med' → logprob: -25.378177642822266
    10. 'midd' → logprob: -25.503177642822266

Token 157: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5979174375534058
    2. 'else' → logprob: -0.8479174375534058
    3. ' else' → logprob: -3.8479175567626953
    4. '
' → logprob: -7.972917556762695
    5. '    
' → logprob: -10.347917556762695
    6. '	else' → logprob: -10.722917556762695
    7. '```' → logprob: -12.597917556762695
    8. 'elif' → logprob: -12.972917556762695
    9. '  
' → logprob: -13.347917556762695
    10. '  ' → logprob: -13.347917556762695

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.127963587641716
    2. ' else' → logprob: -2.7529635429382324
    3. 'else' → logprob: -2.8779635429382324
    4. '    
' → logprob: -10.00296401977539
    5. '
' → logprob: -10.25296401977539
    6. '	else' → logprob: -10.62796401977539
    7. '  ' → logprob: -11.75296401977539
    8. '  
' → logprob: -12.12796401977539
    9. '   
' → logprob: -12.50296401977539
    10. ' 
' → logprob: -13.75296401977539

Token 159: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.11020662635564804
    2. '   ' → logprob: -2.3602066040039062
    3. ' else' → logprob: -4.610206604003906
    4. '	else' → logprob: -14.735206604003906
    5. '  ' → logprob: -18.610206604003906
    6. '       ' → logprob: -18.860206604003906
    7. '```' → logprob: -18.860206604003906
    8. ' ' → logprob: -20.110206604003906
    9. '_else' → logprob: -20.485206604003906
    10. '   ' → logprob: -20.735206604003906

Token 160: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08639879524707794
    2. ' low' → logprob: -2.5863988399505615
    3. 'low' → logprob: -5.086398601531982
    4. ':' → logprob: -7.211398601531982
    5. '   ' → logprob: -7.961398601531982
    6. '(low' → logprob: -9.08639907836914
    7. ':
' → logprob: -9.46139907836914
    8. '_low' → logprob: -12.46139907836914
    9. '      ' → logprob: -12.71139907836914
    10. ',' → logprob: -12.83639907836914

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019465819001197815
    2. ' low' → logprob: -4.269465923309326
    3. 'low' → logprob: -5.269465923309326
    4. '   ' → logprob: -8.894465446472168
    5. '(low' → logprob: -12.894465446472168
    6. '     ' → logprob: -14.769465446472168
    7. '           ' → logprob: -14.894465446472168
    8. ' ' → logprob: -15.269465446472168
    9. '	   ' → logprob: -15.519465446472168
    10. '    ' → logprob: -15.519465446472168

Token 162: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.003180563682690263
    2. ' low' → logprob: -5.753180503845215
    3. '   ' → logprob: -13.003180503845215
    4. '       ' → logprob: -14.753180503845215
    5. '    ' → logprob: -16.62818145751953
    6. '(low' → logprob: -17.00318145751953
    7. 'Low' → logprob: -18.37818145751953
    8. '  ' → logprob: -18.75318145751953
    9. '_low' → logprob: -19.25318145751953
    10. ' ' → logprob: -19.25318145751953

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0007133854669518769
    2. '=' → logprob: -7.250713348388672
    3. ' +=' → logprob: -12.625713348388672
    4. ' ' → logprob: -16.625713348388672
    5. '    ' → logprob: -19.625713348388672
    6. ' ' → logprob: -19.750713348388672
    7. ' +' → logprob: -20.500713348388672
    8. '+=' → logprob: -20.500713348388672
    9. '+' → logprob: -21.875713348388672
    10. ')' → logprob: -22.125713348388672

Token 164: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.07889088988304138
    2. ' mid' → logprob: -2.578890800476074
    3. '[mid' → logprob: -14.828890800476074
    4. '(mid' → logprob: -15.203890800476074
    5. '_mid' → logprob: -15.828890800476074
    6. '   ' → logprob: -15.828890800476074
    7. ' ' → logprob: -16.70389175415039
    8. 'middle' → logprob: -17.07889175415039
    9. '    ' → logprob: -17.45389175415039
    10. '.mid' → logprob: -17.45389175415039

Token 165: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1269282102584839
    2. ' +' → logprob: -2.1269283294677734
    3. '+
' → logprob: -17.626928329467773
    4. ' +
' → logprob: -18.001928329467773
    5. ' plus' → logprob: -18.126928329467773
    6. ' +=' → logprob: -18.876928329467773
    7. '+=' → logprob: -19.126928329467773
    8. ' ' → logprob: -19.376928329467773
    9. '＋' → logprob: -19.376928329467773
    10. '=' → logprob: -19.751928329467773

Token 166: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -20.250003814697266
    4. '<|end|>' → logprob: -20.500003814697266
    5. '۱' → logprob: -20.875003814697266
    6. '१' → logprob: -21.375003814697266
    7. '   ' → logprob: -21.562503814697266
    8. '１' → logprob: -21.812503814697266
    9. '১' → logprob: -21.937503814697266
    10. 'def' → logprob: -22.437503814697266

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -17.000001907348633
    4. '   ' → logprob: -20.812501907348633
    5. '۱' → logprob: -21.312501907348633
    6. '`' → logprob: -21.750001907348633
    7. '``' → logprob: -21.812501907348633
    8. '  ' → logprob: -22.000001907348633
    9. '१' → logprob: -22.187501907348633
    10. '১' → logprob: -22.375001907348633

Token 168: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4617256056226324e-05
    2. '
' → logprob: -11.250014305114746
    3. ' print' → logprob: -13.750014305114746
    4. '
' → logprob: -15.250014305114746
    5. '

' → logprob: -16.000015258789062
    6. '```' → logprob: -16.000015258789062
    7. ')' → logprob: -18.000015258789062
    8. '(print' → logprob: -18.125015258789062
    9. '#print' → logprob: -18.750015258789062
    10. '    
' → logprob: -19.250015258789062

Token 169: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.875
    3. ' print' → logprob: -17.25
    4. '```' → logprob: -18.875
    5. '#' → logprob: -20.625
    6. '#print' → logprob: -21.25
    7. '  
' → logprob: -21.75
    8. '
' → logprob: -21.875
    9. '    
' → logprob: -22.125
    10. '(print' → logprob: -22.375

Token 170: '(low' (ID: 119835)
  Prédit: '(low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(low' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -12.750003814697266
    3. '(high' → logprob: -14.250003814697266
    4. '(lower' → logprob: -16.250003814697266
    5. '(lo' → logprob: -16.750003814697266
    6. 'low' → logprob: -17.750003814697266
    7. '(left' → logprob: -18.875003814697266
    8. '(l' → logprob: -19.500003814697266
    9. '(loss' → logprob: -19.750003814697266
    10. '((' → logprob: -21.000003814697266

Token 171: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.375
    3. '))' → logprob: -17.5
    4. ')`' → logprob: -18.125
    5. ')}' → logprob: -18.625
    6. '())' → logprob: -19.375
    7. '`)' → logprob: -20.0
    8. '})' → logprob: -20.375
    9. '()' → logprob: -20.5
    10. '}' → logprob: -20.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 169
Tokens correctement prédits (1ère position, stricte): 54
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 125
Précision stricte (1ère position): 31.95%
Précision adaptée (1ère position): 34.32%
Précision (top 10): 73.96%
================================================================================
