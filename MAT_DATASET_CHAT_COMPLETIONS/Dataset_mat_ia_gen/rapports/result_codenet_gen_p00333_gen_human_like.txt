================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:12:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
W, H, C = map(int, input().split())
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a
g = gcd(W, H)
num_sections = (W // g) * (H // g)
print(num_sections * C)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'W' (ID: 54)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' H' (ID: 487)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36383742094039917
    2. ',' → logprob: -1.238837480545044
    3. ' =' → logprob: -4.738837242126465
    4. ')' → logprob: -5.988837242126465
    5. '*' → logprob: -6.988837242126465
    6. '```' → logprob: -7.113837242126465
    7. '.' → logprob: -7.363837242126465
    8. ';' → logprob: -7.363837242126465
    9. ':' → logprob: -7.988837242126465
    10. '[' → logprob: -9.363837242126465

Token 4: ' C' (ID: 363)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0371747761964798
    2. ' =' → logprob: -3.537174701690674
    3. ',' → logprob: -4.912174701690674
    4. '```' → logprob: -11.912175178527832
    5. ' ' → logprob: -12.037175178527832
    6. ')' → logprob: -12.037175178527832
    7. ':' → logprob: -12.162175178527832
    8. '.' → logprob: -12.662175178527832
    9. ' ,' → logprob: -12.912175178527832
    10. ';' → logprob: -13.037175178527832

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04271641746163368
    2. ',' → logprob: -3.2927165031433105
    3. ' =' → logprob: -5.6677165031433105
    4. ')' → logprob: -8.167716026306152
    5. '```' → logprob: -8.292716026306152
    6. '.' → logprob: -8.542716026306152
    7. '[' → logprob: -9.292716026306152
    8. ':' → logprob: -9.417716026306152
    9. '*' → logprob: -9.667716026306152
    10. '_' → logprob: -10.042716026306152

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.033446166664361954
    2. '0' → logprob: -4.908446311950684
    3. ' map' → logprob: -5.533446311950684
    4. '224' → logprob: -5.658446311950684
    5. '10' → logprob: -5.783446311950684
    6. 'map' → logprob: -5.908446311950684
    7. '32' → logprob: -6.033446311950684
    8. ' image' → logprob: -6.158446311950684
    9. 'image' → logprob: -7.408446311950684
    10. '256' → logprob: -7.408446311950684

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007914528250694275
    2. '<|end|>' → logprob: -5.5079145431518555
    3. '(lambda' → logprob: -5.8829145431518555
    4. ')' → logprob: -8.257914543151855
    5. '```' → logprob: -8.257914543151855
    6. '(int' → logprob: -9.007914543151855
    7. '<|end|>' → logprob: -9.507914543151855
    8. '(user' → logprob: -10.382914543151855
    9. 'user' → logprob: -10.757914543151855
    10. '(str' → logprob: -11.132914543151855

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00421492476016283
    2. '(' → logprob: -5.754214763641357
    3. 'input' → logprob: -7.379214763641357
    4. ')' → logprob: -8.004215240478516
    5. ' input' → logprob: -10.629215240478516
    6. '<input' → logprob: -11.379215240478516
    7. ',input' → logprob: -11.379215240478516
    8. '('' → logprob: -12.004215240478516
    9. '=input' → logprob: -12.379215240478516
    10. '[input' → logprob: -12.879215240478516

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759831070899963
    2. ' input' → logprob: -0.8259831070899963
    3. '(input' → logprob: -10.325983047485352
    4. ')' → logprob: -11.575983047485352
    5. ' )' → logprob: -15.075983047485352
    6. ',input' → logprob: -15.075983047485352
    7. '```' → logprob: -15.075983047485352
    8. ' ' → logprob: -15.700983047485352
    9. '=input' → logprob: -16.07598304748535
    10. '(' → logprob: -16.20098304748535

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.154255747795105
    2. '())' → logprob: -1.279255747795105
    3. ')' → logprob: -1.654255747795105
    4. '(' → logprob: -2.0292558670043945
    5. '().' → logprob: -3.1542558670043945
    6. '('' → logprob: -4.6542558670043945
    7. '());' → logprob: -5.1542558670043945
    8. '(()' → logprob: -5.4042558670043945
    9. '```' → logprob: -5.6542558670043945
    10. '`()' → logprob: -6.0292558670043945

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.009915687143802643
    2. 'strip' → logprob: -4.634915828704834
    3. ')' → logprob: -9.384915351867676
    4. 'rstrip' → logprob: -10.009915351867676
    5. 'read' → logprob: -11.134915351867676
    6. ' split' → logprob: -11.259915351867676
    7. '(split' → logprob: -13.384915351867676
    8. 'decode' → logprob: -15.259915351867676
    9. 'spl' → logprob: -15.509915351867676
    10. '```' → logprob: -15.634915351867676

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07699281722307205
    2. '())' → logprob: -2.9519927501678467
    3. '))' → logprob: -4.201992988586426
    4. '(' → logprob: -5.451992988586426
    5. '()' → logprob: -6.951992988586426
    6. '('' → logprob: -7.076992988586426
    7. '`)' → logprob: -7.826992988586426
    8. '()))' → logprob: -8.701992988586426
    9. '')' → logprob: -9.701992988586426
    10. '(
' → logprob: -10.326992988586426

Token 13: 'def' (ID: 1314)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.127271056175232
    2. ',' → logprob: -1.502271056175232
    3. '#' → logprob: -2.5022711753845215
    4. 'a' → logprob: -2.7522711753845215
    5. '*' → logprob: -3.1272711753845215
    6. 'for' → logprob: -3.3772711753845215
    7. 'w' → logprob: -3.5022711753845215
    8. '.' → logprob: -3.6272711753845215
    9. ')' → logprob: -3.7522711753845215
    10. ',
' → logprob: -4.1272711753845215

Token 14: ' gcd' (ID: 106918)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08584637194871902
    2. ' space' → logprob: -4.085846424102783
    3. ' process' → logprob: -4.335846424102783
    4. ' calculate' → logprob: -4.460846424102783
    5. ' my' → logprob: -4.585846424102783
    6. ' main' → logprob: -5.085846424102783
    7. ' solve' → logprob: -5.710846424102783
    8. ' def' → logprob: -5.960846424102783
    9. ' dfs' → logprob: -5.960846424102783
    10. ' input' → logprob: -6.460846424102783

Token 15: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003230233211070299
    2. '_' → logprob: -6.253230094909668
    3. '(a' → logprob: -7.003230094909668
    4. '(x' → logprob: -9.128230094909668
    5. ' (' → logprob: -9.628230094909668
    6. '(n' → logprob: -10.003230094909668
    7. 'a' → logprob: -10.753230094909668
    8. '<|end|>' → logprob: -11.128230094909668
    9. '```' → logprob: -11.503230094909668
    10. '<|end|>' → logprob: -11.503230094909668

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016466111410409212
    2. ',a' → logprob: -7.126646518707275
    3. ' ,' → logprob: -7.251646518707275
    4. ',b' → logprob: -9.501646995544434
    5. ')' → logprob: -11.251646995544434
    6. ',n' → logprob: -11.376646995544434
    7. 'a' → logprob: -11.501646995544434
    8. '(a' → logprob: -11.876646995544434
    9. ',)' → logprob: -13.001646995544434
    10. '_,' → logprob: -13.251646995544434

Token 17: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12692873179912567
    2. ' b' → logprob: -2.1269288063049316
    3. ' ' → logprob: -14.876928329467773
    4. ')b' → logprob: -16.001928329467773
    5. ',b' → logprob: -16.126928329467773
    6. '	b' → logprob: -16.626928329467773
    7. ' ' → logprob: -17.501928329467773
    8. ',' → logprob: -17.876928329467773
    9. '>b' → logprob: -18.251928329467773
    10. '<|end|>' → logprob: -18.251928329467773

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002133490750566125
    2. ')' → logprob: -6.252133369445801
    3. '):
' → logprob: -8.6271333694458
    4. ':' → logprob: -11.6271333694458
    5. ''):' → logprob: -12.3771333694458
    6. ' ):' → logprob: -13.0021333694458
    7. '   ' → logprob: -13.1271333694458
    8. '>):' → logprob: -13.5021333694458
    9. '):
' → logprob: -13.6271333694458
    10. '=' → logprob: -13.8771333694458

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02939044125378132
    2. ' if' → logprob: -4.404390335083008
    3. ' ' → logprob: -4.904390335083008
    4. '```' → logprob: -5.779390335083008
    5. ' return' → logprob: -6.404390335083008
    6. ':' → logprob: -6.529390335083008
    7. '	if' → logprob: -7.529390335083008
    8. '    ' → logprob: -7.904390335083008
    9. ' 
' → logprob: -8.029390335083008
    10. ' :' → logprob: -8.029390335083008

Token 20: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04936809837818146
    2. ' if' → logprob: -3.299368143081665
    3. ' while' → logprob: -5.299367904663086
    4. ' return' → logprob: -5.924367904663086
    5. '```' → logprob: -6.299367904663086
    6. '    ' → logprob: -7.174367904663086
    7. '    
' → logprob: -8.049367904663086
    8. 'if' → logprob: -8.924367904663086
    9. ' ```' → logprob: -9.049367904663086
    10. ' 
' → logprob: -9.174367904663086

Token 21: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.9791951179504395
    2. 'a' → logprob: -1.3541951179504395
    3. ' a' → logprob: -1.3541951179504395
    4. 'b' → logprob: -2.2291951179504395
    5. ' ' → logprob: -7.7291951179504395
    6. '(a' → logprob: -11.854194641113281
    7. '   ' → logprob: -11.979194641113281
    8. ' not' → logprob: -12.979194641113281
    9. '	a' → logprob: -13.479194641113281
    10. '  ' → logprob: -13.604194641113281

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018567191436886787
    2. ' !=' → logprob: -4.268567085266113
    3. '>' → logprob: -6.393567085266113
    4. ' >' → logprob: -7.018567085266113
    5. '!=' → logprob: -7.143567085266113
    6. ' :' → logprob: -8.268567085266113
    7. ' and' → logprob: -8.268567085266113
    8. ':
' → logprob: -8.268567085266113
    9. ' ' → logprob: -9.518567085266113
    10. '   ' → logprob: -10.268567085266113

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2111290544271469
    2. 'a' → logprob: -1.711129069328308
    3. ' a' → logprob: -4.836129188537598
    4. '   ' → logprob: -6.836129188537598
    5. '```' → logprob: -9.211129188537598
    6. 'n' → logprob: -9.336129188537598
    7. '0' → logprob: -9.961129188537598
    8. ',' → logprob: -10.086129188537598
    9. ' return' → logprob: -10.211129188537598
    10. 'return' → logprob: -10.336129188537598

Token 24: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.2296629548072815
    2. ' a' → logprob: -1.6046628952026367
    3. '       ' → logprob: -5.729662895202637
    4. '   ' → logprob: -7.104662895202637
    5. '```' → logprob: -9.854662895202637
    6. '	a' → logprob: -9.979662895202637
    7. '    ' → logprob: -10.604662895202637
    8. 't' → logprob: -11.354662895202637
    9. '>a' → logprob: -11.604662895202637
    10. 'r' → logprob: -12.604662895202637

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03334828093647957
    2. ' %=' → logprob: -3.908348321914673
    3. '%' → logprob: -5.158348083496094
    4. '%=' → logprob: -5.908348083496094
    5. ' ,' → logprob: -6.033348083496094
    6. ' %' → logprob: -7.033348083496094
    7. '%,' → logprob: -7.408348083496094
    8. '=' → logprob: -8.408348083496094
    9. ' %,' → logprob: -9.658348083496094
    10. ' =' → logprob: -10.908348083496094

Token 26: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759473443031311
    2. ' b' → logprob: -0.8259473443031311
    3. '<|end|>' → logprob: -12.200947761535645
    4. ' ' → logprob: -13.075947761535645
    5. '    ' → logprob: -15.450947761535645
    6. '	b' → logprob: -15.825947761535645
    7. '>b' → logprob: -16.200946807861328
    8. '%b' → logprob: -16.200946807861328
    9. '<|end|>' → logprob: -16.200946807861328
    10. ' ' → logprob: -17.200946807861328

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519374191761017
    2. '=' → logprob: -1.5019373893737793
    3. '   ' → logprob: -12.501937866210938
    4. ',' → logprob: -12.626937866210938
    5. '<|end|>' → logprob: -14.626937866210938
    6. ' ' → logprob: -15.626937866210938
    7. '    ' → logprob: -16.001937866210938
    8. '%=' → logprob: -16.376937866210938
    9. '<|end|>' → logprob: -16.376937866210938
    10. ')' → logprob: -16.376937866210938

Token 28: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.11282368004322052
    2. 'b' → logprob: -2.237823724746704
    3. ' ' → logprob: -14.487823486328125
    4. '   ' → logprob: -15.612823486328125
    5. '    ' → logprob: -16.362823486328125
    6. '	b' → logprob: -16.362823486328125
    7. '(b' → logprob: -16.612823486328125
    8. '```' → logprob: -16.800323486328125
    9. '>b' → logprob: -16.800323486328125
    10. ' ' → logprob: -16.987823486328125

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011751054553315043
    2. ' ,' → logprob: -6.7511749267578125
    3. 'a' → logprob: -12.751174926757812
    4. ',a' → logprob: -13.626174926757812
    5. ' ' → logprob: -14.751174926757812
    6. ',
' → logprob: -16.001174926757812
    7. ' a' → logprob: -16.001174926757812
    8. '`,' → logprob: -17.126174926757812
    9. '   ' → logprob: -17.251174926757812
    10. '```' → logprob: -17.876174926757812

Token 30: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03804149478673935
    2. ' a' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.288042068481445
    4. '	a' → logprob: -17.663042068481445
    5. '   ' → logprob: -19.038042068481445
    6. '<|end|>' → logprob: -19.663042068481445
    7. '>a' → logprob: -19.663042068481445
    8. ' ' → logprob: -20.413042068481445
    9. '_a' → logprob: -20.413042068481445
    10. '(a' → logprob: -20.538042068481445

Token 31: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.1817084401845932
    2. ' %' → logprob: -1.8067084550857544
    3. '<|end|>' → logprob: -6.431708335876465
    4. 'a' → logprob: -8.556708335876465
    5. ' ' → logprob: -9.556708335876465
    6. '%b' → logprob: -10.681708335876465
    7. ' a' → logprob: -10.931708335876465
    8. '%A' → logprob: -11.806708335876465
    9. ' %=' → logprob: -11.806708335876465
    10. '<|end|>' → logprob: -12.306708335876465

Token 32: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005530327325686812
    2. ' b' → logprob: -7.500553131103516
    3. ' ' → logprob: -21.000553131103516
    4. '	b' → logprob: -21.375553131103516
    5. '%b' → logprob: -22.375553131103516
    6. '   ' → logprob: -22.500553131103516
    7. '```' → logprob: -23.250553131103516
    8. ')b' → logprob: -23.375553131103516
    9. '  ' → logprob: -23.625553131103516
    10. '>b' → logprob: -23.625553131103516

Token 33: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1426716297864914
    2. 'return' → logprob: -3.392671585083008
    3. ' return' → logprob: -3.642671585083008
    4. '    
' → logprob: -3.892671585083008
    5. '       ' → logprob: -4.267671585083008
    6. '<|end|>' → logprob: -4.892671585083008
    7. ' ' → logprob: -5.142671585083008
    8. '  
' → logprob: -5.267671585083008
    9. ' 
' → logprob: -5.392671585083008
    10. '
' → logprob: -5.767671585083008

Token 35: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.14149077236652374
    2. '   ' → logprob: -2.7664906978607178
    3. 'return' (adapté à ' return') → logprob: -2.7664906978607178
    4. ' a' → logprob: -5.766490936279297
    5. 'a' → logprob: -6.641490936279297
    6. ' ' → logprob: -7.016490936279297
    7. ' 
' → logprob: -8.516490936279297
    8. '    ' → logprob: -8.641490936279297
    9. '```' → logprob: -9.016490936279297
    10. ':return' → logprob: -9.516490936279297

Token 36: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02324547804892063
    2. ' a' → logprob: -3.7732455730438232
    3. ' ' → logprob: -17.898244857788086
    4. '	a' → logprob: -18.023244857788086
    5. '   ' → logprob: -18.398244857788086
    6. ''a' → logprob: -21.023244857788086
    7. '  ' → logprob: -21.148244857788086
    8. '```' → logprob: -21.148244857788086
    9. '_a' → logprob: -21.398244857788086
    10. '    ' → logprob: -21.398244857788086

Token 37: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.873536229133606
    2. 'g' → logprob: -1.998536229133606
    3. 'n' → logprob: -1.998536229133606
    4. 'def' → logprob: -2.1235361099243164
    5. 'w' → logprob: -3.2485361099243164
    6. '```' → logprob: -3.7485361099243164
    7. 'W' → logprob: -4.123536109924316
    8. 'result' → logprob: -4.248536109924316
    9. 'x' → logprob: -4.248536109924316
    10. '

' → logprob: -4.373536109924316

Token 38: 'g' (ID: 70)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9824095368385315
    2. 'l' → logprob: -2.2324094772338867
    3. 'g' → logprob: -2.4824094772338867
    4. 'w' → logprob: -2.4824094772338867
    5. 'r' → logprob: -3.1074094772338867
    6. 'd' → logprob: -3.2324094772338867
    7. 'x' → logprob: -3.2324094772338867
    8. 'k' → logprob: -3.3574094772338867
    9. 's' → logprob: -3.6074094772338867
    10. 'ratio' → logprob: -3.8574094772338867

Token 39: ' =' (ID: 314)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.037643641233444214
    2. '=' → logprob: -4.4126434326171875
    3. '=g' → logprob: -4.4126434326171875
    4. 'c' → logprob: -4.7876434326171875
    5. ' =' → logprob: -6.9126434326171875
    6. 'g' → logprob: -7.0376434326171875
    7. '=c' → logprob: -7.2876434326171875
    8. '_c' → logprob: -8.412643432617188
    9. '=C' → logprob: -8.412643432617188
    10. 'CD' → logprob: -8.662643432617188

Token 40: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.01159649807959795
    2. 'W' → logprob: -4.5115966796875
    3. ' gcd' → logprob: -7.7615966796875
    4. 'C' → logprob: -10.3865966796875
    5. ' W' → logprob: -10.5115966796875
    6. 'w' → logprob: -10.6365966796875
    7. ' g' → logprob: -11.1365966796875
    8. 'c' → logprob: -11.6365966796875
    9. 'min' → logprob: -12.5115966796875
    10. ' ' → logprob: -12.7615966796875

Token 41: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.000825825787615031
    2. '(' → logprob: -7.125825881958008
    3. '(C' → logprob: -11.500825881958008
    4. 'W' → logprob: -12.375825881958008
    5. '(w' → logprob: -12.500825881958008
    6. '(
' → logprob: -13.875825881958008
    7. '(H' → logprob: -14.500825881958008
    8. '((' → logprob: -14.750825881958008
    9. ' (' → logprob: -15.500825881958008
    10. '(G' → logprob: -15.875825881958008

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021450345229823142
    2. ',W' → logprob: -9.500214576721191
    3. ',H' → logprob: -9.500214576721191
    4. ' ,' → logprob: -9.750214576721191
    5. ',g' → logprob: -12.250214576721191
    6. ',
' → logprob: -14.750214576721191
    7. '`,' → logprob: -15.125214576721191
    8. ',C' → logprob: -15.625214576721191
    9. ',w' → logprob: -15.625214576721191
    10. ',

' → logprob: -16.125213623046875

Token 43: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0046390993520617485
    2. ' H' → logprob: -5.379639148712158
    3. 'C' → logprob: -11.004638671875
    4. ' ' → logprob: -13.629638671875
    5. ')' → logprob: -14.629638671875
    6. '   ' → logprob: -15.254638671875
    7. '<|end|>' → logprob: -16.129638671875
    8. '  ' → logprob: -16.567138671875
    9. ' C' → logprob: -16.567138671875
    10. 'W' → logprob: -17.942138671875

Token 44: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.600714161526412e-05
    2. ')
' → logprob: -9.500076293945312
    3. '))' → logprob: -14.625076293945312
    4. ')

' → logprob: -15.125076293945312
    5. ' )' → logprob: -16.000076293945312
    6. ')
' → logprob: -16.750076293945312
    7. '),' → logprob: -17.375076293945312
    8. ')`' → logprob: -17.375076293945312
    9. '```' → logprob: -17.625076293945312
    10. ')return' → logprob: -18.000076293945312

Token 45: 'num' (ID: 4571)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03865882754325867
    2. 'w' → logprob: -4.288658618927002
    3. 'n' → logprob: -5.288658618927002
    4. 'x' → logprob: -6.038658618927002
    5. '```' → logprob: -6.163658618927002
    6. 'r' → logprob: -6.288658618927002
    7. 's' → logprob: -6.788658618927002
    8. 'W' → logprob: -6.913658618927002
    9. '/' → logprob: -7.038658618927002
    10. 'p' → logprob: -7.163658618927002

Token 46: '_sections' (ID: 161409)
  Prédit: '_rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.4195077121257782
    2. '_s' → logprob: -2.0445077419281006
    3. '_blocks' → logprob: -2.5445077419281006
    4. '_tiles' → logprob: -4.0445075035095215
    5. '_images' → logprob: -4.1695075035095215
    6. '_div' → logprob: -4.2945075035095215
    7. '=' → logprob: -4.4195075035095215
    8. '_' → logprob: -4.6695075035095215
    9. '_cells' → logprob: -4.7945075035095215
    10. ' =' → logprob: -4.9195075035095215

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10050642490386963
    2. '=' → logprob: -2.35050630569458
    3. 's' → logprob: -8.725506782531738
    4. '_' → logprob: -9.100506782531738
    5. ' ' → logprob: -10.975506782531738
    6. ',' → logprob: -12.975506782531738
    7. ')' → logprob: -13.975506782531738
    8. '_space' → logprob: -14.475506782531738
    9. ' _' → logprob: -14.600506782531738
    10. '.' → logprob: -14.725506782531738

Token 48: ' (' (ID: 350)
  Prédit: ' W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.9333762526512146
    2. ' (' → logprob: -1.3083763122558594
    3. 'W' → logprob: -1.9333763122558594
    4. 'g' → logprob: -2.0583763122558594
    5. ' g' → logprob: -3.4333763122558594
    6. '(W' → logprob: -3.6833763122558594
    7. '(' → logprob: -6.058376312255859
    8. 'C' → logprob: -6.308376312255859
    9. ' C' → logprob: -6.558376312255859
    10. ' ' → logprob: -7.683376312255859

Token 49: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0016867241356521845
    2. '(W' → logprob: -6.8766865730285645
    3. ' W' → logprob: -7.6266865730285645
    4. ' (' → logprob: -9.501687049865723
    5. ')' → logprob: -10.626687049865723
    6. '(' → logprob: -11.001687049865723
    7. 'g' → logprob: -11.126687049865723
    8. '   ' → logprob: -11.126687049865723
    9. ' ' → logprob: -11.751687049865723
    10. 'C' → logprob: -12.001687049865723

Token 50: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.31754258275032043
    2. ' //' → logprob: -1.442542552947998
    3. '*' → logprob: -4.067542552947998
    4. ' *' → logprob: -4.692542552947998
    5. '+' → logprob: -5.192542552947998
    6. ' +' → logprob: -6.442542552947998
    7. '-' → logprob: -6.442542552947998
    8. ' ' → logprob: -8.692543029785156
    9. '/g' → logprob: -8.817543029785156
    10. ' -' → logprob: -9.067543029785156

Token 51: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -8.625866030342877e-05
    2. ' g' → logprob: -9.375085830688477
    3. ')' → logprob: -13.625085830688477
    4. ' ' → logprob: -16.375085830688477
    5. '	g' → logprob: -16.500085830688477
    6. '   ' → logprob: -17.875085830688477
    7. '_g' → logprob: -18.625085830688477
    8. ''g' → logprob: -18.625085830688477
    9. 'C' → logprob: -18.875085830688477
    10. '>' → logprob: -19.000085830688477

Token 52: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005867762956768274
    2. '*' → logprob: -6.005867958068848
    3. ' *' → logprob: -6.380867958068848
    4. ' )' → logprob: -6.880867958068848
    5. ' +' → logprob: -8.380867958068848
    6. ')*' → logprob: -8.630867958068848
    7. '+' → logprob: -8.755867958068848
    8. '*)' → logprob: -9.630867958068848
    9. ')*(' → logprob: -10.755867958068848
    10. ' ' → logprob: -12.005867958068848

Token 53: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.25562408566474915
    2. ' *' → logprob: -1.5056240558624268
    3. ' +' → logprob: -6.380624294281006
    4. '+' → logprob: -6.380624294281006
    5. ')' → logprob: -8.630623817443848
    6. ' ' → logprob: -10.005623817443848
    7. ' ' → logprob: -10.505623817443848
    8. ')*' → logprob: -11.755623817443848
    9. '*)' → logprob: -12.255623817443848
    10. '**' → logprob: -12.255623817443848

Token 54: ' (' (ID: 350)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.002036179881542921
    2. ' (' → logprob: -6.877036094665527
    3. '(' → logprob: -7.502036094665527
    4. '(C' → logprob: -8.377036094665527
    5. 'H' → logprob: -8.502036094665527
    6. 'C' → logprob: -11.627036094665527
    7. ' H' → logprob: -12.502036094665527
    8. '((' → logprob: -13.752036094665527
    9. '(W' → logprob: -13.752036094665527
    10. ' ' → logprob: -14.252036094665527

Token 55: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0012967812363058329
    2. '(H' → logprob: -7.2512969970703125
    3. ' H' → logprob: -7.8762969970703125
    4. 'C' → logprob: -8.876296997070312
    5. '(' → logprob: -10.376296997070312
    6. ' (' → logprob: -10.876296997070312
    7. '   ' → logprob: -11.876296997070312
    8. 'g' → logprob: -13.001296997070312
    9. ' ' → logprob: -13.126296997070312
    10. '(C' → logprob: -13.501296997070312

Token 56: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.4289366900920868
    2. '//' → logprob: -1.0539367198944092
    3. ')' → logprob: -8.428936958312988
    4. '```' → logprob: -12.303936958312988
    5. ' ' → logprob: -12.553936958312988
    6. '`' → logprob: -13.303936958312988
    7. ')//' → logprob: -13.803936958312988
    8. '-' → logprob: -13.928936958312988
    9. ' ' → logprob: -14.053936958312988
    10. '#' → logprob: -14.053936958312988

Token 57: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0009157438762485981
    2. ' g' → logprob: -7.00091552734375
    3. ' ' → logprob: -13.25091552734375
    4. ')' → logprob: -13.87591552734375
    5. '<|end|>' → logprob: -13.87591552734375
    6. '2' → logprob: -15.87591552734375
    7. '   ' → logprob: -16.25091552734375
    8. 's' → logprob: -16.75091552734375
    9. '_g' → logprob: -16.87591552734375
    10. 'b' → logprob: -17.00091552734375

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008684676722623408
    2. '-' → logprob: -8.000868797302246
    3. ' )' → logprob: -8.125868797302246
    4. ' -' → logprob: -8.750868797302246
    5. ')-' → logprob: -9.750868797302246
    6. '*' → logprob: -12.625868797302246
    7. ')**' → logprob: -12.875868797302246
    8. ')`' → logprob: -13.125868797302246
    9. '#' → logprob: -13.250868797302246
    10. ')
' → logprob: -13.250868797302246

Token 59: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10723484307527542
    2. '+' → logprob: -2.4822349548339844
    3. '*' → logprob: -4.857234954833984
    4. '-' → logprob: -5.607234954833984
    5. '
' → logprob: -5.857234954833984
    6. ' print' → logprob: -6.857234954833984
    7. '#' → logprob: -7.232234954833984
    8. ')' → logprob: -7.482234954833984
    9. '+
' → logprob: -8.357234954833984
    10. '<|end|>' → logprob: -8.732234954833984

Token 60: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3869532346725464
    2. '(num' → logprob: -1.1369532346725464
    3. '('' → logprob: -10.386953353881836
    4. '("("' → logprob: -10.511953353881836
    5. '((' → logprob: -11.886953353881836
    6. '()' → logprob: -11.886953353881836
    7. 'num' → logprob: -12.886953353881836
    8. '(n' → logprob: -13.386953353881836
    9. '(len' → logprob: -13.761953353881836
    10. ' (' → logprob: -13.886953353881836

Token 61: '_sections' (ID: 161409)
  Prédit: '_sections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sections' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -13.25000286102295
    3. '_s' → logprob: -14.50000286102295
    4. ' _' → logprob: -15.37500286102295
    5. ')_' → logprob: -15.75000286102295
    6. '_parts' → logprob: -16.125003814697266
    7. '_lines' → logprob: -17.125003814697266
    8. 'sections' → logprob: -17.250003814697266
    9. '_)' → logprob: -17.250003814697266
    10. '_seconds' → logprob: -17.375003814697266

Token 62: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6537622034084052e-05
    2. '))' → logprob: -11.25002670288086
    3. '*' → logprob: -12.12502670288086
    4. ' )' → logprob: -12.50002670288086
    5. '+' → logprob: -13.87502670288086
    6. '**' → logprob: -14.25002670288086
    7. ')`' → logprob: -14.25002670288086
    8. '-' → logprob: -14.62502670288086
    9. '`)' → logprob: -15.25002670288086
    10. '```' → logprob: -15.37502670288086

Token 63: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.20234309136867523
    2. ' C' → logprob: -1.7023431062698364
    3. ' ' → logprob: -8.452342987060547
    4. '2' → logprob: -8.577342987060547
    5. ' (' → logprob: -8.827342987060547
    6. '(' → logprob: -9.452342987060547
    7. '3' → logprob: -9.577342987060547
    8. '(C' → logprob: -9.702342987060547
    9. '   ' → logprob: -10.577342987060547
    10. '	C' → logprob: -10.702342987060547

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012154294381616637
    2. '*' → logprob: -9.625121116638184
    3. ' )' → logprob: -10.125121116638184
    4. '))' → logprob: -12.125121116638184
    5. '//' → logprob: -12.625121116638184
    6. '*)' → logprob: -12.875121116638184
    7. ')
' → logprob: -13.875121116638184
    8. ')`' → logprob: -14.625121116638184
    9. '`)' → logprob: -14.875121116638184
    10. '-' → logprob: -15.000121116638184


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 62
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 53
Précision stricte (1ère position): 35.48%
Précision adaptée (1ère position): 37.10%
Précision (top 10): 85.48%
================================================================================
