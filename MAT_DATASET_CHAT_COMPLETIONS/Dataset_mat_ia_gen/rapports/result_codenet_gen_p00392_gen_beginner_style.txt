================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:30:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

N = int(input())
A = list(map(int, input().split()))

MAX_A = 10**5

# Crée un tableau pour le crible des plus petits facteurs premiers
spf = [0] * (MAX_A + 1)
def sieve_spf():
    spf[1] = 1
    for i in range(2, MAX_A +1):
        spf[i] = i
    for i in range(2, int(MAX_A**0.5)+1):
        if spf[i] == i:
            for j in range(i*i, MAX_A+1, i):
                if spf[j] == j:
                    spf[j] = i
sieve_spf()

def get_prime_factors(x):
    factors = set()
    while x > 1:
        factors.add(spf[x])
        x //= spf[x]
    return factors

parent = [i for i in range(N)]
rank = [0]*N

def find(x):
    while parent[x] != x:
        parent[x] = parent[parent[x]]
        x = parent[x]
    return x

def union(a,b):
    a = find(a)
    b = find(b)
    if a == b:
        return
    if rank[a] < rank[b]:
        parent[a] = b
    else:
        parent[b] = a
        if rank[a] == rank[b]:
            rank[a] +=1

# On construit des groupes (composantes connexes) en reliant les indices qui ont des nombres partageant un facteur premier commun.
# Pour cela, on utilise un dictionnaire qui map un facteur premier à un indice rencontré.

prime_to_index = dict()
for i in range(N):
    factors = get_prime_factors(A[i])
    for p in factors:
        if p in prime_to_index:
            union(i, prime_to_index[p])
        else:
            prime_to_index[p] = i

# On crée la copie triée
sorted_A = sorted(A)

# Pour que ce soit possible, pour chaque position i, A[i] et sorted_A[i] doivent appartenir au même groupe.
for i in range(N):
    if find(i) != find(A.index(sorted_A[i])):
        print(0)
        exit()

print(1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026953943073749542
    2. '\n' → logprob: -3.901953935623169
    3. '<|end|>' → logprob: -6.651954174041748
    4. 'import' → logprob: -7.151954174041748
    5. 'newline' → logprob: -7.151954174041748
    6. '\' → logprob: -7.151954174041748
    7. '```' → logprob: -7.526954174041748
    8. '' → logprob: -7.901954174041748
    9. '<|end|>' → logprob: -7.901954174041748
    10. 'print' → logprob: -8.27695369720459

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.2246291337069124e-05
    2. '[' → logprob: -12.250021934509277
    3. ' .' → logprob: -12.500021934509277
    4. '.import' → logprob: -13.250021934509277
    5. '.`' → logprob: -13.625021934509277
    6. '.user' → logprob: -14.125021934509277
    7. '.readline' → logprob: -14.250021934509277
    8. '.next' → logprob: -14.375021934509277
    9. '```' → logprob: -14.375021934509277
    10. '."""' → logprob: -14.375021934509277

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7624230980873108
    2. 's' → logprob: -1.137423038482666
    3. 't' → logprob: -2.887423038482666
    4. 'sys' → logprob: -3.262423038482666
    5. 'set' → logprob: -3.637423038482666
    6. 'soft' → logprob: -4.012423038482666
    7. 'default' → logprob: -4.262423038482666
    8. '_' → logprob: -5.012423038482666
    9. 'ex' → logprob: -5.012423038482666
    10. 'suffix' → logprob: -5.137423038482666

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00037681119283661246
    2. 'ursive' → logprob: -8.37537670135498
    3. 'urs' → logprob: -10.37537670135498
    4. 'limit' → logprob: -10.62537670135498
    5. 'urf' → logprob: -10.62537670135498
    6. 'ur' → logprob: -10.87537670135498
    7. '_limit' → logprob: -11.25037670135498
    8. '_' → logprob: -11.75037670135498
    9. 'ursor' → logprob: -12.37537670135498
    10. 'ursively' → logprob: -12.75037670135498

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.15307803452014923
    2. 'limit' → logprob: -2.028078079223633
    3. '_depth' → logprob: -4.653078079223633
    4. '_' → logprob: -7.903078079223633
    5. 'depth' → logprob: -9.653078079223633
    6. ' limit' → logprob: -10.028078079223633
    7. '_rate' → logprob: -10.153078079223633
    8. '_error' → logprob: -10.403078079223633
    9. '_lim' → logprob: -10.653078079223633
    10. '_max' → logprob: -10.778078079223633

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0325924449716695e-05
    2. '(
' → logprob: -12.37501049041748
    3. ' (' → logprob: -12.50001049041748
    4. '(

' → logprob: -13.25001049041748
    5. '((' → logprob: -15.75001049041748
    6. '("("' → logprob: -15.87501049041748
    7. '('' → logprob: -16.875009536743164
    8. '(
' → logprob: -17.000009536743164
    9. '(None' → logprob: -17.500009536743164
    10. '()' → logprob: -17.500009536743164

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16023612022399902
    2. '100' → logprob: -1.910236120223999
    3. ' ' → logprob: -12.660236358642578
    4. '500' → logprob: -12.785236358642578
    5. '300' → logprob: -13.285236358642578
    6. '999' → logprob: -13.660236358642578
    7. '1' → logprob: -13.910236358642578
    8. '150' → logprob: -14.285236358642578
    9. '200' → logprob: -14.785236358642578
    10. '(' → logprob: -15.160236358642578

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07229405641555786
    2. '000' → logprob: -2.947293996810913
    3. '00' → logprob: -4.072294235229492
    4. '4' → logprob: -8.822294235229492
    5. '**' → logprob: -10.572294235229492
    6. '6' → logprob: -10.697294235229492
    7. '2' → logprob: -11.822294235229492
    8. '5' → logprob: -12.447294235229492
    9. '```' → logprob: -12.447294235229492
    10. ')' → logprob: -12.572294235229492

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0031121151987463236
    2. '9' → logprob: -6.003112316131592
    3. '8' → logprob: -7.503112316131592
    4. '6' → logprob: -9.378111839294434
    5. ' ' → logprob: -16.25311279296875
    6. '```' → logprob: -16.37811279296875
    7. ')' → logprob: -18.50311279296875
    8. '(' → logprob: -19.62811279296875
    9. '``' → logprob: -20.00311279296875
    10. '}' → logprob: -20.75311279296875

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ' )' → logprob: -13.62500286102295
    3. '))' → logprob: -13.75000286102295
    4. ')
' → logprob: -15.12500286102295
    5. ')))' → logprob: -18.375001907348633
    6. ')`' → logprob: -18.375001907348633
    7. '`)' → logprob: -18.500001907348633
    8. '）' → logprob: -18.500001907348633
    9. ' ' → logprob: -18.500001907348633
    10. ')

' → logprob: -18.750001907348633

Token 13: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005465574562549591
    2. '\' → logprob: -6.380465507507324
    3. ')' → logprob: -6.505465507507324
    4. '```' → logprob: -7.130465507507324
    5. 'n' → logprob: -8.255465507507324
    6. '\n' → logprob: -8.880465507507324
    7. 'import' → logprob: -8.880465507507324
    8. '`' → logprob: -9.005465507507324
    9. ',' → logprob: -9.130465507507324
    10. 'a' → logprob: -9.130465507507324

Token 14: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3484386205673218
    2. ' =' → logprob: -1.5984386205673218
    3. ',' → logprob: -2.9734387397766113
    4. '=' → logprob: -4.098438739776611
    5. ' ,' → logprob: -4.473438739776611
    6. ')' → logprob: -5.598438739776611
    7. '.' → logprob: -5.848438739776611
    8. '  ' → logprob: -6.223438739776611
    9. ' )' → logprob: -6.723438739776611
    10. '<|end|>' → logprob: -7.348438739776611

Token 15: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.016210203990340233
    2. 'int' → logprob: -4.391210079193115
    3. ' ' → logprob: -5.766210079193115
    4. '10' → logprob: -7.766210079193115
    5. '100' → logprob: -9.766210556030273
    6. '20' → logprob: -10.266210556030273
    7. '50' → logprob: -11.516210556030273
    8. '5' → logprob: -11.766210556030273
    9. ' input' → logprob: -12.141210556030273
    10. '=int' → logprob: -12.141210556030273

Token 16: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016123391687870026
    2. '(input' → logprob: -6.501612186431885
    3. '(sys' → logprob: -9.751612663269043
    4. '(N' → logprob: -11.251612663269043
    5. '()' → logprob: -11.501612663269043
    6. '(
' → logprob: -11.626612663269043
    7. '('' → logprob: -12.376612663269043
    8. '(int' → logprob: -12.501612663269043
    9. ' (' → logprob: -12.751612663269043
    10. '(`' → logprob: -13.251612663269043

Token 17: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45945999026298523
    2. '())' → logprob: -1.3344600200653076
    3. '()' → logprob: -2.3344600200653076
    4. '(' → logprob: -4.8344597816467285
    5. '))' → logprob: -8.709460258483887
    6. '`)' → logprob: -10.959460258483887
    7. '')' → logprob: -11.584460258483887
    8. ' ())' → logprob: -11.584460258483887
    9. '")' → logprob: -11.709460258483887
    10. '()))' → logprob: -11.834460258483887

Token 18: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14827217161655426
    2. 'A' → logprob: -2.8982722759246826
    3. 'd' → logprob: -3.5232722759246826
    4. 'dp' → logprob: -4.2732720375061035
    5. 'data' → logprob: -4.5232720375061035
    6. 's' → logprob: -4.8982720375061035
    7. 'arr' → logprob: -5.5232720375061035
    8. 'for' → logprob: -6.1482720375061035
    9. 'x' → logprob: -6.1482720375061035
    10. ' a' → logprob: -6.3982720375061035

Token 19: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2955664098262787
    2. ' =' → logprob: -1.420566439628601
    3. '=' → logprob: -5.420566558837891
    4. '.' → logprob: -5.545566558837891
    5. '[]' → logprob: -6.170566558837891
    6. '[:]' → logprob: -6.420566558837891
    7. '[i' → logprob: -7.920566558837891
    8. '_' → logprob: -8.04556655883789
    9. ' ' → logprob: -8.42056655883789
    10. 'A' → logprob: -8.42056655883789

Token 20: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.34036633372306824
    2. 'list' → logprob: -1.3403663635253906
    3. ' [' → logprob: -3.8403663635253906
    4. '[list' → logprob: -5.465366363525391
    5. ' []' → logprob: -7.715366363525391
    6. '[' → logprob: -7.965366363525391
    7. '[int' → logprob: -9.21536636352539
    8. '[]' → logprob: -9.71536636352539
    9. '[input' → logprob: -9.96536636352539
    10. ' ' → logprob: -11.96536636352539

Token 21: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22303682565689087
    2. '(map' → logprob: -1.973036766052246
    3. '(input' → logprob: -3.223036766052246
    4. '(int' → logprob: -4.223036766052246
    5. '(range' → logprob: -5.223036766052246
    6. '(eval' → logprob: -7.723036766052246
    7. '(A' → logprob: -8.973036766052246
    8. '(list' → logprob: -9.723036766052246
    9. '()' → logprob: -9.848036766052246
    10. '(np' → logprob: -10.598036766052246

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.15075242519378662
    2. '(' → logprob: -2.025752544403076
    3. '(str' → logprob: -5.275752544403076
    4. '(lambda' → logprob: -6.025752544403076
    5. '(input' → logprob: -8.525752067565918
    6. 'int' → logprob: -9.900752067565918
    7. '(
' → logprob: -10.150752067565918
    8. '(list' → logprob: -10.400752067565918
    9. '[int' → logprob: -10.525752067565918
    10. '(eval' → logprob: -10.525752067565918

Token 23: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.016134900972247124
    2. ',input' → logprob: -4.266134738922119
    3. '(' → logprob: -6.891134738922119
    4. 'input' → logprob: -7.641134738922119
    5. ',' → logprob: -8.016135215759277
    6. ' input' → logprob: -10.141135215759277
    7. ' (' → logprob: -10.516135215759277
    8. '=input' → logprob: -10.891135215759277
    9. ')' → logprob: -11.016135215759277
    10. '(int' → logprob: -11.766135215759277

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.061970822513103485
    2. ' input' → logprob: -2.8119707107543945
    3. '(input' → logprob: -13.311970710754395
    4. 'sys' → logprob: -14.186970710754395
    5. ',input' → logprob: -14.561970710754395
    6. ' sys' → logprob: -15.561970710754395
    7. ' ' → logprob: -16.43697166442871
    8. '=input' → logprob: -16.43697166442871
    9. '	input' → logprob: -17.06197166442871
    10. '_input' → logprob: -17.93697166442871

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006537011358886957
    2. '()' → logprob: -7.7506537437438965
    3. '(' → logprob: -9.000653266906738
    4. '()))' → logprob: -10.500653266906738
    5. '())' → logprob: -10.625653266906738
    6. ')' → logprob: -10.625653266906738
    7. '))' → logprob: -12.000653266906738
    8. ' ().' → logprob: -13.000653266906738
    9. '.readline' → logprob: -13.000653266906738
    10. '.split' → logprob: -13.125653266906738

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.263011578586884e-05
    2. 'strip' → logprob: -10.125042915344238
    3. 'rstrip' → logprob: -13.250042915344238
    4. ' split' → logprob: -14.500042915344238
    5. '(split' → logprob: -15.500042915344238
    6. 'spl' → logprob: -16.500041961669922
    7. ')' → logprob: -18.125041961669922
    8. 's' → logprob: -19.375041961669922
    9. 'read' → logprob: -20.250041961669922
    10. '.split' → logprob: -20.625041961669922

Token 27: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.40586575865745544
    2. ')' → logprob: -1.2808657884597778
    3. '()))' → logprob: -3.2808656692504883
    4. '())' → logprob: -4.655865669250488
    5. '(' → logprob: -4.780865669250488
    6. '()' → logprob: -8.530865669250488
    7. ')))' → logprob: -10.155865669250488
    8. ' ))' → logprob: -11.280865669250488
    9. '),' → logprob: -11.655865669250488
    10. '('' → logprob: -11.655865669250488

Token 28: 'MAX' (ID: 21911)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04045943170785904
    2. 'def' → logprob: -3.540459394454956
    3. 'from' → logprob: -5.915459632873535
    4. 'count' → logprob: -6.790459632873535
    5. 'graph' → logprob: -6.915459632873535
    6. 'visited' → logprob: -7.040459632873535
    7. 'd' → logprob: -7.165459632873535
    8. 'depth' → logprob: -7.290459632873535
    9. 'max' → logprob: -7.665459632873535
    10. 'DP' → logprob: -8.290459632873535

Token 29: '_A' (ID: 6829)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5041812062263489
    2. '_A' → logprob: -1.504181146621704
    3. '_VAL' → logprob: -2.129181146621704
    4. '_V' → logprob: -3.629181146621704
    5. '_VALUE' → logprob: -3.879181146621704
    6. ' =' → logprob: -6.004181385040283
    7. 'A' → logprob: -6.879181385040283
    8. '_DEPTH' → logprob: -7.129181385040283
    9. '_SUM' → logprob: -7.629181385040283
    10. '_NUM' → logprob: -7.754181385040283

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.047758299857378006
    2. '=' → logprob: -3.2977583408355713
    3. '_' → logprob: -4.672758102416992
    4. ')' → logprob: -9.047758102416992
    5. '+' → logprob: -9.422758102416992
    6. ' ' → logprob: -10.172758102416992
    7. '_=' → logprob: -10.422758102416992
    8. ' +' → logprob: -10.922758102416992
    9. ',' → logprob: -11.547758102416992
    10. '_VALUE' → logprob: -12.297758102416992

Token 31: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0957784354686737
    2. ' ' → logprob: -3.220778465270996
    3. 'max' → logprob: -3.345778465270996
    4. ' max' → logprob: -4.220778465270996
    5. '100' → logprob: -6.970778465270996
    6. '1' → logprob: -8.095778465270996
    7. '2' → logprob: -9.220778465270996
    8. '0' → logprob: -9.720778465270996
    9. '200' → logprob: -11.095778465270996
    10. '   ' → logprob: -11.595778465270996

Token 32: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.21070417761802673
    2. 'max' → logprob: -1.7107042074203491
    3. '100' → logprob: -4.960704326629639
    4. '1' → logprob: -7.585704326629639
    5. ' max' → logprob: -7.960704326629639
    6. '2' → logprob: -7.960704326629639
    7. ' ' → logprob: -8.08570384979248
    8. '0' → logprob: -8.58570384979248
    9. '200' → logprob: -8.71070384979248
    10. '400' → logprob: -9.96070384979248

Token 33: '**' (ID: 410)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.2210637629032135
    2. '6' → logprob: -1.7210637331008911
    3. '8' → logprob: -4.471063613891602
    4. '9' → logprob: -5.596063613891602
    5. '**' → logprob: -5.721063613891602
    6. '5' → logprob: -6.971063613891602
    7. '0' → logprob: -9.471063613891602
    8. '1' → logprob: -12.221063613891602
    9. '```' → logprob: -12.346063613891602
    10. '07' → logprob: -12.471063613891602

Token 34: '5' (ID: 20)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.026933280751109123
    2. '9' → logprob: -3.651933193206787
    3. '6' → logprob: -7.776933193206787
    4. '5' → logprob: -8.651933670043945
    5. '8' → logprob: -10.526933670043945
    6. '10' → logprob: -11.651933670043945
    7. '12' → logprob: -13.276933670043945
    8. '```' → logprob: -14.276933670043945
    9. '18' → logprob: -14.901933670043945
    10. '4' → logprob: -15.776933670043945

Token 35: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6589092016220093
    2. 'dp' → logprob: -1.4089092016220093
    3. '
' → logprob: -1.6589092016220093
    4. ' 
' → logprob: -5.158909320831299
    5. ' +' → logprob: -5.408909320831299
    6. 'count' → logprob: -5.533909320831299
    7. 'DP' → logprob: -5.658909320831299
    8. '' → logprob: -5.783909320831299
    9. 'div' → logprob: -6.033909320831299
    10. '
' → logprob: -6.283909320831299

Token 36: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.057794127613306046
    2. 'count' → logprob: -3.9327940940856934
    3. 'freq' → logprob: -4.307794094085693
    4. 'counts' → logprob: -4.932794094085693
    5. 'cnt' → logprob: -5.182794094085693
    6. 'bit' → logprob: -5.682794094085693
    7. 'div' → logprob: -6.432794094085693
    8. 'c' → logprob: -7.057794094085693
    9. 'factor' → logprob: -7.182794094085693
    10. 'from' → logprob: -7.182794094085693

Token 37: ' Cr' (ID: 5790)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10267338156700134
    2. ' dp' → logprob: -3.352673292160034
    3. 'bit' → logprob: -3.977673292160034
    4. 'from' → logprob: -4.352673530578613
    5. 'cnt' → logprob: -4.727673530578613
    6. 'count' → logprob: -4.727673530578613
    7. 'freq' → logprob: -4.977673530578613
    8. 'counts' → logprob: -6.727673530578613
    9. ' from' → logprob: -7.352673530578613
    10. 'import' → logprob: -7.477673530578613

Token 38: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0021465737372636795
    2. 'eam' → logprob: -7.5021467208862305
    3. 'ef' → logprob: -7.7521467208862305
    4. 'eat' → logprob: -8.37714672088623
    5. 'p' → logprob: -8.62714672088623
    6. 'oss' → logprob: -9.50214672088623
    7. 't' → logprob: -9.87714672088623
    8. 'ime' → logprob: -9.87714672088623
    9. 'iter' → logprob: -10.12714672088623
    10. 'ee' → logprob: -10.12714672088623

Token 39: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.24911397695541382
    2. ' une' → logprob: -1.8741140365600586
    3. 's' → logprob: -3.3741140365600586
    4. 'r' → logprob: -3.7491140365600586
    5. 'z' → logprob: -4.999114036560059
    6. ' a' → logprob: -7.499114036560059
    7. 'e' → logprob: -7.749114036560059
    8. 'd' → logprob: -7.874114036560059
    9. 'un' → logprob: -7.999114036560059
    10. 'er' → logprob: -9.249114036560059

Token 40: ' tableau' (ID: 67053)
  Prédit: ' compteur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compteur' → logprob: -1.8189585208892822
    2. 'comp' → logprob: -1.9439585208892822
    3. 'dp' → logprob: -1.9439585208892822
    4. 's' → logprob: -2.0689585208892822
    5. ' tableau' → logprob: -2.4439585208892822
    6. 'd' → logprob: -2.4439585208892822
    7. ' dp' → logprob: -3.0689585208892822
    8. ' defaultdict' → logprob: -3.8189585208892822
    9. 'e' → logprob: -3.9439585208892822
    10. 'count' → logprob: -4.068958282470703

Token 41: ' pour' (ID: 1930)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.39543086290359497
    2. ' de' → logprob: -2.14543080329895
    3. ' dp' → logprob: -2.64543080329895
    4. ' d' → logprob: -3.02043080329895
    5. 'd' → logprob: -3.39543080329895
    6. 'de' → logprob: -3.52043080329895
    7. 'count' → logprob: -5.020431041717529
    8. 's' → logprob: -5.395431041717529
    9. '_dp' → logprob: -5.645431041717529
    10. 'counts' → logprob: -5.895431041717529

Token 42: ' le' (ID: 505)
  Prédit: ' compter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compter' → logprob: -0.21153414249420166
    2. 'comp' → logprob: -1.9615341424942017
    3. ' compt' → logprob: -4.336534023284912
    4. ' stock' → logprob: -5.086534023284912
    5. 'count' → logprob: -5.086534023284912
    6. 'com' → logprob: -5.461534023284912
    7. 'stock' → logprob: -5.586534023284912
    8. 'l' → logprob: -5.961534023284912
    9. 'con' → logprob: -5.961534023284912
    10. 'c' → logprob: -6.336534023284912

Token 43: ' cr' (ID: 1769)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5765501260757446
    2. 'comp' → logprob: -1.2015501260757446
    3. 'com' → logprob: -3.326550006866455
    4. 'dp' → logprob: -3.701550006866455
    5. 'plus' → logprob: -3.951550006866455
    6. ' compt' → logprob: -4.451550006866455
    7. 's' → logprob: -4.576550006866455
    8. 'd' → logprob: -5.076550006866455
    9. ' nombre' → logprob: -5.326550006866455
    10. 'c' → logprob: -5.826550006866455

Token 44: 'ible' (ID: 1430)
  Prédit: 'ible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ible' → logprob: -0.06955787539482117
    2. 'iv' → logprob: -3.5695579051971436
    3. 'ibl' → logprob: -3.5695579051971436
    4. 'ib' → logprob: -5.0695576667785645
    5. 'i' → logprob: -7.3195576667785645
    6. 'ibles' → logprob: -8.007058143615723
    7. 'ibr' → logprob: -8.069558143615723
    8. 'ibility' → logprob: -8.069558143615723
    9. 'ibilité' → logprob: -8.444558143615723
    10. 'ive' → logprob: -8.507058143615723

Token 45: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6287909150123596
    2. ' sieve' → logprob: -1.0037908554077148
    3. 'is' → logprob: -2.628790855407715
    4. ' is' → logprob: -5.378790855407715
    5. 'spf' → logprob: -5.378790855407715
    6. 'er' → logprob: -5.878790855407715
    7. 'prime' → logprob: -5.878790855407715
    8. '```' → logprob: -6.003790855407715
    9. 'f' → logprob: -7.003790855407715
    10. 'visited' → logprob: -7.003790855407715

Token 46: ' plus' (ID: 2932)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.2474628984928131
    2. 'plus' → logprob: -1.8724628686904907
    3. ' nombres' → logprob: -3.8724629878997803
    4. '```' → logprob: -4.247462749481201
    5. ' div' → logprob: -5.122462749481201
    6. 'prem' → logprob: -5.372462749481201
    7. 'fact' → logprob: -5.872462749481201
    8. 'pr' → logprob: -6.122462749481201
    9. 'nombre' → logprob: -6.622462749481201
    10. 'mo' → logprob: -6.622462749481201

Token 47: ' petits' (ID: 38141)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.0018615226726979017
    2. 'prem' → logprob: -6.876861572265625
    3. '```' → logprob: -8.126861572265625
    4. ' petits' → logprob: -8.251861572265625
    5. 'gr' → logprob: -9.751861572265625
    6. ' ' → logprob: -10.126861572265625
    7. 'pets' → logprob: -10.251861572265625
    8. 'ieurs' → logprob: -11.001861572265625
    9. 'p' → logprob: -11.001861572265625
    10. '   ' → logprob: -11.376861572265625

Token 48: ' facteurs' (ID: 119657)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.2974793612957001
    2. ' div' → logprob: -1.7974793910980225
    3. ' facteurs' → logprob: -3.0474793910980225
    4. '_div' → logprob: -3.9224793910980225
    5. 'fact' → logprob: -4.672479152679443
    6. '```' → logprob: -5.422479152679443
    7. 'f' → logprob: -5.672479152679443
    8. '\' → logprob: -6.547479152679443
    9. ' premiers' → logprob: -6.672479152679443
    10. 'prem' → logprob: -7.172479152679443

Token 49: ' premiers' (ID: 59140)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4673199653625488
    2. '_p' → logprob: -1.4673199653625488
    3. '_small' → logprob: -2.217319965362549
    4. '_min' → logprob: -2.467319965362549
    5. 'p' → logprob: -2.967319965362549
    6. 'min' → logprob: -3.342319965362549
    7. '_lp' → logprob: -3.342319965362549
    8. ' smallest' → logprob: -3.592319965362549
    9. 'spf' → logprob: -3.592319965362549
    10. '_prime' → logprob: -3.842319965362549

Token 50: '
' (ID: 198)
  Prédit: 'spf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spf' → logprob: -0.41956889629364014
    2. ' sp' → logprob: -1.6695688962936401
    3. 'min' → logprob: -3.2945690155029297
    4. 'sp' → logprob: -3.6695690155029297
    5. 'lp' → logprob: -4.04456901550293
    6. 'small' → logprob: -4.16956901550293
    7. 'p' → logprob: -4.16956901550293
    8. ' smallest' → logprob: -4.41956901550293
    9. ' SPF' → logprob: -4.54456901550293
    10. 's' → logprob: -5.04456901550293

Token 51: 'spf' (ID: 113737)
  Prédit: 'spf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spf' → logprob: -0.4009944796562195
    2. ' sp' → logprob: -1.6509945392608643
    3. 'min' → logprob: -3.6509945392608643
    4. ' SPF' → logprob: -3.7759945392608643
    5. ' smallest' → logprob: -3.9009945392608643
    6. 'lp' → logprob: -4.025994300842285
    7. 'p' → logprob: -4.525994300842285
    8. 'sp' → logprob: -4.775994300842285
    9. 's' → logprob: -5.025994300842285
    10. 'small' → logprob: -5.275994300842285

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018186232075095177
    2. '=' → logprob: -4.018186092376709
    3. '[' → logprob: -11.018186569213867
    4. ' ' → logprob: -11.268186569213867
    5. '[]' → logprob: -13.143186569213867
    6. '=[' → logprob: -13.643186569213867
    7. '[:]' → logprob: -13.643186569213867
    8. 's' → logprob: -14.143186569213867
    9. '=[]' → logprob: -14.518186569213867
    10. ']' → logprob: -14.643186569213867

Token 53: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03812629356980324
    2. ' [' → logprob: -3.288126230239868
    3. '[-' → logprob: -9.663125991821289
    4. '[MAX' → logprob: -10.913125991821289
    5. ' [-' → logprob: -13.163125991821289
    6. '[int' → logprob: -14.413125991821289
    7. '[max' → logprob: -15.788125991821289
    8. '[min' → logprob: -16.41312599182129
    9. '[s' → logprob: -16.66312599182129
    10. '[len' → logprob: -17.03812599182129

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8802491215174086e-05
    2. 'i' → logprob: -10.875028610229492
    3. ' ' → logprob: -11.625028610229492
    4. '-' → logprob: -14.250028610229492
    5. ' i' → logprob: -16.500028610229492
    6. 'x' → logprob: -17.125028610229492
    7. '1' → logprob: -17.625028610229492
    8. ']' → logprob: -17.625028610229492
    9. '   ' → logprob: -18.000028610229492
    10. ' -' → logprob: -18.125028610229492

Token 55: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1393309384584427
    2. ' for' → logprob: -2.2643308639526367
    3. ' ]' → logprob: -4.264330863952637
    4. ',' → logprob: -4.639330863952637
    5. ']*(' → logprob: -6.764330863952637
    6. 'for' → logprob: -7.514330863952637
    7. ']*' → logprob: -8.014330863952637
    8. ' ' → logprob: -8.639330863952637
    9. ')' → logprob: -8.639330863952637
    10. '}' → logprob: -12.139330863952637

Token 56: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5334938168525696
    2. ' for' → logprob: -1.1584937572479248
    3. ' ]' → logprob: -3.283493757247925
    4. 'for' → logprob: -4.283493995666504
    5. ']*(' → logprob: -4.408493995666504
    6. ')' → logprob: -4.533493995666504
    7. ' ' → logprob: -4.908493995666504
    8. ']*' → logprob: -5.408493995666504
    9. ',' → logprob: -5.908493995666504
    10. '*' → logprob: -6.158493995666504

Token 57: ' (' (ID: 350)
  Prédit: '(MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.00012606535165105015
    2. '(M' → logprob: -9.250125885009766
    3. '(' → logprob: -10.625125885009766
    4. '(max' → logprob: -13.125125885009766
    5. '((' → logprob: -13.500125885009766
    6. ' (' → logprob: -13.750125885009766
    7. '(Max' → logprob: -14.125125885009766
    8. '(NUM' → logprob: -15.750125885009766
    9. '(DEFAULT' → logprob: -16.125125885009766
    10. '(MSG' → logprob: -17.000125885009766

Token 58: 'MAX' (ID: 21911)
  Prédit: 'MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.00013679367839358747
    2. '(MAX' → logprob: -9.000136375427246
    3. ' MAX' → logprob: -11.250136375427246
    4. 'max' → logprob: -16.000137329101562
    5. '_MAX' → logprob: -17.250137329101562
    6. '(' → logprob: -17.375137329101562
    7. 'MA' → logprob: -17.500137329101562
    8. '[MAX' → logprob: -17.625137329101562
    9. 'Max' → logprob: -18.000137329101562
    10. '100' → logprob: -18.375137329101562

Token 59: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -1.1637164789135568e-05
    2. 'A' → logprob: -12.000011444091797
    3. '+' → logprob: -12.750011444091797
    4. '_' → logprob: -13.000011444091797
    5. '+A' → logprob: -16.750011444091797
    6. '_MAX' → logprob: -17.250011444091797
    7. '```' → logprob: -17.375011444091797
    8. '_a' → logprob: -17.625011444091797
    9. ' _' → logprob: -17.750011444091797
    10. '_AI' → logprob: -18.000011444091797

Token 60: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005931520834565163
    2. ' +' → logprob: -5.130931377410889
    3. ')' → logprob: -13.505931854248047
    4. '1' → logprob: -13.880931854248047
    5. '+
' → logprob: -15.755931854248047
    6. '+)' → logprob: -16.255931854248047
    7. ' plus' → logprob: -16.630931854248047
    8. '＋' → logprob: -16.880931854248047
    9. '```' → logprob: -17.005931854248047
    10. ' ' → logprob: -17.630931854248047

Token 61: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018041854491457343
    2. ' ' → logprob: -8.6251802444458
    3. '2' → logprob: -14.2501802444458
    4. '   ' → logprob: -17.000181198120117
    5. '  ' → logprob: -17.000181198120117
    6. '0' → logprob: -17.375181198120117
    7. '１' → logprob: -17.375181198120117
    8. '7' → logprob: -17.687681198120117
    9. '10' → logprob: -17.875181198120117
    10. '```' → logprob: -18.687681198120117

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4140441635390744e-05
    2. ' ' → logprob: -11.250014305114746
    3. '0' → logprob: -14.375014305114746
    4. '2' → logprob: -14.750014305114746
    5. '7' → logprob: -16.25001335144043
    6. '10' → logprob: -17.12501335144043
    7. '5' → logprob: -17.56251335144043
    8. '6' → logprob: -17.81251335144043
    9. '１' → logprob: -18.12501335144043
    10. ')' → logprob: -18.50001335144043

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014978687977418303
    2. ' )' → logprob: -8.875149726867676
    3. ')
' → logprob: -11.625149726867676
    4. ')

' → logprob: -14.625149726867676
    5. ')
' → logprob: -14.750149726867676
    6. ')`' → logprob: -17.000150680541992
    7. ')#' → logprob: -17.000150680541992
    8. '),' → logprob: -17.125150680541992
    9. '))' → logprob: -17.625150680541992
    10. ' ' → logprob: -17.625150680541992

Token 64: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5936698913574219
    2. 'def' → logprob: -0.8436698913574219
    3. '#' → logprob: -4.968669891357422
    4. 'i' → logprob: -5.343669891357422
    5. ' for' → logprob: -5.343669891357422
    6. 'spf' → logprob: -7.843669891357422
    7. 'sp' → logprob: -8.593669891357422
    8. 'import' → logprob: -9.093669891357422
    9. 'p' → logprob: -9.343669891357422
    10. ' def' → logprob: -10.093669891357422

Token 65: ' sieve' (ID: 142781)
  Prédit: ' sieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.22441227734088898
    2. ' sp' → logprob: -2.224412202835083
    3. ' smallest' → logprob: -3.099412202835083
    4. ' build' → logprob: -4.099412441253662
    5. ' compute' → logprob: -5.099412441253662
    6. ' get' → logprob: -5.224412441253662
    7. ' init' → logprob: -5.224412441253662
    8. 'spf' → logprob: -5.974412441253662
    9. ' calc' → logprob: -6.099412441253662
    10. ' cr' → logprob: -6.349412441253662

Token 66: '_sp' (ID: 18491)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3929782807826996
    2. '_sp' → logprob: -1.392978310585022
    3. '_' → logprob: -3.5179781913757324
    4. '_s' → logprob: -4.017978191375732
    5. '()' → logprob: -4.392978191375732
    6. '():' → logprob: -5.392978191375732
    7. '_factor' → logprob: -5.892978191375732
    8. '(n' → logprob: -6.017978191375732
    9. '_(' → logprob: -6.267978191375732
    10. ' (' → logprob: -7.392978191375732

Token 67: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -7.3458322731312364e-06
    2. 'ф' → logprob: -12.875007629394531
    3. 'pf' → logprob: -13.125007629394531
    4. 'rf' → logprob: -14.375007629394531
    5. '```' → logprob: -15.250007629394531
    6. 'r' → logprob: -15.375007629394531
    7. 'ff' → logprob: -15.500007629394531
    8. '(f' → logprob: -15.500007629394531
    9. ' f' → logprob: -15.500007629394531
    10. '_f' → logprob: -15.625007629394531

Token 68: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.05207269266247749
    2. '(n' → logprob: -3.802072763442993
    3. '(' → logprob: -4.177072525024414
    4. '()' → logprob: -4.677072525024414
    5. '(MAX' → logprob: -5.927072525024414
    6. ' ():' → logprob: -8.302072525024414
    7. '(max' → logprob: -8.427072525024414
    8. '(size' → logprob: -8.927072525024414
    9. '(N' → logprob: -9.427072525024414
    10. ' (' → logprob: -9.802072525024414

Token 69: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.029432225972414017
    2. 'for' → logprob: -3.9044322967529297
    3. '   ' → logprob: -4.90443229675293
    4. ' sp' → logprob: -7.15443229675293
    5. ' global' → logprob: -7.65443229675293
    6. ' i' → logprob: -9.52943229675293
    7. 'global' → logprob: -10.65443229675293
    8. 'sp' → logprob: -10.65443229675293
    9. 'spf' → logprob: -10.90443229675293
    10. ' sieve' → logprob: -11.40443229675293

Token 70: ' sp' (ID: 1014)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5831833481788635
    2. 'spf' → logprob: -1.0831832885742188
    3. ' for' → logprob: -2.4581832885742188
    4. ' sp' → logprob: -4.458183288574219
    5. 'sp' (adapté à ' sp') → logprob: -5.333183288574219
    6. '   ' → logprob: -6.708183288574219
    7. ' ' → logprob: -10.708183288574219
    8. ' SPF' → logprob: -10.833183288574219
    9. 'i' → logprob: -10.958183288574219
    10. 'spd' → logprob: -11.083183288574219

Token 71: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.1472419600977446e-06
    2. ' f' → logprob: -15.125000953674316
    3. 'ф' → logprob: -15.500000953674316
    4. 'for' → logprob: -15.500000953674316
    5. '_f' → logprob: -15.875000953674316
    6. '   ' → logprob: -16.875001907348633
    7. '=' → logprob: -17.000001907348633
    8. '[f' → logprob: -17.062501907348633
    9. '```' → logprob: -17.187501907348633
    10. 'F' → logprob: -17.437501907348633

Token 72: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5941604690160602e-05
    2. ' =' → logprob: -11.875025749206543
    3. 'def' → logprob: -12.250025749206543
    4. '```' → logprob: -13.000025749206543
    5. '[i' → logprob: -13.250025749206543
    6. '=' → logprob: -13.250025749206543
    7. '[:]' → logprob: -13.500025749206543
    8. 's' → logprob: -13.750025749206543
    9. '[s' → logprob: -13.750025749206543
    10. ' [' → logprob: -14.000025749206543

Token 73: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.028553757816553116
    2. '1' → logprob: -3.9035537242889404
    3. 'i' → logprob: -5.1535539627075195
    4. ' ' → logprob: -6.4035539627075195
    5. '2' → logprob: -7.7785539627075195
    6. ' i' → logprob: -9.40355396270752
    7. ']' → logprob: -11.27855396270752
    8. 'x' → logprob: -11.52855396270752
    9. ' ]' → logprob: -11.77855396270752
    10. ')' → logprob: -13.34105396270752

Token 74: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005342382006347179
    2. ' ]' → logprob: -5.255342483520508
    3. ']=' → logprob: -9.130342483520508
    4. '=' → logprob: -16.255342483520508
    5. ')' → logprob: -16.755342483520508
    6. ' =' → logprob: -17.005342483520508
    7. ' ' → logprob: -17.630342483520508
    8. '[' → logprob: -17.630342483520508
    9. ']==' → logprob: -18.255342483520508
    10. ']
' → logprob: -18.505342483520508

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16031287610530853
    2. '=' → logprob: -1.9103128910064697
    3. ' ' → logprob: -9.53531265258789
    4. ']' → logprob: -11.41031265258789
    5. ',' → logprob: -13.53531265258789
    6. '[' → logprob: -13.66031265258789
    7. ']=' → logprob: -14.16031265258789
    8. ')' → logprob: -15.03531265258789
    9. ' ]' → logprob: -15.41031265258789
    10. '.=' → logprob: -15.66031265258789

Token 76: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '0' → logprob: -18.750059127807617
    4. '１' → logprob: -19.000059127807617
    5. '১' → logprob: -19.187559127807617
    6. '۱' → logprob: -19.312559127807617
    7. '१' → logprob: -19.500059127807617
    8. ' ' → logprob: -19.562559127807617
    9. '```' → logprob: -19.562559127807617
    10. '' → logprob: -20.375059127807617

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '0' → logprob: -17.5
    4. '```' → logprob: -19.875
    5. '১' → logprob: -20.125
    6. '१' → logprob: -20.625
    7. '１' → logprob: -20.6875
    8. '-' → logprob: -20.875
    9. '۱' → logprob: -21.0625
    10. '`' → logprob: -21.75

Token 78: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04411112144589424
    2. '   ' → logprob: -3.5441110134124756
    3. '\n' → logprob: -4.544111251831055
    4. ' for' → logprob: -6.919111251831055
    5. '<|end|>' → logprob: -7.544111251831055
    6. ' 
' → logprob: -7.669111251831055
    7. '\' → logprob: -8.169111251831055
    8. '    
' → logprob: -8.169111251831055
    9. 'for' → logprob: -8.294111251831055
    10. 'def' → logprob: -8.669111251831055

Token 79: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004276769235730171
    2. ' for' → logprob: -6.379276752471924
    3. 'for' → logprob: -6.754276752471924
    4. '\n' → logprob: -7.129276752471924
    5. ' 
' → logprob: -8.379277229309082
    6. '<|end|>' → logprob: -9.504277229309082
    7. '' → logprob: -9.879277229309082
    8. 'def' → logprob: -10.004277229309082
    9. '  
' → logprob: -10.129277229309082
    10. '   ' → logprob: -10.504277229309082

Token 80: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4741014540195465
    2. 'for' (adapté à ' for') → logprob: -0.9741014242172241
    3. ' ' → logprob: -10.974101066589355
    4. ' i' → logprob: -13.099101066589355
    5. '	for' → logprob: -13.224101066589355
    6. '   ' → logprob: -13.599101066589355
    7. 'f' → logprob: -14.224101066589355
    8. 'i' → logprob: -14.349101066589355
    9. ' f' → logprob: -15.224101066589355
    10. '2' → logprob: -15.349101066589355

Token 81: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006726499181240797
    2. 'i' → logprob: -5.006726264953613
    3. '	i' → logprob: -11.506726264953613
    4. '2' → logprob: -14.756726264953613
    5. ' ' → logprob: -14.881726264953613
    6. ' x' → logprob: -16.50672721862793
    7. 'x' → logprob: -16.63172721862793
    8. '(i' → logprob: -16.88172721862793
    9. '```' → logprob: -17.00672721862793
    10. ' p' → logprob: -18.00672721862793

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015038017183542252
    2. ' ' → logprob: -4.390038013458252
    3. 'in' → logprob: -6.015038013458252
    4. '  ' → logprob: -10.51503849029541
    5. 'n' → logprob: -10.64003849029541
    6. '<|end|>' → logprob: -11.39003849029541
    7. ' i' → logprob: -12.14003849029541
    8. ',' → logprob: -12.89003849029541
    9. '	in' → logprob: -13.14003849029541
    10. 's' → logprob: -13.26503849029541

Token 83: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008615161292254925
    2. 'range' → logprob: -4.758615016937256
    3. '	range' → logprob: -15.133615493774414
    4. ' ' → logprob: -15.633615493774414
    5. '(range' → logprob: -15.883615493774414
    6. '2' → logprob: -16.258615493774414
    7. ' xrange' → logprob: -17.383615493774414
    8. '.range' → logprob: -20.133615493774414
    9. '  ' → logprob: -20.383615493774414
    10. '```' → logprob: -20.883615493774414

Token 84: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020687808864749968
    2. '2' → logprob: -8.50020694732666
    3. ' (' → logprob: -13.12520694732666
    4. ' ' → logprob: -13.50020694732666
    5. '(
' → logprob: -16.875205993652344
    6. '
' → logprob: -18.375205993652344
    7. '```' → logprob: -18.875205993652344
    8. ')' → logprob: -19.000205993652344
    9. '[' → logprob: -19.125205993652344
    10. '{' → logprob: -19.875205993652344

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003178071230649948
    2. ' ' → logprob: -5.753178119659424
    3. '(' → logprob: -16.003177642822266
    4. '   ' → logprob: -16.378177642822266
    5. '  ' → logprob: -16.628177642822266
    6. '
' → logprob: -16.753177642822266
    7. '	' → logprob: -17.503177642822266
    8. '２' → logprob: -17.503177642822266
    9. '

' → logprob: -17.940677642822266
    10. '    ' → logprob: -18.190677642822266

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5759578347206116
    2. ' ,' → logprob: -0.8259578347206116
    3. ' ' → logprob: -11.075958251953125
    4. ' ,
' → logprob: -13.700958251953125
    5. ',int' → logprob: -14.700958251953125
    6. ',max' → logprob: -14.825958251953125
    7. ',
' → logprob: -15.700958251953125
    8. ',len' → logprob: -15.950958251953125
    9. ',i' → logprob: -16.200958251953125
    10. ' )' → logprob: -16.200958251953125

Token 87: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.08106201887130737
    2. ' MAX' → logprob: -2.581062078475952
    3. 'int' → logprob: -6.581061840057373
    4. ' int' → logprob: -7.206061840057373
    5. '(MAX' → logprob: -10.456062316894531
    6. ' ' → logprob: -11.706062316894531
    7. 'MIN' → logprob: -13.831062316894531
    8. 'len' → logprob: -14.081062316894531
    9. '   ' → logprob: -14.331062316894531
    10. 'INT' → logprob: -14.831062316894531

Token 88: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -6.511406809295295e-06
    2. 'A' → logprob: -12.000006675720215
    3. '```' → logprob: -15.875006675720215
    4. '	A' → logprob: -17.1250057220459
    5. '_' → logprob: -17.3750057220459
    6. '_MAX' → logprob: -17.7500057220459
    7. 'MAX' → logprob: -18.1250057220459
    8. '_C' → logprob: -18.2500057220459
    9. '_AI' → logprob: -18.2500057220459
    10. '   ' → logprob: -18.7500057220459

Token 89: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759882926940918
    2. '+' → logprob: -0.8259882926940918
    3. ' ' → logprob: -9.95098876953125
    4. '1' → logprob: -15.57598876953125
    5. ' //' → logprob: -15.95098876953125
    6. '   ' → logprob: -16.07598876953125
    7. ')' → logprob: -16.07598876953125
    8. ' ' → logprob: -16.32598876953125
    9. '//' → logprob: -16.70098876953125
    10. ',' → logprob: -16.82598876953125

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028048718813806772
    2. ' ' → logprob: -5.877804756164551
    3. '```' → logprob: -17.377805709838867
    4. '   ' → logprob: -17.752805709838867
    5. ' ' → logprob: -18.377805709838867
    6. ')' → logprob: -18.627805709838867
    7. '  ' → logprob: -19.127805709838867
    8. '2' → logprob: -19.502805709838867
    9. '１' → logprob: -20.315305709838867
    10. '    ' → logprob: -20.502805709838867

Token 91: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008985381573438644
    2. ' ):' → logprob: -4.75898551940918
    3. ')' → logprob: -8.00898551940918
    4. ':' → logprob: -10.38398551940918
    5. '):
' → logprob: -12.63398551940918
    6. ' )' → logprob: -12.75898551940918
    7. ' :' → logprob: -14.13398551940918
    8. ' ' → logprob: -15.38398551940918
    9. ',' → logprob: -16.25898551940918
    10. '):
' → logprob: -16.50898551940918

Token 92: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.716351330280304
    2. ':' → logprob: -0.841351330280304
    3. '    ' → logprob: -2.966351270675659
    4. ' :' → logprob: -4.466351509094238
    5. '   ' → logprob: -4.591351509094238
    6. '       ' → logprob: -6.591351509094238
    7. ' 
' → logprob: -6.841351509094238
    8. '<|end|>' → logprob: -6.841351509094238
    9. '  ' → logprob: -6.966351509094238
    10. '
' → logprob: -7.716351509094238

Token 93: ' sp' (ID: 1014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20067672431468964
    2. ' sp' → logprob: -2.200676679611206
    3. ' if' → logprob: -3.575676679611206
    4. 'if' → logprob: -3.700676679611206
    5. 'sp' (adapté à ' sp') → logprob: -5.075676918029785
    6. '<|end|>' → logprob: -5.700676918029785
    7. 'spf' → logprob: -5.950676918029785
    8. '    ' → logprob: -6.075676918029785
    9. ' i' → logprob: -6.825676918029785
    10. '   ' → logprob: -7.075676918029785

Token 94: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -7.584239938296378e-06
    2. '[' → logprob: -12.750007629394531
    3. '[f' → logprob: -13.500007629394531
    4. '   ' → logprob: -14.375007629394531
    5. '```' → logprob: -14.375007629394531
    6. 'ф' → logprob: -14.625007629394531
    7. '[i' → logprob: -15.125007629394531
    8. '=' → logprob: -15.125007629394531
    9. ' f' → logprob: -15.375007629394531
    10. 'ƒ' → logprob: -15.625007629394531

Token 95: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018041854491457343
    2. '[' → logprob: -8.6251802444458
    3. '[I' → logprob: -14.7501802444458
    4. 'i' → logprob: -15.5001802444458
    5. '```' → logprob: -16.500181198120117
    6. ' i' → logprob: -16.750181198120117
    7. ' [' → logprob: -17.125181198120117
    8. '[j' → logprob: -17.125181198120117
    9. '[
' → logprob: -18.500181198120117
    10. '	i' → logprob: -18.750181198120117

Token 96: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030825965106487274
    2. ']=' → logprob: -4.405826091766357
    3. ' ]' → logprob: -4.655826091766357
    4. ' =' → logprob: -5.405826091766357
    5. '=' → logprob: -5.530826091766357
    6. '=i' → logprob: -9.0308256149292
    7. ')' → logprob: -10.6558256149292
    8. ' ' → logprob: -11.4058256149292
    9. 'if' → logprob: -11.7808256149292
    10. ']==' → logprob: -11.9058256149292

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10274921357631683
    2. '=' → logprob: -2.3527491092681885
    3. '=i' → logprob: -5.977749347686768
    4. ' ' → logprob: -13.47774887084961
    5. '=int' → logprob: -13.97774887084961
    6. '=f' → logprob: -14.85274887084961
    7. '＝' → logprob: -15.22774887084961
    8. '=index' → logprob: -15.22774887084961
    9. ' i' → logprob: -15.60274887084961
    10. ' =
' → logprob: -15.72774887084961

Token 98: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009114635176956654
    2. ' i' → logprob: -7.000911235809326
    3. '	i' → logprob: -17.125911712646484
    4. ' ' → logprob: -17.750911712646484
    5. '0' → logprob: -17.875911712646484
    6. '2' → logprob: -18.375911712646484
    7. '<|end|>' → logprob: -20.375911712646484
    8. ' ' → logprob: -20.875911712646484
    9. '```' → logprob: -21.250911712646484
    10. '1' → logprob: -21.500911712646484

Token 99: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7360168099403381
    2. '<|end|>' → logprob: -0.7360168099403381
    3. ' ' → logprob: -4.236016750335693
    4. ' 
' → logprob: -4.361016750335693
    5. '<|end|>' → logprob: -4.861016750335693
    6. '\n' → logprob: -6.486016750335693
    7. '    
' → logprob: -6.736016750335693
    8. '    ' → logprob: -6.861016750335693
    9. '  
' → logprob: -6.986016750335693
    10. '   ' → logprob: -7.736016750335693

Token 100: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3029137849807739
    2. '<|end|>' → logprob: -1.677913784980774
    3. ' 
' → logprob: -3.0529136657714844
    4. '    
' → logprob: -4.677913665771484
    5. '  
' → logprob: -5.302913665771484
    6. ' ' → logprob: -5.552913665771484
    7. '   ' → logprob: -5.677913665771484
    8. '<|end|>' → logprob: -6.427913665771484
    9. ' for' → logprob: -6.552913665771484
    10. '    ' → logprob: -6.802913665771484

Token 101: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32672855257987976
    2. '<|end|>' → logprob: -1.5767285823822021
    3. ' 
' → logprob: -3.701728582382202
    4. '\n' → logprob: -3.701728582382202
    5. ' ' → logprob: -4.951728343963623
    6. '  
' → logprob: -5.451728343963623
    7. '   ' → logprob: -5.826728343963623
    8. ' for' → logprob: -5.826728343963623
    9. '<|end|>' → logprob: -6.326728343963623
    10. '    
' → logprob: -6.826728343963623

Token 102: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01437738724052906
    2. ' ' → logprob: -4.389377593994141
    3. 'i' → logprob: -6.514377593994141
    4. '2' → logprob: -8.26437759399414
    5. ' range' → logprob: -10.01437759399414
    6. ' ' → logprob: -10.63937759399414
    7. ' space' → logprob: -11.38937759399414
    8. '  ' → logprob: -11.76437759399414
    9. ' (' → logprob: -11.76437759399414
    10. 'range' → logprob: -12.01437759399414

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020157473161816597
    2. 'in' → logprob: -4.145157337188721
    3. ' ' → logprob: -5.520157337188721
    4. '2' → logprob: -9.895157814025879
    5. '   ' → logprob: -10.895157814025879
    6. '  ' → logprob: -11.645157814025879
    7. '=' → logprob: -12.145157814025879
    8. ' ,' → logprob: -12.270157814025879
    9. '(' → logprob: -12.395157814025879
    10. ' (' → logprob: -12.395157814025879

Token 104: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0073680877685546875
    2. ' ' → logprob: -5.132368087768555
    3. 'range' → logprob: -6.632368087768555
    4. '2' → logprob: -9.382368087768555
    5. '(' → logprob: -10.382368087768555
    6. '(range' → logprob: -12.632368087768555
    7. ' (' → logprob: -13.257368087768555
    8. '	range' → logprob: -14.007368087768555
    9. ' xrange' → logprob: -15.632368087768555
    10. '  ' → logprob: -16.507368087768555

Token 105: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003360582049936056
    2. ' (' → logprob: -8.000335693359375
    3. ' ' → logprob: -15.000335693359375
    4. '2' → logprob: -15.875335693359375
    5. ' range' → logprob: -16.375335693359375
    6. '(range' → logprob: -16.875335693359375
    7. '((' → logprob: -17.125335693359375
    8. 'range' → logprob: -17.875335693359375
    9. '(
' → logprob: -19.625335693359375
    10. '	' → logprob: -20.000335693359375

Token 106: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.625059127807617
    4. '  ' → logprob: -19.625059127807617
    5. '```' → logprob: -19.625059127807617
    6. ')' → logprob: -19.750059127807617
    7. '２' → logprob: -19.875059127807617
    8. '    ' → logprob: -20.000059127807617
    9. '(' → logprob: -20.375059127807617
    10. '

' → logprob: -20.625059127807617

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06287192553281784
    2. ' ,' → logprob: -2.8128719329833984
    3. ' ' → logprob: -7.187871932983398
    4. ')' → logprob: -9.937871932983398
    5. '    ' → logprob: -10.812871932983398
    6. ' *' → logprob: -11.062871932983398
    7. '   ' → logprob: -11.312871932983398
    8. ' )' → logprob: -11.687871932983398
    9. '  ' → logprob: -11.937871932983398
    10. '*' → logprob: -12.062871932983398

Token 108: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1278882920742035
    2. ' int' → logprob: -2.5028882026672363
    3. '316' → logprob: -3.8778882026672363
    4. '317' → logprob: -4.127888202667236
    5. '(int' → logprob: -7.752888202667236
    6. 'MAX' → logprob: -8.002888679504395
    7. ' ' → logprob: -8.002888679504395
    8. '321' → logprob: -9.252888679504395
    9. '318' → logprob: -10.127888679504395
    10. '(' → logprob: -10.627888679504395

Token 109: '(MAX' (ID: 129209)
  Prédit: '(MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.0166259054094553
    2. '((' → logprob: -4.266625881195068
    3. '(' → logprob: -6.016625881195068
    4. '(M' → logprob: -11.516626358032227
    5. ' (' → logprob: -12.391626358032227
    6. '(s' → logprob: -12.516626358032227
    7. '(len' → logprob: -13.641626358032227
    8. '(S' → logprob: -14.266626358032227
    9. '(pow' → logprob: -14.391626358032227
    10. '(
' → logprob: -14.766626358032227

Token 110: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.00013357517309486866
    2. '_MAX' → logprob: -9.875133514404297
    3. '**' → logprob: -10.375133514404297
    4. 'A' → logprob: -11.500133514404297
    5. 'import' → logprob: -11.625133514404297
    6. 'MAX' → logprob: -12.000133514404297
    7. '(MAX' → logprob: -12.250133514404297
    8. '__' → logprob: -12.875133514404297
    9. '_S' → logprob: -13.375133514404297
    10. ' ' → logprob: -13.500133514404297

Token 111: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.013312814757227898
    2. ' **' → logprob: -4.388312816619873
    3. '(' → logprob: -7.263312816619873
    4. ' ' → logprob: -9.888312339782715
    5. ' (' → logprob: -10.763312339782715
    6. '0' → logprob: -11.013312339782715
    7. '(i' → logprob: -12.638312339782715
    8. '*' → logprob: -12.763312339782715
    9. '+' → logprob: -12.888312339782715
    10. '(MAX' → logprob: -13.888312339782715

Token 112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.869017852295656e-06
    2. '.' → logprob: -12.375006675720215
    3. ' ' → logprob: -12.875006675720215
    4. '(' → logprob: -18.37500762939453
    5. '   ' → logprob: -18.62500762939453
    6. '```' → logprob: -18.62500762939453
    7. '2' → logprob: -19.62500762939453
    8. '+' → logprob: -19.87500762939453
    9. ' ' → logprob: -20.37500762939453
    10. '

' → logprob: -20.37500762939453

Token 113: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -15.875
    3. ' .' → logprob: -16.125
    4. '5' → logprob: -16.375
    5. '```' → logprob: -17.375
    6. '2' → logprob: -18.125
    7. '1' → logprob: -18.125
    8. '`.' → logprob: -19.0
    9. ''.' → logprob: -19.0
    10. '..' → logprob: -19.0

Token 114: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -9.088346359931165e-07
    2. '.' → logprob: -14.875000953674316
    3. '```' → logprob: -15.375000953674316
    4. ' ' → logprob: -16.0
    5. '   ' → logprob: -16.375
    6. '...' → logprob: -17.25
    7. '``' → logprob: -17.6875
    8. '4' → logprob: -17.9375
    9. '**' → logprob: -18.5625
    10. '0' → logprob: -18.625

Token 115: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1444912701845169
    2. ')+' → logprob: -2.019491195678711
    3. ' )' → logprob: -6.394491195678711
    4. '()' → logprob: -9.394491195678711
    5. '+' → logprob: -10.144491195678711
    6. '()+' → logprob: -12.019491195678711
    7. '())' → logprob: -12.144491195678711
    8. ' +' → logprob: -12.644491195678711
    9. ' ' → logprob: -13.019491195678711
    10. '   ' → logprob: -14.144491195678711

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004883344518020749
    2. ' ' → logprob: -7.62548828125
    3. '2' → logprob: -16.62548828125
    4. '+' → logprob: -16.62548828125
    5. '   ' → logprob: -17.00048828125
    6. '```' → logprob: -17.37548828125
    7. '  ' → logprob: -17.62548828125
    8. ' +' → logprob: -17.87548828125
    9. ')' → logprob: -18.56298828125
    10. ')+' → logprob: -18.93798828125

Token 117: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21358589828014374
    2. '):' → logprob: -1.8385858535766602
    3. '):
' → logprob: -3.58858585357666
    4. ':
' → logprob: -5.58858585357666
    5. ' :' → logprob: -6.58858585357666
    6. ')' → logprob: -8.96358585357666
    7. ' ):' → logprob: -8.96358585357666
    8. '   ' → logprob: -9.33858585357666
    9. ' :
' → logprob: -9.33858585357666
    10. ' ):
' → logprob: -9.46358585357666

Token 118: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023096973076462746
    2. '       ' → logprob: -4.273097038269043
    3. ':
' → logprob: -5.273097038269043
    4. ' :' → logprob: -5.898097038269043
    5. ' :
' → logprob: -7.773097038269043
    6. '   ' → logprob: -8.273097038269043
    7. '):' → logprob: -8.773097038269043
    8. ' ' → logprob: -10.148097038269043
    9. '<|end|>' → logprob: -10.148097038269043
    10. '):
' → logprob: -10.398097038269043

Token 119: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07439646124839783
    2. ' 
' → logprob: -3.0743963718414307
    3. ' if' → logprob: -4.69939661026001
    4. '    ' → logprob: -4.69939661026001
    5. '
' → logprob: -5.82439661026001
    6. '   ' → logprob: -6.69939661026001
    7. '  
' → logprob: -7.19939661026001
    8. '    
' → logprob: -7.32439661026001
    9. '  ' → logprob: -7.82439661026001
    10. '     
' → logprob: -7.82439661026001

Token 120: ' sp' (ID: 1014)
  Prédit: ' sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sp' → logprob: -0.06199278309941292
    2. 'spf' → logprob: -2.811992883682251
    3. '	sp' → logprob: -11.561992645263672
    4. 'sp' → logprob: -12.061992645263672
    5. ' sf' → logprob: -13.186992645263672
    6. '(sp' → logprob: -13.186992645263672
    7. ' ' → logprob: -13.186992645263672
    8. 'spd' → logprob: -13.186992645263672
    9. ' SPF' → logprob: -14.186992645263672
    10. ' spu' → logprob: -14.311992645263672

Token 121: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.007617394905537367
    2. '[i' → logprob: -4.882617473602295
    3. '[f' → logprob: -11.632616996765137
    4. '[
' → logprob: -13.882616996765137
    5. '[' → logprob: -14.257616996765137
    6. '[int' → logprob: -15.882616996765137
    7. '```' → logprob: -16.007617950439453
    8. 'ф' → logprob: -16.132617950439453
    9. 'ff' → logprob: -17.007617950439453
    10. ' f' → logprob: -17.132617950439453

Token 122: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.451116051815916e-05
    2. '[' → logprob: -10.625024795532227
    3. '[I' → logprob: -16.125024795532227
    4. ' [' → logprob: -17.000024795532227
    5. '[
' → logprob: -18.750024795532227
    6. 'i' → logprob: -19.375024795532227
    7. '```' → logprob: -19.875024795532227
    8. '[j' → logprob: -20.625024795532227
    9. '[int' → logprob: -20.750024795532227
    10. '[ii' → logprob: -20.875024795532227

Token 123: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5761380195617676
    2. ' ==' → logprob: -0.8261380195617676
    3. ']==' → logprob: -8.70113754272461
    4. '=' → logprob: -11.32613754272461
    5. ']' → logprob: -11.82613754272461
    6. ')==' → logprob: -12.32613754272461
    7. ')' → logprob: -12.95113754272461
    8. ' =' → logprob: -13.07613754272461
    9. ' ' → logprob: -13.95113754272461
    10. '=i' → logprob: -14.20113754272461

Token 124: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3137964904308319
    2. '==' → logprob: -1.3137965202331543
    3. ']==' → logprob: -8.688796043395996
    4. ' ' → logprob: -9.063796043395996
    5. '[i' → logprob: -9.063796043395996
    6. '[' → logprob: -9.563796043395996
    7. '=' → logprob: -10.188796043395996
    8. ' =' → logprob: -11.938796043395996
    9. ')==' → logprob: -11.938796043395996
    10. ' i' → logprob: -12.813796043395996

Token 125: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011712945997714996
    2. ' i' → logprob: -6.751171112060547
    3. '	i' → logprob: -13.751171112060547
    4. ' ' → logprob: -17.751171112060547
    5. '0' → logprob: -19.751171112060547
    6. '   ' → logprob: -19.876171112060547
    7. ' ' → logprob: -20.376171112060547
    8. '  ' → logprob: -21.751171112060547
    9. '[i' → logprob: -22.126171112060547
    10. '```' → logprob: -22.376171112060547

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04862063005566597
    2. ':
' → logprob: -3.0486207008361816
    3. ' :
' → logprob: -11.423620223999023
    4. '):
' → logprob: -11.923620223999023
    5. ' :' → logprob: -12.173620223999023
    6. '       ' → logprob: -12.923620223999023
    7. '):' → logprob: -13.048620223999023
    8. ':
' → logprob: -13.173620223999023
    9. '   ' → logprob: -13.298620223999023
    10. '<|end|>' → logprob: -14.173620223999023

Token 127: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.045066948980093
    2. ':
' → logprob: -3.2950668334960938
    3. '       ' → logprob: -6.045066833496094
    4. '           ' → logprob: -6.045066833496094
    5. ' :' → logprob: -6.795066833496094
    6. '
' → logprob: -7.545066833496094
    7. ' :
' → logprob: -8.420066833496094
    8. '<|end|>' → logprob: -8.920066833496094
    9. ',' → logprob: -10.420066833496094
    10. '   ' → logprob: -10.420066833496094

Token 128: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4769950807094574
    2. ' for' → logprob: -0.9769951105117798
    3. '   ' → logprob: -6.10199499130249
    4. '           ' → logprob: -7.97699499130249
    5. 'j' → logprob: -8.726995468139648
    6. ' ' → logprob: -9.726995468139648
    7. '       ' → logprob: -9.976995468139648
    8. '	for' → logprob: -10.601995468139648
    9. ' j' → logprob: -10.851995468139648
    10. '	   ' → logprob: -11.976995468139648

Token 129: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2014141082763672
    2. ' j' → logprob: -1.7014141082763672
    3. '	j' → logprob: -14.451414108276367
    4. ' ' → logprob: -15.076414108276367
    5. '   ' → logprob: -17.576414108276367
    6. '```' → logprob: -17.701414108276367
    7. 'x' → logprob: -18.076414108276367
    8. '_j' → logprob: -19.326414108276367
    9. '  ' → logprob: -20.076414108276367
    10. '$j' → logprob: -20.201414108276367

Token 130: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0234835185110569
    2. 'in' → logprob: -3.7734835147857666
    3. ' i' → logprob: -8.648483276367188
    4. 'range' → logprob: -10.523483276367188
    5. '	in' → logprob: -11.523483276367188
    6. '   ' → logprob: -12.023483276367188
    7. 'i' → logprob: -12.523483276367188
    8. ' ' → logprob: -12.648483276367188
    9. ' range' → logprob: -13.148483276367188
    10. 'In' → logprob: -13.273483276367188

Token 131: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12693609297275543
    2. ' range' → logprob: -2.126936197280884
    3. '(range' → logprob: -12.376935958862305
    4. '	range' → logprob: -13.626935958862305
    5. 'i' → logprob: -13.751935958862305
    6. ' ' → logprob: -14.626935958862305
    7. '   ' → logprob: -14.751935958862305
    8. ' i' → logprob: -15.126935958862305
    9. 'rang' → logprob: -15.751935958862305
    10. ' xrange' → logprob: -15.751935958862305

Token 132: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9385402993066236e-05
    2. '(' → logprob: -11.000019073486328
    3. 'i' → logprob: -13.125019073486328
    4. ' i' → logprob: -15.375019073486328
    5. ' (' → logprob: -15.625019073486328
    6. '(j' → logprob: -15.750019073486328
    7. '	i' → logprob: -18.750019073486328
    8. 'j' → logprob: -19.125019073486328
    9. '(
' → logprob: -19.125019073486328
    10. '(ii' → logprob: -19.125019073486328

Token 133: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.018576553091406822
    2. ' *' → logprob: -4.518576622009277
    3. '*' → logprob: -4.893576622009277
    4. 'i' → logprob: -12.268576622009277
    5. '*j' → logprob: -15.018576622009277
    6. ' i' → logprob: -15.393576622009277
    7. '*,' → logprob: -15.518576622009277
    8. ',' → logprob: -15.768576622009277
    9. ' ' → logprob: -15.768576622009277
    10. '**' → logprob: -15.893576622009277

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.639096970204264e-05
    2. ' ,' → logprob: -9.250096321105957
    3. 'MAX' → logprob: -15.375096321105957
    4. '(MAX' → logprob: -17.625097274780273
    5. '[MAX' → logprob: -18.625097274780273
    6. ',
' → logprob: -18.750097274780273
    7. ',max' → logprob: -18.875097274780273
    8. ' MAX' → logprob: -19.125097274780273
    9. '

' → logprob: -20.375097274780273
    10. ',(' → logprob: -20.875097274780273

Token 135: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.0032623191364109516
    2. ' MAX' → logprob: -5.753262519836426
    3. '(MAX' → logprob: -9.378262519836426
    4. '[MAX' → logprob: -16.75326156616211
    5. '_MAX' → logprob: -17.87826156616211
    6. '/MAX' → logprob: -18.00326156616211
    7. '   ' → logprob: -18.37826156616211
    8. 'MIN' → logprob: -19.00326156616211
    9. ' ' → logprob: -19.12826156616211
    10. '.MAX' → logprob: -19.50326156616211

Token 136: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.0001657565007917583
    2. 'A' → logprob: -8.750165939331055
    3. '+' → logprob: -12.000165939331055
    4. 'MAX' → logprob: -15.000165939331055
    5. '+A' → logprob: -15.000165939331055
    6. '```' → logprob: -15.750165939331055
    7. '	A' → logprob: -16.125165939331055
    8. 'А' → logprob: -17.125165939331055
    9. '_MAX' → logprob: -17.250165939331055
    10. '\' → logprob: -17.375165939331055

Token 137: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001398929744027555
    2. ' +' → logprob: -8.875140190124512
    3. '+i' → logprob: -17.750139236450195
    4. '+j' → logprob: -17.750139236450195
    5. '+
' → logprob: -18.375139236450195
    6. '1' → logprob: -18.375139236450195
    7. '＋' → logprob: -18.875139236450195
    8. '```' → logprob: -18.875139236450195
    9. '()+' → logprob: -19.125139236450195
    10. ')+' → logprob: -20.375139236450195

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.580929347255733e-05
    2. ' ' → logprob: -11.125016212463379
    3. '+' → logprob: -14.000016212463379
    4. '   ' → logprob: -16.250015258789062
    5. ',' → logprob: -17.500015258789062
    6. '  ' → logprob: -18.375015258789062
    7. '```' → logprob: -18.500015258789062
    8. '    ' → logprob: -18.937515258789062
    9. '１' → logprob: -19.375015258789062
    10. '2' → logprob: -19.562515258789062

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010247035970678553
    2. ',i' → logprob: -9.500102043151855
    3. ' ,' → logprob: -10.500102043151855
    4. 'i' → logprob: -16.875102996826172
    5. ',j' → logprob: -17.250102996826172
    6. ' i' → logprob: -18.875102996826172
    7. '

' → logprob: -19.625102996826172
    8. ',
' → logprob: -20.000102996826172
    9. '(i' → logprob: -20.500102996826172
    10. '),' → logprob: -20.625102996826172

Token 140: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10021281987428665
    2. ' i' → logprob: -2.350212812423706
    3. '	i' → logprob: -12.100213050842285
    4. ')i' → logprob: -15.225213050842285
    5. ' ' → logprob: -15.975213050842285
    6. ')' → logprob: -16.35021209716797
    7. '*i' → logprob: -16.60021209716797
    8. '   ' → logprob: -17.35021209716797
    9. ',i' → logprob: -18.47521209716797
    10. ' ' → logprob: -18.60021209716797

Token 141: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5759896039962769
    2. '):' → logprob: -0.8259896039962769
    3. '):
' → logprob: -10.950989723205566
    4. ' ):' → logprob: -11.075989723205566
    5. ' ):
' → logprob: -11.450989723205566
    6. ')' → logprob: -12.700989723205566
    7. ':' → logprob: -12.950989723205566
    8. '):

' → logprob: -14.575989723205566
    9. '   ' → logprob: -15.700989723205566
    10. ' ' → logprob: -16.07598876953125

Token 142: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002765175187960267
    2. ' if' → logprob: -7.00276517868042
    3. 'spf' → logprob: -7.00276517868042
    4. ' sp' → logprob: -7.25276517868042
    5. 'sp' → logprob: -9.252764701843262
    6. '                
' → logprob: -9.877764701843262
    7. 'if' → logprob: -10.752764701843262
    8. '           ' → logprob: -10.752764701843262
    9. '	sp' → logprob: -11.877764701843262
    10. ' ' → logprob: -11.877764701843262

Token 143: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.45160385966300964
    2. ' if' → logprob: -1.076603889465332
    3. 'spf' → logprob: -3.826603889465332
    4. 'sp' → logprob: -7.701603889465332
    5. ' ' → logprob: -8.576603889465332
    6. ' sp' → logprob: -9.201603889465332
    7. '                   ' → logprob: -9.701603889465332
    8. '               ' → logprob: -10.826603889465332
    9. '
' → logprob: -11.826603889465332
    10. ' 
' → logprob: -12.076603889465332

Token 144: ' sp' (ID: 1014)
  Prédit: ' sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sp' → logprob: -0.10032723098993301
    2. 'spf' → logprob: -2.350327253341675
    3. '	sp' → logprob: -9.475327491760254
    4. 'sp' → logprob: -10.225327491760254
    5. '(sp' → logprob: -12.350327491760254
    6. '   ' → logprob: -13.600327491760254
    7. ' ' → logprob: -14.225327491760254
    8. '```' → logprob: -14.850327491760254
    9. '_sp' → logprob: -15.475327491760254
    10. '.sp' → logprob: -15.600327491760254

Token 145: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07009726762771606
    2. '[j' → logprob: -2.6950972080230713
    3. 'fj' → logprob: -8.820096969604492
    4. '```' → logprob: -12.570096969604492
    5. 'j' → logprob: -12.695096969604492
    6. 'jf' → logprob: -13.070096969604492
    7. '[' → logprob: -14.195096969604492
    8. '[
' → logprob: -14.195096969604492
    9. 'ф' → logprob: -14.945096969604492
    10. '﻿' → logprob: -14.945096969604492

Token 146: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.750000953674316
    3. '[i' → logprob: -16.625
    4. 'j' → logprob: -17.375
    5. '```' → logprob: -18.125
    6. '[js' → logprob: -18.625
    7. '\[' → logprob: -19.625
    8. ' [' → logprob: -20.0
    9. '[
' → logprob: -20.125
    10. '[J' → logprob: -20.375

Token 147: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3985166847705841
    2. ' ==' → logprob: -1.2735166549682617
    3. ']' → logprob: -3.6485166549682617
    4. ']==' → logprob: -4.023516654968262
    5. '[j' → logprob: -5.523516654968262
    6. '=' → logprob: -8.023516654968262
    7. '[' → logprob: -8.023516654968262
    8. '>' → logprob: -9.273516654968262
    9. ')' → logprob: -9.773516654968262
    10. ')==' → logprob: -10.023516654968262

Token 148: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.012599247507750988
    2. ' ==' → logprob: -4.387599468231201
    3. '>' → logprob: -10.262598991394043
    4. ']==' → logprob: -10.637598991394043
    5. '=' → logprob: -10.887598991394043
    6. '[j' → logprob: -13.012598991394043
    7. ')' → logprob: -13.137598991394043
    8. ']' → logprob: -13.387598991394043
    9. ')==' → logprob: -13.387598991394043
    10. '[' → logprob: -13.637598991394043

Token 149: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00015860427811276168
    2. ' j' → logprob: -8.750158309936523
    3. '	j' → logprob: -15.625158309936523
    4. '   ' → logprob: -19.750158309936523
    5. '$j' → logprob: -20.625158309936523
    6. '0' → logprob: -20.875158309936523
    7. '```' → logprob: -21.250158309936523
    8. '=j' → logprob: -21.375158309936523
    9. ' ' → logprob: -21.500158309936523
    10. '*j' → logprob: -21.875158309936523

Token 150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09729315340518951
    2. ':
' → logprob: -3.2222931385040283
    3. '):
' → logprob: -3.4722931385040283
    4. '):' → logprob: -4.222293376922607
    5. '                   ' → logprob: -5.597293376922607
    6. '=' → logprob: -6.097293376922607
    7. '               ' → logprob: -7.472293376922607
    8. ')' → logprob: -8.59729290008545
    9. ' =' → logprob: -8.72229290008545
    10. ':j' → logprob: -9.97229290008545

Token 151: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003999803680926561
    2. '               ' → logprob: -6.378999710083008
    3. '                       ' → logprob: -6.878999710083008
    4. 'spf' → logprob: -7.628999710083008
    5. ' sp' → logprob: -8.253999710083008
    6. '                    ' → logprob: -9.128999710083008
    7. '	sp' → logprob: -9.628999710083008
    8. '                ' → logprob: -9.878999710083008
    9. '=' → logprob: -10.128999710083008
    10. '                    
' → logprob: -10.253999710083008

Token 152: ' sp' (ID: 1014)
  Prédit: 'spf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spf' → logprob: -0.0005589892389252782
    2. 'sp' (adapté à ' sp') → logprob: -7.500558853149414
    3. ' sp' → logprob: -12.125558853149414
    4. 'spi' → logprob: -15.375558853149414
    5. 'spd' → logprob: -16.000558853149414
    6. 'spa' → logprob: -16.250558853149414
    7. 'spo' → logprob: -16.625558853149414
    8. 'ssp' → logprob: -17.125558853149414
    9. '	sp' → logprob: -17.750558853149414
    10. ' SPF' → logprob: -18.375558853149414

Token 153: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.4855663721391466e-05
    2. '[j' → logprob: -11.125015258789062
    3. 'fj' → logprob: -17.750015258789062
    4. 'ф' → logprob: -18.500015258789062
    5. 'j' → logprob: -18.625015258789062
    6. '[f' → logprob: -18.750015258789062
    7. ' f' → logprob: -18.750015258789062
    8. '```' → logprob: -19.250015258789062
    9. 'F' → logprob: -20.125015258789062
    10. '[' → logprob: -20.625015258789062

Token 154: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.75
    3. 'j' → logprob: -17.375
    4. '[js' → logprob: -18.0
    5. '```' → logprob: -18.5
    6. '[i' → logprob: -18.625
    7. '	j' → logprob: -19.625
    8. '\[' → logprob: -20.125
    9. '[
' → logprob: -20.625
    10. '[int' → logprob: -20.875

Token 155: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12697672843933105
    2. ' =' → logprob: -2.126976728439331
    3. ']' → logprob: -10.50197696685791
    4. ']=' → logprob: -11.87697696685791
    5. '=j' → logprob: -12.25197696685791
    6. ')' → logprob: -12.25197696685791
    7. '=i' → logprob: -12.75197696685791
    8. ')=' → logprob: -13.62697696685791
    9. '=
' → logprob: -16.251976013183594
    10. '＝' → logprob: -16.376976013183594

Token 156: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011056310497224331
    2. ' =' → logprob: -4.511056423187256
    3. '=j' → logprob: -11.761055946350098
    4. '=i' → logprob: -15.011055946350098
    5. '=
' → logprob: -15.761055946350098
    6. '＝' → logprob: -17.136056900024414
    7. '=s' → logprob: -17.636056900024414
    8. '=

' → logprob: -17.761056900024414
    9. '=int' → logprob: -18.386056900024414
    10. '<|end|>' → logprob: -18.636056900024414

Token 157: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00317783304490149
    2. ' i' → logprob: -5.753177642822266
    3. '	i' → logprob: -16.378177642822266
    4. ' ' → logprob: -17.503177642822266
    5. '```' → logprob: -19.253177642822266
    6. '%i' → logprob: -19.753177642822266
    7. '*i' → logprob: -19.878177642822266
    8. '_i' → logprob: -20.003177642822266
    9. '[i' → logprob: -20.003177642822266
    10. '   ' → logprob: -20.378177642822266

Token 158: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25978219509124756
    2. '<|end|>' → logprob: -2.009782314300537
    3. 'def' → logprob: -3.884782314300537
    4. 's' → logprob: -4.009782314300537
    5. ')' → logprob: -4.009782314300537
    6. '\n' → logprob: -4.884782314300537
    7. '```' → logprob: -4.884782314300537
    8. '#' → logprob: -5.259782314300537
    9. '<|end|>' → logprob: -5.384782314300537
    10. 'newline' → logprob: -5.509782314300537

Token 159: 's' (ID: 82)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4286568760871887
    2. 'def' → logprob: -2.178656816482544
    3. '<|end|>' → logprob: -2.178656816482544
    4. 's' → logprob: -3.428656816482544
    5. '```' → logprob: -3.678656816482544
    6. 'newline' → logprob: -3.928656816482544
    7. ')' → logprob: -4.178657054901123
    8. '\n' → logprob: -4.428657054901123
    9. '#' → logprob: -5.053657054901123
    10. '<|end|>' → logprob: -5.803657054901123

Token 160: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.11489449441432953
    2. 'i' → logprob: -2.239894390106201
    3. 'ie' → logprob: -7.114894390106201
    4. 'e' → logprob: -7.364894390106201
    5. 'iev' → logprob: -8.11489486694336
    6. 'a' → logprob: -8.98989486694336
    7. ' i' → logprob: -10.23989486694336
    8. 'ive' → logprob: -10.61489486694336
    9. 'ief' → logprob: -10.86489486694336
    10. 'iewe' → logprob: -11.23989486694336

Token 161: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.0016469687689095736
    2. '_' → logprob: -6.501646995544434
    3. '_s' → logprob: -8.876646995544434
    4. '_sn' → logprob: -12.626646995544434
    5. '_sf' → logprob: -14.626646995544434
    6. '_spi' → logprob: -14.751646995544434
    7. 'sp' → logprob: -15.251646995544434
    8. ' _' → logprob: -15.626646995544434
    9. '_)' → logprob: -16.751646041870117
    10. 'spf' → logprob: -16.751646041870117

Token 162: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -4.060365608893335e-05
    2. 'pf' → logprob: -10.625041007995605
    3. 'ф' → logprob: -12.125041007995605
    4. '_f' → logprob: -12.375041007995605
    5. 'p' → logprob: -13.000041007995605
    6. '_' → logprob: -13.250041007995605
    7. 'fp' → logprob: -14.750041007995605
    8. '```' → logprob: -14.750041007995605
    9. 'rf' → logprob: -14.875041007995605
    10. ' f' → logprob: -15.875041007995605

Token 163: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.15441757265944e-05
    2. '(' → logprob: -10.625031471252441
    3. '()
' → logprob: -12.750031471252441
    4. ' ()' → logprob: -13.625031471252441
    5. '()`' → logprob: -13.875031471252441
    6. '()

' → logprob: -14.625031471252441
    7. '();' → logprob: -15.000031471252441
    8. '()"' → logprob: -15.625031471252441
    9. '()>' → logprob: -15.625031471252441
    10. '()">' → logprob: -15.625031471252441

Token 164: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10284020751714706
    2. 'fact' → logprob: -2.8528401851654053
    3. 'factor' → logprob: -3.6028401851654053
    4. 'prime' → logprob: -5.352840423583984
    5. 'div' → logprob: -5.977840423583984
    6. '
' → logprob: -6.352840423583984
    7. '#' → logprob: -6.727840423583984
    8. 'd' → logprob: -8.227840423583984
    9. 'dp' → logprob: -8.352840423583984
    10. '

' → logprob: -8.477840423583984

Token 165: ' get' (ID: 717)
  Prédit: ' factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factor' → logprob: -0.4762754738330841
    2. ' prime' → logprob: -1.1012754440307617
    3. 'factor' → logprob: -3.7262754440307617
    4. ' get' → logprob: -4.351275444030762
    5. 'prime' → logprob: -4.726275444030762
    6. 'get' → logprob: -8.226275444030762
    7. 'spf' → logprob: -9.976275444030762
    8. ' smallest' → logprob: -10.101275444030762
    9. '_factor' → logprob: -10.351275444030762
    10. ' main' → logprob: -10.601275444030762

Token 166: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.1996895968914032
    2. '_f' → logprob: -2.1996896266937256
    3. '_factor' → logprob: -2.8246896266937256
    4. '_' → logprob: -4.9496893882751465
    5. '_pr' → logprob: -6.4496893882751465
    6. '_small' → logprob: -7.6996893882751465
    7. '_pf' → logprob: -7.9496893882751465
    8. '_next' → logprob: -7.9496893882751465
    9. 'prime' → logprob: -8.199689865112305
    10. 'f' → logprob: -8.574689865112305

Token 167: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.0150457713752985
    2. '_factor' → logprob: -4.265045642852783
    3. 'f' → logprob: -7.140045642852783
    4. '_' → logprob: -10.015046119689941
    5. 'factor' → logprob: -10.265046119689941
    6. '_div' → logprob: -12.640046119689941
    7. ' factors' → logprob: -13.140046119689941
    8. ' _' → logprob: -13.265046119689941
    9. '```' → logprob: -13.765046119689941
    10. 'Factors' → logprob: -14.265046119689941

Token 168: 'actors' (ID: 37126)
  Prédit: 'actor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.020932812243700027
    2. 'actors' → logprob: -3.895932912826538
    3. 'act' → logprob: -8.020933151245117
    4. 'a' → logprob: -10.895933151245117
    5. 'ac' → logprob: -11.020933151245117
    6. 'acter' → logprob: -12.395933151245117
    7. 'acteur' → logprob: -12.895933151245117
    8. '_actor' → logprob: -13.020933151245117
    9. '_' → logprob: -13.520933151245117
    10. 'actoring' → logprob: -13.645933151245117

Token 169: '(x' (ID: 4061)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.36175549030303955
    2. '(num' → logprob: -1.6117554903030396
    3. '(x' → logprob: -2.86175537109375
    4. '(' → logprob: -3.11175537109375
    5. '(number' → logprob: -6.48675537109375
    6. ' (' → logprob: -7.23675537109375
    7. '(a' → logprob: -10.48675537109375
    8. '(value' → logprob: -10.86175537109375
    9. '(i' → logprob: -11.48675537109375
    10. '(k' → logprob: -11.98675537109375

Token 170: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005993809318169951
    2. '):
' → logprob: -7.625599384307861
    3. ')' → logprob: -9.250598907470703
    4. ' ):' → logprob: -11.500598907470703
    5. ':' → logprob: -12.875598907470703
    6. '):
' → logprob: -13.375598907470703
    7. '   ' → logprob: -15.125598907470703
    8. ',' → logprob: -15.375598907470703
    9. '}:' → logprob: -15.875598907470703
    10. '():' → logprob: -16.000598907470703

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036373690236359835
    2. '[]' → logprob: -6.128637313842773
    3. ' []' → logprob: -7.378637313842773
    4. ' factors' → logprob: -7.628637313842773
    5. '	f' → logprob: -8.503637313842773
    6. '    ' → logprob: -10.378637313842773
    7. '   ' → logprob: -10.378637313842773
    8. '	' → logprob: -10.878637313842773
    9. '    
' → logprob: -11.503637313842773
    10. '[' → logprob: -11.628637313842773

Token 172: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.021363381296396255
    2. ' factors' → logprob: -4.021363258361816
    3. 'prime' → logprob: -6.396363258361816
    4. 'res' → logprob: -7.146363258361816
    5. 'fac' → logprob: -8.146363258361816
    6. 'fact' → logprob: -8.771363258361816
    7. 'pf' → logprob: -9.146363258361816
    8. '   ' → logprob: -9.646363258361816
    9. 'factor' → logprob: -9.896363258361816
    10. 'facts' → logprob: -10.021363258361816

Token 173: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014412134885788
    2. ' =' → logprob: -1.7014411687850952
    3. '=[]' → logprob: -10.576440811157227
    4. '_' → logprob: -14.076440811157227
    5. '=[]
' → logprob: -14.326440811157227
    6. 's' → logprob: -14.951440811157227
    7. '[]' → logprob: -15.826440811157227
    8. '   ' → logprob: -16.201440811157227
    9. ' ' → logprob: -16.576440811157227
    10. '	' → logprob: -16.576440811157227

Token 174: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00030936390976421535
    2. ' []' → logprob: -8.250308990478516
    3. '{}' → logprob: -10.750308990478516
    4. 'set' → logprob: -11.250308990478516
    5. '[]
' → logprob: -11.250308990478516
    6. ' set' → logprob: -15.250308990478516
    7. '[]}' → logprob: -15.250308990478516
    8. '[]

' → logprob: -16.375308990478516
    9. '[' → logprob: -17.750308990478516
    10. '[]>' → logprob: -18.750308990478516

Token 175: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01116395927965641
    2. '(' → logprob: -4.51116418838501
    3. '()
' → logprob: -9.886163711547852
    4. '(x' → logprob: -10.261163711547852
    5. '([' → logprob: -11.761163711547852
    6. '([]' → logprob: -12.511163711547852
    7. '()

' → logprob: -12.511163711547852
    8. '())' → logprob: -12.886163711547852
    9. '();' → logprob: -12.886163711547852
    10. '()]' → logprob: -13.511163711547852

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14180251955986023
    2. ' while' → logprob: -2.8918025493621826
    3. ' 
' → logprob: -4.2668023109436035
    4. '    
' → logprob: -4.3918023109436035
    5. ' ' → logprob: -4.5168023109436035
    6. 'while' → logprob: -5.2668023109436035
    7. '    ' → logprob: -5.3918023109436035
    8. '_' → logprob: -5.3918023109436035
    9. '(' → logprob: -5.5168023109436035
    10. ')' → logprob: -5.7668023109436035

Token 177: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.018154505640268326
    2. ' while' → logprob: -4.018154621124268
    3. '   ' → logprob: -13.51815414428711
    4. '	while' → logprob: -13.64315414428711
    5. 'x' → logprob: -13.76815414428711
    6. 'wh' → logprob: -14.89315414428711
    7. '    
' → logprob: -15.51815414428711
    8. 'While' → logprob: -15.76815414428711
    9. ' 
' → logprob: -15.89315414428711
    10. 'w' → logprob: -16.64315414428711

Token 178: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10020817816257477
    2. ' x' → logprob: -2.350208282470703
    3. '	x' → logprob: -13.725208282470703
    4. 'sp' → logprob: -15.225208282470703
    5. '(x' → logprob: -16.100208282470703
    6. ' sp' → logprob: -17.475208282470703
    7. 'spf' → logprob: -17.475208282470703
    8. ' ' → logprob: -17.975208282470703
    9. '```' → logprob: -18.350208282470703
    10. '{x' → logprob: -18.475208282470703

Token 179: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.07017061859369278
    2. ' >' → logprob: -2.6951706409454346
    3. '%' → logprob: -8.445170402526855
    4. '!=' → logprob: -11.320170402526855
    5. ' !=' → logprob: -12.945170402526855
    6. '>=' → logprob: -13.195170402526855
    7. ' %' → logprob: -13.945170402526855
    8. '>%' → logprob: -14.445170402526855
    9. ' ' → logprob: -14.945170402526855
    10. '">' → logprob: -15.320170402526855

Token 180: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '>' → logprob: -17.250001907348633
    4. '```' → logprob: -19.000001907348633
    5. '   ' → logprob: -20.250001907348633
    6. '
' → logprob: -20.250001907348633
    7. '<|end|>' → logprob: -21.500001907348633
    8. '۱' → logprob: -21.875001907348633
    9. '１' → logprob: -22.250001907348633
    10. '১' → logprob: -23.000001907348633

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -16.750003814697266
    4. '>' → logprob: -17.375003814697266
    5. '
' → logprob: -17.375003814697266
    6. '   ' → logprob: -18.750003814697266
    7. '１' → logprob: -19.812503814697266
    8. '۱' → logprob: -20.125003814697266
    9. '১' → logprob: -20.625003814697266
    10. '``' → logprob: -20.625003814697266

Token 182: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024191797710955143
    2. ':
' → logprob: -6.1274189949035645
    3. '   ' → logprob: -9.502419471740723
    4. ' :' → logprob: -9.627419471740723
    5. ',' → logprob: -10.002419471740723
    6. '):' → logprob: -11.127419471740723
    7. '       ' → logprob: -11.252419471740723
    8. ' and' → logprob: -11.627419471740723
    9. ' :
' → logprob: -13.377419471740723
    10. '<|end|>' → logprob: -13.377419471740723

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013821194879710674
    2. '   ' → logprob: -5.013821125030518
    3. ' factors' → logprob: -6.388821125030518
    4. ' 
' → logprob: -6.888821125030518
    5. '<|end|>' → logprob: -6.888821125030518
    6. ' ' → logprob: -7.013821125030518
    7. '        
' → logprob: -7.388821125030518
    8. '    ' → logprob: -8.013821601867676
    9. '    
' → logprob: -8.138821601867676
    10. 'f' → logprob: -9.013821601867676

Token 184: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.02978937141597271
    2. ' factors' → logprob: -3.529789447784424
    3. ' f' → logprob: -10.529788970947266
    4. 'factor' → logprob: -12.529788970947266
    5. '
' → logprob: -12.904788970947266
    6. 'fac' → logprob: -12.904788970947266
    7. 'pf' → logprob: -13.779788970947266
    8. '	f' → logprob: -14.404788970947266
    9. '   ' → logprob: -14.654788970947266
    10. 'p' → logprob: -14.904788970947266

Token 185: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.03807052597403526
    2. '.' → logprob: -3.2880704402923584
    3. ' .' → logprob: -10.663070678710938
    4. 'add' → logprob: -12.788070678710938
    5. '.update' → logprob: -13.538070678710938
    6. '.
' → logprob: -14.163070678710938
    7. '.=' → logprob: -15.288070678710938
    8. '   ' → logprob: -15.913070678710938
    9. ' ' → logprob: -16.163070678710938
    10. '.append' → logprob: -16.413070678710938

Token 186: '(sp' (ID: 33591)
  Prédit: '(sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sp' → logprob: -1.688212614681106e-05
    2. '(' → logprob: -11.000017166137695
    3. '(sf' → logprob: -16.250017166137695
    4. 'spf' → logprob: -18.375017166137695
    5. '/sp' → logprob: -20.125017166137695
    6. ' (' → logprob: -20.125017166137695
    7. '((' → logprob: -20.625017166137695
    8. '(x' → logprob: -20.750017166137695
    9. '(
' → logprob: -20.750017166137695
    10. '	sp' → logprob: -20.875017166137695

Token 187: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.0280383548888494e-06
    2. '[x' → logprob: -14.000000953674316
    3. '[f' → logprob: -15.875000953674316
    4. 'ф' → logprob: -17.500001907348633
    5. '```' → logprob: -18.250001907348633
    6. 'x' → logprob: -19.000001907348633
    7. '\[' → logprob: -19.875001907348633
    8. '[' → logprob: -20.125001907348633
    9. ' f' → logprob: -20.125001907348633
    10. 'F' → logprob: -20.750001907348633

Token 188: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.173704271830502e-06
    2. 'x' → logprob: -12.87500286102295
    3. '[' → logprob: -14.75000286102295
    4. ' [' → logprob: -16.125003814697266
    5. '[
' → logprob: -17.500003814697266
    6. '```' → logprob: -17.875003814697266
    7. ')x' → logprob: -18.125003814697266
    8. '[j' → logprob: -18.625003814697266
    9. '][' → logprob: -18.875003814697266
    10. ')' → logprob: -19.000003814697266

Token 189: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.31328830122947693
    2. '])
' → logprob: -1.3132883310317993
    3. ' ])' → logprob: -11.688288688659668
    4. ']' → logprob: -12.063288688659668
    5. ' ])
' → logprob: -12.063288688659668
    6. ')' → logprob: -13.313288688659668
    7. ')
' → logprob: -13.438288688659668
    8. '])
' → logprob: -13.563288688659668
    9. ']);' → logprob: -14.063288688659668
    10. '])

' → logprob: -14.188288688659668

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034421712160110474
    2. 'x' → logprob: -4.159421920776367
    3. ' x' → logprob: -4.159421920776367
    4. '        
' → logprob: -6.909421920776367
    5. '   ' → logprob: -7.034421920776367
    6. '	' → logprob: -8.784421920776367
    7. ' 
' → logprob: -9.159421920776367
    8. ' ' → logprob: -9.284421920776367
    9. '
' → logprob: -9.659421920776367
    10. '    
' → logprob: -9.909421920776367

Token 191: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -6.2729995988775045e-06
    2. ' x' → logprob: -12.000006675720215
    3. '       ' → logprob: -18.5000057220459
    4. '	x' → logprob: -19.6250057220459
    5. '   ' → logprob: -21.8750057220459
    6. '
' → logprob: -23.0000057220459
    7. ')x' → logprob: -23.3750057220459
    8. '```' → logprob: -23.3750057220459
    9. ' ' → logprob: -23.7500057220459
    10. '=' → logprob: -23.7500057220459

Token 192: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.5258666276931763
    2. '=' → logprob: -1.0258666276931763
    3. ' //' → logprob: -3.0258665084838867
    4. ' =' → logprob: -6.650866508483887
    5. '//' → logprob: -7.400866508483887
    6. '/=' → logprob: -10.150866508483887
    7. ' /=' → logprob: -11.650866508483887
    8. '/' → logprob: -13.150866508483887
    9. ' ' → logprob: -13.650866508483887
    10. '÷' → logprob: -15.525866508483887

Token 193: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.842555426876061e-06
    2. 'sp' → logprob: -13.000004768371582
    3. '=sys' → logprob: -14.375004768371582
    4. '=_' → logprob: -14.625004768371582
    5. '=s' → logprob: -14.750004768371582
    6. '=}' → logprob: -14.875004768371582
    7. '=
' → logprob: -15.250004768371582
    8. '=

' → logprob: -15.375004768371582
    9. '=tf' → logprob: -17.0000057220459
    10. '=int' → logprob: -17.1250057220459

Token 194: ' sp' (ID: 1014)
  Prédit: 'spf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spf' → logprob: -1.0445127372804563e-05
    2. ' sp' → logprob: -11.50001049041748
    3. 'sp' → logprob: -15.37501049041748
    4. 'sf' → logprob: -18.000009536743164
    5. '	sp' → logprob: -18.250009536743164
    6. 'spd' → logprob: -18.375009536743164
    7. 'opf' → logprob: -18.625009536743164
    8. ' ' → logprob: -20.125009536743164
    9. 'pf' → logprob: -20.375009536743164
    10. 'ssf' → logprob: -20.625009536743164

Token 195: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -3.774276774493046e-05
    2. '[x' → logprob: -11.375038146972656
    3. '[' → logprob: -11.750038146972656
    4. '[f' → logprob: -11.750038146972656
    5. 'ф' → logprob: -12.875038146972656
    6. '```' → logprob: -13.500038146972656
    7. '_f' → logprob: -14.375038146972656
    8. 'A' → logprob: -14.750038146972656
    9. '_' → logprob: -14.937538146972656
    10. 'p' → logprob: -15.062538146972656

Token 196: '[x' (ID: 17295)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6931581497192383
    2. '[x' → logprob: -0.6931581497192383
    3. ' x' → logprob: -12.068158149719238
    4. '[' → logprob: -12.443158149719238
    5. '```' → logprob: -14.068158149719238
    6. '	x' → logprob: -15.693158149719238
    7. '{x' → logprob: -16.068157196044922
    8. '[
' → logprob: -16.693157196044922
    9. ')x' → logprob: -16.943157196044922
    10. '(x' → logprob: -17.943157196044922

Token 197: ']
' (ID: 1592)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.007713100872933865
    2. ']' → logprob: -5.882713317871094
    3. '])' → logprob: -6.382713317871094
    4. '[' → logprob: -6.507713317871094
    5. 'x' → logprob: -6.632713317871094
    6. ')' → logprob: -7.882713317871094
    7. 'sp' → logprob: -12.632713317871094
    8. '[f' → logprob: -12.632713317871094
    9. '[
' → logprob: -13.382713317871094
    10. '[i' → logprob: -13.507713317871094

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06470390409231186
    2. ' ' → logprob: -3.689703941345215
    3. ' return' → logprob: -4.064703941345215
    4. ' 
' → logprob: -4.564703941345215
    5. ')' → logprob: -6.064703941345215
    6. 'return' → logprob: -6.189703941345215
    7. '    
' → logprob: -6.314703941345215
    8. '<|end|>' → logprob: -6.939703941345215
    9. '  ' → logprob: -7.314703941345215
    10. '  
' → logprob: -7.814703941345215

Token 199: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6101948618888855
    2. 'return' (adapté à ' return') → logprob: -0.8601948618888855
    3. '   ' → logprob: -3.4851949214935303
    4. ' ' → logprob: -6.235194683074951
    5. ' 
' → logprob: -7.610194683074951
    6. ':return' → logprob: -8.48519515991211
    7. '	return' → logprob: -8.73519515991211
    8. ')' → logprob: -9.86019515991211
    9. '```' → logprob: -10.36019515991211
    10. '    
' → logprob: -10.48519515991211

Token 200: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.014169150963425636
    2. ' factors' → logprob: -4.264169216156006
    3. 'factor' → logprob: -12.514168739318848
    4. 'fac' → logprob: -13.764168739318848
    5. 'fact' → logprob: -14.639168739318848
    6. ' f' → logprob: -15.139168739318848
    7. 'facts' → logprob: -15.889168739318848
    8. ' factores' → logprob: -17.639169692993164
    9. '	f' → logprob: -17.889169692993164
    10. 'list' → logprob: -18.264169692993164

Token 201: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3683928847312927
    2. 'color' → logprob: -1.8683929443359375
    3. 'colors' → logprob: -3.4933929443359375
    4. 'max' → logprob: -4.2433929443359375
    5. 'used' → logprob: -4.4933929443359375
    6. 'graph' → logprob: -4.7433929443359375
    7. 'DP' → logprob: -4.8683929443359375
    8. 'def' → logprob: -4.9933929443359375
    9. 'count' → logprob: -4.9933929443359375
    10. 'visited' → logprob: -5.1183929443359375

Token 202: 'parent' (ID: 4903)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.43612104654312134
    2. 'color' → logprob: -1.8111209869384766
    3. 'colors' → logprob: -3.0611209869384766
    4. 'visited' → logprob: -4.186120986938477
    5. 'ans' → logprob: -4.311120986938477
    6. 'max' → logprob: -4.436120986938477
    7. 'used' → logprob: -4.561120986938477
    8. 'graph' → logprob: -4.561120986938477
    9. 'DP' → logprob: -4.686120986938477
    10. 'parent' → logprob: -4.686120986938477

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5334365367889404
    2. '=' → logprob: -0.9084365367889404
    3. '[' → logprob: -4.7834367752075195
    4. '_' → logprob: -6.9084367752075195
    5. ']' → logprob: -8.53343677520752
    6. ')' → logprob: -8.78343677520752
    7. '[parent' → logprob: -8.78343677520752
    8. 's' → logprob: -9.28343677520752
    9. '_parent' → logprob: -9.78343677520752
    10. '=[' → logprob: -9.90843677520752

Token 204: ' [' (ID: 723)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.26612141728401184
    2. '[' → logprob: -2.2661213874816895
    3. '[list' → logprob: -2.2661213874816895
    4. '{}' → logprob: -4.3911213874816895
    5. 'list' → logprob: -5.2661213874816895
    6. ' [' → logprob: -5.3911213874816895
    7. ' [-' → logprob: -5.7661213874816895
    8. '[i' → logprob: -8.266121864318848
    9. '{' → logprob: -8.391121864318848
    10. '[N' → logprob: -8.891121864318848

Token 205: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0020581886637955904
    2. '-' → logprob: -6.252058029174805
    3. '-i' → logprob: -9.252058029174805
    4. ' -' → logprob: -10.502058029174805
    5. ' i' → logprob: -12.252058029174805
    6. ']' → logprob: -15.002058029174805
    7. '
' → logprob: -15.002058029174805
    8. 'None' → logprob: -15.252058029174805
    9. '0' → logprob: -15.627058029174805
    10. '_i' → logprob: -15.877058029174805

Token 206: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3132835030555725
    2. 'for' → logprob: -1.3132834434509277
    3. ' ' → logprob: -11.563283920288086
    4. '	for' → logprob: -11.938283920288086
    5. '   ' → logprob: -12.313283920288086
    6. ']' → logprob: -15.188283920288086
    7. '  ' → logprob: -15.438283920288086
    8. '    ' → logprob: -15.813283920288086
    9. '+' → logprob: -15.813283920288086
    10. '
' → logprob: -16.313283920288086

Token 207: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.030082643032073975
    2. ' range' → logprob: -3.5300827026367188
    3. 'i' → logprob: -8.030082702636719
    4. ' i' → logprob: -12.280082702636719
    5. ' ' → logprob: -13.780082702636719
    6. 'in' → logprob: -15.155082702636719
    7. '(range' → logprob: -15.530082702636719
    8. '  ' → logprob: -15.655082702636719
    9. ' in' → logprob: -16.03008270263672
    10. '   ' → logprob: -17.03008270263672

Token 208: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3879312574863434
    2. 'in' → logprob: -1.137931227684021
    3. 'range' → logprob: -7.3879313468933105
    4. ' range' → logprob: -8.012930870056152
    5. ' ' → logprob: -9.387930870056152
    6. '  ' → logprob: -11.387930870056152
    7. 'n' → logprob: -11.887930870056152
    8. '   ' → logprob: -12.387930870056152
    9. ',' → logprob: -14.012930870056152
    10. 'i' → logprob: -14.262930870056152

Token 209: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001170225441455841
    2. ' range' → logprob: -6.7511701583862305
    3. '(range' → logprob: -19.251171112060547
    4. '	range' → logprob: -20.251171112060547
    5. ' ' → logprob: -20.376171112060547
    6. '  ' → logprob: -21.626171112060547
    7. '   ' → logprob: -22.251171112060547
    8. 'rang' → logprob: -23.126171112060547
    9. 'r' → logprob: -23.251171112060547
    10. '
' → logprob: -24.001171112060547

Token 210: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.028202662244439125
    2. '(MAX' → logprob: -3.903202772140503
    3. 'N' → logprob: -4.903202533721924
    4. '(' → logprob: -8.903203010559082
    5. 'MAX' → logprob: -9.903203010559082
    6. ' N' → logprob: -11.903203010559082
    7. '(n' → logprob: -12.278203010559082
    8. '(len' → logprob: -12.403203010559082
    9. ' (' → logprob: -13.653203010559082
    10. '((' → logprob: -13.778203010559082

Token 211: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00014847563579678535
    2. '+' → logprob: -9.25014877319336
    3. ')]
' → logprob: -10.12514877319336
    4. ' )' → logprob: -12.00014877319336
    5. ')' → logprob: -12.37514877319336
    6. ')]

' → logprob: -14.75014877319336
    7. ']' → logprob: -15.00014877319336
    8. ')])' → logprob: -15.12514877319336
    9. '])]' → logprob: -16.00014877319336
    10. ' +' → logprob: -16.12514877319336

Token 212: 'rank' (ID: 30162)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5785564184188843
    2. 'rank' → logprob: -0.8285564184188843
    3. 'size' → logprob: -5.953556537628174
    4. ' rank' → logprob: -11.703556060791016
    5. ' def' → logprob: -12.578556060791016
    6. '_rank' → logprob: -13.578556060791016
    7. '
' → logprob: -13.703556060791016
    8. 'parent' → logprob: -14.078556060791016
    9. ' size' → logprob: -14.828556060791016
    10. '.rank' → logprob: -14.953556060791016

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026678074151277542
    2. '=' → logprob: -3.6516780853271484
    3. '[' → logprob: -8.526678085327148
    4. '   ' → logprob: -9.526678085327148
    5. 's' → logprob: -10.651678085327148
    6. ' ' → logprob: -10.651678085327148
    7. ' =[' → logprob: -10.776678085327148
    8. '=[' → logprob: -11.026678085327148
    9. '_' → logprob: -11.776678085327148
    10. '	' → logprob: -12.401678085327148

Token 214: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005541055579669774
    2. ' [' → logprob: -7.750554084777832
    3. '[N' → logprob: -9.000554084777832
    4. '[n' → logprob: -16.75055503845215
    5. '0' → logprob: -17.62555503845215
    6. '[i' → logprob: -17.87555503845215
    7. '   ' → logprob: -19.37555503845215
    8. ' ' → logprob: -19.87555503845215
    9. '[I' → logprob: -21.62555503845215
    10. 'N' → logprob: -21.62555503845215

Token 215: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -14.750000953674316
    3. ' ' → logprob: -16.75
    4. '０' → logprob: -21.75
    5. '۰' → logprob: -22.875
    6. '   ' → logprob: -23.0
    7. '
' → logprob: -23.25
    8. '```' → logprob: -23.625
    9. '3' → logprob: -24.625
    10. '  ' → logprob: -25.5

Token 216: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005626800935715437
    2. ' ]' → logprob: -5.755626678466797
    3. ' for' → logprob: -6.130626678466797
    4. ']*' → logprob: -8.505626678466797
    5. ')' → logprob: -10.380626678466797
    6. 'for' → logprob: -11.005626678466797
    7. '   ' → logprob: -11.630626678466797
    8. ' ' → logprob: -12.130626678466797
    9. ']*(' → logprob: -13.380626678466797
    10. ')]' → logprob: -13.630626678466797

Token 217: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.228561349213123e-05
    2. '(N' → logprob: -9.875052452087402
    3. ' N' → logprob: -14.375052452087402
    4. '(' → logprob: -15.250052452087402
    5. ' (' → logprob: -19.625051498413086
    6. '	N' → logprob: -20.000051498413086
    7. 'n' → logprob: -20.625051498413086
    8. '```' → logprob: -21.250051498413086
    9. '_N' → logprob: -21.750051498413086
    10. ',N' → logprob: -21.875051498413086

Token 218: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5762339234352112
    2. '
' → logprob: -0.8262339234352112
    3. '
' → logprob: -9.451233863830566
    4. '

' → logprob: -9.701233863830566
    5. ' def' → logprob: -10.076233863830566
    6. '```' → logprob: -10.201233863830566
    7. ' 
' → logprob: -10.451233863830566
    8. '  
' → logprob: -10.826233863830566
    9. '\' → logprob: -11.076233863830566
    10. '\n' → logprob: -12.451233863830566

Token 219: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00027897433028556406
    2. ' def' → logprob: -8.375279426574707
    3. '
' → logprob: -10.250279426574707
    4. ' 
' → logprob: -11.375279426574707
    5. 'd' → logprob: -14.000279426574707
    6. '  
' → logprob: -15.375279426574707
    7. '\' → logprob: -15.375279426574707
    8. '

' → logprob: -16.87527847290039
    9. '```' → logprob: -17.00027847290039
    10. 'de' → logprob: -17.25027847290039

Token 220: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.0008479830576106906
    2. 'find' → logprob: -7.250847816467285
    3. ' union' → logprob: -9.000847816467285
    4. '_find' → logprob: -11.250847816467285
    5. 'union' → logprob: -13.875847816467285
    6. ' ' → logprob: -15.000847816467285
    7. '	find' → logprob: -15.750847816467285
    8. '_union' → logprob: -15.875847816467285
    9. '_' → logprob: -16.6258487701416
    10. ' unite' → logprob: -17.0008487701416

Token 221: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4598301947116852
    2. '(parent' → logprob: -1.2098301649093628
    3. '_parent' → logprob: -3.0848302841186523
    4. '(i' → logprob: -3.9598302841186523
    5. '(x' → logprob: -5.834830284118652
    6. 'parent' → logprob: -6.584830284118652
    7. '(u' → logprob: -7.709830284118652
    8. '(a' → logprob: -8.209830284118652
    9. ' (' → logprob: -8.584830284118652
    10. '(p' → logprob: -8.709830284118652

Token 222: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00035048185964114964
    2. '):
' → logprob: -8.500350952148438
    3. ')' → logprob: -8.875350952148438
    4. ' ):' → logprob: -12.000350952148438
    5. '):
' → logprob: -14.250350952148438
    6. '):

' → logprob: -15.250350952148438
    7. ':' → logprob: -17.500350952148438
    8. ' )' → logprob: -18.125350952148438
    9. ')：' → logprob: -18.375350952148438
    10. ']:' → logprob: -18.500350952148438

Token 223: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6008511781692505
    2. ' 
' → logprob: -2.100851058959961
    3. ' while' → logprob: -2.225851058959961
    4. '   ' → logprob: -2.475851058959961
    5. 'if' → logprob: -2.600851058959961
    6. ' x' → logprob: -3.725851058959961
    7. '
' → logprob: -4.475851058959961
    8. 'x' → logprob: -5.225851058959961
    9. 'while' → logprob: -5.350851058959961
    10. ' ' → logprob: -5.600851058959961

Token 224: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.033807750791311264
    2. ' if' → logprob: -3.5338077545166016
    3. 'parent' → logprob: -5.533807754516602
    4. ' parent' → logprob: -9.283807754516602
    5. 'x' → logprob: -13.158807754516602
    6. '
' → logprob: -14.033807754516602
    7. '   ' → logprob: -14.283807754516602
    8. '0' → logprob: -14.658807754516602
    9. 'return' → logprob: -14.783807754516602
    10. 'while' (adapté à ' while') → logprob: -14.783807754516602

Token 225: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0003377270477358252
    2. ' parent' → logprob: -8.000337600708008
    3. 'x' → logprob: -13.000337600708008
    4. '(parent' → logprob: -18.250337600708008
    5. '	parent' → logprob: -19.375337600708008
    6. ' x' → logprob: -19.500337600708008
    7. 'paren' → logprob: -22.625337600708008
    8. '_parent' → logprob: -23.000337600708008
    9. 'par' → logprob: -23.125337600708008
    10. 'Parent' → logprob: -23.375337600708008

Token 226: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.3902033970225602e-05
    2. '[parent' → logprob: -11.375014305114746
    3. 'x' → logprob: -13.500014305114746
    4. '[' → logprob: -13.875014305114746
    5. '[i' → logprob: -17.25001335144043
    6. '[
' → logprob: -17.62501335144043
    7. ' [' → logprob: -17.75001335144043
    8. ' x' → logprob: -18.37501335144043
    9. '```' → logprob: -18.75001335144043
    10. '[user' → logprob: -19.50001335144043

Token 227: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.049180977046489716
    2. ']!=' → logprob: -3.6741809844970703
    3. '!=' → logprob: -3.7991809844970703
    4. ' !=' → logprob: -8.54918098449707
    5. 'x' → logprob: -10.67418098449707
    6. '[' → logprob: -12.42418098449707
    7. ')!=' → logprob: -12.54918098449707
    8. '[x' → logprob: -13.17418098449707
    9. '```' → logprob: -13.29918098449707
    10. ' ]' → logprob: -13.92418098449707

Token 228: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0004460428317543119
    2. ' !=' → logprob: -7.75044584274292
    3. ']!=' → logprob: -11.500446319580078
    4. '=' → logprob: -13.125446319580078
    5. ')!=' → logprob: -13.125446319580078
    6. '()!=' → logprob: -14.000446319580078
    7. '!==' → logprob: -15.250446319580078
    8. '!=(' → logprob: -16.750446319580078
    9. '!='' → logprob: -17.125446319580078
    10. '```' → logprob: -17.125446319580078

Token 229: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.339278580620885e-06
    2. ' x' → logprob: -13.000001907348633
    3. '	x' → logprob: -21.250001907348633
    4. 'parent' → logprob: -22.625001907348633
    5. ')x' → logprob: -23.625001907348633
    6. '"x' → logprob: -24.750001907348633
    7. '   ' → logprob: -25.125001907348633
    8. '{x' → logprob: -25.625001907348633
    9. '```' → logprob: -25.750001907348633
    10. '
' → logprob: -25.875001907348633

Token 230: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07001412659883499
    2. ':' → logprob: -2.695014238357544
    3. '):
' → logprob: -10.070013999938965
    4. '   ' → logprob: -11.070013999938965
    5. ' :
' → logprob: -12.070013999938965
    6. ',' → logprob: -12.820013999938965
    7. '=' → logprob: -13.320013999938965
    8. ' and' → logprob: -13.445013999938965
    9. ':x' → logprob: -13.445013999938965
    10. '       ' → logprob: -13.570013999938965

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09700465202331543
    2. ' parent' → logprob: -2.8470046520233154
    3. 'parent' → logprob: -4.4720048904418945
    4. '   ' → logprob: -4.7220048904418945
    5. '
' → logprob: -5.2220048904418945
    6. 'x' → logprob: -5.7220048904418945
    7. ' x' → logprob: -6.0970048904418945
    8. ' 
' → logprob: -6.8470048904418945
    9. '	parent' → logprob: -6.9720048904418945
    10. '```' → logprob: -7.9720048904418945

Token 232: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.014177384786307812
    2. ' parent' → logprob: -4.264177322387695
    3. '   ' → logprob: -11.764177322387695
    4. '	parent' → logprob: -12.139177322387695
    5. 'x' → logprob: -14.639177322387695
    6. '.parent' → logprob: -17.014177322387695
    7. '       ' → logprob: -17.264177322387695
    8. '[parent' → logprob: -17.639177322387695
    9. '(parent' → logprob: -17.889177322387695
    10. '_parent' → logprob: -17.889177322387695

Token 233: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0013357169227674603
    2. 'x' → logprob: -6.626335620880127
    3. '[parent' → logprob: -12.501336097717285
    4. '[' → logprob: -13.251336097717285
    5. '=' → logprob: -13.751336097717285
    6. ' x' → logprob: -13.876336097717285
    7. '[
' → logprob: -14.501336097717285
    8. '```' → logprob: -14.751336097717285
    9. '	x' → logprob: -14.876336097717285
    10. ' =' → logprob: -15.126336097717285

Token 234: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015593778807669878
    2. ']=' → logprob: -7.001559257507324
    3. '=' → logprob: -7.376559257507324
    4. ' ]' → logprob: -10.876559257507324
    5. ' =' → logprob: -12.876559257507324
    6. '[' → logprob: -15.501559257507324
    7. ')' → logprob: -16.37656021118164
    8. 'parent' → logprob: -16.62656021118164
    9. '   ' → logprob: -16.87656021118164
    10. '[parent' → logprob: -17.75156021118164

Token 235: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. '＝' → logprob: -17.811967849731445
    4. '=
' → logprob: -18.186967849731445
    5. '=

' → logprob: -18.311967849731445
    6. ' ' → logprob: -18.436967849731445
    7. 'parent' → logprob: -18.936967849731445
    8. '=x' → logprob: -19.061967849731445
    9. ',' → logprob: -19.311967849731445
    10. '.=' → logprob: -19.936967849731445

Token 236: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0001234428636962548
    2. ' parent' → logprob: -9.000123023986816
    3. '	parent' → logprob: -19.750123977661133
    4. '(parent' → logprob: -20.125123977661133
    5. '[parent' → logprob: -21.750123977661133
    6. '.parent' → logprob: -23.250123977661133
    7. ',parent' → logprob: -23.375123977661133
    8. 'paren' → logprob: -24.500123977661133
    9. '_parent' → logprob: -24.750123977661133
    10. ' ' → logprob: -24.875123977661133

Token 237: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -2.339278580620885e-06
    2. 'parent' → logprob: -13.125001907348633
    3. '[' → logprob: -15.375001907348633
    4. '[x' → logprob: -17.625001907348633
    5. '(parent' → logprob: -17.875001907348633
    6. '	parent' → logprob: -18.375001907348633
    7. '```' → logprob: -19.000001907348633
    8. '[player' → logprob: -19.125001907348633
    9. '[
' → logprob: -19.750001907348633
    10. ' parent' → logprob: -20.000001907348633

Token 238: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0006291598547250032
    2. 'x' → logprob: -7.37562894821167
    3. '[parent' → logprob: -13.625629425048828
    4. ' x' → logprob: -14.125629425048828
    5. '[' → logprob: -15.250629425048828
    6. '[
' → logprob: -16.000629425048828
    7. '```' → logprob: -16.375629425048828
    8. '{x' → logprob: -16.625629425048828
    9. '	x' → logprob: -16.750629425048828
    10. '(x' → logprob: -17.375629425048828

Token 239: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.3978283107280731
    2. '[x' → logprob: -1.1478283405303955
    3. 'x' → logprob: -4.522828102111816
    4. ']' → logprob: -11.522828102111816
    5. ']]
' → logprob: -11.522828102111816
    6. ' ]]' → logprob: -12.522828102111816
    7. '(x' → logprob: -12.647828102111816
    8. '[' → logprob: -12.647828102111816
    9. '```' → logprob: -12.772828102111816
    10. ']]

' → logprob: -13.272828102111816

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023774005472660065
    2. 'x' → logprob: -3.8987739086151123
    3. ' x' → logprob: -6.023774147033691
    4. '   ' → logprob: -7.148774147033691
    5. '	x' → logprob: -11.398774147033691
    6. '	' → logprob: -13.023774147033691
    7. ',' → logprob: -13.773774147033691
    8. '           ' → logprob: -13.898774147033691
    9. ',x' → logprob: -14.523774147033691
    10. '<|end|>' → logprob: -14.523774147033691

Token 241: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -2.5776860184123507e-06
    2. ' x' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.000001907348633
    4. '       ' → logprob: -20.000001907348633
    5. '	x' → logprob: -20.125001907348633
    6. '```' → logprob: -23.250001907348633
    7. 'return' → logprob: -24.500001907348633
    8. '    ' → logprob: -25.000001907348633
    9. '           ' → logprob: -25.125001907348633
    10. '     ' → logprob: -25.250001907348633

Token 242: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380416102707386
    2. ' =' → logprob: -3.288041591644287
    3. ' ' → logprob: -16.663042068481445
    4. ',' → logprob: -16.913042068481445
    5. '.=' → logprob: -16.913042068481445
    6. '=

' → logprob: -17.663042068481445
    7. '＝' → logprob: -18.163042068481445
    8. ')' → logprob: -18.663042068481445
    9. '=
' → logprob: -18.663042068481445
    10. '=}' → logprob: -19.038042068481445

Token 243: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.005233882926404476
    2. ' parent' → logprob: -5.2552337646484375
    3. '	parent' → logprob: -17.130233764648438
    4. '(parent' → logprob: -17.255233764648438
    5. '[parent' → logprob: -18.380233764648438
    6. '   ' → logprob: -19.880233764648438
    7. '_parent' → logprob: -20.505233764648438
    8. '.parent' → logprob: -20.505233764648438
    9. ' ' → logprob: -21.130233764648438
    10. 'Parent' → logprob: -21.380233764648438

Token 244: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.1041145626222715e-05
    2. 'x' → logprob: -11.750011444091797
    3. '[parent' → logprob: -12.750011444091797
    4. '[' → logprob: -15.625011444091797
    5. '[
' → logprob: -17.500011444091797
    6. ' x' → logprob: -18.000011444091797
    7. 'parent' → logprob: -18.000011444091797
    8. '```' → logprob: -18.125011444091797
    9. '{x' → logprob: -18.375011444091797
    10. '(x' → logprob: -19.125011444091797

Token 245: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.363617962459102e-05
    2. ' ]' → logprob: -9.750083923339844
    3. ')' → logprob: -11.375083923339844
    4. ']
' → logprob: -11.500083923339844
    5. ')]' → logprob: -14.125083923339844
    6. 'parent' → logprob: -14.250083923339844
    7. '<|end|>' → logprob: -14.375083923339844
    8. 'return' → logprob: -14.625083923339844
    9. 'x' → logprob: -15.625083923339844
    10. '[' → logprob: -15.625083923339844

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0705077275633812
    2. 'return' → logprob: -2.820507764816284
    3. '	return' → logprob: -5.695507526397705
    4. ' return' → logprob: -5.820507526397705
    5. 'x' → logprob: -6.820507526397705
    6. '
' → logprob: -7.195507526397705
    7. ' ' → logprob: -9.320508003234863
    8. '  
' → logprob: -9.945508003234863
    9. '[' → logprob: -10.320508003234863
    10. '    
' → logprob: -10.320508003234863

Token 247: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.059425678104162216
    2. '   ' → logprob: -3.5594255924224854
    3. ' return' → logprob: -3.5594255924224854
    4. '	return' → logprob: -7.1844258308410645
    5. ' ' → logprob: -11.684425354003906
    6. 'x' → logprob: -11.809425354003906
    7. ':return' → logprob: -12.934425354003906
    8. ' 
' → logprob: -13.684425354003906
    9. 'eturn' → logprob: -13.809425354003906
    10. '
' → logprob: -13.934425354003906

Token 248: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07894718647003174
    2. ' x' → logprob: -2.578947067260742
    3. 'parent' → logprob: -10.078947067260742
    4. ' parent' → logprob: -11.078947067260742
    5. ' ' → logprob: -18.703947067260742
    6. '	x' → logprob: -18.828947067260742
    7. '(x' → logprob: -19.453947067260742
    8. ' ' → logprob: -19.953947067260742
    9. '_parent' → logprob: -21.203947067260742
    10. '(parent' → logprob: -21.203947067260742

Token 249: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23369990289211273
    2. '
' → logprob: -1.858699917793274
    3. '<|end|>' → logprob: -2.9836997985839844
    4. '```' → logprob: -7.733699798583984
    5. '

' → logprob: -7.858699798583984
    6. ' def' → logprob: -8.108699798583984
    7. ' 
' → logprob: -8.358699798583984
    8. ')' → logprob: -8.358699798583984
    9. '    
' → logprob: -9.108699798583984
    10. '<|end|>' → logprob: -9.733699798583984

Token 250: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.975612187583465e-05
    2. '
' → logprob: -11.125029563903809
    3. ' def' → logprob: -11.250029563903809
    4. '```' → logprob: -14.000029563903809
    5. ' 
' → logprob: -14.250029563903809
    6. 'd' → logprob: -15.750029563903809
    7. '  
' → logprob: -16.250030517578125
    8. '_' → logprob: -16.875030517578125
    9. '

' → logprob: -17.000030517578125
    10. ')' → logprob: -17.375030517578125

Token 251: ' union' (ID: 22208)
  Prédit: ' union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.5763682723045349
    2. 'union' → logprob: -0.8263682723045349
    3. ' unite' → logprob: -7.82636833190918
    4. 'un' → logprob: -11.20136833190918
    5. '_union' → logprob: -11.20136833190918
    6. 'Union' → logprob: -13.45136833190918
    7. '	union' → logprob: -14.82636833190918
    8. 'merge' → logprob: -16.07636833190918
    9. '.union' → logprob: -16.07636833190918
    10. ' ' → logprob: -16.32636833190918

Token 252: '(a' (ID: 6271)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.445357084274292
    2. '(' → logprob: -1.195357084274292
    3. '(a' → logprob: -3.195357084274292
    4. '(parent' → logprob: -4.195357322692871
    5. ' (' → logprob: -7.820357322692871
    6. '(u' → logprob: -7.945357322692871
    7. '(
' → logprob: -11.320357322692871
    8. '(i' → logprob: -11.820357322692871
    9. '(rank' → logprob: -12.070357322692871
    10. '(p' → logprob: -12.945357322692871

Token 253: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00795958936214447
    2. ' ,' → logprob: -4.882959365844727
    3. ',b' → logprob: -8.132959365844727
    4. ',a' → logprob: -10.257959365844727
    5. 'a' → logprob: -11.757959365844727
    6. '_,' → logprob: -11.882959365844727
    7. ')' → logprob: -12.382959365844727
    8. ',x' → logprob: -13.632959365844727
    9. '[' → logprob: -14.132959365844727
    10. 'b' → logprob: -14.382959365844727

Token 254: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02990877255797386
    2. '):
' → logprob: -3.5299086570739746
    3. ')' → logprob: -8.779909133911133
    4. '):
' → logprob: -12.904909133911133
    5. ' ):' → logprob: -13.654909133911133
    6. '):

' → logprob: -14.654909133911133
    7. ':' → logprob: -15.279909133911133
    8. '   ' → logprob: -16.529909133911133
    9. ' ):
' → logprob: -17.654909133911133
    10. ')：' → logprob: -17.904909133911133

Token 255: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20493268966674805
    2. 'a' → logprob: -1.829932689666748
    3. ' root' → logprob: -3.829932689666748
    4. '   ' → logprob: -5.829932689666748
    5. ' pa' → logprob: -9.329933166503906
    6. 'root' → logprob: -10.329933166503906
    7. '	a' → logprob: -10.329933166503906
    8. ' ra' → logprob: -10.704933166503906
    9. 'pa' → logprob: -10.829933166503906
    10. '```' → logprob: -12.579933166503906

Token 256: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.003343944437801838
    2. ' a' → logprob: -5.7533440589904785
    3. 'root' → logprob: -9.50334358215332
    4. 'pa' → logprob: -10.00334358215332
    5. ' root' → logprob: -10.12834358215332
    6. 'ra' → logprob: -12.25334358215332
    7. ' pa' → logprob: -14.50334358215332
    8. ' ra' → logprob: -15.25334358215332
    9. '	a' → logprob: -15.37834358215332
    10. '```' → logprob: -15.50334358215332

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21981117129325867
    2. '=' → logprob: -1.719811201095581
    3. '=find' → logprob: -4.594810962677002
    4. '_parent' → logprob: -5.469810962677002
    5. '_root' → logprob: -6.094810962677002
    6. ',' → logprob: -7.094810962677002
    7. '_' → logprob: -7.844810962677002
    8. '_find' → logprob: -8.96981143951416
    9. ' ' → logprob: -9.21981143951416
    10. 'root' → logprob: -10.09481143951416

Token 258: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.005233882926404476
    2. ' find' → logprob: -5.2552337646484375
    3. 'a' → logprob: -16.880233764648438
    4. '(find' → logprob: -18.755233764648438
    5. '=find' → logprob: -20.005233764648438
    6. '	find' → logprob: -20.005233764648438
    7. ' a' → logprob: -20.255233764648438
    8. ')find' → logprob: -21.755233764648438
    9. '.find' → logprob: -22.755233764648438
    10. 'f' → logprob: -23.505233764648438

Token 259: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.0280383548888494e-06
    2. 'a' → logprob: -14.250000953674316
    3. '(' → logprob: -14.875000953674316
    4. ' (' → logprob: -19.500001907348633
    5. '(
' → logprob: -19.500001907348633
    6. '(A' → logprob: -20.500001907348633
    7. ')' → logprob: -20.875001907348633
    8. '(b' → logprob: -21.125001907348633
    9. '```' → logprob: -21.375001907348633
    10. '[a' → logprob: -21.500001907348633

Token 260: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0015043864259496331
    2. ')' → logprob: -6.501504421234131
    3. ')
' → logprob: -13.626503944396973
    4. ' )
' → logprob: -14.251503944396973
    5. ')a' → logprob: -16.25150489807129
    6. ')

' → logprob: -17.25150489807129
    7. ')b' → logprob: -17.50150489807129
    8. 'a' → logprob: -18.37650489807129
    9. '
' → logprob: -18.50150489807129
    10. ' ' → logprob: -20.25150489807129

Token 261: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.010902086272835732
    2. ' b' → logprob: -5.010901927947998
    3. '   ' → logprob: -7.135901927947998
    4. '
' → logprob: -7.135901927947998
    5. ' if' → logprob: -7.385901927947998
    6. 'if' → logprob: -7.635901927947998
    7. 'a' → logprob: -8.135902404785156
    8. ',b' → logprob: -8.135902404785156
    9. ',' → logprob: -8.260902404785156
    10. ' 
' → logprob: -9.010902404785156

Token 262: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.00012368128227535635
    2. ' b' → logprob: -9.000123977661133
    3. 'find' → logprob: -15.500123977661133
    4. ' find' → logprob: -18.750123977661133
    5. '
' → logprob: -21.875123977661133
    6. '	b' → logprob: -22.000123977661133
    7. '   ' → logprob: -22.875123977661133
    8. '  ' → logprob: -23.625123977661133
    9. ' 
' → logprob: -24.125123977661133
    10. ',b' → logprob: -24.125123977661133

Token 263: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10101332515478134
    2. ' =' → logprob: -2.351013422012329
    3. '<|end|>' → logprob: -8.10101318359375
    4. ')' → logprob: -8.60101318359375
    5. 'a' → logprob: -9.35101318359375
    6. '==' → logprob: -9.60101318359375
    7. '(a' → logprob: -10.22601318359375
    8. '=b' → logprob: -10.60101318359375
    9. 'b' → logprob: -10.72601318359375
    10. ' ==' → logprob: -11.10101318359375

Token 264: ' find' (ID: 1646)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005404626950621605
    2. 'find' → logprob: -5.255404472351074
    3. ' find' → logprob: -9.255404472351074
    4. ' b' → logprob: -9.505404472351074
    5. '(find' → logprob: -14.130404472351074
    6. '(b' → logprob: -16.38040542602539
    7. '=find' → logprob: -19.00540542602539
    8. '	find' → logprob: -19.13040542602539
    9. '.find' → logprob: -19.63040542602539
    10. ')b' → logprob: -20.13040542602539

Token 265: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -2.9160102712921798e-05
    2. 'b' → logprob: -10.500029563903809
    3. '(a' → logprob: -13.750029563903809
    4. '[b' → logprob: -15.625029563903809
    5. '(' → logprob: -15.750029563903809
    6. ' (' → logprob: -16.750028610229492
    7. ')b' → logprob: -17.750028610229492
    8. ' b' → logprob: -18.125028610229492
    9. 'a' → logprob: -18.125028610229492
    10. ')' → logprob: -18.625028610229492

Token 266: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01816398836672306
    2. ')
' → logprob: -4.018164157867432
    3. '   ' → logprob: -11.893163681030273
    4. ')a' → logprob: -13.143163681030273
    5. ')
' → logprob: -13.518163681030273
    6. ' )' → logprob: -13.643163681030273
    7. '):
' → logprob: -14.393163681030273
    8. 'a' → logprob: -14.518163681030273
    9. 'def' → logprob: -15.143163681030273
    10. 'if' → logprob: -15.393163681030273

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4401170611381531
    2. ' if' → logprob: -1.4401171207427979
    3. '
' → logprob: -2.815117120742798
    4. '<|end|>' → logprob: -3.815117120742798
    5. 'if' → logprob: -4.315116882324219
    6. '	if' → logprob: -4.815116882324219
    7. '    
' → logprob: -5.190116882324219
    8. ' 
' → logprob: -5.565116882324219
    9. '  
' → logprob: -5.815116882324219
    10. ':
' → logprob: -7.315116882324219

Token 268: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -2.2127087504486553e-05
    2. ' if' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.375021934509277
    4. '
' → logprob: -16.875022888183594
    5. 'If' → logprob: -18.250022888183594
    6. '	if' → logprob: -18.375022888183594
    7. '```' → logprob: -18.625022888183594
    8. '    
' → logprob: -19.250022888183594
    9. 'return' → logprob: -20.375022888183594
    10. ' 
' → logprob: -21.000022888183594

Token 269: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20141352713108063
    2. ' a' → logprob: -1.7014135122299194
    3. '	a' → logprob: -16.326414108276367
    4. '(a' → logprob: -16.826414108276367
    5. ' ' → logprob: -17.076414108276367
    6. '   ' → logprob: -17.826414108276367
    7. 'rank' → logprob: -19.826414108276367
    8. ' ' → logprob: -20.451414108276367
    9. ')a' → logprob: -21.201414108276367
    10. '  ' → logprob: -21.326414108276367

Token 270: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.48178690671920776
    2. '==' → logprob: -1.1067869663238525
    3. ' !=' → logprob: -3.3567869663238525
    4. ' ==' → logprob: -4.106786727905273
    5. '=' → logprob: -7.981786727905273
    6. '[' → logprob: -11.856786727905273
    7. '<|end|>' → logprob: -11.856786727905273
    8. ']!=' → logprob: -11.981786727905273
    9. '!==' → logprob: -12.481786727905273
    10. ' ' → logprob: -12.731786727905273

Token 271: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.7610454708337784e-05
    2. ' b' → logprob: -10.500027656555176
    3. '	b' → logprob: -20.62502670288086
    4. ')b' → logprob: -21.62502670288086
    5. '>b' → logprob: -21.87502670288086
    6. '=b' → logprob: -23.00002670288086
    7. ' б' → logprob: -23.62502670288086
    8. '_b' → logprob: -23.75002670288086
    9. '   ' → logprob: -24.25002670288086
    10. '(b' → logprob: -24.37502670288086

Token 272: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03837159648537636
    2. ':return' → logprob: -3.2883715629577637
    3. ':
' → logprob: -8.288372039794922
    4. ' :' → logprob: -10.163372039794922
    5. 'return' → logprob: -10.538372039794922
    6. ' return' → logprob: -11.788372039794922
    7. '   ' → logprob: -12.663372039794922
    8. ' ' → logprob: -14.663372039794922
    9. ')' → logprob: -14.663372039794922
    10. '	return' → logprob: -14.913372039794922

Token 273: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0445582866668701
    2. 'return' → logprob: -1.0445582866668701
    3. ' return' → logprob: -1.2945582866668701
    4. '       ' → logprob: -3.91955828666687
    5. '	return' → logprob: -6.294558525085449
    6. ':return' → logprob: -8.16955852508545
    7. '
' → logprob: -9.16955852508545
    8. '           ' → logprob: -9.54455852508545
    9. '    ' → logprob: -10.04455852508545
    10. '     ' → logprob: -10.79455852508545

Token 274: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007560486905276775
    2. ' return' → logprob: -5.0075602531433105
    3. '   ' → logprob: -7.2575602531433105
    4. '
' → logprob: -9.507560729980469
    5. '       ' → logprob: -9.882560729980469
    6. '	return' → logprob: -11.507560729980469
    7. '```' → logprob: -13.507560729980469
    8. ':return' → logprob: -13.507560729980469
    9. '           ' → logprob: -14.132560729980469
    10. '    
' → logprob: -14.632560729980469

Token 275: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.41413843631744385
    2. '   ' → logprob: -1.1641384363174438
    3. 'if' → logprob: -3.7891383171081543
    4. ' 
' → logprob: -6.539138317108154
    5. '
' → logprob: -7.039138317108154
    6. '    
' → logprob: -7.414138317108154
    7. ' a' → logprob: -7.914138317108154
    8. ' ' → logprob: -7.914138317108154
    9. '	if' → logprob: -8.039138793945312
    10. 'a' → logprob: -9.039138793945312

Token 276: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3739003539085388
    2. '   ' → logprob: -1.9989004135131836
    3. ' 
' → logprob: -1.9989004135131836
    4. '    
' → logprob: -3.8739004135131836
    5. '<|end|>' → logprob: -4.873900413513184
    6. '  
' → logprob: -4.998900413513184
    7. '   
' → logprob: -5.998900413513184
    8. ' if' → logprob: -6.748900413513184
    9. '```' → logprob: -7.248900413513184
    10. ' ' → logprob: -7.623900413513184

Token 277: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25223612785339355
    2. ' if' → logprob: -1.5022361278533936
    3. '   ' → logprob: -8.127236366271973
    4. '	if' → logprob: -12.002236366271973
    5. '```' → logprob: -12.377236366271973
    6. '
' → logprob: -14.252236366271973
    7. ' ' → logprob: -15.752236366271973
    8. ' 
' → logprob: -15.752236366271973
    9. 'elif' → logprob: -16.002235412597656
    10. 'If' → logprob: -16.377235412597656

Token 278: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.06196824833750725
    2. ' rank' → logprob: -2.8119683265686035
    3. '(rank' → logprob: -14.436967849731445
    4. '   ' → logprob: -18.061967849731445
    5. '_rank' → logprob: -18.186967849731445
    6. ' ' → logprob: -18.811967849731445
    7. '.rank' → logprob: -19.186967849731445
    8. 'r' → logprob: -20.186967849731445
    9. '
' → logprob: -20.561967849731445
    10. 'Rank' → logprob: -21.561967849731445

Token 279: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.165027217415627e-05
    2. 'a' → logprob: -10.750021934509277
    3. ' a' → logprob: -15.875021934509277
    4. '[' → logprob: -17.37502098083496
    5. ' [' → logprob: -20.00002098083496
    6. '[b' → logprob: -20.00002098083496
    7. '[
' → logprob: -20.62502098083496
    8. '[A' → logprob: -20.75002098083496
    9. '>a' → logprob: -21.00002098083496
    10. '[u' → logprob: -21.25002098083496

Token 280: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.31985101103782654
    2. '[a' → logprob: -1.569851040840149
    3. '<' → logprob: -2.9448509216308594
    4. '[' → logprob: -4.444850921630859
    5. '<a' → logprob: -7.069850921630859
    6. ']' → logprob: -8.56985092163086
    7. '>' → logprob: -9.19485092163086
    8. ' >' → logprob: -10.06985092163086
    9. '[b' → logprob: -10.06985092163086
    10. ']<' → logprob: -10.56985092163086

Token 281: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1793486475944519
    2. ' <' → logprob: -1.9293487071990967
    3. '[a' → logprob: -4.429348468780518
    4. '<a' → logprob: -5.554348468780518
    5. '[' → logprob: -5.804348468780518
    6. '<b' → logprob: -9.679348945617676
    7. 'a' → logprob: -10.304348945617676
    8. '[b' → logprob: -11.804348945617676
    9. '<span' → logprob: -11.804348945617676
    10. '>' → logprob: -11.929348945617676

Token 282: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.0015053401002660394
    2. ' rank' → logprob: -6.501505374908447
    3. 'b' → logprob: -12.751504898071289
    4. '(rank' → logprob: -17.00150489807129
    5. '   ' → logprob: -17.87650489807129
    6. ' b' → logprob: -19.12650489807129
    7. '.rank' → logprob: -19.50150489807129
    8. ' ' → logprob: -19.50150489807129
    9. 'r' → logprob: -20.25150489807129
    10. '
' → logprob: -20.37650489807129

Token 283: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.004083385691046715
    2. 'b' → logprob: -5.504083156585693
    3. '[a' → logprob: -12.879083633422852
    4. ' b' → logprob: -13.254083633422852
    5. '[' → logprob: -14.629083633422852
    6. '	b' → logprob: -17.00408363342285
    7. '   ' → logprob: -17.00408363342285
    8. '[
' → logprob: -17.62908363342285
    9. ' [' → logprob: -18.25408363342285
    10. '```' → logprob: -18.75408363342285

Token 284: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.2875593602657318
    2. ':' → logprob: -1.4125593900680542
    3. ']:
' → logprob: -5.662559509277344
    4. ':
' → logprob: -5.912559509277344
    5. '[a' → logprob: -10.037559509277344
    6. '}:' → logprob: -10.162559509277344
    7. ']' → logprob: -10.287559509277344
    8. '>:' → logprob: -10.287559509277344
    9. '):' → logprob: -10.912559509277344
    10. '[' → logprob: -11.662559509277344

Token 285: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8146106600761414
    2. ' a' → logprob: -1.1896107196807861
    3. '   ' → logprob: -1.5646107196807861
    4. '       ' → logprob: -3.939610719680786
    5. 'b' → logprob: -4.189610481262207
    6. 'parent' → logprob: -5.564610481262207
    7. ' parent' → logprob: -5.689610481262207
    8. ' b' → logprob: -6.939610481262207
    9. '[a' → logprob: -7.689610481262207
    10. '    ' → logprob: -9.689610481262207

Token 286: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.049298204481601715
    2. ' parent' → logprob: -3.0492982864379883
    3. 'a' → logprob: -7.299298286437988
    4. ' a' → logprob: -10.799298286437988
    5. '   ' → logprob: -12.424298286437988
    6. '[parent' → logprob: -12.674298286437988
    7. '(parent' → logprob: -13.049298286437988
    8. '_parent' → logprob: -13.424298286437988
    9. '	parent' → logprob: -13.674298286437988
    10. '.parent' → logprob: -13.674298286437988

Token 287: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.0100624169572257e-05
    2. '[b' → logprob: -10.875020027160645
    3. 'a' → logprob: -14.375020027160645
    4. '[' → logprob: -14.500020027160645
    5. '```' → logprob: -19.37502098083496
    6. '[parent' → logprob: -19.37502098083496
    7. ' [' → logprob: -20.00002098083496
    8. '[u' → logprob: -20.00002098083496
    9. '[A' → logprob: -20.12502098083496
    10. '[x' → logprob: -20.50002098083496

Token 288: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4794810116291046
    2. '[b' → logprob: -0.9794809818267822
    3. '[a' → logprob: -5.979481220245361
    4. ']=' → logprob: -6.104481220245361
    5. 'b' → logprob: -7.604481220245361
    6. '[' → logprob: -9.604480743408203
    7. 'a' → logprob: -10.604480743408203
    8. '=' → logprob: -11.229480743408203
    9. '=b' → logprob: -11.479480743408203
    10. ' =' → logprob: -12.354480743408203

Token 289: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20191477239131927
    2. ' =' → logprob: -2.0769147872924805
    3. '[a' → logprob: -3.7019147872924805
    4. '[b' → logprob: -3.7019147872924805
    5. '=b' → logprob: -5.0769147872924805
    6. '[' → logprob: -7.4519147872924805
    7. '=a' → logprob: -7.5769147872924805
    8. ']' → logprob: -7.5769147872924805
    9. ']=' → logprob: -8.32691478729248
    10. 'b' → logprob: -10.07691478729248

Token 290: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.128163257315464e-07
    2. ' b' → logprob: -15.25
    3. '	b' → logprob: -22.5
    4. '   ' → logprob: -23.375
    5. ')b' → logprob: -25.625
    6. '>b' → logprob: -26.0
    7. ' ' → logprob: -26.875
    8. '[b' → logprob: -27.0
    9. '\b' → logprob: -27.75
    10. '_b' → logprob: -27.75

Token 291: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03787506744265556
    2. 'else' → logprob: -3.537875175476074
    3. ' else' → logprob: -5.287875175476074
    4. '
' → logprob: -6.287875175476074
    5. '    
' → logprob: -7.162875175476074
    6. '       ' → logprob: -8.412875175476074
    7. '	else' → logprob: -9.912875175476074
    8. '  
' → logprob: -9.912875175476074
    9. '        
' → logprob: -10.412875175476074
    10. '```' → logprob: -11.162875175476074

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40223565697669983
    2. 'else' → logprob: -1.1522356271743774
    3. ' else' → logprob: -4.277235507965088
    4. 'elif' → logprob: -6.902235507965088
    5. '    
' → logprob: -9.402235984802246
    6. '<|end|>' → logprob: -9.402235984802246
    7. '       ' → logprob: -9.777235984802246
    8. '	else' → logprob: -10.027235984802246
    9. '
' → logprob: -10.902235984802246
    10. 'a' → logprob: -10.902235984802246

Token 293: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0013184542767703533
    2. '   ' → logprob: -7.001318454742432
    3. 'elif' → logprob: -8.501317977905273
    4. ' else' → logprob: -8.501317977905273
    5. '```' → logprob: -15.376317977905273
    6. '	else' → logprob: -16.251317977905273
    7. '    
' → logprob: -17.126317977905273
    8. ' elif' → logprob: -17.626317977905273
    9. '_else' → logprob: -18.251317977905273
    10. '
' → logprob: -18.626317977905273

Token 294: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4379085600376129
    2. ':
' → logprob: -1.0629085302352905
    3. '   ' → logprob: -5.31290864944458
    4. '{
' → logprob: -5.93790864944458
    5. '{' → logprob: -6.56290864944458
    6. '       ' → logprob: -9.312908172607422
    7. '```' → logprob: -10.687908172607422
    8. '[' → logprob: -11.062908172607422
    9. ' :' → logprob: -11.187908172607422
    10. ' :
' → logprob: -11.687908172607422

Token 295: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009007471613585949
    2. '   ' → logprob: -5.509007453918457
    3. ':' → logprob: -6.259007453918457
    4. 'parent' → logprob: -6.259007453918457
    5. ' parent' → logprob: -7.759007453918457
    6. ':
' → logprob: -7.759007453918457
    7. '```' → logprob: -9.509007453918457
    8. '[parent' → logprob: -9.634007453918457
    9. '	parent' → logprob: -10.009007453918457
    10. '{
' → logprob: -11.384007453918457

Token 296: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.037913065403699875
    2. '       ' → logprob: -3.4129130840301514
    3. ' parent' → logprob: -5.537912845611572
    4. '[parent' → logprob: -9.03791332244873
    5. '	parent' → logprob: -9.28791332244873
    6. '           ' → logprob: -10.53791332244873
    7. '{
' → logprob: -10.66291332244873
    8. '(parent' → logprob: -11.16291332244873
    9. '   ' → logprob: -11.28791332244873
    10. ',parent' → logprob: -11.91291332244873

Token 297: '[b' (ID: 40800)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -6.034592388459714e-06
    2. 'a' → logprob: -12.125005722045898
    3. '[A' → logprob: -15.250005722045898
    4. '[parent' → logprob: -16.5000057220459
    5. '[s' → logprob: -16.7500057220459
    6. '```' → logprob: -16.8750057220459
    7. '[' → logprob: -17.0000057220459
    8. '[
' → logprob: -17.8750057220459
    9. '[u' → logprob: -18.3750057220459
    10. '   ' → logprob: -18.7500057220459

Token 298: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013795215636491776
    2. ']=' → logprob: -6.876379489898682
    3. '=' → logprob: -8.00137996673584
    4. ' ]' → logprob: -11.87637996673584
    5. ' =' → logprob: -12.50137996673584
    6. 'a' → logprob: -14.87637996673584
    7. ')' → logprob: -15.37637996673584
    8. '[' → logprob: -15.87637996673584
    9. '[a' → logprob: -15.87637996673584
    10. '   ' → logprob: -16.251379013061523

Token 299: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020720958709717
    2. ' =' → logprob: -2.3502073287963867
    3. '=a' → logprob: -14.850207328796387
    4. '=s' → logprob: -16.22520637512207
    5. '=
' → logprob: -16.72520637512207
    6. ')' → logprob: -16.85020637512207
    7. '＝' → logprob: -17.97520637512207
    8. ']=' → logprob: -17.97520637512207
    9. ']' → logprob: -18.35020637512207
    10. '=head' → logprob: -18.47520637512207

Token 300: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.676292231422849e-05
    2. ' a' → logprob: -11.000017166137695
    3. '	a' → logprob: -17.750017166137695
    4. ')a' → logprob: -19.250017166137695
    5. '>a' → logprob: -19.375017166137695
    6. ''a' → logprob: -20.250017166137695
    7. '[a' → logprob: -20.875017166137695
    8. '   ' → logprob: -20.875017166137695
    9. '"a' → logprob: -21.125017166137695
    10. '<|end|>' → logprob: -21.500017166137695

Token 301: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2550402879714966
    2. '       ' → logprob: -1.5050402879714966
    3. '    
' → logprob: -7.005040168762207
    4. '        
' → logprob: -7.755040168762207
    5. '```' → logprob: -7.755040168762207
    6. 'if' → logprob: -7.880040168762207
    7. ' if' → logprob: -8.255040168762207
    8. '<|end|>' → logprob: -8.755040168762207
    9. '    ' → logprob: -8.880040168762207
    10. '  
' → logprob: -9.505040168762207

Token 302: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007197789382189512
    2. '       ' → logprob: -5.007197856903076
    3. 'if' → logprob: -7.757197856903076
    4. '```' → logprob: -10.007197380065918
    5. ' if' → logprob: -12.257197380065918
    6. '``' → logprob: -13.382197380065918
    7. '	if' → logprob: -13.507197380065918
    8. '    
' → logprob: -14.632197380065918
    9. '     ' → logprob: -15.007197380065918
    10. '           ' → logprob: -15.007197380065918

Token 303: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0006866985349915922
    2. '       ' → logprob: -7.3756866455078125
    3. ' if' → logprob: -10.625686645507812
    4. 'rank' → logprob: -11.375686645507812
    5. '        
' → logprob: -11.500686645507812
    6. '
' → logprob: -12.375686645507812
    7. '           ' → logprob: -12.750686645507812
    8. '1' → logprob: -12.875686645507812
    9. '   ' → logprob: -13.000686645507812
    10. '```' → logprob: -14.000686645507812

Token 304: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.0009115827269852161
    2. ' rank' → logprob: -7.000911712646484
    3. '(rank' → logprob: -17.500911712646484
    4. '   ' → logprob: -21.125911712646484
    5. '
' → logprob: -21.250911712646484
    6. '_rank' → logprob: -22.125911712646484
    7. '.rank' → logprob: -22.250911712646484
    8. ' ' → logprob: -22.625911712646484
    9. 'Rank' → logprob: -23.000911712646484
    10. 'r' → logprob: -23.375911712646484

Token 305: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.7432603272027336e-06
    2. 'a' → logprob: -13.375001907348633
    3. '[' → logprob: -15.875001907348633
    4. '[parent' → logprob: -18.000001907348633
    5. '[A' → logprob: -19.375001907348633
    6. '[u' → logprob: -20.250001907348633
    7. '[s' → logprob: -20.500001907348633
    8. '[b' → logprob: -21.125001907348633
    9. '[
' → logprob: -21.375001907348633
    10. '[x' → logprob: -21.750001907348633

Token 306: ']' (ID: 60)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0021645331289619207
    2. '[' → logprob: -6.502164363861084
    3. '==' → logprob: -7.377164363861084
    4. ']==' → logprob: -10.627164840698242
    5. 'a' → logprob: -12.377164840698242
    6. ' ==' → logprob: -12.877164840698242
    7. '[b' → logprob: -13.377164840698242
    8. '[i' → logprob: -13.502164840698242
    9. '[
' → logprob: -13.627164840698242
    10. ']' → logprob: -14.377164840698242

Token 307: ' ==' (ID: 951)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.04454890266060829
    2. '[' → logprob: -3.294548988342285
    3. '==' → logprob: -5.044548988342285
    4. '[b' → logprob: -10.919548988342285
    5. ' ==' → logprob: -11.419548988342285
    6. 'a' → logprob: -12.794548988342285
    7. '[i' → logprob: -13.044548988342285
    8. '[int' → logprob: -13.544548988342285
    9. '[
' → logprob: -13.669548988342285
    10. '[x' → logprob: -13.794548988342285

Token 308: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.00033713103039190173
    2. ' rank' → logprob: -8.000337600708008
    3. '(rank' → logprob: -13.375337600708008
    4. 'b' → logprob: -16.500337600708008
    5. '.rank' → logprob: -17.875337600708008
    6. '_rank' → logprob: -18.625337600708008
    7. ' ' → logprob: -19.250337600708008
    8. '   ' → logprob: -20.375337600708008
    9. '
' → logprob: -21.250337600708008
    10. 'Rank' → logprob: -21.375337600708008

Token 309: '[b' (ID: 40800)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.008719289675354958
    2. '[b' → logprob: -4.758719444274902
    3. 'a' → logprob: -9.258719444274902
    4. '[' → logprob: -11.758719444274902
    5. 'b' → logprob: -14.008719444274902
    6. '[u' → logprob: -14.883719444274902
    7. '[A' → logprob: -16.008718490600586
    8. '[s' → logprob: -16.258718490600586
    9. '[parent' → logprob: -16.508718490600586
    10. '[i' → logprob: -16.883718490600586

Token 310: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7478553056716919
    2. ':' → logprob: -0.8728553056716919
    3. ']:' → logprob: -2.9978551864624023
    4. ']:
' → logprob: -3.1228551864624023
    5. ']+=' → logprob: -4.497855186462402
    6. '):
' → logprob: -7.372855186462402
    7. ']+' → logprob: -7.497855186462402
    8. ']' → logprob: -7.622855186462402
    9. '       ' → logprob: -7.747855186462402
    10. '   ' → logprob: -7.747855186462402

Token 311: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026042139157652855
    2. ' rank' → logprob: -3.9010422229766846
    3. '   ' → logprob: -5.7760419845581055
    4. 'rank' → logprob: -6.4010419845581055
    5. '               ' → logprob: -8.651041984558105
    6. '
' → logprob: -8.901041984558105
    7. '(rank' → logprob: -9.151041984558105
    8. '_rank' → logprob: -9.276041984558105
    9. '```' → logprob: -9.651041984558105
    10. '       ' → logprob: -9.901041984558105

Token 312: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' (adapté à ' rank') → logprob: -0.008615399710834026
    2. ' rank' → logprob: -4.758615493774414
    3. '   ' → logprob: -14.633615493774414
    4. '(rank' → logprob: -15.508615493774414
    5. '           ' → logprob: -15.758615493774414
    6. '
' → logprob: -17.883615493774414
    7. '_rank' → logprob: -18.133615493774414
    8. '.rank' → logprob: -18.133615493774414
    9. '       ' → logprob: -18.383615493774414
    10. '               ' → logprob: -18.383615493774414

Token 313: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -4.320199877838604e-07
    2. 'a' → logprob: -15.0
    3. '[A' → logprob: -19.0
    4. '[' → logprob: -19.375
    5. '[u' → logprob: -20.25
    6. '```' → logprob: -20.875
    7. '[
' → logprob: -21.375
    8. '   ' → logprob: -21.5
    9. '[i' → logprob: -21.625
    10. ' [' → logprob: -21.875

Token 314: ']' (ID: 60)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -5.836499985889532e-05
    2. 'a' → logprob: -9.7500581741333
    3. '[i' → logprob: -18.500059127807617
    4. '[A' → logprob: -18.625059127807617
    5. '[u' → logprob: -20.125059127807617
    6. '[b' → logprob: -20.375059127807617
    7. '(a' → logprob: -20.750059127807617
    8. '```' → logprob: -21.000059127807617
    9. '[' → logprob: -21.250059127807617
    10. '[x' → logprob: -21.625059127807617

Token 315: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.039717771112918854
    2. '[a' → logprob: -3.289717674255371
    3. ' +=' → logprob: -7.039717674255371
    4. '[' → logprob: -7.789717674255371
    5. ']+=' → logprob: -8.039717674255371
    6. '[int' → logprob: -10.664717674255371
    7. '[i' → logprob: -10.664717674255371
    8. '+' → logprob: -13.164717674255371
    9. '[idx' → logprob: -13.164717674255371
    10. '[u' → logprob: -13.289717674255371

Token 316: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -20.875
    4. '
' → logprob: -22.125
    5. '```' → logprob: -24.0
    6. '１' → logprob: -24.75
    7. '[' → logprob: -24.875
    8. ' ' → logprob: -25.125
    9. '  ' → logprob: -25.125
    10. '+' → logprob: -25.5

Token 317: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 318: '#' (ID: 2)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.14491571485996246
    2. 'factor' → logprob: -2.019915819168091
    3. 'pf' → logprob: -7.144915580749512
    4. 'from' → logprob: -7.769915580749512
    5. '#' → logprob: -8.144915580749512
    6. 'fact' → logprob: -8.644915580749512
    7. 'index' → logprob: -8.894915580749512
    8. 'value' → logprob: -9.144915580749512
    9. 'pos' → logprob: -9.519915580749512
    10. 'idx' → logprob: -9.519915580749512

Token 319: ' On' (ID: 2160)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.5565099716186523
    2. 'factor' → logprob: -1.6815099716186523
    3. 'index' → logprob: -2.1815099716186523
    4. 'value' → logprob: -2.9315099716186523
    5. 'idx' → logprob: -3.4315099716186523
    6. 'pos' → logprob: -4.681509971618652
    7. 'from' → logprob: -4.806509971618652
    8. 'num' → logprob: -5.306509971618652
    9. 'comp' → logprob: -5.681509971618652
    10. 'component' → logprob: -5.806509971618652

Token 320: ' construit' (ID: 119882)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05881217494606972
    2. 'factor' → logprob: -3.558812141418457
    3. ' for' → logprob: -4.683812141418457
    4. '=' → logprob: -5.183812141418457
    5. '#' → logprob: -6.308812141418457
    6. 'f' → logprob: -6.308812141418457
    7. 'from' → logprob: -6.433812141418457
    8. ' =' → logprob: -6.933812141418457
    9. 'A' → logprob: -7.058812141418457
    10. ' factor' → logprob: -7.308812141418457

Token 321: ' des' (ID: 731)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.8697713017463684
    2. 'factor' → logprob: -1.9947712421417236
    3. 'prime' → logprob: -2.1197712421417236
    4. 'a' → logprob: -2.1197712421417236
    5. 'une' → logprob: -2.8697712421417236
    6. '#' → logprob: -2.8697712421417236
    7. 'for' → logprob: -3.4947712421417236
    8. 'd' → logprob: -3.8697712421417236
    9. 'component' → logprob: -4.369771480560303
    10. 'graph' → logprob: -5.244771480560303

Token 322: ' groupes' (ID: 72206)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.5567012429237366
    2. 'li' → logprob: -1.4317011833190918
    3. 'com' → logprob: -2.681701183319092
    4. 'graph' → logprob: -3.431701183319092
    5. 'ar' → logprob: -3.556701183319092
    6. 'conn' → logprob: -3.931701183319092
    7. 'are' → logprob: -4.806701183319092
    8. 'clusters' → logprob: -5.431701183319092
    9. ' groupes' → logprob: -5.556701183319092
    10. ' liens' → logprob: -5.681701183319092

Token 323: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002910102193709463
    2. ' for' → logprob: -8.250290870666504
    3. 'indices' → logprob: -11.625290870666504
    4. '#' → logprob: -11.875290870666504
    5. 'factor' → logprob: -12.375290870666504
    6. 'index' → logprob: -12.500290870666504
    7. 'i' → logprob: -13.375290870666504
    8. 'idx' → logprob: -13.875290870666504
    9. 'value' → logprob: -14.000290870666504
    10. '
' → logprob: -14.250290870666504

Token 324: 'com' (ID: 639)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1047644168138504
    2. 'for' → logprob: -3.104764461517334
    3. 'pour' → logprob: -3.729764461517334
    4. '#' → logprob: -4.854764461517334
    5. ' pour' → logprob: -5.229764461517334
    6. ' for' → logprob: -5.729764461517334
    7. ' )' → logprob: -6.104764461517334
    8. 'en' → logprob: -6.479764461517334
    9. 'd' → logprob: -6.604764461517334
    10. 'de' → logprob: -6.729764461517334

Token 325: 'pos' (ID: 1103)
  Prédit: 'ments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.5495644211769104
    2. 'ment' → logprob: -0.9245644211769104
    3. 'm' → logprob: -4.674564361572266
    4. 'plets' → logprob: -4.799564361572266
    5. ')' → logprob: -5.799564361572266
    6. '#' → logprob: -6.299564361572266
    7. 'p' → logprob: -6.549564361572266
    8. 'plement' → logprob: -7.924564361572266
    9. '```' → logprob: -7.924564361572266
    10. 'mented' → logprob: -8.674564361572266

Token 326: 'antes' (ID: 5193)
  Prédit: 'antes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.10754705965518951
    2. 'ants' → logprob: -2.4825470447540283
    3. 'ante' → logprob: -4.357547283172607
    4. 'ant' → logprob: -5.357547283172607
    5. '```' → logprob: -8.98254680633545
    6. 'ents' → logprob: -9.35754680633545
    7. 'és' → logprob: -9.35754680633545
    8. '{' → logprob: -9.48254680633545
    9. '#' → logprob: -9.60754680633545
    10. ')' → logprob: -9.85754680633545

Token 327: ' connex' (ID: 154480)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.01564846560359001
    2. 'connect' → logprob: -4.765648365020752
    3. ')' → logprob: -5.265648365020752
    4. ' connex' → logprob: -7.140648365020752
    5. 'con' → logprob: -8.01564884185791
    6. 'connexion' → logprob: -8.39064884185791
    7. '_conn' → logprob: -8.51564884185791
    8. 'connected' → logprob: -9.01564884185791
    9. '   ' → logprob: -9.26564884185791
    10. '```' → logprob: -11.39064884185791

Token 328: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.00014406509581021965
    2. 'tes' → logprob: -9.750144004821777
    3. '#' → logprob: -10.250144004821777
    4. 'és' → logprob: -11.625144004821777
    5. 'e' → logprob: -12.000144004821777
    6. 'ités' → logprob: -12.375144004821777
    7. 'entes' → logprob: -12.625144004821777
    8. 's' → logprob: -12.625144004821777
    9. 'nes' → logprob: -12.750144004821777
    10. 'ives' → logprob: -13.000144004821777

Token 329: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001251538866199553
    2. 'pour' → logprob: -7.251251697540283
    3. 'en' → logprob: -8.376251220703125
    4. 'for' → logprob: -9.126251220703125
    5. ')
' → logprob: -9.376251220703125
    6. ' )' → logprob: -10.376251220703125
    7. ')#' → logprob: -10.626251220703125
    8. ' pour' → logprob: -10.751251220703125
    9. '#' → logprob: -11.126251220703125
    10. 'par' → logprob: -11.376251220703125

Token 330: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3899884223937988
    2. 'factor' → logprob: -1.3899884223937988
    3. 'index' → logprob: -1.5149884223937988
    4. 'prime' → logprob: -2.014988422393799
    5. 'idx' → logprob: -3.139988422393799
    6. 'indices' → logprob: -3.139988422393799
    7. 'value' → logprob: -3.764988422393799
    8. 'num' → logprob: -4.764988422393799
    9. 'node' → logprob: -5.139988422393799
    10. 'mapping' → logprob: -5.764988422393799

Token 331: ' reliant' (ID: 156556)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10558091104030609
    2. 'util' → logprob: -2.4805808067321777
    3. 'connect' → logprob: -4.855580806732178
    4. ' for' → logprob: -6.480580806732178
    5. 'reg' → logprob: -6.605580806732178
    6. 'li' → logprob: -6.730580806732178
    7. 'range' → logprob: -7.480580806732178
    8. 'fonction' → logprob: -7.605580806732178
    9. ' utilisant' → logprob: -7.730580806732178
    10. 'f' → logprob: -7.855580806732178

Token 332: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5365351438522339
    2. 'les' → logprob: -1.2865351438522339
    3. 'indices' → logprob: -2.2865352630615234
    4. ' les' → logprob: -3.9115352630615234
    5. ' i' → logprob: -5.536535263061523
    6. ' indices' → logprob: -5.786535263061523
    7. 'l' → logprob: -6.911535263061523
    8. 'des' → logprob: -7.036535263061523
    9. 'indexes' → logprob: -7.161535263061523
    10. 'val' → logprob: -7.286535263061523

Token 333: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.18561488389968872
    2. 'fact' → logprob: -2.060614824295044
    3. 'i' → logprob: -4.185615062713623
    4. 'prime' → logprob: -4.560615062713623
    5. 'val' → logprob: -5.435615062713623
    6. 'f' → logprob: -6.060615062713623
    7. 'index' → logprob: -6.435615062713623
    8. 'indexes' → logprob: -6.435615062713623
    9. 'prem' → logprob: -6.685615062713623
    10. 'idx' → logprob: -6.935615062713623

Token 334: ' qui' (ID: 2780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04811077564954758
    2. ' for' → logprob: -3.1731107234954834
    3. 'with' → logprob: -6.4231109619140625
    4. ' of' → logprob: -6.5481109619140625
    5. 'of' → logprob: -6.7981109619140625
    6. 'indices' → logprob: -8.798110961914062
    7. '```' → logprob: -8.923110961914062
    8. ' with' → logprob: -9.048110961914062
    9. 'i' → logprob: -9.173110961914062
    10. 'in' → logprob: -9.548110961914062

Token 335: ' ont' (ID: 4930)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.02853117138147354
    2. 'ont' → logprob: -3.653531074523926
    3. ' part' → logprob: -6.778531074523926
    4. '#' → logprob: -7.778531074523926
    5. 'share' → logprob: -8.403531074523926
    6. ' ont' → logprob: -8.778531074523926
    7. ' partage' → logprob: -8.903531074523926
    8. 'poss' → logprob: -10.028531074523926
    9. 'avaient' → logprob: -10.903531074523926
    10. 'have' → logprob: -11.028531074523926

Token 336: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.7535228729248047
    2. 'au' → logprob: -1.2535228729248047
    3. 'un' → logprob: -1.5035228729248047
    4. ' des' → logprob: -5.128522872924805
    5. 'une' → logprob: -5.878522872924805
    6. ' au' → logprob: -6.003522872924805
    7. 'part' → logprob: -6.128522872924805
    8. 'les' → logprob: -6.253522872924805
    9. 'fact' → logprob: -6.878522872924805
    10. '```' → logprob: -7.003522872924805

Token 337: ' nombres' (ID: 76205)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0501549132168293
    2. ' facteurs' → logprob: -3.1751549243927
    3. 'f' → logprob: -5.300154685974121
    4. 'prime' → logprob: -7.175154685974121
    5. 'val' → logprob: -8.300154685974121
    6. 'A' → logprob: -8.800154685974121
    7. 'div' → logprob: -8.925154685974121
    8. 'part' → logprob: -9.050154685974121
    9. 'nombre' → logprob: -9.050154685974121
    10. 'prem' → logprob: -9.175154685974121

Token 338: ' partage' (ID: 70806)
  Prédit: 'ayant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ayant' → logprob: -1.0178266763687134
    2. 'qui' → logprob: -1.6428266763687134
    3. 'sharing' → logprob: -2.142826557159424
    4. 'part' → logprob: -2.767826557159424
    5. 'avec' → logprob: -2.767826557159424
    6. 'with' → logprob: -2.767826557159424
    7. ' partage' → logprob: -2.892826557159424
    8. 'prem' → logprob: -3.517826557159424
    9. 'dont' → logprob: -4.517826557159424
    10. 'import' → logprob: -5.142826557159424

Token 339: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.00041851779678836465
    2. 'nt' → logprob: -8.125418663024902
    3. 'nant' → logprob: -9.750418663024902
    4. 'aient' → logprob: -10.250418663024902
    5. 'd' → logprob: -11.625418663024902
    6. 'age' → logprob: -12.375418663024902
    7. 'a' → logprob: -12.500418663024902
    8. 'ag' → logprob: -12.625418663024902
    9. 's' → logprob: -13.375418663024902
    10. 'ment' → logprob: -13.875418663024902

Token 340: ' un' (ID: 537)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -1.0513280630111694
    2. ' au' → logprob: -1.3013280630111694
    3. 'un' → logprob: -1.5513280630111694
    4. ' un' → logprob: -2.426328182220459
    5. ' des' → logprob: -3.176328182220459
    6. 'des' → logprob: -4.301328182220459
    7. '<|end|>' → logprob: -5.051328182220459
    8. 'prime' → logprob: -5.551328182220459
    9. 'at' → logprob: -6.301328182220459
    10. 'a' → logprob: -6.426328182220459

Token 341: ' facteur' (ID: 175214)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.11878035962581635
    2. ' facteur' → logprob: -2.4937803745269775
    3. 'prime' → logprob: -3.7437803745269775
    4. 'factor' → logprob: -6.993780136108398
    5. ' fact' → logprob: -7.118780136108398
    6. 'm' → logprob: -7.493780136108398
    7. ' prime' → logprob: -7.618780136108398
    8. 'prem' → logprob: -7.743780136108398
    9. 'f' → logprob: -7.993780136108398
    10. '```' → logprob: -7.993780136108398

Token 342: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.013397153466939926
    2. ' premier' → logprob: -4.388397216796875
    3. ' premiers' → logprob: -8.138397216796875
    4. 'prima' → logprob: -8.763397216796875
    5. 'prime' → logprob: -9.013397216796875
    6. 's' → logprob: -9.388397216796875
    7. '```' → logprob: -9.888397216796875
    8. 'first' → logprob: -9.888397216796875
    9. 'for' → logprob: -10.138397216796875
    10. 'commun' → logprob: -11.138397216796875

Token 343: ' commun' (ID: 2797)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.2144249677658081
    2. 'prime' → logprob: -2.0894250869750977
    3. 'index' → logprob: -3.2144250869750977
    4. 'indices' → logprob: -4.089425086975098
    5. 'from' → logprob: -5.339425086975098
    6. 'idx' → logprob: -6.339425086975098
    7. 'fact' → logprob: -6.964425086975098
    8. 'last' → logprob: -7.214425086975098
    9. 'f' → logprob: -7.339425086975098
    10. 'mapping' → logprob: -7.964425086975098

Token 344: '.
' (ID: 558)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.5127078890800476
    2. 'for' → logprob: -1.6377079486846924
    3. 'prime' → logprob: -2.1377079486846924
    4. 'index' → logprob: -3.3877079486846924
    5. 'indices' → logprob: -3.5127079486846924
    6. 'idx' → logprob: -5.137707710266113
    7. 'value' → logprob: -5.387707710266113
    8. 'from' → logprob: -5.387707710266113
    9. 'num' → logprob: -6.012707710266113
    10. 'component' → logprob: -6.262707710266113

Token 345: '#' (ID: 2)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.29007163643836975
    2. 'prime' → logprob: -2.165071725845337
    3. 'index' → logprob: -2.790071725845337
    4. 'from' → logprob: -3.540071725845337
    5. 'for' → logprob: -4.290071487426758
    6. 'indices' → logprob: -4.415071487426758
    7. 'idx' → logprob: -4.915071487426758
    8. 'value' → logprob: -5.290071487426758
    9. 'fact' → logprob: -6.290071487426758
    10. 'f' → logprob: -6.415071487426758

Token 346: ' Pour' (ID: 13931)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.18921540677547455
    2. 'prime' → logprob: -2.4392154216766357
    3. 'from' → logprob: -2.5642154216766357
    4. 'index' → logprob: -5.689215183258057
    5. 'value' → logprob: -6.689215183258057
    6. '#' → logprob: -7.439215183258057
    7. 'f' → logprob: -7.439215183258057
    8. 'idx' → logprob: -7.689215183258057
    9. 'fact' → logprob: -7.689215183258057
    10. 'indices' → logprob: -8.189215660095215

Token 347: ' cela' (ID: 17542)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1737697422504425
    2. 'p' → logprob: -2.17376971244812
    3. 'factor' → logprob: -3.92376971244812
    4. 'prime' → logprob: -4.173769950866699
    5. 'fact' → logprob: -5.548769950866699
    6. ' i' → logprob: -6.548769950866699
    7. 'f' → logprob: -6.673769950866699
    8. 'num' → logprob: -7.173769950866699
    9. 'each' → logprob: -7.548769950866699
    10. 'a' → logprob: -7.548769950866699

Token 348: ',' (ID: 11)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.8182842135429382
    2. ',' → logprob: -1.068284273147583
    3. 'factor' → logprob: -1.818284273147583
    4. 'for' → logprob: -3.818284273147583
    5. 'indices' → logprob: -4.818284034729004
    6. 'fact' → logprob: -5.193284034729004
    7. '#' → logprob: -5.693284034729004
    8. 'index' → logprob: -5.943284034729004
    9. 'pr' → logprob: -5.943284034729004
    10. ' prime' → logprob: -6.568284034729004

Token 349: ' on' (ID: 402)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.2952076494693756
    2. 'index' → logprob: -1.9202076196670532
    3. 'prime' → logprob: -2.5452077388763428
    4. 'value' → logprob: -4.420207500457764
    5. 'num' → logprob: -5.295207500457764
    6. 'idx' → logprob: -5.420207500457764
    7. 'fact' → logprob: -5.795207500457764
    8. '#' → logprob: -6.795207500457764
    9. 'from' → logprob: -7.045207500457764
    10. 'pos' → logprob: -7.170207500457764

Token 350: ' utilise' (ID: 70283)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0380522795021534
    2. ' for' → logprob: -3.2880523204803467
    3. 'range' → logprob: -12.663052558898926
    4. ' range' → logprob: -13.163052558898926
    5. 'import' → logprob: -13.413052558898926
    6. 'from' → logprob: -13.663052558898926
    7. 'continue' → logprob: -14.163052558898926
    8. 'i' → logprob: -15.163052558898926
    9. 'factor' → logprob: -15.288052558898926
    10. ' continue' → logprob: -15.413052558898926

Token 351: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.025204602628946304
    2. 'une' → logprob: -4.150204658508301
    3. 'a' → logprob: -5.525204658508301
    4. ' un' → logprob: -6.650204658508301
    5. 'd' → logprob: -6.900204658508301
    6. '{' → logprob: -7.275204658508301
    7. '{}' → logprob: -7.400204658508301
    8. 'des' → logprob: -7.525204658508301
    9. 'default' → logprob: -7.650204658508301
    10. ''un' → logprob: -8.7752046585083

Token 352: ' diction' (ID: 155259)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0416678711771965
    2. 'dict' → logprob: -3.791667938232422
    3. 'dictionary' → logprob: -4.416667938232422
    4. 'default' → logprob: -5.416667938232422
    5. 'for' → logprob: -7.416667938232422
    6. 'hash' → logprob: -7.541667938232422
    7. 'dic' → logprob: -8.416667938232422
    8. ' diction' → logprob: -8.541667938232422
    9. '{}' → logprob: -9.541667938232422
    10. 'from' → logprob: -10.416667938232422

Token 353: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.016079653054475784
    2. 'aire' → logprob: -4.391079425811768
    3. 'ary' → logprob: -6.266079425811768
    4. 'n' → logprob: -6.641079425811768
    5. 'a' → logprob: -8.516079902648926
    6. 'na' → logprob: -9.266079902648926
    7. 'ar' → logprob: -10.266079902648926
    8. 'naires' → logprob: -11.141079902648926
    9. '#' → logprob: -12.266079902648926
    10. '   ' → logprob: -13.641079902648926

Token 354: ' qui' (ID: 2780)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.6005195379257202
    2. 'from' → logprob: -1.6005195379257202
    3. 'prime' → logprob: -1.6005195379257202
    4. 'fact' → logprob: -4.47551965713501
    5. 'd' → logprob: -4.85051965713501
    6. ' factor' → logprob: -5.60051965713501
    7. ' prime' → logprob: -6.10051965713501
    8. ' from' → logprob: -6.35051965713501
    9. 'dict' → logprob: -6.35051965713501
    10. 'connected' → logprob: -6.35051965713501

Token 355: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5307489633560181
    2. 'connect' → logprob: -2.6557488441467285
    3. 'maps' → logprob: -2.9057488441467285
    4. 'mapping' → logprob: -2.9057488441467285
    5. 'stock' → logprob: -3.0307488441467285
    6. 'rel' → logprob: -3.0307488441467285
    7. 'lie' → logprob: -3.0307488441467285
    8. 'from' → logprob: -3.1557488441467285
    9. 'factor' → logprob: -4.2807488441467285
    10. ' maps' → logprob: -5.1557488441467285

Token 356: ' un' (ID: 537)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.007211041171103716
    2. 'e' → logprob: -6.132211208343506
    3. 'p' → logprob: -6.382211208343506
    4. '{' → logprob: -6.507211208343506
    5. 'ping' → logprob: -7.882211208343506
    6. 'a' → logprob: -8.257210731506348
    7. '{}' → logprob: -8.257210731506348
    8. 'factor' → logprob: -9.007210731506348
    9. 's' → logprob: -9.257210731506348
    10. 'ped' → logprob: -9.632210731506348

Token 357: ' facteur' (ID: 175214)
  Prédit: ' facteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' facteur' → logprob: -0.14742255210876465
    2. 'fact' → logprob: -2.5224225521087646
    3. 'factor' → logprob: -3.5224225521087646
    4. 'prime' → logprob: -4.397422790527344
    5. ' factor' → logprob: -4.772422790527344
    6. 'f' → logprob: -5.647422790527344
    7. 'e' → logprob: -6.647422790527344
    8. ' prime' → logprob: -7.647422790527344
    9. 'a' → logprob: -8.147422790527344
    10. ' fact' → logprob: -8.272422790527344

Token 358: ' premier' (ID: 15506)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.9927893877029419
    2. ' premier' → logprob: -1.117789387702942
    3. 'prem' → logprob: -2.1177892684936523
    4. '_token' → logprob: -2.8677892684936523
    5. 'prime' → logprob: -3.3677892684936523
    6. '_' → logprob: -3.9927892684936523
    7. '_pr' → logprob: -4.242789268493652
    8. '_p' → logprob: -4.242789268493652
    9. '_fact' → logprob: -5.117789268493652
    10. '_des' → logprob: -5.492789268493652

Token 359: ' à' (ID: 1221)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -1.0496975183486938
    2. ':' → logprob: -2.1746973991394043
    3. ' to' → logprob: -2.4246973991394043
    4. 'to' → logprob: -2.5496973991394043
    5. '_factor' → logprob: -2.7996973991394043
    6. ' facteur' → logprob: -3.1746973991394043
    7. 'des' → logprob: -3.5496973991394043
    8. 'token' → logprob: -3.6746973991394043
    9. '_to' → logprob: -3.7996973991394043
    10. ' à' → logprob: -3.9246973991394043

Token 360: ' un' (ID: 537)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.19014355540275574
    2. 'un' → logprob: -1.8151435852050781
    3. ' l' → logprob: -5.315143585205078
    4. ' un' → logprob: -5.940143585205078
    5. 'la' → logprob: -7.065143585205078
    6. 'index' → logprob: -7.565143585205078
    7. 'indice' → logprob: -7.565143585205078
    8. 'indices' → logprob: -8.190143585205078
    9. 'une' → logprob: -8.565143585205078
    10. 'ind' → logprob: -9.815143585205078

Token 361: ' indice' (ID: 90848)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.526677131652832
    2. 'indice' → logprob: -0.901677131652832
    3. 'ensemble' → logprob: -6.776677131652832
    4. 'liste' → logprob: -7.401677131652832
    5. 'list' → logprob: -7.526677131652832
    6. ' index' → logprob: -7.651677131652832
    7. 'idx' → logprob: -8.901677131652832
    8. 'indices' → logprob: -9.026677131652832
    9. 'élé' → logprob: -9.401677131652832
    10. 'ind' → logprob: -9.401677131652832

Token 362: ' rencontré' (ID: 141085)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.517395555973053
    2. 'factor' → logprob: -1.0173954963684082
    3. 'from' → logprob: -4.142395496368408
    4. 'fact' → logprob: -4.767395496368408
    5. 'd' → logprob: -5.517395496368408
    6. ':' → logprob: -6.017395496368408
    7. 'pr' → logprob: -6.142395496368408
    8. 'dict' → logprob: -7.017395496368408
    9. '```' → logprob: -7.142395496368408
    10. 'last' → logprob: -7.267395496368408

Token 363: '.

' (ID: 364)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.34251874685287476
    2. 'prime' → logprob: -1.3425188064575195
    3. 'fact' → logprob: -3.9675188064575195
    4. 'from' → logprob: -5.2175188064575195
    5. 'f' → logprob: -6.9675188064575195
    6. 'pf' → logprob: -7.3425188064575195
    7. 'next' → logprob: -7.4675188064575195
    8. 'pr' → logprob: -7.7175188064575195
    9. 'd' → logprob: -7.8425188064575195
    10. '```' → logprob: -7.8425188064575195

Token 364: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.1626417636871338
    2. 'factor' → logprob: -1.9126417636871338
    3. 'from' → logprob: -6.162641525268555
    4. 'pf' → logprob: -9.162641525268555
    5. 'fact' → logprob: -9.412641525268555
    6. 'mp' → logprob: -10.162641525268555
    7. ' prime' → logprob: -10.912641525268555
    8. 'f' → logprob: -11.037641525268555
    9. 'pr' → logprob: -11.037641525268555
    10. 'p' → logprob: -11.912641525268555

Token 365: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.002552592661231756
    2. '_factor' → logprob: -6.252552509307861
    3. '_f' → logprob: -8.12755298614502
    4. '_indices' → logprob: -8.75255298614502
    5. '_map' → logprob: -9.12755298614502
    6. '_index' → logprob: -10.12755298614502
    7. '2' → logprob: -12.00255298614502
    8. '_dict' → logprob: -12.50255298614502
    9. 'to' → logprob: -12.87755298614502
    10. '_positions' → logprob: -13.12755298614502

Token 366: '_index' (ID: 7748)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.0007303050952032208
    2. '_index' → logprob: -7.250730514526367
    3. 'idx' → logprob: -11.125730514526367
    4. 'node' → logprob: -12.500730514526367
    5. 'indices' → logprob: -14.000730514526367
    6. ' index' → logprob: -14.500730514526367
    7. 'Index' → logprob: -15.625730514526367
    8. 'indice' → logprob: -15.625730514526367
    9. '_idx' → logprob: -16.250730514526367
    10. 'id' → logprob: -17.250730514526367

Token 367: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.387165367603302
    2. ' =' → logprob: -1.1371653079986572
    3. '={}' → logprob: -8.137165069580078
    4. '{}' → logprob: -14.387165069580078
    5. '={' → logprob: -14.512165069580078
    6. 's' → logprob: -15.262165069580078
    7. ' ={' → logprob: -15.762165069580078
    8. '=dict' → logprob: -16.387165069580078
    9. '＝' → logprob: -16.387165069580078
    10. '={}
' → logprob: -16.387165069580078

Token 368: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.00033558503491804004
    2. 'dict' → logprob: -8.000335693359375
    3. ' dict' → logprob: -17.500335693359375
    4. '{})' → logprob: -17.875335693359375
    5. '{}
' → logprob: -18.875335693359375
    6. ' {}' → logprob: -18.875335693359375
    7. '{},' → logprob: -19.000335693359375
    8. '{' → logprob: -19.250335693359375
    9. '{}

' → logprob: -19.750335693359375
    10. '{}\' → logprob: -20.500335693359375

Token 369: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.5577775128767826e-06
    2. '{}' → logprob: -12.750005722045898
    3. '()
' → logprob: -14.375005722045898
    4. '{' → logprob: -14.750005722045898
    5. '()]' → logprob: -14.750005722045898
    6. '={}' → logprob: -14.875005722045898
    7. '(' → logprob: -15.500005722045898
    8. ' ()' → logprob: -15.875005722045898
    9. '()}' → logprob: -16.3750057220459
    10. '()

' → logprob: -16.3750057220459

Token 370: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.320199877838604e-07
    2. ' for' → logprob: -14.875
    3. '	for' → logprob: -20.5
    4. '```' → logprob: -20.875
    5. '
' → logprob: -21.0
    6. 'next' → logprob: -22.625
    7. 'def' → logprob: -23.25
    8. 'from' → logprob: -23.625
    9. 'For' → logprob: -23.875
    10. '

' → logprob: -24.0

Token 371: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.47450971603393555
    2. 'i' → logprob: -0.9745097160339355
    3. ' idx' → logprob: -7.9745097160339355
    4. 'idx' → logprob: -9.349510192871094
    5. 'index' → logprob: -14.099510192871094
    6. ' index' → logprob: -14.974510192871094
    7. ' ' → logprob: -15.349510192871094
    8. '   ' → logprob: -16.099510192871094
    9. '	i' → logprob: -16.724510192871094
    10. '(i' → logprob: -18.099510192871094

Token 372: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043057654052972794
    2. 'in' → logprob: -3.168057680130005
    3. ' ' → logprob: -9.918057441711426
    4. '  ' → logprob: -12.543057441711426
    5. ',' → logprob: -13.418057441711426
    6. '	in' → logprob: -14.418057441711426
    7. 'range' → logprob: -14.668057441711426
    8. ' ,' → logprob: -14.668057441711426
    9. ' i' → logprob: -14.793057441711426
    10. ' ' → logprob: -14.918057441711426

Token 373: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033546582562848926
    2. ' range' → logprob: -8.000335693359375
    3. 'A' → logprob: -17.000335693359375
    4. '(range' → logprob: -18.000335693359375
    5. '   ' → logprob: -19.750335693359375
    6. '	range' → logprob: -19.875335693359375
    7. '  ' → logprob: -20.500335693359375
    8. ' ' → logprob: -20.625335693359375
    9. 'r' → logprob: -21.125335693359375
    10. '
' → logprob: -21.625335693359375

Token 374: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0002883913984987885
    2. '(' → logprob: -8.250288009643555
    3. 'N' → logprob: -10.625288009643555
    4. '(len' → logprob: -13.750288009643555
    5. ' (' → logprob: -14.125288009643555
    6. '(n' → logprob: -14.375288009643555
    7. ' N' → logprob: -15.250288009643555
    8. '(
' → logprob: -16.000288009643555
    9. ')' → logprob: -17.375288009643555
    10. '(i' → logprob: -17.625288009643555

Token 375: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003201477462425828
    2. '):
' → logprob: -5.753201484680176
    3. ':' → logprob: -11.378201484680176
    4. ' ):' → logprob: -11.628201484680176
    5. ')' → logprob: -13.253201484680176
    6. '):
' → logprob: -13.753201484680176
    7. '   ' → logprob: -15.503201484680176
    8. ',' → logprob: -16.62820053100586
    9. ']:' → logprob: -16.75320053100586
    10. '}:' → logprob: -16.75320053100586

Token 376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07833131402730942
    2. 'f' → logprob: -2.953331232070923
    3. ' factors' → logprob: -4.453331470489502
    4. ' for' → logprob: -4.703331470489502
    5. 'for' → logprob: -6.328331470489502
    6. ' f' → logprob: -8.203330993652344
    7. 'pf' → logprob: -8.703330993652344
    8. ' pf' → logprob: -9.328330993652344
    9. ' ' → logprob: -9.953330993652344
    10. 'prime' → logprob: -10.578330993652344

Token 377: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.04082433879375458
    2. 'for' → logprob: -3.2908244132995605
    3. 'prime' → logprob: -6.5408244132995605
    4. 'pr' → logprob: -7.0408244132995605
    5. 'pf' → logprob: -8.040823936462402
    6. ' factors' → logprob: -9.415823936462402
    7. '   ' → logprob: -10.915823936462402
    8. ' for' → logprob: -10.915823936462402
    9. ' primes' → logprob: -11.790823936462402
    10. ' prime' → logprob: -12.540823936462402

Token 378: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1273099035024643
    2. '=' → logprob: -2.127309799194336
    3. '=get' → logprob: -7.877309799194336
    4. 'get' → logprob: -13.877309799194336
    5. '(get' → logprob: -14.877309799194336
    6. ' get' → logprob: -15.252309799194336
    7. ' in' → logprob: -15.502309799194336
    8. '   ' → logprob: -15.752309799194336
    9. ':' → logprob: -15.752309799194336
    10. 's' → logprob: -15.877309799194336

Token 379: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -2.15310683415737e-05
    2. ' get' → logprob: -10.750021934509277
    3. '(get' → logprob: -19.12502098083496
    4. '=get' → logprob: -20.87502098083496
    5. '[get' → logprob: -21.00002098083496
    6. '.get' → logprob: -21.75002098083496
    7. '	get' → logprob: -22.00002098083496
    8. ',get' → logprob: -23.50002098083496
    9. ')get' → logprob: -24.00002098083496
    10. '
' → logprob: -24.25002098083496

Token 380: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -2.1888679839321412e-05
    2. 'prime' → logprob: -10.750021934509277
    3. '_' → logprob: -15.000021934509277
    4. '```' → logprob: -18.00002098083496
    5. '_pr' → logprob: -18.37502098083496
    6. ' prime' → logprob: -18.87502098083496
    7. 'Prime' → logprob: -19.37502098083496
    8. '_factor' → logprob: -19.87502098083496
    9. '(A' → logprob: -19.87502098083496
    10. 'f' → logprob: -20.25002098083496

Token 381: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -8.494741632603109e-05
    2. 'f' → logprob: -9.37508487701416
    3. '_factor' → logprob: -18.375085830688477
    4. '_' → logprob: -18.750085830688477
    5. 'factor' → logprob: -19.375085830688477
    6. '```' → logprob: -19.375085830688477
    7. 's' → logprob: -19.500085830688477
    8. '	f' → logprob: -19.750085830688477
    9. '(f' → logprob: -19.875085830688477
    10. 'def' → logprob: -20.250085830688477

Token 382: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.0021010141354054213
    2. 'f' → logprob: -6.252100944519043
    3. 'ctors' → logprob: -8.877100944519043
    4. 'acters' → logprob: -11.627100944519043
    5. '_f' → logprob: -11.627100944519043
    6. 'ators' → logprob: -12.627100944519043
    7. '_' → logprob: -12.877100944519043
    8. 'act' → logprob: -13.127100944519043
    9. 'actor' → logprob: -13.627100944519043
    10. 'a' → logprob: -13.752100944519043

Token 383: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.3856492842023727e-06
    2. 'A' → logprob: -13.750000953674316
    3. '(' → logprob: -15.250000953674316
    4. '(
' → logprob: -18.875001907348633
    5. '((' → logprob: -20.000001907348633
    6. ' (' → logprob: -20.875001907348633
    7. '(a' → logprob: -22.000001907348633
    8. '[A' → logprob: -22.125001907348633
    9. ' A' → logprob: -22.500001907348633
    10. '```' → logprob: -23.250001907348633

Token 384: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.000000953674316
    3. '[A' → logprob: -15.375000953674316
    4. '[
' → logprob: -17.625
    5. ' [' → logprob: -17.625
    6. ')' → logprob: -18.625
    7. '[I' → logprob: -18.625
    8. ')[' → logprob: -18.75
    9. '```' → logprob: -19.375
    10. 'A' → logprob: -19.5

Token 385: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.6074450612068176
    2. ')
' → logprob: -1.1074450016021729
    3. ')' → logprob: -2.857445001602173
    4. '])' → logprob: -3.232445001602173
    5. '[i' → logprob: -3.607445001602173
    6. ')
' → logprob: -7.732445240020752
    7. '])
' → logprob: -8.732444763183594
    8. ']' → logprob: -9.357444763183594
    9. '))
' → logprob: -9.482444763183594
    10. '])

' → logprob: -11.232444763183594

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006442877347581089
    2. ' for' → logprob: -7.750644207000732
    3. 'for' → logprob: -8.50064468383789
    4. '    
' → logprob: -12.37564468383789
    5. '	for' → logprob: -12.75064468383789
    6. '
' → logprob: -13.25064468383789
    7. ' ' → logprob: -15.00064468383789
    8. '   ' → logprob: -15.12564468383789
    9. '```' → logprob: -15.37564468383789
    10. '  ' → logprob: -15.62564468383789

Token 387: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.048685021698474884
    2. '   ' → logprob: -3.298685073852539
    3. ' for' → logprob: -4.548685073852539
    4. '	for' → logprob: -12.048685073852539
    5. '    
' → logprob: -16.54868507385254
    6. '
' → logprob: -17.79868507385254
    7. ' ' → logprob: -19.67368507385254
    8. '       ' → logprob: -19.79868507385254
    9. '```' → logprob: -20.29868507385254
    10. '   ' → logprob: -20.42368507385254

Token 388: ' p' (ID: 275)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.09613887220621109
    2. 'factor' → logprob: -2.5961389541625977
    3. 'p' → logprob: -4.346138954162598
    4. ' f' → logprob: -5.971138954162598
    5. 'fact' → logprob: -7.471138954162598
    6. ' factor' → logprob: -7.846138954162598
    7. 'prime' → logprob: -8.346138954162598
    8. 'pf' → logprob: -8.346138954162598
    9. ' p' → logprob: -8.971138954162598
    10. 'fac' → logprob: -10.721138954162598

Token 389: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007612544111907482
    2. 'in' → logprob: -4.882612705230713
    3. ' ' → logprob: -12.632612228393555
    4. ' p' → logprob: -13.632612228393555
    5. '_in' → logprob: -14.632612228393555
    6. 'p' → logprob: -14.882612228393555
    7. '   ' → logprob: -15.257612228393555
    8. '	in' → logprob: -15.507612228393555
    9. 's' → logprob: -16.007612228393555
    10. '  ' → logprob: -16.132612228393555

Token 390: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0004324573092162609
    2. ' factors' → logprob: -7.75043249130249
    3. 'p' → logprob: -13.375432014465332
    4. ' ' → logprob: -16.25043296813965
    5. 'factor' → logprob: -17.50043296813965
    6. ' f' → logprob: -17.75043296813965
    7. '   ' → logprob: -17.75043296813965
    8. 'fact' → logprob: -18.37543296813965
    9. ' factores' → logprob: -19.00043296813965
    10. 'Factors' → logprob: -19.62543296813965

Token 391: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020830195397138596
    2. ':
' → logprob: -3.8958301544189453
    3. '   ' → logprob: -8.895830154418945
    4. '       ' → logprob: -9.020830154418945
    5. '):
' → logprob: -11.270830154418945
    6. '):' → logprob: -12.020830154418945
    7. ' :' → logprob: -13.020830154418945
    8. ':
' → logprob: -13.020830154418945
    9. ' in' → logprob: -13.270830154418945
    10. ',' → logprob: -13.395830154418945

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12408214062452316
    2. ' if' → logprob: -2.874082088470459
    3. 'if' → logprob: -3.124082088470459
    4. '   ' → logprob: -4.124082088470459
    5. '	if' → logprob: -9.999082565307617
    6. '    ' → logprob: -11.999082565307617
    7. '     ' → logprob: -12.124082565307617
    8. '	' → logprob: -12.249082565307617
    9. '	   ' → logprob: -12.499082565307617
    10. '           ' → logprob: -13.749082565307617

Token 393: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16058620810508728
    2. ' if' → logprob: -1.9105862379074097
    3. '       ' → logprob: -8.0355863571167
    4. '   ' → logprob: -10.4105863571167
    5. '	if' → logprob: -12.4105863571167
    6. '           ' → logprob: -12.9105863571167
    7. ' ' → logprob: -13.9105863571167
    8. '        
' → logprob: -15.5355863571167
    9. ';if' → logprob: -15.7855863571167
    10. 'If' → logprob: -15.9105863571167

Token 394: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0031777136027812958
    2. ' p' → logprob: -5.753177642822266
    3. '	p' → logprob: -18.628177642822266
    4. '<p' → logprob: -18.878177642822266
    5. '   ' → logprob: -19.878177642822266
    6. '       ' → logprob: -20.503177642822266
    7. ' ' → logprob: -20.753177642822266
    8. '_p' → logprob: -21.378177642822266
    9. ' ' → logprob: -21.628177642822266
    10. 'not' → logprob: -21.753177642822266

Token 395: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12223095446825027
    2. ' not' → logprob: -2.3722310066223145
    3. 'in' → logprob: -3.8722310066223145
    4. 'not' → logprob: -7.1222310066223145
    5. ' p' → logprob: -8.747230529785156
    6. 'p' → logprob: -12.997230529785156
    7. ' ' → logprob: -13.247230529785156
    8. ')' → logprob: -14.747230529785156
    9. ']' → logprob: -15.372230529785156
    10. '	not' → logprob: -15.497230529785156

Token 396: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.005234002135694027
    2. ' prime' → logprob: -5.2552337646484375
    3. 'pr' → logprob: -16.130233764648438
    4. '_prime' → logprob: -16.755233764648438
    5. 'prim' → logprob: -17.130233764648438
    6. 'primer' → logprob: -18.255233764648438
    7. 'principal' → logprob: -18.380233764648438
    8. 'Prime' → logprob: -18.755233764648438
    9. '
' → logprob: -19.755233764648438
    10. '```' → logprob: -20.130233764648438

Token 397: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. '\' → logprob: -19.75
    3. '_t' → logprob: -21.0
    4. 'to' → logprob: -21.125
    5. ' _' → logprob: -21.375
    6. '_' → logprob: -21.625
    7. '_TO' → logprob: -21.875
    8. ''_' → logprob: -21.875
    9. '_prime' → logprob: -22.125
    10. '
' → logprob: -22.5

Token 398: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -2.3080716346157715e-05
    2. 'index' → logprob: -10.750022888183594
    3. 'prime' → logprob: -13.500022888183594
    4. '_prime' → logprob: -16.000022888183594
    5. '_' → logprob: -19.250022888183594
    6. 'Index' → logprob: -19.875022888183594
    7. '_INDEX' → logprob: -20.375022888183594
    8. '_to' → logprob: -20.375022888183594
    9. ' index' → logprob: -20.500022888183594
    10. '\' → logprob: -20.625022888183594

Token 399: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0041440497152507305
    2. ':
' → logprob: -5.629144191741943
    3. '):' → logprob: -8.254143714904785
    4. ' :' → logprob: -8.379143714904785
    5. '):
' → logprob: -11.129143714904785
    6. ')' → logprob: -11.379143714904785
    7. '           ' → logprob: -11.754143714904785
    8. '       ' → logprob: -12.129143714904785
    9. '=' → logprob: -13.129143714904785
    10. ':

' → logprob: -13.129143714904785

Token 400: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026742336340248585
    2. ' union' → logprob: -6.377674102783203
    3. 'union' → logprob: -7.627674102783203
    4. ':
' → logprob: -8.127674102783203
    5. ':' → logprob: -10.127674102783203
    6. '       ' → logprob: -10.377674102783203
    7. '            
' → logprob: -10.752674102783203
    8. '):
' → logprob: -10.877674102783203
    9. '```' → logprob: -11.002674102783203
    10. ',' → logprob: -11.502674102783203

Token 401: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' (adapté à ' union') → logprob: -0.5649242401123047
    2. ' union' → logprob: -0.9399242401123047
    3. '           ' → logprob: -3.3149242401123047
    4. '               ' → logprob: -5.439924240112305
    5. '       ' → logprob: -9.439924240112305
    6. '   ' → logprob: -9.689924240112305
    7. '.union' → logprob: -10.064924240112305
    8. '
' → logprob: -10.189924240112305
    9. '	union' → logprob: -11.189924240112305
    10. '_union' → logprob: -11.939924240112305

Token 402: '(i' (ID: 3649)
  Prédit: '(pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.16048122942447662
    2. '(i' → logprob: -1.9104812145233154
    3. '(' → logprob: -8.660481452941895
    4. '(p' → logprob: -9.660481452941895
    5. 'prime' → logprob: -10.910481452941895
    6. ' prime' → logprob: -14.410481452941895
    7. ' (' → logprob: -15.410481452941895
    8. '(priority' → logprob: -15.410481452941895
    9. 'i' → logprob: -15.660481452941895
    10. '(pi' → logprob: -15.785481452941895

Token 403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026455431361682713
    2. ',p' → logprob: -8.875264167785645
    3. ' ,' → logprob: -9.000264167785645
    4. 'prime' → logprob: -14.375264167785645
    5. ',
' → logprob: -14.875264167785645
    6. ' prime' → logprob: -15.625264167785645
    7. 'p' → logprob: -16.62526512145996
    8. '(pr' → logprob: -17.50026512145996
    9. ',i' → logprob: -17.75026512145996
    10. '，' → logprob: -18.37526512145996

Token 404: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.01837831735610962
    2. ' prime' → logprob: -4.018378257751465
    3. 'p' → logprob: -8.393378257751465
    4. ' p' → logprob: -13.518378257751465
    5. '   ' → logprob: -15.268378257751465
    6. ' ' → logprob: -16.39337921142578
    7. '
' → logprob: -16.51837921142578
    8. 'i' → logprob: -16.76837921142578
    9. '_prime' → logprob: -16.89337921142578
    10. 'pr' → logprob: -17.26837921142578

Token 405: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.7432603272027336e-06
    2. ',' → logprob: -14.375001907348633
    3. '_TO' → logprob: -15.250001907348633
    4. 'To' → logprob: -15.375001907348633
    5. 'to' → logprob: -15.625001907348633
    6. '[i' → logprob: -15.750001907348633
    7. ')' → logprob: -16.125001907348633
    8. '(i' → logprob: -16.250001907348633
    9. '(p' → logprob: -17.250001907348633
    10. '[p' → logprob: -17.375001907348633

Token 406: '_index' (ID: 7748)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.021658217534422874
    2. '_index' → logprob: -4.021658420562744
    3. 'p' → logprob: -5.771658420562744
    4. ' index' → logprob: -9.021657943725586
    5. 'prime' → logprob: -9.021657943725586
    6. 'i' → logprob: -9.521657943725586
    7. 'ind' → logprob: -10.896657943725586
    8. ' p' → logprob: -11.521657943725586
    9. '   ' → logprob: -11.896657943725586
    10. 'in' → logprob: -12.521657943725586

Token 407: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -4.246537173457909e-06
    2. 'p' → logprob: -12.500003814697266
    3. ' [' → logprob: -16.000003814697266
    4. '
' → logprob: -16.250003814697266
    5. '][' → logprob: -16.375003814697266
    6. '[' → logprob: -17.000003814697266
    7. '

' → logprob: -18.000003814697266
    8. ')[' → logprob: -18.000003814697266
    9. '[
' → logprob: -18.250003814697266
    10. '```' → logprob: -18.250003814697266

Token 408: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0012418980477377772
    2. ')' → logprob: -7.251241683959961
    3. '])
' → logprob: -7.626241683959961
    4. ' ])' → logprob: -11.251241683959961
    5. ']' → logprob: -11.501241683959961
    6. '],' → logprob: -11.876241683959961
    7. '])
' → logprob: -12.376241683959961
    8. '))' → logprob: -13.251241683959961
    9. ')])' → logprob: -13.251241683959961
    10. '[i' → logprob: -13.376241683959961

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004822697374038398
    2. 'else' → logprob: -7.750482082366943
    3. ' else' → logprob: -9.875482559204102
    4. '	else' → logprob: -16.6254825592041
    5. '           ' → logprob: -16.7504825592041
    6. '   ' → logprob: -16.8754825592041
    7. '```' → logprob: -17.3754825592041
    8. '	' → logprob: -17.6254825592041
    9. '        
' → logprob: -18.2504825592041
    10. '      ' → logprob: -18.2504825592041

Token 410: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6249516010284424
    2. 'prime' → logprob: -0.8749516010284424
    3. 'else' (adapté à ' else') → logprob: -3.3749516010284424
    4. ' prime' → logprob: -4.374951362609863
    5. ' else' → logprob: -7.124951362609863
    6. '   ' → logprob: -8.624951362609863
    7. '           ' → logprob: -10.999951362609863
    8. '     ' → logprob: -12.374951362609863
    9. 'pr' → logprob: -12.374951362609863
    10. '      ' → logprob: -12.874951362609863

Token 411: ':
' (ID: 734)
  Prédit: ' prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.06139373779296875
    2. '           ' → logprob: -3.0613937377929688
    3. 'prime' → logprob: -4.436393737792969
    4. ':' → logprob: -7.686393737792969
    5. ':
' → logprob: -8.311393737792969
    6. '       ' → logprob: -9.686393737792969
    7. '   ' → logprob: -10.311393737792969
    8. ' :' → logprob: -10.686393737792969
    9. ' ' → logprob: -10.936393737792969
    10. '_prime' → logprob: -11.186393737792969

Token 412: '           ' (ID: 352)
  Prédit: ' prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.1270689070224762
    2. 'prime' → logprob: -2.1270689964294434
    3. '           ' → logprob: -8.877068519592285
    4. '_prime' → logprob: -14.002068519592285
    5. '       ' → logprob: -15.752068519592285
    6. '   ' → logprob: -16.3770694732666
    7. '               ' → logprob: -16.7520694732666
    8. 'pr' → logprob: -17.0020694732666
    9. ' ' → logprob: -17.2520694732666
    10. ' prim' → logprob: -17.6270694732666

Token 413: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' (adapté à ' prime') → logprob: -0.001170225441455841
    2. ' prime' → logprob: -6.7511701583862305
    3. '_prime' → logprob: -18.751171112060547
    4. '           ' → logprob: -18.751171112060547
    5. 'Prime' → logprob: -19.501171112060547
    6. 'prim' → logprob: -21.251171112060547
    7. 'pr' → logprob: -21.626171112060547
    8. '   ' → logprob: -22.501171112060547
    9. 'primer' → logprob: -23.001171112060547
    10. '       ' → logprob: -23.751171112060547

Token 414: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. 'to' → logprob: -17.25
    3. 'To' → logprob: -18.625
    4. ' _' → logprob: -19.0
    5. '```' → logprob: -19.25
    6. '\' → logprob: -19.5
    7. ''_' → logprob: -19.5
    8. '##_' → logprob: -19.5
    9. '_TO' → logprob: -20.0
    10. '._' → logprob: -20.25

Token 415: '_index' (ID: 7748)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.16023072600364685
    2. '_index' → logprob: -1.9102307558059692
    3. 'prime' → logprob: -12.91023063659668
    4. 'ind' → logprob: -12.91023063659668
    5. ' index' → logprob: -14.78523063659668
    6. 'dict' → logprob: -15.66023063659668
    7. 'in' → logprob: -15.78523063659668
    8. 'indice' → logprob: -15.78523063659668
    9. 'Index' → logprob: -15.91023063659668
    10. 'p' → logprob: -16.16023063659668

Token 416: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -6.704273118884885e-07
    2. 'p' → logprob: -14.625000953674316
    3. '[' → logprob: -15.875000953674316
    4. ' [' → logprob: -17.5
    5. '=p' → logprob: -18.875
    6. '[c' → logprob: -19.375
    7. '
' → logprob: -19.375
    8. '(p' → logprob: -19.375
    9. '	p' → logprob: -19.75
    10. '

' → logprob: -20.125

Token 417: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.041425544768571854
    2. '=' → logprob: -3.2914254665374756
    3. ']=' → logprob: -6.041425704956055
    4. ' =' → logprob: -6.916425704956055
    5. '=i' → logprob: -12.291425704956055
    6. ' ]' → logprob: -12.666425704956055
    7. ')' → logprob: -14.041425704956055
    8. '   ' → logprob: -15.416425704956055
    9. '[i' → logprob: -16.916425704956055
    10. ' ' → logprob: -17.416425704956055

Token 418: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019301822176203132
    2. ' =' → logprob: -6.251930236816406
    3. '=i' → logprob: -13.751930236816406
    4. '[i' → logprob: -15.001930236816406
    5. '=p' → logprob: -16.501930236816406
    6. '=
' → logprob: -17.251930236816406
    7. '[' → logprob: -17.251930236816406
    8. '=

' → logprob: -18.626930236816406
    9. ']' → logprob: -19.501930236816406
    10. ' ' → logprob: -19.751930236816406

Token 419: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.5048530030981055e-06
    2. ' i' → logprob: -13.500001907348633
    3. '	i' → logprob: -23.250001907348633
    4. '[i' → logprob: -25.875001907348633
    5. '
' → logprob: -26.000001907348633
    6. '   ' → logprob: -26.250001907348633
    7. '_i' → logprob: -27.000001907348633
    8. '```' → logprob: -27.125001907348633
    9. '(i' → logprob: -27.250001907348633
    10. ')i' → logprob: -27.375001907348633

Token 420: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24182261526584625
    2. '<|end|>' → logprob: -1.866822600364685
    3. 'print' → logprob: -4.491822719573975
    4. ')' → logprob: -4.991822719573975
    5. 'count' → logprob: -5.241822719573975
    6. 'answer' → logprob: -5.241822719573975
    7. 'max' → logprob: -5.241822719573975
    8. '```' → logprob: -5.616822719573975
    9. 'components' → logprob: -5.991822719573975
    10. 'component' → logprob: -6.116822719573975

Token 421: '#' (ID: 2)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.6854549646377563
    2. 'count' → logprob: -2.060454845428467
    3. 'from' → logprob: -2.435454845428467
    4. 'print' → logprob: -2.935454845428467
    5. 'max' → logprob: -3.060454845428467
    6. 'q' → logprob: -3.060454845428467
    7. 'counts' → logprob: -3.435454845428467
    8. 'group' → logprob: -4.310454845428467
    9. 'groups' → logprob: -4.310454845428467
    10. '#' → logprob: -4.560454845428467

Token 422: ' On' (ID: 2160)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.4317439794540405
    2. 'from' → logprob: -2.30674409866333
    3. 'component' → logprob: -2.30674409866333
    4. 'group' → logprob: -2.30674409866333
    5. 'comp' → logprob: -2.55674409866333
    6. 'groups' → logprob: -2.68174409866333
    7. 'counts' → logprob: -2.93174409866333
    8. 'counter' → logprob: -2.93174409866333
    9. 'max' → logprob: -3.30674409866333
    10. 'ans' → logprob: -3.43174409866333

Token 423: ' crée' (ID: 102256)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.36326971650123596
    2. 'counts' → logprob: -1.9882696866989136
    3. 'comp' → logprob: -2.238269805908203
    4. 'counter' → logprob: -4.238269805908203
    5. 'component' → logprob: -4.863269805908203
    6. 'group' → logprob: -4.988269805908203
    7. 'cnt' → logprob: -5.113269805908203
    8. 'from' → logprob: -5.238269805908203
    9. '#' → logprob: -5.238269805908203
    10. 'components' → logprob: -5.363269805908203

Token 424: ' la' (ID: 557)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.811664879322052
    2. 'count' → logprob: -1.6866648197174072
    3. 'a' → logprob: -1.8116648197174072
    4. 'counter' → logprob: -2.4366648197174072
    5. 'from' → logprob: -3.5616648197174072
    6. 'ans' → logprob: -3.8116648197174072
    7. 'component' → logprob: -4.186665058135986
    8. 'une' → logprob: -4.436665058135986
    9. 'counts' → logprob: -4.561665058135986
    10. 'result' → logprob: -4.686665058135986

Token 425: ' copie' (ID: 134141)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.7896669507026672
    2. 'default' → logprob: -1.7896668910980225
    3. 'count' → logprob: -1.9146668910980225
    4. 'from' → logprob: -2.6646668910980225
    5. 'dict' → logprob: -2.9146668910980225
    6. 'comp' → logprob: -3.1646668910980225
    7. 'com' → logprob: -3.6646668910980225
    8. 'dictionary' → logprob: -3.7896668910980225
    9. 'component' → logprob: -4.914667129516602
    10. 'd' → logprob: -5.039667129516602

Token 426: ' tri' (ID: 12665)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5682942867279053
    2. 'A' → logprob: -1.1932942867279053
    3. 'count' → logprob: -3.1932942867279053
    4. 'of' → logprob: -3.6932942867279053
    5. 'counts' → logprob: -3.8182942867279053
    6. 'sorted' → logprob: -4.068294525146484
    7. 'comp' → logprob: -5.443294525146484
    8. 'counter' → logprob: -5.693294525146484
    9. 'max' → logprob: -5.818294525146484
    10. 'result' → logprob: -5.943294525146484

Token 427: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.035692330449819565
    2. 'e' → logprob: -3.5356922149658203
    3. 'd' → logprob: -5.66069221496582
    4. 'ee' → logprob: -7.41069221496582
    5. 'A' → logprob: -7.66069221496582
    6. 'é' → logprob: -7.91069221496582
    7. 'ed' → logprob: -8.03569221496582
    8. 'née' → logprob: -8.78569221496582
    9. 'E' → logprob: -9.28569221496582
    10. 'rée' → logprob: -9.41069221496582

Token 428: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7876591682434082
    2. 'B' → logprob: -0.7876591682434082
    3. 'sorted' → logprob: -2.412659168243408
    4. 'C' → logprob: -9.53765869140625
    5. 'sort' → logprob: -9.66265869140625
    6. 'S' → logprob: -9.66265869140625
    7. 'arr' → logprob: -9.91265869140625
    8. ' sorted' → logprob: -10.03765869140625
    9. 'ans' → logprob: -10.28765869140625
    10. 's' → logprob: -10.41265869140625

Token 429: 'sorted' (ID: 64288)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1534736305475235
    2. 'A' → logprob: -2.5284736156463623
    3. 'sorted' → logprob: -2.7784736156463623
    4. ' B' → logprob: -8.653473854064941
    5. ' sorted' → logprob: -9.403473854064941
    6. 'S' → logprob: -10.153473854064941
    7. ' A' → logprob: -11.028473854064941
    8. 'Sorted' → logprob: -11.403473854064941
    9. 'sort' → logprob: -11.653473854064941
    10. 'C' → logprob: -12.153473854064941

Token 430: '_A' (ID: 6829)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.11359449476003647
    2. '_A' → logprob: -2.2385945320129395
    3. '_array' → logprob: -7.9885945320129395
    4. '_arr' → logprob: -8.738594055175781
    5. '_list' → logprob: -8.738594055175781
    6. '_indices' → logprob: -10.488594055175781
    7. '(A' → logprob: -10.738594055175781
    8. ' =' → logprob: -11.863594055175781
    9. 'array' → logprob: -11.863594055175781
    10. '=' → logprob: -11.988594055175781

Token 431: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0788913294672966
    2. ' =' → logprob: -2.5788912773132324
    3. '=A' → logprob: -14.20389175415039
    4. '＝' → logprob: -15.57889175415039
    5. '[' → logprob: -16.07889175415039
    6. ',' → logprob: -16.07889175415039
    7. ' ' → logprob: -16.20389175415039
    8. '=[]' → logprob: -16.32889175415039
    9. 'A' → logprob: -16.57889175415039
    10. '_' → logprob: -16.70389175415039

Token 432: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.1517960956552997e-05
    2. ' sorted' → logprob: -11.500011444091797
    3. 'A' → logprob: -13.500011444091797
    4. '(sorted' → logprob: -18.125011444091797
    5. '.sorted' → logprob: -21.125011444091797
    6. 'list' → logprob: -21.375011444091797
    7. '   ' → logprob: -21.875011444091797
    8. ' A' → logprob: -22.250011444091797
    9. 's' → logprob: -22.500011444091797
    10. 'Sorted' → logprob: -22.750011444091797

Token 433: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0004822697374038398
    2. '(' → logprob: -8.125482559204102
    3. 'A' → logprob: -8.625482559204102
    4. '(
' → logprob: -12.375482559204102
    5. ' (' → logprob: -14.000482559204102
    6. '((' → logprob: -14.250482559204102
    7. '_A' → logprob: -15.125482559204102
    8. '(sorted' → logprob: -16.2504825592041
    9. '(list' → logprob: -16.6254825592041
    10. '(a' → logprob: -16.7504825592041

Token 434: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.13388703338569e-06
    2. ')
' → logprob: -11.750009536743164
    3. ',' → logprob: -14.375009536743164
    4. ')

' → logprob: -15.250009536743164
    5. ' )' → logprob: -15.375009536743164
    6. ')`' → logprob: -17.000009536743164
    7. '))' → logprob: -17.125009536743164
    8. '）' → logprob: -17.500009536743164
    9. ')
' → logprob: -17.750009536743164
    10. '[:' → logprob: -18.125009536743164

Token 435: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.442577064037323
    2. 'answer' → logprob: -2.6925771236419678
    3. 'index' → logprob: -2.6925771236419678
    4. 'possible' → logprob: -2.6925771236419678
    5. 'result' → logprob: -3.3175771236419678
    6. 'pos' → logprob: -3.8175771236419678
    7. 'res' → logprob: -4.192576885223389
    8. 'idx' → logprob: -4.192576885223389
    9. 'ans' → logprob: -4.317576885223389
    10. 'count' → logprob: -4.567576885223389

Token 436: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7522406578063965
    2. 'answer' → logprob: -2.3772406578063965
    3. 'ans' → logprob: -2.7522406578063965
    4. 'possible' → logprob: -2.7522406578063965
    5. 'count' → logprob: -3.0022406578063965
    6. 'res' → logprob: -3.1272406578063965
    7. 'result' → logprob: -3.3772406578063965
    8. 'print' → logprob: -3.6272406578063965
    9. 'index' → logprob: -3.8772406578063965
    10. 'if' → logprob: -3.8772406578063965

Token 437: ' que' (ID: 661)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003978992172051221
    2. ' i' → logprob: -7.875397682189941
    3. 'v' → logprob: -12.000397682189941
    4. 'val' → logprob: -13.375397682189941
    5. 'all' → logprob: -13.625397682189941
    6. ' vérifier' → logprob: -13.625397682189941
    7. 'idx' → logprob: -14.000397682189941
    8. 'faire' → logprob: -14.250397682189941
    9. 'tout' → logprob: -14.250397682189941
    10. 'check' → logprob: -14.500397682189941

Token 438: ' ce' (ID: 2357)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2061600238084793
    2. ' i' → logprob: -1.706160068511963
    3. 'sorted' → logprob: -6.706160068511963
    4. '_' → logprob: -6.956160068511963
    5. 'all' → logprob: -7.331160068511963
    6. 'print' → logprob: -7.581160068511963
    7. ' all' → logprob: -8.581159591674805
    8. ' sorted' → logprob: -8.956159591674805
    9. ' True' → logprob: -8.956159591674805
    10. 'True' → logprob: -9.206159591674805

Token 439: ' soit' (ID: 17293)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13979564607143402
    2. ' i' → logprob: -3.1397955417633057
    3. 's' → logprob: -3.2647955417633057
    4. 'a' → logprob: -4.514795780181885
    5. ' code' → logprob: -4.889795780181885
    6. ' soit' → logprob: -5.264795780181885
    7. '#' → logprob: -5.639795780181885
    8. ' que' → logprob: -5.764795780181885
    9. 'que' → logprob: -6.264795780181885
    10. 'e' → logprob: -6.264795780181885

Token 440: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.030877403914928436
    2. '"' → logprob: -3.5308773517608643
    3. 'Possible' → logprob: -7.905877590179443
    4. 'poss' → logprob: -8.405877113342285
    5. 'oui' → logprob: -8.780877113342285
    6. '```' → logprob: -9.655877113342285
    7. 'pos' → logprob: -9.780877113342285
    8. 'True' → logprob: -9.780877113342285
    9. 'v' → logprob: -10.030877113342285
    10. '"""' → logprob: -11.030877113342285

Token 441: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.703385591506958
    2. ',' → logprob: -0.953385591506958
    3. ':
' → logprob: -2.828385591506958
    4. 'for' → logprob: -3.703385591506958
    5. 'print' → logprob: -3.703385591506958
    6. 'if' → logprob: -5.328385353088379
    7. ' for' → logprob: -6.078385353088379
    8. 'import' → logprob: -6.953385353088379
    9. '
' → logprob: -7.328385353088379
    10. 'def' → logprob: -7.328385353088379

Token 442: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.049569591879844666
    2. 'parent' → logprob: -3.299569606781006
    3. 'possible' → logprob: -5.174569606781006
    4. '#' → logprob: -5.924569606781006
    5. 'parents' → logprob: -6.924569606781006
    6. 'root' → logprob: -7.174569606781006
    7. 'pour' → logprob: -7.799569606781006
    8. 'par' → logprob: -7.924569606781006
    9. 'il' → logprob: -8.924569129943848
    10. ' for' → logprob: -9.049569129943848

Token 443: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.028458409011363983
    2. 'tout' → logprob: -4.028458595275879
    3. 't' → logprob: -5.028458595275879
    4. 'cha' → logprob: -6.653458595275879
    5. '0' → logprob: -6.778458595275879
    6. ' i' → logprob: -7.528458595275879
    7. 'all' → logprob: -7.778458595275879
    8. 'a' → logprob: -8.903458595275879
    9. 'every' → logprob: -9.903458595275879
    10. 'ch' → logprob: -10.653458595275879

Token 444: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006524941883981228
    2. ' i' → logprob: -5.256525039672852
    3. 'index' → logprob: -7.006525039672852
    4. 'indice' → logprob: -8.381525039672852
    5. 'pair' → logprob: -9.881525039672852
    6. ' index' → logprob: -10.381525039672852
    7. 'sorted' → logprob: -11.256525039672852
    8. 'parent' → logprob: -11.381525039672852
    9. 'position' → logprob: -11.881525039672852
    10. ' pair' → logprob: -12.131525039672852

Token 445: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00904999952763319
    2. ' i' → logprob: -4.759049892425537
    3. ',' → logprob: -7.759049892425537
    4. ' in' → logprob: -12.134050369262695
    5. ',i' → logprob: -13.509050369262695
    6. 'in' → logprob: -14.384050369262695
    7. ' ,' → logprob: -15.009050369262695
    8. '```' → logprob: -15.509050369262695
    9. '0' → logprob: -16.134050369262695
    10. ' ' → logprob: -16.134050369262695

Token 446: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13860048353672028
    2. ' in' → logprob: -2.3886005878448486
    3. 'in' → logprob: -3.6386005878448486
    4. ':' → logprob: -4.5136003494262695
    5. 'if' → logprob: -8.51360034942627
    6. ' ,' → logprob: -9.76360034942627
    7. ' if' → logprob: -10.13860034942627
    8. 'range' → logprob: -10.63860034942627
    9. ':
' → logprob: -10.76360034942627
    10. ' range' → logprob: -11.51360034942627

Token 447: ' A' (ID: 355)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006096346769481897
    2. ' if' → logprob: -5.131096363067627
    3. '#' → logprob: -9.881095886230469
    4. 'parent' → logprob: -9.881095886230469
    5. '
' → logprob: -11.006095886230469
    6. '   ' → logprob: -11.506095886230469
    7. 'find' → logprob: -11.631095886230469
    8. 'x' → logprob: -11.881095886230469
    9. 'A' → logprob: -12.131095886230469
    10. ' ' → logprob: -12.756095886230469

Token 448: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007661393843591213
    2. '[' → logprob: -5.50766134262085
    3. ''s' → logprob: -6.25766134262085
    4. 'i' → logprob: -8.382661819458008
    5. 'sorted' → logprob: -8.507661819458008
    6. 'et' → logprob: -8.882661819458008
    7. '[parent' → logprob: -9.007661819458008
    8. '_sorted' → logprob: -9.132661819458008
    9. ' and' → logprob: -9.132661819458008
    10. 'parent' → logprob: -9.507661819458008

Token 449: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010968588292598724
    2. ']==' → logprob: -5.1359686851501465
    3. '[i' → logprob: -5.8859686851501465
    4. ']!=' → logprob: -7.5109686851501465
    5. '],' → logprob: -8.135968208312988
    6. ''s' → logprob: -8.510968208312988
    7. '==' → logprob: -8.885968208312988
    8. ')' → logprob: -8.885968208312988
    9. '[' → logprob: -8.885968208312988
    10. 'parent' → logprob: -9.010968208312988

Token 450: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6832520961761475
    2. 'and' → logprob: -1.3082520961761475
    3. '==' → logprob: -3.4332520961761475
    4. 'parent' → logprob: -3.5582520961761475
    5. ' et' → logprob: -3.6832520961761475
    6. '#' → logprob: -3.9332520961761475
    7. 'if' → logprob: -3.9332520961761475
    8. 'et' → logprob: -4.058252334594727
    9. 'must' → logprob: -4.308252334594727
    10. ' ==' → logprob: -4.683252334594727

Token 451: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -7.517272024415433e-05
    2. ' sorted' → logprob: -9.500075340270996
    3. '(sorted' → logprob: -15.375075340270996
    4. 's' → logprob: -17.25007438659668
    5. '
' → logprob: -17.87507438659668
    6. '.sorted' → logprob: -18.12507438659668
    7. 'A' → logprob: -19.12507438659668
    8. '   ' → logprob: -20.50007438659668
    9. '_sorted' → logprob: -20.62507438659668
    10. '```' → logprob: -20.62507438659668

Token 452: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -9.13388703338569e-06
    2. 'A' → logprob: -12.000009536743164
    3. '```' → logprob: -13.250009536743164
    4. '\' → logprob: -14.750009536743164
    5. '_' → logprob: -15.250009536743164
    6. '(A' → logprob: -16.125009536743164
    7. '[i' → logprob: -16.250009536743164
    8. '(_' → logprob: -16.375009536743164
    9. '(i' → logprob: -16.750009536743164
    10. '_i' → logprob: -17.125009536743164

Token 453: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007037336472421885
    2. '[' → logprob: -7.750703811645508
    3. ' [' → logprob: -9.125703811645508
    4. ''s' → logprob: -9.125703811645508
    5. 'i' → logprob: -10.375703811645508
    6. ' i' → logprob: -11.625703811645508
    7. '```' → logprob: -12.250703811645508
    8. 'sorted' → logprob: -12.875703811645508
    9. '
' → logprob: -13.625703811645508
    10. ''[' → logprob: -13.875703811645508

Token 454: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007139082532376051
    2. 'must' → logprob: -5.757139205932617
    3. ' doivent' → logprob: -6.757139205932617
    4. 'parent' → logprob: -6.757139205932617
    5. 'should' → logprob: -7.757139205932617
    6. 's' → logprob: -8.007139205932617
    7. '#' → logprob: -8.382139205932617
    8. 'have' → logprob: -9.007139205932617
    9. 'ont' → logprob: -9.132139205932617
    10. ''s' → logprob: -9.257139205932617

Token 455: ' doivent' (ID: 44722)
  Prédit: ' doivent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doivent' → logprob: -0.157863050699234
    2. ' must' → logprob: -2.782863140106201
    3. 'must' → logprob: -2.907863140106201
    4. 'do' → logprob: -3.907863140106201
    5. 'ont' → logprob: -5.282863140106201
    6. 'should' → logprob: -6.782863140106201
    7. ' should' → logprob: -7.407863140106201
    8. ' have' → logprob: -8.032862663269043
    9. 'have' → logprob: -8.032862663269043
    10. ' doit' → logprob: -8.407862663269043

Token 456: ' apparten' (ID: 165047)
  Prédit: 'avoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avoir' → logprob: -0.25437384843826294
    2. 'être' → logprob: -1.6293737888336182
    3. ' avoir' → logprob: -4.879374027252197
    4. 'have' → logprob: -5.504374027252197
    5. ' apparten' → logprob: -5.504374027252197
    6. 'app' → logprob: -6.129374027252197
    7. ''avoir' → logprob: -6.254374027252197
    8. 'bel' → logprob: -6.629374027252197
    9. 'be' → logprob: -7.129374027252197
    10. ' ' → logprob: -7.129374027252197

Token 457: 'ir' (ID: 380)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.8574399352073669
    2. 'ir' → logprob: -1.9824399948120117
    3. 'ent' → logprob: -2.6074399948120117
    4. ' to' → logprob: -2.8574399948120117
    5. 'to' → logprob: -2.8574399948120117
    6. 'à' → logprob: -2.8574399948120117
    7. '   ' → logprob: -3.1074399948120117
    8. ' à' → logprob: -3.3574399948120117
    9. 'er' → logprob: -3.4824399948120117
    10. ' au' → logprob: -4.107439994812012

Token 458: ' au' (ID: 2791)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.5325680375099182
    2. ' au' → logprob: -1.0325679779052734
    3. 'à' → logprob: -3.0325679779052734
    4. ' à' → logprob: -5.157567977905273
    5. 'to' → logprob: -6.657567977905273
    6. ''au' → logprob: -7.282567977905273
    7. ' to' → logprob: -8.407567977905273
    8. 'aux' → logprob: -8.532567977905273
    9. ''à' → logprob: -9.032567977905273
    10. ' ' → logprob: -9.532567977905273

Token 459: ' même' (ID: 9679)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.3238590955734253
    2. 'm' → logprob: -1.4488590955734253
    3. 'same' → logprob: -3.823859214782715
    4. ' même' → logprob: -3.948859214782715
    5. 'even' → logprob: -9.073859214782715
    6. 'mem' → logprob: -9.073859214782715
    7. 'mé' → logprob: -9.073859214782715
    8. ' find' → logprob: -9.323859214782715
    9. '=find' → logprob: -9.823859214782715
    10. 'parent' → logprob: -10.323859214782715

Token 460: ' groupe' (ID: 29494)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.36247172951698303
    2. 'set' → logprob: -1.4874716997146606
    3. 'component' → logprob: -3.36247181892395
    4. 'union' → logprob: -4.237471580505371
    5. 'connected' → logprob: -4.362471580505371
    6. 'find' → logprob: -4.737471580505371
    7. 'ensemble' → logprob: -5.487471580505371
    8. 'parent' → logprob: -6.487471580505371
    9. 'group' → logprob: -7.237471580505371
    10. '
' → logprob: -8.237471580505371

Token 461: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04639006406068802
    2. 'possible' → logprob: -3.2963900566101074
    3. '
' → logprob: -5.171390056610107
    4. 'is' → logprob: -6.421390056610107
    5. 'valid' → logprob: -7.671390056610107
    6. ' for' → logprob: -8.171390533447266
    7. 'can' → logprob: -9.046390533447266
    8. 'ok' → logprob: -10.296390533447266
    9. '_possible' → logprob: -10.421390533447266
    10. ' possible' → logprob: -11.546390533447266

Token 462: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011951096821576357
    2. 'possible' → logprob: -6.751194953918457
    3. ' for' → logprob: -11.501194953918457
    4. 'answer' → logprob: -11.876194953918457
    5. '
' → logprob: -12.876194953918457
    6. 'result' → logprob: -13.251194953918457
    7. 'ans' → logprob: -13.751194953918457
    8. 'res' → logprob: -14.126194953918457
    9. 'valid' → logprob: -14.876194953918457
    10. 'print' → logprob: -14.876194953918457

Token 463: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759421586990356
    2. 'i' → logprob: -0.8259421586990356
    3. '	i' → logprob: -12.950942039489746
    4. ' ' → logprob: -15.950942039489746
    5. '(i' → logprob: -16.575942993164062
    6. 'I' → logprob: -16.575942993164062
    7. ' ' → logprob: -17.325942993164062
    8. '_i' → logprob: -17.325942993164062
    9. 'a' → logprob: -18.450942993164062
    10. '`' → logprob: -19.325942993164062

Token 464: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04300444945693016
    2. 'in' → logprob: -3.1680045127868652
    3. ' ' → logprob: -13.043004035949707
    4. ',' → logprob: -13.668004035949707
    5. 'range' → logprob: -14.543004035949707
    6. 'import' → logprob: -14.668004035949707
    7. '	in' → logprob: -15.168004035949707
    8. 'In' → logprob: -15.293004035949707
    9. '   ' → logprob: -15.418004035949707
    10. '```' → logprob: -16.168004989624023

Token 465: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023245826363563538
    2. ' range' → logprob: -3.7732458114624023
    3. '(range' → logprob: -15.648245811462402
    4. 'in' → logprob: -17.02324676513672
    5. 'ange' → logprob: -17.02324676513672
    6. ' ' → logprob: -17.02324676513672
    7. '   ' → logprob: -17.02324676513672
    8. '	range' → logprob: -18.14824676513672
    9. '  ' → logprob: -18.77324676513672
    10. '```' → logprob: -19.39824676513672

Token 466: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0003825293097179383
    2. 'N' → logprob: -8.125382423400879
    3. '(' → logprob: -9.375382423400879
    4. '(len' → logprob: -14.375382423400879
    5. ' N' → logprob: -14.750382423400879
    6. '(n' → logprob: -15.125382423400879
    7. ' (' → logprob: -15.375382423400879
    8. '(
' → logprob: -16.125383377075195
    9. ',N' → logprob: -17.250383377075195
    10. '   ' → logprob: -17.500383377075195

Token 467: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0031871015671640635
    2. '):
' → logprob: -5.75318717956543
    3. ' ):' → logprob: -12.12818717956543
    4. ':' → logprob: -13.25318717956543
    5. ')' → logprob: -13.87818717956543
    6. '):
' → logprob: -13.87818717956543
    7. ' ' → logprob: -16.12818717956543
    8. '   ' → logprob: -16.25318717956543
    9. '}:' → logprob: -16.75318717956543
    10. '):

' → logprob: -16.87818717956543

Token 468: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06052093952894211
    2. 'if' → logprob: -2.935520887374878
    3. ' if' → logprob: -5.185521125793457
    4. '    
' → logprob: -11.435521125793457
    5. '	if' → logprob: -11.560521125793457
    6. '
' → logprob: -13.185521125793457
    7. '   ' → logprob: -14.060521125793457
    8. '```' → logprob: -14.185521125793457
    9. '       ' → logprob: -14.435521125793457
    10. ' ' → logprob: -14.435521125793457

Token 469: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -8.792751032160595e-05
    2. ' if' → logprob: -9.50008773803711
    3. '   ' → logprob: -11.25008773803711
    4. '
' → logprob: -17.00008773803711
    5. 'assert' → logprob: -17.00008773803711
    6. '    
' → logprob: -18.12508773803711
    7. ' ' → logprob: -19.50008773803711
    8. '	if' → logprob: -19.50008773803711
    9. 'If' → logprob: -19.50008773803711
    10. '  ' → logprob: -19.75008773803711

Token 470: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.2519315779209137
    2. ' find' → logprob: -1.5019315481185913
    3. '	find' → logprob: -13.501931190490723
    4. '   ' → logprob: -14.001931190490723
    5. '(find' → logprob: -15.501931190490723
    6. ' ' → logprob: -16.50193214416504
    7. '  ' → logprob: -17.00193214416504
    8. '=find' → logprob: -17.25193214416504
    9. ')find' → logprob: -18.12693214416504
    10. '.find' → logprob: -18.25193214416504

Token 471: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.250000953674316
    3. '(A' → logprob: -15.000000953674316
    4. '(a' → logprob: -18.375001907348633
    5. ' (' → logprob: -18.750001907348633
    6. 'i' → logprob: -19.375001907348633
    7. '(parent' → logprob: -19.375001907348633
    8. '[i' → logprob: -19.875001907348633
    9. '(I' → logprob: -20.625001907348633
    10. ')' → logprob: -21.375001907348633

Token 472: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015321242390200496
    2. ')!=' → logprob: -6.751532077789307
    3. '!=' → logprob: -8.001532554626465
    4. '()' → logprob: -11.501532554626465
    5. ' !=' → logprob: -11.751532554626465
    6. ' )' → logprob: -12.126532554626465
    7. '()!=' → logprob: -13.376532554626465
    8. ']!=' → logprob: -14.126532554626465
    9. ']' → logprob: -14.751532554626465
    10. '）' → logprob: -14.751532554626465

Token 473: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.003230948466807604
    2. ' !=' → logprob: -6.378231048583984
    3. '()!=' → logprob: -6.503231048583984
    4. ')!=' → logprob: -10.878231048583984
    5. ']!=' → logprob: -12.003231048583984
    6. '()' → logprob: -13.378231048583984
    7. '!==' → logprob: -13.753231048583984
    8. '!=(' → logprob: -14.253231048583984
    9. '   ' → logprob: -15.628231048583984
    10. '```' → logprob: -15.753231048583984

Token 474: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -3.5597102396423e-05
    2. ' find' → logprob: -10.250035285949707
    3. '(find' → logprob: -16.500036239624023
    4. '   ' → logprob: -16.875036239624023
    5. '	find' → logprob: -19.750036239624023
    6. '=find' → logprob: -20.125036239624023
    7. '  ' → logprob: -21.125036239624023
    8. '
' → logprob: -21.875036239624023
    9. '.find' → logprob: -22.500036239624023
    10. ')find' → logprob: -22.750036239624023

Token 475: '(A' (ID: 10706)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.004356179386377335
    2. '(sorted' → logprob: -6.004356384277344
    3. '(' → logprob: -6.629356384277344
    4. '(find' → logprob: -8.129356384277344
    5. 'i' → logprob: -9.379356384277344
    6. 'sorted' → logprob: -10.004356384277344
    7. ' (' → logprob: -10.629356384277344
    8. '(N' → logprob: -10.754356384277344
    9. '(s' → logprob: -10.879356384277344
    10. '((' → logprob: -11.129356384277344

Token 476: '.index' (ID: 9736)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.41693443059921265
    2. 'i' → logprob: -2.1669344902038574
    3. '[i' → logprob: -2.1669344902038574
    4. '(sorted' → logprob: -3.0419344902038574
    5. 'sorted' → logprob: -3.6669344902038574
    6. ')' → logprob: -4.541934490203857
    7. ' i' → logprob: -5.166934490203857
    8. '(' → logprob: -5.791934490203857
    9. 'index' → logprob: -6.041934490203857
    10. '[' → logprob: -6.291934490203857

Token 477: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -12.87500286102295
    3. 'sorted' → logprob: -15.50000286102295
    4. '(sort' → logprob: -16.250003814697266
    5. ' (' → logprob: -16.250003814697266
    6. '(s' → logprob: -17.250003814697266
    7. '(i' → logprob: -17.250003814697266
    8. '((' → logprob: -18.500003814697266
    9. ')(' → logprob: -19.125003814697266
    10. ' sorted' → logprob: -19.375003814697266

Token 478: '_A' (ID: 6829)
  Prédit: '(sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.006774465087801218
    2. '(i' → logprob: -5.756774425506592
    3. 'sorted' → logprob: -5.756774425506592
    4. '[i' → logprob: -8.00677490234375
    5. '(A' → logprob: -10.00677490234375
    6. '(' → logprob: -10.25677490234375
    7. 'A' → logprob: -12.75677490234375
    8. 'i' → logprob: -12.75677490234375
    9. '_sorted' → logprob: -12.75677490234375
    10. '[' → logprob: -13.38177490234375

Token 479: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03807259723544121
    2. '(i' → logprob: -3.2880725860595703
    3. 'i' → logprob: -10.91307258605957
    4. '[' → logprob: -11.66307258605957
    5. '(' → logprob: -13.16307258605957
    6. ' i' → logprob: -14.66307258605957
    7. ')' → logprob: -15.03807258605957
    8. '([' → logprob: -15.03807258605957
    9. ')[' → logprob: -15.41307258605957
    10. '```' → logprob: -15.41307258605957

Token 480: '])):
' (ID: 145266)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.31532371044158936
    2. '))' → logprob: -2.190323829650879
    3. ']))' → logprob: -2.690323829650879
    4. ')):
' → logprob: -3.190323829650879
    5. ']):' → logprob: -3.565323829650879
    6. '])):
' → logprob: -4.440323829650879
    7. ')' → logprob: -5.690323829650879
    8. '):' → logprob: -6.065323829650879
    9. ']):
' → logprob: -6.815323829650879
    10. '])' → logprob: -7.065323829650879

Token 481: '       ' (ID: 309)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5913061499595642
    2. ':' → logprob: -0.8413061499595642
    3. '       ' → logprob: -4.591306209564209
    4. '   ' → logprob: -5.466306209564209
    5. 'print' → logprob: -7.841306209564209
    6. '):
' → logprob: -8.59130573272705
    7. ':return' → logprob: -8.96630573272705
    8. ' print' → logprob: -9.71630573272705
    9. '):' → logprob: -10.34130573272705
    10. '```' → logprob: -11.09130573272705

Token 482: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.0948158382670954e-05
    2. '   ' → logprob: -11.375030517578125
    3. '
' → logprob: -11.500030517578125
    4. '```' → logprob: -12.250030517578125
    5. ' print' → logprob: -12.500030517578125
    6. '       ' → logprob: -14.375030517578125
    7. '           ' → logprob: -16.375030517578125
    8. '    
' → logprob: -16.750030517578125
    9. '``' → logprob: -17.000030517578125
    10. '	print' → logprob: -17.500030517578125

Token 483: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.006241010967642069
    2. '"No' → logprob: -5.3812408447265625
    3. '"' → logprob: -6.8812408447265625
    4. 'No' → logprob: -7.7562408447265625
    5. '('' → logprob: -9.006240844726562
    6. '(' → logprob: -11.256240844726562
    7. 'NO' → logprob: -11.506240844726562
    8. '(No' → logprob: -11.756240844726562
    9. '(NO' → logprob: -12.006240844726562
    10. '“No' → logprob: -13.506240844726562

Token 484: '0' (ID: 15)
  Prédit: '"No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"No' → logprob: -0.0756697878241539
    2. '"' → logprob: -2.825669765472412
    3. 'No' → logprob: -4.325669765472412
    4. 'NO' → logprob: -8.20067024230957
    5. '"N' → logprob: -10.20067024230957
    6. '“No' → logprob: -10.32567024230957
    7. ''' → logprob: -10.57567024230957
    8. '-' → logprob: -12.45067024230957
    9. '-No' → logprob: -13.32567024230957
    10. 'Impossible' → logprob: -13.45067024230957

Token 485: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04885486140847206
    2. ')' → logprob: -3.0488548278808594
    3. '   ' → logprob: -9.17385482788086
    4. '       ' → logprob: -9.29885482788086
    5. ')return' → logprob: -10.17385482788086
    6. ' )
' → logprob: -11.29885482788086
    7. ')
' → logprob: -11.54885482788086
    8. '
' → logprob: -12.54885482788086
    9. ')`
' → logprob: -12.79885482788086
    10. '')
' → logprob: -14.04885482788086

Token 486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.961759259458631e-06
    2. '   ' → logprob: -13.000004768371582
    3. 'else' → logprob: -13.625004768371582
    4. '           ' → logprob: -14.875004768371582
    5. '
' → logprob: -15.250004768371582
    6. 'print' → logprob: -15.625004768371582
    7. '<|end|>' → logprob: -15.875004768371582
    8. '        
' → logprob: -16.3750057220459
    9. '```' → logprob: -16.3750057220459
    10. '0' → logprob: -17.0000057220459

Token 487: ' exit' (ID: 10654)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04327263683080673
    2. 'exit' (adapté à ' exit') → logprob: -3.5432727336883545
    3. '
' → logprob: -4.543272495269775
    4. ' exit' → logprob: -6.668272495269775
    5. '        
' → logprob: -7.543272495269775
    6. '	exit' → logprob: -7.918272495269775
    7. 'sys' → logprob: -8.168272972106934
    8. ' sys' → logprob: -9.418272972106934
    9. '   ' → logprob: -9.543272972106934
    10. '```' → logprob: -10.043272972106934

Token 488: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.030647555366158485
    2. '(' → logprob: -3.5306475162506104
    3. '()
' → logprob: -7.0306477546691895
    4. '0' → logprob: -12.405647277832031
    5. '()\' → logprob: -13.030647277832031
    6. '()

' → logprob: -13.155647277832031
    7. '()(' → logprob: -13.405647277832031
    8. '()`' → logprob: -14.030647277832031
    9. '())' → logprob: -14.155647277832031
    10. ' ()' → logprob: -15.405647277832031

Token 489: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -14.750000953674316
    3. ' print' → logprob: -16.25
    4. '```' → logprob: -17.25
    5. '
' → logprob: -19.375
    6. '0' → logprob: -20.625
    7. '2' → logprob: -21.125
    8. '    
' → logprob: -21.625
    9. '<|end|>' → logprob: -22.0
    10. '``' → logprob: -22.0

Token 490: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. '1' → logprob: -14.000000953674316
    3. ' (' → logprob: -17.625
    4. '(
' → logprob: -18.5
    5. '("' → logprob: -19.25
    6. '()' → logprob: -21.625
    7. '```' → logprob: -22.0
    8. '('' → logprob: -22.25
    9. '((' → logprob: -22.25
    10. '(True' → logprob: -22.625

Token 491: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '100' → logprob: -20.25
    4. '"' → logprob: -20.5
    5. ')' → logprob: -21.0
    6. '   ' → logprob: -22.875
    7. '
' → logprob: -23.0
    8. '１' → logprob: -23.375
    9. '`' → logprob: -24.25
    10. '(' → logprob: -24.25

Token 492: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.375000953674316
    3. ')
' → logprob: -14.625000953674316
    4. '())' → logprob: -16.500001907348633
    5. '))' → logprob: -17.875001907348633
    6. '()' → logprob: -18.250001907348633
    7. ')`' → logprob: -18.750001907348633
    8. '```' → logprob: -19.500001907348633
    9. '）' → logprob: -19.750001907348633
    10. '')' → logprob: -19.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 490
Tokens correctement prédits (1ère position, stricte): 193
Tokens correctement prédits (1ère position, avec adaptation): 216
Tokens correctement prédits (top 10): 418
Précision stricte (1ère position): 39.39%
Précision adaptée (1ère position): 44.08%
Précision (top 10): 85.31%
================================================================================
