================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:12:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Lecture des entrées
a, b = map(int, input().split())  # nouveau créneau à réserver
N = int(input())  # nombre de réservations existantes

reservations = []
for _ in range(N):
    s, f = map(int, input().split())
    reservations.append((s, f))

# Fonction pour vérifier si deux intervalles se chevauchent
# On considère que deux intervals [a, b) et [s, f) se chevauchent si
# ils ont une intersection stricte.
# Notons que la coïncidence d'extrémités n'est pas un chevauchement.
def est_chevauchement(a, b, s, f):
    # Pas de chevauchement si intervalle 1 fini avant début intervalle 2
    # ou intervalle 2 fini avant début intervalle 1
    if b <= s or f <= a:
        return False
    return True

# Vérification de chevauchement avec chaque réservation existante
for (s_i, f_i) in reservations:
    if est_chevauchement(a, b, s_i, f_i):
        print(1)
        break
else:
    # Si aucune réservation ne chevauche
    print(0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Lecture' (ID: 106534)
  → Token d'amorce (pas de prédiction)

Token 2: ' des' (ID: 731)
  → Token d'amorce (pas de prédiction)

Token 3: ' entr' (ID: 7072)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.000803672184702009
    2. ' d' → logprob: -8.50080394744873
    3. ' des' → logprob: -8.62580394744873
    4. '_' → logprob: -8.75080394744873
    5. ' :' → logprob: -9.37580394744873
    6. ' #' → logprob: -10.25080394744873
    7. 's' → logprob: -10.62580394744873
    8. ''' → logprob: -10.87580394744873
    9. ' du' → logprob: -11.00080394744873
    10. ' ,' → logprob: -11.25080394744873

Token 4: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.004757034592330456
    2. 'ée' → logprob: -5.504756927490234
    3. 'és' → logprob: -7.504756927490234
    4. 'é' → logprob: -9.254756927490234
    5. 'ees' → logprob: -11.129756927490234
    6. 'êtes' → logprob: -11.504756927490234
    7. 'es' → logprob: -13.379756927490234
    8. '#' → logprob: -13.629756927490234
    9. 'ès' → logprob: -13.754756927490234
    10. 'etes' → logprob: -14.379756927490234

Token 5: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.246516227722168
    2. '#' → logprob: -1.996516227722168
    3. 'input' → logprob: -2.121516227722168
    4. '```' → logprob: -2.121516227722168
    5. ':' → logprob: -2.371516227722168
    6. 'inputs' → logprob: -2.871516227722168
    7. 's' → logprob: -2.996516227722168
    8. 'user' → logprob: -3.371516227722168
    9. '\n' → logprob: -4.496516227722168
    10. '=' → logprob: -4.621516227722168

Token 6: 'a' (ID: 64)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.12746693193912506
    2. 'input' → logprob: -3.627466917037964
    3. 'inputs' → logprob: -3.877466917037964
    4. '_' → logprob: -4.002467155456543
    5. 's' → logprob: -4.252467155456543
    6. ' user' → logprob: -5.002467155456543
    7. '```' → logprob: -5.252467155456543
    8. 'n' → logprob: -5.502467155456543
    9. ' =' → logprob: -5.877467155456543
    10. ':' → logprob: -6.002467155456543

Token 7: ',' (ID: 11)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7469533085823059
    2. ' =' → logprob: -1.4969532489776611
    3. '=' → logprob: -1.7469532489776611
    4. 'rg' → logprob: -2.996953248977661
    5. ' ' → logprob: -3.621953248977661
    6. '.' → logprob: -3.746953248977661
    7. ',' → logprob: -4.49695348739624
    8. '[' → logprob: -4.99695348739624
    9. 'p' → logprob: -6.49695348739624
    10. 'i' → logprob: -6.49695348739624

Token 8: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.355560839176178
    2. ' ' → logprob: -1.7305607795715332
    3. 'b' → logprob: -2.105560779571533
    4. ' =' → logprob: -8.730561256408691
    5. 'space' → logprob: -10.730561256408691
    6. '_' → logprob: -10.855561256408691
    7. '=' → logprob: -10.980561256408691
    8. ' space' → logprob: -11.855561256408691
    9. '  ' → logprob: -11.980561256408691
    10. ',' → logprob: -12.105561256408691

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14820465445518494
    2. ',' → logprob: -2.5232045650482178
    3. '=' → logprob: -2.8982045650482178
    4. ' ,' → logprob: -6.148204803466797
    5. ' ' → logprob: -9.148204803466797
    6. '<|end|>' → logprob: -9.773204803466797
    7. ')' → logprob: -10.273204803466797
    8. '[' → logprob: -11.273204803466797
    9. '.' → logprob: -11.273204803466797
    10. 's' → logprob: -11.898204803466797

Token 10: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.34224340319633484
    2. ' input' → logprob: -1.5922434329986572
    3. 'map' → logprob: -2.8422434329986572
    4. 'input' → logprob: -3.5922434329986572
    5. ' list' → logprob: -7.967243194580078
    6. ' ' → logprob: -9.842243194580078
    7. ' int' → logprob: -10.217243194580078
    8. 'int' → logprob: -10.717243194580078
    9. 'list' → logprob: -10.717243194580078
    10. ' [' → logprob: -10.967243194580078

Token 11: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.09934215992689133
    2. '(' → logprob: -2.724342107772827
    3. '(str' → logprob: -3.599342107772827
    4. '(lambda' → logprob: -6.599342346191406
    5. 'int' → logprob: -9.474342346191406
    6. '(input' → logprob: -9.724342346191406
    7. '(
' → logprob: -10.724342346191406
    8. '<int' → logprob: -10.724342346191406
    9. '[int' → logprob: -10.974342346191406
    10. 'str' → logprob: -10.974342346191406

Token 12: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.27443400025367737
    2. 'input' → logprob: -1.649433970451355
    3. ')' → logprob: -3.1494340896606445
    4. ' input' → logprob: -5.7744340896606445
    5. '(' → logprob: -6.8994340896606445
    6. ',input' → logprob: -7.3994340896606445
    7. ',' → logprob: -9.274434089660645
    8. '=input' → logprob: -10.149434089660645
    9. '[input' → logprob: -10.399434089660645
    10. ')(' → logprob: -10.899434089660645

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07891501486301422
    2. ' input' → logprob: -2.5789151191711426
    3. ')' → logprob: -11.078914642333984
    4. '(input' → logprob: -11.703914642333984
    5. '=input' → logprob: -14.453914642333984
    6. ',input' → logprob: -14.953914642333984
    7. ' )' → logprob: -15.078914642333984
    8. '	input' → logprob: -15.953914642333984
    9. ' ' → logprob: -16.078914642333984
    10. '[input' → logprob: -16.953914642333984

Token 14: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2511250078678131
    2. '('' → logprob: -2.5011250972747803
    3. '())' → logprob: -2.6261250972747803
    4. '(' → logprob: -2.8761250972747803
    5. '("")' → logprob: -5.626124858856201
    6. '("' → logprob: -6.001124858856201
    7. '(""))' → logprob: -6.876124858856201
    8. '().' → logprob: -7.001124858856201
    9. ')' → logprob: -7.376124858856201
    10. '());' → logprob: -7.501124858856201

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.85104202805087e-05
    2. 'strip' → logprob: -9.500078201293945
    3. ' split' → logprob: -13.000078201293945
    4. 'rstrip' → logprob: -13.750078201293945
    5. '(split' → logprob: -15.750078201293945
    6. 'spl' → logprob: -16.750078201293945
    7. 's' → logprob: -19.125078201293945
    8. ')' → logprob: -19.125078201293945
    9. 'read' → logprob: -19.500078201293945
    10. '```' → logprob: -20.000078201293945

Token 16: '())' (ID: 3516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.037987206131219864
    2. '())' → logprob: -3.787987232208252
    3. '))' → logprob: -4.287987232208252
    4. '()' → logprob: -7.912987232208252
    5. '(' → logprob: -8.662986755371094
    6. '')' → logprob: -9.162986755371094
    7. '('' → logprob: -9.537986755371094
    8. '()))' → logprob: -9.787986755371094
    9. '`)' → logprob: -9.912986755371094
    10. ' )' → logprob: -11.537986755371094

Token 17: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12306074798107147
    2. '*' → logprob: -2.623060703277588
    3. '#' → logprob: -3.998060703277588
    4. '+
' → logprob: -5.248060703277588
    5. '<|end|>' → logprob: -5.373060703277588
    6. ',' → logprob: -5.498060703277588
    7. '\n' → logprob: -5.998060703277588
    8. ' ' → logprob: -6.248060703277588
    9. '\' → logprob: -6.498060703277588
    10. ')' → logprob: -6.498060703277588

Token 18: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0755608081817627
    2. '*' → logprob: -3.3255608081817627
    3. '#' → logprob: -3.5755608081817627
    4. ',' → logprob: -6.200560569763184
    5. '+
' → logprob: -6.450560569763184
    6. '<|end|>' → logprob: -6.825560569763184
    7. ')' → logprob: -6.950560569763184
    8. '-' → logprob: -7.575560569763184
    9. '
' → logprob: -7.825560569763184
    10. ' ' → logprob: -7.825560569763184

Token 19: ' nouveau' (ID: 23184)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10853234678506851
    2. 'a' → logprob: -2.858532428741455
    3. '+' → logprob: -4.483532428741455
    4. ' a' → logprob: -4.608532428741455
    5. '#' → logprob: -5.483532428741455
    6. 'input' → logprob: -6.108532428741455
    7. ' input' → logprob: -6.608532428741455
    8. ' b' → logprob: -6.608532428741455
    9. ')' → logprob: -6.733532428741455
    10. ' +' → logprob: -6.858532428741455

Token 20: ' cré' (ID: 12201)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2630341053009033
    2. ')' → logprob: -1.6380341053009033
    3. '*' → logprob: -2.1380341053009033
    4. '<|end|>' → logprob: -2.1380341053009033
    5. ',' → logprob: -2.2630341053009033
    6. '#' → logprob: -2.5130341053009033
    7. ' ' → logprob: -3.5130341053009033
    8. '
' → logprob: -3.7630341053009033
    9. '+
' → logprob: -5.263033866882324
    10. '=' → logprob: -5.263033866882324

Token 21: 'neau' (ID: 176715)
  Prédit: 'dit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dit' → logprob: -0.8593411445617676
    2. 'neau' → logprob: -1.4843411445617676
    3. 'd' → logprob: -1.7343411445617676
    4. 'di' → logprob: -3.2343411445617676
    5. 'é' → logprob: -3.6093411445617676
    6. 'er' → logprob: -3.6093411445617676
    7. 'a' → logprob: -3.7343411445617676
    8. 'ate' → logprob: -4.359341144561768
    9. 'ateur' → logprob: -4.484341144561768
    10. 'ation' → logprob: -4.609341144561768

Token 22: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: ' réserver' (ID: 166449)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -1.036830186843872
    2. ' ajouter' → logprob: -1.911830186843872
    3. ' programmer' → logprob: -3.036830186843872
    4. 'j' → logprob: -3.036830186843872
    5. ' réserver' → logprob: -3.036830186843872
    6. ' vérifier' → logprob: -3.161830186843872
    7. 's' → logprob: -3.911830186843872
    8. ' prendre' → logprob: -3.911830186843872
    9. ' considérer' → logprob: -4.036829948425293
    10. ' créer' → logprob: -4.036829948425293

Token 24: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: 'N' (ID: 45)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4883531928062439
    2. '#' → logprob: -2.3633532524108887
    3. '
' → logprob: -2.3633532524108887
    4. 'if' → logprob: -3.7383532524108887
    5. 'a' → logprob: -4.113353252410889
    6. '<|end|>' → logprob: -4.113353252410889
    7. ' 
' → logprob: -4.238353252410889
    8. '\n' → logprob: -4.238353252410889
    9. '  
' → logprob: -4.363353252410889
    10. ' ' → logprob: -4.363353252410889

Token 26: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6094018816947937
    2. ' =' → logprob: -1.6094019412994385
    3. '<|end|>' → logprob: -1.6094019412994385
    4. ')' → logprob: -4.234401702880859
    5. ',' → logprob: -4.484401702880859
    6. 'ext' → logprob: -4.984401702880859
    7. '_' → logprob: -5.109401702880859
    8. '>' → logprob: -5.734401702880859
    9. '<|end|>' → logprob: -6.234401702880859
    10. '=int' → logprob: -6.484401702880859

Token 27: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.34882852435112
    2. 'int' → logprob: -1.2238285541534424
    3. ' ' → logprob: -8.598828315734863
    4. '10' → logprob: -9.348828315734863
    5. '  ' → logprob: -10.473828315734863
    6. '5' → logprob: -10.473828315734863
    7. '20' → logprob: -11.973828315734863
    8. '3' → logprob: -12.223828315734863
    9. '7' → logprob: -12.223828315734863
    10. '0' → logprob: -12.473828315734863

Token 28: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0380457378923893
    2. '(' → logprob: -3.288045644760132
    3. 'input' → logprob: -12.913045883178711
    4. ' (' → logprob: -14.663045883178711
    5. '(
' → logprob: -14.788045883178711
    6. '()' → logprob: -15.163045883178711
    7. '(in' → logprob: -15.163045883178711
    8. '(

' → logprob: -16.16304588317871
    9. ',input' → logprob: -16.16304588317871
    10. '=input' → logprob: -16.41304588317871

Token 29: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16031226515769958
    2. '()' → logprob: -1.910312294960022
    3. ')' → logprob: -9.66031265258789
    4. ' ())' → logprob: -11.03531265258789
    5. '().' → logprob: -13.41031265258789
    6. '();)' → logprob: -13.53531265258789
    7. '())
' → logprob: -13.78531265258789
    8. '()))' → logprob: -14.03531265258789
    9. '(' → logprob: -14.16031265258789
    10. '()]' → logprob: -14.41031265258789

Token 30: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6842713356018066
    2. '<|end|>' → logprob: -0.9342713356018066
    3. '\n' → logprob: -3.5592713356018066
    4. ' ' → logprob: -3.8092713356018066
    5. 'for' → logprob: -4.684271335601807
    6. '  
' → logprob: -4.809271335601807
    7. '' → logprob: -5.059271335601807
    8. '<|end|>' → logprob: -5.184271335601807
    9. '```' → logprob: -5.309271335601807
    10. ' 
' → logprob: -5.434271335601807

Token 31: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2458155155181885
    2. '\n' → logprob: -1.3708155155181885
    3. '#' → logprob: -2.2458155155181885
    4. ' ' → logprob: -2.6208155155181885
    5. '<|end|>' → logprob: -2.7458155155181885
    6. ' for' → logprob: -3.6208155155181885
    7. '```' → logprob: -3.6208155155181885
    8. '\' → logprob: -3.6208155155181885
    9. 'r' → logprob: -3.9958155155181885
    10. '' → logprob: -4.120815277099609

Token 32: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04665996879339218
    2. '<|end|>' → logprob: -3.7966599464416504
    3. ' nombre' → logprob: -4.67165994644165
    4. 'nombre' → logprob: -5.92165994644165
    5. ' cré' → logprob: -6.79665994644165
    6. ' for' → logprob: -6.79665994644165
    7. '  ' → logprob: -6.79665994644165
    8. ' ' → logprob: -7.67165994644165
    9. '<|end|>' → logprob: -7.73415994644165
    10. 'range' → logprob: -7.98415994644165

Token 33: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' réserv' (ID: 74951)
  Prédit: 'cré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cré' → logprob: -0.42254704236984253
    2. ' cré' → logprob: -1.1725471019744873
    3. ' réserv' → logprob: -4.797546863555908
    4. '```' → logprob: -4.922546863555908
    5. ' plages' → logprob: -5.672546863555908
    6. ' ' → logprob: -5.797546863555908
    7. 'cr' → logprob: -5.922546863555908
    8. 's' → logprob: -6.297546863555908
    9. 'c' → logprob: -7.047546863555908
    10. ' disponibil' → logprob: -7.172546863555908

Token 35: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.036915503442287445
    2. 'erv' → logprob: -3.5369155406951904
    3. 'es' → logprob: -5.411915302276611
    4. 'érations' → logprob: -6.911915302276611
    5. 'erves' → logprob: -8.28691577911377
    6. 'a' → logprob: -8.28691577911377
    7. 'ation' → logprob: -8.66191577911377
    8. 'ervation' → logprob: -8.78691577911377
    9. 'v' → logprob: -9.41191577911377
    10. ' at' → logprob: -9.41191577911377

Token 36: ' exist' (ID: 4310)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9669768214225769
    2. '<|end|>' → logprob: -1.2169768810272217
    3. 'reserv' → logprob: -1.9669768810272217
    4. '```' → logprob: -3.3419768810272217
    5. 'r' → logprob: -3.5919768810272217
    6. '\n' → logprob: -3.7169768810272217
    7. 'for' → logprob: -3.9669768810272217
    8. 's' → logprob: -4.216976642608643
    9. ' ' → logprob: -4.966976642608643
    10. ' for' → logprob: -4.966976642608643

Token 37: 'antes' (ID: 5193)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.43252718448638916
    2. 'ies' → logprob: -1.8075271844863892
    3. 'es' → logprob: -2.0575270652770996
    4. 'ues' → logprob: -2.9325270652770996
    5. 'ees' → logprob: -6.4325270652771
    6. 'é' → logprob: -6.5575270652771
    7. 'u' → logprob: -6.8075270652771
    8. 'antes' → logprob: -6.8075270652771
    9. 'e' → logprob: -8.432527542114258
    10. 'és' → logprob: -8.932527542114258

Token 38: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.708978533744812
    2. '<|end|>' → logprob: -0.958978533744812
    3. '\n' → logprob: -2.8339786529541016
    4. 'for' → logprob: -4.083978652954102
    5. '<|end|>' → logprob: -4.083978652954102
    6. 'n' → logprob: -4.833978652954102
    7. ' for' → logprob: -4.833978652954102
    8. '  
' → logprob: -5.583978652954102
    9. '```' → logprob: -5.958978652954102
    10. 'newline' → logprob: -6.583978652954102

Token 39: 'reserv' (ID: 130760)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13918398320674896
    2. 'r' → logprob: -3.38918399810791
    3. 'reserv' → logprob: -3.51418399810791
    4. '\n' → logprob: -3.63918399810791
    5. 'for' → logprob: -4.13918399810791
    6. 'n' → logprob: -5.38918399810791
    7. 's' → logprob: -5.63918399810791
    8. '' → logprob: -5.76418399810791
    9. '```' → logprob: -5.88918399810791
    10. ' 
' → logprob: -6.76418399810791

Token 40: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.0013080945936962962
    2. 'es' → logprob: -6.751307964324951
    3. 'ation' → logprob: -9.62630844116211
    4. 'ed' → logprob: -10.12630844116211
    5. 'a' → logprob: -11.12630844116211
    6. 'ées' → logprob: -12.50130844116211
    7. 'e' → logprob: -12.62630844116211
    8. 'ons' → logprob: -12.62630844116211
    9. 'ees' → logprob: -13.62630844116211
    10. 'er' → logprob: -13.75130844116211

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00601992616429925
    2. '=' → logprob: -5.1310200691223145
    3. '=[]' → logprob: -10.256019592285156
    4. '.' → logprob: -10.881019592285156
    5. 's' → logprob: -11.756019592285156
    6. '_' → logprob: -11.881019592285156
    7. '[' → logprob: -12.006019592285156
    8. '.append' → logprob: -12.381019592285156
    9. '[:]' → logprob: -12.381019592285156
    10. '[]' → logprob: -12.756019592285156

Token 42: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.015194768086075783
    2. '[' → logprob: -4.890194892883301
    3. ' []' → logprob: -4.890194892883301
    4. ' [' → logprob: -11.0151948928833
    5. '[int' → logprob: -11.6401948928833
    6. '[]
' → logprob: -12.5151948928833
    7. '[],' → logprob: -13.7651948928833
    8. '[]=' → logprob: -13.8901948928833
    9. '[]}' → logprob: -14.0151948928833
    10. '[list' → logprob: -14.0151948928833

Token 43: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00045474470243789256
    2. ' for' → logprob: -7.750454902648926
    3. '
' → logprob: -11.625454902648926
    4. '\n' → logprob: -11.625454902648926
    5. '```' → logprob: -12.500454902648926
    6. '[' → logprob: -13.875454902648926
    7. '	for' → logprob: -15.000454902648926
    8. 'For' → logprob: -15.125454902648926
    9. '\' → logprob: -15.500454902648926
    10. '<|end|>' → logprob: -15.750454902648926

Token 44: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.01083969883620739
    2. '_' → logprob: -4.635839462280273
    3. ' i' → logprob: -7.260839462280273
    4. ' ' → logprob: -7.885839462280273
    5. ' ' → logprob: -13.260839462280273
    6. 'i' → logprob: -13.885839462280273
    7. '_i' → logprob: -14.010839462280273
    8. ' range' → logprob: -14.510839462280273
    9. ' ‌' → logprob: -15.260839462280273
    10. ' _
' → logprob: -17.260839462280273

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10083550214767456
    2. 'in' → logprob: -2.3508355617523193
    3. ' ' → logprob: -7.97583532333374
    4. '_' → logprob: -8.600835800170898
    5. '<|end|>' → logprob: -10.975835800170898
    6. 'n' → logprob: -11.350835800170898
    7. ' _' → logprob: -11.350835800170898
    8. 'i' → logprob: -11.475835800170898
    9. 'range' → logprob: -11.725835800170898
    10. '```' → logprob: -12.225835800170898

Token 46: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858986660838127
    2. ' range' → logprob: -3.0485899448394775
    3. '	range' → logprob: -14.173589706420898
    4. 'rang' → logprob: -14.548589706420898
    5. '_' → logprob: -15.298589706420898
    6. ' ' → logprob: -15.423589706420898
    7. '```' → logprob: -15.798589706420898
    8. '(range' → logprob: -15.798589706420898
    9. 'a' → logprob: -15.923589706420898
    10. '_range' → logprob: -15.923589706420898

Token 47: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2632407546043396
    2. ' (' → logprob: -1.5132408142089844
    3. ' ' → logprob: -5.638240814208984
    4. ' range' → logprob: -5.888240814208984
    5. ' N' → logprob: -6.388240814208984
    6. '(N' → logprob: -6.888240814208984
    7. '(range' → logprob: -7.138240814208984
    8. '(
' → logprob: -8.138240814208984
    9. '(n' → logprob: -8.388240814208984
    10. '(int' → logprob: -8.388240814208984

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.034850530326366425
    2. ')' → logprob: -3.659850597381592
    3. '):
' → logprob: -4.909850597381592
    4. ':' → logprob: -7.159850597381592
    5. ' ):' → logprob: -8.034850120544434
    6. ' )' → logprob: -11.159850120544434
    7. ' ):
' → logprob: -12.284850120544434
    8. ',' → logprob: -12.784850120544434
    9. '):
' → logprob: -13.034850120544434
    10. ')**' → logprob: -13.159850120544434

Token 49: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.0285602807998657
    2. '   ' → logprob: -1.2785602807998657
    3. ' reservations' → logprob: -1.7785602807998657
    4. '    
' → logprob: -1.9035602807998657
    5. '    ' → logprob: -4.153560161590576
    6. '     
' → logprob: -4.653560161590576
    7. ' reservation' → logprob: -5.028560161590576
    8. ' s' → logprob: -5.528560161590576
    9. ' ' → logprob: -6.028560161590576
    10. '  
' → logprob: -6.153560161590576

Token 50: ' s' (ID: 265)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.41767555475234985
    2. 's' (adapté à ' s') → logprob: -1.792675495147705
    3. ' start' → logprob: -2.542675495147705
    4. 'a' → logprob: -4.167675495147705
    5. 'x' → logprob: -4.292675495147705
    6. ' s' → logprob: -4.417675495147705
    7. 'r' → logprob: -4.417675495147705
    8. 'c' → logprob: -4.667675495147705
    9. 't' → logprob: -5.167675495147705
    10. 'reservation' → logprob: -5.417675495147705

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009944729506969452
    2. ' ,' → logprob: -4.759944915771484
    3. 't' → logprob: -7.134944915771484
    4. ',e' → logprob: -8.384944915771484
    5. ',t' → logprob: -9.134944915771484
    6. ',a' → logprob: -10.509944915771484
    7. ',start' → logprob: -10.634944915771484
    8. ',s' → logprob: -10.884944915771484
    9. ',_' → logprob: -11.134944915771484
    10. ',...' → logprob: -11.134944915771484

Token 52: ' f' (ID: 285)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00723022036254406
    2. ' e' → logprob: -5.007230281829834
    3. 't' → logprob: -7.757230281829834
    4. 'f' → logprob: -9.882229804992676
    5. ' t' → logprob: -11.007229804992676
    6. 'd' → logprob: -11.007229804992676
    7. ' f' → logprob: -13.882229804992676
    8. '	e' → logprob: -14.257229804992676
    9. ' ' → logprob: -14.382229804992676
    10. '_e' → logprob: -15.007229804992676

Token 53: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519335150718689
    2. ' =' → logprob: -1.5019335746765137
    3. ',' → logprob: -13.251933097839355
    4. ' ' → logprob: -13.626933097839355
    5. '=int' → logprob: -14.376933097839355
    6. ')' → logprob: -15.126933097839355
    7. '_' → logprob: -15.876933097839355
    8. '=input' → logprob: -16.001934051513672
    9. '  ' → logprob: -16.751934051513672
    10. '<|end|>' → logprob: -17.001934051513672

Token 54: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0036022020503878593
    2. 'map' → logprob: -5.628602027893066
    3. '	map' → logprob: -13.503602027893066
    4. ' ' → logprob: -15.003602027893066
    5. ' ' → logprob: -15.378602027893066
    6. '(map' → logprob: -16.753602981567383
    7. ' mapa' → logprob: -16.753602981567383
    8. '   ' → logprob: -17.253602981567383
    9. '.map' → logprob: -17.253602981567383
    10. '    ' → logprob: -18.253602981567383

Token 55: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3142344057559967
    2. '(' → logprob: -1.3142343759536743
    3. '(
' → logprob: -8.189234733581543
    4. '<int' → logprob: -8.564234733581543
    5. '(str' → logprob: -8.689234733581543
    6. '<|end|>' → logprob: -9.564234733581543
    7. ' (' → logprob: -9.689234733581543
    8. '(input' → logprob: -9.939234733581543
    9. '(

' → logprob: -10.189234733581543
    10. '(uint' → logprob: -11.439234733581543

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003971839905716479
    2. ',input' → logprob: -7.875397205352783
    3. ' ,' → logprob: -11.750396728515625
    4. '(),' → logprob: -12.125396728515625
    5. ',int' → logprob: -13.875396728515625
    6. '(' → logprob: -13.875396728515625
    7. '(input' → logprob: -15.000396728515625
    8. '‌,' → logprob: -15.250396728515625
    9. ')' → logprob: -15.375396728515625
    10. '```' → logprob: -15.750396728515625

Token 57: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759404897689819
    2. ' input' → logprob: -0.8259404897689819
    3. ')' → logprob: -15.325940132141113
    4. '=input' → logprob: -15.575940132141113
    5. ' ' → logprob: -15.700940132141113
    6. '	input' → logprob: -15.825940132141113
    7. ',input' → logprob: -16.32594108581543
    8. ' ' → logprob: -16.95094108581543
    9. '(input' → logprob: -17.07594108581543
    10. '<input' → logprob: -17.07594108581543

Token 58: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.6312321753939614e-05
    2. '()' → logprob: -10.375036239624023
    3. ')' → logprob: -12.750036239624023
    4. '.' → logprob: -14.375036239624023
    5. ').' → logprob: -14.750036239624023
    6. '(' → logprob: -14.750036239624023
    7. ' ().' → logprob: -15.000036239624023
    8. ' ' → logprob: -15.750036239624023
    9. '>().' → logprob: -16.250036239624023
    10. '   ' → logprob: -16.500036239624023

Token 59: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. 'strip' → logprob: -16.875
    3. ' split' → logprob: -18.125
    4. '(split' → logprob: -19.125
    5. 'spl' → logprob: -20.125
    6. '.split' → logprob: -20.625
    7. 'rstrip' → logprob: -20.625
    8. 'plit' → logprob: -20.75
    9. ')' → logprob: -21.125
    10. '_split' → logprob: -22.875

Token 60: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.055079977959394455
    2. ')' → logprob: -3.055079936981201
    3. '()' → logprob: -5.055079936981201
    4. '))' → logprob: -10.05508041381836
    5. '()))' → logprob: -10.30508041381836
    6. '())
' → logprob: -11.18008041381836
    7. ' ())' → logprob: -13.68008041381836
    8. '(' → logprob: -14.05508041381836
    9. ' )' → logprob: -14.93008041381836
    10. '`)' → logprob: -15.05508041381836

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025010811164975166
    2. ')' → logprob: -3.775010824203491
    3. 'reserv' → logprob: -6.775010585784912
    4. '    
' → logprob: -8.27501106262207
    5. '<|end|>' → logprob: -8.65001106262207
    6. ' reservations' → logprob: -9.65001106262207
    7. '<|end|>' → logprob: -10.77501106262207
    8. '```' → logprob: -11.02501106262207
    9. ')
' → logprob: -11.27501106262207
    10. '),' → logprob: -11.27501106262207

Token 62: ' reservations' (ID: 51148)
  Prédit: 'reserv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reserv' → logprob: -0.39331379532814026
    2. '   ' → logprob: -1.5183137655258179
    3. ' reservations' → logprob: -2.2683138847351074
    4. ')' → logprob: -6.143313884735107
    5. '    
' → logprob: -8.39331340789795
    6. ' reservas' → logprob: -10.39331340789795
    7. '
' → logprob: -10.51831340789795
    8. 'reservation' → logprob: -10.64331340789795
    9. '<|end|>' → logprob: -10.64331340789795
    10. 'Reservations' → logprob: -10.76831340789795

Token 63: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011815387988463044
    2. '.' → logprob: -6.751181602478027
    3. '.extend' → logprob: -12.376181602478027
    4. '.app' → logprob: -13.251181602478027
    5. ' .' → logprob: -13.251181602478027
    6. '.Append' → logprob: -14.001181602478027
    7. ').' → logprob: -14.376181602478027
    8. 'append' → logprob: -14.626181602478027
    9. '.setdefault' → logprob: -14.876181602478027
    10. '.push' → logprob: -15.001181602478027

Token 64: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0005533903022296727
    2. '(' → logprob: -7.500553607940674
    3. '(s' → logprob: -15.375553131103516
    4. '(
' → logprob: -16.500553131103516
    5. '([' → logprob: -17.000553131103516
    6. ' ((' → logprob: -18.125553131103516
    7. '(((' → logprob: -18.375553131103516
    8. '(('' → logprob: -19.125553131103516
    9. '(f' → logprob: -19.250553131103516
    10. ' (' → logprob: -19.750553131103516

Token 65: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.8087270038668066e-05
    2. ' s' → logprob: -10.500027656555176
    3. ')' → logprob: -15.875027656555176
    4. '   ' → logprob: -15.875027656555176
    5. ' ' → logprob: -16.750028610229492
    6. '	s' → logprob: -17.375028610229492
    7. '(s' → logprob: -17.500028610229492
    8. '_s' → logprob: -17.625028610229492
    9. ''s' → logprob: -18.375028610229492
    10. '    ' → logprob: -18.625028610229492

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012023169983876869
    2. ',f' → logprob: -9.625120162963867
    3. ' ,' → logprob: -9.875120162963867
    4. ',
' → logprob: -13.125120162963867
    5. ',

' → logprob: -15.250120162963867
    6. ')' → logprob: -16.250120162963867
    7. '‌,' → logprob: -16.375120162963867
    8. ',)' → logprob: -16.375120162963867
    9. ',b' → logprob: -16.750120162963867
    10. '<|end|>' → logprob: -17.000120162963867

Token 67: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.12694165110588074
    2. ' f' → logprob: -2.126941680908203
    3. ' ' → logprob: -12.126941680908203
    4. ')' → logprob: -12.626941680908203
    5. ' ' → logprob: -13.001941680908203
    6. '   ' → logprob: -14.501941680908203
    7. '	f' → logprob: -14.814441680908203
    8. '    ' → logprob: -14.876941680908203
    9. ' )' → logprob: -15.189441680908203
    10. ',' → logprob: -16.126941680908203

Token 68: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023272383958101273
    2. ')' → logprob: -3.7732722759246826
    3. '))
' → logprob: -10.648272514343262
    4. ')))' → logprob: -13.773272514343262
    5. ' ))' → logprob: -14.023272514343262
    6. ')
' → logprob: -14.523272514343262
    7. '),' → logprob: -14.773272514343262
    8. '   ' → logprob: -16.398271560668945
    9. ''))' → logprob: -16.773271560668945
    10. ' )' → logprob: -17.148271560668945

Token 69: '#' (ID: 2)
  Prédit: 'reserv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reserv' → logprob: -0.6973733305931091
    2. '#' → logprob: -1.072373390197754
    3. 'for' → logprob: -1.947373390197754
    4. '```' → logprob: -4.447373390197754
    5. 'reserved' → logprob: -6.822373390197754
    6. 'valid' → logprob: -6.947373390197754
    7. 'a' → logprob: -7.322373390197754
    8. 'i' → logprob: -7.572373390197754
    9. 'new' → logprob: -7.572373390197754
    10. '
' → logprob: -8.072373390197754

Token 70: ' Fonction' (ID: 189149)
  Prédit: 'reserv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reserv' → logprob: -0.5051149129867554
    2. '#' → logprob: -1.1301149129867554
    3. 'reserved' → logprob: -3.255115032196045
    4. '```' → logprob: -4.505115032196045
    5. 'for' → logprob: -4.630115032196045
    6. 'a' → logprob: -5.255115032196045
    7. 'def' → logprob: -6.630115032196045
    8. 'new' → logprob: -6.880115032196045
    9. 'reservation' → logprob: -6.880115032196045
    10. ' reservations' → logprob: -7.130115032196045

Token 71: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00841078907251358
    2. ' def' → logprob: -4.883410930633545
    3. ')' → logprob: -8.508410453796387
    4. ' de' → logprob: -9.008410453796387
    5. ' ' → logprob: -9.383410453796387
    6. '```' → logprob: -9.508410453796387
    7. '<|end|>' → logprob: -9.883410453796387
    8. 's' → logprob: -10.258410453796387
    9. 'de' → logprob: -10.383410453796387
    10. ':' → logprob: -10.383410453796387

Token 72: ' vérifier' (ID: 93671)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6372913718223572
    2. ' vérifier' → logprob: -0.7622913718223572
    3. ' déterminer' → logprob: -6.512291431427002
    4. 'dé' → logprob: -7.512291431427002
    5. 'ver' → logprob: -7.637291431427002
    6. 'tr' → logprob: -7.887291431427002
    7. 'tester' → logprob: -8.637290954589844
    8. ' savoir' → logprob: -8.762290954589844
    9. 'ré' → logprob: -8.762290954589844
    10. 'aj' → logprob: -8.887290954589844

Token 73: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.8285483121871948
    2. ' la' → logprob: -1.0785483121871948
    3. 'si' → logprob: -1.9535483121871948
    4. 'la' → logprob: -3.0785484313964844
    5. ' if' → logprob: -4.953548431396484
    6. 's' → logprob: -5.078548431396484
    7. 'if' → logprob: -5.328548431396484
    8. 'l' → logprob: -5.453548431396484
    9. 'def' → logprob: -6.328548431396484
    10. '<|end|>' → logprob: -6.328548431396484

Token 74: ' deux' (ID: 10301)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.24249382317066193
    2. ' deux' → logprob: -2.3674938678741455
    3. ' le' → logprob: -2.8674938678741455
    4. 'de' → logprob: -4.367493629455566
    5. 'un' → logprob: -4.367493629455566
    6. ' les' → logprob: -4.867493629455566
    7. ' ' → logprob: -5.242493629455566
    8. ' une' → logprob: -5.367493629455566
    9. ' il' → logprob: -5.617493629455566
    10. 'le' → logprob: -5.867493629455566

Token 75: ' interv' (ID: 37413)
  Prédit: ' cré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cré' → logprob: -0.5538840889930725
    2. 'cré' → logprob: -0.9288840889930725
    3. 'cr' → logprob: -3.9288840293884277
    4. ' plages' → logprob: -5.303884029388428
    5. '```' → logprob: -6.553884029388428
    6. 'interval' → logprob: -6.928884029388428
    7. ' réserv' → logprob: -8.428884506225586
    8. ' ' → logprob: -8.428884506225586
    9. 'inter' → logprob: -8.428884506225586
    10. 'cre' → logprob: -8.428884506225586

Token 76: 'alles' (ID: 28825)
  Prédit: 'alles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alles' → logprob: -0.0023283136542886496
    2. 'al' → logprob: -6.877328395843506
    3. 'a' → logprob: -7.877328395843506
    4. 'ales' → logprob: -8.502327919006348
    5. 'alle' → logprob: -8.627327919006348
    6. 'als' → logprob: -9.002327919006348
    7. 'aux' → logprob: -9.252327919006348
    8. '#' → logprob: -9.627327919006348
    9. 'alls' → logprob: -10.127327919006348
    10. 'all' → logprob: -10.377327919006348

Token 77: ' se' (ID: 458)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.393812894821167
    2. ' se' → logprob: -1.893812894821167
    3. 'inter' → logprob: -3.393812894821167
    4. 'se' → logprob: -3.518812894821167
    5. ' overlap' → logprob: -3.893812894821167
    6. 'over' → logprob: -4.018813133239746
    7. '<|end|>' → logprob: -4.393813133239746
    8. ' ' → logprob: -4.518813133239746
    9. ' s' → logprob: -4.768813133239746
    10. ' overlapping' → logprob: -5.268813133239746

Token 78: ' chev' (ID: 127415)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.3144431710243225
    2. ' chev' → logprob: -2.0644431114196777
    3. 's' → logprob: -2.3144431114196777
    4. ' rec' → logprob: -4.314443111419678
    5. 'over' → logprob: -4.814443111419678
    6. 'rec' → logprob: -4.939443111419678
    7. 'ont' → logprob: -5.314443111419678
    8. 'c' → logprob: -5.814443111419678
    9. 'inter' → logprob: -7.189443111419678
    10. '```' → logprob: -7.314443111419678

Token 79: 'auch' (ID: 47120)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07937462627887726
    2. 'rch' → logprob: -3.0793745517730713
    3. 'rc' → logprob: -4.57937479019165
    4. 'rent' → logprob: -5.82937479019165
    5. 'urent' → logprob: -5.82937479019165
    6. 'v' → logprob: -5.95437479019165
    7. 'rq' → logprob: -6.57937479019165
    8. 'ront' → logprob: -6.57937479019165
    9. 'q' → logprob: -6.70437479019165
    10. 'quent' → logprob: -6.82937479019165

Token 80: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.048586804419755936
    2. 'aient' → logprob: -3.423586845397949
    3. 'a' → logprob: -5.298586845397949
    4. 'quent' → logprob: -5.923586845397949
    5. 'chent' → logprob: -6.423586845397949
    6. 'au' → logprob: -6.923586845397949
    7. 'uent' → logprob: -7.173586845397949
    8. 'lent' → logprob: -7.923586845397949
    9. 'èrent' → logprob: -8.17358684539795
    10. '`' → logprob: -8.17358684539795

Token 81: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04382353276014328
    2. ' def' → logprob: -3.793823480606079
    3. ':' → logprob: -4.168823719024658
    4. ':def' → logprob: -5.543823719024658
    5. '(def' → logprob: -8.0438232421875
    6. '(' → logprob: -8.5438232421875
    7. '```' → logprob: -9.0438232421875
    8. ')' → logprob: -9.2938232421875
    9. ' déf' → logprob: -10.4188232421875
    10. ' :' → logprob: -10.5438232421875

Token 82: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005443989299237728
    2. ' def' → logprob: -5.255444049835205
    3. 'd' → logprob: -8.880443572998047
    4. 'de' → logprob: -10.630443572998047
    5. ':def' → logprob: -11.130443572998047
    6. '
' → logprob: -12.380443572998047
    7. '```' → logprob: -12.380443572998047
    8. ' 
' → logprob: -12.380443572998047
    9. '_def' → logprob: -12.505443572998047
    10. 'dé' → logprob: -12.505443572998047

Token 83: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03827591985464096
    2. ' def' → logprob: -3.288275957107544
    3. 'd' → logprob: -8.788275718688965
    4. 'de' → logprob: -10.163275718688965
    5. ' de' → logprob: -11.413275718688965
    6. ' 
' → logprob: -11.538275718688965
    7. 'dé' → logprob: -11.538275718688965
    8. ' d' → logprob: -12.038275718688965
    9. ' déf' → logprob: -13.163275718688965
    10. ' ' → logprob: -13.663275718688965

Token 84: ' considère' (ID: 176437)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2688722312450409
    2. ' def' → logprob: -1.7688722610473633
    3. 'n' → logprob: -3.5188722610473633
    4. ' déf' → logprob: -4.393872261047363
    5. 'r' → logprob: -5.518872261047363
    6. 'ne' → logprob: -5.893872261047363
    7. 'dé' → logprob: -5.893872261047363
    8. ' définit' → logprob: -6.768872261047363
    9. ' considère' → logprob: -6.768872261047363
    10. ' veut' → logprob: -7.268872261047363

Token 85: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -1.065577745437622
    2. ' que' → logprob: -1.440577745437622
    3. 'qu' → logprob: -1.815577745437622
    4. ' qu' → logprob: -2.190577745437622
    5. ' deux' → logprob: -2.690577745437622
    6. 'de' → logprob: -3.315577745437622
    7. ' ' → logprob: -4.940577507019043
    8. 'interval' → logprob: -5.315577507019043
    9. '```' → logprob: -5.940577507019043
    10. 'a' → logprob: -6.315577507019043

Token 86: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.7119002342224121
    2. 'de' → logprob: -2.086900234222412
    3. 'a' → logprob: -3.086900234222412
    4. ' (' → logprob: -3.211900234222412
    5. 'les' → logprob: -3.336900234222412
    6. ' ' → logprob: -3.586900234222412
    7. ' les' → logprob: -3.586900234222412
    8. ' un' → logprob: -3.711900234222412
    9. 'le' → logprob: -3.836900234222412
    10. 's' → logprob: -4.086900234222412

Token 87: ' intervals' (ID: 49900)
  Prédit: ' cré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cré' → logprob: -0.9008893370628357
    2. 'cré' → logprob: -1.2758893966674805
    3. ' interv' → logprob: -1.7758893966674805
    4. 'interval' → logprob: -2.7758893966674805
    5. ' plages' → logprob: -3.7758893966674805
    6. 'inter' → logprob: -3.7758893966674805
    7. 'cr' → logprob: -4.5258893966674805
    8. ' intervals' → logprob: -4.7758893966674805
    9. ' interval' → logprob: -5.5258893966674805
    10. ' ' → logprob: -5.7758893966674805

Token 88: ' [' (ID: 723)
  Prédit: ' se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' se' → logprob: -0.2981029748916626
    2. ' intervals' → logprob: -2.423102855682373
    3. 's' → logprob: -3.048102855682373
    4. 'se' → logprob: -3.673102855682373
    5. ' sont' → logprob: -4.423102855682373
    6. ')' → logprob: -4.548102855682373
    7. ' ne' → logprob: -4.673102855682373
    8. ' em' → logprob: -4.798102855682373
    9. ' [' → logprob: -5.173102855682373
    10. ' overl' → logprob: -5.298102855682373

Token 89: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04446624219417572
    2. 's' → logprob: -3.169466257095337
    3. 'start' → logprob: -7.294466018676758
    4. ')' → logprob: -7.919466018676758
    5. ' a' → logprob: -8.419466018676758
    6. ' s' → logprob: -10.544466018676758
    7. ',' → logprob: -10.669466018676758
    8. ']' → logprob: -10.919466018676758
    9. 't' → logprob: -11.294466018676758
    10. 'x' → logprob: -11.419466018676758

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1393454521894455
    2. ',b' → logprob: -2.139345407485962
    3. '1' → logprob: -4.889345645904541
    4. 'b' → logprob: -5.639345645904541
    5. ' ,' → logprob: -6.889345645904541
    6. ')' → logprob: -10.014345169067383
    7. 'a' → logprob: -10.514345169067383
    8. '```' → logprob: -10.639345169067383
    9. ';' → logprob: -10.889345169067383
    10. 's' → logprob: -11.014345169067383

Token 91: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06208263337612152
    2. ' b' → logprob: -2.812082529067993
    3. ' ' → logprob: -9.562082290649414
    4. 'a' → logprob: -11.687082290649414
    5. ',' → logprob: -12.312082290649414
    6. ')' → logprob: -12.437082290649414
    7. ',b' → logprob: -12.437082290649414
    8. '	b' → logprob: -12.562082290649414
    9. ')b' → logprob: -12.812082290649414
    10. 'f' → logprob: -12.812082290649414

Token 92: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13649511337280273
    2. '[' → logprob: -2.6364951133728027
    3. ')' → logprob: -3.0114951133728027
    4. '],' → logprob: -5.136495113372803
    5. '),' → logprob: -7.636495113372803
    6. ',' → logprob: -9.011495590209961
    7. '[
' → logprob: -9.636495590209961
    8. '][' → logprob: -10.136495590209961
    9. '[,' → logprob: -10.511495590209961
    10. ' ' → logprob: -10.636495590209961

Token 93: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3462650179862976
    2. 'et' → logprob: -1.4712650775909424
    3. ' et' → logprob: -3.7212650775909424
    4. 'se' → logprob: -4.596264839172363
    5. ']' → logprob: -4.971264839172363
    6. ' se' → logprob: -4.971264839172363
    7. ' )' → logprob: -5.471264839172363
    8. ',' → logprob: -5.596264839172363
    9. ' and' → logprob: -5.846264839172363
    10. '[' → logprob: -6.846264839172363

Token 94: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.035404834896326065
    2. '[a' → logprob: -3.535404920578003
    3. '[' → logprob: -5.785404682159424
    4. '[c' → logprob: -6.535404682159424
    5. '[b' → logprob: -7.535404682159424
    6. ' ' → logprob: -8.410405158996582
    7. ')' → logprob: -9.035405158996582
    8. '[s' → logprob: -9.910405158996582
    9. '<|end|>' → logprob: -10.035405158996582
    10. '[f' → logprob: -10.785405158996582

Token 95: 's' (ID: 82)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003316384507343173
    2. 's' → logprob: -6.003316402435303
    3. 'x' → logprob: -7.628316402435303
    4. 'a' → logprob: -8.753315925598145
    5. ')' → logprob: -9.003315925598145
    6. ' c' → logprob: -10.003315925598145
    7. ']' → logprob: -12.128315925598145
    8. 'b' → logprob: -12.128315925598145
    9. 'с' → logprob: -12.378315925598145
    10. ')c' → logprob: -12.628315925598145

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.7053759519476444e-05
    2. ' ,' → logprob: -10.250057220458984
    3. 's' → logprob: -11.625057220458984
    4. ',f' → logprob: -11.875057220458984
    5. 'f' → logprob: -13.125057220458984
    6. ',s' → logprob: -13.250057220458984
    7. 'c' → logprob: -14.125057220458984
    8. ',c' → logprob: -15.000057220458984
    9. ')' → logprob: -15.500057220458984
    10. 'a' → logprob: -15.625057220458984

Token 97: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0037383255548775196
    2. ' f' → logprob: -5.6287384033203125
    3. 't' → logprob: -10.003738403320312
    4. 'e' → logprob: -10.503738403320312
    5. '```' → logprob: -11.003738403320312
    6. ' ' → logprob: -11.128738403320312
    7. '   ' → logprob: -11.503738403320312
    8. 'a' → logprob: -12.253738403320312
    9. 'd' → logprob: -12.753738403320312
    10. '
' → logprob: -13.253738403320312

Token 98: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.073596548754722e-05
    2. ' )' → logprob: -10.25005054473877
    3. ']' → logprob: -12.00005054473877
    4. '[' → logprob: -12.25005054473877
    5. ')]' → logprob: -14.00005054473877
    6. ')
' → logprob: -14.37505054473877
    7. ' ' → logprob: -14.75005054473877
    8. '   ' → logprob: -14.75005054473877
    9. 'a' → logprob: -14.87505054473877
    10. '）' → logprob: -15.25005054473877

Token 99: ' se' (ID: 458)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.39281055331230164
    2. ' se' → logprob: -1.142810583114624
    3. 'do' → logprob: -6.517810344696045
    4. 'over' → logprob: -6.517810344696045
    5. ')' → logprob: -6.892810344696045
    6. 'def' → logprob: -7.517810344696045
    7. 'ont' → logprob: -8.142810821533203
    8. ' overlap' → logprob: -8.517810821533203
    9. '   ' → logprob: -8.642810821533203
    10. 's' → logprob: -8.892810821533203

Token 100: ' chev' (ID: 127415)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.027768781408667564
    2. ' chev' → logprob: -4.027768611907959
    3. 's' → logprob: -5.652768611907959
    4. 'c' → logprob: -6.777768611907959
    5. 'ch' → logprob: -6.902768611907959
    6. ' rec' → logprob: -7.027768611907959
    7. ' che' → logprob: -7.402768611907959
    8. '```' → logprob: -7.902768611907959
    9. ' ' → logprob: -8.027769088745117
    10. 'touch' → logprob: -8.277769088745117

Token 101: 'auch' (ID: 47120)
  Prédit: 'auch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auch' → logprob: -0.016335580497980118
    2. 'au' → logprob: -4.266335487365723
    3. 'auche' → logprob: -6.641335487365723
    4. 'al' → logprob: -8.266335487365723
    5. 'arch' → logprob: -9.141335487365723
    6. 'och' → logprob: -9.516335487365723
    7. 'ouch' → logprob: -9.516335487365723
    8. 'a' → logprob: -9.891335487365723
    9. 'loquent' → logprob: -9.891335487365723
    10. 'ach' → logprob: -10.266335487365723

Token 102: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.08817858248949051
    2. 'lent' → logprob: -3.4631786346435547
    3. 'nt' → logprob: -3.5881786346435547
    4. 'nent' → logprob: -4.713178634643555
    5. 'ment' → logprob: -5.088178634643555
    6. 'ront' → logprob: -5.463178634643555
    7. 'rent' → logprob: -6.463178634643555
    8. 'tent' → logprob: -6.713178634643555
    9. 'ont' → logprob: -7.588178634643555
    10. 'aient' → logprob: -7.838178634643555

Token 103: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -1.2153500318527222
    2. 'si' → logprob: -1.4653500318527222
    3. 'if' → logprob: -1.4653500318527222
    4. '   ' → logprob: -2.4653501510620117
    5. ')' → logprob: -2.8403501510620117
    6. ' if' → logprob: -3.0903501510620117
    7. 'def' → logprob: -3.4653501510620117
    8. ' ' → logprob: -4.840350151062012
    9. 's' → logprob: -5.465350151062012
    10. ' uniquement' → logprob: -5.965350151062012

Token 104: '
' (ID: 198)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.04783864691853523
    2. 'not' → logprob: -3.2978386878967285
    3. 'a' → logprob: -5.7978386878967285
    4. 'max' → logprob: -6.0478386878967285
    5. ' max' → logprob: -6.1728386878967285
    6. ' a' → logprob: -6.9228386878967285
    7. '   ' → logprob: -7.7978386878967285
    8. ' min' → logprob: -8.42283821105957
    9. 'min' → logprob: -8.54783821105957
    10. 'b' → logprob: -8.67283821105957

Token 105: '#' (ID: 2)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.09492406249046326
    2. 'not' → logprob: -2.594923973083496
    3. 'a' → logprob: -4.844923973083496
    4. 'max' → logprob: -5.969923973083496
    5. ' a' → logprob: -6.094923973083496
    6. ' max' → logprob: -6.594923973083496
    7. '   ' → logprob: -7.969923973083496
    8. 'b' → logprob: -8.094923973083496
    9. ' min' → logprob: -8.344923973083496
    10. ' b' → logprob: -8.344923973083496

Token 106: ' ils' (ID: 15387)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03316493332386017
    2. ' max' → logprob: -4.533164978027344
    3. 'not' → logprob: -4.783164978027344
    4. ' a' → logprob: -5.658164978027344
    5. 'max' → logprob: -5.783164978027344
    6. ' min' → logprob: -6.033164978027344
    7. 'a' → logprob: -6.033164978027344
    8. ' s' → logprob: -7.283164978027344
    9. 'min' → logprob: -7.408164978027344
    10. ' b' → logprob: -8.033164978027344

Token 107: ' ont' (ID: 4930)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.5998291969299316
    2. 'n' → logprob: -2.2248291969299316
    3. ' ont' → logprob: -2.3498291969299316
    4. ' ne' → logprob: -2.3498291969299316
    5. ' se' → logprob: -3.0998291969299316
    6. 'inter' → logprob: -4.099829196929932
    7. 's' → logprob: -4.349829196929932
    8. 'a' → logprob: -4.474829196929932
    9. 'over' → logprob: -4.599829196929932
    10. ''ont' → logprob: -4.599829196929932

Token 108: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.8212223649024963
    2. ' au' → logprob: -0.8212223649024963
    3. ' un' → logprob: -3.1962223052978516
    4. ' ' → logprob: -3.4462223052978516
    5. 'au' → logprob: -3.6962223052978516
    6. ' a' → logprob: -4.321222305297852
    7. 'une' → logprob: -5.571222305297852
    8. 'a' → logprob: -6.946222305297852
    9. 'un' → logprob: -7.071222305297852
    10. 's' → logprob: -7.696222305297852

Token 109: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.1554122418165207
    2. 'part' → logprob: -2.155412197113037
    3. 'inter' → logprob: -3.905412197113037
    4. ' intersection' → logprob: -5.280412197113037
    5. ' partie' → logprob: -6.655412197113037
    6. ' ' → logprob: -7.780412197113037
    7. 'portion' → logprob: -8.155412673950195
    8. 'int' → logprob: -8.780412673950195
    9. 'point' → logprob: -8.905412673950195
    10. '   ' → logprob: -9.280412673950195

Token 110: ' stric' (ID: 152814)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5896012783050537
    2. ' >' → logprob: -1.8396012783050537
    3. 'not' → logprob: -2.4646012783050537
    4. ' not' → logprob: -2.7146012783050537
    5. ' if' → logprob: -3.3396012783050537
    6. 'strict' → logprob: -3.4646012783050537
    7. '=' → logprob: -4.714601516723633
    8. '   ' → logprob: -4.714601516723633
    9. 'if' → logprob: -4.839601516723633
    10. ' !=' → logprob: -5.089601516723633

Token 111: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.5441692471504211
    2. 'cte' → logprob: -1.1691691875457764
    3. 'nte' → logprob: -2.9191691875457764
    4. 'inte' → logprob: -4.0441694259643555
    5. '#' → logprob: -4.5441694259643555
    6. 'ct' → logprob: -4.6691694259643555
    7. 'ite' → logprob: -5.5441694259643555
    8. '>' → logprob: -5.5441694259643555
    9. ')' → logprob: -6.9191694259643555
    10. '[' → logprob: -7.1691694259643555

Token 112: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4497029185295105
    2. 'if' → logprob: -1.5747029781341553
    3. ':' → logprob: -1.9497029781341553
    4. ')' → logprob: -5.949702739715576
    5. ',' → logprob: -6.074702739715576
    6. ' if' → logprob: -6.199702739715576
    7. '   ' → logprob: -6.199702739715576
    8. ' def' → logprob: -7.449702739715576
    9. ' (' → logprob: -7.824702739715576
    10. ':
' → logprob: -7.824702739715576

Token 113: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0032487702555954456
    2. 'if' → logprob: -5.753248691558838
    3. '
' → logprob: -10.003249168395996
    4. ' def' → logprob: -11.003249168395996
    5. ')' → logprob: -12.753249168395996
    6. ' if' → logprob: -13.128249168395996
    7. ' 
' → logprob: -13.878249168395996
    8. '```' → logprob: -14.628249168395996
    9. 'for' → logprob: -14.753249168395996
    10. '  
' → logprob: -15.003249168395996

Token 114: ' Not' (ID: 4037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4745704233646393
    2. 'if' → logprob: -0.9745703935623169
    3. ' if' → logprob: -7.849570274353027
    4. ' def' → logprob: -9.474570274353027
    5. 'for' → logprob: -11.224570274353027
    6. '
' → logprob: -12.224570274353027
    7. '```' → logprob: -13.599570274353027
    8. 'i' → logprob: -13.974570274353027
    9. '#' → logprob: -13.974570274353027
    10. ' ' → logprob: -14.099570274353027

Token 115: 'ons' (ID: 1808)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5122115612030029
    2. '(a' → logprob: -2.512211561203003
    3. ' def' → logprob: -2.637211561203003
    4. ' overlapping' → logprob: -2.887211561203003
    5. ' e' → logprob: -3.262211561203003
    6. '(e' → logprob: -3.387211561203003
    7. ' overlap' → logprob: -3.512211561203003
    8. 'def' → logprob: -3.637211561203003
    9. ' a' → logprob: -4.012211799621582
    10. ' (' → logprob: -4.137211799621582

Token 116: ' que' (ID: 661)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009360295720398426
    2. ' que' → logprob: -5.759360313415527
    3. ' def' → logprob: -6.259360313415527
    4. ':' → logprob: -7.009360313415527
    5. '(a' → logprob: -7.259360313415527
    6. 'que' → logprob: -8.259360313415527
    7. 'interval' → logprob: -8.384360313415527
    8. 'a' → logprob: -8.509360313415527
    9. 'intersection' → logprob: -8.509360313415527
    10. ' (' → logprob: -9.009360313415527

Token 117: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5726655125617981
    2. 'b' → logprob: -2.0726654529571533
    3. ' a' → logprob: -2.0726654529571533
    4. ' b' → logprob: -2.3226654529571533
    5. ' not' → logprob: -3.3226654529571533
    6. ' (' → logprob: -4.697665691375732
    7. ' s' → logprob: -4.697665691375732
    8. 'not' → logprob: -4.697665691375732
    9. 'def' → logprob: -5.322665691375732
    10. '(a' → logprob: -5.447665691375732

Token 118: ' co' (ID: 1407)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9903698563575745
    2. 'a' → logprob: -2.2403697967529297
    3. ' intersection' → logprob: -2.4903697967529297
    4. 'intersection' → logprob: -2.7403697967529297
    5. ' overlap' → logprob: -3.1153697967529297
    6. ' a' → logprob: -3.2403697967529297
    7. 's' → logprob: -3.4903697967529297
    8. ' fonction' → logprob: -3.4903697967529297
    9. ' condition' → logprob: -3.4903697967529297
    10. ' def' → logprob: -3.6153697967529297

Token 119: 'ï' (ID: 9954)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.8154077529907227
    2. 'mp' → logprob: -1.8154077529907227
    3. 'nt' → logprob: -1.9404077529907227
    4. 'nd' → logprob: -2.0654077529907227
    5. 'n' → logprob: -2.4404077529907227
    6. 'nc' → logprob: -2.5654077529907227
    7. 'd' → logprob: -2.8154077529907227
    8. 'r' → logprob: -3.4404077529907227
    9. 'mpr' → logprob: -3.9404077529907227
    10. 'de' → logprob: -4.190407752990723

Token 120: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.0018616418819874525
    2. 'nd' → logprob: -6.876861572265625
    3. 'n' → logprob: -7.751861572265625
    4. 'ns' → logprob: -8.626861572265625
    5. 'ndice' → logprob: -9.251861572265625
    6. 'c' → logprob: -11.126861572265625
    7. 'mp' → logprob: -11.251861572265625
    8. 'nt' → logprob: -11.376861572265625
    9. 'inc' → logprob: -11.376861572265625
    10. 'nte' → logprob: -11.751861572265625

Token 121: 'idence' (ID: 10336)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.13754716515541077
    2. 'idence' → logprob: -2.387547254562378
    3. 'ident' → logprob: -4.387547016143799
    4. 'id' → logprob: -5.137547016143799
    5. 'ider' → logprob: -6.262547016143799
    6. '\' → logprob: -6.387547016143799
    7. 'e' → logprob: -6.512547016143799
    8. 'idente' → logprob: -6.512547016143799
    9. 'er' → logprob: -7.012547016143799
    10. 'de' → logprob: -7.012547016143799

Token 122: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.1197022199630737
    2. ' aux' → logprob: -1.1197022199630737
    3. ' sur' → logprob: -2.3697023391723633
    4. 'a' → logprob: -2.7447023391723633
    5. 'sur' → logprob: -3.3697023391723633
    6. ' de' → logprob: -3.4947023391723633
    7. 'des' → logprob: -3.6197023391723633
    8. ' au' → logprob: -3.8697023391723633
    9. 'aux' → logprob: -3.9947023391723633
    10. ' a' → logprob: -4.244702339172363

Token 123: ''ex' (ID: 23472)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8675640225410461
    2. ' des' → logprob: -2.3675639629364014
    3. 'des' → logprob: -2.4925639629364014
    4. 'l' → logprob: -2.6175639629364014
    5. 'aux' → logprob: -2.7425639629364014
    6. ' aux' → logprob: -2.9925639629364014
    7. ' d' → logprob: -3.1175639629364014
    8. 'd' → logprob: -3.6175639629364014
    9. 's' → logprob: -3.9925639629364014
    10. ' la' → logprob: -4.2425642013549805

Token 124: 'tré' (ID: 143903)
  Prédit: 'tré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tré' → logprob: -0.03610026091337204
    2. 'tr' → logprob: -3.536100149154663
    3. 't' → logprob: -5.911100387573242
    4. 'cl' → logprob: -7.161100387573242
    5. '```' → logprob: -7.161100387573242
    6. 'trim' → logprob: -7.536100387573242
    7. 'tre' → logprob: -8.286100387573242
    8. 'clus' → logprob: -8.661100387573242
    9. 'clusion' → logprob: -8.786100387573242
    10. 'istence' → logprob: -9.036100387573242

Token 125: 'mit' (ID: 2765)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.1826480627059937
    2. 'mes' → logprob: -1.1826480627059937
    3. 'mit' → logprob: -1.3076480627059937
    4. 'me' → logprob: -2.932648181915283
    5. 'mites' → logprob: -3.557648181915283
    6. 'mits' → logprob: -4.307648181915283
    7. 'mite' → logprob: -5.057648181915283
    8. 'mé' → logprob: -5.432648181915283
    9. '```' → logprob: -6.057648181915283
    10. 'ms' → logprob: -7.057648181915283

Token 126: 'és' (ID: 1756)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.6465676426887512
    2. 'e' → logprob: -0.7715676426887512
    3. 'é' → logprob: -4.7715678215026855
    4. 'és' → logprob: -5.3965678215026855
    5. 's' → logprob: -7.5215678215026855
    6. 'a' → logprob: -9.646567344665527
    7. '#' → logprob: -10.521567344665527
    8. 'è' → logprob: -10.771567344665527
    9. 'y' → logprob: -11.021567344665527
    10. 'ès' → logprob: -11.084067344665527

Token 127: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3086327612400055
    2. 'n' → logprob: -2.3086328506469727
    3. ' ne' → logprob: -2.3086328506469727
    4. ' est' → logprob: -3.3086328506469727
    5. 'ne' → logprob: -4.933632850646973
    6. ' entre' → logprob: -5.808632850646973
    7. ' des' → logprob: -5.933632850646973
    8. 's' → logprob: -6.183632850646973
    9. ' is' → logprob: -6.183632850646973
    10. ')' → logprob: -6.308632850646973

Token 128: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.4455644190311432
    2. ''' → logprob: -1.1955643892288208
    3. 'e' → logprob: -3.0705645084381104
    4. ''#' → logprob: -5.945564270019531
    5. 'est' → logprob: -6.570564270019531
    6. '’est' → logprob: -6.695564270019531
    7. ''ex' → logprob: -6.820564270019531
    8. 'es' → logprob: -7.320564270019531
    9. ''''' → logprob: -7.570564270019531
    10. '')' → logprob: -7.945564270019531

Token 129: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.006735742092132568
    2. ' pas' → logprob: -5.006735801696777
    3. 'pass' → logprob: -11.881735801696777
    4. '

' → logprob: -12.506735801696777
    5. '_pas' → logprob: -13.506735801696777
    6. 'PAS' → logprob: -13.756735801696777
    7. '
' → logprob: -13.881735801696777
    8. 'don' → logprob: -14.256735801696777
    9. 'not' → logprob: -14.506735801696777
    10. 'p' → logprob: -14.506735801696777

Token 130: ' un' (ID: 537)
  Prédit: 'cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cons' → logprob: -0.23839586973190308
    2. 'consider' → logprob: -1.8633959293365479
    3. 'un' → logprob: -3.613395929336548
    4. ' considér' → logprob: -4.113395690917969
    5. 'une' → logprob: -4.613395690917969
    6. 'conf' → logprob: -7.238395690917969
    7. ' un' → logprob: -7.488395690917969
    8. ' une' → logprob: -7.738395690917969
    9. 'over' → logprob: -8.363395690917969
    10. 'con' → logprob: -8.488395690917969

Token 131: ' chev' (ID: 127415)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.1279747039079666
    2. ' chev' → logprob: -2.12797474861145
    3. '_che' → logprob: -7.627974510192871
    4. 'ch' → logprob: -9.252974510192871
    5. ' overlap' → logprob: -9.877974510192871
    6. '```' → logprob: -10.002974510192871
    7. 'pro' → logprob: -10.127974510192871
    8. 'Che' → logprob: -10.127974510192871
    9. ' che' → logprob: -10.627974510192871
    10. 'over' → logprob: -10.627974510192871

Token 132: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.0373753160238266
    2. 'auch' → logprob: -3.9123752117156982
    3. 'au' → logprob: -4.412375450134277
    4. 'al' → logprob: -6.912375450134277
    5. 'a' → logprob: -7.662375450134277
    6. 'auff' → logprob: -7.912375450134277
    7. 'èvement' → logprob: -8.037375450134277
    8. 'aub' → logprob: -8.037375450134277
    9. ' overlap' → logprob: -8.162375450134277
    10. 'elage' → logprob: -8.162375450134277

Token 133: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0005408813012763858
    2. 'ent' → logprob: -8.375540733337402
    3. ' ment' → logprob: -9.375540733337402
    4. 'ments' → logprob: -10.000540733337402
    5. 'ement' → logprob: -10.250540733337402
    6. 'men' → logprob: -11.188040733337402
    7. 'm' → logprob: -11.250540733337402
    8. '#' → logprob: -11.375540733337402
    9. ' ' → logprob: -11.625540733337402
    10. '```' → logprob: -11.625540733337402

Token 134: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00035846480750478804
    2. ' def' → logprob: -8.250358581542969
    3. '
' → logprob: -10.500358581542969
    4. ':' → logprob: -11.125358581542969
    5. 'if' → logprob: -11.250358581542969
    6. ',' → logprob: -11.500358581542969
    7. ')' → logprob: -11.875358581542969
    8. '#' → logprob: -11.875358581542969
    9. 'de' → logprob: -12.500358581542969
    10. '.' → logprob: -12.875358581542969

Token 135: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2664456789934775e-06
    2. '
' → logprob: -13.750000953674316
    3. ' def' → logprob: -16.125001907348633
    4. '```' → logprob: -18.125001907348633
    5. '\' → logprob: -19.000001907348633
    6. '  
' → logprob: -19.375001907348633
    7. 'de' → logprob: -19.625001907348633
    8. '
' → logprob: -19.625001907348633
    9. 'if' → logprob: -19.875001907348633
    10. ' 
' → logprob: -20.125001907348633

Token 136: ' est' (ID: 893)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.3537820279598236
    2. 'over' → logprob: -1.978782057762146
    3. 'se' → logprob: -3.1037819385528564
    4. 'interval' → logprob: -3.3537819385528564
    5. 'inter' → logprob: -3.7287819385528564
    6. 'est' → logprob: -4.1037821769714355
    7. ' intervals' → logprob: -4.4787821769714355
    8. 'is' → logprob: -4.7287821769714355
    9. ' chev' → logprob: -4.9787821769714355
    10. ' overlap' → logprob: -5.2287821769714355

Token 137: '_che' (ID: 193742)
  Prédit: '_che'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_che' → logprob: -0.009390294551849365
    2. '_' → logprob: -5.259390354156494
    3. 'che' → logprob: -5.634390354156494
    4. '_un' → logprob: -8.134389877319336
    5. '_overlap' → logprob: -9.384389877319336
    6. '_super' → logprob: -10.634389877319336
    7. 'Che' → logprob: -10.634389877319336
    8. '_ce' → logprob: -10.759389877319336
    9. '_en' → logprob: -10.884389877319336
    10. '_s' → logprob: -11.009389877319336

Token 138: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004394748248159885
    2. 'val' → logprob: -5.62939453125
    3. 'vre' → logprob: -7.87939453125
    4. 'vou' → logprob: -9.37939453125
    5. 'uvre' → logprob: -9.50439453125
    6. 'vr' → logprob: -9.62939453125
    7. '_overlap' → logprob: -10.25439453125
    8. 'veux' → logprob: -10.62939453125
    9. 'vous' → logprob: -11.12939453125
    10. 'veau' → logprob: -11.12939453125

Token 139: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.002243512077257037
    2. 'al' → logprob: -6.752243518829346
    3. 'au' → logprob: -7.127243518829346
    4. 'a' → logprob: -9.252243041992188
    5. 'auch' → logprob: -10.002243041992188
    6. 'aux' → logprob: -10.002243041992188
    7. 'aule' → logprob: -10.877243041992188
    8. 'aul' → logprob: -10.877243041992188
    9. 'e' → logprob: -12.002243041992188
    10. 'ouche' → logprob: -12.127243041992188

Token 140: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.011735057458281517
    2. 'ux' → logprob: -5.761734962463379
    3. 'ement' → logprob: -5.886734962463379
    4. 'e' → logprob: -6.261734962463379
    5. 'x' → logprob: -7.011734962463379
    6. 'ur' → logprob: -7.011734962463379
    7. 'au' → logprob: -7.761734962463379
    8. 'rement' → logprob: -8.011734962463379
    9. 'u' → logprob: -8.136734962463379
    10. 'ue' → logprob: -8.511734962463379

Token 141: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.004816953558474779
    2. '(interval' → logprob: -5.879817008972168
    3. '(' → logprob: -6.254817008972168
    4. ' (' → logprob: -9.879817008972168
    5. '((' → logprob: -11.629817008972168
    6. '(x' → logprob: -12.004817008972168
    7. '(inter' → logprob: -12.504817008972168
    8. '(s' → logprob: -12.754817008972168
    9. 'interval' → logprob: -12.879817008972168
    10. '(i' → logprob: -13.254817008972168

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000824156915768981
    2. ',b' → logprob: -7.375823974609375
    3. 'b' → logprob: -8.875823974609375
    4. ' ,' → logprob: -10.375823974609375
    5. 's' → logprob: -11.750823974609375
    6. '_,' → logprob: -12.250823974609375
    7. '_b' → logprob: -12.625823974609375
    8. 'a' → logprob: -12.625823974609375
    9. ':' → logprob: -13.625823974609375
    10. ',a' → logprob: -13.750823974609375

Token 143: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005247514229267836
    2. ' b' → logprob: -5.255247592926025
    3. 's' → logprob: -11.380247116088867
    4. ' ' → logprob: -14.130247116088867
    5. ' s' → logprob: -14.255247116088867
    6. '   ' → logprob: -14.630247116088867
    7. 'a' → logprob: -15.130247116088867
    8. '  ' → logprob: -16.630247116088867
    9. '    ' → logprob: -16.630247116088867
    10. '	b' → logprob: -17.005247116088867

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2948405128554441e-05
    2. ',s' → logprob: -11.62501335144043
    3. ' ,' → logprob: -12.75001335144043
    4. 's' → logprob: -13.87501335144043
    5. '_,' → logprob: -16.62501335144043
    6. ',
' → logprob: -17.00001335144043
    7. ',
' → logprob: -19.25001335144043
    8. 'a' → logprob: -19.50001335144043
    9. ',a' → logprob: -19.62501335144043
    10. '   ' → logprob: -20.00001335144043

Token 145: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005239683669060469
    2. ' s' → logprob: -5.255239486694336
    3. '   ' → logprob: -12.505239486694336
    4. ' ' → logprob: -13.880239486694336
    5. 'c' → logprob: -14.630239486694336
    6. '
' → logprob: -15.380239486694336
    7. '	s' → logprob: -15.505239486694336
    8. '```' → logprob: -15.880239486694336
    9. '  ' → logprob: -16.130239486694336
    10. ')' → logprob: -17.005239486694336

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018232580623589456
    2. ',f' → logprob: -9.250182151794434
    3. ' ,' → logprob: -9.375182151794434
    4. ',
' → logprob: -15.000182151794434
    5. ')' → logprob: -15.125182151794434
    6. 'f' → logprob: -15.250182151794434
    7. ',b' → logprob: -15.750182151794434
    8. '_,' → logprob: -16.37518310546875
    9. '):' → logprob: -16.87518310546875
    10. 's' → logprob: -17.25018310546875

Token 147: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0015070053050294518
    2. ' f' → logprob: -6.501506805419922
    3. ' ' → logprob: -13.001506805419922
    4. '   ' → logprob: -13.751506805419922
    5. ')' → logprob: -15.126506805419922
    6. '
' → logprob: -15.251506805419922
    7. '```' → logprob: -15.376506805419922
    8. 's' → logprob: -16.126506805419922
    9. '	f' → logprob: -16.126506805419922
    10. '  ' → logprob: -16.126506805419922

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00010628487507347018
    2. ')' → logprob: -9.750105857849121
    3. '):
' → logprob: -10.000105857849121
    4. ' ):' → logprob: -13.250105857849121
    5. ':' → logprob: -14.750105857849121
    6. '):
' → logprob: -15.250105857849121
    7. '   ' → logprob: -16.375106811523438
    8. ')：' → logprob: -17.375106811523438
    9. '):

' → logprob: -17.500106811523438
    10. '）：' → logprob: -18.500106811523438

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16174432635307312
    2. ':' → logprob: -1.9117443561553955
    3. ':return' → logprob: -7.286744117736816
    4. ' return' → logprob: -7.786744117736816
    5. ':
' → logprob: -9.161744117736816
    6. '<|end|>' → logprob: -9.286744117736816
    7. '	return' → logprob: -9.661744117736816
    8. '    
' → logprob: -10.036744117736816
    9. 'return' → logprob: -10.286744117736816
    10. '  ' → logprob: -11.036744117736816

Token 150: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12727181613445282
    2. 'return' → logprob: -2.127271890640259
    3. ' return' → logprob: -8.00227165222168
    4. '	return' → logprob: -12.50227165222168
    5. 'if' → logprob: -12.62727165222168
    6. '  ' → logprob: -14.25227165222168
    7. '    ' → logprob: -14.37727165222168
    8. '   ' → logprob: -15.37727165222168
    9. ' ' → logprob: -15.50227165222168
    10. '    
' → logprob: -16.12727165222168

Token 151: ' Pas' (ID: 18323)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03388311713933945
    2. '   ' → logprob: -3.5338830947875977
    3. ' return' → logprob: -5.533883094787598
    4. 'if' → logprob: -8.783883094787598
    5. '	return' → logprob: -11.533883094787598
    6. 'eturn' → logprob: -12.908883094787598
    7. ' if' → logprob: -13.033883094787598
    8. '
' → logprob: -13.783883094787598
    9. '    ' → logprob: -13.783883094787598
    10. '    
' → logprob: -13.908883094787598

Token 152: ' de' (ID: 334)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.21576550602912903
    2. '(a' → logprob: -1.7157654762268066
    3. '(b' → logprob: -4.840765476226807
    4. '(' → logprob: -5.465765476226807
    5. '((' → logprob: -6.590765476226807
    6. ' ((' → logprob: -8.090765953063965
    7. '(s' → logprob: -8.215765953063965
    8. '(f' → logprob: -9.715765953063965
    9. '   ' → logprob: -10.340765953063965
    10. ' return' → logprob: -10.715765953063965

Token 153: ' chev' (ID: 127415)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.3971211612224579
    2. '(a' → logprob: -1.1471211910247803
    3. ' (' → logprob: -4.647120952606201
    4. '(' → logprob: -7.772120952606201
    5. '(s' → logprob: -9.14712142944336
    6. '(f' → logprob: -9.77212142944336
    7. '((' → logprob: -11.02212142944336
    8. '   ' → logprob: -13.14712142944336
    9. ')' → logprob: -14.27212142944336
    10. ' ' → logprob: -14.39712142944336

Token 154: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.002249461133033037
    2. 'auch' → logprob: -6.502249240875244
    3. 'a' → logprob: -8.127249717712402
    4. 'au' → logprob: -8.627249717712402
    5. 'ancement' → logprob: -9.877249717712402
    6. 'al' → logprob: -10.002249717712402
    7. 'aub' → logprob: -10.752249717712402
    8. 'acement' → logprob: -11.002249717712402
    9. 'anchement' → logprob: -11.127249717712402
    10. '_overlap' → logprob: -11.377249717712402

Token 155: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0001382241171086207
    2. 'ments' → logprob: -9.500138282775879
    3. 'ent' → logprob: -10.750138282775879
    4. 'm' → logprob: -11.875138282775879
    5. 'nt' → logprob: -12.125138282775879
    6. 's' → logprob: -12.250138282775879
    7. 'ement' → logprob: -12.375138282775879
    8. '```' → logprob: -13.250138282775879
    9. 't' → logprob: -13.375138282775879
    10. 'nement' → logprob: -13.500138282775879

Token 156: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023821156471967697
    2. 'return' → logprob: -3.8988211154937744
    3. ' return' → logprob: -5.8988213539123535
    4. ' if' → logprob: -8.023820877075195
    5. 'if' → logprob: -8.648820877075195
    6. '	return' → logprob: -12.023820877075195
    7. '  ' → logprob: -12.273820877075195
    8. ':' → logprob: -12.648820877075195
    9. ':return' → logprob: -12.648820877075195
    10. '    ' → logprob: -12.773820877075195

Token 157: ' interval' (ID: 17116)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.061992447823286057
    2. ' b' → logprob: -2.8119924068450928
    3. 'f' → logprob: -10.936992645263672
    4. ' f' → logprob: -12.561992645263672
    5. '   ' → logprob: -12.936992645263672
    6. '	b' → logprob: -14.686992645263672
    7. 'a' → logprob: -14.811992645263672
    8. ' ' → logprob: -15.811992645263672
    9. ' ' → logprob: -16.186992645263672
    10. '(b' → logprob: -16.561992645263672

Token 158: 'le' (ID: 282)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00932026281952858
    2. '   ' → logprob: -5.009320259094238
    3. ' b' → logprob: -6.259320259094238
    4. '(b' → logprob: -8.259320259094238
    5. '>=' → logprob: -8.634320259094238
    6. ')' → logprob: -9.009320259094238
    7. 'a' → logprob: -10.509320259094238
    8. '_b' → logprob: -10.759320259094238
    9. 'f' → logprob: -11.009320259094238
    10. ' ' → logprob: -11.384320259094238

Token 159: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05145520344376564
    2. 'a' → logprob: -3.80145525932312
    3. '[' → logprob: -4.301455020904541
    4. 'f' → logprob: -5.676455020904541
    5. ')' → logprob: -6.051455020904541
    6. ' b' → logprob: -6.176455020904541
    7. '>=' → logprob: -6.176455020904541
    8. 's' → logprob: -6.301455020904541
    9. '   ' → logprob: -6.676455020904541
    10. ' a' → logprob: -8.5514554977417

Token 160: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04875677451491356
    2. 'f' → logprob: -3.9237568378448486
    3. 'a' → logprob: -4.1737565994262695
    4. '[' → logprob: -5.2987565994262695
    5. '>=' → logprob: -6.0487565994262695
    6. 's' → logprob: -6.4237565994262695
    7. '   ' → logprob: -6.5487565994262695
    8. 'fin' → logprob: -6.7987565994262695
    9. 'est' → logprob: -8.54875659942627
    10. ')' → logprob: -8.79875659942627

Token 161: ' fini' (ID: 63561)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.21729892492294312
    2. '[' → logprob: -2.342298984527588
    3. '>=' → logprob: -2.467298984527588
    4. 'f' → logprob: -5.717298984527588
    5. '==' → logprob: -6.342298984527588
    6. '<=' → logprob: -6.342298984527588
    7. '[b' → logprob: -6.717298984527588
    8. 'est' → logprob: -6.717298984527588
    9. 'fin' → logprob: -6.967298984527588
    10. '   ' → logprob: -6.967298984527588

Token 162: ' avant' (ID: 13339)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.18339821696281433
    2. ' <=' → logprob: -1.8083982467651367
    3. '   ' → logprob: -6.058398246765137
    4. 'a' → logprob: -7.558398246765137
    5. ' ' → logprob: -8.183398246765137
    6. 'le' → logprob: -8.558398246765137
    7. '>=' → logprob: -9.183398246765137
    8. ')' → logprob: -9.433398246765137
    9. ' a' → logprob: -10.933398246765137
    10. 's' → logprob: -10.933398246765137

Token 163: ' début' (ID: 29589)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8994340896606445
    2. ' b' → logprob: -1.0244340896606445
    3. 'b' → logprob: -2.2744340896606445
    4. 's' → logprob: -2.5244340896606445
    5. ' or' → logprob: -4.1494340896606445
    6. ' f' → logprob: -4.1494340896606445
    7. '   ' → logprob: -4.5244340896606445
    8. 'f' → logprob: -4.8994340896606445
    9. ' ' → logprob: -8.024434089660645
    10. '    ' → logprob: -8.524434089660645

Token 164: ' interval' (ID: 17116)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.32666638493537903
    2. '   ' → logprob: -2.5766663551330566
    3. ' or' → logprob: -2.7016663551330566
    4. ' s' → logprob: -2.8266663551330566
    5. 's' → logprob: -3.4516663551330566
    6. 'de' → logprob: -3.7016663551330566
    7. ' du' → logprob: -4.826666355133057
    8. ' ou' → logprob: -5.451666355133057
    9. ' ' → logprob: -5.951666355133057
    10. ' b' → logprob: -6.201666355133057

Token 165: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0037759775295853615
    2. '   ' → logprob: -6.8787760734558105
    3. 'e' → logprob: -7.1287760734558105
    4. 'val' → logprob: -7.7537760734558105
    5. 'al' → logprob: -7.7537760734558105
    6. '1' → logprob: -8.503775596618652
    7. 'de' → logprob: -8.503775596618652
    8. 'l' → logprob: -8.878775596618652
    9. ' ' → logprob: -9.503775596618652
    10. '2' → logprob: -9.503775596618652

Token 166: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19321760535240173
    2. '2' → logprob: -2.8182175159454346
    3. ' s' → logprob: -3.0682175159454346
    4. 'de' → logprob: -3.6932175159454346
    5. ' de' → logprob: -4.443217754364014
    6. ' du' → logprob: -4.818217754364014
    7. 'du' → logprob: -4.818217754364014
    8. 'interval' → logprob: -5.443217754364014
    9. 'ou' → logprob: -5.568217754364014
    10. ' interval' → logprob: -5.818217754364014

Token 167: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021321957930922508
    2. ' ' → logprob: -4.521321773529053
    3. 's' → logprob: -5.271321773529053
    4. 'interval' → logprob: -5.771321773529053
    5. 'de' → logprob: -7.271321773529053
    6. ' interval' → logprob: -7.271321773529053
    7. ' s' → logprob: -8.396322250366211
    8. ' de' → logprob: -9.146322250366211
    9. '_' → logprob: -9.896322250366211
    10. 'inter' → logprob: -10.146322250366211

Token 168: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11510297656059265
    2. ' or' → logprob: -2.240103006362915
    3. 'if' → logprob: -6.865102767944336
    4. 'or' → logprob: -7.115102767944336
    5. ' if' → logprob: -7.865102767944336
    6. 'def' → logprob: -11.615102767944336
    7. '    ' → logprob: -11.990102767944336
    8. '  ' → logprob: -11.990102767944336
    9. 'return' → logprob: -12.740102767944336
    10. ' ' → logprob: -13.115102767944336

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021796036162413657
    2. ' if' → logprob: -9.000218391418457
    3. 'if' → logprob: -9.375218391418457
    4. 'return' → logprob: -12.375218391418457
    5. ' or' → logprob: -12.375218391418457
    6. ' return' → logprob: -13.875218391418457
    7. ')' → logprob: -16.12521743774414
    8. '  ' → logprob: -16.37521743774414
    9. '    ' → logprob: -16.75021743774414
    10. 'def' → logprob: -16.87521743774414

Token 170: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0656733438372612
    2. 'if' → logprob: -3.190673351287842
    3. ' if' → logprob: -4.190673351287842
    4. 'return' → logprob: -5.065673351287842
    5. ' return' → logprob: -6.940673351287842
    6. '  ' → logprob: -13.565672874450684
    7. '    ' → logprob: -13.940672874450684
    8. ' ' → logprob: -14.065672874450684
    9. '	if' → logprob: -14.190672874450684
    10. '	return' → logprob: -14.565672874450684

Token 171: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3948667347431183
    2. 'if' → logprob: -1.644866704940796
    3. ' if' → logprob: -2.394866704940796
    4. 'return' → logprob: -3.519866704940796
    5. ' return' → logprob: -4.394866943359375
    6. '  ' → logprob: -11.019866943359375
    7. ' ' → logprob: -11.269866943359375
    8. 'def' → logprob: -11.894866943359375
    9. '	if' → logprob: -12.144866943359375
    10. 'eturn' → logprob: -12.269866943359375

Token 172: ' interval' (ID: 17116)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.12014412879943848
    2. '   ' → logprob: -2.8701441287994385
    3. 'b' → logprob: -3.6201441287994385
    4. ' f' → logprob: -3.6201441287994385
    5. 'f' → logprob: -6.620143890380859
    6. ' a' → logprob: -7.120143890380859
    7. ' s' → logprob: -8.37014389038086
    8. '    ' → logprob: -8.49514389038086
    9. 'a' → logprob: -8.99514389038086
    10. ' ' → logprob: -9.12014389038086

Token 173: 'le' (ID: 282)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.42738085985183716
    2. '   ' → logprob: -1.3023808002471924
    3. 'b' → logprob: -2.9273808002471924
    4. '    ' → logprob: -4.5523810386657715
    5. ' ' → logprob: -6.0523810386657715
    6. '       ' → logprob: -6.5523810386657715
    7. '  ' → logprob: -6.6773810386657715
    8. 'f' → logprob: -7.0523810386657715
    9. '2' → logprob: -7.0523810386657715
    10. '      ' → logprob: -7.1773810386657715

Token 174: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2624087929725647
    2. '2' → logprob: -1.51240873336792
    3. '1' → logprob: -4.88740873336792
    4. '_' → logprob: -6.88740873336792
    5. '[' → logprob: -7.51240873336792
    6. '   ' → logprob: -8.012409210205078
    7. ' s' → logprob: -8.137409210205078
    8. ' f' → logprob: -8.262409210205078
    9. 's' → logprob: -8.887409210205078
    10. 'f' → logprob: -9.637409210205078

Token 175: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06116658076643944
    2. '1' → logprob: -3.311166524887085
    3. ' ' → logprob: -3.936166524887085
    4. 's' → logprob: -6.811166763305664
    5. 'f' → logprob: -7.186166763305664
    6. ' s' → logprob: -7.811166763305664
    7. '   ' → logprob: -8.186166763305664
    8. '[' → logprob: -8.561166763305664
    9. ' f' → logprob: -8.811166763305664
    10. 'b' → logprob: -9.186166763305664

Token 176: ' fini' (ID: 63561)
  Prédit: ' fini'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fini' → logprob: -0.5370742082595825
    2. 'f' → logprob: -1.0370742082595825
    3. '   ' → logprob: -3.662074089050293
    4. ' se' → logprob: -4.912074089050293
    5. ' est' → logprob: -5.412074089050293
    6. '>=' → logprob: -5.537074089050293
    7. ' termine' → logprob: -5.537074089050293
    8. 'finished' → logprob: -6.037074089050293
    9. 'fin' → logprob: -6.162074089050293
    10. ' >=' → logprob: -6.162074089050293

Token 177: ' avant' (ID: 13339)
  Prédit: ' avant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avant' → logprob: -0.8933048844337463
    2. 'avant' → logprob: -1.5183048248291016
    3. '<=' → logprob: -1.6433048248291016
    4. 'before' → logprob: -2.2683048248291016
    5. ' <=' → logprob: -2.7683048248291016
    6. ' before' → logprob: -4.643304824829102
    7. 'le' → logprob: -7.018304824829102
    8. ' antes' → logprob: -8.143304824829102
    9. '   ' → logprob: -8.518304824829102
    10. ' ' → logprob: -9.018304824829102

Token 178: ' début' (ID: 29589)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5215086936950684
    2. 'le' → logprob: -1.3965086936950684
    3. 'dé' → logprob: -2.3965086936950684
    4. 'interval' → logprob: -4.021508693695068
    5. 'l' → logprob: -4.146508693695068
    6. '   ' → logprob: -4.271508693695068
    7. ' ' → logprob: -5.771508693695068
    8. ' début' → logprob: -5.771508693695068
    9. ' a' → logprob: -5.896508693695068
    10. ' le' → logprob: -6.021508693695068

Token 179: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.1954735815525055
    2. ' interval' → logprob: -1.820473551750183
    3. 'de' → logprob: -5.195473670959473
    4. ' de' → logprob: -5.445473670959473
    5. '(interval' → logprob: -5.445473670959473
    6. ' ' → logprob: -7.820473670959473
    7. '(' → logprob: -8.570473670959473
    8. 'inter' → logprob: -8.945473670959473
    9. '   ' → logprob: -9.070473670959473
    10. '_' → logprob: -9.320473670959473

Token 180: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.007026634644716978
    2. 'e' → logprob: -5.257026672363281
    3. '1' → logprob: -6.882026672363281
    4. '   ' → logprob: -7.507026672363281
    5. ' ' → logprob: -9.382026672363281
    6. '2' → logprob: -9.882026672363281
    7. 're' → logprob: -10.632026672363281
    8. 'de' → logprob: -11.382026672363281
    9. 'interval' → logprob: -11.757026672363281
    10. '       ' → logprob: -11.882026672363281

Token 181: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1612938791513443
    2. ' ' → logprob: -1.911293864250183
    3. '   ' → logprob: -7.286293983459473
    4. 'a' → logprob: -8.161293983459473
    5. ' a' → logprob: -10.286293983459473
    6. '  ' → logprob: -11.661293983459473
    7. '_' → logprob: -11.786293983459473
    8. 'def' → logprob: -11.786293983459473
    9. '(a' → logprob: -11.911293983459473
    10. '(' → logprob: -12.036293983459473

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4297223687171936
    2. 'a' → logprob: -1.0547223091125488
    3. ' a' → logprob: -7.554722309112549
    4. ' ' → logprob: -8.304722785949707
    5. '(a' → logprob: -8.679722785949707
    6. 's' → logprob: -10.429722785949707
    7. '   ' → logprob: -11.054722785949707
    8. '[a' → logprob: -11.429722785949707
    9. '0' → logprob: -12.054722785949707
    10. '_a' → logprob: -12.429722785949707

Token 183: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001438266917830333
    2. 'return' → logprob: -9.625144004821777
    3. ' return' → logprob: -9.875144004821777
    4. ' if' → logprob: -11.375144004821777
    5. 'if' → logprob: -12.000144004821777
    6. '    
' → logprob: -12.375144004821777
    7. '	return' → logprob: -13.750144004821777
    8. '
' → logprob: -14.000144004821777
    9. ':' → logprob: -14.625144004821777
    10. 'def' → logprob: -14.625144004821777

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.3915141355246305e-05
    2. 'return' → logprob: -10.87502384185791
    3. ' return' → logprob: -13.12502384185791
    4. 'if' → logprob: -13.37502384185791
    5. ' if' → logprob: -14.37502384185791
    6. '
' → logprob: -15.00002384185791
    7. '    
' → logprob: -15.25002384185791
    8. '	return' → logprob: -16.500024795532227
    9. '   ' → logprob: -16.500024795532227
    10. '```' → logprob: -16.875024795532227

Token 185: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003179259831085801
    2. 'return' → logprob: -6.25317907333374
    3. 'if' (adapté à ' if') → logprob: -6.87817907333374
    4. ' if' → logprob: -9.003179550170898
    5. ' return' → logprob: -9.253179550170898
    6. '	return' → logprob: -15.503179550170898
    7. '
' → logprob: -15.753179550170898
    8. '    ' → logprob: -15.753179550170898
    9. '  ' → logprob: -15.753179550170898
    10. '   ' → logprob: -16.1281795501709

Token 186: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.061978891491889954
    2. ' b' → logprob: -2.811978816986084
    3. '   ' → logprob: -11.436979293823242
    4. '	b' → logprob: -15.061979293823242
    5. ' ' → logprob: -15.811979293823242
    6. '  ' → logprob: -17.311979293823242
    7. 'f' → logprob: -18.186979293823242
    8. ' ' → logprob: -18.311979293823242
    9. '    ' → logprob: -18.436979293823242
    10. '(b' → logprob: -18.686979293823242

Token 187: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.04862608388066292
    2. ' <=' → logprob: -3.048626184463501
    3. ')<=' → logprob: -10.548625946044922
    4. ')' → logprob: -12.173625946044922
    5. ' ' → logprob: -13.048625946044922
    6. ']<=' → logprob: -13.173625946044922
    7. '≤' → logprob: -14.173625946044922
    8. '=' → logprob: -14.298625946044922
    9. 's' → logprob: -14.798625946044922
    10. 'le' → logprob: -15.048625946044922

Token 188: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00020354038861114532
    2. ' s' → logprob: -8.500203132629395
    3. '_s' → logprob: -19.62520408630371
    4. '	s' → logprob: -20.50020408630371
    5. '   ' → logprob: -21.37520408630371
    6. ' ' → logprob: -21.75020408630371
    7. '
' → logprob: -22.12520408630371
    8. '  ' → logprob: -22.37520408630371
    9. '    ' → logprob: -23.00020408630371
    10. '_' → logprob: -23.12520408630371

Token 189: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0019770495127886534
    2. 'or' → logprob: -6.25197696685791
    3. '   ' → logprob: -10.12697696685791
    4. ' ' → logprob: -13.00197696685791
    5. '	or' → logprob: -13.00197696685791
    6. ':' → logprob: -13.37697696685791
    7. '    ' → logprob: -13.87697696685791
    8. '       ' → logprob: -14.00197696685791
    9. ':
' → logprob: -15.62697696685791
    10. '  ' → logprob: -16.001977920532227

Token 190: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.14674772322177887
    2. 'a' → logprob: -2.0217478275299072
    3. ' f' → logprob: -5.896747589111328
    4. '   ' → logprob: -6.896747589111328
    5. ' a' → logprob: -8.146747589111328
    6. '    ' → logprob: -12.146747589111328
    7. ' ' → logprob: -12.271747589111328
    8. '  ' → logprob: -13.271747589111328
    9. '	f' → logprob: -13.396747589111328
    10. 'af' → logprob: -15.709247589111328

Token 191: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.10020828247070312
    2. ' <=' → logprob: -2.350208282470703
    3. '>=' → logprob: -14.350208282470703
    4. 'a' → logprob: -14.725208282470703
    5. ' ' → logprob: -15.225208282470703
    6. ')<=' → logprob: -15.350208282470703
    7. '   ' → logprob: -15.725208282470703
    8. ')' → logprob: -16.600208282470703
    9. ']<=' → logprob: -17.600208282470703
    10. '≤' → logprob: -17.850208282470703

Token 192: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005530327325686812
    2. ' a' → logprob: -7.500553131103516
    3. ' ' → logprob: -16.750553131103516
    4. '   ' → logprob: -17.250553131103516
    5. '  ' → logprob: -18.375553131103516
    6. '	a' → logprob: -18.875553131103516
    7. '_a' → logprob: -20.875553131103516
    8. '<|end|>' → logprob: -21.250553131103516
    9. ')a' → logprob: -22.000553131103516
    10. '    ' → logprob: -22.000553131103516

Token 193: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3136654794216156
    2. ':
' → logprob: -1.313665509223938
    3. ':return' → logprob: -8.188665390014648
    4. '   ' → logprob: -9.563665390014648
    5. '):
' → logprob: -10.688665390014648
    6. ':
' → logprob: -10.938665390014648
    7. ' :
' → logprob: -12.188665390014648
    8. '):' → logprob: -12.313665390014648
    9. ' :' → logprob: -12.688665390014648
    10. '       ' → logprob: -13.438665390014648

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024254792369902134
    2. '   ' → logprob: -6.502425670623779
    3. '
' → logprob: -7.127425670623779
    4. ' return' → logprob: -9.877425193786621
    5. 'return' → logprob: -10.752425193786621
    6. ':' → logprob: -10.877425193786621
    7. ':
' → logprob: -11.502425193786621
    8. '    
' → logprob: -12.252425193786621
    9. ':return' → logprob: -12.377425193786621
    10. '        
' → logprob: -12.502425193786621

Token 195: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35905396938323975
    2. 'return' (adapté à ' return') → logprob: -1.3590539693832397
    3. ' return' → logprob: -3.3590540885925293
    4. '   ' → logprob: -4.609054088592529
    5. '	return' → logprob: -10.734053611755371
    6. '           ' → logprob: -12.734053611755371
    7. '
' → logprob: -13.234053611755371
    8. '    ' → logprob: -14.359053611755371
    9. ':return' → logprob: -14.359053611755371
    10. '     ' → logprob: -14.484053611755371

Token 196: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.03804516792297363
    2. ' False' → logprob: -3.2880451679229736
    3. '   ' → logprob: -13.038044929504395
    4. 'True' → logprob: -13.538044929504395
    5. ' True' → logprob: -16.66304588317871
    6. '(False' → logprob: -17.53804588317871
    7. 'false' → logprob: -19.28804588317871
    8. '=False' → logprob: -19.41304588317871
    9. 'None' → logprob: -19.41304588317871
    10. ' ' → logprob: -20.16304588317871

Token 197: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.869017852295656e-06
    2. 'return' → logprob: -12.625006675720215
    3. '
' → logprob: -12.750006675720215
    4. '    
' → logprob: -14.250006675720215
    5. ' return' → logprob: -17.75000762939453
    6. '       ' → logprob: -18.37500762939453
    7. '  
' → logprob: -19.12500762939453
    8. '   ' → logprob: -19.25000762939453
    9. 'else' → logprob: -19.37500762939453
    10. '	return' → logprob: -19.75000762939453

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.372294698550832e-06
    2. 'return' → logprob: -11.625009536743164
    3. '
' → logprob: -15.250009536743164
    4. '    
' → logprob: -16.125009536743164
    5. '       ' → logprob: -18.625009536743164
    6. ' return' → logprob: -18.750009536743164
    7. 'else' → logprob: -19.875009536743164
    8. '	return' → logprob: -20.250009536743164
    9. '   ' → logprob: -20.250009536743164
    10. '  
' → logprob: -21.250009536743164

Token 199: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038056403398513794
    2. 'return' (adapté à ' return') → logprob: -3.2880563735961914
    3. ' return' → logprob: -11.663056373596191
    4. 'else' → logprob: -12.038056373596191
    5. '
' → logprob: -15.663056373596191
    6. '	return' → logprob: -16.538057327270508
    7. '       ' → logprob: -16.663057327270508
    8. '  ' → logprob: -17.413057327270508
    9. '    
' → logprob: -17.538057327270508
    10. ' ' → logprob: -18.288057327270508

Token 200: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0004309076175559312
    2. ' True' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.250431060791016
    4. '(True' → logprob: -20.750431060791016
    5. 'true' → logprob: -21.125431060791016
    6. ' ' → logprob: -22.125431060791016
    7. '=True' → logprob: -22.625431060791016
    8. 'False' → logprob: -23.250431060791016
    9. '  ' → logprob: -24.875431060791016
    10. '_true' → logprob: -25.125431060791016

Token 201: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19523903727531433
    2. '#' → logprob: -2.1952390670776367
    3. 'can' → logprob: -3.4452390670776367
    4. 'possible' → logprob: -4.570239067077637
    5. 'if' → logprob: -5.195239067077637
    6. 'che' → logprob: -5.320239067077637
    7. 'def' → logprob: -5.445239067077637
    8. 'con' → logprob: -6.695239067077637
    9. 'over' → logprob: -6.945239067077637
    10. 'pro' → logprob: -7.070239067077637

Token 203: ' Vér' (ID: 159169)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1697100400924683
    2. 'che' → logprob: -1.2947100400924683
    3. '#' → logprob: -1.7947100400924683
    4. 'possible' → logprob: -2.294710159301758
    5. 'con' → logprob: -2.669710159301758
    6. 'est' → logprob: -3.544710159301758
    7. 'aj' → logprob: -4.919710159301758
    8. 'pour' → logprob: -5.044710159301758
    9. 'over' → logprob: -5.294710159301758
    10. 'pe' → logprob: -5.419710159301758

Token 204: 'ification' (ID: 3166)
  Prédit: 'ifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.08673769980669022
    2. 'ification' → logprob: -2.586737632751465
    3. 'if' → logprob: -5.211737632751465
    4. 'ifie' → logprob: -6.711737632751465
    5. 'ifer' → logprob: -6.836737632751465
    6. 'ifiez' → logprob: -11.211737632751465
    7. 'i' → logprob: -11.711737632751465
    8. '#' → logprob: -11.711737632751465
    9. 'ifi' → logprob: -11.836737632751465
    10. 'f' → logprob: -11.961737632751465

Token 205: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15147428214550018
    2. 'over' → logprob: -3.0264742374420166
    3. 'pour' → logprob: -3.1514742374420166
    4. 'che' → logprob: -3.4014742374420166
    5. 'possible' → logprob: -4.776474475860596
    6. 'can' → logprob: -5.651474475860596
    7. 'est' → logprob: -6.526474475860596
    8. 'new' → logprob: -7.651474475860596
    9. 'pe' → logprob: -7.776474475860596
    10. 'conf' → logprob: -7.901474475860596

Token 206: ' chev' (ID: 127415)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.11602403968572617
    2. 'tout' → logprob: -2.3660240173339844
    3. 'che' → logprob: -4.366024017333984
    4. 'all' → logprob: -7.116024017333984
    5. ' any' → logprob: -7.116024017333984
    6. ' tout' → logprob: -7.866024017333984
    7. 'for' → logprob: -8.241024017333984
    8. 't' → logprob: -8.741024017333984
    9. 'not' → logprob: -9.116024017333984
    10. 'possible' → logprob: -9.366024017333984

Token 207: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.0006638261256739497
    2. 'auch' → logprob: -8.000663757324219
    3. 'au' → logprob: -9.000663757324219
    4. 'a' → logprob: -9.500663757324219
    5. 'ouche' → logprob: -9.750663757324219
    6. 'al' → logprob: -11.250663757324219
    7. 'achement' → logprob: -11.500663757324219
    8. 'aul' → logprob: -11.625663757324219
    9. 'aus' → logprob: -11.875663757324219
    10. 'anchement' → logprob: -12.625663757324219

Token 208: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0010001786286011338
    2. 'ments' → logprob: -7.50100040435791
    3. 'ement' → logprob: -8.37600040435791
    4. 'vement' → logprob: -10.25100040435791
    5. '#' → logprob: -10.50100040435791
    6. 't' → logprob: -10.62600040435791
    7. 'nt' → logprob: -10.62600040435791
    8. '_' → logprob: -10.87600040435791
    9. 'ent' → logprob: -11.00100040435791
    10. 'rement' → logprob: -11.00100040435791

Token 209: ' avec' (ID: 3937)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004703530576080084
    2. 'pour' → logprob: -8.000470161437988
    3. 'possible' → logprob: -9.750470161437988
    4. ' for' → logprob: -10.500470161437988
    5. 'with' → logprob: -11.000470161437988
    6. 'che' → logprob: -11.500470161437988
    7. 'can' → logprob: -11.500470161437988
    8. 'avec' → logprob: -12.875470161437988
    9. 'est' → logprob: -13.125470161437988
    10. 'compatible' → logprob: -13.250470161437988

Token 210: ' chaque' (ID: 21194)
  Prédit: 'reserv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reserv' → logprob: -0.43618133664131165
    2. 'for' → logprob: -1.4361813068389893
    3. 'reservation' → logprob: -3.0611813068389893
    4. 'ré' → logprob: -3.3111813068389893
    5. 'les' → logprob: -4.311181545257568
    6. 'la' → logprob: -4.811181545257568
    7. 'existing' → logprob: -5.561181545257568
    8. 'r' → logprob: -6.311181545257568
    9. ' for' → logprob: -7.311181545257568
    10. 'une' → logprob: -7.811181545257568

Token 211: ' réservation' (ID: 141767)
  Prédit: 'reservation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reservation' → logprob: -0.8235875368118286
    2. 'ré' → logprob: -1.6985875368118286
    3. ' (' → logprob: -2.198587417602539
    4. '(s' → logprob: -2.323587417602539
    5. 'cré' → logprob: -2.948587417602539
    6. ' reservation' → logprob: -3.448587417602539
    7. ' réservation' → logprob: -3.698587417602539
    8. '(r' → logprob: -3.823587417602539
    9. '(' → logprob: -4.323587417602539
    10. 'interval' → logprob: -4.573587417602539

Token 212: ' exist' (ID: 4310)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.047134305234067e-05
    2. ' for' → logprob: -11.375030517578125
    3. 'possible' → logprob: -11.875030517578125
    4. 'pour' → logprob: -12.125030517578125
    5. 'can' → logprob: -12.500030517578125
    6. 'che' → logprob: -13.375030517578125
    7. 'over' → logprob: -14.375030517578125
    8. 'est' → logprob: -15.625030517578125
    9. 'compatible' → logprob: -15.625030517578125
    10. 'conf' → logprob: -16.750030517578125

Token 213: 'ante' (ID: 2116)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004531469661742449
    2. ':' → logprob: -6.754531383514404
    3. 'ment' → logprob: -6.879531383514404
    4. ' for' → logprob: -7.379531383514404
    5. 'ation' → logprob: -8.004531860351562
    6. 'ement' → logprob: -8.254531860351562
    7. 'ent' → logprob: -8.504531860351562
    8. 'u' → logprob: -8.879531860351562
    9. 'ution' → logprob: -9.129531860351562
    10. 'tion' → logprob: -9.254531860351562

Token 214: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001415618316968903
    2. ' for' → logprob: -8.875141143798828
    3. '
' → logprob: -13.500141143798828
    4. 'pour' → logprob: -15.750141143798828
    5. '```' → logprob: -16.750141143798828
    6. 'possible' → logprob: -17.000141143798828
    7. 'valid' → logprob: -18.250141143798828
    8. 'found' → logprob: -18.250141143798828
    9. 'if' → logprob: -18.500141143798828
    10. '``' → logprob: -19.375141143798828

Token 215: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.870950215263292e-05
    2. 'che' → logprob: -10.375048637390137
    3. 'pour' → logprob: -11.875048637390137
    4. 'over' → logprob: -12.750048637390137
    5. 'possible' → logprob: -12.875048637390137
    6. 'can' → logprob: -13.375048637390137
    7. 'est' → logprob: -13.750048637390137
    8. ' for' → logprob: -14.750048637390137
    9. 'compatible' → logprob: -14.875048637390137
    10. 'if' → logprob: -15.000048637390137

Token 216: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2718294858932495
    2. '(s' → logprob: -1.5218294858932495
    3. ' s' → logprob: -4.146829605102539
    4. ' (' → logprob: -6.646829605102539
    5. 'res' → logprob: -6.771829605102539
    6. 'reservation' → logprob: -7.771829605102539
    7. 'reserv' → logprob: -8.396829605102539
    8. '(res' → logprob: -8.646829605102539
    9. '   ' → logprob: -8.771829605102539
    10. 'r' → logprob: -9.271829605102539

Token 217: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.805981972021982e-05
    2. '(s' → logprob: -10.12509822845459
    3. ' s' → logprob: -10.87509822845459
    4. 'res' → logprob: -11.87509822845459
    5. 'start' → logprob: -12.00009822845459
    6. 'si' → logprob: -12.12509822845459
    7. 'reserv' → logprob: -12.25009822845459
    8. 'rs' → logprob: -13.25009822845459
    9. 'ss' → logprob: -13.37509822845459
    10. '_s' → logprob: -13.37509822845459

Token 218: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7968066206085496e-05
    2. ' ,' → logprob: -10.625027656555176
    3. ',f' → logprob: -13.000027656555176
    4. ',
' → logprob: -14.625027656555176
    5. '‌,' → logprob: -15.250027656555176
    6. '_,' → logprob: -15.500027656555176
    7. '<|end|>' → logprob: -15.875027656555176
    8. ',b' → logprob: -16.000028610229492
    9. ',)' → logprob: -16.875028610229492
    10. ',),' → logprob: -17.250028610229492

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012630375567823648
    2. ' ,' → logprob: -9.000125885009766
    3. ',s' → logprob: -13.875125885009766
    4. 's' → logprob: -14.500125885009766
    5. '‌,' → logprob: -15.125125885009766
    6. ',i' → logprob: -15.250125885009766
    7. '_,' → logprob: -15.250125885009766
    8. ',
' → logprob: -15.375125885009766
    9. '),' → logprob: -16.000125885009766
    10. ',),' → logprob: -16.500125885009766

Token 220: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0004309076175559312
    2. ' f' → logprob: -7.750431060791016
    3. ' ' → logprob: -16.375431060791016
    4. '	f' → logprob: -16.750431060791016
    5. '   ' → logprob: -17.250431060791016
    6. '_f' → logprob: -17.375431060791016
    7. ')' → logprob: -18.000431060791016
    8. '  ' → logprob: -19.500431060791016
    9. 'fi' → logprob: -19.500431060791016
    10. '    ' → logprob: -19.875431060791016

Token 221: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0621449239552021
    2. ')' → logprob: -2.8121449947357178
    3. 'i' → logprob: -8.937145233154297
    4. ')_' → logprob: -10.437145233154297
    5. ')i' → logprob: -11.687145233154297
    6. '),' → logprob: -12.437145233154297
    7. '_' → logprob: -13.062145233154297
    8. '_)' → logprob: -14.437145233154297
    9. ',i' → logprob: -15.187145233154297
    10. ' i' → logprob: -15.437145233154297

Token 222: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.228561349213123e-05
    2. 'in' → logprob: -10.375052452087402
    3. ' )' → logprob: -11.125052452087402
    4. ' in' → logprob: -12.250052452087402
    5. '),' → logprob: -13.750052452087402
    6. ',' → logprob: -15.750052452087402
    7. '   ' → logprob: -16.125051498413086
    8. ')
' → logprob: -17.000051498413086
    9. ',)' → logprob: -17.125051498413086
    10. '))' → logprob: -17.625051498413086

Token 223: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17975009977817535
    2. 'in' → logprob: -1.8047500848770142
    3. ',' → logprob: -13.554750442504883
    4. ')' → logprob: -13.804750442504883
    5. '	in' → logprob: -14.179750442504883
    6. 's' → logprob: -14.929750442504883
    7. ' ' → logprob: -14.929750442504883
    8. '   ' → logprob: -14.929750442504883
    9. '  ' → logprob: -15.179750442504883
    10. 'n' → logprob: -16.054750442504883

Token 224: ' reservations' (ID: 51148)
  Prédit: 'reserv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reserv' → logprob: -0.014165391214191914
    2. ' reservations' → logprob: -4.26416540145874
    3. ' ' → logprob: -14.889164924621582
    4. '   ' → logprob: -14.889164924621582
    5. 'reservation' → logprob: -15.389164924621582
    6. 'requests' → logprob: -15.514164924621582
    7. 'res' → logprob: -15.514164924621582
    8. 'reserved' → logprob: -16.0141658782959
    9. ' reservas' → logprob: -16.2641658782959
    10. '  ' → logprob: -16.5141658782959

Token 225: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1002541184425354
    2. ':
' → logprob: -2.3502540588378906
    3. '   ' → logprob: -10.10025405883789
    4. ':
' → logprob: -13.10025405883789
    5. '):
' → logprob: -13.10025405883789
    6. ':

' → logprob: -14.10025405883789
    7. ' :' → logprob: -14.35025405883789
    8. '):' → logprob: -14.60025405883789
    9. ' :
' → logprob: -14.85025405883789
    10. '():
' → logprob: -16.35025405883789

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00278490805067122
    2. ' if' → logprob: -6.127784729003906
    3. '
' → logprob: -8.252784729003906
    4. '    
' → logprob: -8.377784729003906
    5. 'if' → logprob: -9.502784729003906
    6. '<|end|>' → logprob: -11.127784729003906
    7. '  
' → logprob: -12.377784729003906
    8. ':
' → logprob: -12.502784729003906
    9. ':' → logprob: -12.877784729003906
    10. ' 
' → logprob: -13.127784729003906

Token 227: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24625396728515625
    2. 'if' (adapté à ' if') → logprob: -1.9962539672851562
    3. ' if' → logprob: -2.4962539672851562
    4. '    
' → logprob: -10.871253967285156
    5. '
' → logprob: -11.496253967285156
    6. '	if' → logprob: -11.621253967285156
    7. '       ' → logprob: -14.621253967285156
    8. ' ' → logprob: -14.871253967285156
    9. '  
' → logprob: -15.371253967285156
    10. '   ' → logprob: -15.746253967285156

Token 228: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.033657222986221313
    2. 'est' → logprob: -3.4086573123931885
    3. '(est' → logprob: -12.15865707397461
    4. '   ' → logprob: -12.28365707397461
    5. '.est' → logprob: -14.28365707397461
    6. '    ' → logprob: -15.15865707397461
    7. ' ' → logprob: -15.28365707397461
    8. '_est' → logprob: -15.90865707397461
    9. '  ' → logprob: -16.90865707397461
    10. ''est' → logprob: -17.15865707397461

Token 229: '_che' (ID: 193742)
  Prédit: '_che'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_che' → logprob: -2.0219828002154827e-05
    2. '_' → logprob: -10.875020027160645
    3. 'che' → logprob: -14.750020027160645
    4. ' _' → logprob: -15.000020027160645
    5. '_ch' → logprob: -15.500020027160645
    6. '_c' → logprob: -17.50002098083496
    7. 'Che' → logprob: -17.50002098083496
    8. '__' → logprob: -18.00002098083496
    9. '_co' → logprob: -18.00002098083496
    10. 'a' → logprob: -18.00002098083496

Token 230: 'v' (ID: 85)
  Prédit: 'auche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.08469785749912262
    2. 'v' → logprob: -3.709697961807251
    3. 'ow' → logprob: -3.709697961807251
    4. 'ouche' → logprob: -4.459697723388672
    5. 'ov' → logprob: -4.584697723388672
    6. 'w' → logprob: -5.959697723388672
    7. 'ou' → logprob: -6.209697723388672
    8. 'ouv' → logprob: -6.959697723388672
    9. 'au' → logprob: -7.459697723388672
    10. 'ovable' → logprob: -7.959697723388672

Token 231: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.0003242607053834945
    2. 'ouche' → logprob: -8.125324249267578
    3. 'aule' → logprob: -12.375324249267578
    4. 'au' → logprob: -12.625324249267578
    5. 'auch' → logprob: -12.625324249267578
    6. 'enche' → logprob: -12.875324249267578
    7. 'ache' → logprob: -13.000324249267578
    8. 'a' → logprob: -13.125324249267578
    9. '_overlap' → logprob: -13.125324249267578
    10. 'achement' → logprob: -13.375324249267578

Token 232: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.007011594716459513
    2. 'ement' → logprob: -5.257011413574219
    3. 'vement' → logprob: -6.882011413574219
    4. 'rement' → logprob: -8.007011413574219
    5. 'nement' → logprob: -8.882011413574219
    6. 'sement' → logprob: -9.132011413574219
    7. 'gement' → logprob: -9.757011413574219
    8. 'nt' → logprob: -10.257011413574219
    9. 'gment' → logprob: -10.632011413574219
    10. 'lement' → logprob: -11.507011413574219

Token 233: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.0280383548888494e-06
    2. 'a' → logprob: -14.500000953674316
    3. '(' → logprob: -14.625000953674316
    4. ' (' → logprob: -17.125001907348633
    5. '(i' → logprob: -18.375001907348633
    6. '(
' → logprob: -18.500001907348633
    7. ')' → logprob: -18.750001907348633
    8. '(s' → logprob: -19.000001907348633
    9. '(ai' → logprob: -19.125001907348633
    10. ')(' → logprob: -19.250001907348633

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011814195895567536
    2. ' ,' → logprob: -7.001181602478027
    3. ',b' → logprob: -8.251181602478027
    4. 'b' → logprob: -12.376181602478027
    5. 'a' → logprob: -13.501181602478027
    6. '   ' → logprob: -13.876181602478027
    7. ',
' → logprob: -14.251181602478027
    8. ')' → logprob: -15.126181602478027
    9. ',s' → logprob: -15.126181602478027
    10. '‌,' → logprob: -15.126181602478027

Token 235: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0017024369444698095
    2. ' b' → logprob: -6.376702308654785
    3. ',' → logprob: -16.0017032623291
    4. ' ' → logprob: -17.1267032623291
    5. '<|end|>' → logprob: -17.2517032623291
    6. 'a' → logprob: -17.3767032623291
    7. '   ' → logprob: -17.3767032623291
    8. ',b' → logprob: -17.6267032623291
    9. ')b' → logprob: -18.1267032623291
    10. ')' → logprob: -18.5017032623291

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040290577453561127
    2. ',s' → logprob: -8.000402450561523
    3. ' ,' → logprob: -9.625402450561523
    4. 's' → logprob: -14.375402450561523
    5. ',
' → logprob: -14.875402450561523
    6. '   ' → logprob: -15.375402450561523
    7. ')' → logprob: -16.375402450561523
    8. '),' → logprob: -17.000402450561523
    9. '_,' → logprob: -17.000402450561523
    10. 'a' → logprob: -18.250402450561523

Token 237: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.723973582556937e-05
    2. ' s' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.375017166137695
    4. '_s' → logprob: -15.875017166137695
    5. '(s' → logprob: -16.750017166137695
    6. ')' → logprob: -16.875017166137695
    7. '	s' → logprob: -18.375017166137695
    8. ',' → logprob: -18.500017166137695
    9. ' ' → logprob: -18.875017166137695
    10. '  ' → logprob: -18.875017166137695

Token 238: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -8.2994620242971e-06
    2. 'i' → logprob: -11.875008583068848
    3. '_,' → logprob: -14.125008583068848
    4. ')' → logprob: -16.00000762939453
    5. ')_' → logprob: -16.50000762939453
    6. ',' → logprob: -16.62500762939453
    7. ',i' → logprob: -16.75000762939453
    8. 's' → logprob: -17.00000762939453
    9. '```' → logprob: -17.50000762939453
    10. ',_' → logprob: -17.87500762939453

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044556602369993925
    2. ',f' → logprob: -7.875445365905762
    3. ' ,' → logprob: -10.125445365905762
    4. 'f' → logprob: -11.125445365905762
    5. ')' → logprob: -11.750445365905762
    6. '):' → logprob: -13.625445365905762
    7. '_,' → logprob: -14.000445365905762
    8. '):
' → logprob: -15.500445365905762
    9. '   ' → logprob: -15.625445365905762
    10. ',
' → logprob: -15.875445365905762

Token 240: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0076081594452261925
    2. ' f' → logprob: -4.882607936859131
    3. ' ' → logprob: -13.382608413696289
    4. '   ' → logprob: -15.382608413696289
    5. ')' → logprob: -15.632608413696289
    6. '  ' → logprob: -16.38260841369629
    7. '	f' → logprob: -17.25760841369629
    8. '    ' → logprob: -17.63260841369629
    9. ' ' → logprob: -17.88260841369629
    10. '
' → logprob: -18.38260841369629

Token 241: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.004761549644172192
    2. 'i' → logprob: -5.879761695861816
    3. ')' → logprob: -6.254761695861816
    4. 'f' → logprob: -11.254761695861816
    5. ')_' → logprob: -11.504761695861816
    6. '_)' → logprob: -13.379761695861816
    7. '):
' → logprob: -13.629761695861816
    8. '_f' → logprob: -13.754761695861816
    9. ')i' → logprob: -13.879761695861816
    10. 'I' → logprob: -14.629761695861816

Token 242: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023254794999957085
    2. '):
' → logprob: -3.773254871368408
    3. ':' → logprob: -11.89825439453125
    4. '):
' → logprob: -13.89825439453125
    5. '   ' → logprob: -14.14825439453125
    6. ')' → logprob: -14.64825439453125
    7. ' ):' → logprob: -15.14825439453125
    8. '):

' → logprob: -17.02325439453125
    9. ':
' → logprob: -17.39825439453125
    10. '}:' → logprob: -17.64825439453125

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014621533453464508
    2. '   ' → logprob: -4.514621734619141
    3. '
' → logprob: -6.514621734619141
    4. 'print' → logprob: -6.764621734619141
    5. ' print' → logprob: -7.014621734619141
    6. '    
' → logprob: -10.76462173461914
    7. '        
' → logprob: -12.13962173461914
    8. '```' → logprob: -13.13962173461914
    9. ':
' → logprob: -13.63962173461914
    10. '#' → logprob: -14.26462173461914

Token 244: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.531315314830863e-06
    2. ' print' → logprob: -13.000003814697266
    3. '
' → logprob: -13.875003814697266
    4. '   ' → logprob: -15.375003814697266
    5. '```' → logprob: -18.125003814697266
    6. '	print' → logprob: -19.875003814697266
    7. '#print' → logprob: -20.125003814697266
    8. '       ' → logprob: -20.125003814697266
    9. '#' → logprob: -20.500003814697266
    10. 'prin' → logprob: -20.625003814697266

Token 245: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.01857011578977108
    2. '"O' → logprob: -5.0185699462890625
    3. '"' → logprob: -5.3935699462890625
    4. '(' → logprob: -5.6435699462890625
    5. '('' → logprob: -6.5185699462890625
    6. '(False' → logprob: -7.0185699462890625
    7. '(O' → logprob: -7.6435699462890625
    8. '(True' → logprob: -8.518569946289062
    9. '0' → logprob: -8.768569946289062
    10. '"No' → logprob: -8.768569946289062

Token 246: '1' (ID: 16)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03657238557934761
    2. '"O' → logprob: -4.911572456359863
    3. '"C' → logprob: -5.161572456359863
    4. '"No' → logprob: -5.286572456359863
    5. 'NON' → logprob: -5.661572456359863
    6. '0' → logprob: -5.911572456359863
    7. '"N' → logprob: -6.161572456359863
    8. ''' → logprob: -6.161572456359863
    9. 'Oui' → logprob: -6.411572456359863
    10. 'Non' → logprob: -6.911572456359863

Token 247: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.023293111473321915
    2. ')' → logprob: -3.7732930183410645
    3. ')
' → logprob: -10.273293495178223
    4. ' )
' → logprob: -11.398293495178223
    5. '0' → logprob: -14.398293495178223
    6. ' )' → logprob: -15.023293495178223
    7. '')
' → logprob: -15.273293495178223
    8. '")
' → logprob: -15.523293495178223
    9. ')`
' → logprob: -15.648293495178223
    10. '   ' → logprob: -15.898293495178223

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.842555426876061e-06
    2. 'exit' → logprob: -13.000004768371582
    3. '```' → logprob: -13.625004768371582
    4. '<|end|>' → logprob: -14.875004768371582
    5. 'import' → logprob: -15.375004768371582
    6. ' exit' → logprob: -16.5000057220459
    7. '        
' → logprob: -16.5000057220459
    8. '   ' → logprob: -16.5000057220459
    9. 'break' → logprob: -16.5000057220459
    10. '	exit' → logprob: -16.6250057220459

Token 249: ' break' (ID: 2338)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.2687804698944092
    2. '       ' → logprob: -1.6437804698944092
    3. 'break' (adapté à ' break') → logprob: -3.393780469894409
    4. ' exit' → logprob: -4.893780708312988
    5. ' break' → logprob: -7.143780708312988
    6. '
' → logprob: -8.518780708312988
    7. '	exit' → logprob: -8.893780708312988
    8. 'import' → logprob: -9.518780708312988
    9. '        
' → logprob: -9.768780708312988
    10. '_exit' → logprob: -9.893780708312988

Token 250: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.9361264946837764e-07
    2. ' else' → logprob: -15.875
    3. '#else' → logprob: -16.75
    4. '```' → logprob: -17.75
    5. 'Else' → logprob: -19.125
    6. '}else' → logprob: -19.625
    7. '_else' → logprob: -19.875
    8. '``' → logprob: -21.625
    9. 'elses' → logprob: -21.625
    10. 'except' → logprob: -21.875

Token 251: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.9361264946837764e-07
    2. ' else' → logprob: -15.875
    3. '#else' → logprob: -17.125
    4. '```' → logprob: -17.5
    5. 'Else' → logprob: -19.375
    6. '}else' → logprob: -19.625
    7. '_else' → logprob: -20.125
    8. '``' → logprob: -21.625
    9. 'elses' → logprob: -21.625
    10. ' ' → logprob: -22.375

Token 252: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3485090732574463
    2. ':
' → logprob: -1.2235090732574463
    3. '   ' → logprob: -10.098508834838867
    4. ' :
' → logprob: -11.348508834838867
    5. ':
' → logprob: -11.973508834838867
    6. ' :' → logprob: -12.598508834838867
    7. ':

' → logprob: -13.848508834838867
    8. '):
' → logprob: -15.723508834838867
    9. '():
' → logprob: -15.848508834838867
    10. '：
' → logprob: -15.848508834838867

Token 253: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016098834748845547
    2. ' print' → logprob: -9.625161170959473
    3. '0' → logprob: -9.750161170959473
    4. '   ' → logprob: -10.250161170959473
    5. '       ' → logprob: -14.625161170959473
    6. '```' → logprob: -14.750161170959473
    7. '	print' → logprob: -15.500161170959473
    8. '1' → logprob: -17.000160217285156
    9. '(print' → logprob: -17.500160217285156
    10. ' ' → logprob: -17.500160217285156

Token 254: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00014036978245712817
    2. '   ' → logprob: -9.000140190124512
    3. ' print' → logprob: -11.125140190124512
    4. '0' → logprob: -13.125140190124512
    5. '	print' → logprob: -16.500141143798828
    6. '1' → logprob: -18.000141143798828
    7. '       ' → logprob: -18.250141143798828
    8. ' ' → logprob: -18.625141143798828
    9. '```' → logprob: -18.750141143798828
    10. '
' → logprob: -18.875141143798828

Token 255: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.1557283111615106e-05
    2. '   ' → logprob: -10.250041961669922
    3. ' print' → logprob: -12.125041961669922
    4. '#' → logprob: -14.250041961669922
    5. '       ' → logprob: -17.875041961669922
    6. '    
' → logprob: -19.125041961669922
    7. '
' → logprob: -19.875041961669922
    8. '```' → logprob: -19.875041961669922
    9. 'Print' → logprob: -20.000041961669922
    10. '0' → logprob: -20.000041961669922

Token 256: ' aucune' (ID: 51173)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32017189264297485
    2. '   ' → logprob: -1.32017183303833
    3. '0' → logprob: -6.19517183303833
    4. ' print' → logprob: -6.44517183303833
    5. 'auc' → logprob: -6.82017183303833
    6. ' ' → logprob: -7.82017183303833
    7. ' aucun' → logprob: -7.94517183303833
    8. '1' → logprob: -8.570172309875488
    9. 'pas' → logprob: -8.570172309875488
    10. '#' → logprob: -8.695172309875488

Token 257: ' réservation' (ID: 141767)
  Prédit: 'ré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ré' → logprob: -0.6813003420829773
    2. ' réservation' → logprob: -1.431300401687622
    3. 'reservation' → logprob: -2.181300401687622
    4. 'che' → logprob: -2.806300401687622
    5. '   ' → logprob: -3.431300401687622
    6. 'collision' → logprob: -4.306300163269043
    7. ' chev' → logprob: -4.431300163269043
    8. ' ' → logprob: -5.056300163269043
    9. ' reservation' → logprob: -5.931300163269043
    10. 'print' → logprob: -5.931300163269043

Token 258: ' ne' (ID: 453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8046713471412659
    2. 'print' → logprob: -1.679671287536621
    3. 'n' → logprob: -1.804671287536621
    4. 'ne' → logprob: -1.929671287536621
    5. ' ne' → logprob: -3.304671287536621
    6. ' n' → logprob: -4.804671287536621
    7. '       ' → logprob: -6.054671287536621
    8. '1' → logprob: -6.554671287536621
    9. ' ' → logprob: -6.929671287536621
    10. 'de' → logprob: -7.054671287536621

Token 259: ' chev' (ID: 127415)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.6510366797447205
    2. 'che' → logprob: -1.6510367393493652
    3. 'print' → logprob: -2.5260367393493652
    4. 'pose' → logprob: -2.7760367393493652
    5. 'n' → logprob: -3.5260367393493652
    6. ' chev' → logprob: -3.9010367393493652
    7. '   ' → logprob: -4.151036739349365
    8. 'g' → logprob: -4.776036739349365
    9. 'cause' → logprob: -4.901036739349365
    10. 'est' → logprob: -4.901036739349365

Token 260: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.037522055208683014
    2. 'aule' → logprob: -4.537521839141846
    3. 'aut' → logprob: -4.662521839141846
    4. 'au' → logprob: -5.287521839141846
    5. 'ouche' → logprob: -5.662521839141846
    6. 'aus' → logprob: -5.912521839141846
    7. 'a' → logprob: -6.037521839141846
    8. 'oule' → logprob: -8.037522315979004
    9. 'ause' → logprob: -8.037522315979004
    10. 'over' → logprob: -8.162522315979004

Token 261: '
' (ID: 198)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.21857136487960815
    2. 'le' → logprob: -2.218571424484253
    3. 'a' → logprob: -3.468571424484253
    4. 'r' → logprob: -3.468571424484253
    5. ' pas' → logprob: -4.843571186065674
    6. 'nt' → logprob: -5.093571186065674
    7. '(nt' → logprob: -5.968571186065674
    8. '(a' → logprob: -6.093571186065674
    9. ' a' → logprob: -6.593571186065674
    10. 'ment' → logprob: -6.718571186065674

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6944562196731567
    2. 'print' → logprob: -0.6944562196731567
    3. ' print' → logprob: -7.319456100463867
    4. '0' → logprob: -8.194456100463867
    5. '       ' → logprob: -8.569456100463867
    6. ',' → logprob: -9.319456100463867
    7. '1' → logprob: -9.694456100463867
    8. ' ' → logprob: -11.944456100463867
    9. '(' → logprob: -12.194456100463867
    10. ':' → logprob: -12.444456100463867

Token 263: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009009773493744433
    2. '0' → logprob: -7.625900745391846
    3. '   ' → logprob: -7.875900745391846
    4. ' print' → logprob: -10.375901222229004
    5. '1' → logprob: -13.375901222229004
    6. '
' → logprob: -16.375900268554688
    7. '2' → logprob: -16.750900268554688
    8. '3' → logprob: -17.000900268554688
    9. ' ' → logprob: -17.000900268554688
    10. '  ' → logprob: -17.125900268554688

Token 264: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10020752996206284
    2. '0' → logprob: -2.350207567214966
    3. ' (' → logprob: -14.725207328796387
    4. '(
' → logprob: -15.850207328796387
    5. '2' → logprob: -15.975207328796387
    6. '```' → logprob: -16.475208282470703
    7. ' ' → logprob: -16.725208282470703
    8. 'o' → logprob: -17.225208282470703
    9. '()' → logprob: -17.600208282470703
    10. 's' → logprob: -18.600208282470703

Token 265: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '2' → logprob: -15.375
    3. ' ' → logprob: -16.375
    4. ')' → logprob: -17.125
    5. '(' → logprob: -19.125
    6. '   ' → logprob: -20.875
    7. '00' → logprob: -21.0
    8. '-' → logprob: -21.375
    9. '=' → logprob: -21.625
    10. '  ' → logprob: -21.875

Token 266: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -14.750000953674316
    3. ')
' → logprob: -17.0
    4. '))' → logprob: -18.125
    5. ')`' → logprob: -19.625
    6. '())' → logprob: -20.75
    7. '）' → logprob: -21.0
    8. '`)' → logprob: -21.25
    9. ')#' → logprob: -22.0
    10. '')' → logprob: -22.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 264
Tokens correctement prédits (1ère position, stricte): 99
Tokens correctement prédits (1ère position, avec adaptation): 101
Tokens correctement prédits (top 10): 193
Précision stricte (1ère position): 37.50%
Précision adaptée (1ère position): 38.26%
Précision (top 10): 73.11%
================================================================================
