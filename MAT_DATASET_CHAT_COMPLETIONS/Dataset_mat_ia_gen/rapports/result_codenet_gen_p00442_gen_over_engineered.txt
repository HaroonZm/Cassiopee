================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:23:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class MatchResult:
    def __init__(self, winner: int, loser: int):
        self.winner = winner
        self.loser = loser

class TeamRankingSolver:
    def __init__(self, n_teams: int):
        self.n = n_teams
        self.graph = [[] for _ in range(n_teams)]
        self.inverse_graph = [[] for _ in range(n_teams)]
        self.indegree = [0] * n_teams
    
    def add_match_result(self, winner: int, loser: int):
        # Adjust indices to zero-based internally
        w, l = winner - 1, loser - 1
        self.graph[w].append(l)
        self.inverse_graph[l].append(w)
        self.indegree[l] += 1
    
    def topological_sort_and_check_unique(self):
        from collections import deque
        q = deque()
        for i in range(self.n):
            if self.indegree[i] == 0:
                q.append(i)
        order = []
        multiple_options = False
        while q:
            if len(q) >= 2:
                # More than one node with no incoming edges means multiple topological orders
                multiple_options = True
            current = q.popleft()
            order.append(current)
            for nxt in self.graph[current]:
                self.indegree[nxt] -= 1
                if self.indegree[nxt] == 0:
                    q.append(nxt)
        if len(order) != self.n:
            # Cycle detected or inconsistent data
            raise ValueError("No valid ranking possible (cycle detected)")
        return order, multiple_options

class AbstractRankingModel:
    def __init__(self, n: int, matches: list):
        self.n = n
        self.matches = matches
        self.solver = TeamRankingSolver(n)
        self._build_graph()
    
    def _build_graph(self):
        for match in self.matches:
            self.solver.add_match_result(match.winner, match.loser)
    
    def solve(self):
        try:
            order, multiple = self.solver.topological_sort_and_check_unique()
            # order is zero-based indexes of teams from highest rank (1st) to lowest rank (nth)
            return order, multiple
        except ValueError:
            # No valid order
            return None, None

class RankingIOHandler:
    def __init__(self):
        self.n = 0
        self.m = 0
        self.matches = []
    
    def read_input(self):
        import sys
        input = sys.stdin.readline
        self.n = int(input())
        self.m = int(input())
        self.matches = []
        for _ in range(self.m):
            winner, loser = map(int, input().split())
            self.matches.append(MatchResult(winner, loser))
    
    def output_result(self, order, multiple_possible):
        # order: zero-based team indices from 1st to nth
        # multiple_possible: boolean, True if multiple valid rankings exist
        for team_idx in order:
            print(team_idx+1)
        print(1 if multiple_possible else 0)

class ApplicationController:
    def __init__(self):
        self.io_handler = RankingIOHandler()
    
    def run(self):
        self.io_handler.read_input()
        model = AbstractRankingModel(self.io_handler.n, self.io_handler.matches)
        order, multiple = model.solve()
        if order is None:
            # According to problem statement, no invalid inputs will be given,
            # but if cycle or contradiction appears, fallback output:
            # Just output any permutation and 0 for uniqueness
            for i in range(1, self.io_handler.n + 1):
                print(i)
            print(0)
        else:
            self.io_handler.output_result(order, multiple)

if __name__ == "__main__":
    app = ApplicationController()
    app.run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Match' (ID: 20501)
  → Token d'amorce (pas de prédiction)

Token 2: 'Result' (ID: 2769)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24932962656021118
    2. '(' → logprob: -1.6243295669555664
    3. '{' → logprob: -3.8743295669555664
    4. '.' → logprob: -5.999329566955566
    5. '(:' → logprob: -8.249329566955566
    6. ' {' → logprob: -10.249329566955566
    7. '```' → logprob: -10.999329566955566
    8. ' :' → logprob: -11.124329566955566
    9. '({' → logprob: -11.249329566955566
    10. '[' → logprob: -11.874329566955566

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1015157550573349
    2. '(' → logprob: -2.351515769958496
    3. '.' → logprob: -7.476515769958496
    4. '   ' → logprob: -8.226515769958496
    5. '():' → logprob: -8.976515769958496
    6. '```' → logprob: -8.976515769958496
    7. '(:' → logprob: -9.726515769958496
    8. '(
' → logprob: -9.851515769958496
    9. ':
' → logprob: -9.976515769958496
    10. ' :' → logprob: -10.726515769958496

Token 5: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1429561376571655
    2. '   ' → logprob: -1.7679561376571655
    3. '```' → logprob: -2.142956256866455
    4. '(' → logprob: -2.267956256866455
    5. '    ' → logprob: -2.392956256866455
    6. '\' → logprob: -2.892956256866455
    7. ''' → logprob: -3.267956256866455
    8. '`' → logprob: -3.892956256866455
    9. '(space' → logprob: -4.767956256866455
    10. ':' → logprob: -4.767956256866455

Token 6: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016100767999887466
    2. ' __' → logprob: -4.391100883483887
    3. '__' → logprob: -6.266100883483887
    4. '  ' → logprob: -7.891100883483887
    5. ' ' → logprob: -8.141100883483887
    6. '_' → logprob: -9.016100883483887
    7. ' ‌' → logprob: -9.141100883483887
    8. ' init' → logprob: -9.266100883483887
    9. ' space' → logprob: -9.766100883483887
    10. '    ' → logprob: -9.766100883483887

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.4259644558478612e-05
    2. ' init' → logprob: -11.250014305114746
    3. 'ini' → logprob: -14.500014305114746
    4. '_init' → logprob: -14.500014305114746
    5. 'i' → logprob: -16.00001335144043
    6. '	init' → logprob: -17.00001335144043
    7. 'in' → logprob: -17.25001335144043
    8. '_' → logprob: -17.75001335144043
    9. 'inite' → logprob: -19.00001335144043
    10. 'innit' → logprob: -19.37501335144043

Token 8: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.11285989731550217
    2. '__' → logprob: -2.3628599643707275
    3. '(' → logprob: -4.862859725952148
    4. '__(
' → logprob: -5.487859725952148
    5. '_' → logprob: -8.237859725952148
    6. '(self' → logprob: -8.612859725952148
    7. '__((' → logprob: -9.112859725952148
    8. '_(' → logprob: -9.987859725952148
    9. '__('' → logprob: -10.487859725952148
    10. '__(*' → logprob: -10.862859725952148

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0016363817267119884
    2. ' self' → logprob: -6.501636505126953
    3. ')' → logprob: -9.376636505126953
    4. '(self' → logprob: -10.126636505126953
    5. ' )' → logprob: -12.501636505126953
    6. 's' → logprob: -13.251636505126953
    7. 'space' → logprob: -14.251636505126953
    8. ' ' → logprob: -14.501636505126953
    9. '_self' → logprob: -14.876636505126953
    10. ',self' → logprob: -15.001636505126953

Token 10: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17887404561042786
    2. '_' → logprob: -2.8038740158081055
    3. ',' → logprob: -3.4288740158081055
    4. ' )' → logprob: -3.8038740158081055
    5. ' ' → logprob: -3.9288740158081055
    6. '(' → logprob: -4.1788740158081055
    7. 'self' → logprob: -5.6788740158081055
    8. '.' → logprob: -5.9288740158081055
    9. '<|end|>' → logprob: -6.4288740158081055
    10. 'space' → logprob: -6.8038740158081055

Token 11: ' winner' (ID: 19499)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.24195526540279388
    2. ' self' → logprob: -1.616955280303955
    3. ')' → logprob: -4.616955280303955
    4. ' )' → logprob: -5.866955280303955
    5. 'text' → logprob: -6.741955280303955
    6. 'result' → logprob: -7.616955280303955
    7. ' text' → logprob: -8.116954803466797
    8. 's' → logprob: -8.241954803466797
    9. 'pattern' → logprob: -8.366954803466797
    10. ' match' → logprob: -8.491954803466797

Token 12: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07429499179124832
    2. ',' → logprob: -2.9492950439453125
    3. ')' → logprob: -4.1992950439453125
    4. ':' → logprob: -5.9492950439453125
    5. '=' → logprob: -7.6992950439453125
    6. '_' → logprob: -7.8242950439453125
    7. '):
' → logprob: -7.8242950439453125
    8. ' ):' → logprob: -9.449295043945312
    9. '   ' → logprob: -10.074295043945312
    10. '(' → logprob: -10.324295043945312

Token 13: ' int' (ID: 677)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.2131829857826233
    2. 'str' → logprob: -1.8381829261779785
    3. ' int' → logprob: -4.3381829261779785
    4. 'int' → logprob: -4.8381829261779785
    5. ' )' → logprob: -5.5881829261779785
    6. ')' → logprob: -5.7131829261779785
    7. '<|end|>' → logprob: -6.3381829261779785
    8. ' '' → logprob: -8.088183403015137
    9. ' ' → logprob: -8.088183403015137
    10. ' "' → logprob: -8.088183403015137

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11033593118190765
    2. '):' → logprob: -2.4853358268737793
    3. ')' → logprob: -3.8603358268737793
    4. ',
' → logprob: -10.610336303710938
    5. '   ' → logprob: -10.860336303710938
    6. ' ,' → logprob: -10.985336303710938
    7. ':' → logprob: -11.360336303710938
    8. '):
' → logprob: -11.610336303710938
    9. ',int' → logprob: -11.985336303710938
    10. '),' → logprob: -12.485336303710938

Token 15: ' loser' (ID: 115775)
  Prédit: ' loser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loser' → logprob: -0.00783031526952982
    2. ' winner' → logprob: -6.5078301429748535
    3. ' runner' → logprob: -6.5078301429748535
    4. ' player' → logprob: -7.0078301429748535
    5. ' challenger' → logprob: -7.0078301429748535
    6. ' los' → logprob: -7.5078301429748535
    7. ' opponent' → logprob: -7.7578301429748535
    8. ' result' → logprob: -8.257830619812012
    9. 'los' → logprob: -8.382830619812012
    10. ' match' → logprob: -8.632830619812012

Token 16: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5975291132926941
    2. '):' → logprob: -0.8475291132926941
    3. ',' → logprob: -4.22252893447876
    4. ')' → logprob: -5.09752893447876
    5. ' ):' → logprob: -8.847529411315918
    6. '):
' → logprob: -8.972529411315918
    7. ':int' → logprob: -9.097529411315918
    8. ' :' → logprob: -9.847529411315918
    9. '   ' → logprob: -10.722529411315918
    10. '```' → logprob: -10.847529411315918

Token 17: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5233645439147949
    2. 'int' → logprob: -0.8983645439147949
    3. ':int' → logprob: -9.523365020751953
    4. ' ' → logprob: -10.648365020751953
    5. '[int' → logprob: -10.648365020751953
    6. '=int' → logprob: -10.773365020751953
    7. '	int' → logprob: -11.023365020751953
    8. ' ' → logprob: -11.148365020751953
    9. '<int' → logprob: -11.148365020751953
    10. '(int' → logprob: -11.398365020751953

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018919837893918157
    2. ')' → logprob: -6.50189208984375
    3. ',' → logprob: -8.00189208984375
    4. ':' → logprob: -10.75189208984375
    5. '):
' → logprob: -10.75189208984375
    6. '   ' → logprob: -11.62689208984375
    7. ' ):' → logprob: -14.25189208984375
    8. '```' → logprob: -14.50189208984375
    9. ''):' → logprob: -14.75189208984375
    10. '),' → logprob: -14.87689208984375

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012710707262158394
    2. '<|end|>' → logprob: -5.0127105712890625
    3. ':' → logprob: -5.8877105712890625
    4. '   ' → logprob: -6.7627105712890625
    5. ')' → logprob: -8.012710571289062
    6. '\' → logprob: -8.012710571289062
    7. '    ' → logprob: -8.137710571289062
    8. '```' → logprob: -8.762710571289062
    9. 'newline' → logprob: -8.762710571289062
    10. '\n' → logprob: -9.012710571289062

Token 20: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10583027452230453
    2. '       ' → logprob: -2.480830192565918
    3. ' self' → logprob: -4.230830192565918
    4. '   ' → logprob: -6.855830192565918
    5. '        ' → logprob: -7.605830192565918
    6. '           ' → logprob: -8.730830192565918
    7. ' ' → logprob: -9.230830192565918
    8. '```' → logprob: -9.355830192565918
    9. ' ' → logprob: -9.855830192565918
    10. '    ' → logprob: -9.980830192565918

Token 21: '.w' (ID: 2234)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.015003261156380177
    2. '.w' → logprob: -4.265003204345703
    3. ' .' → logprob: -7.140003204345703
    4. '.user' → logprob: -12.140003204345703
    5. 'w' → logprob: -12.640003204345703
    6. '   ' → logprob: -12.640003204345703
    7. ' ' → logprob: -12.640003204345703
    8. ')' → logprob: -12.640003204345703
    9. '       ' → logprob: -13.140003204345703
    10. '.runner' → logprob: -13.390003204345703

Token 22: 'inner' (ID: 6484)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.013024809770286083
    2. 'inner' → logprob: -4.388024806976318
    3. '   ' → logprob: -8.263025283813477
    4. '```' → logprob: -9.263025283813477
    5. '       ' → logprob: -9.638025283813477
    6. 'e' → logprob: -9.888025283813477
    7. '      ' → logprob: -11.263025283813477
    8. '     ' → logprob: -11.763025283813477
    9. '_i' → logprob: -11.888025283813477
    10. '  ' → logprob: -12.138025283813477

Token 23: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1619390994310379
    2. ' =' → logprob: -2.0369391441345215
    3. '_' → logprob: -5.0369391441345215
    4. '<|end|>' → logprob: -5.2869391441345215
    5. ')' → logprob: -5.6619391441345215
    6. '.' → logprob: -6.1619391441345215
    7. ' ' → logprob: -7.2869391441345215
    8. ',' → logprob: -7.5369391441345215
    9. ' is' → logprob: -8.911938667297363
    10. '<|end|>' → logprob: -9.036938667297363

Token 24: ' winner' (ID: 19499)
  Prédit: ' winner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' winner' → logprob: -0.3868802487850189
    2. 'winner' → logprob: -1.1368802785873413
    3. 'w' → logprob: -11.761879920959473
    4. ' ' → logprob: -14.761879920959473
    5. ' ' → logprob: -14.886879920959473
    6. '```' → logprob: -15.636879920959473
    7. '	w' → logprob: -15.886879920959473
    8. ' w' → logprob: -16.63688087463379
    9. 'Winner' → logprob: -16.76188087463379
    10. '   ' → logprob: -16.88688087463379

Token 25: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011095219291746616
    2. '<|end|>' → logprob: -4.76109504699707
    3. '        
' → logprob: -7.26109504699707
    4. '
' → logprob: -7.63609504699707
    5. 'newline' → logprob: -7.88609504699707
    6. '        ' → logprob: -8.13609504699707
    7. '\n' → logprob: -8.51109504699707
    8. '```' → logprob: -9.76109504699707
    9. '   ' → logprob: -9.76109504699707
    10. '\' → logprob: -9.76109504699707

Token 26: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16669420897960663
    2. '<|end|>' → logprob: -1.916694164276123
    3. '
' → logprob: -6.166694164276123
    4. '        
' → logprob: -6.666694164276123
    5. '        ' → logprob: -7.041694164276123
    6. ' ' → logprob: -7.916694164276123
    7. ',' → logprob: -8.166694641113281
    8. 'newline' → logprob: -8.291694641113281
    9. '<|end|>' → logprob: -8.291694641113281
    10. ' 
' → logprob: -8.541694641113281

Token 27: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015280749648809433
    2. 'self' (adapté à ' self') → logprob: -6.501528263092041
    3. ' self' → logprob: -11.001527786254883
    4. '        ' → logprob: -13.501527786254883
    5. '```' → logprob: -13.626527786254883
    6. '   ' → logprob: -13.876527786254883
    7. '      ' → logprob: -14.001527786254883
    8. 'newline' → logprob: -14.251527786254883
    9. '\' → logprob: -14.376527786254883
    10. '<|end|>' → logprob: -14.376527786254883

Token 28: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.18392905592918396
    2. '.' → logprob: -1.8089290857315063
    3. '.loss' → logprob: -5.558928966522217
    4. '.lo' → logprob: -8.683929443359375
    5. ' .' → logprob: -9.058929443359375
    6. '.w' → logprob: -11.183929443359375
    7. '.less' → logprob: -13.058929443359375
    8. '```' → logprob: -13.308929443359375
    9. '.ll' → logprob: -13.558929443359375
    10. '.user' → logprob: -13.683929443359375

Token 29: 'oser' (ID: 26956)
  Prédit: 'oser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oser' → logprob: -0.12007657438516617
    2. 'os' → logprob: -2.2450766563415527
    3. 'o' → logprob: -4.995076656341553
    4. '   ' → logprob: -8.870076179504395
    5. '```' → logprob: -8.995076179504395
    6. '       ' → logprob: -9.870076179504395
    7. 'ose' → logprob: -9.870076179504395
    8. '  ' → logprob: -11.620076179504395
    9. 'oso' → logprob: -11.745076179504395
    10. 'los' → logprob: -11.995076179504395

Token 30: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47409719228744507
    2. ' =' → logprob: -0.9740971922874451
    3. '   ' → logprob: -11.72409725189209
    4. '<|end|>' → logprob: -12.34909725189209
    5. ')' → logprob: -12.84909725189209
    6. ' ' → logprob: -13.09909725189209
    7. '.' → logprob: -13.34909725189209
    8. '<|end|>' → logprob: -14.97409725189209
    9. '       ' → logprob: -15.34909725189209
    10. '_' → logprob: -15.72409725189209

Token 31: ' loser' (ID: 115775)
  Prédit: 'los'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'los' → logprob: -0.5246268510818481
    2. ' loser' → logprob: -0.8996268510818481
    3. ' los' → logprob: -6.774626731872559
    4. 'lo' → logprob: -8.524626731872559
    5. 'loss' → logprob: -9.399626731872559
    6. ' ' → logprob: -10.649626731872559
    7. ' ' → logprob: -11.274626731872559
    8. 'l' → logprob: -11.524626731872559
    9. 'Los' → logprob: -12.149626731872559
    10. 'lose' → logprob: -12.274626731872559

Token 32: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2455388605594635
    2. '<|end|>' → logprob: -1.8705388307571411
    3. '   ' → logprob: -3.7455389499664307
    4. '\n' → logprob: -4.995538711547852
    5. ':' → logprob: -4.995538711547852
    6. '.' → logprob: -5.495538711547852
    7. ',' → logprob: -5.620538711547852
    8. ')' → logprob: -5.870538711547852
    9. '```' → logprob: -5.995538711547852
    10. '    
' → logprob: -6.120538711547852

Token 33: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18133094906806946
    2. '<|end|>' → logprob: -2.931330919265747
    3. '   ' → logprob: -3.556330919265747
    4. '```' → logprob: -3.681330919265747
    5. ':' → logprob: -4.306331157684326
    6. ')' → logprob: -4.806331157684326
    7. '.' → logprob: -4.931331157684326
    8. 'class' → logprob: -5.056331157684326
    9. ',' → logprob: -5.056331157684326
    10. '\n' → logprob: -5.431331157684326

Token 34: ' Team' (ID: 10774)
  Prédit: ' Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Player' → logprob: -0.1745486557483673
    2. ' Team' → logprob: -2.924548625946045
    3. ' Match' → logprob: -3.049548625946045
    4. ' ' → logprob: -3.549548625946045
    5. ' Tournament' → logprob: -3.674548625946045
    6. ' User' → logprob: -6.799548625946045
    7. ' Chess' → logprob: -6.924548625946045
    8. ' Space' → logprob: -7.424548625946045
    9. ' Game' → logprob: -7.674548625946045
    10. ' ' → logprob: -8.174549102783203

Token 35: 'Ranking' (ID: 99832)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001254634466022253
    2. ' :' → logprob: -7.001254558563232
    3. '<|end|>' → logprob: -8.87625503540039
    4. '():' → logprob: -9.87625503540039
    5. '):' → logprob: -10.50125503540039
    6. ':
' → logprob: -10.50125503540039
    7. '(' → logprob: -10.62625503540039
    8. 'Name' → logprob: -11.50125503540039
    9. '(object' → logprob: -11.75125503540039
    10. '>:' → logprob: -11.75125503540039

Token 36: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002444125711917877
    2. '(' → logprob: -9.000244140625
    3. '<|end|>' → logprob: -10.500244140625
    4. '():' → logprob: -10.750244140625
    5. '):' → logprob: -11.000244140625
    6. ' :' → logprob: -11.500244140625
    7. '(:' → logprob: -11.750244140625
    8. ':**' → logprob: -11.875244140625
    9. ':
' → logprob: -12.250244140625
    10. '```' → logprob: -12.750244140625

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.398067828034982e-05
    2. '(' → logprob: -11.00007438659668
    3. '():' → logprob: -11.12507438659668
    4. '<|end|>' → logprob: -11.37507438659668
    5. '):' → logprob: -12.00007438659668
    6. ' :' → logprob: -12.12507438659668
    7. ':
' → logprob: -12.12507438659668
    8. '```' → logprob: -12.37507438659668
    9. ':**' → logprob: -12.87507438659668
    10. '(object' → logprob: -13.87507438659668

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021618904545903206
    2. ' def' → logprob: -4.271618843078613
    3. '    ' → logprob: -6.021618843078613
    4. ' 
' → logprob: -6.521618843078613
    5. '    
' → logprob: -6.646618843078613
    6. 'def' → logprob: -7.146618843078613
    7. ' ' → logprob: -7.521618843078613
    8. '<|end|>' → logprob: -8.771618843078613
    9. '_' → logprob: -9.146618843078613
    10. '
' → logprob: -9.396618843078613

Token 39: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3383558690547943
    2. 'def' (adapté à ' def') → logprob: -1.7133558988571167
    3. '   ' → logprob: -2.713355779647827
    4. '    ' → logprob: -3.338355779647827
    5. ' ' → logprob: -6.338356018066406
    6. 'd' → logprob: -6.838356018066406
    7. '```' → logprob: -7.588356018066406
    8. ' 
' → logprob: -8.088356018066406
    9. '    
' → logprob: -8.463356018066406
    10. '_' → logprob: -8.463356018066406

Token 40: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.05249368026852608
    2. ' _' → logprob: -3.6774935722351074
    3. '_' → logprob: -4.177493572235107
    4. ' ' → logprob: -5.052493572235107
    5. '__' → logprob: -6.552493572235107
    6. ' init' → logprob: -7.177493572235107
    7. '_init' → logprob: -7.677493572235107
    8. ' solve' → logprob: -7.677493572235107
    9. ' def' → logprob: -7.927493572235107
    10. ' ```' → logprob: -9.052494049072266

Token 41: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0076932176016271114
    2. 'nit' → logprob: -5.507693290710449
    3. 'it' → logprob: -6.257693290710449
    4. '   ' → logprob: -7.132693290710449
    5. '_init' → logprob: -7.632693290710449
    6. '__' → logprob: -8.50769329071045
    7. '```' → logprob: -9.50769329071045
    8. ' init' → logprob: -9.63269329071045
    9. '(init' → logprob: -11.00769329071045
    10. 'i' → logprob: -11.13269329071045

Token 42: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.005272295791655779
    2. '__' → logprob: -6.005272388458252
    3. '(self' → logprob: -6.005272388458252
    4. '__(
' → logprob: -8.755271911621094
    5. '(' → logprob: -9.255271911621094
    6. '__((' → logprob: -10.505271911621094
    7. 'self' → logprob: -11.255271911621094
    8. '<|end|>' → logprob: -11.755271911621094
    9. ' (' → logprob: -11.880271911621094
    10. '__(*' → logprob: -12.005271911621094

Token 43: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005068036844022572
    2. ' self' → logprob: -7.62550687789917
    3. ')' → logprob: -11.000506401062012
    4. '       ' → logprob: -14.750506401062012
    5. '
' → logprob: -14.875506401062012
    6. '   ' → logprob: -14.875506401062012
    7. '0' → logprob: -15.625506401062012
    8. '):
' → logprob: -15.750506401062012
    9. ',' → logprob: -15.875506401062012
    10. ' ' → logprob: -16.375507354736328

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001428332761861384
    2. ' ,' → logprob: -6.876428127288818
    3. 'self' → logprob: -8.001428604125977
    4. ')' → logprob: -10.126428604125977
    5. ',self' → logprob: -11.376428604125977
    6. ' self' → logprob: -13.376428604125977
    7. '<|end|>' → logprob: -13.626428604125977
    8. '‌,' → logprob: -14.001428604125977
    9. '(self' → logprob: -14.251428604125977
    10. '_,' → logprob: -14.251428604125977

Token 45: ' n' (ID: 297)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5226529836654663
    2. ' teams' → logprob: -1.6476529836654663
    3. 'self' → logprob: -2.022653102874756
    4. ' team' → logprob: -3.397653102874756
    5. ' num' → logprob: -4.022653102874756
    6. ' n' → logprob: -4.647653102874756
    7. 'n' → logprob: -4.897653102874756
    8. ')' → logprob: -6.022653102874756
    9. 'num' → logprob: -6.272653102874756
    10. 'teams' → logprob: -6.272653102874756

Token 46: '_' (ID: 62)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.040618207305669785
    2. '):' → logprob: -3.4156181812286377
    3. ')' → logprob: -5.165618419647217
    4. '_players' → logprob: -7.915618419647217
    5. ':int' → logprob: -8.415617942810059
    6. ' ):' → logprob: -9.040617942810059
    7. '_' → logprob: -9.165617942810059
    8. 'teams' → logprob: -9.540617942810059
    9. '_team' → logprob: -9.540617942810059
    10. ' :' → logprob: -9.540617942810059

Token 47: 'teams' (ID: 60159)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28596392273902893
    2. 'teams' → logprob: -1.9109638929367065
    3. ')' → logprob: -2.535964012145996
    4. '):' → logprob: -5.160964012145996
    5. '_players' → logprob: -5.535964012145996
    6. ':' → logprob: -5.535964012145996
    7. '):
' → logprob: -5.785964012145996
    8. 'players' → logprob: -6.035964012145996
    9. ' )' → logprob: -6.785964012145996
    10. '   ' → logprob: -8.285964012145996

Token 48: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07268277555704117
    2. '):' → logprob: -2.6976828575134277
    3. ':int' → logprob: -6.072682857513428
    4. ',' → logprob: -8.19768238067627
    5. ')' → logprob: -9.69768238067627
    6. ' :' → logprob: -9.69768238067627
    7. ' ):' → logprob: -11.19768238067627
    8. '):
' → logprob: -11.94768238067627
    9. '<|end|>' → logprob: -12.44768238067627
    10. '<|end|>' → logprob: -12.57268238067627

Token 49: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20146021246910095
    2. ' int' → logprob: -1.7014602422714233
    3. ')' → logprob: -10.076459884643555
    4. '=int' → logprob: -13.076459884643555
    5. ':int' → logprob: -13.701459884643555
    6. ' )' → logprob: -14.576459884643555
    7. '[int' → logprob: -15.451459884643555
    8. '(int' → logprob: -15.576459884643555
    9. ']int' → logprob: -15.576459884643555
    10. ',int' → logprob: -15.701459884643555

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06255596876144409
    2. ',' → logprob: -2.812556028366089
    3. ')' → logprob: -7.81255578994751
    4. ' ):' → logprob: -9.687556266784668
    5. '   ' → logprob: -9.812556266784668
    6. ':' → logprob: -10.562556266784668
    7. ' ,' → logprob: -10.937556266784668
    8. '       ' → logprob: -11.687556266784668
    9. '):
' → logprob: -12.062556266784668
    10. '<|end|>' → logprob: -13.187556266784668

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002470350591465831
    2. 'self' → logprob: -9.75024700164795
    3. '   ' → logprob: -9.87524700164795
    4. '<|end|>' → logprob: -10.50024700164795
    5. '
' → logprob: -10.62524700164795
    6. '        ' → logprob: -10.87524700164795
    7. '        
' → logprob: -11.50024700164795
    8. ' ' → logprob: -11.75024700164795
    9. '```' → logprob: -12.00024700164795
    10. '\n' → logprob: -12.25024700164795

Token 52: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.05429825559258461
    2. '       ' → logprob: -3.554298162460327
    3. ' self' → logprob: -3.804298162460327
    4. '
' → logprob: -6.554298400878906
    5. '   ' → logprob: -8.554298400878906
    6. '```' → logprob: -8.929298400878906
    7. '\n' → logprob: -10.054298400878906
    8. ' 
' → logprob: -10.679298400878906
    9. '        
' → logprob: -10.804298400878906
    10. ' ' → logprob: -10.804298400878906

Token 53: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.05021432787179947
    2. '.' → logprob: -3.4252142906188965
    3. '._' → logprob: -4.4252142906188965
    4. ' .' → logprob: -5.6752142906188965
    5. '.rank' → logprob: -8.425214767456055
    6. '.w' → logprob: -9.425214767456055
    7. '.num' → logprob: -9.425214767456055
    8. '       ' → logprob: -9.550214767456055
    9. '.team' → logprob: -9.675214767456055
    10. '   ' → logprob: -9.800214767456055

Token 54: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3856492842023727e-06
    2. ' _' → logprob: -13.875000953674316
    3. '_te' → logprob: -16.500001907348633
    4. '_team' → logprob: -16.750001907348633
    5. '\' → logprob: -16.875001907348633
    6. '_
' → logprob: -17.250001907348633
    7. '```' → logprob: -17.625001907348633
    8. '_tasks' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.250001907348633
    10. '_targets' → logprob: -18.500001907348633

Token 55: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.009800123982131481
    2. 'n' → logprob: -4.634799957275391
    3. ' ' → logprob: -10.38479995727539
    4. '_' → logprob: -11.88479995727539
    5. ' ' → logprob: -12.50979995727539
    6. '_n' → logprob: -13.00979995727539
    7. ' _' → logprob: -15.63479995727539
    8. '	n' → logprob: -15.88479995727539
    9. '    ' → logprob: -16.88479995727539
    10. ' н' → logprob: -17.50979995727539

Token 56: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.5776860184123507e-06
    2. ' _' → logprob: -13.12500286102295
    3. '```' → logprob: -16.625001907348633
    4. '_t' → logprob: -16.750001907348633
    5. '_tasks' → logprob: -17.125001907348633
    6. '   ' → logprob: -17.125001907348633
    7. '_te' → logprob: -17.500001907348633
    8. '_places' → logprob: -17.750001907348633
    9. '_
' → logprob: -17.875001907348633
    10. '_team' → logprob: -17.875001907348633

Token 57: 'teams' (ID: 60159)
  Prédit: 'teams'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teams' → logprob: -1.3856492842023727e-06
    2. 'team' → logprob: -14.750000953674316
    3. ' teams' → logprob: -14.875000953674316
    4. 'te' → logprob: -16.000001907348633
    5. 'Teams' → logprob: -16.000001907348633
    6. '_' → logprob: -16.250001907348633
    7. 't' → logprob: -16.750001907348633
    8. 'n' → logprob: -17.375001907348633
    9. '```' → logprob: -17.500001907348633
    10. 'tea' → logprob: -17.875001907348633

Token 58: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29145506024360657
    2. '
' → logprob: -1.5414550304412842
    3. '<|end|>' → logprob: -4.041455268859863
    4. '        
' → logprob: -5.791455268859863
    5. '    
' → logprob: -6.041455268859863
    6. '   ' → logprob: -6.166455268859863
    7. '    ' → logprob: -6.166455268859863
    8. ' ' → logprob: -6.291455268859863
    9. ' 
' → logprob: -6.291455268859863
    10. '        ' → logprob: -6.416455268859863

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008716804906725883
    2. '
' → logprob: -5.383716583251953
    3. '<|end|>' → logprob: -5.758716583251953
    4. '   ' → logprob: -8.008716583251953
    5. '        
' → logprob: -9.133716583251953
    6. 'self' → logprob: -9.258716583251953
    7. '```' → logprob: -9.758716583251953
    8. '<|end|>' → logprob: -10.008716583251953
    9. ' ' → logprob: -10.508716583251953
    10. 'def' → logprob: -10.508716583251953

Token 60: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10521326214075089
    2. 'self' (adapté à ' self') → logprob: -2.980213165283203
    3. ' self' → logprob: -3.230213165283203
    4. '<|end|>' → logprob: -5.605213165283203
    5. '
' → logprob: -5.855213165283203
    6. '        ' → logprob: -6.230213165283203
    7. '   ' → logprob: -8.105213165283203
    8. ' ' → logprob: -8.605213165283203
    9. ',' → logprob: -9.355213165283203
    10. 'def' → logprob: -9.605213165283203

Token 61: '.graph' (ID: 18104)
  Prédit: '.rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.9363895654678345
    2. '.' → logprob: -1.4363895654678345
    3. '._' → logprob: -1.8113895654678345
    4. '.r' → logprob: -2.686389446258545
    5. '.team' → logprob: -4.061389446258545
    6. ' .' → logprob: -4.061389446258545
    7. '_rank' → logprob: -4.186389446258545
    8. '.matches' → logprob: -4.186389446258545
    9. '.results' → logprob: -4.811389446258545
    10. '.s' → logprob: -4.936389446258545

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004094073548913002
    2. '=' → logprob: -5.504094123840332
    3. '[' → logprob: -12.254094123840332
    4. '<|end|>' → logprob: -12.754094123840332
    5. '=[]' → logprob: -13.254094123840332
    6. ' ' → logprob: -13.629094123840332
    7. ')' → logprob: -14.004094123840332
    8. '.' → logprob: -14.379094123840332
    9. '<|end|>' → logprob: -14.754094123840332
    10. '_' → logprob: -14.754094123840332

Token 63: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.10929930210113525
    2. ' [' → logprob: -2.6092991828918457
    3. ' [[' → logprob: -4.109299182891846
    4. '[' → logprob: -4.484299182891846
    5. ' {}' → logprob: -6.484299182891846
    6. ' []' → logprob: -8.234299659729004
    7. ' {' → logprob: -8.734299659729004
    8. '[[' → logprob: -8.984299659729004
    9. '[]' → logprob: -9.859299659729004
    10. ' [{}' → logprob: -9.984299659729004

Token 64: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1579796075820923
    2. '(' → logprob: -1.4079796075820923
    3. ']' → logprob: -1.5329796075820923
    4. 'for' → logprob: -1.6579796075820923
    5. ')' → logprob: -3.6579794883728027
    6. '(range' → logprob: -6.657979488372803
    7. ',' → logprob: -6.782979488372803
    8. '()' → logprob: -6.907979488372803
    9. '<|end|>' → logprob: -6.907979488372803
    10. '(n' → logprob: -7.032979488372803

Token 65: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4603095054626465
    2. '_' → logprob: -1.0853095054626465
    3. ' range' → logprob: -3.8353095054626465
    4. ' ' → logprob: -4.7103095054626465
    5. 'range' → logprob: -8.210309982299805
    6. '(range' → logprob: -9.335309982299805
    7. '_range' → logprob: -9.710309982299805
    8. ' in' → logprob: -10.460309982299805
    9. ' i' → logprob: -10.585309982299805
    10. '	range' → logprob: -12.085309982299805

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11704635620117188
    2. 'in' → logprob: -2.742046356201172
    3. 'range' → logprob: -3.117046356201172
    4. ' range' → logprob: -6.492046356201172
    5. ' ' → logprob: -8.617046356201172
    6. 'i' → logprob: -11.867046356201172
    7. '_' → logprob: -12.242046356201172
    8. '(range' → logprob: -12.242046356201172
    9. '  ' → logprob: -12.492046356201172
    10. ' _' → logprob: -12.867046356201172

Token 67: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078758880496025
    2. ' range' → logprob: -5.5040788650512695
    3. '(range' → logprob: -15.62907886505127
    4. '_' → logprob: -16.004077911376953
    5. '	range' → logprob: -16.629077911376953
    6. '   ' → logprob: -17.254077911376953
    7. ' ' → logprob: -17.254077911376953
    8. '_range' → logprob: -17.504077911376953
    9. ']' → logprob: -18.629077911376953
    10. '  ' → logprob: -18.879077911376953

Token 68: '(n' (ID: 2406)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011770996265113354
    2. '(' → logprob: -4.761771202087402
    3. '(n' → logprob: -5.761771202087402
    4. '(s' → logprob: -12.511771202087402
    5. '(
' → logprob: -14.136771202087402
    6. ' (' → logprob: -14.136771202087402
    7. 'self' → logprob: -14.761771202087402
    8. ')' → logprob: -15.886771202087402
    9. '(

' → logprob: -16.761770248413086
    10. ' self' → logprob: -16.886770248413086

Token 69: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.26249387860298157
    2. ')]' → logprob: -1.5124938488006592
    3. '(' → logprob: -5.137494087219238
    4. 'self' → logprob: -6.512494087219238
    5. ')' → logprob: -6.887494087219238
    6. ')])' → logprob: -7.012494087219238
    7. '(self' → logprob: -7.137494087219238
    8. ' )' → logprob: -9.137494087219238
    9. 'Teams' → logprob: -9.512494087219238
    10. 'teams' → logprob: -9.762494087219238

Token 70: 'teams' (ID: 60159)
  Prédit: 'teams'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teams' → logprob: -0.24831536412239075
    2. ')' → logprob: -1.8733153343200684
    3. '_' → logprob: -3.3733153343200684
    4. ')]' → logprob: -3.7483153343200684
    5. ')])' → logprob: -5.748315334320068
    6. 'self' → logprob: -5.998315334320068
    7. ' )' → logprob: -6.998315334320068
    8. 'Teams' → logprob: -7.498315334320068
    9. ')}' → logprob: -7.998315334320068
    10. ' teams' → logprob: -8.373315811157227

Token 71: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.263011578586884e-05
    2. ' )' → logprob: -10.875042915344238
    3. ')' → logprob: -11.750042915344238
    4. '       ' → logprob: -12.000042915344238
    5. ')]
' → logprob: -12.750042915344238
    6. ')])' → logprob: -12.875042915344238
    7. '   ' → logprob: -13.750042915344238
    8. ']' → logprob: -13.875042915344238
    9. '     ' → logprob: -15.000042915344238
    10. '])]' → logprob: -15.125042915344238

Token 72: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10625751316547394
    2. '   ' → logprob: -2.981257438659668
    3. '<|end|>' → logprob: -3.106257438659668
    4. '    
' → logprob: -5.606257438659668
    5. 'def' → logprob: -7.606257438659668
    6. ' def' → logprob: -8.356257438659668
    7. '       ' → logprob: -8.481257438659668
    8. '<|end|>' → logprob: -8.606257438659668
    9. ' 
' → logprob: -8.856257438659668
    10. '        
' → logprob: -9.231257438659668

Token 73: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2207762748003006
    2. ' def' → logprob: -1.9707763195037842
    3. '   ' → logprob: -3.470776319503784
    4. '
' → logprob: -4.220776081085205
    5. '    
' → logprob: -5.470776081085205
    6. '       ' → logprob: -5.595776081085205
    7. '<|end|>' → logprob: -6.595776081085205
    8. '        
' → logprob: -6.845776081085205
    9. ' 
' → logprob: -6.845776081085205
    10. 'self' (adapté à ' self') → logprob: -7.845776081085205

Token 74: '.inverse' (ID: 176558)
  Prédit: '.rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.rank' → logprob: -1.3048458099365234
    2. '.dist' → logprob: -1.4298458099365234
    3. '.in' → logprob: -1.9298458099365234
    4. '.ind' → logprob: -2.0548458099365234
    5. '.r' → logprob: -2.1798458099365234
    6. '.' → logprob: -3.4298458099365234
    7. '.vis' → logprob: -3.6798458099365234
    8. '.results' → logprob: -5.179845809936523
    9. '.w' → logprob: -5.304845809936523
    10. '.out' → logprob: -5.804845809936523

Token 75: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.0001923352392623201
    2. 'graph' → logprob: -8.875192642211914
    3. 'Graph' → logprob: -10.500192642211914
    4. '_' → logprob: -11.375192642211914
    5. '_edges' → logprob: -11.625192642211914
    6. 's' → logprob: -14.125192642211914
    7. ' graph' → logprob: -14.250192642211914
    8. '_g' → logprob: -14.375192642211914
    9. '	graph' → logprob: -14.375192642211914
    10. 'raph' → logprob: -14.625192642211914

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0011777279432862997
    2. '=' → logprob: -6.751177787780762
    3. '<|end|>' → logprob: -12.126177787780762
    4. ' ' → logprob: -13.376177787780762
    5. ')' → logprob: -16.001176834106445
    6. '[' → logprob: -16.126176834106445
    7. '=[]' → logprob: -16.126176834106445
    8. '<|end|>' → logprob: -16.501176834106445
    9. 's' → logprob: -16.751176834106445
    10. ' =
' → logprob: -17.251176834106445

Token 77: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.10021130740642548
    2. '[' → logprob: -2.3502113819122314
    3. ' [' → logprob: -12.725211143493652
    4. '[]' → logprob: -13.725211143493652
    5. ' ' → logprob: -15.100211143493652
    6. '[:]' → logprob: -16.10021209716797
    7. ' []' → logprob: -16.47521209716797
    8. '   ' → logprob: -18.47521209716797
    9. ' ' → logprob: -18.47521209716797
    10. '[[' → logprob: -18.72521209716797

Token 78: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07978283613920212
    2. 'for' → logprob: -2.579782724380493
    3. ' (' → logprob: -7.454782962799072
    4. '(n' → logprob: -8.329782485961914
    5. '(' → logprob: -10.454782485961914
    6. ' ' → logprob: -11.954782485961914
    7. ')' → logprob: -11.954782485961914
    8. '(for' → logprob: -12.329782485961914
    9. '       ' → logprob: -12.454782485961914
    10. '	for' → logprob: -12.579782485961914

Token 79: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10039364546537399
    2. ' _' → logprob: -2.350393533706665
    3. ' ' → logprob: -8.725393295288086
    4. ' range' → logprob: -11.475393295288086
    5. '<|end|>' → logprob: -12.475393295288086
    6. '_range' → logprob: -12.725393295288086
    7. ' in' → logprob: -13.225393295288086
    8. 'range' → logprob: -13.225393295288086
    9. '_in' → logprob: -13.975393295288086
    10. ' ' → logprob: -14.100393295288086

Token 80: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6642505526542664
    2. ' range' → logprob: -0.9142505526542664
    3. '_' → logprob: -2.914250612258911
    4. '_range' → logprob: -3.914250612258911
    5. ' in' → logprob: -5.164250373840332
    6. '(range' → logprob: -6.039250373840332
    7. ' _' → logprob: -6.414250373840332
    8. 'in' → logprob: -7.664250373840332
    9. ' ' → logprob: -10.164250373840332
    10. '_in' → logprob: -10.164250373840332

Token 81: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10022683441638947
    2. 'range' → logprob: -2.350226879119873
    3. '(range' → logprob: -11.225226402282715
    4. '_range' → logprob: -11.975226402282715
    5. '_' → logprob: -15.225226402282715
    6. '	range' → logprob: -15.475226402282715
    7. ' _' → logprob: -17.47522735595703
    8. ' ' → logprob: -17.47522735595703
    9. ' xrange' → logprob: -17.47522735595703
    10. '    ' → logprob: -19.22522735595703

Token 82: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011147680692374706
    2. ' (' → logprob: -4.636147499084473
    3. '(' → logprob: -6.636147499084473
    4. '(range' → logprob: -9.761147499084473
    5. ' range' → logprob: -10.886147499084473
    6. 'range' → logprob: -13.261147499084473
    7. ' ' → logprob: -15.636147499084473
    8. '(
' → logprob: -16.13614845275879
    9. '(self' → logprob: -16.88614845275879
    10. 'n' → logprob: -17.01114845275879

Token 83: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.676981345459353e-06
    2. ')' → logprob: -13.000005722045898
    3. 'Teams' → logprob: -13.625005722045898
    4. 'teams' → logprob: -14.125005722045898
    5. ' _' → logprob: -14.625005722045898
    6. ')_' → logprob: -15.625005722045898
    7. '_team' → logprob: -16.0000057220459
    8. '_)' → logprob: -16.2500057220459
    9. ' ' → logprob: -16.6250057220459
    10. ' Teams' → logprob: -16.8750057220459

Token 84: 'teams' (ID: 60159)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20378735661506653
    2. 'teams' → logprob: -1.7037873268127441
    3. ')' → logprob: -6.453787326812744
    4. 'Teams' → logprob: -7.703787326812744
    5. 't' → logprob: -9.953787803649902
    6. '_team' → logprob: -10.078787803649902
    7. '-' → logprob: -10.453787803649902
    8. '```' → logprob: -10.453787803649902
    9. '   ' → logprob: -10.703787803649902
    10. ' teams' → logprob: -10.953787803649902

Token 85: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.8921695047756657e-05
    2. ')]
' → logprob: -10.625028610229492
    3. ']' → logprob: -13.500028610229492
    4. ' )' → logprob: -14.125028610229492
    5. '       ' → logprob: -14.375028610229492
    6. ')' → logprob: -14.375028610229492
    7. ')])' → logprob: -15.625028610229492
    8. '')]' → logprob: -15.875028610229492
    9. ' ' → logprob: -16.125028610229492
    10. ')]

' → logprob: -16.250028610229492

Token 86: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.026742713525891304
    2. '   ' → logprob: -3.901742696762085
    3. ' 
' → logprob: -5.651742935180664
    4. '    
' → logprob: -6.901742935180664
    5. '<|end|>' → logprob: -6.901742935180664
    6. '  
' → logprob: -8.151742935180664
    7. '       ' → logprob: -9.401742935180664
    8. 'def' → logprob: -9.401742935180664
    9. '```' → logprob: -10.276742935180664
    10. '' → logprob: -10.526742935180664

Token 87: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4538900554180145
    2. '   ' → logprob: -2.328890085220337
    3. 'def' → logprob: -2.328890085220337
    4. ' 
' → logprob: -2.578890085220337
    5. '    
' → logprob: -2.953890085220337
    6. ' def' → logprob: -4.328889846801758
    7. '        
' → logprob: -4.453889846801758
    8. '       ' → logprob: -5.078889846801758
    9. '<|end|>' → logprob: -5.703889846801758
    10. '  
' → logprob: -5.828889846801758

Token 88: '.ind' (ID: 51969)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.44401007890701294
    2. '.rank' → logprob: -1.4440100193023682
    3. '.vis' → logprob: -2.694010019302368
    4. '.dist' → logprob: -3.444010019302368
    5. '.ind' → logprob: -5.694010257720947
    6. '.match' → logprob: -5.819010257720947
    7. '.r' → logprob: -6.319010257720947
    8. ' .' → logprob: -6.569010257720947
    9. '.visit' → logprob: -6.819010257720947
    10. '.results' → logprob: -7.194010257720947

Token 89: 'egree' (ID: 31042)
  Prédit: 'egree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'egree' → logprob: -0.16093112528324127
    2. 'eg' → logprob: -1.91093111038208
    3. 'egs' → logprob: -7.53593111038208
    4. 'ex' → logprob: -8.910931587219238
    5. '_degree' → logprob: -11.410931587219238
    6. 'e' → logprob: -11.910931587219238
    7. '_' → logprob: -12.660931587219238
    8. 'ege' → logprob: -12.910931587219238
    9. ' eg' → logprob: -12.910931587219238
    10. 'gree' → logprob: -13.660931587219238

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006872490979731083
    2. '[' → logprob: -5.506872653961182
    3. '=' → logprob: -6.881872653961182
    4. 's' → logprob: -7.006872653961182
    5. ' ' → logprob: -7.256872653961182
    6. ' =[' → logprob: -9.506872177124023
    7. '  ' → logprob: -10.381872177124023
    8. '[:]' → logprob: -10.631872177124023
    9. '[]' → logprob: -12.006872177124023
    10. '_' → logprob: -12.756872177124023

Token 91: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.0788961797952652
    2. '[' → logprob: -2.5788962841033936
    3. ' ' → logprob: -12.203896522521973
    4. '   ' → logprob: -14.578896522521973
    5. '[n' → logprob: -15.078896522521973
    6. '0' → logprob: -15.328896522521973
    7. ' ' → logprob: -15.953896522521973
    8. '	' → logprob: -15.953896522521973
    9. '[int' → logprob: -16.078895568847656
    10. '  ' → logprob: -16.953895568847656

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013273799559101462
    2. ' ' → logprob: -6.6263275146484375
    3. '   ' → logprob: -14.126327514648438
    4. ')' → logprob: -15.751327514648438
    5. '  ' → logprob: -16.126327514648438
    6. '           ' → logprob: -16.376327514648438
    7. ']' → logprob: -16.813827514648438
    8. '       ' → logprob: -16.938827514648438
    9. '     ' → logprob: -17.188827514648438
    10. '    ' → logprob: -17.376327514648438

Token 93: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06518974900245667
    2. ' for' → logprob: -2.815189838409424
    3. ' ]' → logprob: -5.940189838409424
    4. ']*' → logprob: -8.440189361572266
    5. ')' → logprob: -8.940189361572266
    6. 'for' → logprob: -9.565189361572266
    7. ' ' → logprob: -9.815189361572266
    8. '<|end|>' → logprob: -9.940189361572266
    9. ',' → logprob: -10.065189361572266
    10. '<|end|>' → logprob: -12.190189361572266

Token 94: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.36197930574417114
    2. '(n' → logprob: -1.9869792461395264
    3. '[n' → logprob: -2.9869792461395264
    4. ']' → logprob: -3.2369792461395264
    5. '*' → logprob: -3.9869792461395264
    6. ' for' → logprob: -4.1119794845581055
    7. '[' → logprob: -4.2369794845581055
    8. ' ' → logprob: -4.6119794845581055
    9. '*n' → logprob: -4.8619794845581055
    10. ')' → logprob: -6.3619794845581055

Token 95: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004112592898309231
    2. ' n' → logprob: -5.504112720489502
    3. 'self' → logprob: -10.379112243652344
    4. '	n' → logprob: -13.379112243652344
    5. ' self' → logprob: -14.254112243652344
    6. '(n' → logprob: -14.754112243652344
    7. '   ' → logprob: -15.379112243652344
    8. ')n' → logprob: -15.629112243652344
    9. '
' → logprob: -16.379112243652344
    10. ' ' → logprob: -17.754112243652344

Token 96: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009953820146620274
    2. 'teams' → logprob: -6.13495397567749
    3. '
' → logprob: -6.25995397567749
    4. '[' → logprob: -6.75995397567749
    5. '       ' → logprob: -7.25995397567749
    6. '   ' → logprob: -7.38495397567749
    7. '_
' → logprob: -7.38495397567749
    8. '<|end|>' → logprob: -7.63495397567749
    9. '```' → logprob: -8.009953498840332
    10. '_team' → logprob: -8.509953498840332

Token 97: 'teams' (ID: 60159)
  Prédit: 'teams'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teams' → logprob: -3.8219583075260743e-05
    2. '_' → logprob: -11.250038146972656
    3. 'team' → logprob: -11.750038146972656
    4. ' teams' → logprob: -11.875038146972656
    5. 'Teams' → logprob: -11.875038146972656
    6. '```' → logprob: -13.875038146972656
    7. 't' → logprob: -14.750038146972656
    8. '   ' → logprob: -15.125038146972656
    9. ' ' → logprob: -15.250038146972656
    10. '_team' → logprob: -15.500038146972656

Token 98: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5371628403663635
    2. 'def' → logprob: -1.1621627807617188
    3. ' def' → logprob: -2.2871627807617188
    4. '    
' → logprob: -6.912162780761719
    5. '
' → logprob: -8.912162780761719
    6. '	def' → logprob: -10.037162780761719
    7. '        
' → logprob: -10.787162780761719
    8. ' 
' → logprob: -11.162162780761719
    9. '<|end|>' → logprob: -11.162162780761719
    10. '<|end|>' → logprob: -13.162162780761719

Token 100: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004164945334196091
    2. ' def' → logprob: -6.254165172576904
    3. 'd' → logprob: -6.629165172576904
    4. '   ' → logprob: -7.004165172576904
    5. 'de' → logprob: -12.629164695739746
    6. ' ' → logprob: -15.004164695739746
    7. ' 
' → logprob: -15.129164695739746
    8. '	def' → logprob: -15.504164695739746
    9. '    
' → logprob: -15.879164695739746
    10. '
' → logprob: -16.129165649414062

Token 101: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.00116236531175673
    2. ' top' → logprob: -7.751162528991699
    3. ' def' → logprob: -8.6261625289917
    4. ' solve' → logprob: -8.7511625289917
    5. ' build' → logprob: -9.0011625289917
    6. '_add' → logprob: -9.1261625289917
    7. ' Add' → logprob: -9.8761625289917
    8. ' ' → logprob: -10.3761625289917
    9. ' insert' → logprob: -10.8761625289917
    10. ' find' → logprob: -11.3761625289917

Token 102: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -0.008023456670343876
    2. '_result' → logprob: -5.008023262023926
    3. '_' → logprob: -6.758023262023926
    4. '_edge' → logprob: -8.883023262023926
    5. '_relation' → logprob: -13.008023262023926
    6. '_game' → logprob: -13.633023262023926
    7. ' match' → logprob: -14.633023262023926
    8. ' _' → logprob: -14.758023262023926
    9. '_loss' → logprob: -14.883023262023926
    10. '_matches' → logprob: -15.008023262023926

Token 103: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.014830500818789005
    2. '(self' → logprob: -4.264830589294434
    3. '(' → logprob: -7.389830589294434
    4. '_match' → logprob: -11.139830589294434
    5. 'Result' → logprob: -11.639830589294434
    6. '_' → logprob: -12.014830589294434
    7. 'result' → logprob: -12.139830589294434
    8. '_Result' → logprob: -12.264830589294434
    9. '_results' → logprob: -12.639830589294434
    10. '_RESULT' → logprob: -13.889830589294434

Token 104: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0027413968928158283
    2. '(' → logprob: -6.12774133682251
    3. ' (' → logprob: -7.50274133682251
    4. '(
' → logprob: -12.877741813659668
    5. '(s' → logprob: -14.252741813659668
    6. '   ' → logprob: -15.002741813659668
    7. ' self' → logprob: -15.377741813659668
    8. ' ' → logprob: -15.877741813659668
    9. 'self' → logprob: -15.877741813659668
    10. '(sel' → logprob: -16.00274085998535

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019269285257905722
    2. ' ,' → logprob: -8.625192642211914
    3. 'self' → logprob: -11.750192642211914
    4. ',w' → logprob: -12.750192642211914
    5. ',self' → logprob: -14.250192642211914
    6. '_,' → logprob: -14.750192642211914
    7. '       ' → logprob: -15.000192642211914
    8. 's' → logprob: -15.250192642211914
    9. 'w' → logprob: -16.000192642211914
    10. '   ' → logprob: -16.000192642211914

Token 106: ' winner' (ID: 19499)
  Prédit: ' winner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' winner' → logprob: -0.1416502296924591
    2. 'winner' → logprob: -2.1416501998901367
    3. ' self' → logprob: -5.391650199890137
    4. ' match' → logprob: -5.516650199890137
    5. 'self' → logprob: -5.516650199890137
    6. 'match' → logprob: -7.141650199890137
    7. '       ' → logprob: -8.016650199890137
    8. '   ' → logprob: -8.266650199890137
    9. 'w' → logprob: -8.766650199890137
    10. 'result' → logprob: -8.891650199890137

Token 107: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18199597299098969
    2. ':' → logprob: -1.8069959878921509
    3. ':int' → logprob: -6.556995868682861
    4. ' ,' → logprob: -7.306995868682861
    5. ' :' → logprob: -9.05699634552002
    6. '):' → logprob: -11.30699634552002
    7. ',w' → logprob: -12.05699634552002
    8. ',int' → logprob: -12.05699634552002
    9. '   ' → logprob: -12.43199634552002
    10. ':,' → logprob: -12.55699634552002

Token 108: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0709221363067627
    2. 'int' → logprob: -2.8209221363067627
    3. ' ' → logprob: -4.820921897888184
    4. ')' → logprob: -7.945921897888184
    5. ':int' → logprob: -8.945921897888184
    6. ' ,' → logprob: -9.570921897888184
    7. ',int' → logprob: -9.695921897888184
    8. ',' → logprob: -9.695921897888184
    9. ' winner' → logprob: -9.820921897888184
    10. ' )' → logprob: -10.070921897888184

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6240566083070007e-06
    2. ' ,' → logprob: -13.500001907348633
    3. ',
' → logprob: -16.125001907348633
    4. '‌,' → logprob: -17.125001907348633
    5. ',

' → logprob: -17.375001907348633
    6. ',int' → logprob: -17.500001907348633
    7. ',w' → logprob: -18.000001907348633
    8. ')' → logprob: -19.000001907348633
    9. '

' → logprob: -20.000001907348633
    10. ' ' → logprob: -20.000001907348633

Token 110: ' loser' (ID: 115775)
  Prédit: ' loser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loser' → logprob: -0.07030341029167175
    2. 'los' → logprob: -2.695303440093994
    3. 'lo' → logprob: -8.195302963256836
    4. ' los' → logprob: -9.820302963256836
    5. '```' → logprob: -11.445302963256836
    6. ' lo' → logprob: -11.945302963256836
    7. ' ' → logprob: -12.195302963256836
    8. '       ' → logprob: -12.695302963256836
    9. ' ' → logprob: -12.820302963256836
    10. 'Los' → logprob: -13.570302963256836

Token 111: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1277054399251938
    2. ':' → logprob: -2.1277053356170654
    3. ',' → logprob: -8.127705574035645
    4. ' ):' → logprob: -8.502705574035645
    5. ')' → logprob: -8.627705574035645
    6. '):
' → logprob: -9.627705574035645
    7. ' :' → logprob: -11.377705574035645
    8. ':int' → logprob: -11.627705574035645
    9. '   ' → logprob: -12.252705574035645
    10. ']:' → logprob: -13.502705574035645

Token 112: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.29814064502716064
    2. 'int' → logprob: -1.4231406450271606
    3. ')' → logprob: -4.798140525817871
    4. '):' → logprob: -5.923140525817871
    5. ' ):' → logprob: -6.048140525817871
    6. ':int' → logprob: -6.173140525817871
    7. ' )' → logprob: -6.798140525817871
    8. ' ' → logprob: -9.048140525817871
    9. '1' → logprob: -9.548140525817871
    10. '[int' → logprob: -10.173140525817871

Token 113: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0036523377057164907
    2. ')' → logprob: -5.628652572631836
    3. '):
' → logprob: -10.128652572631836
    4. ':' → logprob: -11.503652572631836
    5. ' ):' → logprob: -13.503652572631836
    6. ',' → logprob: -15.253652572631836
    7. '   ' → logprob: -15.628652572631836
    8. '):
' → logprob: -16.128652572631836
    9. '):

' → logprob: -16.878652572631836
    10. ' ' → logprob: -17.003652572631836

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004390134708955884
    2. '
' → logprob: -8.750438690185547
    3. ',' → logprob: -10.250438690185547
    4. ')' → logprob: -10.250438690185547
    5. ' self' → logprob: -10.250438690185547
    6. '```' → logprob: -10.375438690185547
    7. '        
' → logprob: -10.375438690185547
    8. ':' → logprob: -10.625438690185547
    9. '<|end|>' → logprob: -10.875438690185547
    10. 'self' → logprob: -11.000438690185547

Token 115: ' #' (ID: 1069)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.33441638946533203
    2. 'self' → logprob: -1.834416389465332
    3. '       ' → logprob: -2.084416389465332
    4. '        ' → logprob: -9.709416389465332
    5. ' ' → logprob: -10.834416389465332
    6. '	self' → logprob: -11.084416389465332
    7. '   ' → logprob: -11.334416389465332
    8. '```' → logprob: -11.334416389465332
    9. ' ' → logprob: -11.834416389465332
    10. '        
' → logprob: -12.209416389465332

Token 116: ' Adjust' (ID: 43076)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31468263268470764
    2. 'self' → logprob: -1.3146826028823853
    3. '       ' → logprob: -6.814682483673096
    4. '        ' → logprob: -8.814682960510254
    5. '```' → logprob: -9.939682960510254
    6. ' ' → logprob: -10.064682960510254
    7. ' #' → logprob: -10.689682960510254
    8. '#' → logprob: -11.064682960510254
    9. ' if' → logprob: -11.939682960510254
    10. '	self' → logprob: -12.314682960510254

Token 117: ' indices' (ID: 30378)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5472346544265747
    2. 'self' → logprob: -1.6722346544265747
    3. ' winner' → logprob: -2.297234535217285
    4. '       ' → logprob: -2.672234535217285
    5. ' for' → logprob: -3.547234535217285
    6. ' the' → logprob: -4.172234535217285
    7. 'winner' → logprob: -5.297234535217285
    8. '(self' → logprob: -5.672234535217285
    9. '   ' → logprob: -6.797234535217285
    10. ' to' → logprob: -6.922234535217285

Token 118: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06821790337562561
    2. '<|end|>' → logprob: -3.3182179927825928
    3. '        ' → logprob: -4.943217754364014
    4. ')' → logprob: -5.193217754364014
    5. ' ' → logprob: -5.318217754364014
    6. ',' → logprob: -6.193217754364014
    7. '   ' → logprob: -6.193217754364014
    8. ' =' → logprob: -6.443217754364014
    9. '<|end|>' → logprob: -6.693217754364014
    10. '=' → logprob: -7.068217754364014

Token 119: ' zero' (ID: 12421)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.5507218837738037
    2. '0' → logprob: -1.4257218837738037
    3. ' zero' → logprob: -2.1757218837738037
    4. ' ' → logprob: -2.9257218837738037
    5. 'zero' → logprob: -4.300722122192383
    6. 'be' → logprob: -6.550722122192383
    7. '1' → logprob: -8.050722122192383
    8. '-' → logprob: -8.175722122192383
    9. ' start' → logprob: -9.300722122192383
    10. ' match' → logprob: -9.800722122192383

Token 120: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.010443982668220997
    2. ' -' → logprob: -5.510444164276123
    3. '_based' → logprob: -5.510444164276123
    4. 'based' → logprob: -6.260444164276123
    5. '-index' → logprob: -8.135443687438965
    6. '-' → logprob: -9.760443687438965
    7. ' based' → logprob: -10.760443687438965
    8. '-base' → logprob: -12.010443687438965
    9. 'Based' → logprob: -12.385443687438965
    10. '_index' → logprob: -12.510443687438965

Token 121: ' internally' (ID: 65530)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47739461064338684
    2. '
' → logprob: -1.2273945808410645
    3. '<|end|>' → logprob: -3.2273945808410645
    4. '        
' → logprob: -3.6023945808410645
    5. ')' → logprob: -5.3523945808410645
    6. ' 
' → logprob: -5.6023945808410645
    7. '        ' → logprob: -5.6023945808410645
    8. ',' → logprob: -6.1023945808410645
    9. '  
' → logprob: -6.6023945808410645
    10. '    
' → logprob: -7.2273945808410645

Token 122: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18198752403259277
    2. '<|end|>' → logprob: -2.5569875240325928
    3. '        
' → logprob: -3.4319875240325928
    4. '        ' → logprob: -4.181987762451172
    5. ')' → logprob: -4.556987762451172
    6. ',' → logprob: -4.806987762451172
    7. ' ' → logprob: -5.056987762451172
    8. ' 
' → logprob: -5.181987762451172
    9. '
' → logprob: -5.931987762451172
    10. '    
' → logprob: -6.681987762451172

Token 124: ' w' (ID: 286)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.985095739364624
    2. ' ' → logprob: -1.485095739364624
    3. ' self' → logprob: -1.860095739364624
    4. '        ' → logprob: -2.110095739364624
    5. 'self' → logprob: -2.360095739364624
    6. ' winner' → logprob: -4.860095977783203
    7. ' ' → logprob: -5.360095977783203
    8. 'winner' → logprob: -5.610095977783203
    9. 'w' (adapté à ' w') → logprob: -5.985095977783203
    10. '```' → logprob: -6.110095977783203

Token 125: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06955765187740326
    2. 'inner' → logprob: -3.0695576667785645
    3. ' -' → logprob: -3.9445576667785645
    4. 'i' → logprob: -7.6945576667785645
    5. '_' → logprob: -7.8195576667785645
    6. 'inne' → logprob: -9.319557189941406
    7. ',' → logprob: -10.194557189941406
    8. 'e' → logprob: -10.444557189941406
    9. '1' → logprob: -10.569557189941406
    10. 'h' → logprob: -10.569557189941406

Token 126: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4029901325702667
    2. ' loser' → logprob: -1.1529901027679443
    3. ' l' → logprob: -5.527990341186523
    4. ' los' → logprob: -6.277990341186523
    5. ' "' → logprob: -6.777990341186523
    6. 'l' → logprob: -6.902990341186523
    7. ' winner' → logprob: -7.152990341186523
    8. ' ' → logprob: -7.152990341186523
    9. '<|end|>' → logprob: -7.152990341186523
    10. 'los' → logprob: -7.402990341186523

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026313884183764458
    2. '=' → logprob: -3.6513137817382812
    3. ' ' → logprob: -12.526313781738281
    4. ')' → logprob: -12.526313781738281
    5. ' =
' → logprob: -12.651313781738281
    6. '-' → logprob: -13.901313781738281
    7. ',' → logprob: -14.026313781738281
    8. ' =)' → logprob: -14.776313781738281
    9. '=int' → logprob: -15.276313781738281
    10. '  ' → logprob: -15.901313781738281

Token 128: ' winner' (ID: 19499)
  Prédit: ' winner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' winner' → logprob: -0.08873964846134186
    2. 'winner' → logprob: -2.7137396335601807
    3. ' w' → logprob: -4.46373987197876
    4. 'w' → logprob: -4.96373987197876
    5. '	w' → logprob: -9.838739395141602
    6. ' ' → logprob: -10.838739395141602
    7. '    ' → logprob: -11.838739395141602
    8. '>w' → logprob: -11.838739395141602
    9. ' ' → logprob: -12.463739395141602
    10. '(w' → logprob: -12.588739395141602

Token 129: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018171481788158417
    2. '-' → logprob: -4.018171310424805
    3. ' ' → logprob: -10.768171310424805
    4. '1' → logprob: -16.018171310424805
    5. ' ' → logprob: -16.518171310424805
    6. '<|end|>' → logprob: -17.018171310424805
    7. '```' → logprob: -17.018171310424805
    8. ',' → logprob: -17.143171310424805
    9. ' ,' → logprob: -17.393171310424805
    10. '  ' → logprob: -17.518171310424805

Token 130: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002185472520068288
    2. ' ' → logprob: -6.127185344696045
    3. '```' → logprob: -15.502185821533203
    4. '   ' → logprob: -16.127185821533203
    5. '`' → logprob: -17.627185821533203
    6. '<|end|>' → logprob: -17.814685821533203
    7. '
' → logprob: -18.439685821533203
    8. '１' → logprob: -18.439685821533203
    9. '۱' → logprob: -18.752185821533203
    10. '       ' → logprob: -18.877185821533203

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -17.50000762939453
    4. '<|end|>' → logprob: -18.00000762939453
    5. '   ' → logprob: -18.81250762939453
    6. '`' → logprob: -19.18750762939453
    7. '۱' → logprob: -19.62500762939453
    8. '0' → logprob: -19.68750762939453
    9. '１' → logprob: -19.68750762939453
    10. '2' → logprob: -20.06250762939453

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09503062069416046
    2. '<|end|>' → logprob: -2.4700305461883545
    3. ' ,' → logprob: -6.095030784606934
    4. ')' → logprob: -6.095030784606934
    5. '<|end|>' → logprob: -7.470030784606934
    6. ',
' → logprob: -7.845030784606934
    7. '       ' → logprob: -8.470030784606934
    8. ' ' → logprob: -8.595030784606934
    9. ']' → logprob: -9.845030784606934
    10. ',l' → logprob: -9.845030784606934

Token 133: ' loser' (ID: 115775)
  Prédit: ' loser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loser' → logprob: -0.05749749764800072
    2. 'los' → logprob: -3.307497501373291
    3. ' los' → logprob: -4.432497501373291
    4. ' l' → logprob: -5.557497501373291
    5. 'l' → logprob: -6.057497501373291
    6. ' ' → logprob: -7.682497501373291
    7. 'lo' → logprob: -8.432497024536133
    8. 'loss' → logprob: -9.432497024536133
    9. ' ' → logprob: -10.182497024536133
    10. ' lo' → logprob: -10.682497024536133

Token 134: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0013321444857865572
    2. '-' → logprob: -6.6263322830200195
    3. ' ' → logprob: -12.12633228302002
    4. '<|end|>' → logprob: -14.87633228302002
    5. '   ' → logprob: -16.001331329345703
    6. '<|end|>' → logprob: -16.376331329345703
    7. '1' → logprob: -16.876331329345703
    8. ' ' → logprob: -17.001331329345703
    9. ' -
' → logprob: -17.376331329345703
    10. '  ' → logprob: -17.626331329345703

Token 135: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009757863357663155
    2. ' ' → logprob: -4.634757995605469
    3. '<|end|>' → logprob: -13.509757995605469
    4. '   ' → logprob: -16.32225799560547
    5. '```' → logprob: -16.44725799560547
    6. '  ' → logprob: -16.88475799560547
    7. '۱' → logprob: -17.00975799560547
    8. '１' → logprob: -17.13475799560547
    9. '<|end|>' → logprob: -17.13475799560547
    10. '`' → logprob: -17.38475799560547

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.670925358776003e-05
    2. ' ' → logprob: -9.625066757202148
    3. '<|end|>' → logprob: -15.000066757202148
    4. '```' → logprob: -16.00006675720215
    5. '`' → logprob: -16.87506675720215
    6. '   ' → logprob: -17.25006675720215
    7. '۱' → logprob: -17.31256675720215
    8. '１' → logprob: -17.87506675720215
    9. '-' → logprob: -18.18756675720215
    10. '  ' → logprob: -18.25006675720215

Token 137: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.043237365782260895
    2. '       ' → logprob: -3.1682374477386475
    3. '<|end|>' → logprob: -9.293237686157227
    4. '
' → logprob: -9.918237686157227
    5. '        
' → logprob: -10.043237686157227
    6. 'self' → logprob: -10.793237686157227
    7. '  
' → logprob: -11.668237686157227
    8. ' 
' → logprob: -12.168237686157227
    9. '    
' → logprob: -12.293237686157227
    10. ',' → logprob: -12.668237686157227

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6337749361991882
    2. '
' → logprob: -0.7587749361991882
    3. '<|end|>' → logprob: -7.633774757385254
    4. 'self' → logprob: -8.008774757385254
    5. '        
' → logprob: -8.508774757385254
    6. '
' → logprob: -10.258774757385254
    7. '  
' → logprob: -10.633774757385254
    8. ' self' → logprob: -10.633774757385254
    9. '    
' → logprob: -11.633774757385254
    10. ' 
' → logprob: -11.633774757385254

Token 139: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10268285125494003
    2. '       ' → logprob: -2.8526828289031982
    3. ' self' → logprob: -3.2276828289031982
    4. 'if' → logprob: -8.602683067321777
    5. ' if' → logprob: -10.227683067321777
    6. '   ' → logprob: -11.852683067321777
    7. '
' → logprob: -11.977683067321777
    8. '        
' → logprob: -12.102683067321777
    9. '	self' → logprob: -12.477683067321777
    10. '```' → logprob: -13.352683067321777

Token 140: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.00031389365904033184
    2. '.' → logprob: -8.125313758850098
    3. ' .' → logprob: -11.250313758850098
    4. '	graph' → logprob: -13.875313758850098
    5. 'graph' → logprob: -14.000313758850098
    6. '.g' → logprob: -14.500313758850098
    7. '   ' → logprob: -15.125313758850098
    8. '.graphics' → logprob: -15.125313758850098
    9. '       ' → logprob: -15.250313758850098
    10. '.grid' → logprob: -15.375313758850098

Token 141: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -7.3458322731312364e-06
    2. '[' → logprob: -12.000007629394531
    3. 'w' → logprob: -14.125007629394531
    4. ' [' → logprob: -15.625007629394531
    5. '	w' → logprob: -17.25000762939453
    6. '[l' → logprob: -17.25000762939453
    7. '```' → logprob: -17.25000762939453
    8. '[s' → logprob: -18.00000762939453
    9. '][' → logprob: -18.00000762939453
    10. '

' → logprob: -18.12500762939453

Token 142: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00011653638648567721
    2. ']' → logprob: -9.250116348266602
    3. '.append' → logprob: -11.250116348266602
    4. ' ].' → logprob: -12.375116348266602
    5. '   ' → logprob: -13.250116348266602
    6. '       ' → logprob: -14.375116348266602
    7. '.' → logprob: -14.875116348266602
    8. ').' → logprob: -15.500116348266602
    9. '           ' → logprob: -16.3751163482666
    10. '[' → logprob: -16.7501163482666

Token 143: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.6240566083070007e-06
    2. ' append' → logprob: -13.500001907348633
    3. '.append' → logprob: -15.500001907348633
    4. 'appen' → logprob: -17.250001907348633
    5. 'add' → logprob: -19.750001907348633
    6. '	append' → logprob: -19.750001907348633
    7. 'app' → logprob: -20.375001907348633
    8. 'push' → logprob: -20.500001907348633
    9. '_append' → logprob: -20.625001907348633
    10. ' ' → logprob: -20.875001907348633

Token 144: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -3.5954712075181305e-05
    2. '(' → logprob: -10.250036239624023
    3. 'l' → logprob: -15.125036239624023
    4. '(
' → logprob: -16.000036239624023
    5. ' (' → logprob: -16.625036239624023
    6. '((' → logprob: -17.125036239624023
    7. '(n' → logprob: -19.375036239624023
    8. '	l' → logprob: -19.750036239624023
    9. '(s' → logprob: -19.875036239624023
    10. '(

' → logprob: -20.250036239624023

Token 145: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007650283630937338
    2. ')
' → logprob: -4.882650375366211
    3. ' )' → logprob: -10.257650375366211
    4. '       ' → logprob: -12.257650375366211
    5. ' )
' → logprob: -13.007650375366211
    6. ')

' → logprob: -14.257650375366211
    7. ')
' → logprob: -14.382650375366211
    8. '),' → logprob: -15.507650375366211
    9. '<|end|>' → logprob: -15.882650375366211
    10. '   ' → logprob: -16.63265037536621

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002015240490436554
    2. 'self' → logprob: -6.377015113830566
    3. '
' → logprob: -8.752015113830566
    4. ' self' → logprob: -9.002015113830566
    5. '   ' → logprob: -12.127015113830566
    6. '        
' → logprob: -12.377015113830566
    7. '<|end|>' → logprob: -12.377015113830566
    8. ')' → logprob: -12.627015113830566
    9. ',' → logprob: -12.752015113830566
    10. ')
' → logprob: -13.127015113830566

Token 147: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003265765029937029
    2. ' self' → logprob: -6.253265857696533
    3. '       ' → logprob: -6.628265857696533
    4. '
' → logprob: -11.378265380859375
    5. '   ' → logprob: -14.253265380859375
    6. ' ' → logprob: -14.628265380859375
    7. '	self' → logprob: -14.753265380859375
    8. '        
' → logprob: -15.378265380859375
    9. '[self' → logprob: -15.628265380859375
    10. '  ' → logprob: -16.003265380859375

Token 148: '.inverse' (ID: 176558)
  Prédit: '.ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ind' → logprob: -0.5092210173606873
    2. '.inverse' → logprob: -1.009221076965332
    3. '.' → logprob: -3.634221076965332
    4. ' .' → logprob: -5.009221076965332
    5. '
' → logprob: -8.009221076965332
    6. '.inv' → logprob: -8.509221076965332
    7. 'inverse' → logprob: -9.259221076965332
    8. '.inc' → logprob: -9.509221076965332
    9. '`.' → logprob: -9.509221076965332
    10. '.in' → logprob: -9.509221076965332

Token 149: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -5.319370302458992e-06
    2. '_g' → logprob: -13.250005722045898
    3. '_' → logprob: -13.625005722045898
    4. ' _' → logprob: -13.875005722045898
    5. '"_' → logprob: -15.250005722045898
    6. '[_' → logprob: -15.500005722045898
    7. '_code' → logprob: -16.0000057220459
    8. '[' → logprob: -16.0000057220459
    9. '_gr' → logprob: -16.0000057220459
    10. '```' → logprob: -16.0000057220459

Token 150: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.31392285227775574
    2. '[w' → logprob: -1.3139228820800781
    3. '[' → logprob: -7.438922882080078
    4. 'w' → logprob: -10.813922882080078
    5. ' [' → logprob: -11.313922882080078
    6. '[s' → logprob: -11.688922882080078
    7. '[v' → logprob: -12.313922882080078
    8. '```' → logprob: -12.813922882080078
    9. ')[' → logprob: -12.938922882080078
    10. '[u' → logprob: -13.063922882080078

Token 151: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0003136552404612303
    2. ']' → logprob: -8.125313758850098
    3. '.' → logprob: -11.250313758850098
    4. ').' → logprob: -12.875313758850098
    5. ' ].' → logprob: -13.750313758850098
    6. '.append' → logprob: -14.500313758850098
    7. '   ' → logprob: -15.625313758850098
    8. '[' → logprob: -16.12531280517578
    9. '}.' → logprob: -17.25031280517578
    10. '][' → logprob: -17.25031280517578

Token 152: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. ' append' → logprob: -15.000000953674316
    3. '.append' → logprob: -16.0
    4. 'appen' → logprob: -16.75
    5. '	append' → logprob: -18.5
    6. 'add' → logprob: -19.75
    7. 'app' → logprob: -20.375
    8. 'insert' → logprob: -20.5
    9. '_append' → logprob: -20.875
    10. '   ' → logprob: -21.5

Token 153: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0003827676991932094
    2. '(' → logprob: -7.875382900238037
    3. 'w' → logprob: -13.625382423400879
    4. '(s' → logprob: -14.000382423400879
    5. '(
' → logprob: -15.250382423400879
    6. '((' → logprob: -16.250383377075195
    7. '(l' → logprob: -16.375383377075195
    8. ' (' → logprob: -17.750383377075195
    9. '(v' → logprob: -18.125383377075195
    10. 's' → logprob: -18.625383377075195

Token 154: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31363236904144287
    2. ')
' → logprob: -1.3136323690414429
    3. '       ' → logprob: -8.438632011413574
    4. ')
' → logprob: -9.563632011413574
    5. ' )' → logprob: -10.063632011413574
    6. ' )
' → logprob: -10.313632011413574
    7. ')

' → logprob: -12.563632011413574
    8. '   ' → logprob: -13.313632011413574
    9. '
' → logprob: -15.063632011413574
    10. ' ' → logprob: -15.188632011413574

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014139274135231972
    2. 'self' → logprob: -6.876413822174072
    3. '
' → logprob: -8.75141429901123
    4. ' self' → logprob: -9.12641429901123
    5. '<|end|>' → logprob: -9.75141429901123
    6. '   ' → logprob: -10.12641429901123
    7. '[self' → logprob: -12.50141429901123
    8. '```' → logprob: -12.87641429901123
    9. '           ' → logprob: -13.37641429901123
    10. '	self' → logprob: -13.50141429901123

Token 156: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0056745754554867744
    2. '       ' → logprob: -5.755674362182617
    3. ' self' → logprob: -6.005674362182617
    4. '   ' → logprob: -11.255674362182617
    5. '
' → logprob: -11.505674362182617
    6. '```' → logprob: -13.255674362182617
    7. '	self' → logprob: -13.630674362182617
    8. ' ' → logprob: -14.005674362182617
    9. '[self' → logprob: -14.130674362182617
    10. '           ' → logprob: -15.005674362182617

Token 157: '.ind' (ID: 51969)
  Prédit: '.ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ind' → logprob: -0.004971408750861883
    2. '.' → logprob: -5.379971504211426
    3. ' .' → logprob: -8.004971504211426
    4. '.inc' → logprob: -11.879971504211426
    5. '[ind' → logprob: -12.504971504211426
    6. '`.' → logprob: -13.379971504211426
    7. ' ' → logprob: -14.379971504211426
    8. '‌.' → logprob: -14.379971504211426
    9. '   ' → logprob: -14.504971504211426
    10. '.in' → logprob: -14.754971504211426

Token 158: 'egree' (ID: 31042)
  Prédit: 'egree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'egree' → logprob: -0.0020454595796763897
    2. 'eg' → logprob: -6.377045631408691
    3. 'ed' → logprob: -8.502045631408691
    4. ' ' → logprob: -10.002045631408691
    5. 'e' → logprob: -10.377045631408691
    6. 'ege' → logprob: -10.627045631408691
    7. '   ' → logprob: -11.377045631408691
    8. 'egde' → logprob: -12.127045631408691
    9. 'ece' → logprob: -12.752045631408691
    10. 'eree' → logprob: -13.127045631408691

Token 159: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -5.200166469876422e-06
    2. '[' → logprob: -12.250004768371582
    3. '[w' → logprob: -15.750004768371582
    4. 'l' → logprob: -16.0000057220459
    5. ' [' → logprob: -17.1250057220459
    6. ' l' → logprob: -19.1250057220459
    7. '	l' → logprob: -19.3750057220459
    8. '```' → logprob: -19.6250057220459
    9. '[
' → logprob: -19.8750057220459
    10. '[n' → logprob: -20.7500057220459

Token 160: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07777616381645203
    2. ']+=' → logprob: -2.9527761936187744
    3. ' ]' → logprob: -4.327775955200195
    4. ' +=' → logprob: -4.827775955200195
    5. '+=' → logprob: -7.577775955200195
    6. '[' → logprob: -7.702775955200195
    7. '+' → logprob: -8.077775955200195
    8. ')' → logprob: -9.452775955200195
    9. ']+' → logprob: -10.577775955200195
    10. '+]' → logprob: -10.827775955200195

Token 161: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04312730208039284
    2. '+=' → logprob: -3.1681272983551025
    3. '+' → logprob: -9.293127059936523
    4. ' ' → logprob: -11.293127059936523
    5. ']+=' → logprob: -11.418127059936523
    6. ' +' → logprob: -11.793127059936523
    7. '[' → logprob: -13.668127059936523
    8. '1' → logprob: -13.793127059936523
    9. '    ' → logprob: -13.918127059936523
    10. '<|end|>' → logprob: -14.918127059936523

Token 162: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -19.500335693359375
    4. '<|end|>' → logprob: -21.125335693359375
    5. '```' → logprob: -21.375335693359375
    6. ' ' → logprob: -21.500335693359375
    7. '0' → logprob: -22.500335693359375
    8. '  ' → logprob: -22.500335693359375
    9. '       ' → logprob: -23.250335693359375
    10. '
' → logprob: -23.625335693359375

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -20.875
    4. '```' → logprob: -21.25
    5. '0' → logprob: -23.5
    6. '
' → logprob: -23.875
    7. '۱' → logprob: -24.0
    8. '１' → logprob: -24.125
    9. '

' → logprob: -24.25
    10. '<|end|>' → logprob: -24.5

Token 164: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09256629645824432
    2. '<|end|>' → logprob: -2.5925662517547607
    3. '    
' → logprob: -4.84256649017334
    4. '   ' → logprob: -5.59256649017334
    5. '<|end|>' → logprob: -6.84256649017334
    6. '

' → logprob: -7.96756649017334
    7. 'def' → logprob: -8.96756649017334
    8. '```' → logprob: -9.09256649017334
    9. '  
' → logprob: -9.34256649017334
    10. ' 
' → logprob: -9.46756649017334

Token 165: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6107338666915894
    2. '   ' → logprob: -0.8607338666915894
    3. '    
' → logprob: -4.235733985900879
    4. ' def' → logprob: -4.360733985900879
    5. '
' → logprob: -4.985733985900879
    6. ' 
' → logprob: -9.860733985900879
    7. '        
' → logprob: -10.485733985900879
    8. '```' → logprob: -10.610733985900879
    9. '  
' → logprob: -11.860733985900879
    10. '	def' → logprob: -12.735733985900879

Token 166: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0008433376788161695
    2. ' def' → logprob: -7.125843524932861
    3. '   ' → logprob: -10.500843048095703
    4. 'd' → logprob: -12.500843048095703
    5. '
' → logprob: -12.500843048095703
    6. '    
' → logprob: -13.625843048095703
    7. 'de' → logprob: -13.875843048095703
    8. ' ' → logprob: -14.000843048095703
    9. ' 
' → logprob: -14.250843048095703
    10. '  
' → logprob: -16.125843048095703

Token 167: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.3101344108581543
    2. ' solve' → logprob: -1.6851344108581543
    3. 'top' → logprob: -3.4351344108581543
    4. ' find' → logprob: -4.185134410858154
    5. ' compute' → logprob: -4.935134410858154
    6. ' rank' → logprob: -4.935134410858154
    7. 'solve' → logprob: -5.310134410858154
    8. '_top' → logprob: -5.560134410858154
    9. ' get' → logprob: -5.935134410858154
    10. ' calculate' → logprob: -6.310134410858154

Token 168: 'ological' (ID: 8339)
  Prédit: 'ological'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ological' → logprob: -0.12235353887081146
    2. 'o' → logprob: -2.4973535537719727
    3. '_' → logprob: -3.4973535537719727
    4. 'logical' → logprob: -7.622353553771973
    5. '_o' → logprob: -7.872353553771973
    6. '_log' → logprob: -8.372353553771973
    7. '_sort' → logprob: -8.497353553771973
    8. 'os' → logprob: -8.497353553771973
    9. '```' → logprob: -8.497353553771973
    10. 'ology' → logprob: -8.872353553771973

Token 169: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -0.0008554781670682132
    2. '_' → logprob: -7.125855445861816
    3. '_search' → logprob: -11.125855445861816
    4. '_s' → logprob: -11.750855445861816
    5. 'sort' → logprob: -12.500855445861816
    6. '_sorted' → logprob: -12.500855445861816
    7. ' _' → logprob: -12.750855445861816
    8. '_d' → logprob: -13.125855445861816
    9. '```' → logprob: -13.250855445861816
    10. '_rank' → logprob: -13.625855445861816

Token 170: '_and' (ID: 18645)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004387750814203173
    2. '(' → logprob: -7.750438690185547
    3. 'self' → logprob: -12.125438690185547
    4. ' (' → logprob: -13.250438690185547
    5. '   ' → logprob: -15.000438690185547
    6. '_self' → logprob: -16.500438690185547
    7. '_' → logprob: -16.750438690185547
    8. '_(' → logprob: -16.750438690185547
    9. '(s' → logprob: -16.875438690185547
    10. ' self' → logprob: -16.875438690185547

Token 171: '_check' (ID: 15847)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.8589972257614136
    2. '_check' → logprob: -2.108997344970703
    3. '_detect' → logprob: -2.108997344970703
    4. '_rank' → logprob: -2.358997344970703
    5. '_find' → logprob: -2.608997344970703
    6. 'det' → logprob: -3.858997344970703
    7. '_compute' → logprob: -4.108997344970703
    8. 'count' → logprob: -4.233997344970703
    9. '_return' → logprob: -4.483997344970703
    10. '_det' → logprob: -4.483997344970703

Token 172: '_unique' (ID: 51840)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007781245280057192
    2. '(' → logprob: -4.882781028747559
    3. 'self' → logprob: -10.257781028747559
    4. '_cycle' → logprob: -10.382781028747559
    5. '_(' → logprob: -10.382781028747559
    6. '_' → logprob: -10.882781028747559
    7. '_self' → logprob: -11.757781028747559
    8. ' (' → logprob: -12.007781028747559
    9. '_rank' → logprob: -12.007781028747559
    10. '_match' → logprob: -12.507781028747559

Token 173: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0037523366045206785
    2. '(' → logprob: -5.7537522315979
    3. '_path' → logprob: -8.628752708435059
    4. '_order' → logprob: -9.128752708435059
    5. '_rank' → logprob: -9.253752708435059
    6. '_(' → logprob: -9.503752708435059
    7. 'self' → logprob: -10.378752708435059
    8. ' (' → logprob: -10.503752708435059
    9. '_' → logprob: -11.128752708435059
    10. '_root' → logprob: -12.003752708435059

Token 174: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.721228368813172e-05
    2. '(' → logprob: -9.750086784362793
    3. ' (' → logprob: -10.625086784362793
    4. 'self' → logprob: -12.875086784362793
    5. '   ' → logprob: -14.250086784362793
    6. '(s' → logprob: -14.375086784362793
    7. '       ' → logprob: -15.125086784362793
    8. ' self' → logprob: -16.25008773803711
    9. '(sel' → logprob: -16.62508773803711
    10. '_self' → logprob: -16.87508773803711

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0920906513929367
    2. '(self' → logprob: -2.467090606689453
    3. '   ' → logprob: -7.092090606689453
    4. '(' → logprob: -7.217090606689453
    5. ':' → logprob: -7.842090606689453
    6. '():' → logprob: -8.217090606689453
    7. '(
' → logprob: -8.342090606689453
    8. '
' → logprob: -8.842090606689453
    9. '()' → logprob: -8.967090606689453
    10. ' (' → logprob: -9.342090606689453

Token 176: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.36582404375076294
    2. '       ' → logprob: -1.4908239841461182
    3. 'from' (adapté à ' from') → logprob: -2.615823984146118
    4. ' import' → logprob: -5.615824222564697
    5. ' queue' → logprob: -5.740824222564697
    6. 'queue' → logprob: -7.740824222564697
    7. 'import' → logprob: -7.740824222564697
    8. '   ' → logprob: -8.615823745727539
    9. ' ' → logprob: -9.990823745727539
    10. 'q' → logprob: -10.240823745727539

Token 177: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.0004486653197091073
    2. 'collections' → logprob: -7.750448703765869
    3. ' queue' → logprob: -11.000448226928711
    4. ' ' → logprob: -14.250448226928711
    5. ' typing' → logprob: -15.125448226928711
    6. ' collection' → logprob: -15.750448226928711
    7. ' copy' → logprob: -16.62544822692871
    8. '_' → logprob: -16.87544822692871
    9. ' heap' → logprob: -17.37544822692871
    10. '.collections' → logprob: -18.75044822692871

Token 178: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.47554147243499756
    2. ' import' → logprob: -0.9755414724349976
    3. '   ' → logprob: -8.225541114807129
    4. 'port' → logprob: -8.350541114807129
    5. '	import' → logprob: -8.850541114807129
    6. 'n' → logprob: -9.350541114807129
    7. '       ' → logprob: -9.350541114807129
    8. 't' → logprob: -9.475541114807129
    9. ' ' → logprob: -9.475541114807129
    10. ' deque' → logprob: -9.475541114807129

Token 179: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -1.306760805164231e-05
    2. 'deque' → logprob: -11.25001335144043
    3. ' defaultdict' → logprob: -16.87501335144043
    4. ' ' → logprob: -16.87501335144043
    5. ' ' → logprob: -19.00001335144043
    6. ' dequeue' → logprob: -19.12501335144043
    7. '```' → logprob: -19.12501335144043
    8. '_de' → logprob: -19.62501335144043
    9. 'Deque' → logprob: -19.62501335144043
    10. '	de' → logprob: -19.87501335144043

Token 180: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002660077763721347
    2. '(queue' → logprob: -7.002660274505615
    3. ' 
' → logprob: -7.502660274505615
    4. '       ' → logprob: -8.377659797668457
    5. '
' → logprob: -8.627659797668457
    6. 'q' → logprob: -8.627659797668457
    7. '' → logprob: -9.377659797668457
    8. '        
' → logprob: -9.502659797668457
    9. '()
' → logprob: -9.752659797668457
    10. 'queue' → logprob: -10.127659797668457

Token 181: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48261138796806335
    2. '       ' → logprob: -0.9826114177703857
    3. '<|end|>' → logprob: -5.232611179351807
    4. '        
' → logprob: -6.482611179351807
    5. '  
' → logprob: -7.107611179351807
    6. '    
' → logprob: -8.732611656188965
    7. ' 
' → logprob: -8.732611656188965
    8. '<|end|>' → logprob: -9.482611656188965
    9. 'n' → logprob: -9.732611656188965
    10. '   ' → logprob: -9.857611656188965

Token 182: ' q' (ID: 2335)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.306560218334198
    2. ' queue' → logprob: -2.1815602779388428
    3. '
' → logprob: -3.1815602779388428
    4. '        
' → logprob: -3.3065602779388428
    5. ' q' → logprob: -3.6815602779388428
    6. 'q' (adapté à ' q') → logprob: -3.9315602779388428
    7. ' 
' → logprob: -4.306560039520264
    8. 'queue' → logprob: -4.681560039520264
    9. ' ' → logprob: -6.306560039520264
    10. '   ' → logprob: -7.431560039520264

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010522229131311178
    2. '=' → logprob: -6.876052379608154
    3. ' ' → logprob: -11.501051902770996
    4. 'ue' → logprob: -11.751051902770996
    5. '  ' → logprob: -15.001051902770996
    6. ' =
' → logprob: -15.001051902770996
    7. 'u' → logprob: -16.126052856445312
    8. '	' → logprob: -16.376052856445312
    9. '   ' → logprob: -16.376052856445312
    10. '.' → logprob: -16.501052856445312

Token 184: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.023246875032782555
    2. ' deque' → logprob: -3.7732467651367188
    3. 'Deque' → logprob: -13.648246765136719
    4. 'de' → logprob: -15.523246765136719
    5. 'collections' → logprob: -18.02324676513672
    6. '	de' → logprob: -18.39824676513672
    7. ' ' → logprob: -18.77324676513672
    8. '(de' → logprob: -19.27324676513672
    9. '   ' → logprob: -19.39824676513672
    10. 'd' → logprob: -19.89824676513672

Token 185: '()
' (ID: 1234)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.4819188117980957
    2. '()' → logprob: -0.9819188117980957
    3. '()
' → logprob: -5.106918811798096
    4. '(' → logprob: -6.981918811798096
    5. '([
' → logprob: -8.481918334960938
    6. '(self' → logprob: -8.606918334960938
    7. '([(' → logprob: -8.981918334960938
    8. '()

' → logprob: -9.606918334960938
    9. '(range' → logprob: -9.731918334960938
    10. '([]' → logprob: -9.856918334960938

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08718312531709671
    2. ' for' → logprob: -2.7121832370758057
    3. 'for' → logprob: -4.712182998657227
    4. '<|end|>' → logprob: -5.837182998657227
    5. '        
' → logprob: -6.212182998657227
    6. ' 
' → logprob: -6.712182998657227
    7. '  
' → logprob: -7.462182998657227
    8. ' ' → logprob: -7.712182998657227
    9. '
' → logprob: -8.837182998657227
    10. '[' → logprob: -9.337182998657227

Token 187: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1406908482313156
    2. 'for' (adapté à ' for') → logprob: -2.140690803527832
    3. ' result' → logprob: -5.390690803527832
    4. '       ' → logprob: -5.515690803527832
    5. 'result' → logprob: -5.640690803527832
    6. ' unique' → logprob: -7.140690803527832
    7. 'unique' → logprob: -8.265690803527832
    8. ' [' → logprob: -8.515690803527832
    9. '[' → logprob: -9.890690803527832
    10. '        
' → logprob: -10.140690803527832

Token 188: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.47410017251968384
    2. 'i' → logprob: -0.9741001725196838
    3. '   ' → logprob: -11.599100112915039
    4. '	i' → logprob: -12.224100112915039
    5. 'u' → logprob: -12.599100112915039
    6. ' u' → logprob: -12.974100112915039
    7. 'v' → logprob: -13.849100112915039
    8. ' v' → logprob: -14.474100112915039
    9. ' node' → logprob: -14.724100112915039
    10. ' ' → logprob: -14.724100112915039

Token 189: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011959441471844912
    2. 'in' → logprob: -7.126195907592773
    3. ' ' → logprob: -8.001195907592773
    4. ' range' → logprob: -10.501195907592773
    5. 'range' → logprob: -11.001195907592773
    6. '  ' → logprob: -12.501195907592773
    7. ',' → logprob: -12.751195907592773
    8. ' i' → logprob: -13.126195907592773
    9. ')' → logprob: -14.001195907592773
    10. 'n' → logprob: -14.751195907592773

Token 190: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029750952497124672
    2. 'range' → logprob: -3.5297510623931885
    3. '	range' → logprob: -15.02975082397461
    4. '(range' → logprob: -16.27975082397461
    5. ' ' → logprob: -16.77975082397461
    6. '_range' → logprob: -18.27975082397461
    7. '   ' → logprob: -18.27975082397461
    8. '  ' → logprob: -18.27975082397461
    9. ' xrange' → logprob: -18.65475082397461
    10. 'Range' → logprob: -18.90475082397461

Token 191: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.570319702499546e-05
    2. '(' → logprob: -11.000025749206543
    3. 'self' → logprob: -12.125025749206543
    4. '(len' → logprob: -12.875025749206543
    5. ' self' → logprob: -15.125025749206543
    6. '(s' → logprob: -15.375025749206543
    7. ' (' → logprob: -15.625025749206543
    8. '(
' → logprob: -15.875025749206543
    9. '   ' → logprob: -17.250024795532227
    10. '       ' → logprob: -18.125024795532227

Token 192: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.001951945130713284
    2. '.' → logprob: -6.251952171325684
    3. ' .' → logprob: -10.751952171325684
    4. 'n' → logprob: -13.376952171325684
    5. 'self' → logprob: -15.751952171325684
    6. ').' → logprob: -16.376951217651367
    7. '.
' → logprob: -16.626951217651367
    8. ')' → logprob: -17.751951217651367
    9. '
' → logprob: -18.126951217651367
    10. '   ' → logprob: -18.126951217651367

Token 193: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.525282621383667
    2. '):' → logprob: -0.900282621383667
    3. '):
' → logprob: -6.400282859802246
    4. ' ):
' → logprob: -8.400282859802246
    5. ' ):' → logprob: -8.400282859802246
    6. '   ' → logprob: -11.150282859802246
    7. '       ' → logprob: -11.525282859802246
    8. '():
' → logprob: -11.900282859802246
    9. '):

' → logprob: -12.275282859802246
    10. ')' → logprob: -13.025282859802246

Token 194: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01489733811467886
    2. ':' → logprob: -4.639897346496582
    3. ' if' → logprob: -5.514897346496582
    4. ':
' → logprob: -7.764897346496582
    5. 'if' → logprob: -9.139897346496582
    6. ' ' → logprob: -9.264897346496582
    7. '<|end|>' → logprob: -9.389897346496582
    8. ' :' → logprob: -9.764897346496582
    9. '       ' → logprob: -10.014897346496582
    10. '            ' → logprob: -10.139897346496582

Token 195: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13286344707012177
    2. ' if' → logprob: -2.1328635215759277
    3. '           ' → logprob: -5.132863521575928
    4. '   ' → logprob: -11.63286304473877
    5. '	if' → logprob: -12.00786304473877
    6. '               ' → logprob: -13.63286304473877
    7. '       ' → logprob: -14.25786304473877
    8. ' ' → logprob: -14.63286304473877
    9. '	       ' → logprob: -15.13286304473877
    10. '		' → logprob: -16.007863998413086

Token 196: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.22542089223861694
    2. 'self' → logprob: -1.6004209518432617
    3. '(self' → logprob: -12.600420951843262
    4. '           ' → logprob: -13.475420951843262
    5. '	self' → logprob: -13.725420951843262
    6. '   ' → logprob: -14.100420951843262
    7. '[self' → logprob: -14.850420951843262
    8. ' ' → logprob: -15.100420951843262
    9. '_self' → logprob: -15.725420951843262
    10. '0' → logprob: -16.225419998168945

Token 197: '.ind' (ID: 51969)
  Prédit: '.ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ind' → logprob: -3.9054008084349334e-05
    2. '.' → logprob: -10.875039100646973
    3. 'ind' → logprob: -11.750039100646973
    4. ' .' → logprob: -11.875039100646973
    5. '[ind' → logprob: -12.375039100646973
    6. '`.' → logprob: -15.750039100646973
    7. ' ' → logprob: -16.000038146972656
    8. '.in' → logprob: -16.250038146972656
    9. '   ' → logprob: -16.375038146972656
    10. '.inter' → logprob: -16.750038146972656

Token 198: 'egree' (ID: 31042)
  Prédit: 'egree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'egree' → logprob: -0.000665375788230449
    2. 'eg' → logprob: -7.750665187835693
    3. 'ege' → logprob: -8.625665664672852
    4. 'ree' → logprob: -11.125665664672852
    5. 'gree' → logprob: -11.375665664672852
    6. ' ' → logprob: -12.125665664672852
    7. 'ed' → logprob: -12.375665664672852
    8. '   ' → logprob: -12.500665664672852
    9. 'eree' → logprob: -12.625665664672852
    10. 'ece' → logprob: -12.625665664672852

Token 199: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. ' [' → logprob: -13.625001907348633
    3. '[' → logprob: -15.750001907348633
    4. 'i' → logprob: -16.250001907348633
    5. '[
' → logprob: -16.250001907348633
    6. '==' → logprob: -17.000001907348633
    7. '
' → logprob: -17.375001907348633
    8. ')' → logprob: -18.375001907348633
    9. ' ==' → logprob: -18.625001907348633
    10. ' ' → logprob: -18.750001907348633

Token 200: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12222009152173996
    2. ']' → logprob: -2.872220039367676
    3. '==' → logprob: -2.997220039367676
    4. ']==' → logprob: -4.872220039367676
    5. ')' → logprob: -7.122220039367676
    6. ' ' → logprob: -10.622220039367676
    7. ' ]' → logprob: -10.622220039367676
    8. ')==' → logprob: -10.872220039367676
    9. ' =' → logprob: -12.497220039367676
    10. '=' → logprob: -12.622220039367676

Token 201: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03370148688554764
    2. '==' → logprob: -3.4087014198303223
    3. ' ' → logprob: -10.90870189666748
    4. '0' → logprob: -11.53370189666748
    5. ']==' → logprob: -11.53370189666748
    6. ')' → logprob: -11.78370189666748
    7. ')==' → logprob: -12.65870189666748
    8. ' =' → logprob: -12.90870189666748
    9. '=' → logprob: -13.03370189666748
    10. ']' → logprob: -14.40870189666748

Token 202: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38687145709991455
    2. ' ' → logprob: -1.1368714570999146
    3. '   ' → logprob: -15.136871337890625
    4. ' ' → logprob: -16.511871337890625
    5. '  ' → logprob: -17.136871337890625
    6. '1' → logprob: -17.886871337890625
    7. '    ' → logprob: -18.011871337890625
    8. ' 
' → logprob: -18.386871337890625
    9. '
' → logprob: -18.761871337890625
    10. '```' → logprob: -18.761871337890625

Token 203: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -16.62523078918457
    4. '  ' → logprob: -18.00023078918457
    5. '```' → logprob: -19.12523078918457
    6. '1' → logprob: -19.25023078918457
    7. '۰' → logprob: -19.87523078918457
    8. '    ' → logprob: -19.87523078918457
    9. '
' → logprob: -20.31273078918457
    10. ' ' → logprob: -20.68773078918457

Token 204: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004798565059900284
    2. ':
' → logprob: -5.379798412322998
    3. '):' → logprob: -8.879798889160156
    4. '           ' → logprob: -11.254798889160156
    5. '):
' → logprob: -11.254798889160156
    6. ')' → logprob: -12.254798889160156
    7. ':q' → logprob: -13.129798889160156
    8. ' :' → logprob: -13.379798889160156
    9. '               ' → logprob: -13.629798889160156
    10. '       ' → logprob: -14.129798889160156

Token 205: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31650593876838684
    2. ':
' → logprob: -1.5665059089660645
    3. '           ' → logprob: -3.1915059089660645
    4. '               ' → logprob: -4.0665059089660645
    5. ':q' → logprob: -7.1915059089660645
    6. ' :
' → logprob: -7.3165059089660645
    7. ' q' → logprob: -7.5665059089660645
    8. '):
' → logprob: -7.6915059089660645
    9. ',' → logprob: -7.9415059089660645
    10. 'q' → logprob: -8.066506385803223

Token 206: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.03823805972933769
    2. 'q' (adapté à ' q') → logprob: -3.288238048553467
    3. '                ' → logprob: -9.413238525390625
    4. '               ' → logprob: -10.163238525390625
    5. ' ' → logprob: -10.538238525390625
    6. '	q' → logprob: -11.663238525390625
    7. '                   ' → logprob: -12.163238525390625
    8. ')' → logprob: -12.163238525390625
    9. '            ' → logprob: -12.538238525390625
    10. ' ' → logprob: -12.663238525390625

Token 207: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.023287637159228325
    2. '.' → logprob: -3.773287534713745
    3. '.app' → logprob: -11.148287773132324
    4. '.p' → logprob: -11.273287773132324
    5. ' .' → logprob: -12.398287773132324
    6. '.put' → logprob: -12.648287773132324
    7. '.extend' → logprob: -12.648287773132324
    8. '.enqueue' → logprob: -13.898287773132324
    9. '.push' → logprob: -14.023287773132324
    10. 'append' → logprob: -14.273287773132324

Token 208: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.596781946020201e-05
    2. '(' → logprob: -10.000045776367188
    3. ' (' → logprob: -15.125045776367188
    4. '(q' → logprob: -15.625045776367188
    5. 'left' → logprob: -17.000045776367188
    6. '(
' → logprob: -17.250045776367188
    7. '((' → logprob: -18.500045776367188
    8. 'i' → logprob: -18.750045776367188
    9. '(I' → logprob: -18.750045776367188
    10. '(ii' → logprob: -19.125045776367188

Token 209: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.451116051815916e-05
    2. ')
' → logprob: -10.750024795532227
    3. ' )' → logprob: -13.500024795532227
    4. '       ' → logprob: -14.000024795532227
    5. '<|end|>' → logprob: -16.000024795532227
    6. '))' → logprob: -16.125024795532227
    7. ')

' → logprob: -16.250024795532227
    8. ')#' → logprob: -16.250024795532227
    9. ')return' → logprob: -16.750024795532227
    10. ')\
' → logprob: -17.000024795532227

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2120590209960938
    2. '
' → logprob: -1.3370590209960938
    3. ' 
' → logprob: -1.5870590209960938
    4. '        
' → logprob: -2.0870590209960938
    5. '  
' → logprob: -3.2120590209960938
    6. '    
' → logprob: -3.7120590209960938
    7. '<|end|>' → logprob: -3.7120590209960938
    8. ' ' → logprob: -4.337059020996094
    9. '		
' → logprob: -6.587059020996094
    10. '        ' → logprob: -6.837059020996094

Token 211: ' order' (ID: 2569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26554325222969055
    2. '
' → logprob: -2.265543222427368
    3. '   ' → logprob: -3.265543222427368
    4. ' ' → logprob: -3.390543222427368
    5. ' 
' → logprob: -4.140543460845947
    6. '        
' → logprob: -4.390543460845947
    7. '    
' → logprob: -4.890543460845947
    8. '  
' → logprob: -5.015543460845947
    9. '<|end|>' → logprob: -5.265543460845947
    10. '    ' → logprob: -6.015543460845947

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017371822614222765
    2. '=' → logprob: -6.376737117767334
    3. ',' → logprob: -10.626737594604492
    4. '=[]' → logprob: -12.376737594604492
    5. ' ' → logprob: -13.126737594604492
    6. '_' → logprob: -13.251737594604492
    7. 's' → logprob: -13.751737594604492
    8. ':' → logprob: -14.501737594604492
    9. '.' → logprob: -15.126737594604492
    10. ' =
' → logprob: -15.376737594604492

Token 213: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07889419049024582
    2. ' []' → logprob: -2.5788941383361816
    3. '[]
' → logprob: -13.07889461517334
    4. '[' → logprob: -13.20389461517334
    5. ' []
' → logprob: -15.70389461517334
    6. '[]}' → logprob: -16.328893661499023
    7. '[],' → logprob: -16.453893661499023
    8. ' ' → logprob: -16.703893661499023
    9. '[]

' → logprob: -16.703893661499023
    10. '[]>' → logprob: -16.703893661499023

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031904857605695724
    2. ' 
' → logprob: -4.156904697418213
    3. '        
' → logprob: -5.156904697418213
    4. ' ' → logprob: -5.531904697418213
    5. '
' → logprob: -6.031904697418213
    6. ' while' → logprob: -6.281904697418213
    7. '  
' → logprob: -7.656904697418213
    8. '   ' → logprob: -7.906904697418213
    9. '    
' → logprob: -8.281905174255371
    10. '        ' → logprob: -8.656905174255371

Token 215: ' multiple' (ID: 7598)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04207358509302139
    2. ' while' → logprob: -3.5420734882354736
    3. 'unique' → logprob: -4.542073726654053
    4. '       ' → logprob: -6.792073726654053
    5. 'if' → logprob: -8.542073249816895
    6. ' unique' → logprob: -8.667073249816895
    7. 'is' → logprob: -9.792073249816895
    8. ' if' → logprob: -11.542073249816895
    9. 'result' → logprob: -11.542073249816895
    10. '        
' → logprob: -12.042073249816895

Token 216: '_options' (ID: 19793)
  Prédit: '_choices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_choices' → logprob: -1.4486459493637085
    2. '_order' → logprob: -1.5736459493637085
    3. ' =' → logprob: -1.6986459493637085
    4. '_choice' → logprob: -2.698646068572998
    5. '_paths' → logprob: -2.823646068572998
    6. '_orders' → logprob: -2.948646068572998
    7. '_possible' → logprob: -3.073646068572998
    8. '_sources' → logprob: -3.073646068572998
    9. '=' → logprob: -3.323646068572998
    10. '_next' → logprob: -3.948646068572998

Token 217: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3136516213417053
    2. '=' → logprob: -1.3136515617370605
    3. '_found' → logprob: -8.688652038574219
    4. ' ' → logprob: -10.063652038574219
    5. '=False' → logprob: -10.063652038574219
    6. '_at' → logprob: -10.188652038574219
    7. 's' → logprob: -10.438652038574219
    8. '_' → logprob: -10.813652038574219
    9. '_available' → logprob: -11.188652038574219
    10. '_exist' → logprob: -11.688652038574219

Token 218: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.001170225441455841
    2. ' False' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.501171112060547
    4. '(False' → logprob: -17.501171112060547
    5. 'True' → logprob: -17.501171112060547
    6. 'false' → logprob: -17.626171112060547
    7. '=False' → logprob: -18.626171112060547
    8. 'len' → logprob: -19.126171112060547
    9. '[]' → logprob: -19.751171112060547
    10. 'F' → logprob: -20.251171112060547

Token 219: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30572620034217834
    2. '       ' → logprob: -1.430726170539856
    3. ' 
' → logprob: -4.680726051330566
    4. '        
' → logprob: -4.805726051330566
    5. '    
' → logprob: -5.430726051330566
    6. '  
' → logprob: -7.180726051330566
    7. ' while' → logprob: -7.180726051330566
    8. '   ' → logprob: -7.930726051330566
    9. '
' → logprob: -9.180726051330566
    10. ' ' → logprob: -9.430726051330566

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18655318021774292
    2. '
' → logprob: -2.1865532398223877
    3. '        
' → logprob: -3.5615532398223877
    4. ' 
' → logprob: -4.061553001403809
    5. '    
' → logprob: -4.811553001403809
    6. ' while' → logprob: -6.436553001403809
    7. '  
' → logprob: -7.186553001403809
    8. '   ' → logprob: -7.186553001403809
    9. ' ' → logprob: -8.061553001403809
    10. '    ' → logprob: -8.936553001403809

Token 221: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3957523703575134
    2. 'while' (adapté à ' while') → logprob: -1.6457524299621582
    3. '       ' → logprob: -2.020752429962158
    4. '   ' → logprob: -7.520752429962158
    5. ' for' → logprob: -7.520752429962158
    6. 'for' → logprob: -8.520751953125
    7. ' ' → logprob: -10.145751953125
    8. '        
' → logprob: -10.770751953125
    9. ' 
' → logprob: -10.895751953125
    10. '	while' → logprob: -11.145751953125

Token 222: ' q' (ID: 2335)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.906032383441925
    2. 'len' → logprob: -1.0310323238372803
    3. 'q' → logprob: -1.9060323238372803
    4. ' q' → logprob: -2.4060323238372803
    5. 'True' → logprob: -9.15603256225586
    6. '(len' → logprob: -9.28103256225586
    7. '   ' → logprob: -9.40603256225586
    8. ' True' → logprob: -10.03103256225586
    9. ' ' → logprob: -10.65603256225586
    10. '(q' → logprob: -11.65603256225586

Token 223: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08425482362508774
    2. ' and' → logprob: -3.209254741668701
    3. ':
' → logprob: -4.584254741668701
    4. '<|end|>' → logprob: -4.584254741668701
    5. '.' → logprob: -5.209254741668701
    6. 'and' → logprob: -5.459254741668701
    7. '.length' → logprob: -6.334254741668701
    8. '<|end|>' → logprob: -6.584254741668701
    9. '   ' → logprob: -6.959254741668701
    10. '```' → logprob: -7.084254741668701

Token 224: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012278759852051735
    2. ' if' → logprob: -4.7622785568237305
    3. '   ' → logprob: -6.8872785568237305
    4. ' ' → logprob: -7.2622785568237305
    5. '       ' → logprob: -7.3872785568237305
    6. ' 
' → logprob: -7.7622785568237305
    7. '            
' → logprob: -8.63727855682373
    8. '    ' → logprob: -8.88727855682373
    9. '<|end|>' → logprob: -9.63727855682373
    10. '            ' → logprob: -9.63727855682373

Token 225: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03838352859020233
    2. 'if' (adapté à ' if') → logprob: -3.2883834838867188
    3. '           ' → logprob: -8.038383483886719
    4. '   ' → logprob: -11.913383483886719
    5. ' 
' → logprob: -12.788383483886719
    6. ' ' → logprob: -13.038383483886719
    7. '            ' → logprob: -13.538383483886719
    8. '    ' → logprob: -13.913383483886719
    9. '```' → logprob: -13.913383483886719
    10. '
' → logprob: -14.163383483886719

Token 226: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0015024791937321424
    2. 'len' → logprob: -6.501502513885498
    3. '(len' → logprob: -16.251502990722656
    4. ' ' → logprob: -16.876502990722656
    5. '	len' → logprob: -17.751502990722656
    6. '   ' → logprob: -19.501502990722656
    7. '=len' → logprob: -19.751502990722656
    8. '[len' → logprob: -20.001502990722656
    9. '<len' → logprob: -21.001502990722656
    10. ',len' → logprob: -21.626502990722656

Token 227: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.00023965541913639754
    2. '(' → logprob: -8.375239372253418
    3. ' (' → logprob: -11.750239372253418
    4. '(queue' → logprob: -13.875239372253418
    5. '(
' → logprob: -15.625239372253418
    6. 'q' → logprob: -16.000240325927734
    7. '()' → logprob: -18.375240325927734
    8. '(s' → logprob: -18.625240325927734
    9. ' ' → logprob: -18.750240325927734
    10. ' q' → logprob: -18.875240325927734

Token 228: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022990725934505463
    2. ')>' → logprob: -4.272990703582764
    3. ' )' → logprob: -5.647990703582764
    4. '>' → logprob: -5.772990703582764
    5. ' >' → logprob: -6.147990703582764
    6. '[' → logprob: -11.897991180419922
    7. ' ' → logprob: -12.897991180419922
    8. '```' → logprob: -13.522991180419922
    9. '()>' → logprob: -14.272991180419922
    10. '">' → logprob: -14.397991180419922

Token 229: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3132888078689575
    2. '>' → logprob: -1.3132888078689575
    3. ')>' → logprob: -11.813288688659668
    4. '()>' → logprob: -11.813288688659668
    5. ' ' → logprob: -12.063288688659668
    6. ')' → logprob: -13.688288688659668
    7. ' !=' → logprob: -13.688288688659668
    8. '```' → logprob: -13.938288688659668
    9. '">' → logprob: -14.313288688659668
    10. '(">' → logprob: -14.813288688659668

Token 230: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009130131802521646
    2. ' ' → logprob: -7.000913143157959
    3. '```' → logprob: -14.7509126663208
    4. '   ' → logprob: -14.8759126663208
    5. '  ' → logprob: -15.1259126663208
    6. '
' → logprob: -15.6259126663208
    7. '۲' → logprob: -17.500913619995117
    8. '

' → logprob: -17.500913619995117
    9. '    ' → logprob: -17.875913619995117
    10. '1' → logprob: -17.938413619995117

Token 231: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.578184497309849e-05
    2. ' ' → logprob: -9.375085830688477
    3. '```' → logprob: -15.125085830688477
    4. '
' → logprob: -16.000085830688477
    5. '   ' → logprob: -16.187585830688477
    6. '  ' → logprob: -16.500085830688477
    7. '۲' → logprob: -16.562585830688477
    8. '

' → logprob: -17.062585830688477
    9. '1' → logprob: -17.250085830688477
    10. '２' → logprob: -17.875085830688477

Token 232: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31532910466194153
    2. ':
' → logprob: -1.3153290748596191
    3. '               ' → logprob: -6.690329074859619
    4. '           ' → logprob: -7.190329074859619
    5. '):
' → logprob: -11.190329551696777
    6. ' :
' → logprob: -11.440329551696777
    7. ' :' → logprob: -11.565329551696777
    8. ',' → logprob: -12.065329551696777
    9. ' and' → logprob: -12.190329551696777
    10. ':

' → logprob: -12.690329551696777

Token 233: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2032213807106018
    2. ' multiple' → logprob: -1.828221321105957
    3. 'multiple' → logprob: -3.953221321105957
    4. '           ' → logprob: -5.578221321105957
    5. 'multip' → logprob: -9.453221321105957
    6. '
' → logprob: -9.953221321105957
    7. ',' → logprob: -10.578221321105957
    8. '   ' → logprob: -10.703221321105957
    9. 'ultiple' → logprob: -11.578221321105957
    10. '_multiple' → logprob: -11.578221321105957

Token 234: ' #' (ID: 1069)
  Prédit: ' multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.05187021940946579
    2. 'multiple' → logprob: -3.051870107650757
    3. '           ' → logprob: -6.301870346069336
    4. '               ' → logprob: -6.676870346069336
    5. '                   ' → logprob: -9.676870346069336
    6. '   ' → logprob: -9.801870346069336
    7. 'multip' → logprob: -10.176870346069336
    8. '_multiple' → logprob: -11.426870346069336
    9. 'Multiple' → logprob: -11.926870346069336
    10. 'ultiple' → logprob: -13.176870346069336

Token 235: ' More' (ID: 4633)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.10034889727830887
    2. ' multiple' → logprob: -2.350348949432373
    3. '           ' → logprob: -9.475348472595215
    4. '               ' → logprob: -9.725348472595215
    5. 'multip' → logprob: -12.350348472595215
    6. '   ' → logprob: -14.725348472595215
    7. '                   ' → logprob: -14.975348472595215
    8. 'Multiple' → logprob: -15.475348472595215
    9. ' ' → logprob: -16.22534942626953
    10. '
' → logprob: -16.72534942626953

Token 236: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.009558575227856636
    2. 'than' → logprob: -5.13455867767334
    3. '_than' → logprob: -6.25955867767334
    4. '<|end|>' → logprob: -6.63455867767334
    5. ' options' → logprob: -8.88455867767334
    6. ' code' → logprob: -9.88455867767334
    7. '           ' → logprob: -10.13455867767334
    8. '               ' → logprob: -10.88455867767334
    9. '<|end|>' → logprob: -10.88455867767334
    10. '...' → logprob: -11.13455867767334

Token 237: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.12823386490345
    2. 'one' → logprob: -2.1282339096069336
    3. '1' → logprob: -7.003233909606934
    4. ' ' → logprob: -7.878233909606934
    5. 'One' → logprob: -11.628233909606934
    6. '_one' → logprob: -11.878233909606934
    7. '```' → logprob: -14.628233909606934
    8. '   ' → logprob: -16.253232955932617
    9. ' One' → logprob: -16.253232955932617
    10. ' ' → logprob: -16.378232955932617

Token 238: ' node' (ID: 4596)
  Prédit: ' option'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' option' → logprob: -0.4411243200302124
    2. ' node' → logprob: -1.4411243200302124
    3. ' possible' → logprob: -2.816124439239502
    4. 'option' → logprob: -4.191124439239502
    5. 'node' → logprob: -4.941124439239502
    6. 'possible' → logprob: -4.941124439239502
    7. '<|end|>' → logprob: -5.066124439239502
    8. ' possibility' → logprob: -5.066124439239502
    9. ' candidate' → logprob: -5.566124439239502
    10. ' valid' → logprob: -5.816124439239502

Token 239: ' with' (ID: 483)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.06333594024181366
    2. 'can' → logprob: -3.18833589553833
    3. ' available' → logprob: -5.31333589553833
    4. 'available' → logprob: -5.43833589553833
    5. ' in' → logprob: -5.81333589553833
    6. ' at' → logprob: -6.18833589553833
    7. ' has' → logprob: -6.81333589553833
    8. ' to' → logprob: -7.56333589553833
    9. ' is' → logprob: -7.81333589553833
    10. 'possible' → logprob: -7.81333589553833

Token 240: ' no' (ID: 860)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.48999351263046265
    2. 'in' → logprob: -2.3649935722351074
    3. ' inde' → logprob: -2.3649935722351074
    4. ' no' → logprob: -2.4899935722351074
    5. ' zero' → logprob: -3.1149935722351074
    6. 'zero' → logprob: -3.4899935722351074
    7. ' in' → logprob: -3.9899935722351074
    8. ' ' → logprob: -4.989993572235107
    9. 'no' → logprob: -5.114993572235107
    10. '0' → logprob: -5.614993572235107

Token 241: ' incoming' (ID: 37780)
  Prédit: ' incoming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' incoming' → logprob: -0.7293750643730164
    2. ' inde' → logprob: -1.2293751239776611
    3. 'incoming' → logprob: -1.9793751239776611
    4. 'ind' → logprob: -2.854375123977661
    5. ' in' → logprob: -3.979375123977661
    6. ' ' → logprob: -6.729374885559082
    7. '-' → logprob: -6.854374885559082
    8. ' outgoing' → logprob: -7.229374885559082
    9. '<|end|>' → logprob: -7.229374885559082
    10. '_ind' → logprob: -7.229374885559082

Token 242: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.20398899912834167
    2. ' edge' → logprob: -2.078989028930664
    3. 'edges' → logprob: -3.078989028930664
    4. 'edge' → logprob: -4.453989028930664
    5. '_edges' → logprob: -6.453989028930664
    6. '_edge' → logprob: -8.703989028930664
    7. '-' → logprob: -10.953989028930664
    8. '-edge' → logprob: -11.078989028930664
    9. '   ' → logprob: -11.203989028930664
    10. ' arrows' → logprob: -11.578989028930664

Token 243: ' means' (ID: 4748)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2071707546710968
    2. ':
' → logprob: -2.3321707248687744
    3. ':' → logprob: -2.8321707248687744
    4. '           ' → logprob: -4.5821709632873535
    5. '                   ' → logprob: -4.9571709632873535
    6. ',' → logprob: -5.0821709632873535
    7. ' multiple' → logprob: -5.2071709632873535
    8. 'multiple' → logprob: -6.7071709632873535
    9. '
' → logprob: -7.4571709632873535
    10. ' is' → logprob: -10.082170486450195

Token 244: ' multiple' (ID: 7598)
  Prédit: ' multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.052559055387973785
    2. 'multiple' → logprob: -3.5525591373443604
    3. ' the' → logprob: -4.177558898925781
    4. ' not' → logprob: -6.552558898925781
    5. ' there' → logprob: -6.677558898925781
    6. 'the' → logprob: -6.677558898925781
    7. ' ambiguity' → logprob: -6.927558898925781
    8. ' unique' → logprob: -7.552558898925781
    9. ' possible' → logprob: -7.927558898925781
    10. 'not' → logprob: -8.552558898925781

Token 245: ' top' (ID: 2344)
  Prédit: ' options'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' options' → logprob: -0.2344038039445877
    2. '<|end|>' → logprob: -2.4844038486480713
    3. 'options' → logprob: -3.2344038486480713
    4. ' possible' → logprob: -3.2344038486480713
    5. ' choices' → logprob: -4.484403610229492
    6. 'possible' → logprob: -4.484403610229492
    7. ' possibilities' → logprob: -4.609403610229492
    8. 'choices' → logprob: -5.484403610229492
    9. '_possible' → logprob: -5.859403610229492
    10. ' valid' → logprob: -6.234403610229492

Token 246: 'ological' (ID: 8339)
  Prédit: 'ological'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ological' → logprob: -0.18564575910568237
    2. 'logical' → logprob: -1.8106458187103271
    3. 'ologies' → logprob: -5.435645580291748
    4. 'olog' → logprob: -7.560645580291748
    5. 'ology' → logprob: -8.560646057128906
    6. 'ologic' → logprob: -8.560646057128906
    7. 'ogical' → logprob: -9.185646057128906
    8. '           ' → logprob: -9.310646057128906
    9. 'ical' → logprob: -9.810646057128906
    10. 'log' → logprob: -9.810646057128906

Token 247: ' orders' (ID: 12528)
  Prédit: ' order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -1.0938482284545898
    2. ' orders' → logprob: -1.5938482284545898
    3. ' options' → logprob: -2.09384822845459
    4. 'orders' → logprob: -2.71884822845459
    5. 'order' → logprob: -2.96884822845459
    6. '_sort' → logprob: -3.09384822845459
    7. '_order' → logprob: -3.34384822845459
    8. 'sort' → logprob: -3.71884822845459
    9. ' possibilities' → logprob: -3.84384822845459
    10. '_orders' → logprob: -4.34384822845459

Token 248: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3165895938873291
    2. '           ' → logprob: -1.816589593887329
    3. ':' → logprob: -2.316589593887329
    4. ':
' → logprob: -5.31658935546875
    5. ',' → logprob: -6.19158935546875
    6. '                   ' → logprob: -6.81658935546875
    7. '<|end|>' → logprob: -7.81658935546875
    8. ' and' → logprob: -7.94158935546875
    9. '.' → logprob: -8.06658935546875
    10. ' multiple' → logprob: -8.69158935546875

Token 249: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008276015520095825
    2. '           ' → logprob: -5.508275985717773
    3. ' multiple' → logprob: -5.508275985717773
    4. ',' → logprob: -9.633275985717773
    5. 'multiple' → logprob: -10.508275985717773
    6. '                   ' → logprob: -10.633275985717773
    7. '                
' → logprob: -12.883275985717773
    8. '              ' → logprob: -13.008275985717773
    9. '
' → logprob: -13.258275985717773
    10. '   ' → logprob: -13.258275985717773

Token 250: ' multiple' (ID: 7598)
  Prédit: ' multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.3135814070701599
    2. 'multiple' (adapté à ' multiple') → logprob: -1.3135814666748047
    3. '               ' → logprob: -8.438581466674805
    4. '           ' → logprob: -9.313581466674805
    5. 'multip' → logprob: -12.188581466674805
    6. '   ' → logprob: -12.688581466674805
    7. '                   ' → logprob: -12.813581466674805
    8. '
' → logprob: -14.188581466674805
    9. '_multiple' → logprob: -14.813581466674805
    10. 'return' → logprob: -15.188581466674805

Token 251: '_options' (ID: 19793)
  Prédit: '_options'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_options' → logprob: -4.60414821645827e-06
    2. '_' → logprob: -12.500004768371582
    3. 'options' → logprob: -15.250004768371582
    4. ' _' → logprob: -15.750004768371582
    5. '_option' → logprob: -15.750004768371582
    6. 'Options' → logprob: -16.250003814697266
    7. ' options' → logprob: -16.500003814697266
    8. '_choices' → logprob: -17.125003814697266
    9. '_OPTIONS' → logprob: -17.125003814697266
    10. '_possible' → logprob: -17.625003814697266

Token 252: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022545099258423
    2. ' =' → logprob: -1.9102253913879395
    3. '=True' → logprob: -13.660225868225098
    4. ' |=' → logprob: -17.41022491455078
    5. '[' → logprob: -17.53522491455078
    6. ' ' → logprob: -17.66022491455078
    7. '           ' → logprob: -18.41022491455078
    8. '   ' → logprob: -18.41022491455078
    9. '    ' → logprob: -19.03522491455078
    10. '.=' → logprob: -19.03522491455078

Token 253: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00861456897109747
    2. ' True' → logprob: -4.758614540100098
    3. '=True' → logprob: -19.383615493774414
    4. '(True' → logprob: -19.633615493774414
    5. 'true' → logprob: -20.133615493774414
    6. 'False' → logprob: -21.258615493774414
    7. '_true' → logprob: -21.633615493774414
    8. '1' → logprob: -22.258615493774414
    9. '.True' → logprob: -22.508615493774414
    10. 'TRUE' → logprob: -23.258615493774414

Token 254: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5809258222579956
    2. '           ' → logprob: -0.8309258222579956
    3. '            
' → logprob: -5.830925941467285
    4. '    
' → logprob: -6.455925941467285
    5. '
' → logprob: -8.955925941467285
    6. '  
' → logprob: -8.955925941467285
    7. ' 
' → logprob: -9.580925941467285
    8. '        
' → logprob: -10.455925941467285
    9. '   
' → logprob: -10.955925941467285
    10. '\n' → logprob: -11.080925941467285

Token 255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00089442846365273
    2. '
' → logprob: -7.375894546508789
    3. '            
' → logprob: -8.750894546508789
    4. '    
' → logprob: -10.000894546508789
    5. '       ' → logprob: -10.750894546508789
    6. '   ' → logprob: -11.750894546508789
    7. '          ' → logprob: -11.875894546508789
    8. '        
' → logprob: -12.000894546508789
    9. '               ' → logprob: -12.875894546508789
    10. '
' → logprob: -13.000894546508789

Token 256: ' current' (ID: 2208)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.02399742603302
    2. 'u' → logprob: -1.27399742603302
    3. '           ' → logprob: -1.27399742603302
    4. ' u' → logprob: -3.3989973068237305
    5. 'current' (adapté à ' current') → logprob: -3.8989973068237305
    6. 'v' → logprob: -4.3989973068237305
    7. ' node' → logprob: -4.7739973068237305
    8. 'cur' → logprob: -5.7739973068237305
    9. ' current' → logprob: -6.6489973068237305
    10. '            
' → logprob: -6.8989973068237305

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0232466422021389
    2. '=' → logprob: -3.7732465267181396
    3. ' ' → logprob: -13.773246765136719
    4. '=q' → logprob: -16.89824676513672
    5. '=node' → logprob: -17.64824676513672
    6. ')' → logprob: -17.77324676513672
    7. '_node' → logprob: -18.39824676513672
    8. ' ' → logprob: -18.39824676513672
    9. ' =
' → logprob: -18.64824676513672
    10. '_' → logprob: -18.89824676513672

Token 258: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0024756586644798517
    2. ' q' → logprob: -6.002475738525391
    3. '	q' → logprob: -20.37747573852539
    4. '$q' → logprob: -23.25247573852539
    5. '_q' → logprob: -23.50247573852539
    6. 'ql' → logprob: -23.75247573852539
    7. '=q' → logprob: -24.62747573852539
    8. 'qx' → logprob: -24.75247573852539
    9. 'queue' → logprob: -24.87747573852539
    10. 'qml' → logprob: -24.87747573852539

Token 259: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -2.696889623621246e-06
    2. '.' → logprob: -13.37500286102295
    3. '.pop' → logprob: -13.87500286102295
    4. 'p' → logprob: -16.750001907348633
    5. '   ' → logprob: -16.875001907348633
    6. ' .' → logprob: -17.125001907348633
    7. 'opleft' → logprob: -18.500001907348633
    8. '```' → logprob: -19.000001907348633
    9. '       ' → logprob: -19.750001907348633
    10. ').' → logprob: -21.125001907348633

Token 260: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.029829973354935646
    2. 'op' → logprob: -3.529829978942871
    3. 'ople' → logprob: -9.904829978942871
    4. 'opl' → logprob: -10.529829978942871
    5. 'opf' → logprob: -13.279829978942871
    6. 'opt' → logprob: -14.404829978942871
    7. 'oplevel' → logprob: -15.279829978942871
    8. 'oph' → logprob: -16.279829025268555
    9. 'o' → logprob: -16.529829025268555
    10. 'opup' → logprob: -16.779829025268555

Token 261: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18197302520275116
    2. '       ' → logprob: -2.4319729804992676
    3. '()
' → logprob: -3.1819729804992676
    4. '           ' → logprob: -3.5569729804992676
    5. '<|end|>' → logprob: -5.556972980499268
    6. ')' → logprob: -5.681972980499268
    7. '<|end|>' → logprob: -8.306973457336426
    8. '
' → logprob: -8.306973457336426
    9. '               ' → logprob: -8.931973457336426
    10. '   ' → logprob: -9.181973457336426

Token 262: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2875300943851471
    2. 'order' → logprob: -1.6625300645828247
    3. '           ' → logprob: -3.2875301837921143
    4. ' order' → logprob: -4.287529945373535
    5. '       ' → logprob: -4.787529945373535
    6. '   ' → logprob: -7.787529945373535
    7. '        
' → logprob: -9.037529945373535
    8. ' 
' → logprob: -9.287529945373535
    9. '            
' → logprob: -9.787529945373535
    10. '    
' → logprob: -10.162529945373535

Token 263: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' (adapté à ' order') → logprob: -4.56102097814437e-05
    2. ' order' → logprob: -10.000045776367188
    3. '       ' → logprob: -17.000045776367188
    4. '   ' → logprob: -18.000045776367188
    5. '           ' → logprob: -18.250045776367188
    6. 'for' → logprob: -18.375045776367188
    7. '	order' → logprob: -18.875045776367188
    8. '$order' → logprob: -21.500045776367188
    9. '
' → logprob: -21.625045776367188
    10. 'orde' → logprob: -21.750045776367188

Token 264: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009125363430939615
    2. '.' → logprob: -7.000912666320801
    3. 'append' → logprob: -14.7509126663208
    4. '.app' → logprob: -15.1259126663208
    5. '.ap' → logprob: -15.3759126663208
    6. '.Append' → logprob: -17.125911712646484
    7. ' .' → logprob: -17.375911712646484
    8. '.extend' → logprob: -17.500911712646484
    9. '_append' → logprob: -17.875911712646484
    10. '.push' → logprob: -18.375911712646484

Token 265: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -1.4974866644479334e-05
    2. '(' → logprob: -11.250015258789062
    3. 'current' → logprob: -13.375015258789062
    4. '(
' → logprob: -15.500015258789062
    5. ' current' → logprob: -16.875015258789062
    6. '(cur' → logprob: -18.750015258789062
    7. ' (' → logprob: -18.875015258789062
    8. '(curr' → logprob: -19.375015258789062
    9. ',current' → logprob: -20.250015258789062
    10. '=current' → logprob: -20.750015258789062

Token 266: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4741968512535095
    2. ')' → logprob: -0.9741968512535095
    3. ' )
' → logprob: -9.474196434020996
    4. ')
' → logprob: -10.599196434020996
    5. ' )' → logprob: -11.599196434020996
    6. '
' → logprob: -12.974196434020996
    7. ')

' → logprob: -12.974196434020996
    8. '       ' → logprob: -13.224196434020996
    9. '   ' → logprob: -13.849196434020996
    10. '           ' → logprob: -13.974196434020996

Token 267: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5760464668273926
    2. '           ' → logprob: -0.9510464668273926
    3. '        
' → logprob: -3.5760464668273926
    4. ' for' → logprob: -4.701046466827393
    5. '
' → logprob: -4.951046466827393
    6. 'for' → logprob: -5.701046466827393
    7. ' 
' → logprob: -6.826046466827393
    8. '            
' → logprob: -6.951046466827393
    9. '<|end|>' → logprob: -7.326046466827393
    10. '    
' → logprob: -7.451046466827393

Token 268: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00012701898231171072
    2. ' for' → logprob: -9.000126838684082
    3. '       ' → logprob: -12.625126838684082
    4. '   ' → logprob: -16.0001277923584
    5. '```' → logprob: -16.6251277923584
    6. '           ' → logprob: -16.7501277923584
    7. '	for' → logprob: -17.7501277923584
    8. '        
' → logprob: -18.7501277923584
    9. '
' → logprob: -19.8751277923584
    10. '            
' → logprob: -20.3751277923584

Token 269: ' nxt' (ID: 160200)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.03951151669025421
    2. ' neighbor' → logprob: -3.2895114421844482
    3. 'ne' → logprob: -6.914511680603027
    4. 'nei' → logprob: -8.289511680603027
    5. 'next' → logprob: -9.414511680603027
    6. ' nei' → logprob: -9.539511680603027
    7. 'node' → logprob: -10.539511680603027
    8. 'n' → logprob: -11.164511680603027
    9. ' nxt' → logprob: -11.789511680603027
    10. ' neighbour' → logprob: -12.039511680603027

Token 270: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04861336573958397
    2. 'in' → logprob: -3.0486133098602295
    3. '	in' → logprob: -11.673613548278809
    4. 'n' → logprob: -11.923613548278809
    5. ' ' → logprob: -12.298613548278809
    6. 's' → logprob: -12.923613548278809
    7. '_in' → logprob: -13.673613548278809
    8. '<|end|>' → logprob: -13.673613548278809
    9. '<|end|>' → logprob: -15.048613548278809
    10. 'inthe' → logprob: -15.798613548278809

Token 271: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006729695480316877
    2. ' self' → logprob: -5.006729602813721
    3. '(self' → logprob: -11.756730079650879
    4. '[self' → logprob: -12.256730079650879
    5. '	self' → logprob: -14.256730079650879
    6. '=self' → logprob: -15.131730079650879
    7. '   ' → logprob: -15.381730079650879
    8. '       ' → logprob: -15.756730079650879
    9. ':self' → logprob: -16.006729125976562
    10. '           ' → logprob: -16.631729125976562

Token 272: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -4.961759259458631e-06
    2. 'graph' → logprob: -12.875004768371582
    3. '.' → logprob: -13.500004768371582
    4. ' .' → logprob: -14.875004768371582
    5. '.current' → logprob: -15.125004768371582
    6. '	graph' → logprob: -15.125004768371582
    7. '.g' → logprob: -17.8750057220459
    8. ' graph' → logprob: -18.5000057220459
    9. '.user' → logprob: -19.2500057220459
    10. '.graphics' → logprob: -19.5000057220459

Token 273: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -7.896309739408025e-07
    2. 'current' → logprob: -14.750000953674316
    3. '[cur' → logprob: -15.750000953674316
    4. '[' → logprob: -15.875000953674316
    5. ' [' → logprob: -17.0
    6. '   ' → logprob: -17.25
    7. ' current' → logprob: -17.5
    8. '(current' → logprob: -17.625
    9. '[
' → logprob: -17.75
    10. '[curr' → logprob: -18.875

Token 274: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.31376364827156067
    2. ']:
' → logprob: -1.3137636184692383
    3. ':' → logprob: -8.563763618469238
    4. ']' → logprob: -8.938763618469238
    5. ']:
' → logprob: -9.063763618469238
    6. ':
' → logprob: -11.063763618469238
    7. ' ]' → logprob: -11.063763618469238
    8. '       ' → logprob: -11.438763618469238
    9. ']:

' → logprob: -11.813763618469238
    10. ']:


' → logprob: -12.813763618469238

Token 275: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011838259175419807
    2. '           ' → logprob: -4.511838436126709
    3. '<|end|>' → logprob: -7.636838436126709
    4. ':
' → logprob: -9.63683795928955
    5. ':' → logprob: -9.76183795928955
    6. '       ' → logprob: -10.01183795928955
    7. '):
' → logprob: -10.38683795928955
    8. '<|end|>' → logprob: -10.51183795928955
    9. ',' → logprob: -11.38683795928955
    10. '                   ' → logprob: -11.51183795928955

Token 276: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.7208741903305054
    2. ' self' → logprob: -1.0958741903305054
    3. '               ' → logprob: -1.7208741903305054
    4. '                   ' → logprob: -8.095873832702637
    5. '   ' → logprob: -9.345873832702637
    6. '           ' → logprob: -10.095873832702637
    7. '	self' → logprob: -10.970873832702637
    8. '[self' → logprob: -10.970873832702637
    9. '
' → logprob: -11.345873832702637
    10. '(self' → logprob: -11.470873832702637

Token 277: '.ind' (ID: 51969)
  Prédit: '.ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ind' → logprob: -7.624555291840807e-05
    2. 'ind' → logprob: -9.750076293945312
    3. '.' → logprob: -12.000076293945312
    4. '[ind' → logprob: -12.375076293945312
    5. ' .' → logprob: -12.750076293945312
    6. '.in' → logprob: -13.125076293945312
    7. '   ' → logprob: -15.000076293945312
    8. 'indt' → logprob: -15.125076293945312
    9. '.int' → logprob: -15.250076293945312
    10. '_ind' → logprob: -15.500076293945312

Token 278: 'egree' (ID: 31042)
  Prédit: 'egree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'egree' → logprob: -0.0006002153968438506
    2. 'eg' → logprob: -7.875600337982178
    3. 'ed' → logprob: -9.37559986114502
    4. 'ree' → logprob: -10.00059986114502
    5. 'eree' → logprob: -10.37559986114502
    6. 'ege' → logprob: -10.50059986114502
    7. 'ece' → logprob: -11.25059986114502
    8. 'gree' → logprob: -12.37559986114502
    9. 'et' → logprob: -13.12559986114502
    10. ' ' → logprob: -13.25059986114502

Token 279: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -13.000004768371582
    3. 'n' → logprob: -13.750004768371582
    4. ' [' → logprob: -14.750004768371582
    5. '[l' → logprob: -15.750004768371582
    6. '	n' → logprob: -15.875004768371582
    7. '[
' → logprob: -16.250003814697266
    8. '```' → logprob: -16.250003814697266
    9. '[next' → logprob: -17.000003814697266
    10. '   ' → logprob: -17.000003814697266

Token 280: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.001820958685129881
    2. 't' → logprob: -6.501821041107178
    3. 'x' → logprob: -8.62682056427002
    4. ']' → logprob: -9.25182056427002
    5. '   ' → logprob: -11.12682056427002
    6. 'ext' → logprob: -12.37682056427002
    7. '[' → logprob: -12.37682056427002
    8. '       ' → logprob: -12.50182056427002
    9. '```' → logprob: -12.50182056427002
    10. 'т' → logprob: -13.00182056427002

Token 281: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04525814205408096
    2. ' -=' → logprob: -3.420258045196533
    3. ']-' → logprob: -5.295258045196533
    4. '-' → logprob: -5.420258045196533
    5. ' ]' → logprob: -7.045258045196533
    6. '-=' → logprob: -7.295258045196533
    7. ' -' → logprob: -8.670258522033691
    8. '   ' → logprob: -9.045258522033691
    9. '```' → logprob: -9.170258522033691
    10. '           ' → logprob: -9.670258522033691

Token 282: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.13216514885425568
    2. ' -=' → logprob: -2.1321651935577393
    3. '-' → logprob: -5.25716495513916
    4. '   ' → logprob: -11.38216495513916
    5. ' -' → logprob: -13.88216495513916
    6. '```' → logprob: -15.00716495513916
    7. '>' → logprob: -15.63216495513916
    8. '[' → logprob: -15.88216495513916
    9. '  ' → logprob: -16.632165908813477
    10. '    ' → logprob: -16.757165908813477

Token 283: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021852378267794847
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -16.502185821533203
    4. '```' → logprob: -18.502185821533203
    5. '
' → logprob: -20.252185821533203
    6. ' ' → logprob: -20.439685821533203
    7. '１' → logprob: -20.627185821533203
    8. '  ' → logprob: -20.689685821533203
    9. '۱' → logprob: -20.689685821533203
    10. '0' → logprob: -20.689685821533203

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.5000057220459
    4. '```' → logprob: -18.3750057220459
    5. '<|end|>' → logprob: -20.1250057220459
    6. '0' → logprob: -20.6875057220459
    7. '۱' → logprob: -20.9375057220459
    8. '       ' → logprob: -21.3125057220459
    9. '  ' → logprob: -21.4375057220459
    10. ')' → logprob: -21.6250057220459

Token 285: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00094933359650895
    2. '
' → logprob: -7.000949382781982
    3. '           ' → logprob: -11.875948905944824
    4. '<|end|>' → logprob: -12.000948905944824
    5. '```' → logprob: -12.125948905944824
    6. ' if' → logprob: -12.375948905944824
    7. 'if' → logprob: -12.875948905944824
    8. '                   ' → logprob: -13.125948905944824
    9. '                
' → logprob: -13.250948905944824
    10. ' 
' → logprob: -13.375948905944824

Token 286: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.051066520740278e-05
    2. 'if' → logprob: -10.250060081481934
    3. ' if' → logprob: -11.500060081481934
    4. '           ' → logprob: -11.875060081481934
    5. '```' → logprob: -13.000060081481934
    6. '       ' → logprob: -13.250060081481934
    7. '                   ' → logprob: -14.000060081481934
    8. '			' → logprob: -14.000060081481934
    9. '   ' → logprob: -14.625060081481934
    10. ' ' → logprob: -15.000060081481934

Token 287: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011311646550893784
    2. '               ' → logprob: -4.5113115310668945
    3. ' if' → logprob: -8.261311531066895
    4. '           ' → logprob: -12.261311531066895
    5. '                   ' → logprob: -15.511311531066895
    6. 'If' → logprob: -16.26131248474121
    7. '	if' → logprob: -16.38631248474121
    8. '   ' → logprob: -16.63631248474121
    9. '```' → logprob: -16.63631248474121
    10. '       ' → logprob: -16.88631248474121

Token 288: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006716079078614712
    2. ' self' → logprob: -5.006716251373291
    3. '(self' → logprob: -15.381715774536133
    4. '	self' → logprob: -15.881715774536133
    5. '[self' → logprob: -15.881715774536133
    6. '   ' → logprob: -16.506715774536133
    7. ' ' → logprob: -16.881715774536133
    8. 'this' → logprob: -18.631715774536133
    9. '```' → logprob: -18.631715774536133
    10. '  ' → logprob: -18.881715774536133

Token 289: '.ind' (ID: 51969)
  Prédit: '.ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ind' → logprob: -0.0003595376620069146
    2. 'ind' → logprob: -8.125359535217285
    3. '[ind' → logprob: -9.875359535217285
    4. '.' → logprob: -11.750359535217285
    5. 'self' → logprob: -13.500359535217285
    6. '_ind' → logprob: -14.500359535217285
    7. '   ' → logprob: -14.500359535217285
    8. ' .' → logprob: -15.250359535217285
    9. ''ind' → logprob: -15.625359535217285
    10. '(ind' → logprob: -15.750359535217285

Token 290: 'egree' (ID: 31042)
  Prédit: 'egree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'egree' → logprob: -0.000531467841938138
    2. 'eg' → logprob: -7.6255316734313965
    3. 'ed' → logprob: -11.250531196594238
    4. 'ege' → logprob: -11.375531196594238
    5. 'egde' → logprob: -12.375531196594238
    6. 'erde' → logprob: -12.500531196594238
    7. '[' → logprob: -13.000531196594238
    8. 'e' → logprob: -13.375531196594238
    9. 'degree' → logprob: -13.500531196594238
    10. 'gree' → logprob: -13.500531196594238

Token 291: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.25000286102295
    3. '[next' → logprob: -15.37500286102295
    4. 'n' → logprob: -15.62500286102295
    5. '   ' → logprob: -16.250001907348633
    6. '```' → logprob: -16.500001907348633
    7. ' [' → logprob: -16.625001907348633
    8. '	n' → logprob: -16.750001907348633
    9. '[now' → logprob: -17.625001907348633
    10. '[
' → logprob: -17.625001907348633

Token 292: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.00019030878320336342
    2. '[n' → logprob: -9.250190734863281
    3. 'st' → logprob: -10.375190734863281
    4. 't' → logprob: -10.750190734863281
    5. 'ext' → logprob: -11.250190734863281
    6. '[next' → logprob: -11.750190734863281
    7. 'x' → logprob: -11.875190734863281
    8. ']' → logprob: -12.375190734863281
    9. '```' → logprob: -12.750190734863281
    10. '[' → logprob: -13.000190734863281

Token 293: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8457350134849548
    2. ']' → logprob: -0.9707350134849548
    3. '==' → logprob: -1.7207350730895996
    4. ']==' → logprob: -4.3457350730896
    5. ' ]' → logprob: -11.345734596252441
    6. '```' → logprob: -11.470734596252441
    7. ' ' → logprob: -11.720734596252441
    8. ')' → logprob: -11.845734596252441
    9. '   ' → logprob: -12.470734596252441
    10. '=' → logprob: -12.470734596252441

Token 294: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20143555104732513
    2. ' ==' → logprob: -1.7014355659484863
    3. '=' → logprob: -11.076435089111328
    4. ']==' → logprob: -12.826435089111328
    5. ' ' → logprob: -14.076435089111328
    6. '```' → logprob: -14.326435089111328
    7. '0' → logprob: -14.451435089111328
    8. '===' → logprob: -14.576435089111328
    9. '==
' → logprob: -14.826435089111328
    10. ' =' → logprob: -14.826435089111328

Token 295: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011050059460103512
    2. ' ' → logprob: -4.511050224304199
    3. '   ' → logprob: -13.2610502243042
    4. '  ' → logprob: -15.7610502243042
    5. '```' → logprob: -16.261049270629883
    6. '
' → logprob: -16.511049270629883
    7. ' ' → logprob: -17.136049270629883
    8. '=' → logprob: -17.511049270629883
    9. '۰' → logprob: -17.636049270629883
    10. '    ' → logprob: -17.823549270629883

Token 296: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -17.12504005432129
    4. '۰' → logprob: -18.25004005432129
    5. '```' → logprob: -18.87504005432129
    6. '00' → logprob: -19.12504005432129
    7. '  ' → logprob: -19.37504005432129
    8. 'zero' → logprob: -19.62504005432129
    9. '
' → logprob: -19.68754005432129
    10. '=' → logprob: -19.81254005432129

Token 297: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1769411861896515
    2. ':
' → logprob: -2.051941156387329
    3. '                   ' → logprob: -3.551941156387329
    4. '               ' → logprob: -5.676941394805908
    5. '):
' → logprob: -7.176941394805908
    6. '):' → logprob: -8.42694091796875
    7. ',' → logprob: -8.55194091796875
    8. ')' → logprob: -8.80194091796875
    9. '           ' → logprob: -9.05194091796875
    10. '                       ' → logprob: -10.05194091796875

Token 298: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3646828830242157
    2. ' q' → logprob: -1.489682912826538
    3. '               ' → logprob: -2.739682912826538
    4. 'q' → logprob: -4.864682674407959
    5. '                ' → logprob: -5.739682674407959
    6. '                       ' → logprob: -6.614682674407959
    7. ' ' → logprob: -6.864682674407959
    8. '<|end|>' → logprob: -7.739682674407959
    9. '                    
' → logprob: -7.864682674407959
    10. ' ' → logprob: -7.989682674407959

Token 299: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.6938262581825256
    2. ' q' → logprob: -0.6938262581825256
    3. '                       ' → logprob: -7.568826198577881
    4. '                   ' → logprob: -9.443826675415039
    5. '	q' → logprob: -9.568826675415039
    6. '```' → logprob: -13.068826675415039
    7. ' ' → logprob: -13.193826675415039
    8. '   ' → logprob: -13.318826675415039
    9. '                    ' → logprob: -13.443826675415039
    10. ',q' → logprob: -13.693826675415039

Token 300: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.8206473871250637e-05
    2. '.' → logprob: -10.625028610229492
    3. '.enqueue' → logprob: -12.750028610229492
    4. '.extend' → logprob: -15.000028610229492
    5. ').' → logprob: -15.875028610229492
    6. '.app' → logprob: -16.000028610229492
    7. ' .' → logprob: -16.250028610229492
    8. 'append' → logprob: -16.500028610229492
    9. '.put' → logprob: -16.875028610229492
    10. '.push' → logprob: -17.000028610229492

Token 301: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.931863051955588e-05
    2. '(' → logprob: -9.750059127807617
    3. 'n' → logprob: -14.125059127807617
    4. '(
' → logprob: -16.000059127807617
    5. '(next' → logprob: -16.875059127807617
    6. ' (' → logprob: -17.375059127807617
    7. '	n' → logprob: -18.500059127807617
    8. '(nx' → logprob: -18.500059127807617
    9. ')n' → logprob: -18.750059127807617
    10. '((' → logprob: -19.500059127807617

Token 302: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -1.981667537620524e-06
    2. 't' → logprob: -13.250001907348633
    3. '```' → logprob: -16.750001907348633
    4. 'st' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.250001907348633
    6. 'x' → logprob: -19.125001907348633
    7. '[' → logprob: -19.250001907348633
    8. ')' → logprob: -19.500001907348633
    9. 'zt' → logprob: -19.750001907348633
    10. '``' → logprob: -20.000001907348633

Token 303: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.196732960641384e-05
    2. ')
' → logprob: -9.500082015991211
    3. ' )' → logprob: -12.000082015991211
    4. '       ' → logprob: -14.500082015991211
    5. ')

' → logprob: -16.37508201599121
    6. ')return' → logprob: -16.37508201599121
    7. ')n' → logprob: -16.87508201599121
    8. '())' → logprob: -16.87508201599121
    9. ')
' → logprob: -17.50008201599121
    10. '               ' → logprob: -17.62508201599121

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009654151508584619
    2. '
' → logprob: -7.750965595245361
    3. '        
' → logprob: -8.000965118408203
    4. ' return' → logprob: -8.750965118408203
    5. 'return' → logprob: -10.750965118408203
    6. '    
' → logprob: -11.375965118408203
    7. '```' → logprob: -13.250965118408203
    8. '   ' → logprob: -13.625965118408203
    9. '  
' → logprob: -13.750965118408203
    10. '<|end|>' → logprob: -14.000965118408203

Token 305: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5123425722122192
    2. 'return' → logprob: -1.0123425722122192
    3. 'if' (adapté à ' if') → logprob: -3.7623424530029297
    4. ' return' → logprob: -4.51234245300293
    5. ' if' → logprob: -5.88734245300293
    6. '   ' → logprob: -8.01234245300293
    7. '
' → logprob: -9.26234245300293
    8. '        
' → logprob: -9.38734245300293
    9. '```' → logprob: -10.51234245300293
    10. ' ' → logprob: -11.51234245300293

Token 306: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0021293258760124445
    2. 'len' → logprob: -6.252129554748535
    3. ' multiple' → logprob: -9.127129554748535
    4. '(len' → logprob: -9.752129554748535
    5. ' not' → logprob: -10.627129554748535
    6. ' ' → logprob: -12.377129554748535
    7. '	len' → logprob: -12.752129554748535
    8. 'multiple' → logprob: -13.502129554748535
    9. ' order' → logprob: -14.877129554748535
    10. '[len' → logprob: -16.25212860107422

Token 307: '(order' (ID: 33050)
  Prédit: '(order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(order' → logprob: -3.607391408877447e-05
    2. '(' → logprob: -10.250036239624023
    3. 'order' → logprob: -15.500036239624023
    4. ' (' → logprob: -15.625036239624023
    5. '(q' → logprob: -15.625036239624023
    6. '(ord' → logprob: -17.375036239624023
    7. '(
' → logprob: -17.875036239624023
    8. ' order' → logprob: -18.625036239624023
    9. '(queue' → logprob: -18.750036239624023
    10. '	order' → logprob: -18.750036239624023

Token 308: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008143600076436996
    2. ' !=' → logprob: -5.383143424987793
    3. '!=' → logprob: -6.383143424987793
    4. ')!=' → logprob: -7.258143424987793
    5. ' )' → logprob: -7.508143424987793
    6. ' ==' → logprob: -8.383143424987793
    7. '==' → logprob: -8.758143424987793
    8. '<' → logprob: -9.758143424987793
    9. ' <' → logprob: -9.883143424987793
    10. ')==' → logprob: -10.633143424987793

Token 309: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4265444874763489
    2. '!=' → logprob: -1.176544427871704
    3. ' ==' → logprob: -4.051544666290283
    4. '==' → logprob: -4.551544666290283
    5. ' <' → logprob: -5.301544666290283
    6. '<' → logprob: -5.801544666290283
    7. '<|end|>' → logprob: -7.051544666290283
    8. ' ' → logprob: -7.301544666290283
    9. ')!=' → logprob: -7.676544666290283
    10. ')' → logprob: -8.051544189453125

Token 310: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16022716462612152
    2. ' self' → logprob: -1.9102271795272827
    3. '       ' → logprob: -13.660226821899414
    4. '   ' → logprob: -13.910226821899414
    5. ' ' → logprob: -15.160226821899414
    6. '(self' → logprob: -15.660226821899414
    7. '
' → logprob: -15.785226821899414
    8. '	self' → logprob: -15.910226821899414
    9. '```' → logprob: -16.035226821899414
    10. '           ' → logprob: -16.785226821899414

Token 311: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00044532763422466815
    2. '.' → logprob: -8.000445365905762
    3. 'n' → logprob: -9.125445365905762
    4. ':' → logprob: -15.125445365905762
    5. ')' → logprob: -15.500445365905762
    6. ':n' → logprob: -15.625445365905762
    7. '	n' → logprob: -16.750444412231445
    8. ' .' → logprob: -17.000444412231445
    9. ')n' → logprob: -17.000444412231445
    10. '_n' → logprob: -17.125444412231445

Token 312: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20215553045272827
    2. ':
' → logprob: -1.702155590057373
    3. ':return' → logprob: -7.327155590057373
    4. ' or' → logprob: -9.577155113220215
    5. ':
' → logprob: -12.202155113220215
    6. '       ' → logprob: -12.827155113220215
    7. ' :' → logprob: -13.077155113220215
    8. ' :
' → logprob: -13.702155113220215
    9. '):
' → logprob: -13.827155113220215
    10. ':

' → logprob: -14.077155113220215

Token 313: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.042117245495319366
    2. ':' → logprob: -4.292117118835449
    3. '       ' → logprob: -4.542117118835449
    4. ':
' → logprob: -4.542117118835449
    5. ' return' → logprob: -5.917117118835449
    6. ':return' → logprob: -6.417117118835449
    7. 'return' → logprob: -6.792117118835449
    8. '
' → logprob: -7.667117118835449
    9. ',' → logprob: -8.79211711883545
    10. '   ' → logprob: -9.91711711883545

Token 314: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3038080334663391
    2. 'return' → logprob: -1.4288079738616943
    3. '           ' → logprob: -4.428808212280273
    4. '       ' → logprob: -5.553808212280273
    5. '
' → logprob: -5.928808212280273
    6. ' None' → logprob: -6.303808212280273
    7. ' False' → logprob: -7.303808212280273
    8. 'False' → logprob: -7.803808212280273
    9. ' 
' → logprob: -7.928808212280273
    10. 'None' → logprob: -8.178808212280273

Token 315: ' Cycle' (ID: 65262)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20387350022792816
    2. ' return' → logprob: -1.7038735151290894
    3. 'None' → logprob: -6.828873634338379
    4. ' None' → logprob: -7.828873634338379
    5. 'False' → logprob: -8.078873634338379
    6. '       ' → logprob: -8.078873634338379
    7. '           ' → logprob: -9.078873634338379
    8. 'Return' → logprob: -9.328873634338379
    9. '   ' → logprob: -10.328873634338379
    10. ' False' → logprob: -10.703873634338379

Token 316: ' detected' (ID: 28357)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9002468585968018
    2. '           ' → logprob: -2.0252468585968018
    3. '       ' → logprob: -2.1502468585968018
    4. 'return' → logprob: -2.2752468585968018
    5. ' or' → logprob: -2.4002468585968018
    6. ':return' → logprob: -2.6502468585968018
    7. ' is' → logprob: -3.7752468585968018
    8. ':' → logprob: -4.400246620178223
    9. '<|end|>' → logprob: -4.650246620178223
    10. '   ' → logprob: -5.025246620178223

Token 317: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33995962142944336
    2. '       ' → logprob: -1.4649596214294434
    3. ' return' → logprob: -3.4649596214294434
    4. '
' → logprob: -4.214959621429443
    5. 'return' → logprob: -4.589959621429443
    6. ',' → logprob: -7.839959621429443
    7. '   ' → logprob: -8.339960098266602
    8. '               ' → logprob: -9.214960098266602
    9. '	return' → logprob: -10.214960098266602
    10. '        
' → logprob: -10.589960098266602

Token 318: ' inconsistent' (ID: 85596)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0971175953745842
    2. ' True' → logprob: -3.7221176624298096
    3. 'not' → logprob: -3.8471176624298096
    4. ' incomplete' → logprob: -4.2221174240112305
    5. ' False' → logprob: -4.8471174240112305
    6. 'False' → logprob: -4.8471174240112305
    7. ' some' → logprob: -5.2221174240112305
    8. 'True' → logprob: -5.9721174240112305
    9. ' graph' → logprob: -6.3471174240112305
    10. ' invalid' → logprob: -6.7221174240112305

Token 319: ' data' (ID: 1238)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4853155314922333
    2. '       ' → logprob: -1.6103155612945557
    3. ',' → logprob: -3.2353155612945557
    4. ' result' → logprob: -3.2353155612945557
    5. '   ' → logprob: -3.7353155612945557
    6. 'return' → logprob: -3.8603155612945557
    7. ' ' → logprob: -4.985315322875977
    8. ' graph' → logprob: -4.985315322875977
    9. '        
' → logprob: -5.360315322875977
    10. 'result' → logprob: -5.485315322875977

Token 320: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42534205317497253
    2. '           ' → logprob: -1.300342082977295
    3. ' return' → logprob: -3.050342082977295
    4. 'return' → logprob: -3.925342082977295
    5. '
' → logprob: -6.550342082977295
    6. ':return' → logprob: -6.550342082977295
    7. '        
' → logprob: -6.925342082977295
    8. '               ' → logprob: -7.175342082977295
    9. '   ' → logprob: -7.425342082977295
    10. ':' → logprob: -7.800342082977295

Token 321: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05455385148525238
    2. ' return' → logprob: -3.179553747177124
    3. '       ' → logprob: -5.179553985595703
    4. 'return' → logprob: -5.179553985595703
    5. '   ' → logprob: -9.179553985595703
    6. '
' → logprob: -9.929553985595703
    7. ' raise' → logprob: -10.804553985595703
    8. '               ' → logprob: -10.929553985595703
    9. ',' → logprob: -11.679553985595703
    10. ':return' → logprob: -12.179553985595703

Token 322: ' raise' (ID: 9338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.43967586755752563
    2. ' return' → logprob: -1.0646758079528809
    3. '           ' → logprob: -4.564675807952881
    4. '       ' → logprob: -8.689676284790039
    5. 'None' → logprob: -9.064676284790039
    6. ' None' → logprob: -9.439676284790039
    7. 'raise' (adapté à ' raise') → logprob: -10.189676284790039
    8. '
' → logprob: -10.439676284790039
    9. '   ' → logprob: -10.689676284790039
    10. ' raise' → logprob: -11.689676284790039

Token 323: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.05742691829800606
    2. 'Value' → logprob: -3.057426929473877
    3. ' Exception' → logprob: -4.807426929473877
    4. ' Runtime' → logprob: -7.557426929473877
    5. 'Exception' → logprob: -9.307426452636719
    6. 'Runtime' → logprob: -11.557426452636719
    7. ' Assertion' → logprob: -12.307426452636719
    8. '(Value' → logprob: -12.557426452636719
    9. '	Value' → logprob: -14.932426452636719
    10. 'Assertion' → logprob: -15.182426452636719

Token 324: 'Error' (ID: 2255)
  Prédit: 'rror'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rror' → logprob: -0.38751184940338135
    2. 'Error' → logprob: -1.1375118494033813
    3. 'ror' → logprob: -7.387511730194092
    4. 'r' → logprob: -10.88751220703125
    5. 'rr' → logprob: -12.88751220703125
    6. 'error' → logprob: -15.51251220703125
    7. 'n' → logprob: -16.13751220703125
    8. 'ro' → logprob: -16.63751220703125
    9. 'R' → logprob: -17.38751220703125
    10. 'RR' → logprob: -18.63751220703125

Token 325: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.01421087421476841
    2. '(' → logprob: -4.2642107009887695
    3. '('' → logprob: -10.01421070098877
    4. '(
' → logprob: -13.13921070098877
    5. '()' → logprob: -14.76421070098877
    6. '("")' → logprob: -16.014211654663086
    7. '(

' → logprob: -16.639211654663086
    8. '"' → logprob: -18.139211654663086
    9. '(("' → logprob: -18.764211654663086
    10. '(
' → logprob: -19.014211654663086

Token 326: 'No' (ID: 3160)
  Prédit: 'In'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'In' → logprob: -0.7645846009254456
    2. ' In' → logprob: -1.1395845413208008
    3. 'Invalid' → logprob: -3.389584541320801
    4. ' Cycle' → logprob: -3.514584541320801
    5. 'Cycle' → logprob: -3.514584541320801
    6. 'Graph' → logprob: -3.764584541320801
    7. 'Ranking' → logprob: -4.139584541320801
    8. '"' → logprob: -4.264584541320801
    9. ' Invalid' → logprob: -4.639584541320801
    10. ' Ranking' → logprob: -4.764584541320801

Token 327: ' valid' (ID: 4529)
  Prédit: ' valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.5860083103179932
    2. ' unique' → logprob: -0.8360083103179932
    3. ' possible' → logprob: -5.336008071899414
    4. ' consistent' → logprob: -6.086008071899414
    5. 'unique' → logprob: -7.336008071899414
    6. 'valid' → logprob: -7.836008071899414
    7. ' Valid' → logprob: -7.961008071899414
    8. 'Valid' → logprob: -8.336008071899414
    9. 'Unique' → logprob: -8.586008071899414
    10. ' feasible' → logprob: -8.586008071899414

Token 328: ' ranking' (ID: 30612)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.7604064345359802
    2. ' ranking' → logprob: -0.8854064345359802
    3. ' ordering' → logprob: -2.385406494140625
    4. ' order' → logprob: -5.135406494140625
    5. ' team' → logprob: -5.135406494140625
    6. 'top' → logprob: -5.385406494140625
    7. 'ranking' → logprob: -5.385406494140625
    8. ' ' → logprob: -5.885406494140625
    9. ' unique' → logprob: -6.635406494140625
    10. ' rankings' → logprob: -7.760406494140625

Token 329: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.5819482803344727
    2. ' exists' → logprob: -1.2069482803344727
    3. '")' → logprob: -2.3319482803344727
    4. ' found' → logprob: -3.9569482803344727
    5. ' can' → logprob: -4.081948280334473
    6. ' sequence' → logprob: -6.456948280334473
    7. ' could' → logprob: -6.456948280334473
    8. 'possible' → logprob: -6.581948280334473
    9. ' is' → logprob: -6.706948280334473
    10. '.")' → logprob: -6.831948280334473

Token 330: ' (' (ID: 350)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.18338948488235474
    2. '")
' → logprob: -1.80838942527771
    3. ' due' → logprob: -6.433389663696289
    4. ')")
' → logprob: -6.933389663696289
    5. ')")' → logprob: -7.808389663696289
    6. '")
' → logprob: -8.183389663696289
    7. '.")' → logprob: -9.183389663696289
    8. '.")
' → logprob: -9.433389663696289
    9. '')")
' → logprob: -10.308389663696289
    10. '\")' → logprob: -10.433389663696289

Token 331: 'cycle' (ID: 24879)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.6939868927001953
    2. 'cycle' → logprob: -0.8189868927001953
    3. 'graph' → logprob: -4.068986892700195
    4. ')' → logprob: -4.193986892700195
    5. ' due' → logprob: -4.818986892700195
    6. 'due' → logprob: -5.443986892700195
    7. ' graph' → logprob: -5.443986892700195
    8. 'cy' → logprob: -6.568986892700195
    9. 'in' → logprob: -6.693986892700195
    10. ' cyclic' → logprob: -6.818986892700195

Token 332: ' detected' (ID: 28357)
  Prédit: ' detected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' detected' → logprob: -0.21813823282718658
    2. ')")' → logprob: -1.7181382179260254
    3. 'det' → logprob: -5.093138217926025
    4. ' or' → logprob: -5.218138217926025
    5. ')' → logprob: -5.593138217926025
    6. ' found' → logprob: -7.593138217926025
    7. ')")
' → logprob: -8.218138694763184
    8. ').' → logprob: -8.968138694763184
    9. ' in' → logprob: -9.093138694763184
    10. ' present' → logprob: -9.468138694763184

Token 333: ')")
' (ID: 44059)
  Prédit: ')")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')")' → logprob: -0.1215355172753334
    2. ').' → logprob: -2.246535539627075
    3. ')")
' → logprob: -5.496535301208496
    4. ' )' → logprob: -6.246535301208496
    5. ' or' → logprob: -6.496535301208496
    6. ')' → logprob: -6.996535301208496
    7. '")' → logprob: -8.996535301208496
    8. ')").' → logprob: -9.871535301208496
    9. ' ).' → logprob: -11.371535301208496
    10. ')"' → logprob: -11.371535301208496

Token 334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001890672487206757
    2. '
' → logprob: -6.626890659332275
    3. '        
' → logprob: -7.626890659332275
    4. 'return' → logprob: -10.626891136169434
    5. ' return' → logprob: -11.126891136169434
    6. '<|end|>' → logprob: -11.501891136169434
    7. '    
' → logprob: -11.751891136169434
    8. ',' → logprob: -12.251891136169434
    9. '  
' → logprob: -12.251891136169434
    10. '   ' → logprob: -13.501891136169434

Token 335: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0745919719338417
    2. 'return' (adapté à ' return') → logprob: -2.949591875076294
    3. ' return' → logprob: -3.949591875076294
    4. '   ' → logprob: -8.949591636657715
    5. '
' → logprob: -9.324591636657715
    6. 'if' → logprob: -11.324591636657715
    7. ' if' → logprob: -11.449591636657715
    8. ' ' → logprob: -12.824591636657715
    9. '	return' → logprob: -12.824591636657715
    10. '        
' → logprob: -13.324591636657715

Token 336: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.05933592841029167
    2. '(order' → logprob: -3.184335947036743
    3. ' order' → logprob: -4.434335708618164
    4. '(not' → logprob: -6.059335708618164
    5. 'not' → logprob: -7.184335708618164
    6. ' (' → logprob: -7.559335708618164
    7. '(m' → logprob: -7.684335708618164
    8. 'multiple' → logprob: -9.184335708618164
    9. '(len' → logprob: -10.059335708618164
    10. '(' → logprob: -10.559335708618164

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005250006448477507
    2. ',m' → logprob: -5.255249977111816
    3. ' ,' → logprob: -11.130249977111816
    4. ',
' → logprob: -13.630249977111816
    5. ' multiple' → logprob: -16.880250930786133
    6. '       ' → logprob: -16.880250930786133
    7. '<|end|>' → logprob: -16.880250930786133
    8. 'multiple' → logprob: -17.130250930786133
    9. '   ' → logprob: -17.255250930786133
    10. '[m' → logprob: -17.630250930786133

Token 338: ' multiple' (ID: 7598)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.02440626733005047
    2. ' not' → logprob: -3.8994061946868896
    3. 'multiple' → logprob: -5.649406433105469
    4. ' multiple' → logprob: -8.149406433105469
    5. '(not' → logprob: -10.149406433105469
    6. 'multip' → logprob: -12.649406433105469
    7. '!' → logprob: -12.899406433105469
    8. '	not' → logprob: -14.024406433105469
    9. '   ' → logprob: -14.274406433105469
    10. ' ' → logprob: -14.399406433105469

Token 339: '_options' (ID: 19793)
  Prédit: '_options'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_options' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.25
    3. ' _' → logprob: -18.375
    4. '_multiple' → logprob: -18.75
    5. '_option' → logprob: -19.0
    6. 'options' → logprob: -19.25
    7. '_OPTIONS' → logprob: -20.25
    8. 'Options' → logprob: -20.75
    9. '_choices' → logprob: -20.75
    10. ' options' → logprob: -21.375

Token 340: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 341: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2511235177516937
    2. '    
' → logprob: -2.1261234283447266
    3. '
' → logprob: -2.5011234283447266
    4. '<|end|>' → logprob: -4.126123428344727
    5. 'def' → logprob: -6.001123428344727
    6. '  
' → logprob: -7.376123428344727
    7. '<|end|>' → logprob: -7.751123428344727
    8. ' 
' → logprob: -7.876123428344727
    9. '        
' → logprob: -8.626123428344727
    10. ' def' → logprob: -8.751123428344727

Token 342: ' Abstract' (ID: 17413)
  Prédit: ' Team'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Team' → logprob: -0.585365891456604
    2. ' Match' → logprob: -1.335365891456604
    3. ' Tournament' → logprob: -2.9603657722473145
    4. ' Solution' → logprob: -3.2103657722473145
    5. ' Ranking' → logprob: -3.2103657722473145
    6. ' Result' → logprob: -4.8353657722473145
    7. 'Match' → logprob: -4.8353657722473145
    8. ' Solver' → logprob: -5.0853657722473145
    9. ' Rank' → logprob: -5.4603657722473145
    10. 'Team' → logprob: -5.5853657722473145

Token 343: 'Ranking' (ID: 99832)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.06596946716308594
    2. 'Ranking' → logprob: -2.940969467163086
    3. 'Rank' → logprob: -4.940969467163086
    4. 'R' → logprob: -6.440969467163086
    5. ' Solver' → logprob: -7.440969467163086
    6. 'Solution' → logprob: -7.440969467163086
    7. 'Team' → logprob: -7.815969467163086
    8. 'Resolver' → logprob: -8.690969467163086
    9. 'Sorter' → logprob: -9.565969467163086
    10. 'Base' → logprob: -9.815969467163086

Token 344: 'Model' (ID: 2239)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.0010998494690284133
    2. ':' → logprob: -7.001100063323975
    3. 'Strategy' → logprob: -9.501099586486816
    4. 'Builder' → logprob: -10.876099586486816
    5. 'Solution' → logprob: -10.876099586486816
    6. 'Algorithm' → logprob: -10.876099586486816
    7. 'Problem' → logprob: -11.376099586486816
    8. ':
' → logprob: -12.001099586486816
    9. 'S' → logprob: -12.376099586486816
    10. ' Solver' → logprob: -12.626099586486816

Token 345: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019769303034991026
    2. ':
' → logprob: -6.25197696685791
    3. '(' → logprob: -10.37697696685791
    4. ' :' → logprob: -11.75197696685791
    5. '():' → logprob: -12.62697696685791
    6. '<|end|>' → logprob: -13.25197696685791
    7. '(Abstract' → logprob: -13.87697696685791
    8. ':

' → logprob: -14.12697696685791
    9. '(object' → logprob: -14.25197696685791
    10. '):' → logprob: -14.75197696685791

Token 346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005480864085257053
    2. ' def' → logprob: -5.630480766296387
    3. '    ' → logprob: -6.755480766296387
    4. ':' → logprob: -8.255480766296387
    5. '    
' → logprob: -8.630480766296387
    6. ':
' → logprob: -9.505480766296387
    7. '
' → logprob: -10.005480766296387
    8. '<|end|>' → logprob: -10.255480766296387
    9. 'def' → logprob: -10.505480766296387
    10. 'class' → logprob: -11.505480766296387

Token 347: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.24022242426872253
    2. 'def' (adapté à ' def') → logprob: -1.615222454071045
    3. '   ' → logprob: -5.115222454071045
    4. 'from' → logprob: -5.365222454071045
    5. '    ' → logprob: -6.240222454071045
    6. 'class' → logprob: -6.865222454071045
    7. ' from' → logprob: -8.115221977233887
    8. 'import' → logprob: -8.115221977233887
    9. ' ' → logprob: -8.740221977233887
    10. ' import' → logprob: -9.615221977233887

Token 348: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5449313521385193
    2. 'init' → logprob: -1.294931411743164
    3. ' init' → logprob: -2.544931411743164
    4. ' __' → logprob: -3.419931411743164
    5. 'def' → logprob: -3.669931411743164
    6. ' ' → logprob: -6.044931411743164
    7. ' abc' → logprob: -6.169931411743164
    8. '_' → logprob: -6.794931411743164
    9. 'class' → logprob: -7.169931411743164
    10. '   ' → logprob: -7.169931411743164

Token 349: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. ' init' → logprob: -15.375
    3. 'def' → logprob: -18.125
    4. '_init' → logprob: -19.125
    5. 'abstract' → logprob: -19.5
    6. 'ini' → logprob: -19.875
    7. '   ' → logprob: -20.0
    8. 'class' → logprob: -20.0
    9. 'int' → logprob: -20.125
    10. 'sub' → logprob: -20.625

Token 350: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0011705794604495168
    2. '(self' → logprob: -6.876170635223389
    3. '__' → logprob: -9.25117015838623
    4. '__(
' → logprob: -10.87617015838623
    5. ' (' → logprob: -11.37617015838623
    6. '(' → logprob: -12.12617015838623
    7. '_(' → logprob: -12.37617015838623
    8. ')(' → logprob: -14.87617015838623
    9. 'self' → logprob: -15.00117015838623
    10. '   ' → logprob: -15.12617015838623

Token 351: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013570250011980534
    2. ' self' → logprob: -7.001357078552246
    3. ')' → logprob: -8.126357078552246
    4. '   ' → logprob: -9.501357078552246
    5. '
' → logprob: -10.251357078552246
    6. '):
' → logprob: -10.376357078552246
    7. ',' → logprob: -12.876357078552246
    8. ')
' → logprob: -13.751357078552246
    9. '  ' → logprob: -13.876357078552246
    10. '(self' → logprob: -14.251357078552246

Token 352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016370641067624092
    2. 'self' → logprob: -4.39137077331543
    3. ' ,' → logprob: -6.26637077331543
    4. ' self' → logprob: -7.14137077331543
    5. '):
' → logprob: -8.14137077331543
    6. '   ' → logprob: -8.14137077331543
    7. '(self' → logprob: -8.26637077331543
    8. ')' → logprob: -8.51637077331543
    9. ' (' → logprob: -10.26637077331543
    10. ')(' → logprob: -10.64137077331543

Token 353: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8666761517524719
    2. ' n' → logprob: -0.8666761517524719
    3. 'self' → logprob: -2.491676092147827
    4. ' self' → logprob: -3.616676092147827
    5. 'num' → logprob: -4.116676330566406
    6. ')' → logprob: -4.366676330566406
    7. '):
' → logprob: -5.116676330566406
    8. '   ' → logprob: -5.616676330566406
    9. ' num' → logprob: -5.616676330566406
    10. 'solver' → logprob: -6.491676330566406

Token 354: ':' (ID: 25)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00014084660506341606
    2. ' _' → logprob: -9.625141143798828
    3. ')' → logprob: -10.125141143798828
    4. '<|end|>' → logprob: -12.500141143798828
    5. 'Teams' → logprob: -12.625141143798828
    6. '):
' → logprob: -12.625141143798828
    7. ')_' → logprob: -13.000141143798828
    8. '   ' → logprob: -13.000141143798828
    9. '_te' → logprob: -13.125141143798828
    10. '_players' → logprob: -13.375141143798828

Token 355: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0430598221719265
    2. ' int' → logprob: -3.168059825897217
    3. ':int' → logprob: -10.418059349060059
    4. '   ' → logprob: -11.668059349060059
    5. ')' → logprob: -11.918059349060059
    6. '):
' → logprob: -12.168059349060059
    7. '(int' → logprob: -13.293059349060059
    8. '       ' → logprob: -13.793059349060059
    9. '=int' → logprob: -13.918059349060059
    10. 'self' → logprob: -13.918059349060059

Token 356: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029865380376577377
    2. '):
' → logprob: -3.529865264892578
    3. ')' → logprob: -9.904865264892578
    4. ',' → logprob: -10.029865264892578
    5. ':' → logprob: -11.904865264892578
    6. '):
' → logprob: -12.154865264892578
    7. '   ' → logprob: -12.154865264892578
    8. '       ' → logprob: -13.529865264892578
    9. ' ):' → logprob: -13.529865264892578
    10. '):

' → logprob: -15.029865264892578

Token 357: ' matches' (ID: 15248)
  Prédit: ' match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.7907323241233826
    2. 'match' → logprob: -1.1657323837280273
    3. 'results' → logprob: -2.6657323837280273
    4. ' matches' → logprob: -2.9157323837280273
    5. 'matches' → logprob: -2.9157323837280273
    6. ' results' → logprob: -3.1657323837280273
    7. 'm' → logprob: -6.540732383728027
    8. 'max' → logprob: -6.665732383728027
    9. 'team' → logprob: -6.915732383728027
    10. ' max' → logprob: -7.040732383728027

Token 358: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3893492817878723
    2. '):' → logprob: -1.1393492221832275
    3. '):
' → logprob: -6.639349460601807
    4. '=None' → logprob: -7.889349460601807
    5. '=[]' → logprob: -8.014348983764648
    6. ')' → logprob: -8.889348983764648
    7. ',' → logprob: -9.014348983764648
    8. ':list' → logprob: -9.889348983764648
    9. ' ):' → logprob: -10.139348983764648
    10. ' :' → logprob: -10.514348983764648

Token 359: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.18375705182552338
    2. ' list' → logprob: -2.5587570667266846
    3. 'List' → logprob: -3.3087570667266846
    4. ')' → logprob: -3.5587570667266846
    5. '[list' → logprob: -4.3087568283081055
    6. '):' → logprob: -4.8087568283081055
    7. '[]' → logprob: -7.4337568283081055
    8. '[]):' → logprob: -7.5587568283081055
    9. '):
' → logprob: -7.6837568283081055
    10. '[' → logprob: -7.6837568283081055

Token 360: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5826587080955505
    2. '[' → logprob: -1.2076587677001953
    3. '):
' → logprob: -1.9576587677001953
    4. '[int' → logprob: -7.332658767700195
    5. ':' → logprob: -7.957658767700195
    6. ' ):' → logprob: -8.457658767700195
    7. '[M' → logprob: -10.207658767700195
    8. ' of' → logprob: -10.332658767700195
    9. ' ):
' → logprob: -10.457658767700195
    10. ')' → logprob: -10.582658767700195

Token 361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036891514901071787
    2. '<|end|>' → logprob: -7.128689289093018
    3. ')' → logprob: -7.503689289093018
    4. '(n' → logprob: -7.628689289093018
    5. '):' → logprob: -7.878689289093018
    6. ':' → logprob: -7.878689289093018
    7. '):
' → logprob: -8.12868881225586
    8. ',' → logprob: -8.25368881225586
    9. '   ' → logprob: -8.62868881225586
    10. '(' → logprob: -8.87868881225586

Token 362: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3063938617706299
    2. ' self' → logprob: -1.8063938617706299
    3. '       ' → logprob: -2.30639386177063
    4. 'super' → logprob: -10.55639362335205
    5. '   ' → logprob: -12.18139362335205
    6. ' super' → logprob: -12.55639362335205
    7. '	self' → logprob: -13.30639362335205
    8. ' ' → logprob: -14.55639362335205
    9. 'class' → logprob: -15.55639362335205
    10. '#' → logprob: -15.68139362335205

Token 363: '.n' (ID: 1835)
  Prédit: ' .'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' .' → logprob: -0.6791549921035767
    2. '.' → logprob: -1.5541549921035767
    3. '.n' → logprob: -1.5541549921035767
    4. ' =' → logprob: -2.804154872894287
    5. 'n' → logprob: -5.429154872894287
    6. ' n' → logprob: -6.429154872894287
    7. '=' → logprob: -6.429154872894287
    8. '   ' → logprob: -6.804154872894287
    9. '       ' → logprob: -7.804154872894287
    10. ' ' → logprob: -8.929155349731445

Token 364: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2522996664047241
    2. '=' → logprob: -1.5022996664047241
    3. '_' → logprob: -8.127299308776855
    4. ',' → logprob: -10.877299308776855
    5. '        ' → logprob: -11.377299308776855
    6. '   ' → logprob: -11.627299308776855
    7. '    ' → logprob: -11.877299308776855
    8. '<|end|>' → logprob: -11.877299308776855
    9. '       ' → logprob: -12.002299308776855
    10. ' ' → logprob: -12.627299308776855

Token 365: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12692947685718536
    2. 'n' → logprob: -2.126929521560669
    3. '	n' → logprob: -13.62692928314209
    4. '_n' → logprob: -16.251930236816406
    5. ')n' → logprob: -17.376930236816406
    6. ',n' → logprob: -17.751930236816406
    7. ' ' → logprob: -18.126930236816406
    8. '<|end|>' → logprob: -18.376930236816406
    9. '(n' → logprob: -18.501930236816406
    10. '    ' → logprob: -19.001930236816406

Token 366: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20335233211517334
    2. '
' → logprob: -1.7033523321151733
    3. '<|end|>' → logprob: -6.328352451324463
    4. 'self' → logprob: -9.453351974487305
    5. ',' → logprob: -10.578351974487305
    6. '        
' → logprob: -10.828351974487305
    7. '<|end|>' → logprob: -11.578351974487305
    8. '
' → logprob: -12.453351974487305
    9. ',
' → logprob: -12.953351974487305
    10. ' self' → logprob: -13.328351974487305

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006259413785301149
    2. 'self' → logprob: -7.625626087188721
    3. ' self' → logprob: -9.375625610351562
    4. '<|end|>' → logprob: -10.500625610351562
    5. '
' → logprob: -10.750625610351562
    6. ',' → logprob: -13.250625610351562
    7. '      ' → logprob: -14.250625610351562
    8. '   ' → logprob: -14.625625610351562
    9. '        
' → logprob: -14.875625610351562
    10. '<|end|>' → logprob: -15.625625610351562

Token 368: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0023164297454059124
    2. ' self' → logprob: -6.252316474914551
    3. '       ' → logprob: -7.877316474914551
    4. 'matches' → logprob: -11.75231647491455
    5. '   ' → logprob: -15.00231647491455
    6. ' matches' → logprob: -15.62731647491455
    7. '	self' → logprob: -16.127315521240234
    8. 's' → logprob: -17.377315521240234
    9. 'class' → logprob: -17.502315521240234
    10. '[self' → logprob: -18.002315521240234

Token 369: '.matches' (ID: 64560)
  Prédit: '_matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matches' → logprob: -0.6649115681648254
    2. '.matches' → logprob: -0.7899115681648254
    3. '._' → logprob: -4.16491174697876
    4. '       ' → logprob: -4.53991174697876
    5. '_' → logprob: -6.28991174697876
    6. 'matches' → logprob: -6.41491174697876
    7. '   ' → logprob: -7.28991174697876
    8. '.' → logprob: -7.53991174697876
    9. '.n' → logprob: -7.91491174697876
    10. ' matches' → logprob: -9.039911270141602

Token 370: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021205991506577
    2. '=' → logprob: -2.3502120971679688
    3. '   ' → logprob: -12.600212097167969
    4. ' ' → logprob: -13.850212097167969
    5. '       ' → logprob: -14.975212097167969
    6. '    ' → logprob: -15.225212097167969
    7. ':' → logprob: -16.22521209716797
    8. ' =
' → logprob: -16.22521209716797
    9. '        ' → logprob: -16.72521209716797
    10. '<|end|>' → logprob: -16.85021209716797

Token 371: ' matches' (ID: 15248)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.1797970086336136
    2. ' matches' → logprob: -1.8047970533370972
    3. '(matches' → logprob: -11.054797172546387
    4. 'match' → logprob: -11.179797172546387
    5. '[]' → logprob: -11.804797172546387
    6. '   ' → logprob: -12.429797172546387
    7. 'list' → logprob: -13.429797172546387
    8. ' ' → logprob: -13.554797172546387
    9. '[' → logprob: -13.554797172546387
    10. ' ' → logprob: -13.929797172546387

Token 372: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17241954803466797
    2. '<|end|>' → logprob: -2.547419548034668
    3. '    
' → logprob: -2.922419548034668
    4. '   ' → logprob: -3.797419548034668
    5. '

' → logprob: -6.547419548034668
    6. '
    
' → logprob: -6.672419548034668
    7. '  
' → logprob: -7.797419548034668
    8. '<|end|>' → logprob: -8.172419548034668
    9. '       ' → logprob: -8.922419548034668
    10. 'def' → logprob: -9.547419548034668

Token 373: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13803915679454803
    2. '   ' → logprob: -2.6380391120910645
    3. '    
' → logprob: -2.8880391120910645
    4. '<|end|>' → logprob: -7.1380391120910645
    5. '
    
' → logprob: -8.013039588928223
    6. '

' → logprob: -8.263039588928223
    7. '       ' → logprob: -8.763039588928223
    8. '        
' → logprob: -9.513039588928223
    9. 'def' → logprob: -9.513039588928223
    10. ' 
' → logprob: -11.638039588928223

Token 374: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5346870422363281
    2. 'def' → logprob: -1.5346870422363281
    3. '
' → logprob: -2.159687042236328
    4. 'self' (adapté à ' self') → logprob: -3.409687042236328
    5. '   ' → logprob: -3.534687042236328
    6. ' self' → logprob: -4.659687042236328
    7. '<|end|>' → logprob: -4.909687042236328
    8. ' def' → logprob: -6.034687042236328
    9. '    
' → logprob: -8.034687042236328
    10. '```' → logprob: -8.284687042236328

Token 375: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.5647557973861694
    2. '.' → logprob: -1.8147557973861694
    3. '.rank' → logprob: -2.689755916595459
    4. 'solver' → logprob: -2.814755916595459
    5. ' .' → logprob: -3.439755916595459
    6. '.results' → logprob: -3.564755916595459
    7. '._' → logprob: -3.814755916595459
    8. '.team' → logprob: -3.939755916595459
    9. '.r' → logprob: -4.314755916595459
    10. '_solver' → logprob: -5.314755916595459

Token 376: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -0.002079240046441555
    2. 'elf' → logprob: -6.377079010009766
    3. '   ' → logprob: -9.252079010009766
    4. '_' → logprob: -9.752079010009766
    5. 'solver' → logprob: -10.252079010009766
    6. 't' → logprob: -10.627079010009766
    7. 'core' → logprob: -11.127079010009766
    8. '```' → logprob: -11.252079010009766
    9. '_solver' → logprob: -11.377079010009766
    10. 'olvers' → logprob: -11.627079010009766

Token 377: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022655367851257
    2. '=' → logprob: -1.910226583480835
    3. '_' → logprob: -13.660226821899414
    4. '   ' → logprob: -14.660226821899414
    5. '.' → logprob: -15.160226821899414
    6. ' ' → logprob: -15.410226821899414
    7. ' =
' → logprob: -16.285226821899414
    8. '	' → logprob: -16.785226821899414
    9. ')' → logprob: -16.910226821899414
    10. 's' → logprob: -17.035226821899414

Token 378: ' Team' (ID: 10774)
  Prédit: ' Team'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Team' → logprob: -0.004078758880496025
    2. 'Team' → logprob: -5.5040788650512695
    3. ' None' → logprob: -15.12907886505127
    4. 'None' → logprob: -17.254077911376953
    5. ' ' → logprob: -17.754077911376953
    6. ' ' → logprob: -19.254077911376953
    7. ' team' → logprob: -20.129077911376953
    8. ' Task' → logprob: -21.004077911376953
    9. '.Team' → logprob: -21.004077911376953
    10. '_team' → logprob: -21.504077911376953

Token 379: 'Ranking' (ID: 99832)
  Prédit: 'Ranking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ranking' → logprob: -4.320199877838604e-07
    2. 'Rank' → logprob: -15.5
    3. ' Ranking' → logprob: -16.625
    4. 'ranking' → logprob: -17.125
    5. 'Rating' → logprob: -17.375
    6. 'anking' → logprob: -19.0
    7. '-ranking' → logprob: -19.125
    8. ' ranking' → logprob: -20.25
    9. 'ランキング' → logprob: -20.625
    10. 'Matching' → logprob: -21.5

Token 380: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -2.4987974029500037e-05
    2. 'solver' → logprob: -10.750024795532227
    3. '_solver' → logprob: -13.250024795532227
    4. ' Solver' → logprob: -14.000024795532227
    5. 'olver' → logprob: -15.250024795532227
    6. 'S' → logprob: -15.750024795532227
    7. 'Solve' → logprob: -15.750024795532227
    8. 'Sol' → logprob: -17.125024795532227
    9. ' solver' → logprob: -17.125024795532227
    10. 'Resolver' → logprob: -17.500024795532227

Token 381: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0035044457763433456
    2. '(self' → logprob: -5.753504276275635
    3. '(' → logprob: -8.253504753112793
    4. '(
' → logprob: -9.628504753112793
    5. 'n' → logprob: -15.253504753112793
    6. ' (' → logprob: -15.503504753112793
    7. 'self' → logprob: -16.753503799438477
    8. '(

' → logprob: -17.753503799438477
    9. '(
' → logprob: -18.253503799438477
    10. '```' → logprob: -19.003503799438477

Token 382: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.034592388459714e-06
    2. ')
' → logprob: -13.000005722045898
    3. ' )' → logprob: -13.500005722045898
    4. '<|end|>' → logprob: -13.750005722045898
    5. ',' → logprob: -14.625005722045898
    6. '))' → logprob: -15.250005722045898
    7. '       ' → logprob: -15.625005722045898
    8. '),' → logprob: -16.5000057220459
    9. '   ' → logprob: -16.6250057220459
    10. ')

' → logprob: -17.2500057220459

Token 383: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019931849092245102
    2. '
' → logprob: -5.269931793212891
    3. '       ' → logprob: -5.269931793212891
    4. ' for' → logprob: -5.769931793212891
    5. '    
' → logprob: -6.394931793212891
    6. 'for' → logprob: -6.644931793212891
    7. '<|end|>' → logprob: -6.644931793212891
    8. 'def' → logprob: -6.894931793212891
    9. ' def' → logprob: -7.019931793212891
    10. '        
' → logprob: -9.26993179321289

Token 384: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001305950863752514
    2. ' for' → logprob: -9.000130653381348
    3. '       ' → logprob: -11.875130653381348
    4. '   ' → logprob: -15.875130653381348
    5. 'def' → logprob: -17.62512969970703
    6. '	for' → logprob: -18.00012969970703
    7. '```' → logprob: -18.75012969970703
    8. '#' → logprob: -20.25012969970703
    9. '
' → logprob: -20.25012969970703
    10. '<|end|>' → logprob: -21.25012969970703

Token 385: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.027944067493081093
    2. '.for' → logprob: -4.527944087982178
    3. '.initialize' → logprob: -5.402944087982178
    4. 'for' → logprob: -5.527944087982178
    5. '._' → logprob: -5.527944087982178
    6. ' for' → logprob: -6.777944087982178
    7. '.setup' → logprob: -7.277944087982178
    8. '.s' → logprob: -8.15294361114502
    9. '.add' → logprob: -8.15294361114502
    10. '.fill' → logprob: -8.27794361114502

Token 386: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.14838451147079468
    2. 'initialize' → logprob: -2.6483845710754395
    3. 'prepare' → logprob: -3.6483845710754395
    4. 'init' → logprob: -4.1483845710754395
    5. 'process' → logprob: -4.5233845710754395
    6. 'load' → logprob: -5.1483845710754395
    7. 'populate' → logprob: -5.6483845710754395
    8. 'setup' → logprob: -6.3983845710754395
    9. 'pre' → logprob: -6.6483845710754395
    10. 'parse' → logprob: -7.5233845710754395

Token 387: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.11000513285398483
    2. '_' → logprob: -2.4850051403045654
    3. '_matches' → logprob: -4.860004901885986
    4. '()' → logprob: -5.485004901885986
    5. '_match' → logprob: -5.610004901885986
    6. '_rank' → logprob: -5.860004901885986
    7. '(' → logprob: -6.860004901885986
    8. 'graph' → logprob: -7.235004901885986
    9. '_r' → logprob: -8.485005378723145
    10. '(matches' → logprob: -9.235005378723145

Token 388: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.786196975852363e-05
    2. '()
' → logprob: -10.875038146972656
    3. '_' → logprob: -11.375038146972656
    4. ' ()' → logprob: -12.750038146972656
    5. '()

' → logprob: -13.750038146972656
    6. '(' → logprob: -14.125038146972656
    7. 's' → logprob: -14.250038146972656
    8. '()`' → logprob: -14.500038146972656
    9. '()
' → logprob: -14.750038146972656
    10. ']()' → logprob: -15.250038146972656

Token 389: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06045709550380707
    2. '   ' → logprob: -3.3104569911956787
    3. '    
' → logprob: -4.185457229614258
    4. '<|end|>' → logprob: -5.060457229614258
    5. '```' → logprob: -9.060457229614258
    6. '  
' → logprob: -9.185457229614258
    7. '        
' → logprob: -9.185457229614258
    8. 'def' → logprob: -9.935457229614258
    9. '

' → logprob: -10.060457229614258
    10. '<|end|>' → logprob: -10.060457229614258

Token 390: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09090489149093628
    2. 'def' → logprob: -2.465904951095581
    3. '
' → logprob: -6.965904712677002
    4. ' def' → logprob: -7.590904712677002
    5. '    
' → logprob: -7.715904712677002
    6. '	def' → logprob: -10.21590518951416
    7. '```' → logprob: -10.84090518951416
    8. '        
' → logprob: -11.96590518951416
    9. '  
' → logprob: -13.71590518951416
    10. ' 
' → logprob: -13.84090518951416

Token 391: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007136239437386394
    2. ' def' → logprob: -7.25071382522583
    3. '   ' → logprob: -12.625713348388672
    4. '	def' → logprob: -15.625713348388672
    5. '
' → logprob: -16.000713348388672
    6. '_def' → logprob: -17.875713348388672
    7. '```' → logprob: -18.250713348388672
    8. '    
' → logprob: -18.750713348388672
    9. ' ' → logprob: -19.125713348388672
    10. 'ndef' → logprob: -19.750713348388672

Token 392: ' _' (ID: 1175)
  Prédit: '_build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -0.00011713240382960066
    2. ' _' → logprob: -9.125117301940918
    3. '_b' → logprob: -12.500117301940918
    4. '_' → logprob: -13.375117301940918
    5. '_run' → logprob: -14.125117301940918
    6. 'build' → logprob: -14.250117301940918
    7. '_add' → logprob: -14.500117301940918
    8. '_builder' → logprob: -14.750117301940918
    9. 'def' → logprob: -15.000117301940918
    10. '_def' → logprob: -16.7501163482666

Token 393: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -2.696889623621246e-06
    2. '_build' → logprob: -13.12500286102295
    3. 'b' → logprob: -14.50000286102295
    4. ' build' → logprob: -16.000001907348633
    5. '	build' → logprob: -17.875001907348633
    6. '.build' → logprob: -19.125001907348633
    7. '(build' → logprob: -19.625001907348633
    8. '_b' → logprob: -20.125001907348633
    9. 'def' → logprob: -20.375001907348633
    10. '_' → logprob: -20.750001907348633

Token 394: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.375000953674316
    3. 'graph' → logprob: -15.375000953674316
    4. '_build' → logprob: -17.875
    5. '_code' → logprob: -18.0
    6. '_g' → logprob: -18.125
    7. '_gr' → logprob: -18.25
    8. '_GRAPH' → logprob: -18.5
    9. '(graph' → logprob: -18.625
    10. ' _' → logprob: -18.75

Token 395: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00022964231902733445
    2. '(' → logprob: -8.750229835510254
    3. 'self' → logprob: -9.750229835510254
    4. '   ' → logprob: -11.875229835510254
    5. '       ' → logprob: -13.250229835510254
    6. '(s' → logprob: -13.875229835510254
    7. '()' → logprob: -14.000229835510254
    8. 'def' → logprob: -14.250229835510254
    9. ' (' → logprob: -14.375229835510254
    10. '(
' → logprob: -15.250229835510254

Token 396: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027786867693066597
    2. '):
' → logprob: -3.65278697013855
    3. 'self' → logprob: -7.027786731719971
    4. '(self' → logprob: -8.027787208557129
    5. ')' → logprob: -8.402787208557129
    6. '):
' → logprob: -10.902787208557129
    7. '   ' → logprob: -11.652787208557129
    8. '       ' → logprob: -11.902787208557129
    9. ',' → logprob: -12.152787208557129
    10. '():' → logprob: -13.027787208557129

Token 397: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.0259150157216936e-05
    2. ' for' → logprob: -10.00005054473877
    3. '   ' → logprob: -13.12505054473877
    4. 'for' → logprob: -13.25005054473877
    5. ',' → logprob: -15.00005054473877
    6. '```' → logprob: -15.50005054473877
    7. ':' → logprob: -16.000049591064453
    8. '	   ' → logprob: -16.750049591064453
    9. '
' → logprob: -16.875049591064453
    10. '<|end|>' → logprob: -17.125049591064453

Token 398: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.8696961402893066
    2. ' for' → logprob: -1.1196961402893066
    3. '       ' → logprob: -1.3696961402893066
    4. '   ' → logprob: -7.994696140289307
    5. '	for' → logprob: -10.869695663452148
    6. ' ' → logprob: -14.119695663452148
    7. '	' → logprob: -15.119695663452148
    8. '	   ' → logprob: -15.369695663452148
    9. '    ' → logprob: -15.869695663452148
    10. '           ' → logprob: -16.24469566345215

Token 399: ' match' (ID: 3981)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.16343921422958374
    2. ' match' → logprob: -1.9134392738342285
    3. 'result' → logprob: -6.1634392738342285
    4. 'm' → logprob: -7.1634392738342285
    5. ' result' → logprob: -8.41343879699707
    6. '   ' → logprob: -9.91343879699707
    7. ' m' → logprob: -10.16343879699707
    8. '       ' → logprob: -11.28843879699707
    9. '           ' → logprob: -13.16343879699707
    10. '	match' → logprob: -13.16343879699707

Token 400: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011350308544933796
    2. '_result' → logprob: -4.886350154876709
    3. 'in' → logprob: -6.261350154876709
    4. 'result' → logprob: -6.886350154876709
    5. '_' → logprob: -7.511350154876709
    6. ' ' → logprob: -8.386350631713867
    7. ' result' → logprob: -12.011350631713867
    8. ' _' → logprob: -12.011350631713867
    9. 'Result' → logprob: -12.261350631713867
    10. '   ' → logprob: -12.636350631713867

Token 401: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0052350712940096855
    2. ' self' → logprob: -5.255235195159912
    3. '   ' → logprob: -14.255234718322754
    4. '(self' → logprob: -14.880234718322754
    5. '       ' → logprob: -15.255234718322754
    6. '	self' → logprob: -16.75523567199707
    7. '[self' → logprob: -17.50523567199707
    8. '           ' → logprob: -18.63023567199707
    9. '
' → logprob: -18.75523567199707
    10. '    ' → logprob: -19.25523567199707

Token 402: '.matches' (ID: 64560)
  Prédit: '.matches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.matches' → logprob: -5.574251918005757e-05
    2. 'matches' → logprob: -10.500055313110352
    3. '.m' → logprob: -11.500055313110352
    4. 's' → logprob: -12.000055313110352
    5. '.s' → logprob: -12.500055313110352
    6. ' .' → logprob: -12.875055313110352
    7. '.' → logprob: -12.875055313110352
    8. '.match' → logprob: -13.250055313110352
    9. '(matches' → logprob: -14.250055313110352
    10. '_matches' → logprob: -15.500055313110352

Token 403: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3878352642059326
    2. ':
' → logprob: -1.1378352642059326
    3. '           ' → logprob: -7.012835502624512
    4. '.' → logprob: -11.387835502624512
    5. ':
' → logprob: -11.512835502624512
    6. ':self' → logprob: -11.512835502624512
    7. ',' → logprob: -11.637835502624512
    8. 'self' → logprob: -11.887835502624512
    9. '):
' → logprob: -12.012835502624512
    10. '       ' → logprob: -12.637835502624512

Token 404: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00046749215107411146
    2. 'self' → logprob: -7.750467300415039
    3. ' self' → logprob: -10.375467300415039
    4. '       ' → logprob: -13.250467300415039
    5. ',' → logprob: -14.000467300415039
    6. '(self' → logprob: -14.000467300415039
    7. ':' → logprob: -14.625467300415039
    8. ':
' → logprob: -14.875467300415039
    9. '[self' → logprob: -15.000467300415039
    10. '          ' → logprob: -15.375467300415039

Token 405: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0307764932513237
    2. ' self' → logprob: -3.5307765007019043
    3. '           ' → logprob: -6.905776500701904
    4. '       ' → logprob: -10.780776023864746
    5. '               ' → logprob: -13.905776023864746
    6. '   ' → logprob: -14.155776023864746
    7. '	self' → logprob: -14.780776023864746
    8. '(self' → logprob: -14.905776023864746
    9. '[self' → logprob: -16.155776977539062
    10. ' ' → logprob: -16.405776977539062

Token 406: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.00011641718447208405
    2. '.add' → logprob: -9.625116348266602
    3. '.' → logprob: -10.375116348266602
    4. 's' → logprob: -11.500116348266602
    5. ' .' → logprob: -12.125116348266602
    6. '._' → logprob: -12.750116348266602
    7. '..' → logprob: -15.000116348266602
    8. '_.' → logprob: -16.3751163482666
    9. '.solve' → logprob: -16.5001163482666
    10. '   ' → logprob: -17.3751163482666

Token 407: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -0.0001426346570951864
    2. 'solver' → logprob: -9.500143051147461
    3. '.s' → logprob: -9.625143051147461
    4. '.' → logprob: -14.250143051147461
    5. 'ol' → logprob: -15.500143051147461
    6. 's' → logprob: -15.750143051147461
    7. 'olvers' → logprob: -16.37514305114746
    8. 'olve' → logprob: -16.50014305114746
    9. 'elf' → logprob: -16.50014305114746
    10. 'o' → logprob: -16.75014305114746

Token 408: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -9.729906196298543e-06
    2. '.' → logprob: -11.750009536743164
    3. ' .' → logprob: -13.625009536743164
    4. 'add' → logprob: -15.000009536743164
    5. '   ' → logprob: -16.125009536743164
    6. '.append' → logprob: -17.375009536743164
    7. '       ' → logprob: -18.750009536743164
    8. '.Add' → logprob: -19.000009536743164
    9. '.ad' → logprob: -19.000009536743164
    10. '           ' → logprob: -19.125009536743164

Token 409: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -3.4121114822482923e-06
    2. '_' → logprob: -12.625003814697266
    3. 'match' → logprob: -17.000003814697266
    4. '_m' → logprob: -17.250003814697266
    5. '(match' → logprob: -18.125003814697266
    6. '_add' → logprob: -18.500003814697266
    7. '```' → logprob: -18.750003814697266
    8. '_matches' → logprob: -19.000003814697266
    9. '_move' → logprob: -19.375003814697266
    10. '_mat' → logprob: -19.500003814697266

Token 410: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -5.9153885558771435e-06
    2. 'result' → logprob: -12.750005722045898
    3. '_' → logprob: -13.625005722045898
    4. '_results' → logprob: -14.000005722045898
    5. ' _' → logprob: -14.875005722045898
    6. '_match' → logprob: -15.125005722045898
    7. '_res' → logprob: -15.875005722045898
    8. '__' → logprob: -17.2500057220459
    9. '(_' → logprob: -17.3750057220459
    10. '_r' → logprob: -18.3750057220459

Token 411: '(match' (ID: 61646)
  Prédit: '(match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(match' → logprob: -0.0007219645194709301
    2. '(' → logprob: -7.2507219314575195
    3. ' (' → logprob: -11.62572193145752
    4. ' match' → logprob: -13.50072193145752
    5. 'match' → logprob: -13.87572193145752
    6. '(
' → logprob: -14.25072193145752
    7. '((' → logprob: -16.625722885131836
    8. '(matches' → logprob: -16.625722885131836
    9. '(mat' → logprob: -19.000722885131836
    10. '(move' → logprob: -19.125722885131836

Token 412: '.w' (ID: 2234)
  Prédit: '.w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.w' → logprob: -3.953082341467962e-05
    2. '.' → logprob: -10.500039100646973
    3. ' .' → logprob: -11.500039100646973
    4. ').' → logprob: -13.875039100646973
    5. 'winner' → logprob: -14.875039100646973
    6. '.s' → logprob: -16.12504005432129
    7. '.wicket' → logprob: -16.87504005432129
    8. ' winner' → logprob: -17.12504005432129
    9. 'w' → logprob: -17.50004005432129
    10. '.W' → logprob: -17.50004005432129

Token 413: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.0003025729674845934
    2. 'winner' → logprob: -9.1253023147583
    3. '.inner' → logprob: -9.6253023147583
    4. 'nner' → logprob: -10.1253023147583
    5. 'riter' → logprob: -10.8753023147583
    6. 'iner' → logprob: -10.8753023147583
    7. 'inn' → logprob: -11.3753023147583
    8. '.' → logprob: -11.6253023147583
    9. 'inter' → logprob: -12.2503023147583
    10. 'inne' → logprob: -12.5003023147583

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2007883671903983e-05
    2. ' ,' → logprob: -10.750021934509277
    3. ',
' → logprob: -14.750021934509277
    4. ',m' → logprob: -16.000022888183594
    5. '(match' → logprob: -17.750022888183594
    6. ',module' → logprob: -18.750022888183594
    7. ',

' → logprob: -19.375022888183594
    8. '           ' → logprob: -19.375022888183594
    9. '‌,' → logprob: -20.250022888183594
    10. ',\
' → logprob: -20.500022888183594

Token 415: ' match' (ID: 3981)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.011047935113310814
    2. ' match' → logprob: -4.511047840118408
    3. '(match' → logprob: -16.13604736328125
    4. '	match' → logprob: -17.51104736328125
    5. '           ' → logprob: -19.01104736328125
    6. ' ' → logprob: -19.26104736328125
    7. '   ' → logprob: -19.26104736328125
    8. '.match' → logprob: -20.13604736328125
    9. '_match' → logprob: -20.26104736328125
    10. 'm' → logprob: -20.51104736328125

Token 416: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -1.7432603272027336e-06
    2. '.w' → logprob: -14.250001907348633
    3. '.loss' → logprob: -14.875001907348633
    4. '.lo' → logprob: -15.250001907348633
    5. '.' → logprob: -15.500001907348633
    6. ').' → logprob: -16.625001907348633
    7. ' .' → logprob: -16.625001907348633
    8. 'los' → logprob: -17.500001907348633
    9. '.s' → logprob: -18.500001907348633
    10. ')' → logprob: -18.750001907348633

Token 417: 'oser' (ID: 26956)
  Prédit: 'oser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oser' → logprob: -2.0219828002154827e-05
    2. 'os' → logprob: -11.125020027160645
    3. ')' → logprob: -12.875020027160645
    4. 'o' → logprob: -14.000020027160645
    5. 'ose' → logprob: -14.125020027160645
    6. '   ' → logprob: -15.000020027160645
    7. 'user' → logprob: -15.250020027160645
    8. '```' → logprob: -15.500020027160645
    9. ')
' → logprob: -16.12502098083496
    10. 'ser' → logprob: -17.12502098083496

Token 418: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.034592388459714e-06
    2. ')
' → logprob: -12.375005722045898
    3. ' )' → logprob: -13.375005722045898
    4. '<|end|>' → logprob: -16.3750057220459
    5. '       ' → logprob: -16.6250057220459
    6. ')return' → logprob: -17.6250057220459
    7. ')

' → logprob: -17.6250057220459
    8. '())' → logprob: -18.1250057220459
    9. ')}' → logprob: -18.3750057220459
    10. '))' → logprob: -19.0000057220459

Token 419: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7929039597511292
    2. '
' → logprob: -0.9179039597511292
    3. '<|end|>' → logprob: -2.1679039001464844
    4. '    
' → logprob: -3.4179039001464844
    5. '<|end|>' → logprob: -8.042903900146484
    6. '        
' → logprob: -8.292903900146484
    7. 'def' → logprob: -9.292903900146484
    8. '```' → logprob: -9.792903900146484
    9. 'class' → logprob: -10.167903900146484
    10. '

' → logprob: -10.417903900146484

Token 420: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47539106011390686
    2. 'def' → logprob: -0.9753910303115845
    3. ' def' → logprob: -6.725390911102295
    4. '
' → logprob: -9.725391387939453
    5. '<|end|>' → logprob: -10.475391387939453
    6. '```' → logprob: -11.600391387939453
    7. '  ' → logprob: -12.475391387939453
    8. ' ' → logprob: -12.725391387939453
    9. '    
' → logprob: -12.975391387939453
    10. '	def' → logprob: -12.975391387939453

Token 421: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.388769103679806e-05
    2. ' def' → logprob: -9.375093460083008
    3. '   ' → logprob: -11.625093460083008
    4. 'class' → logprob: -17.000093460083008
    5. '@' → logprob: -17.500093460083008
    6. '	def' → logprob: -17.875093460083008
    7. '
' → logprob: -18.125093460083008
    8. '    
' → logprob: -18.875093460083008
    9. ' ' → logprob: -19.500093460083008
    10. 'from' → logprob: -19.750093460083008

Token 422: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.4684019088745117
    2. ' def' → logprob: -1.5934019088745117
    3. ' compute' → logprob: -2.9684019088745117
    4. ' get' → logprob: -3.3434019088745117
    5. ' rank' → logprob: -3.8434019088745117
    6. ' calculate' → logprob: -4.343401908874512
    7. 'solve' → logprob: -4.843401908874512
    8. ' predict' → logprob: -5.093401908874512
    9. ' find' → logprob: -5.093401908874512
    10. ' run' → logprob: -5.593401908874512

Token 423: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.685467764735222e-05
    2. '(' → logprob: -10.125086784362793
    3. '_rank' → logprob: -10.875086784362793
    4. 'self' → logprob: -11.375086784362793
    5. '()' → logprob: -12.000086784362793
    6. '_(' → logprob: -13.000086784362793
    7. '_unique' → logprob: -13.125086784362793
    8. '_' → logprob: -13.750086784362793
    9. ' (' → logprob: -14.000086784362793
    10. '__(' → logprob: -14.625086784362793

Token 424: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009206312242895365
    2. ',' → logprob: -7.75092077255249
    3. ')' → logprob: -8.000920295715332
    4. 'self' → logprob: -9.625920295715332
    5. '):
' → logprob: -10.000920295715332
    6. ' ):' → logprob: -10.125920295715332
    7. ':' → logprob: -13.750920295715332
    8. '):
' → logprob: -14.750920295715332
    9. '_' → logprob: -14.875920295715332
    10. '   ' → logprob: -15.625920295715332

Token 425: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014676275663077831
    2. 'order' → logprob: -4.389676094055176
    3. ' order' → logprob: -6.764676094055176
    4. 'try' → logprob: -8.014676094055176
    5. 'result' → logprob: -8.514676094055176
    6. 'return' → logprob: -8.639676094055176
    7. ' return' → logprob: -9.264676094055176
    8. ' try' → logprob: -9.264676094055176
    9. ' result' → logprob: -10.389676094055176
    10. '
' → logprob: -10.514676094055176

Token 426: ' try' (ID: 2075)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.74067622423172
    2. 'order' → logprob: -0.86567622423172
    3. ' return' → logprob: -3.240676164627075
    4. ' order' → logprob: -3.365676164627075
    5. '       ' → logprob: -3.865676164627075
    6. 'try' (adapté à ' try') → logprob: -4.990676403045654
    7. 'result' → logprob: -7.615676403045654
    8. ' try' → logprob: -7.990676403045654
    9. 'rank' → logprob: -9.115675926208496
    10. ' result' → logprob: -10.490675926208496

Token 427: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00428377278149128
    2. ':
' → logprob: -5.504283905029297
    3. '           ' → logprob: -9.004283905029297
    4. ' :' → logprob: -9.504283905029297
    5. '       ' → logprob: -13.379283905029297
    6. '):' → logprob: -13.754283905029297
    7. '        ' → logprob: -13.879283905029297
    8. ':return' → logprob: -13.879283905029297
    9. ':
' → logprob: -14.004283905029297
    10. ' :
' → logprob: -14.254283905029297

Token 428: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004752764943987131
    2. ' order' → logprob: -5.5047526359558105
    3. 'order' → logprob: -7.5047526359558105
    4. ',' → logprob: -9.504753112792969
    5. '          ' → logprob: -11.879753112792969
    6. ' return' → logprob: -12.129753112792969
    7. '            ' → logprob: -12.254753112792969
    8. ' self' → logprob: -12.504753112792969
    9. ':
' → logprob: -12.629753112792969
    10. '```' → logprob: -12.629753112792969

Token 429: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' (adapté à ' order') → logprob: -0.4339897930622101
    2. ' order' → logprob: -1.0589897632598877
    3. '           ' → logprob: -5.683990001678467
    4. 'return' → logprob: -7.183990001678467
    5. ' return' → logprob: -7.683990001678467
    6. 'result' → logprob: -8.808989524841309
    7. 'rank' → logprob: -8.808989524841309
    8. '       ' → logprob: -8.933989524841309
    9. 'ordering' → logprob: -9.558989524841309
    10. ' result' → logprob: -10.183989524841309

Token 430: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6240566083070007e-06
    2. ' ,' → logprob: -13.500001907348633
    3. '‌,' → logprob: -16.500001907348633
    4. '_,' → logprob: -16.750001907348633
    5. 's' → logprob: -17.375001907348633
    6. ',result' → logprob: -17.625001907348633
    7. '‍,' → logprob: -18.500001907348633
    8. ',,' → logprob: -18.750001907348633
    9. ',_' → logprob: -18.875001907348633
    10. ',
' → logprob: -19.000001907348633

Token 431: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.22247996926307678
    2. ' multiple' → logprob: -1.8474799394607544
    3. 'unique' → logprob: -3.597480058670044
    4. 'is' → logprob: -5.722479820251465
    5. ' unique' → logprob: -5.722479820251465
    6. ' is' → logprob: -6.222479820251465
    7. ' has' → logprob: -6.222479820251465
    8. 'amb' → logprob: -6.347479820251465
    9. 'has' → logprob: -6.597479820251465
    10. ' ambiguous' → logprob: -7.847479820251465

Token 432: ' =' (ID: 314)
  Prédit: '_options'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_options' → logprob: -4.4656579120783135e-05
    2. '_' → logprob: -10.125044822692871
    3. '_choices' → logprob: -13.000044822692871
    4. 'options' → logprob: -14.500044822692871
    5. '_opts' → logprob: -15.000044822692871
    6. '_option' → logprob: -15.375044822692871
    7. '_orders' → logprob: -15.750044822692871
    8. ' _' → logprob: -15.750044822692871
    9. ' =' → logprob: -15.875044822692871
    10. 'Options' → logprob: -16.000043869018555

Token 433: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3868776261806488
    2. 'self' → logprob: -1.1368776559829712
    3. '           ' → logprob: -12.13687801361084
    4. '	self' → logprob: -15.38687801361084
    5. '(self' → logprob: -15.38687801361084
    6. '               ' → logprob: -15.76187801361084
    7. ' ' → logprob: -15.76187801361084
    8. '       ' → logprob: -15.88687801361084
    9. '=self' → logprob: -16.761877059936523
    10. '[self' → logprob: -17.136877059936523

Token 434: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -4.3464544432936236e-05
    2. '.' → logprob: -10.250043869018555
    3. 's' → logprob: -11.875043869018555
    4. ' .' → logprob: -14.625043869018555
    5. '.solve' → logprob: -15.250043869018555
    6. '.sol' → logprob: -15.750043869018555
    7. '._' → logprob: -16.250043869018555
    8. 'solver' → logprob: -17.125043869018555
    9. '_.' → logprob: -17.625043869018555
    10. '   ' → logprob: -17.750043869018555

Token 435: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -6.704273118884885e-07
    2. 'olve' → logprob: -14.500000953674316
    3. 'ol' → logprob: -16.625
    4. 'over' → logprob: -16.625
    5. 'solver' → logprob: -17.75
    6. 'erver' → logprob: -17.875
    7. 'oler' → logprob: -18.625
    8. 'olution' → logprob: -19.5
    9. 'o' → logprob: -19.75
    10. 'ov' → logprob: -19.875

Token 436: '.top' (ID: 16801)
  Prédit: '.top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.top' → logprob: -1.8624639324116288e-06
    2. 'top' → logprob: -13.500001907348633
    3. '.' → logprob: -15.125001907348633
    4. ' .' → logprob: -15.875001907348633
    5. '	top' → logprob: -18.125001907348633
    6. '.bottom' → logprob: -18.875001907348633
    7. ' top' → logprob: -19.000001907348633
    8. '_.' → logprob: -19.375001907348633
    9. '.Top' → logprob: -19.500001907348633
    10. '(top' → logprob: -20.000001907348633

Token 437: 'ological' (ID: 8339)
  Prédit: 'ological'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ological' → logprob: -6.749814019713085e-06
    2. 'logical' → logprob: -12.000006675720215
    3. 'ogical' → logprob: -15.125006675720215
    4. 'ologica' → logprob: -15.625006675720215
    5. 'olog' → logprob: -17.12500762939453
    6. 'ographical' → logprob: -17.50000762939453
    7. 'ologically' → logprob: -17.87500762939453
    8. 'o' → logprob: -18.00000762939453
    9. '```' → logprob: -18.50000762939453
    10. 'ology' → logprob: -18.50000762939453

Token 438: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -12.625004768371582
    3. 'sort' → logprob: -14.250004768371582
    4. '_parse' → logprob: -15.125004768371582
    5. '_s' → logprob: -15.750004768371582
    6. '_sorted' → logprob: -15.875004768371582
    7. '_print' → logprob: -16.1250057220459
    8. '_top' → logprob: -16.2500057220459
    9. ' _' → logprob: -16.5000057220459
    10. '_search' → logprob: -17.0000057220459

Token 439: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: 0.0
    2. 'and' → logprob: -18.0
    3. '_or' → logprob: -18.0
    4. '_' → logprob: -18.5
    5. '_AND' → logprob: -20.75
    6. ' _' → logprob: -21.125
    7. '```' → logprob: -21.625
    8. ' and' → logprob: -21.75
    9. ',_' → logprob: -22.0
    10. 'd' → logprob: -22.125

Token 440: '_check' (ID: 15847)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.11304100602865219
    2. '_check' → logprob: -2.2380409240722656
    3. 'heck' → logprob: -8.488040924072266
    4. 'Check' → logprob: -12.363040924072266
    5. ' check' → logprob: -13.488040924072266
    6. 'h' → logprob: -13.488040924072266
    7. 'e' → logprob: -13.988040924072266
    8. 'chec' → logprob: -14.113040924072266
    9. 'che' → logprob: -14.363040924072266
    10. '```' → logprob: -14.738040924072266

Token 441: '_unique' (ID: 51840)
  Prédit: '_unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_unique' → logprob: -1.9504606825648807e-05
    2. '_uni' → logprob: -11.000019073486328
    3. 'unique' → logprob: -13.500019073486328
    4. '_' → logprob: -13.750019073486328
    5. 'uni' → logprob: -16.375019073486328
    6. '_multiple' → logprob: -16.750019073486328
    7. '_un' → logprob: -17.250019073486328
    8. '_top' → logprob: -17.375019073486328
    9. 'uniq' → logprob: -17.875019073486328
    10. '```' → logprob: -18.125019073486328

Token 442: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5759918093681335
    2. '()
' → logprob: -0.8259918093681335
    3. '()
' → logprob: -10.0759916305542
    4. '           ' → logprob: -12.2009916305542
    5. '       ' → logprob: -12.9509916305542
    6. '()

' → logprob: -13.4509916305542
    7. '()\' → logprob: -13.7009916305542
    8. '()`' → logprob: -16.450992584228516
    9. '(
' → logprob: -16.700992584228516
    10. '(' → logprob: -16.950992584228516

Token 443: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002625278721097857
    2. 'return' → logprob: -8.875262260437012
    3. ' return' → logprob: -9.375262260437012
    4. '       ' → logprob: -10.875262260437012
    5. ' if' → logprob: -11.125262260437012
    6. 'if' → logprob: -12.875262260437012
    7. '               ' → logprob: -14.875262260437012
    8. 'except' → logprob: -14.875262260437012
    9. ' except' → logprob: -15.250262260437012
    10. '          ' → logprob: -16.250263214111328

Token 444: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6001538634300232
    2. '           ' → logprob: -1.100153923034668
    3. 'if' → logprob: -2.475153923034668
    4. ' return' → logprob: -3.850153923034668
    5. ' if' → logprob: -4.350153923034668
    6. '       ' → logprob: -9.350153923034668
    7. 'result' → logprob: -11.350153923034668
    8. '   ' → logprob: -11.475153923034668
    9. 'self' → logprob: -12.600153923034668
    10. '{return' → logprob: -13.225153923034668

Token 445: ' order' (ID: 2569)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7352283000946045
    2. 'return' → logprob: -1.2352283000946045
    3. ' if' → logprob: -1.7352283000946045
    4. ' return' → logprob: -3.1102283000946045
    5. '           ' → logprob: -5.360228538513184
    6. 'result' → logprob: -5.860228538513184
    7. ' result' → logprob: -7.235228538513184
    8. '       ' → logprob: -7.735228538513184
    9. 'is' → logprob: -10.360228538513184
    10. 'self' → logprob: -10.485228538513184

Token 446: ' is' (ID: 382)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.4556516110897064
    2. ' =' → logprob: -1.4556516408920288
    3. '_indices' → logprob: -2.9556515216827393
    4. '_rank' → logprob: -3.9556515216827393
    5. '_tokens' → logprob: -4.580651760101318
    6. '_positions' → logprob: -4.705651760101318
    7. '_ids' → logprob: -5.205651760101318
    8. '_order' → logprob: -5.330651760101318
    9. ',' → logprob: -5.330651760101318
    10. '_set' → logprob: -5.580651760101318

Token 447: ' zero' (ID: 12421)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.30553486943244934
    2. 'a' → logprob: -2.555534839630127
    3. ' a' → logprob: -2.805534839630127
    4. ' [' → logprob: -3.305534839630127
    5. 'the' → logprob: -3.430534839630127
    6. ' the' → logprob: -4.055534839630127
    7. 'order' → logprob: -4.055534839630127
    8. ' order' → logprob: -4.180534839630127
    9. '[a' → logprob: -5.680534839630127
    10. ' list' → logprob: -7.180534839630127

Token 448: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.2057565301656723
    2. '_based' → logprob: -1.7057565450668335
    3. 'based' → logprob: -5.580756664276123
    4. ' -' → logprob: -8.455756187438965
    5. '-' → logprob: -8.830756187438965
    6. '_' → logprob: -9.205756187438965
    7. ' based' → logprob: -9.705756187438965
    8. '_b' → logprob: -11.080756187438965
    9. 'Based' → logprob: -11.455756187438965
    10. '_index' → logprob: -12.705756187438965

Token 449: ' indexes' (ID: 50739)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.062325939536094666
    2. '           ' → logprob: -2.937325954437256
    3. '<|end|>' → logprob: -6.187325954437256
    4. ',' → logprob: -6.437325954437256
    5. '       ' → logprob: -6.812325954437256
    6. 'return' → logprob: -7.437325954437256
    7. '            
' → logprob: -7.937325954437256
    8. '
' → logprob: -7.937325954437256
    9. '<|end|>' → logprob: -8.062325477600098
    10. '#' → logprob: -8.062325477600098

Token 450: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19442977011203766
    2. '
' → logprob: -1.9444297552108765
    3. '<|end|>' → logprob: -3.444429874420166
    4. '<|end|>' → logprob: -7.569429874420166
    5. '            
' → logprob: -7.819429874420166
    6. 'return' → logprob: -8.069429397583008
    7. ',' → logprob: -8.444429397583008
    8. ' return' → logprob: -9.194429397583008
    9. '    
' → logprob: -10.569429397583008
    10. '       ' → logprob: -10.569429397583008

Token 451: ' teams' (ID: 11273)
  Prédit: 'teams'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teams' → logprob: -0.08043016493320465
    2. ' teams' → logprob: -3.080430269241333
    3. 'the' → logprob: -3.580430269241333
    4. ' the' → logprob: -6.080430030822754
    5. 'rank' → logprob: -7.705430030822754
    6. 'self' → logprob: -7.830430030822754
    7. 'team' → logprob: -8.955430030822754
    8. ' ranked' → logprob: -9.830430030822754
    9. 'ranking' → logprob: -10.080430030822754
    10. '```' → logprob: -10.205430030822754

Token 452: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03326479345560074
    2. '
' → logprob: -3.5332648754119873
    3. ',' → logprob: -6.158264636993408
    4. 'return' → logprob: -7.033264636993408
    5. ' return' → logprob: -8.783265113830566
    6. '<|end|>' → logprob: -9.033265113830566
    7. '            
' → logprob: -9.283265113830566
    8. '<|end|>' → logprob: -10.283265113830566
    9. ',
' → logprob: -10.533265113830566
    10. '#' → logprob: -10.533265113830566

Token 453: ' highest' (ID: 11639)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.4888651669025421
    2. 'best' → logprob: -1.2388651371002197
    3. ' winner' → logprob: -3.2388651371002197
    4. 'highest' → logprob: -3.6138651371002197
    5. ' best' → logprob: -4.613865375518799
    6. 'strong' → logprob: -4.863865375518799
    7. 'most' → logprob: -5.363865375518799
    8. ' highest' → logprob: -5.988865375518799
    9. ' strongest' → logprob: -6.238865375518799
    10. 'the' → logprob: -6.863865375518799

Token 454: ' rank' (ID: 10302)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.35490983724594116
    2. 'to' → logprob: -1.354909896850586
    3. 'rank' → logprob: -3.229909896850586
    4. ' rank' → logprob: -6.854909896850586
    5. 'priority' → logprob: -9.479909896850586
    6. 'ranking' → logprob: -10.854909896850586
    7. '(rank' → logprob: -10.854909896850586
    8. ' ranked' → logprob: -11.104909896850586
    9. ' priority' → logprob: -11.604909896850586
    10. '_rank' → logprob: -11.854909896850586

Token 455: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5239794850349426
    2. ' to' → logprob: -1.3989794254302979
    3. '           ' → logprob: -2.398979425430298
    4. ',' → logprob: -3.023979425430298
    5. '<|end|>' → logprob: -5.148979663848877
    6. ' (' → logprob: -5.898979663848877
    7. 'return' → logprob: -6.023979663848877
    8. ' return' → logprob: -6.148979663848877
    9. '   ' → logprob: -6.773979663848877
    10. '        ' → logprob: -7.023979663848877

Token 456: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23753666877746582
    2. 'best' → logprob: -1.8625366687774658
    3. ')' → logprob: -4.237536430358887
    4. 'winner' → logprob: -4.237536430358887
    5. 'highest' → logprob: -5.112536430358887
    6. 'first' → logprob: -5.112536430358887
    7. 'top' → logprob: -5.612536430358887
    8. ' best' → logprob: -6.112536430358887
    9. 'rank' → logprob: -6.237536430358887
    10. 'most' → logprob: -6.612536430358887

Token 457: 'st' (ID: 302)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02970581315457821
    2. ' to' → logprob: -4.029706001281738
    3. 'st' → logprob: -4.779706001281738
    4. ' )' → logprob: -6.279706001281738
    5. 'to' → logprob: -7.154706001281738
    6. ',' → logprob: -8.654706001281738
    7. ' (' → logprob: -10.279706001281738
    8. '[' → logprob: -10.529706001281738
    9. ' ' → logprob: -10.529706001281738
    10. '0' → logprob: -10.779706001281738

Token 458: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08293179422616959
    2. ' )' → logprob: -2.5829317569732666
    3. ' to' → logprob: -5.582931995391846
    4. ' place' → logprob: -9.207931518554688
    5. ' ' → logprob: -9.707931518554688
    6. 'to' → logprob: -9.957931518554688
    7. ' ' → logprob: -11.082931518554688
    8. ' position' → logprob: -11.707931518554688
    9. ' rank' → logprob: -12.207931518554688
    10. 'rank' → logprob: -12.207931518554688

Token 459: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013370092958211899
    2. '
' → logprob: -5.013370037078857
    3. 'return' → logprob: -5.888370037078857
    4. ' to' → logprob: -6.513370037078857
    5. ',' → logprob: -6.888370037078857
    6. ' return' → logprob: -7.388370037078857
    7. '<|end|>' → logprob: -8.263370513916016
    8. '            
' → logprob: -9.138370513916016
    9. ' if' → logprob: -9.763370513916016
    10. '<|end|>' → logprob: -10.013370513916016

Token 460: ' lowest' (ID: 23120)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.011396395973861217
    2. ' lowest' → logprob: -4.511396408081055
    3. 'last' → logprob: -8.011396408081055
    4. ' last' → logprob: -11.011396408081055
    5. 'the' → logprob: -16.511396408081055
    6. ' the' → logprob: -16.511396408081055
    7. 'lower' → logprob: -16.761396408081055
    8. 'Lowest' → logprob: -16.886396408081055
    9. '   ' → logprob: -17.261396408081055
    10. 'next' → logprob: -17.761396408081055

Token 461: ' rank' (ID: 10302)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13833008706569672
    2. '
' → logprob: -2.1383299827575684
    3. '<|end|>' → logprob: -5.513329982757568
    4. ' if' → logprob: -5.763329982757568
    5. ',' → logprob: -6.513329982757568
    6. '            
' → logprob: -6.888329982757568
    7. 'return' → logprob: -7.763329982757568
    8. ' return' → logprob: -7.888329982757568
    9. '<|end|>' → logprob: -7.888329982757568
    10. '       ' → logprob: -9.138330459594727

Token 462: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011709021404385567
    2. '
' → logprob: -4.511709213256836
    3. '<|end|>' → logprob: -7.886709213256836
    4. '            
' → logprob: -9.261709213256836
    5. ',' → logprob: -9.761709213256836
    6. '<|end|>' → logprob: -10.011709213256836
    7. 'return' → logprob: -10.136709213256836
    8. ' return' → logprob: -11.011709213256836
    9. ' if' → logprob: -11.886709213256836
    10. '       ' → logprob: -12.386709213256836

Token 463: 'nth' (ID: 121408)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.4205225706100464
    2. ' last' → logprob: -1.4205225706100464
    3. 'self' → logprob: -2.420522689819336
    4. 'n' → logprob: -4.795522689819336
    5. ' self' → logprob: -6.420522689819336
    6. ')' → logprob: -6.670522689819336
    7. '1' → logprob: -7.545522689819336
    8. '-last' → logprob: -7.795522689819336
    9. 'nth' → logprob: -8.045522689819336
    10. ' n' → logprob: -9.045522689819336

Token 464: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09458260238170624
    2. ')
' → logprob: -2.4695825576782227
    3. ' )' → logprob: -5.719582557678223
    4. ' )
' → logprob: -6.344582557678223
    5. '):
' → logprob: -9.094582557678223
    6. ' team' → logprob: -9.344582557678223
    7. '       ' → logprob: -9.469582557678223
    8. ').' → logprob: -9.594582557678223
    9. ' position' → logprob: -10.469582557678223
    10. '),' → logprob: -10.594582557678223

Token 465: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1278584897518158
    2. '
' → logprob: -2.1278584003448486
    3. '<|end|>' → logprob: -7.627858638763428
    4. '            
' → logprob: -8.50285816192627
    5. 'return' → logprob: -9.75285816192627
    6. ',' → logprob: -10.00285816192627
    7. ' return' → logprob: -10.50285816192627
    8. '       ' → logprob: -10.87785816192627
    9. '<|end|>' → logprob: -10.87785816192627
    10. '
' → logprob: -11.50285816192627

Token 466: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5895706415176392
    2. 'return' (adapté à ' return') → logprob: -0.8395706415176392
    3. '       ' → logprob: -5.71457052230835
    4. ' if' → logprob: -5.83957052230835
    5. '           ' → logprob: -6.21457052230835
    6. 'rank' → logprob: -6.21457052230835
    7. ' return' → logprob: -6.46457052230835
    8. 'result' → logprob: -6.96457052230835
    9. 'self' → logprob: -7.83957052230835
    10. 'ranking' → logprob: -8.589570999145508

Token 467: ' order' (ID: 2569)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08038991689682007
    2. 'order' → logprob: -2.955389976501465
    3. '([' → logprob: -4.330389976501465
    4. ' [' → logprob: -5.080389976501465
    5. '(order' → logprob: -5.455389976501465
    6. ' order' → logprob: -8.080389976501465
    7. '[self' → logprob: -8.455389976501465
    8. '[(' → logprob: -8.580389976501465
    9. '[list' → logprob: -8.830389976501465
    10. ' ([' → logprob: -9.705389976501465

Token 468: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8193366486229934e-05
    2. ',m' → logprob: -12.125018119812012
    3. ' ,' → logprob: -12.125018119812012
    4. ',None' → logprob: -12.625018119812012
    5. 'if' → logprob: -13.625018119812012
    6. ' if' → logprob: -14.625018119812012
    7. '<|end|>' → logprob: -15.250018119812012
    8. ',n' → logprob: -15.500018119812012
    9. '[],' → logprob: -15.875018119812012
    10. ',self' → logprob: -16.000019073486328

Token 469: ' multiple' (ID: 7598)
  Prédit: ' multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.10545755177736282
    2. 'multiple' → logprob: -2.3554575443267822
    3. ' not' → logprob: -5.605457782745361
    4. 'not' → logprob: -6.480457782745361
    5. 'multip' → logprob: -11.230457305908203
    6. ' ' → logprob: -12.230457305908203
    7. ' ' → logprob: -13.730457305908203
    8. 'mult' → logprob: -13.855457305908203
    9. '   ' → logprob: -14.105457305908203
    10. ' multiples' → logprob: -14.480457305908203

Token 470: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0632796585559845
    2. '
' → logprob: -3.188279628753662
    3. 'except' → logprob: -4.063279628753662
    4. ' except' → logprob: -6.188279628753662
    5. ',' → logprob: -8.06328010559082
    6. '	except' → logprob: -8.31328010559082
    7. '<|end|>' → logprob: -8.56328010559082
    8. '        
' → logprob: -10.43828010559082
    9. '
' → logprob: -11.18828010559082
    10. ',
' → logprob: -11.93828010559082

Token 471: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07665170729160309
    2. 'except' → logprob: -2.8266518115997314
    3. '
' → logprob: -4.576651573181152
    4. ' except' → logprob: -6.326651573181152
    5. '<|end|>' → logprob: -6.326651573181152
    6. '	except' → logprob: -7.826651573181152
    7. '   ' → logprob: -9.826651573181152
    8. '.' → logprob: -10.201651573181152
    9. '	' → logprob: -10.576651573181152
    10. '        
' → logprob: -10.701651573181152

Token 472: ' except' (ID: 6384)
  Prédit: 'except'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' (adapté à ' except') → logprob: -0.655022919178009
    2. ' except' → logprob: -0.905022919178009
    3. '       ' → logprob: -3.1550228595733643
    4. '
' → logprob: -3.6550228595733643
    5. '	except' → logprob: -5.030023097991943
    6. '   ' → logprob: -7.030023097991943
    7. '    
' → logprob: -10.155022621154785
    8. '        
' → logprob: -10.655022621154785
    9. '    ' → logprob: -10.780022621154785
    10. ',' → logprob: -11.405022621154785

Token 473: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -9.460291767027229e-05
    2. 'Value' → logprob: -9.375094413757324
    3. '(Value' → logprob: -12.750094413757324
    4. '	Value' → logprob: -13.000094413757324
    5. ' Exception' → logprob: -13.375094413757324
    6. ' ' → logprob: -13.500094413757324
    7. ' value' → logprob: -14.500094413757324
    8. '_Value' → logprob: -14.750094413757324
    9. '<Value' → logprob: -14.750094413757324
    10. '_value' → logprob: -15.750094413757324

Token 474: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0005530327325686812
    2. 'rror' → logprob: -7.500553131103516
    3. 'r' → logprob: -16.750553131103516
    4. ' Error' → logprob: -17.625553131103516
    5. 'LError' → logprob: -17.750553131103516
    6. 'Value' → logprob: -18.625553131103516
    7. 'error' → logprob: -19.125553131103516
    8. 'Er' → logprob: -19.250553131103516
    9. 'ror' → logprob: -19.750553131103516
    10. 'SError' → logprob: -19.875553131103516

Token 475: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5949572920799255
    2. ' as' → logprob: -0.8449572920799255
    3. 'as' → logprob: -4.34495735168457
    4. '():' → logprob: -5.71995735168457
    5. '()' → logprob: -6.71995735168457
    6. '(' → logprob: -6.84495735168457
    7. ':
' → logprob: -8.59495735168457
    8. '<|end|>' → logprob: -10.46995735168457
    9. '("' → logprob: -10.59495735168457
    10. ',' → logprob: -10.96995735168457

Token 476: '           ' (ID: 352)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.19150632619857788
    2. '           ' → logprob: -1.8165063858032227
    3. ':' → logprob: -4.816506385803223
    4. ' None' → logprob: -5.941506385803223
    5. ':
' → logprob: -8.066506385803223
    6. '(None' → logprob: -8.566506385803223
    7. '            ' → logprob: -9.191506385803223
    8. 'None' → logprob: -9.191506385803223
    9. ' ' → logprob: -9.816506385803223
    10. 'as' → logprob: -9.816506385803223

Token 477: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10320883244276047
    2. ' return' → logprob: -2.3532087802886963
    3. '           ' → logprob: -5.853209018707275
    4. ' None' → logprob: -9.603208541870117
    5. 'None' → logprob: -9.853208541870117
    6. 'raise' → logprob: -12.603208541870117
    7. '       ' → logprob: -13.228208541870117
    8. '
' → logprob: -14.478208541870117
    9. '	return' → logprob: -15.603208541870117
    10. '            
' → logprob: -15.728208541870117

Token 478: ' No' (ID: 3004)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20477746427059174
    2. ' return' → logprob: -1.704777479171753
    3. '           ' → logprob: -5.704777240753174
    4. 'raise' → logprob: -11.329777717590332
    5. '       ' → logprob: -11.829777717590332
    6. '#' → logprob: -12.704777717590332
    7. '   ' → logprob: -12.829777717590332
    8. ' raise' → logprob: -13.704777717590332
    9. '
' → logprob: -14.329777717590332
    10. ' #' → logprob: -14.454777717590332

Token 479: ' valid' (ID: 4529)
  Prédit: ' valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.0632295235991478
    2. ' order' → logprob: -4.313229560852051
    3. ',' → logprob: -4.563229560852051
    4. 'valid' → logprob: -4.813229560852051
    5. ' rank' → logprob: -5.188229560852051
    6. ' None' → logprob: -5.438229560852051
    7. ' result' → logprob: -5.813229560852051
    8. ' return' → logprob: -6.063229560852051
    9. '_valid' → logprob: -6.063229560852051
    10. '<|end|>' → logprob: -6.188229560852051

Token 480: ' order' (ID: 2569)
  Prédit: ' ranking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ranking' → logprob: -0.06851895153522491
    2. 'ranking' → logprob: -2.818518877029419
    3. 'rank' → logprob: -5.443519115447998
    4. ' rank' → logprob: -6.443519115447998
    5. ' order' → logprob: -8.56851863861084
    6. ' rankings' → logprob: -8.81851863861084
    7. ' solution' → logprob: -9.94351863861084
    8. ',' → logprob: -10.19351863861084
    9. ' ordering' → logprob: -10.44351863861084
    10. ' return' → logprob: -10.44351863861084

Token 481: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03810541331768036
    2. ' return' → logprob: -3.7881054878234863
    3. 'return' → logprob: -4.913105487823486
    4. ',' → logprob: -5.413105487823486
    5. '       ' → logprob: -6.163105487823486
    6. ':' → logprob: -7.663105487823486
    7. ' is' → logprob: -9.788105010986328
    8. '(None' → logprob: -9.913105010986328
    9. ' None' → logprob: -10.038105010986328
    10. ':return' → logprob: -10.163105010986328

Token 482: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10882919281721115
    2. '       ' → logprob: -2.4838292598724365
    3. ' return' → logprob: -4.358829021453857
    4. 'return' → logprob: -5.358829021453857
    5. ',' → logprob: -6.733829021453857
    6. ':' → logprob: -7.483829021453857
    7. ':
' → logprob: -9.358829498291016
    8. ' is' → logprob: -10.108829498291016
    9. ':return' → logprob: -10.108829498291016
    10. ' found' → logprob: -10.233829498291016

Token 483: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014320284128189087
    2. ' return' → logprob: -4.264320373535156
    3. '           ' → logprob: -8.764320373535156
    4. 'None' → logprob: -14.764320373535156
    5. ' None' → logprob: -16.389320373535156
    6. '       ' → logprob: -17.264320373535156
    7. 'raise' → logprob: -18.014320373535156
    8. '
' → logprob: -18.139320373535156
    9. 'eturn' → logprob: -18.639320373535156
    10. '	return' → logprob: -18.764320373535156

Token 484: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.47604724764823914
    2. ' None' → logprob: -0.9760472774505615
    3. '[],' → logprob: -6.976047039031982
    4. '[]' → logprob: -7.726047039031982
    5. ' [],' → logprob: -7.851047039031982
    6. ' []' → logprob: -8.85104751586914
    7. '(None' → logprob: -10.60104751586914
    8. ',None' → logprob: -10.72604751586914
    9. '   ' → logprob: -11.85104751586914
    10. ',' → logprob: -12.72604751586914

Token 485: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043060507625341415
    2. ',None' → logprob: -3.168060541152954
    3. 'None' → logprob: -10.168060302734375
    4. '<|end|>' → logprob: -11.293060302734375
    5. ' ,' → logprob: -12.543060302734375
    6. ',n' → logprob: -13.293060302734375
    7. ',nil' → logprob: -13.293060302734375
    8. ',
' → logprob: -14.043060302734375
    9. '(None' → logprob: -14.668060302734375
    10. ',false' → logprob: -14.793060302734375

Token 486: ' None' (ID: 4662)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01900309883058071
    2. 'False' → logprob: -4.019002914428711
    3. ' True' → logprob: -7.144002914428711
    4. 'None' → logprob: -9.769002914428711
    5. ' False' → logprob: -12.019002914428711
    6. ' None' → logprob: -16.89400291442871
    7. '=True' → logprob: -17.76900291442871
    8. 'Tr' → logprob: -17.89400291442871
    9. '   ' → logprob: -18.01900291442871
    10. '[]' → logprob: -18.01900291442871

Token 487: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 488: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0001239196863025427
    2. 'import' → logprob: -9.875123977661133
    3. '#' → logprob: -10.250123977661133
    4. 'def' → logprob: -11.375123977661133
    5. 'from' → logprob: -11.375123977661133
    6. '<|end|>' → logprob: -11.500123977661133
    7. '```' → logprob: -12.500123977661133
    8. ' class' → logprob: -16.125123977661133
    9. '@pytest' → logprob: -17.000123977661133
    10. '<|end|>' → logprob: -17.000123977661133

Token 489: ' Ranking' (ID: 91044)
  Prédit: ' Team'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Team' → logprob: -0.7531635165214539
    2. ' Concrete' → logprob: -2.5031635761260986
    3. ' Exact' → logprob: -2.7531635761260986
    4. ' Complete' → logprob: -3.1281635761260986
    5. ' Partial' → logprob: -3.6281635761260986
    6. ' Ranking' → logprob: -3.6281635761260986
    7. ' Final' → logprob: -3.7531635761260986
    8. ' Simple' → logprob: -3.8781635761260986
    9. ' Detailed' → logprob: -3.8781635761260986
    10. 'Team' → logprob: -3.8781635761260986

Token 490: 'IO' (ID: 3982)
  Prédit: 'Model'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Model' → logprob: -0.02234124206006527
    2. 'Solver' → logprob: -4.022341251373291
    3. 'Predict' → logprob: -6.647341251373291
    4. 'System' → logprob: -6.772341251373291
    5. ':' → logprob: -7.897341251373291
    6. 'Estimator' → logprob: -8.897340774536133
    7. 'Problem' → logprob: -9.147340774536133
    8. 'Result' → logprob: -9.397340774536133
    9. 'Solution' → logprob: -9.522340774536133
    10. 'Prediction' → logprob: -9.522340774536133

Token 491: 'Handler' (ID: 4139)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014726031804457307
    2. ':
' → logprob: -6.626472473144531
    3. 'Handler' → logprob: -9.126472473144531
    4. '():' → logprob: -11.751472473144531
    5. 'Interface' → logprob: -12.001472473144531
    6. 'Helper' → logprob: -12.001472473144531
    7. 'Processor' → logprob: -13.251472473144531
    8. 'Parser' → logprob: -13.376472473144531
    9. '(' → logprob: -13.501472473144531
    10. ' :' → logprob: -13.751472473144531

Token 492: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023607931507285684
    2. ':
' → logprob: -8.375236511230469
    3. ':def' → logprob: -12.750236511230469
    4. ' :' → logprob: -13.750236511230469
    5. ':

' → logprob: -15.000236511230469
    6. '():' → logprob: -15.375236511230469
    7. ':**' → logprob: -15.875236511230469
    8. '):' → logprob: -16.00023651123047
    9. '>:' → logprob: -16.00023651123047
    10. '<|end|>' → logprob: -16.37523651123047

Token 493: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036461607087403536
    2. ' def' → logprob: -5.628646373748779
    3. 'def' → logprob: -10.378645896911621
    4. ' class' → logprob: -11.503645896911621
    5. 'class' → logprob: -12.753645896911621
    6. '    ' → logprob: -14.503645896911621
    7. '   ' → logprob: -15.128645896911621
    8. '```' → logprob: -15.253645896911621
    9. 'import' → logprob: -15.628645896911621
    10. '	def' → logprob: -16.003646850585938

Token 494: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.31634166836738586
    2. ' def' → logprob: -1.3163416385650635
    3. '   ' → logprob: -5.816341876983643
    4. '@' → logprob: -9.441341400146484
    5. ' @' → logprob: -11.566341400146484
    6. 'class' → logprob: -11.816341400146484
    7. 'import' → logprob: -15.316341400146484
    8. '	def' → logprob: -15.941341400146484
    9. ' class' → logprob: -16.691341400146484
    10. '```' → logprob: -18.066341400146484

Token 495: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06776817888021469
    2. ' def' → logprob: -3.192768096923828
    3. '__' → logprob: -4.317768096923828
    4. 'def' → logprob: -5.317768096923828
    5. ' _' → logprob: -5.942768096923828
    6. '_' → logprob: -6.317768096923828
    7. '_init' → logprob: -7.317768096923828
    8. ' init' → logprob: -7.567768096923828
    9. 'init' → logprob: -8.942768096923828
    10. ' ' → logprob: -9.442768096923828

Token 496: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.3856492842023727e-06
    2. 'def' → logprob: -14.000000953674316
    3. 'new' → logprob: -15.125000953674316
    4. 'int' → logprob: -16.250001907348633
    5. 'ini' → logprob: -16.875001907348633
    6. ' init' → logprob: -17.250001907348633
    7. 'in' → logprob: -17.625001907348633
    8. 'class' → logprob: -18.250001907348633
    9. 'name' → logprob: -18.375001907348633
    10. 'next' → logprob: -18.500001907348633

Token 497: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0340140238404274
    2. '__(' → logprob: -3.4090139865875244
    3. '(' → logprob: -8.409013748168945
    4. ' (' → logprob: -9.034013748168945
    5. '__(
' → logprob: -12.034013748168945
    6. ')(' → logprob: -12.534013748168945
    7. 'self' → logprob: -12.659013748168945
    8. '<>(' → logprob: -13.159013748168945
    9. '   ' → logprob: -13.159013748168945
    10. '_(' → logprob: -13.534013748168945

Token 498: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.8828707804204896e-05
    2. ' self' → logprob: -10.500048637390137
    3. ')' → logprob: -11.125048637390137
    4. '):
' → logprob: -12.625048637390137
    5. '
' → logprob: -13.000048637390137
    6. '   ' → logprob: -14.375048637390137
    7. 'n' → logprob: -16.000049591064453
    8. '       ' → logprob: -16.625049591064453
    9. ',' → logprob: -17.000049591064453
    10. ')
' → logprob: -17.000049591064453

Token 499: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009717292850837111
    2. 'self' → logprob: -7.000971794128418
    3. ' ,' → logprob: -10.625971794128418
    4. ')' → logprob: -11.000971794128418
    5. '):' → logprob: -11.625971794128418
    6. ' self' → logprob: -12.375971794128418
    7. ',self' → logprob: -13.125971794128418
    8. '   ' → logprob: -13.250971794128418
    9. '(self' → logprob: -14.000971794128418
    10. '):
' → logprob: -14.250971794128418

Token 500: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005969968624413013
    2. '       ' → logprob: -7.50059700012207
    3. ' self' → logprob: -10.50059700012207
    4. 'n' → logprob: -11.87559700012207
    5. '   ' → logprob: -11.87559700012207
    6. '
' → logprob: -13.25059700012207
    7. '	self' → logprob: -15.25059700012207
    8. '(self' → logprob: -15.87559700012207
    9. '```' → logprob: -16.25059700012207
    10. 's' → logprob: -16.50059700012207

Token 501: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8838978409767151
    2. 'pass' → logprob: -1.1338977813720703
    3. 'self' (adapté à ' self') → logprob: -1.8838977813720703
    4. ' pass' → logprob: -2.2588977813720703
    5. ' self' → logprob: -4.88389778137207
    6. '   ' → logprob: -7.00889778137207
    7. '	pass' → logprob: -9.50889778137207
    8. 'def' → logprob: -11.00889778137207
    9. '           ' → logprob: -12.13389778137207
    10. 'super' → logprob: -13.00889778137207

Token 502: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9385114312171936
    2. '.n' → logprob: -1.5635113716125488
    3. '.results' → logprob: -1.6885113716125488
    4. '.matches' → logprob: -2.188511371612549
    5. '.input' → logprob: -3.063511371612549
    6. '.buffer' → logprob: -4.188511371612549
    7. '.data' → logprob: -4.688511371612549
    8. '.inputs' → logprob: -4.938511371612549
    9. '.output' → logprob: -5.563511371612549
    10. '._' → logprob: -5.563511371612549

Token 503: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38957539200782776
    2. '=' → logprob: -1.1395753622055054
    3. '=None' → logprob: -7.014575481414795
    4. '_' → logprob: -7.014575481414795
    5. '<|end|>' → logprob: -7.639575481414795
    6. ',' → logprob: -9.139575004577637
    7. '   ' → logprob: -9.514575004577637
    8. ' ' → logprob: -9.639575004577637
    9. 'teams' → logprob: -9.889575004577637
    10. '  ' → logprob: -10.264575004577637

Token 504: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000286364956991747
    2. 'None' → logprob: -8.500286102294922
    3. ' ' → logprob: -9.500286102294922
    4. ' None' → logprob: -12.000286102294922
    5. 'int' → logprob: -13.250286102294922
    6. '   ' → logprob: -16.875286102294922
    7. '  ' → logprob: -18.125286102294922
    8. '[]' → logprob: -18.750286102294922
    9. '-' → logprob: -19.000286102294922
    10. 'self' → logprob: -19.250286102294922

Token 505: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00987295713275671
    2. 'None' → logprob: -4.634872913360596
    3. 'int' → logprob: -9.134873390197754
    4. ' None' → logprob: -11.884873390197754
    5. ' ' → logprob: -13.259873390197754
    6. 'self' → logprob: -15.509873390197754
    7. '-' → logprob: -17.259872436523438
    8. '[]' → logprob: -17.509872436523438
    9. '_None' → logprob: -17.509872436523438
    10. '   ' → logprob: -17.759872436523438

Token 506: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20876963436603546
    2. '       ' → logprob: -1.833769679069519
    3. '   ' → logprob: -3.7087695598602295
    4. '<|end|>' → logprob: -5.708769798278809
    5. 'def' → logprob: -7.833769798278809
    6. 'self' → logprob: -9.083769798278809
    7. '    
' → logprob: -9.333769798278809
    8. ' self' → logprob: -10.458769798278809
    9. '	self' → logprob: -10.458769798278809
    10. '<|end|>' → logprob: -10.583769798278809

Token 507: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39664071798324585
    2. 'self' → logprob: -1.1466407775878906
    3. '   ' → logprob: -5.396640777587891
    4. 'def' → logprob: -5.521640777587891
    5. ' self' → logprob: -7.146640777587891
    6. '	self' → logprob: -8.27164077758789
    7. '
' → logprob: -9.27164077758789
    8. '<|end|>' → logprob: -10.52164077758789
    9. ' ' → logprob: -11.89664077758789
    10. '	' → logprob: -12.02164077758789

Token 508: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -3.4881879400927573e-05
    2. '       ' → logprob: -11.000035285949707
    3. ' self' → logprob: -11.250035285949707
    4. 'def' → logprob: -12.625035285949707
    5. '   ' → logprob: -13.750035285949707
    6. 's' → logprob: -14.500035285949707
    7. '
' → logprob: -16.62503433227539
    8. '    ' → logprob: -17.00003433227539
    9. '	self' → logprob: -17.00003433227539
    10. ' ' → logprob: -17.25003433227539

Token 509: '.m' (ID: 1021)
  Prédit: '.matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.matches' → logprob: -0.002224960131570697
    2. '.m' → logprob: -6.627224922180176
    3. 'matches' → logprob: -7.627224922180176
    4. '.match' → logprob: -8.252224922180176
    5. '.results' → logprob: -9.252224922180176
    6. '_matches' → logprob: -10.752224922180176
    7. '.' → logprob: -11.127224922180176
    8. ' .' → logprob: -12.877224922180176
    9. '.mat' → logprob: -13.127224922180176
    10. ' matches' → logprob: -13.127224922180176

Token 510: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1797540932893753
    2. ' =' → logprob: -1.8047541379928589
    3. '=None' → logprob: -12.929754257202148
    4. '<|end|>' → logprob: -13.304754257202148
    5. '  ' → logprob: -13.804754257202148
    6. ',' → logprob: -13.929754257202148
    7. '=int' → logprob: -14.179754257202148
    8. '=[]' → logprob: -14.554754257202148
    9. ' ' → logprob: -14.679754257202148
    10. '=
' → logprob: -15.179754257202148

Token 511: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009122979827225208
    2. ' ' → logprob: -7.000912189483643
    3. '<|end|>' → logprob: -14.1259126663208
    4. 'None' → logprob: -17.250911712646484
    5. ' None' → logprob: -18.625911712646484
    6. '<|end|>' → logprob: -19.000911712646484
    7. '۰' → logprob: -19.875911712646484
    8. '  ' → logprob: -20.125911712646484
    9. '=' → logprob: -20.125911712646484
    10. ' ' → logprob: -20.250911712646484

Token 512: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. 'None' → logprob: -15.750004768371582
    4. '[]' → logprob: -19.0000057220459
    5. '<|end|>' → logprob: -19.2500057220459
    6. 'int' → logprob: -19.5000057220459
    7. '۰' → logprob: -20.1250057220459
    8. ' None' → logprob: -20.2500057220459
    9. '  ' → logprob: -21.1875057220459
    10. '-' → logprob: -21.1875057220459

Token 513: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07281789183616638
    2. '   ' → logprob: -2.947817802429199
    3. 'def' → logprob: -4.947817802429199
    4. '
' → logprob: -5.322817802429199
    5. 'self' → logprob: -5.822817802429199
    6. '    
' → logprob: -6.197817802429199
    7. ' self' → logprob: -8.0728178024292
    8. '<|end|>' → logprob: -8.5728178024292
    9. '	self' → logprob: -9.3228178024292
    10. ',' → logprob: -9.8228178024292

Token 514: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6493156552314758
    2. '       ' → logprob: -0.7743156552314758
    3. 'def' → logprob: -4.64931583404541
    4. '
' → logprob: -5.64931583404541
    5. 'self' → logprob: -6.39931583404541
    6. '    
' → logprob: -7.02431583404541
    7. ' def' → logprob: -8.14931583404541
    8. '<|end|>' → logprob: -8.52431583404541
    9. ' self' → logprob: -8.89931583404541
    10. '	def' → logprob: -9.02431583404541

Token 515: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00012403888104017824
    2. 'def' → logprob: -9.875123977661133
    3. '       ' → logprob: -10.000123977661133
    4. ' self' → logprob: -10.750123977661133
    5. '
' → logprob: -13.250123977661133
    6. '   ' → logprob: -13.750123977661133
    7. '<|end|>' → logprob: -13.750123977661133
    8. '	self' → logprob: -14.375123977661133
    9. 's' → logprob: -15.000123977661133
    10. '@property' → logprob: -16.000123977661133

Token 516: '.matches' (ID: 64560)
  Prédit: '.matches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.matches' → logprob: -0.06351987272500992
    2. '.results' → logprob: -3.0635199546813965
    3. '.match' → logprob: -4.3135199546813965
    4. 'matches' → logprob: -7.8135199546813965
    5. '.r' → logprob: -8.063519477844238
    6. '.' → logprob: -8.313519477844238
    7. 'results' → logprob: -8.563519477844238
    8. '.rank' → logprob: -9.188519477844238
    9. '.m' → logprob: -10.813519477844238
    10. ' .' → logprob: -10.813519477844238

Token 517: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31345272064208984
    2. '=' → logprob: -1.3134527206420898
    3. '=[]' → logprob: -9.18845272064209
    4. ':' → logprob: -9.43845272064209
    5. ' ' → logprob: -11.93845272064209
    6. '  ' → logprob: -14.43845272064209
    7. '   ' → logprob: -14.68845272064209
    8. ' :' → logprob: -14.81345272064209
    9. '[]' → logprob: -15.56345272064209
    10. '=None' → logprob: -15.56345272064209

Token 518: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0001029471677611582
    2. ' []' → logprob: -9.250102996826172
    3. '[]
' → logprob: -12.125102996826172
    4. '[]

' → logprob: -13.875102996826172
    5. '[' → logprob: -15.500102996826172
    6. '[]}' → logprob: -15.875102996826172
    7. '[])' → logprob: -16.875102996826172
    8. '[]"' → logprob: -17.750102996826172
    9. '[]>' → logprob: -18.125102996826172
    10. '=[]' → logprob: -18.500102996826172

Token 519: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018783530220389366
    2. '
' → logprob: -4.2687835693359375
    3. '    
' → logprob: -6.0187835693359375
    4. 'def' → logprob: -6.1437835693359375
    5. ' def' → logprob: -11.018783569335938
    6. '        
' → logprob: -11.643783569335938
    7. '<|end|>' → logprob: -13.393783569335938
    8. '  
' → logprob: -14.393783569335938
    9. '

' → logprob: -14.393783569335938
    10. '```' → logprob: -14.518783569335938

Token 520: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5770260691642761
    2. '   ' → logprob: -0.8270260691642761
    3. ' def' → logprob: -6.827025890350342
    4. '
' → logprob: -13.8270263671875
    5. '	def' → logprob: -13.9520263671875
    6. '    
' → logprob: -16.5770263671875
    7. '```' → logprob: -17.4520263671875
    8. ' ' → logprob: -17.8270263671875
    9. '

' → logprob: -18.9520263671875
    10. '  ' → logprob: -18.9520263671875

Token 521: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.9361264946837764e-07
    2. ' def' → logprob: -16.25
    3. '   ' → logprob: -18.0
    4. '	def' → logprob: -23.75
    5. '
' → logprob: -24.0
    6. 'class' → logprob: -26.0
    7. '    
' → logprob: -26.0
    8. '@' → logprob: -26.25
    9. '```' → logprob: -26.25
    10. 'Def' → logprob: -26.75

Token 522: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.018517106771469116
    2. ' read' → logprob: -4.018517017364502
    3. 'load' → logprob: -8.51851749420166
    4. 'parse' → logprob: -9.01851749420166
    5. 'input' → logprob: -10.76851749420166
    6. 'def' → logprob: -11.76851749420166
    7. ' load' → logprob: -11.89351749420166
    8. ' input' → logprob: -12.14351749420166
    9. ' parse' → logprob: -13.14351749420166
    10. '_read' → logprob: -13.89351749420166

Token 523: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.18611568212509155
    2. '(self' → logprob: -2.3111157417297363
    3. '_matches' → logprob: -3.1861157417297363
    4. '_line' → logprob: -4.561115741729736
    5. '_data' → logprob: -4.561115741729736
    6. '_match' → logprob: -5.686115741729736
    7. '_' → logprob: -7.061115741729736
    8. '_lines' → logprob: -7.061115741729736
    9. '_inputs' → logprob: -7.061115741729736
    10. '(' → logprob: -7.686115741729736

Token 524: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016909420082811266
    2. '(' → logprob: -8.750168800354004
    3. 'self' → logprob: -11.625168800354004
    4. ' (' → logprob: -13.500168800354004
    5. '()' → logprob: -15.875168800354004
    6. '(
' → logprob: -16.75016975402832
    7. 'from' → logprob: -17.00016975402832
    8. '   ' → logprob: -17.37516975402832
    9. ' self' → logprob: -17.87516975402832
    10. '	self' → logprob: -18.25016975402832

Token 525: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3376891613006592
    2. ',' → logprob: -1.7126891613006592
    3. '):
' → logprob: -2.337689161300659
    4. 'self' → logprob: -4.712689399719238
    5. ',self' → logprob: -8.712689399719238
    6. '):
' → logprob: -8.962689399719238
    7. ' ,' → logprob: -9.337689399719238
    8. '(self' → logprob: -9.337689399719238
    9. ' ):' → logprob: -9.837689399719238
    10. ' self' → logprob: -10.462689399719238

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008105786982923746
    2. 'import' → logprob: -7.250810623168945
    3. 'self' → logprob: -10.875810623168945
    4. 'n' → logprob: -11.250810623168945
    5. ' lines' → logprob: -11.250810623168945
    6. '   ' → logprob: -11.375810623168945
    7. '```' → logprob: -11.500810623168945
    8. ' import' → logprob: -11.875810623168945
    9. 'line' → logprob: -12.250810623168945
    10. ' line' → logprob: -12.500810623168945

Token 527: ' import' (ID: 1588)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7689275145530701
    2. 'import' (adapté à ' import') → logprob: -1.5189275741577148
    3. 'self' → logprob: -1.8939275741577148
    4. ' import' → logprob: -1.8939275741577148
    5. '       ' → logprob: -4.143927574157715
    6. ' lines' → logprob: -8.143927574157715
    7. ' n' → logprob: -8.768927574157715
    8. 'n' → logprob: -9.143927574157715
    9. ' line' → logprob: -9.643927574157715
    10. '```' → logprob: -10.143927574157715

Token 528: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3868817985057831
    2. 'sys' → logprob: -1.1368818283081055
    3. '=sys' → logprob: -11.636881828308105
    4. '	sys' → logprob: -13.386881828308105
    5. '_sys' → logprob: -14.886881828308105
    6. '(sys' → logprob: -17.76188087463379
    7. 's' → logprob: -18.01188087463379
    8. '_' → logprob: -18.63688087463379
    9. '.sys' → logprob: -19.13688087463379
    10. 'stdin' → logprob: -19.38688087463379

Token 529: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034153475426137447
    2. 'input' → logprob: -6.878415584564209
    3. 'line' → logprob: -7.378415584564209
    4. ' lines' → logprob: -7.878415584564209
    5. '
' → logprob: -8.12841510772705
    6. 'n' → logprob: -8.12841510772705
    7. ' line' → logprob: -8.50341510772705
    8. 'data' → logprob: -8.62841510772705
    9. '        
' → logprob: -9.00341510772705
    10. 'self' → logprob: -9.87841510772705

Token 530: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.802049756515771e-05
    2. 'n' → logprob: -10.125067710876465
    3. 'self' → logprob: -11.750067710876465
    4. '
' → logprob: -11.875067710876465
    5. 'input' → logprob: -12.625067710876465
    6. 'data' → logprob: -13.500067710876465
    7. ' lines' → logprob: -13.500067710876465
    8. 'line' → logprob: -13.625067710876465
    9. ',' → logprob: -13.875067710876465
    10. ' line' → logprob: -14.125067710876465

Token 531: ' input' (ID: 3422)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10479823499917984
    2. 'data' → logprob: -2.6047983169555664
    3. ' lines' → logprob: -3.9797983169555664
    4. 'input' (adapté à ' input') → logprob: -5.729798316955566
    5. 'lines' → logprob: -6.354798316955566
    6. ' data' → logprob: -6.854798316955566
    7. 'line' → logprob: -7.479798316955566
    8. ' input' → logprob: -8.729798316955566
    9. ' line' → logprob: -9.604798316955566
    10. 'for' → logprob: -11.104798316955566

Token 532: ' =' (ID: 314)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.50031578540802
    2. '()' → logprob: -1.50031578540802
    3. '_data' → logprob: -2.2503156661987305
    4. ' =' → logprob: -3.2503156661987305
    5. '=' → logprob: -4.3753156661987305
    6. '_' → logprob: -4.7503156661987305
    7. '_lines' → logprob: -5.6253156661987305
    8. '_=' → logprob: -7.6253156661987305
    9. '_str' → logprob: -7.8753156661987305
    10. 'data' → logprob: -8.00031566619873

Token 533: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0052342405542731285
    2. ' sys' → logprob: -5.255234241485596
    3. '=sys' → logprob: -15.130233764648438
    4. '	sys' → logprob: -16.005233764648438
    5. 'input' → logprob: -17.755233764648438
    6. '(sys' → logprob: -18.380233764648438
    7. 'lambda' → logprob: -19.505233764648438
    8. '_sys' → logprob: -21.505233764648438
    9. '.sys' → logprob: -22.005233764648438
    10. '__' → logprob: -22.255233764648438

Token 534: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.656383680412546e-05
    2. 'stdin' → logprob: -10.375046730041504
    3. '.stdout' → logprob: -12.000046730041504
    4. '.readline' → logprob: -13.000046730041504
    5. '.' → logprob: -13.125046730041504
    6. 'import' → logprob: -13.375046730041504
    7. ' .' → logprob: -13.625046730041504
    8. '._' → logprob: -13.750046730041504
    9. '.__' → logprob: -15.500046730041504
    10. '(stdin' → logprob: -16.000045776367188

Token 535: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.25255927443504333
    2. 'read' → logprob: -1.5025593042373657
    3. 'reader' → logprob: -8.252559661865234
    4. '.read' → logprob: -8.377559661865234
    5. '_read' → logprob: -10.252559661865234
    6. 'buffer' → logprob: -10.252559661865234
    7. ' readline' → logprob: -11.002559661865234
    8. 'input' → logprob: -11.127559661865234
    9. 'rea' → logprob: -11.377559661865234
    10. 'r' → logprob: -12.002559661865234

Token 536: '
' (ID: 198)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.47924479842185974
    2. '       ' → logprob: -1.1042448282241821
    3. '()' → logprob: -3.1042447090148926
    4. '().' → logprob: -5.604244709014893
    5. '
' → logprob: -7.354244709014893
    6. '()\' → logprob: -10.22924518585205
    7. '()

' → logprob: -10.72924518585205
    8. '()
' → logprob: -11.47924518585205
    9. '        
' → logprob: -11.97924518585205
    10. 'n' → logprob: -12.10424518585205

Token 537: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005077573587186635
    2. '()' → logprob: -8.250507354736328
    3. '()
' → logprob: -9.250507354736328
    4. 'self' → logprob: -9.875507354736328
    5. 'n' → logprob: -10.125507354736328
    6. '
' → logprob: -10.500507354736328
    7. '        
' → logprob: -11.375507354736328
    8. '	' → logprob: -12.625507354736328
    9. '   ' → logprob: -13.375507354736328
    10. ',' → logprob: -13.750507354736328

Token 538: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.09335753321647644
    2. '       ' → logprob: -2.593357563018799
    3. ' self' → logprob: -4.468357563018799
    4. 'n' → logprob: -5.968357563018799
    5. 'line' → logprob: -8.34335708618164
    6. 't' → logprob: -10.59335708618164
    7. 's' → logprob: -10.96835708618164
    8. ' line' → logprob: -11.21835708618164
    9. '        
' → logprob: -11.46835708618164
    10. '```' → logprob: -11.84335708618164

Token 539: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -9.372294698550832e-06
    2. 'n' → logprob: -12.125009536743164
    3. ' .' → logprob: -12.875009536743164
    4. '.' → logprob: -13.500009536743164
    5. '.
' → logprob: -18.000009536743164
    6. '	n' → logprob: -18.875009536743164
    7. '
' → logprob: -19.125009536743164
    8. ' n' → logprob: -19.750009536743164
    9. '   ' → logprob: -20.250009536743164
    10. '.nt' → logprob: -21.125009536743164

Token 540: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7955285310745239
    2. '=' → logprob: -1.295528531074524
    3. ' =' → logprob: -1.295528531074524
    4. ' ,' → logprob: -6.795528411865234
    5. ',self' → logprob: -11.045528411865234
    6. '=int' → logprob: -12.295528411865234
    7. '   ' → logprob: -12.545528411865234
    8. '       ' → logprob: -13.420528411865234
    9. ' ' → logprob: -13.420528411865234
    10. '(),' → logprob: -13.545528411865234

Token 541: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00861456897109747
    2. ' int' → logprob: -4.758614540100098
    3. '(int' → logprob: -19.883615493774414
    4. '	int' → logprob: -21.133615493774414
    5. 'map' → logprob: -22.008615493774414
    6. '[int' → logprob: -22.008615493774414
    7. '   ' → logprob: -22.508615493774414
    8. ' ' → logprob: -22.633615493774414
    9. '=int' → logprob: -23.008615493774414
    10. '<int' → logprob: -23.008615493774414

Token 542: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.009220817126333714
    2. '(' → logprob: -4.759220600128174
    3. '()' → logprob: -7.509220600128174
    4. 'input' → logprob: -9.884221076965332
    5. '(sys' → logprob: -12.009221076965332
    6. '(
' → logprob: -14.759221076965332
    7. ' (' → logprob: -15.384221076965332
    8. '((' → logprob: -16.009220123291016
    9. '(in' → logprob: -16.759220123291016
    10. ' input' → logprob: -17.009220123291016

Token 543: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.20856431126594543
    2. '().' → logprob: -1.708564281463623
    3. '()' → logprob: -4.958564281463623
    4. '())
' → logprob: -9.333564758300781
    5. ' ())' → logprob: -11.833564758300781
    6. '()
' → logprob: -12.458564758300781
    7. '(' → logprob: -13.708564758300781
    8. ')' → logprob: -14.708564758300781
    9. '())

' → logprob: -14.833564758300781
    10. '();)' → logprob: -14.958564758300781

Token 544: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005280246026813984
    2. 'self' → logprob: -5.380280017852783
    3. '<|end|>' → logprob: -8.005280494689941
    4. '	' → logprob: -9.505280494689941
    5. '
' → logprob: -9.630280494689941
    6. '   ' → logprob: -10.130280494689941
    7. ' self' → logprob: -10.130280494689941
    8. '\' → logprob: -10.630280494689941
    9. '        
' → logprob: -10.630280494689941
    10. ')' → logprob: -11.380280494689941

Token 545: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02329043485224247
    2. ' self' → logprob: -4.023290634155273
    3. '       ' → logprob: -5.273290634155273
    4. '	self' → logprob: -14.773290634155273
    5. '   ' → logprob: -15.773290634155273
    6. ' ' → logprob: -17.648290634155273
    7. '	' → logprob: -18.023290634155273
    8. '        
' → logprob: -19.023290634155273
    9. 'm' → logprob: -19.148290634155273
    10. '(self' → logprob: -19.148290634155273

Token 546: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -5.080963092041202e-06
    2. '.' → logprob: -12.250004768371582
    3. 'm' → logprob: -15.500004768371582
    4. ' .' → logprob: -16.8750057220459
    5. '.м' → logprob: -17.6250057220459
    6. '.n' → logprob: -17.8750057220459
    7. '	m' → logprob: -18.8750057220459
    8. '.
' → logprob: -19.5000057220459
    9. '```' → logprob: -20.2500057220459
    10. ').' → logprob: -20.2500057220459

Token 547: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038043100386857986
    2. '=' → logprob: -3.2880430221557617
    3. '=int' → logprob: -13.538043022155762
    4. '<|end|>' → logprob: -16.038043975830078
    5. ' ' → logprob: -16.413043975830078
    6. ' =
' → logprob: -16.538043975830078
    7. '(' → logprob: -16.913043975830078
    8. '()' → logprob: -17.163043975830078
    9. '＝' → logprob: -17.413043975830078
    10. '   ' → logprob: -17.788043975830078

Token 548: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20141363143920898
    2. ' int' → logprob: -1.701413631439209
    3. '(int' → logprob: -15.076414108276367
    4. '=int' → logprob: -18.326414108276367
    5. 'input' → logprob: -18.451414108276367
    6. ' ' → logprob: -19.451414108276367
    7. '	int' → logprob: -19.701414108276367
    8. '<int' → logprob: -19.701414108276367
    9. ' input' → logprob: -20.201414108276367
    10. '[int' → logprob: -20.326414108276367

Token 549: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -3.607391408877447e-05
    2. 'input' → logprob: -10.250036239624023
    3. '(' → logprob: -15.250036239624023
    4. ' (' → logprob: -15.500036239624023
    5. '=input' → logprob: -16.625036239624023
    6. '[input' → logprob: -17.750036239624023
    7. '<input' → logprob: -17.875036239624023
    8. ',input' → logprob: -18.250036239624023
    9. '(output' → logprob: -19.000036239624023
    10. '(
' → logprob: -19.625036239624023

Token 550: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3200172185897827
    2. '()' → logprob: -1.5700172185897827
    3. '())
' → logprob: -3.3200173377990723
    4. ')' → logprob: -3.5700173377990723
    5. '()
' → logprob: -6.570017337799072
    6. ')
' → logprob: -9.320016860961914
    7. ' ())' → logprob: -11.695016860961914
    8. '())
' → logprob: -12.195016860961914
    9. '().' → logprob: -12.445016860961914
    10. '(' → logprob: -12.820016860961914

Token 551: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16656646132469177
    2. 'for' → logprob: -1.9165664911270142
    3. ' for' → logprob: -5.166566371917725
    4. '   ' → logprob: -8.416566848754883
    5. '	for' → logprob: -8.666566848754883
    6. '	' → logprob: -8.666566848754883
    7. '
' → logprob: -10.041566848754883
    8. 'self' → logprob: -12.666566848754883
    9. '	   ' → logprob: -13.166566848754883
    10. '<|end|>' → logprob: -14.166566848754883

Token 552: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.062232065945863724
    2. 'self' (adapté à ' self') → logprob: -2.81223201751709
    3. '       ' → logprob: -8.31223201751709
    4. ' for' → logprob: -11.06223201751709
    5. '
' → logprob: -13.31223201751709
    6. ' self' → logprob: -13.68723201751709
    7. '	for' → logprob: -15.56223201751709
    8. '   ' → logprob: -16.437232971191406
    9. '```' → logprob: -17.187232971191406
    10. '        
' → logprob: -17.437232971191406

Token 553: '.matches' (ID: 64560)
  Prédit: '.matches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.matches' → logprob: -5.717296517104842e-05
    2. ' .' → logprob: -10.500057220458984
    3. 'matches' → logprob: -11.125057220458984
    4. '..' → logprob: -12.250057220458984
    5. '.' → logprob: -12.375057220458984
    6. '.m' → logprob: -12.875057220458984
    7. '.lines' → logprob: -13.875057220458984
    8. '.mat' → logprob: -15.000057220458984
    9. '.match' → logprob: -15.250057220458984
    10. '\.' → logprob: -16.000057220458984

Token 554: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43286630511283875
    2. ' =' → logprob: -1.4328663349151611
    3. '.clear' → logprob: -2.182866334915161
    4. 'clear' → logprob: -12.057866096496582
    5. '=[]' → logprob: -12.807866096496582
    6. '.' → logprob: -13.807866096496582
    7. '.=' → logprob: -14.432866096496582
    8. '[:]' → logprob: -14.682866096496582
    9. '.Clear' → logprob: -16.0578670501709
    10. '.extend' → logprob: -16.3078670501709

Token 555: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00529933487996459
    2. '[]
' → logprob: -6.0052995681762695
    3. '[]' → logprob: -6.2552995681762695
    4. ' [' → logprob: -7.7552995681762695
    5. '[
' → logprob: -8.50529956817627
    6. '[int' → logprob: -9.75529956817627
    7. '[class' → logprob: -9.88029956817627
    8. '[list' → logprob: -10.50529956817627
    9. '[List' → logprob: -10.75529956817627
    10. '[self' → logprob: -10.88029956817627

Token 556: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035569469910115004
    2. 'for' → logprob: -5.878556728363037
    3. ' for' → logprob: -7.253556728363037
    4. '   ' → logprob: -10.253557205200195
    5. '	for' → logprob: -12.503557205200195
    6. '	' → logprob: -12.628557205200195
    7. '	   ' → logprob: -13.253557205200195
    8. '
' → logprob: -16.503557205200195
    9. ' ' → logprob: -16.628557205200195
    10. '<|end|>' → logprob: -17.003557205200195

Token 557: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0020539083052426577
    2. '       ' → logprob: -6.252053737640381
    3. ' for' → logprob: -9.002054214477539
    4. '	for' → logprob: -13.377054214477539
    5. '   ' → logprob: -14.627054214477539
    6. '	' → logprob: -16.87705421447754
    7. '
' → logprob: -17.87705421447754
    8. ' ' → logprob: -20.00205421447754
    9. '	   ' → logprob: -20.00205421447754
    10. '           ' → logprob: -20.50205421447754

Token 558: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0031781906727701426
    2. ' _' → logprob: -5.753178119659424
    3. ' ' → logprob: -15.128178596496582
    4. ' range' → logprob: -16.628177642822266
    5. '_i' → logprob: -16.878177642822266
    6. ' i' → logprob: -17.628177642822266
    7. ' in' → logprob: -17.628177642822266
    8. 'range' → logprob: -17.753177642822266
    9. '_range' → logprob: -18.003177642822266
    10. '_

' → logprob: -18.503177642822266

Token 559: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.618160605430603
    2. 'range' → logprob: -0.868160605430603
    3. 'in' → logprob: -3.3681607246398926
    4. ' range' → logprob: -4.993160724639893
    5. ' ' → logprob: -9.868160247802734
    6. '  ' → logprob: -9.993160247802734
    7. '   ' → logprob: -12.493160247802734
    8. '    ' → logprob: -13.118160247802734
    9. '_' → logprob: -14.243160247802734
    10. '	range' → logprob: -14.743160247802734

Token 560: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00014358828775584698
    2. ' range' → logprob: -8.875144004821777
    3. 'in' → logprob: -14.625144004821777
    4. '   ' → logprob: -14.625144004821777
    5. 'ange' → logprob: -14.750144004821777
    6. '(range' → logprob: -15.000144004821777
    7. ' ' → logprob: -15.125144004821777
    8. '
' → logprob: -15.375144004821777
    9. '  ' → logprob: -15.500144004821777
    10. '	range' → logprob: -15.500144004821777

Token 561: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.91732100979425e-05
    2. 'self' → logprob: -10.375039100646973
    3. '(' → logprob: -12.000039100646973
    4. ' (' → logprob: -13.750039100646973
    5. ' self' → logprob: -14.500039100646973
    6. '(s' → logprob: -16.37504005432129
    7. '(int' → logprob: -16.62504005432129
    8. '(
' → logprob: -17.50004005432129
    9. '   ' → logprob: -18.25004005432129
    10. '	self' → logprob: -18.62504005432129

Token 562: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.0005939012626186013
    2. 'm' → logprob: -7.500594139099121
    3. 'self' → logprob: -10.125594139099121
    4. ' m' → logprob: -14.000594139099121
    5. '	m' → logprob: -17.000593185424805
    6. ' self' → logprob: -17.250593185424805
    7. '.' → logprob: -17.500593185424805
    8. '_m' → logprob: -18.000593185424805
    9. ',m' → logprob: -18.125593185424805
    10. '<m' → logprob: -18.125593185424805

Token 563: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05019935593008995
    2. '):' → logprob: -3.175199270248413
    3. ' ):
' → logprob: -5.300199508666992
    4. '):
' → logprob: -7.300199508666992
    5. ':' → logprob: -7.550199508666992
    6. ' ):' → logprob: -8.050199508666992
    7. ':
' → logprob: -8.300199508666992
    8. '       ' → logprob: -8.800199508666992
    9. '():
' → logprob: -8.800199508666992
    10. '   ' → logprob: -10.050199508666992

Token 564: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.751746746478602e-05
    2. '	       ' → logprob: -11.87504768371582
    3. '<|end|>' → logprob: -11.87504768371582
    4. '```' → logprob: -12.25004768371582
    5. ' line' → logprob: -12.62504768371582
    6. '            
' → logprob: -12.62504768371582
    7. '       ' → logprob: -12.75004768371582
    8. '   ' → logprob: -12.75004768371582
    9. '          ' → logprob: -13.12504768371582
    10. '{
' → logprob: -13.12504768371582

Token 565: ' winner' (ID: 19499)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3841785490512848
    2. 'a' → logprob: -1.5091785192489624
    3. 'winner' (adapté à ' winner') → logprob: -2.509178638458252
    4. ' w' → logprob: -4.634178638458252
    5. ' winner' → logprob: -6.009178638458252
    6. ' a' → logprob: -6.384178638458252
    7. 'x' → logprob: -6.634178638458252
    8. '           ' → logprob: -7.509178638458252
    9. 'line' → logprob: -7.759178638458252
    10. 'u' → logprob: -8.509178161621094

Token 566: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.070975071750581e-05
    2. ' ,' → logprob: -10.625030517578125
    3. '_,' → logprob: -12.625030517578125
    4. ',l' → logprob: -13.625030517578125
    5. ',int' → logprob: -13.875030517578125
    6. ',w' → logprob: -14.750030517578125
    7. ',
' → logprob: -16.125030517578125
    8. 'int' → logprob: -16.500030517578125
    9. ',line' → logprob: -16.750030517578125
    10. '‌,' → logprob: -17.000030517578125

Token 567: ' loser' (ID: 115775)
  Prédit: 'los'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'los' → logprob: -0.005965645890682936
    2. ' loser' → logprob: -5.130965709686279
    3. ' los' → logprob: -11.005965232849121
    4. 'lo' → logprob: -11.755965232849121
    5. 'Los' → logprob: -12.505965232849121
    6. 'loss' → logprob: -12.755965232849121
    7. 'lose' → logprob: -13.755965232849121
    8. 'las' → logprob: -14.005965232849121
    9. ' ' → logprob: -14.130965232849121
    10. ' ' → logprob: -14.130965232849121

Token 568: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020678490400314
    2. ' =' → logprob: -2.3502068519592285
    3. '=input' → logprob: -17.22520637512207
    4. ' ' → logprob: -17.35020637512207
    5. ',' → logprob: -17.72520637512207
    6. '   ' → logprob: -17.85020637512207
    7. '    ' → logprob: -18.47520637512207
    8. '=line' → logprob: -18.60020637512207
    9. '＝' → logprob: -19.10020637512207
    10. ')' → logprob: -19.85020637512207

Token 569: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.20141352713108063
    2. 'map' → logprob: -1.7014135122299194
    3. '           ' → logprob: -16.326414108276367
    4. '(map' → logprob: -16.826414108276367
    5. '	map' → logprob: -17.076414108276367
    6. '    ' → logprob: -18.326414108276367
    7. '
' → logprob: -18.451414108276367
    8. 'list' → logprob: -18.826414108276367
    9. '   ' → logprob: -18.826414108276367
    10. '[' → logprob: -19.201414108276367

Token 570: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00044377794256433845
    2. 'int' → logprob: -7.750443935394287
    3. '(' → logprob: -11.250443458557129
    4. ' int' → logprob: -17.000444412231445
    5. '(lambda' → logprob: -17.000444412231445
    6. '[int' → logprob: -17.250444412231445
    7. ' (' → logprob: -17.625444412231445
    8. '(
' → logprob: -17.625444412231445
    9. '<int' → logprob: -17.750444412231445
    10. '(input' → logprob: -17.875444412231445

Token 571: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.31605440378189087
    2. ',' → logprob: -1.316054344177246
    3. 'input' → logprob: -6.316054344177246
    4. '(input' → logprob: -6.941054344177246
    5. ' input' → logprob: -11.941054344177246
    6. ' ,' → logprob: -12.941054344177246
    7. ',int' → logprob: -13.691054344177246
    8. '=input' → logprob: -13.691054344177246
    9. '(' → logprob: -13.691054344177246
    10. '   ' → logprob: -14.316054344177246

Token 572: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0001584850688232109
    2. ' input' → logprob: -8.750158309936523
    3. '(input' → logprob: -21.000158309936523
    4. ',input' → logprob: -22.250158309936523
    5. '=input' → logprob: -23.000158309936523
    6. '<input' → logprob: -23.000158309936523
    7. '	input' → logprob: -23.500158309936523
    8. '_input' → logprob: -23.500158309936523
    9. '
' → logprob: -23.875158309936523
    10. ')' → logprob: -24.375158309936523

Token 573: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.511406809295295e-06
    2. '()' → logprob: -12.000006675720215
    3. ' ().' → logprob: -15.500006675720215
    4. '(' → logprob: -17.1250057220459
    5. '()
' → logprob: -17.3750057220459
    6. '   ' → logprob: -18.8750057220459
    7. '.readline' → logprob: -20.0000057220459
    8. '	' → logprob: -20.5000057220459
    9. ')' → logprob: -20.6250057220459
    10. 's' → logprob: -20.8750057220459

Token 574: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.014172209426760674
    2. 'strip' → logprob: -4.264172077178955
    3. 'rstrip' → logprob: -11.889172554016113
    4. ' split' → logprob: -14.264172554016113
    5. 'read' → logprob: -14.389172554016113
    6. '().' → logprob: -14.889172554016113
    7. '(split' → logprob: -16.014171600341797
    8. 'spl' → logprob: -16.889171600341797
    9. ' strip' → logprob: -17.139171600341797
    10. ')' → logprob: -17.514171600341797

Token 575: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0030223913490772247
    2. '()' → logprob: -6.503022193908691
    3. ')' → logprob: -6.753022193908691
    4. '())
' → logprob: -8.253022193908691
    5. '(' → logprob: -9.753022193908691
    6. '()))' → logprob: -10.503022193908691
    7. '())
' → logprob: -13.253022193908691
    8. '))' → logprob: -13.503022193908691
    9. ' ())' → logprob: -14.128022193908691
    10. '())

' → logprob: -14.503022193908691

Token 576: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.000763510703109e-05
    2. 'self' → logprob: -11.000040054321289
    3. '       ' → logprob: -11.750040054321289
    4. '<|end|>' → logprob: -12.750040054321289
    5. '		' → logprob: -13.000040054321289
    6. ',' → logprob: -13.125040054321289
    7. '               ' → logprob: -13.250040054321289
    8. '            
' → logprob: -13.375040054321289
    9. '   ' → logprob: -13.500040054321289
    10. '	       ' → logprob: -13.625040054321289

Token 577: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.009944960474967957
    2. '           ' → logprob: -4.759944915771484
    3. ' self' → logprob: -6.634944915771484
    4. '       ' → logprob: -11.634944915771484
    5. '   ' → logprob: -12.384944915771484
    6. '	self' → logprob: -13.884944915771484
    7. '               ' → logprob: -14.509944915771484
    8. ' ' → logprob: -14.634944915771484
    9. '(self' → logprob: -15.384944915771484
    10. '          ' → logprob: -15.384944915771484

Token 578: '.matches' (ID: 64560)
  Prédit: '.matches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.matches' → logprob: -0.02631342224776745
    2. 'matches' → logprob: -3.651313304901123
    3. ' .' → logprob: -12.526313781738281
    4. '.match' → logprob: -12.651313781738281
    5. '.' → logprob: -13.401313781738281
    6. '.math' → logprob: -13.526313781738281
    7. '(matches' → logprob: -14.401313781738281
    8. ' matches' → logprob: -15.026313781738281
    9. 'mat' → logprob: -15.151313781738281
    10. '.m' → logprob: -15.151313781738281

Token 579: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00011570196511456743
    2. '.' → logprob: -9.125115394592285
    3. ' .' → logprob: -12.875115394592285
    4. '.app' → logprob: -13.250115394592285
    5. '.ap' → logprob: -13.250115394592285
    6. 'append' → logprob: -15.500115394592285
    7. '.Append' → logprob: -15.750115394592285
    8. '.add' → logprob: -16.5001163482666
    9. ').' → logprob: -16.7501163482666
    10. '.push' → logprob: -17.0001163482666

Token 580: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -13.00000286102295
    3. 'Match' → logprob: -14.50000286102295
    4. '(Mat' → logprob: -17.125003814697266
    5. ' Match' → logprob: -17.250003814697266
    6. '(match' → logprob: -18.000003814697266
    7. '(
' → logprob: -18.000003814697266
    8. ' (' → logprob: -19.375003814697266
    9. '(Code' → logprob: -20.000003814697266
    10. '.Match' → logprob: -20.500003814697266

Token 581: 'atch' (ID: 987)
  Prédit: 'atch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atch' → logprob: 0.0
    2. 'Match' → logprob: -19.625
    3. 'at' → logprob: -21.0
    4. 'ATCH' → logprob: -22.875
    5. 'a' → logprob: -23.125
    6. 'ath' → logprob: -23.75
    7. 'match' → logprob: -23.875
    8. 'atching' → logprob: -23.875
    9. '_match' → logprob: -24.875
    10. 'atches' → logprob: -25.375

Token 582: 'Result' (ID: 2769)
  Prédit: 'Result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Result' → logprob: -1.981667537620524e-06
    2. 'result' → logprob: -14.750001907348633
    3. 'Match' → logprob: -14.750001907348633
    4. '_result' → logprob: -14.750001907348633
    5. '_Result' → logprob: -15.000001907348633
    6. 'Request' → logprob: -15.875001907348633
    7. '	Result' → logprob: -15.875001907348633
    8. ' Result' → logprob: -17.750001907348633
    9. 'Results' → logprob: -17.875001907348633
    10. 'Res' → logprob: -18.125001907348633

Token 583: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -3.786196975852363e-05
    2. '(' → logprob: -10.250038146972656
    3. 'w' → logprob: -13.750038146972656
    4. 'winner' → logprob: -14.375038146972656
    5. ')' → logprob: -14.875038146972656
    6. '(
' → logprob: -15.250038146972656
    7. ' (' → logprob: -16.125038146972656
    8. '   ' → logprob: -17.500038146972656
    9. ')(' → logprob: -17.750038146972656
    10. '((' → logprob: -18.000038146972656

Token 584: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.00015824666479602456
    2. 'winner' → logprob: -9.000158309936523
    3. 'inn' → logprob: -11.375158309936523
    4. 'nner' → logprob: -11.750158309936523
    5. 'inne' → logprob: -12.250158309936523
    6. '.inner' → logprob: -12.750158309936523
    7. 'riter' → logprob: -13.750158309936523
    8. '_inner' → logprob: -13.750158309936523
    9. ',' → logprob: -14.000158309936523
    10. 'unner' → logprob: -14.000158309936523

Token 585: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.043078898685053e-05
    2. ' ,' → logprob: -9.375090599060059
    3. ',
' → logprob: -12.250090599060059
    4. ',w' → logprob: -15.125090599060059
    5. '       ' → logprob: -15.875090599060059
    6. '   ' → logprob: -16.125089645385742
    7. ',

' → logprob: -16.375089645385742
    8. '           ' → logprob: -16.375089645385742
    9. '=' → logprob: -17.750089645385742
    10. ',l' → logprob: -17.750089645385742

Token 586: ' loser' (ID: 115775)
  Prédit: 'los'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'los' → logprob: -0.0029366982635110617
    2. ' loser' → logprob: -5.877936840057373
    3. 'lo' → logprob: -9.002936363220215
    4. 'loss' → logprob: -12.502936363220215
    5. ' los' → logprob: -13.002936363220215
    6. 'lose' → logprob: -13.377936363220215
    7. ' ' → logprob: -14.627936363220215
    8. ' ' → logprob: -16.00293731689453
    9. 'losen' → logprob: -16.00293731689453
    10. 'las' → logprob: -16.25293731689453

Token 587: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16025550663471222
    2. '))' → logprob: -1.9102555513381958
    3. ')
' → logprob: -10.535255432128906
    4. '))
' → logprob: -12.410255432128906
    5. ')))' → logprob: -14.785255432128906
    6. ' )' → logprob: -15.535255432128906
    7. '       ' → logprob: -17.285255432128906
    8. ' ))' → logprob: -17.410255432128906
    9. ')}' → logprob: -17.785255432128906
    10. '())' → logprob: -17.910255432128906

Token 588: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.4085864722728729
    2. '   ' → logprob: -1.7835865020751953
    3. '<|end|>' → logprob: -2.2835865020751953
    4. '
' → logprob: -2.7835865020751953
    5. '        
' → logprob: -6.033586502075195
    6. '	
' → logprob: -7.783586502075195
    7. '<|end|>' → logprob: -8.033586502075195
    8. ' 
' → logprob: -8.908586502075195
    9. '  
' → logprob: -9.283586502075195
    10. '```' → logprob: -10.033586502075195

Token 589: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005298384930938482
    2. 'def' → logprob: -5.255298614501953
    3. ' def' → logprob: -9.755298614501953
    4. '	def' → logprob: -12.505298614501953
    5. '
' → logprob: -13.755298614501953
    6. '    
' → logprob: -14.255298614501953
    7. '```' → logprob: -14.255298614501953
    8. '<|end|>' → logprob: -14.755298614501953
    9. '<|end|>' → logprob: -16.255298614501953
    10. '   ' → logprob: -16.255298614501953

Token 590: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00023274161503650248
    2. ' def' → logprob: -8.500232696533203
    3. '   ' → logprob: -10.500232696533203
    4. '	def' → logprob: -13.375232696533203
    5. '
' → logprob: -16.000232696533203
    6. '```' → logprob: -18.625232696533203
    7. ' ' → logprob: -20.125232696533203
    8. '  ' → logprob: -20.500232696533203
    9. '    
' → logprob: -21.125232696533203
    10. '_def' → logprob: -21.125232696533203

Token 591: ' output' (ID: 4733)
  Prédit: 'write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'write' → logprob: -0.016722504049539566
    2. 'print' → logprob: -4.266722679138184
    3. 'solve' → logprob: -6.641722679138184
    4. ' write' → logprob: -7.141722679138184
    5. 'process' → logprob: -8.391722679138184
    6. 'output' → logprob: -8.766722679138184
    7. 'def' → logprob: -10.516722679138184
    8. 'run' → logprob: -11.266722679138184
    9. 'get' → logprob: -11.516722679138184
    10. ' print' → logprob: -11.641722679138184

Token 592: '_result' (ID: 11623)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5175653696060181
    2. '_rank' → logprob: -1.767565369606018
    3. '_order' → logprob: -2.5175652503967285
    4. '_result' → logprob: -3.0175652503967285
    5. '(' → logprob: -3.1425652503967285
    6. '_' → logprob: -3.5175652503967285
    7. '_r' → logprob: -3.8925652503967285
    8. '_results' → logprob: -5.1425652503967285
    9. '_(' → logprob: -6.2675652503967285
    10. '_final' → logprob: -6.5175652503967285

Token 593: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.4849443838757e-06
    2. '(' → logprob: -12.375004768371582
    3. '(
' → logprob: -16.500003814697266
    4. '   ' → logprob: -16.625003814697266
    5. 'self' → logprob: -16.875003814697266
    6. '       ' → logprob: -17.500003814697266
    7. ' (' → logprob: -18.125003814697266
    8. '(s' → logprob: -19.750003814697266
    9. '(sel' → logprob: -20.250003814697266
    10. '(this' → logprob: -20.625003814697266

Token 594: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.44574936106801e-05
    2. ' ,' → logprob: -10.00007438659668
    3. 'self' → logprob: -10.50007438659668
    4. ',self' → logprob: -14.25007438659668
    5. '(self' → logprob: -14.87507438659668
    6. '):' → logprob: -15.37507438659668
    7. '_,' → logprob: -16.00007438659668
    8. ',
' → logprob: -16.87507438659668
    9. ')' → logprob: -17.12507438659668
    10. '   ' → logprob: -17.87507438659668

Token 595: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.07067669928073883
    2. ' order' → logprob: -2.820676803588867
    3. 'result' → logprob: -4.945676803588867
    4. ' result' → logprob: -6.695676803588867
    5. 'rank' → logprob: -8.820676803588867
    6. 'ranking' → logprob: -9.070676803588867
    7. ' ranking' → logprob: -10.570676803588867
    8. 'self' → logprob: -11.445676803588867
    9. 'res' → logprob: -11.820676803588867
    10. ' rank' → logprob: -12.445676803588867

Token 596: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01947692781686783
    2. '):' → logprob: -4.269476890563965
    3. ':' → logprob: -5.644476890563965
    4. '):
' → logprob: -6.644476890563965
    5. ' ,' → logprob: -7.894476890563965
    6. '):
' → logprob: -10.269476890563965
    7. ' ):' → logprob: -11.144476890563965
    8. '   ' → logprob: -11.394476890563965
    9. ' :' → logprob: -11.394476890563965
    10. ')' → logprob: -12.519476890563965

Token 597: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.05492561310529709
    2. ' multiple' → logprob: -2.9299256801605225
    3. 'unique' → logprob: -10.179925918579102
    4. ' unique' → logprob: -13.429925918579102
    5. 'multip' → logprob: -13.804925918579102
    6. 'is' → logprob: -14.304925918579102
    7. 'mult' → logprob: -14.929925918579102
    8. '
' → logprob: -15.304925918579102
    9. ' is' → logprob: -15.804925918579102
    10. 'multi' → logprob: -15.929925918579102

Token 598: '_possible' (ID: 185849)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6259081363677979
    2. '_options' → logprob: -1.0009081363677979
    3. '):' → logprob: -2.375908136367798
    4. '):
' → logprob: -5.500907897949219
    5. '_' → logprob: -8.000907897949219
    6. '_choices' → logprob: -8.625907897949219
    7. 'options' → logprob: -10.000907897949219
    8. '_possible' → logprob: -11.000907897949219
    9. '):

' → logprob: -11.125907897949219
    10. 'Options' → logprob: -11.250907897949219

Token 599: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4743593633174896
    2. '):
' → logprob: -0.974359393119812
    3. '):
' → logprob: -8.224359512329102
    4. ':' → logprob: -12.099359512329102
    5. '):

' → logprob: -12.349359512329102
    6. ')' → logprob: -13.599359512329102
    7. '   ' → logprob: -14.224359512329102
    8. ' ):' → logprob: -14.599359512329102
    9. 'def' → logprob: -15.099359512329102
    10. ',' → logprob: -15.474359512329102

Token 600: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003908965270966291
    2. '(self' → logprob: -6.378909111022949
    3. ':' → logprob: -7.128909111022949
    4. '   ' → logprob: -7.503909111022949
    5. 'self' → logprob: -7.753909111022949
    6. ':
' → logprob: -8.50390911102295
    7. '(' → logprob: -9.75390911102295
    8. ',' → logprob: -10.00390911102295
    9. '):
' → logprob: -10.25390911102295
    10. ' self' → logprob: -10.50390911102295

Token 601: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08995549380779266
    2. ' if' → logprob: -2.8399555683135986
    3. '       ' → logprob: -3.5899555683135986
    4. '	if' → logprob: -16.089956283569336
    5. '   ' → logprob: -16.339956283569336
    6. 'import' → logprob: -16.714956283569336
    7. 'for' → logprob: -17.964956283569336
    8. '```' → logprob: -18.214956283569336
    9. 'If' → logprob: -19.339956283569336
    10. '      ' → logprob: -19.464956283569336

Token 602: ' order' (ID: 2569)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.000193527273950167
    2. '       ' → logprob: -9.00019359588623
    3. ' if' → logprob: -9.62519359588623
    4. 'for' → logprob: -12.75019359588623
    5. 'import' → logprob: -14.25019359588623
    6. 'def' → logprob: -15.50019359588623
    7. '   ' → logprob: -15.75019359588623
    8. 'from' → logprob: -17.125192642211914
    9. 'print' → logprob: -17.125192642211914
    10. 'If' → logprob: -17.250192642211914

Token 603: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09471327811479568
    2. '=' → logprob: -2.7197132110595703
    3. ' is' → logprob: -4.59471321105957
    4. 'if' → logprob: -4.71971321105957
    5. ' if' → logprob: -6.34471321105957
    6. '_str' → logprob: -6.96971321105957
    7. ',' → logprob: -7.59471321105957
    8. '=None' → logprob: -7.59471321105957
    9. 'is' → logprob: -7.71971321105957
    10. ':' → logprob: -7.71971321105957

Token 604: ' zero' (ID: 12421)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0015969875967130065
    2. 'List' → logprob: -6.501596927642822
    3. ' list' → logprob: -10.25159740447998
    4. 'Optional' → logprob: -10.25159740447998
    5. 'None' → logprob: -11.37659740447998
    6. 'if' → logprob: -11.75159740447998
    7. '   ' → logprob: -12.87659740447998
    8. 'order' → logprob: -13.62659740447998
    9. '[list' → logprob: -15.62659740447998
    10. '```' → logprob: -15.62659740447998

Token 605: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.015470519661903381
    2. '_based' → logprob: -4.515470504760742
    3. 'based' → logprob: -5.515470504760742
    4. '-' → logprob: -8.515470504760742
    5. ' -' → logprob: -8.890470504760742
    6. ' based' → logprob: -10.515470504760742
    7. 'Based' → logprob: -11.140470504760742
    8. '-Based' → logprob: -12.765470504760742
    9. '_-' → logprob: -13.140470504760742
    10. '_' → logprob: -13.390470504760742

Token 606: ' team' (ID: 3214)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11372046917676926
    2. ' indices' → logprob: -2.738720417022705
    3. 'if' → logprob: -3.863720417022705
    4. 'indices' → logprob: -5.113720417022705
    5. '       ' → logprob: -5.238720417022705
    6. ' index' → logprob: -5.613720417022705
    7. ' indexes' → logprob: -5.863720417022705
    8. 'index' → logprob: -6.488720417022705
    9. 'indexes' → logprob: -6.863720417022705
    10. '   ' → logprob: -7.113720417022705

Token 607: ' indices' (ID: 30378)
  Prédit: '_ids'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ids' → logprob: -0.6740825772285461
    2. '_indices' → logprob: -1.2990825176239014
    3. '_' → logprob: -2.7990825176239014
    4. '_indexes' → logprob: -2.9240825176239014
    5. 's' → logprob: -3.5490825176239014
    6. '_id' → logprob: -3.7990825176239014
    7. '_index' → logprob: -3.7990825176239014
    8. ' indices' → logprob: -3.9240825176239014
    9. '_idx' → logprob: -5.5490827560424805
    10. 'indices' → logprob: -6.9240827560424805

Token 608: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00853927806019783
    2. ' if' → logprob: -4.883539199829102
    3. 'if' → logprob: -7.258539199829102
    4. ',' → logprob: -9.133539199829102
    5. '	' → logprob: -10.258539199829102
    6. '	   ' → logprob: -10.383539199829102
    7. '   ' → logprob: -11.258539199829102
    8. '	if' → logprob: -11.633539199829102
    9. '	       ' → logprob: -12.008539199829102
    10. 'def' → logprob: -12.133539199829102

Token 609: ' ' (ID: 220)
  Prédit: 'highest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'highest' → logprob: -0.13056793808937073
    2. 'best' → logprob: -2.630568027496338
    3. 'first' → logprob: -3.755568027496338
    4. ' highest' → logprob: -3.880568027496338
    5. 'top' → logprob: -5.630568027496338
    6. '1' → logprob: -7.130568027496338
    7. ' best' → logprob: -7.505568027496338
    8. 'the' → logprob: -8.00556755065918
    9. '0' → logprob: -8.38056755065918
    10. 'high' → logprob: -8.50556755065918

Token 610: '1' (ID: 16)
  Prédit: 'highest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'highest' → logprob: -0.19195124506950378
    2. 'best' → logprob: -2.566951274871826
    3. 'top' → logprob: -2.941951274871826
    4. '0' → logprob: -3.941951274871826
    5. 'first' → logprob: -4.066951274871826
    6. ' highest' → logprob: -5.691951274871826
    7. 'the' → logprob: -5.691951274871826
    8. '1' → logprob: -7.941951274871826
    9. 'high' → logprob: -8.191950798034668
    10. 'rank' → logprob: -8.316950798034668

Token 611: 'st' (ID: 302)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.015289155766367912
    2. 'to' → logprob: -5.515289306640625
    3. 'def' → logprob: -5.640289306640625
    4. '       ' → logprob: -6.015289306640625
    5. ',' → logprob: -6.515289306640625
    6. '   ' → logprob: -7.015289306640625
    7. ' ' → logprob: -7.390289306640625
    8. '0' → logprob: -7.640289306640625
    9. ' through' → logprob: -7.640289306640625
    10. ')' → logprob: -8.015289306640625

Token 612: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.05896997079253197
    2. 'to' → logprob: -3.3089699745178223
    3. ' place' → logprob: -4.683969974517822
    4. 'place' → logprob: -5.308969974517822
    5. '_place' → logprob: -5.558969974517822
    6. '_to' → logprob: -6.933969974517822
    7. '+' → logprob: -8.308969497680664
    8. 'rank' → logprob: -8.433969497680664
    9. '   ' → logprob: -8.683969497680664
    10. ',' → logprob: -8.683969497680664

Token 613: ' nth' (ID: 58687)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.4178376793861389
    2. ' last' → logprob: -1.2928376197814941
    3. 'lowest' → logprob: -3.292837619781494
    4. 'nth' → logprob: -4.167837619781494
    5. ' nth' → logprob: -4.542837619781494
    6. 'n' → logprob: -6.167837619781494
    7. ' lowest' → logprob: -6.917837619781494
    8. ' n' → logprob: -8.292838096618652
    9. 'self' → logprob: -9.417838096618652
    10. 'highest' → logprob: -9.917838096618652

Token 614: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18111850321292877
    2. ' if' → logprob: -2.4311184883117676
    3. 'if' → logprob: -2.5561184883117676
    4. '   ' → logprob: -9.931118965148926
    5. ',' → logprob: -10.056118965148926
    6. 'def' → logprob: -11.306118965148926
    7. 'for' → logprob: -12.431118965148926
    8. ':' → logprob: -12.806118965148926
    9. '           ' → logprob: -13.431118965148926
    10. 'print' → logprob: -13.431118965148926

Token 615: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040708400309085846
    2. 'if' → logprob: -3.915708303451538
    3. ' if' → logprob: -3.915708303451538
    4. '   ' → logprob: -10.290708541870117
    5. ',' → logprob: -13.790708541870117
    6. 'def' → logprob: -14.165708541870117
    7. '	' → logprob: -14.415708541870117
    8. '	if' → logprob: -14.540708541870117
    9. 'for' → logprob: -14.540708541870117
    10. ' for' → logprob: -15.540708541870117

Token 616: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01716015115380287
    2. '       ' → logprob: -4.767159938812256
    3. ' if' → logprob: -4.767159938812256
    4. 'for' → logprob: -12.517160415649414
    5. '   ' → logprob: -14.892160415649414
    6. '```' → logprob: -14.892160415649414
    7. '	if' → logprob: -15.392160415649414
    8. 'import' → logprob: -16.142160415649414
    9. 'If' → logprob: -17.767160415649414
    10. ' for' → logprob: -18.017160415649414

Token 617: ' multiple' (ID: 7598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00016504127415828407
    2. '       ' → logprob: -9.250164985656738
    3. ' if' → logprob: -9.625164985656738
    4. 'import' → logprob: -13.500164985656738
    5. 'for' → logprob: -13.875164985656738
    6. '```' → logprob: -15.250164985656738
    7. 'If' → logprob: -15.625164985656738
    8. '   ' → logprob: -15.750164985656738
    9. 'from' → logprob: -17.250165939331055
    10. 'n' → logprob: -18.250165939331055

Token 618: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -0.07268321514129639
    2. '_' → logprob: -2.697683334350586
    3. '_options' → logprob: -6.447683334350586
    4. '_pos' → logprob: -7.322683334350586
    5. ' =' → logprob: -8.697683334350586
    6. '_result' → logprob: -9.572683334350586
    7. '_results' → logprob: -9.822683334350586
    8. '=' → logprob: -9.947683334350586
    9. '_choices' → logprob: -10.072683334350586
    10. '_p' → logprob: -11.072683334350586

Token 619: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2712007761001587
    2. '       ' → logprob: -1.5212007761001587
    3. ' =' → logprob: -5.021200656890869
    4. ':
' → logprob: -5.271200656890869
    5. '=' → logprob: -5.771200656890869
    6. '   ' → logprob: -6.646200656890869
    7. ' if' → logprob: -6.771200656890869
    8. 'if' → logprob: -7.146200656890869
    9. ',' → logprob: -8.396201133728027
    10. '):' → logprob: -8.521201133728027

Token 620: ' boolean' (ID: 3870)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.026943039149045944
    2. ' bool' → logprob: -4.026943206787109
    3. 'True' → logprob: -4.776943206787109
    4. ' True' → logprob: -8.65194320678711
    5. 'if' → logprob: -9.77694320678711
    6. 'False' → logprob: -10.77694320678711
    7. 'Bool' → logprob: -11.02694320678711
    8. '       ' → logprob: -11.40194320678711
    9. 'None' → logprob: -11.52694320678711
    10. '   ' → logprob: -11.77694320678711

Token 621: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01949142850935459
    2. ' if' → logprob: -4.019491195678711
    3. 'if' → logprob: -6.769491195678711
    4. '	' → logprob: -9.019491195678711
    5. '	if' → logprob: -10.894491195678711
    6. ',' → logprob: -11.144491195678711
    7. '	   ' → logprob: -11.394491195678711
    8. '   ' → logprob: -11.769491195678711
    9. '<|end|>' → logprob: -11.769491195678711
    10. '	       ' → logprob: -12.519491195678711

Token 622: ' True' (ID: 6432)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16490696370601654
    2. 'if' → logprob: -2.1649069786071777
    3. '       ' → logprob: -3.2899069786071777
    4. '
' → logprob: -12.53990650177002
    5. '   ' → logprob: -13.53990650177002
    6. '```' → logprob: -13.78990650177002
    7. '        
' → logprob: -14.03990650177002
    8. '           ' → logprob: -15.03990650177002
    9. '        ' → logprob: -15.03990650177002
    10. 'print' → logprob: -15.16490650177002

Token 623: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1232757493853569
    2. 'if' → logprob: -2.3732757568359375
    3. '       ' → logprob: -3.9982757568359375
    4. ' and' → logprob: -5.9982757568359375
    5. ' or' → logprob: -6.8732757568359375
    6. 'and' → logprob: -8.498275756835938
    7. ',' → logprob: -8.873275756835938
    8. '        ' → logprob: -9.248275756835938
    9. ' to' → logprob: -9.623275756835938
    10. '           ' → logprob: -9.748275756835938

Token 624: ' multiple' (ID: 7598)
  Prédit: 'there'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'there' → logprob: -0.8908987641334534
    2. 'multiple' → logprob: -1.3908987045288086
    3. ' there' → logprob: -1.5158987045288086
    4. ' multiple' → logprob: -2.2658987045288086
    5. 'not' → logprob: -5.390898704528809
    6. ' not' → logprob: -5.515898704528809
    7. 'True' → logprob: -6.140898704528809
    8. ' True' → logprob: -6.140898704528809
    9. 'more' → logprob: -6.890898704528809
    10. 'the' → logprob: -6.890898704528809

Token 625: ' valid' (ID: 4529)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.737403392791748
    2. ' top' → logprob: -1.737403392791748
    3. '_possible' → logprob: -1.862403392791748
    4. ' rankings' → logprob: -2.987403392791748
    5. ' orders' → logprob: -3.112403392791748
    6. 'possible' → logprob: -3.237403392791748
    7. ' order' → logprob: -4.362403392791748
    8. 'orders' → logprob: -4.487403392791748
    9. 'top' → logprob: -4.862403392791748
    10. 'rank' → logprob: -5.487403392791748

Token 626: ' rankings' (ID: 47351)
  Prédit: ' rankings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rankings' → logprob: -0.3537657856941223
    2. 'rank' → logprob: -2.2287657260894775
    3. ' top' → logprob: -2.7287657260894775
    4. ' possible' → logprob: -3.3537657260894775
    5. ' orders' → logprob: -3.7287657260894775
    6. '_rank' → logprob: -4.228765964508057
    7. ' order' → logprob: -4.853765964508057
    8. 'orders' → logprob: -4.978765964508057
    9. ' rank' → logprob: -5.103765964508057
    10. 'possible' → logprob: -5.353765964508057

Token 627: ' exist' (ID: 4310)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010999719612300396
    2. ' if' → logprob: -4.76099967956543
    3. ',' → logprob: -6.38599967956543
    4. 'if' → logprob: -7.38599967956543
    5. '):
' → logprob: -10.38599967956543
    6. ')' → logprob: -11.76099967956543
    7. 'def' → logprob: -11.76099967956543
    8. ':
' → logprob: -11.88599967956543
    9. '   ' → logprob: -12.26099967956543
    10. '
' → logprob: -12.63599967956543

Token 628: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001772638875991106
    2. ' if' → logprob: -6.626772403717041
    3. 'if' → logprob: -8.2517728805542
    4. ',' → logprob: -8.8767728805542
    5. '<|end|>' → logprob: -10.7517728805542
    6. '	' → logprob: -11.6267728805542
    7. '   ' → logprob: -12.2517728805542
    8. '	if' → logprob: -13.5017728805542
    9. ':' → logprob: -13.7517728805542
    10. '	   ' → logprob: -13.8767728805542

Token 629: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005832957685925066
    2. ' if' → logprob: -8.12558364868164
    3. 'if' → logprob: -8.25058364868164
    4. '   ' → logprob: -10.62558364868164
    5. '	' → logprob: -14.75058364868164
    6. '<|end|>' → logprob: -14.75058364868164
    7. '	if' → logprob: -15.12558364868164
    8. '	   ' → logprob: -15.37558364868164
    9. '```' → logprob: -16.12558364868164
    10. '      ' → logprob: -16.87558364868164

Token 630: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002839110791683197
    2. '       ' → logprob: -6.252839088439941
    3. ' if' → logprob: -7.002839088439941
    4. 'for' (adapté à ' for') → logprob: -14.252839088439941
    5. 'import' → logprob: -16.127840042114258
    6. '	if' → logprob: -16.627840042114258
    7. '   ' → logprob: -17.002840042114258
    8. '```' → logprob: -17.002840042114258
    9. 'If' → logprob: -18.002840042114258
    10. '	' → logprob: -19.002840042114258

Token 631: ' team' (ID: 3214)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7648070454597473
    2. 'rank' → logprob: -1.2648069858551025
    3. 'team' → logprob: -1.5148069858551025
    4. 'idx' → logprob: -4.139807224273682
    5. 'pos' → logprob: -4.389807224273682
    6. ' i' → logprob: -6.139807224273682
    7. ' rank' → logprob: -7.639807224273682
    8. 'r' → logprob: -8.139806747436523
    9. ' team' → logprob: -8.264806747436523
    10. '   ' → logprob: -8.514806747436523

Token 632: '_idx' (ID: 15257)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017808876931667328
    2. '_index' → logprob: -4.64280891418457
    3. '_idx' → logprob: -5.26780891418457
    4. '_id' → logprob: -6.89280891418457
    5. '_rank' → logprob: -7.01780891418457
    6. 'in' → logprob: -7.51780891418457
    7. '_' → logprob: -8.64280891418457
    8. 'idx' → logprob: -9.76780891418457
    9. 'index' → logprob: -10.14280891418457
    10. 'rank' → logprob: -10.39280891418457

Token 633: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0046310266479849815
    2. 'in' → logprob: -5.379631042480469
    3. ',' → logprob: -11.879631042480469
    4. ' ' → logprob: -12.879631042480469
    5. '	in' → logprob: -14.879631042480469
    6. '_in' → logprob: -15.379631042480469
    7. '   ' → logprob: -15.879631042480469
    8. ' ,' → logprob: -16.37963104248047
    9. '+' → logprob: -16.37963104248047
    10. '  ' → logprob: -16.62963104248047

Token 634: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0013326213229447603
    2. 'range' → logprob: -6.876332759857178
    3. ' order' → logprob: -8.12633228302002
    4. ' range' → logprob: -13.87633228302002
    5. '[' → logprob: -14.25133228302002
    6. 'sorted' → logprob: -14.37633228302002
    7. '(order' → logprob: -14.75133228302002
    8. '   ' → logprob: -15.00133228302002
    9. '	order' → logprob: -15.37633228302002
    10. 'ordered' → logprob: -15.37633228302002

Token 635: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15220050513744354
    2. ':
' → logprob: -2.40220046043396
    3. '+' → logprob: -3.15220046043396
    4. '           ' → logprob: -5.902200698852539
    5. 'print' → logprob: -6.152200698852539
    6. ',' → logprob: -6.527200698852539
    7. '       ' → logprob: -7.152200698852539
    8. ' +' → logprob: -7.652200698852539
    9. ' print' → logprob: -9.527200698852539
    10. '   ' → logprob: -9.652200698852539

Token 636: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7989593148231506
    2. '       ' → logprob: -0.9239593148231506
    3. '           ' → logprob: -1.9239592552185059
    4. ' print' → logprob: -5.048959255218506
    5. '   ' → logprob: -7.548959255218506
    6. '	print' → logprob: -8.923959732055664
    7. '	       ' → logprob: -10.048959732055664
    8. '               ' → logprob: -10.798959732055664
    9. '        
' → logprob: -11.298959732055664
    10. ',' → logprob: -11.298959732055664

Token 637: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0006342819542624056
    2. ' print' → logprob: -7.75063419342041
    3. '           ' → logprob: -8.50063419342041
    4. '       ' → logprob: -16.125635147094727
    5. '   ' → logprob: -16.375635147094727
    6. '	print' → logprob: -17.000635147094727
    7. '               ' → logprob: -17.500635147094727
    8. '```' → logprob: -17.750635147094727
    9. '.print' → logprob: -19.000635147094727
    10. '
' → logprob: -19.250635147094727

Token 638: '(team' (ID: 87989)
  Prédit: '(team'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(team' → logprob: -0.12694711983203888
    2. 'team' → logprob: -2.1269471645355225
    3. ' team' → logprob: -11.126947402954102
    4. '(' → logprob: -12.501947402954102
    5. '(f' → logprob: -14.376947402954102
    6. 'f' → logprob: -17.5019474029541
    7. '_team' → logprob: -18.8769474029541
    8. '.team' → logprob: -19.0019474029541
    9. ' (' → logprob: -19.0019474029541
    10. '(
' → logprob: -19.6269474029541

Token 639: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.01680878922343254
    2. 'x' → logprob: -4.266808986663818
    3. 'dx' → logprob: -6.391808986663818
    4. 'idx' → logprob: -7.891808986663818
    5. 'ex' → logprob: -8.39180850982666
    6. '+' → logprob: -8.51680850982666
    7. '   ' → logprob: -11.01680850982666
    8. '_dx' → logprob: -11.01680850982666
    9. 'd' → logprob: -11.14180850982666
    10. 't' → logprob: -11.39180850982666

Token 640: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20141714811325073
    2. '+' → logprob: -1.7014172077178955
    3. '1' → logprob: -13.701416969299316
    4. '()+' → logprob: -13.701416969299316
    5. ')' → logprob: -14.326416969299316
    6. ' ' → logprob: -14.826416969299316
    7. ')+' → logprob: -15.326416969299316
    8. '   ' → logprob: -15.826416969299316
    9. ',' → logprob: -16.576417922973633
    10. ' plus' → logprob: -16.701417922973633

Token 641: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.875009536743164
    4. '```' → logprob: -18.875009536743164
    5. ')' → logprob: -19.750009536743164
    6. '+' → logprob: -19.875009536743164
    7. '
' → logprob: -20.125009536743164
    8. '`' → logprob: -20.375009536743164
    9. '<|end|>' → logprob: -20.750009536743164
    10. ' +' → logprob: -21.250009536743164

Token 642: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2085587978363037
    2. ',' → logprob: -1.7085587978363037
    3. ',end' → logprob: -4.958559036254883
    4. ' )' → logprob: -10.208559036254883
    5. ' ,' → logprob: -10.583559036254883
    6. 'end' → logprob: -10.958559036254883
    7. '),' → logprob: -12.083559036254883
    8. '<|end|>' → logprob: -12.333559036254883
    9. ',)' → logprob: -12.958559036254883
    10. ')
' → logprob: -13.458559036254883

Token 643: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24528217315673828
    2. 'if' → logprob: -1.6202821731567383
    3. '<|end|>' → logprob: -4.120282173156738
    4. ' if' → logprob: -6.495282173156738
    5. '   ' → logprob: -6.745282173156738
    6. '	' → logprob: -8.370282173156738
    7. '```' → logprob: -8.495282173156738
    8. '	if' → logprob: -9.495282173156738
    9. 'If' → logprob: -10.120282173156738
    10. '<|end|>' → logprob: -10.245282173156738

Token 644: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03992018848657608
    2. '       ' → logprob: -3.2899200916290283
    3. ' if' → logprob: -6.289920330047607
    4. '   ' → logprob: -10.91491985321045
    5. '	if' → logprob: -13.41491985321045
    6. '```' → logprob: -14.28991985321045
    7. '	' → logprob: -14.53991985321045
    8. '           ' → logprob: -15.28991985321045
    9. ' ' → logprob: -15.41491985321045
    10. '	   ' → logprob: -15.53991985321045

Token 645: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.07015661150217056
    2. '('' → logprob: -2.9451565742492676
    3. '("#' → logprob: -5.195156574249268
    4. '(' → logprob: -5.570156574249268
    5. '(m' → logprob: -6.195156574249268
    6. '()' → logprob: -6.820156574249268
    7. '("*' → logprob: -7.195156574249268
    8. '(""' → logprob: -7.570156574249268
    9. '(True' → logprob: -8.195157051086426
    10. '(("' → logprob: -8.445157051086426

Token 646: '1' (ID: 16)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014178323559463024
    2. '1' → logprob: -5.514178276062012
    3. ''' → logprob: -6.139178276062012
    4. 'multiple' → logprob: -6.389178276062012
    5. '"?' → logprob: -6.639178276062012
    6. '0' → logprob: -7.264178276062012
    7. ''m' → logprob: -7.389178276062012
    8. '"M' → logprob: -7.389178276062012
    9. '"A' → logprob: -7.639178276062012
    10. '"No' → logprob: -8.014178276062012

Token 647: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6944126486778259
    2. ' if' → logprob: -0.6944126486778259
    3. '0' → logprob: -6.944412708282471
    4. '"' → logprob: -8.694412231445312
    5. ')' → logprob: -9.444412231445312
    6. ' ' → logprob: -11.319412231445312
    7. ''' → logprob: -11.944412231445312
    8. '1' → logprob: -12.069412231445312
    9. '2' → logprob: -12.444412231445312
    10. 'i' → logprob: -12.569412231445312

Token 648: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.001549737062305212
    2. ' multiple' → logprob: -6.50154972076416
    3. 'not' → logprob: -10.50154972076416
    4. 'multip' → logprob: -10.87654972076416
    5. ' not' → logprob: -14.50154972076416
    6. 'mult' → logprob: -15.87654972076416
    7. 'multi' → logprob: -16.001550674438477
    8. '   ' → logprob: -16.876550674438477
    9. 'ultiple' → logprob: -16.876550674438477
    10. 'm' → logprob: -17.001550674438477

Token 649: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -5.796184723294573e-06
    2. 'possible' → logprob: -12.625005722045898
    3. '_multiple' → logprob: -13.250005722045898
    4. '_' → logprob: -14.500005722045898
    5. ' possible' → logprob: -16.8750057220459
    6. '_pos' → logprob: -17.1250057220459
    7. 'Possible' → logprob: -17.1250057220459
    8. '_p' → logprob: -18.0000057220459
    9. '```' → logprob: -18.2500057220459
    10. 's' → logprob: -18.6250057220459

Token 650: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5759449601173401
    2. 'else' → logprob: -0.8259449601173401
    3. '==' → logprob: -12.825944900512695
    4. ' ' → logprob: -14.075944900512695
    5. '0' → logprob: -14.325944900512695
    6. '	else' → logprob: -14.700944900512695
    7. '```' → logprob: -15.700944900512695
    8. '1' → logprob: -15.950944900512695
    9. '>' → logprob: -16.325944900512695
    10. '
' → logprob: -16.325944900512695

Token 651: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031781906727701426
    2. ' ' → logprob: -5.753178119659424
    3. '2' → logprob: -15.753178596496582
    4. '   ' → logprob: -16.003177642822266
    5. '
' → logprob: -16.940677642822266
    6. '  ' → logprob: -17.065677642822266
    7. ' ' → logprob: -17.503177642822266
    8. ')' → logprob: -17.753177642822266
    9. '```' → logprob: -17.815677642822266
    10. '    ' → logprob: -18.065677642822266

Token 652: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8802491215174086e-05
    2. ' ' → logprob: -10.500028610229492
    3. '2' → logprob: -14.000028610229492
    4. '   ' → logprob: -15.500028610229492
    5. '-' → logprob: -17.187528610229492
    6. '
' → logprob: -17.375028610229492
    7. ')' → logprob: -17.375028610229492
    8. '=' → logprob: -17.625028610229492
    9. '  ' → logprob: -17.687528610229492
    10. '```' → logprob: -17.687528610229492

Token 653: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009311101748608053
    2. '<|end|>' → logprob: -7.000931262969971
    3. '()' → logprob: -12.125930786132812
    4. '())' → logprob: -12.250930786132812
    5. '```' → logprob: -12.750930786132812
    6. ')
' → logprob: -13.250930786132812
    7. ' )' → logprob: -13.250930786132812
    8. '
' → logprob: -13.875930786132812
    9. '<|end|>' → logprob: -14.875930786132812
    10. ')return' → logprob: -15.125930786132812

Token 654: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16030718386173248
    2. 'if' → logprob: -1.9103071689605713
    3. '   ' → logprob: -9.660306930541992
    4. '#' → logprob: -11.910306930541992
    5. '```' → logprob: -12.160306930541992
    6. ' if' → logprob: -12.785306930541992
    7. '<|end|>' → logprob: -13.285306930541992
    8. 'import' → logprob: -13.910306930541992
    9. ' def' → logprob: -14.160306930541992
    10. '    
' → logprob: -14.910306930541992

Token 655: ' Application' (ID: 12493)
  Prédit: 'Ranking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Ranking' → logprob: -0.31050458550453186
    2. 'Main' → logprob: -2.435504674911499
    3. 'Solution' → logprob: -2.560504674911499
    4. 'Tournament' → logprob: -3.560504674911499
    5. 'Runner' → logprob: -3.810504674911499
    6. 'Solver' → logprob: -4.06050443649292
    7. ' Ranking' → logprob: -4.81050443649292
    8. 'Abstract' → logprob: -4.93550443649292
    9. 'Competition' → logprob: -5.18550443649292
    10. 'Rank' → logprob: -6.18550443649292

Token 656: 'Controller' (ID: 2947)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002570481738075614
    2. ':
' → logprob: -9.37525749206543
    3. '():' → logprob: -9.37525749206543
    4. '(' → logprob: -10.12525749206543
    5. '<|end|>' → logprob: -10.75025749206543
    6. '):' → logprob: -12.12525749206543
    7. ' :' → logprob: -12.62525749206543
    8. '(Abstract' → logprob: -12.87525749206543
    9. '>:' → logprob: -13.12525749206543
    10. '```' → logprob: -13.25025749206543

Token 657: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019445802317932248
    2. ':
' → logprob: -6.251944541931152
    3. ' :' → logprob: -12.501944541931152
    4. '(' → logprob: -12.876944541931152
    5. '():' → logprob: -13.001944541931152
    6. '(Abstract' → logprob: -13.626944541931152
    7. ':def' → logprob: -13.751944541931152
    8. '):' → logprob: -14.001944541931152
    9. '<|end|>' → logprob: -14.126944541931152
    10. '   ' → logprob: -14.126944541931152

Token 658: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003348698082845658
    2. ' def' → logprob: -8.625334739685059
    3. 'def' → logprob: -9.375334739685059
    4. 'class' → logprob: -9.875334739685059
    5. '<|end|>' → logprob: -11.500334739685059
    6. ' class' → logprob: -12.625334739685059
    7. '	def' → logprob: -13.250334739685059
    8. ':' → logprob: -14.000334739685059
    9. '<|end|>' → logprob: -14.125334739685059
    10. '```' → logprob: -14.375334739685059

Token 659: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.014167269691824913
    2. ' def' → logprob: -4.264167308807373
    3. '   ' → logprob: -12.514166831970215
    4. 'class' → logprob: -16.01416778564453
    5. '	def' → logprob: -18.76416778564453
    6. '```' → logprob: -20.63916778564453
    7. '__' → logprob: -21.51416778564453
    8. 'import' → logprob: -21.88916778564453
    9. 'de' → logprob: -22.76416778564453
    10. ':def' → logprob: -22.88916778564453

Token 660: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.09588133543729782
    2. ' def' → logprob: -2.595881223678589
    3. '__' → logprob: -4.345881462097168
    4. 'def' → logprob: -5.595881462097168
    5. 'init' → logprob: -9.345881462097168
    6. ' init' → logprob: -9.970881462097168
    7. '___' → logprob: -11.720881462097168
    8. ' ' → logprob: -11.970881462097168
    9. ' ' → logprob: -12.345881462097168
    10. '   ' → logprob: -12.345881462097168

Token 661: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.39810606837272644
    2. '__' → logprob: -1.1481060981750488
    3. ' __' → logprob: -5.023106098175049
    4. 'def' → logprob: -6.648106098175049
    5. '```' → logprob: -7.023106098175049
    6. '_init' → logprob: -7.273106098175049
    7. '   ' → logprob: -7.648106098175049
    8. 'f' → logprob: -7.898106098175049
    9. '__(' → logprob: -9.14810562133789
    10. ' init' → logprob: -9.14810562133789

Token 662: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00010199354437645525
    2. '(self' → logprob: -9.875102043151855
    3. '__' → logprob: -10.000102043151855
    4. '_(' → logprob: -12.500102043151855
    5. '__(
' → logprob: -13.875102043151855
    6. '(' → logprob: -16.50010108947754
    7. '   ' → logprob: -16.62510108947754
    8. 'self' → logprob: -16.87510108947754
    9. '__('' → logprob: -17.50010108947754
    10. '___' → logprob: -17.62510108947754

Token 663: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.968934758333489e-05
    2. ')' → logprob: -9.625069618225098
    3. ' self' → logprob: -13.375069618225098
    4. '(self' → logprob: -14.125069618225098
    5. '):
' → logprob: -14.250069618225098
    6. '   ' → logprob: -15.125069618225098
    7. '	self' → logprob: -15.750069618225098
    8. ')(' → logprob: -16.875070571899414
    9. '):' → logprob: -17.000070571899414
    10. '       ' → logprob: -17.125070571899414

Token 664: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8903868198394775
    2. 'self' → logprob: -1.6403868198394775
    3. '):
' → logprob: -1.6403868198394775
    4. '(self' → logprob: -2.2653868198394775
    5. ',' → logprob: -2.3903868198394775
    6. ')' → logprob: -5.640386581420898
    7. ')(' → logprob: -6.765386581420898
    8. ' self' → logprob: -7.640386581420898
    9. ' (' → logprob: -7.890386581420898
    10. '   ' → logprob: -8.265386581420898

Token 665: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009553017094731331
    2. '       ' → logprob: -4.759552955627441
    3. '   ' → logprob: -7.009552955627441
    4. ' self' → logprob: -10.384552955627441
    5. '
' → logprob: -12.634552955627441
    6. '           ' → logprob: -15.134552955627441
    7. '    ' → logprob: -16.509553909301758
    8. '     ' → logprob: -16.759553909301758
    9. '(self' → logprob: -17.009553909301758
    10. '      ' → logprob: -17.134553909301758

Token 666: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.029958050698041916
    2. '       ' → logprob: -3.5299580097198486
    3. ' self' → logprob: -8.52995777130127
    4. '   ' → logprob: -11.77995777130127
    5. '	self' → logprob: -13.65495777130127
    6. 'def' → logprob: -14.40495777130127
    7. '(self' → logprob: -15.15495777130127
    8. '<|end|>' → logprob: -16.279958724975586
    9. ' ' → logprob: -16.529958724975586
    10. '
' → logprob: -16.654958724975586

Token 667: '.io' (ID: 6249)
  Prédit: '.io'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.io' → logprob: -0.04432918131351471
    2. '.handler' → logprob: -3.7943291664123535
    3. 'io' → logprob: -4.9193291664123535
    4. 'handler' → logprob: -5.2943291664123535
    5. '.rank' → logprob: -5.9193291664123535
    6. '.r' → logprob: -6.0443291664123535
    7. '   ' → logprob: -7.1693291664123535
    8. '.IO' → logprob: -7.4193291664123535
    9. ' =' → logprob: -8.419329643249512
    10. '.input' → logprob: -8.669329643249512

Token 668: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -0.4693288505077362
    2. ' =' → logprob: -1.2193288803100586
    3. '=' → logprob: -2.7193288803100586
    4. 'handler' → logprob: -4.344328880310059
    5. 'Handler' → logprob: -8.344328880310059
    6. '_HANDLER' → logprob: -12.594328880310059
    7. 'h' → logprob: -13.469328880310059
    8. '=_' → logprob: -13.469328880310059
    9. '   ' → logprob: -13.844328880310059
    10. 'andler' → logprob: -13.969328880310059

Token 669: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858771339058876
    2. ' =' → logprob: -3.0485877990722656
    3. '   ' → logprob: -16.423587799072266
    4. ' ' → logprob: -16.548587799072266
    5. '=
' → logprob: -16.673587799072266
    6. '＝' → logprob: -17.798587799072266
    7. ' =
' → logprob: -17.923587799072266
    8. '<|end|>' → logprob: -17.923587799072266
    9. '	' → logprob: -18.298587799072266
    10. '=Request' → logprob: -18.423587799072266

Token 670: ' Ranking' (ID: 91044)
  Prédit: 'Ranking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ranking' → logprob: -0.011083661578595638
    2. ' Ranking' → logprob: -4.511083602905273
    3. 'Rank' → logprob: -10.261083602905273
    4. 'Rating' → logprob: -14.011083602905273
    5. ' ranking' → logprob: -17.511083602905273
    6. ' Rank' → logprob: -17.636083602905273
    7. '   ' → logprob: -19.261083602905273
    8. ' Rating' → logprob: -19.636083602905273
    9. 'Routing' → logprob: -19.761083602905273
    10. 'ranking' → logprob: -21.261083602905273

Token 671: 'IO' (ID: 3982)
  Prédit: 'IO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IO' → logprob: -1.8670179997570813e-05
    2. 'Handler' → logprob: -11.000019073486328
    3. 'I' → logprob: -14.500019073486328
    4. 'io' → logprob: -15.000019073486328
    5. 'IODevice' → logprob: -15.250019073486328
    6. '_IO' → logprob: -15.375019073486328
    7. '(IO' → logprob: -15.750019073486328
    8. 'Input' → logprob: -16.250019073486328
    9. 'O' → logprob: -16.750019073486328
    10. ' IO' → logprob: -17.000019073486328

Token 672: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.0003364158037584275
    2. 'andler' → logprob: -8.000336647033691
    3. 'handler' → logprob: -14.875336647033691
    4. '_Handler' → logprob: -15.250336647033691
    5. ' Handler' → logprob: -15.500336647033691
    6. '_handler' → logprob: -16.500335693359375
    7. '_HANDLER' → logprob: -17.125335693359375
    8. 'and' → logprob: -17.500335693359375
    9. '.Handler' → logprob: -18.125335693359375
    10. 'Handle' → logprob: -18.375335693359375

Token 673: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6122979521751404
    2. '
' → logprob: -0.8622979521751404
    3. '    
' → logprob: -3.362298011779785
    4. '<|end|>' → logprob: -7.612298011779785
    5. 'def' → logprob: -7.987298011779785
    6. '        
' → logprob: -9.487298011779785
    7. '  
' → logprob: -9.862298011779785
    8. ' def' → logprob: -10.737298011779785
    9. '<|end|>' → logprob: -10.987298011779785
    10. '   
' → logprob: -11.362298011779785

Token 674: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21907201409339905
    2. '
' → logprob: -2.344072103500366
    3. 'def' → logprob: -2.469072103500366
    4. ' def' → logprob: -4.844071865081787
    5. '    
' → logprob: -4.969071865081787
    6. '<|end|>' → logprob: -7.094071865081787
    7. '	def' → logprob: -8.594072341918945
    8. '        
' → logprob: -8.969072341918945
    9. '```' → logprob: -9.344072341918945
    10. '<|end|>' → logprob: -10.469072341918945

Token 675: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00028302724240347743
    2. ' def' → logprob: -8.250283241271973
    3. '   ' → logprob: -10.750283241271973
    4. '	def' → logprob: -15.250283241271973
    5. '```' → logprob: -21.125282287597656
    6. '_def' → logprob: -22.125282287597656
    7. 'Def' → logprob: -22.500282287597656
    8. 'de' → logprob: -22.500282287597656
    9. ' ' → logprob: -22.500282287597656
    10. 'ndef' → logprob: -22.750282287597656

Token 676: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.320199877838604e-07
    2. ' def' → logprob: -14.75
    3. '   ' → logprob: -18.875
    4. '	def' → logprob: -21.5
    5. 'Def' → logprob: -25.125
    6. '    
' → logprob: -25.125
    7. '
' → logprob: -25.75
    8. '```' → logprob: -25.75
    9. 'de' → logprob: -26.75
    10. '       ' → logprob: -27.25

Token 677: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.029780110344290733
    2. ' run' → logprob: -3.529780149459839
    3. 'main' → logprob: -11.154780387878418
    4. 'def' → logprob: -12.029780387878418
    5. 'execute' → logprob: -12.279780387878418
    6. ' main' → logprob: -13.154780387878418
    7. 'process' → logprob: -13.904780387878418
    8. 'start' → logprob: -14.029780387878418
    9. ' def' → logprob: -14.904780387878418
    10. '.run' → logprob: -15.904780387878418

Token 678: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.204720582696609e-05
    2. '(' → logprob: -10.000052452087402
    3. 'self' → logprob: -13.125052452087402
    4. '   ' → logprob: -13.125052452087402
    5. ' (' → logprob: -13.625052452087402
    6. '       ' → logprob: -14.125052452087402
    7. '(s' → logprob: -15.250052452087402
    8. '(
' → logprob: -15.625052452087402
    9. '(sel' → logprob: -16.125051498413086
    10. '()' → logprob: -16.375051498413086

Token 679: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14622940123081207
    2. '):
' → logprob: -2.0212295055389404
    3. 'self' → logprob: -6.021229267120361
    4. '       ' → logprob: -7.771229267120361
    5. '(self' → logprob: -7.896229267120361
    6. ')' → logprob: -9.02122974395752
    7. '   ' → logprob: -9.02122974395752
    8. '):
' → logprob: -10.39622974395752
    9. '():' → logprob: -11.14622974395752
    10. '():
' → logprob: -11.39622974395752

Token 680: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006364276050589979
    2. 'self' → logprob: -7.375636577606201
    3. ' self' → logprob: -12.000636100769043
    4. '   ' → logprob: -13.000636100769043
    5. '```' → logprob: -14.875636100769043
    6. '	' → logprob: -15.000636100769043
    7. '(self' → logprob: -15.250636100769043
    8. '()' → logprob: -16.00063705444336
    9. '	self' → logprob: -16.12563705444336
    10. ',' → logprob: -16.12563705444336

Token 681: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.009292268194258213
    2. ' self' → logprob: -5.259292125701904
    3. '       ' → logprob: -5.509292125701904
    4. '   ' → logprob: -14.384292602539062
    5. '	self' → logprob: -15.134292602539062
    6. '
' → logprob: -15.759292602539062
    7. '(self' → logprob: -16.384292602539062
    8. ' ' → logprob: -16.509292602539062
    9. '#' → logprob: -17.509292602539062
    10. '        
' → logprob: -18.009292602539062

Token 682: '.io' (ID: 6249)
  Prédit: '.io'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.io' → logprob: -0.00027968952781520784
    2. '_io' → logprob: -8.750279426574707
    3. '   ' → logprob: -10.375279426574707
    4. ' .' → logprob: -10.500279426574707
    5. '._' → logprob: -11.125279426574707
    6. 'io' → logprob: -11.375279426574707
    7. '.' → logprob: -11.875279426574707
    8. '_.' → logprob: -12.125279426574707
    9. '
' → logprob: -12.375279426574707
    10. '	io' → logprob: -12.375279426574707

Token 683: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -7.896309739408025e-07
    2. 'handler' → logprob: -14.125000953674316
    3. 'Handler' → logprob: -17.75
    4. '_HANDLER' → logprob: -19.125
    5. '_Handler' → logprob: -20.0
    6. 'andler' → logprob: -20.25
    7. '   ' → logprob: -20.375
    8. '_handle' → logprob: -20.875
    9. '       ' → logprob: -21.5
    10. '__' → logprob: -21.5

Token 684: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -1.5048530030981055e-06
    2. 'read' → logprob: -13.500001907348633
    3. '.' → logprob: -18.375001907348633
    4. ' .' → logprob: -18.625001907348633
    5. '.readline' → logprob: -19.875001907348633
    6. '.write' → logprob: -20.000001907348633
    7. '.load' → logprob: -20.750001907348633
    8. ' read' → logprob: -20.750001907348633
    9. '.readlines' → logprob: -20.875001907348633
    10. '   ' → logprob: -21.125001907348633

Token 685: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.128163257315464e-07
    2. 'input' → logprob: -15.125
    3. '_' → logprob: -17.0
    4. '_output' → logprob: -17.875
    5. '_inputs' → logprob: -17.875
    6. '_in' → logprob: -18.125
    7. '__' → logprob: -19.625
    8. 'Input' → logprob: -19.875
    9. '```' → logprob: -19.875
    10. ' _' → logprob: -20.125

Token 686: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07250761240720749
    2. 'order' → logprob: -2.697507619857788
    3. '
' → logprob: -6.197507381439209
    4. 'result' → logprob: -8.697507858276367
    5. 'matches' → logprob: -9.072507858276367
    6. ' order' → logprob: -9.197507858276367
    7. ',' → logprob: -9.572507858276367
    8. 'results' → logprob: -10.447507858276367
    9. '   ' → logprob: -11.447507858276367
    10. '	order' → logprob: -12.197507858276367

Token 687: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27149277925491333
    2. 'model' → logprob: -1.6464927196502686
    3. ' model' → logprob: -3.2714927196502686
    4. 'abstract' → logprob: -5.396492958068848
    5. 'ranking' → logprob: -6.896492958068848
    6. ' abstract' → logprob: -7.271492958068848
    7. '   ' → logprob: -7.521492958068848
    8. ' ranking' → logprob: -8.521492958068848
    9. 'rank' → logprob: -10.521492958068848
    10. '	model' → logprob: -10.896492958068848

Token 688: ' model' (ID: 2359)
  Prédit: 'model'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'model' (adapté à ' model') → logprob: -0.01839469186961651
    2. 'abstract' → logprob: -4.268394470214844
    3. '       ' → logprob: -5.893394470214844
    4. 'ranking' → logprob: -6.643394470214844
    5. 'rank' → logprob: -10.268394470214844
    6. 'solver' → logprob: -10.393394470214844
    7. ' model' → logprob: -10.518394470214844
    8. 'ar' → logprob: -11.143394470214844
    9. 'result' → logprob: -11.143394470214844
    10. 'abs' → logprob: -11.893394470214844

Token 689: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150413408875465
    2. '=' → logprob: -4.018150329589844
    3. '   ' → logprob: -15.268150329589844
    4. ' ' → logprob: -16.143150329589844
    5. '.' → logprob: -16.518150329589844
    6. '_' → logprob: -17.393150329589844
    7. '```' → logprob: -17.643150329589844
    8. '=model' → logprob: -17.768150329589844
    9. '  ' → logprob: -17.893150329589844
    10. '(Abstract' → logprob: -17.893150329589844

Token 690: ' Abstract' (ID: 17413)
  Prédit: 'Abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Abstract' → logprob: -0.20142006874084473
    2. ' Abstract' → logprob: -1.7014200687408447
    3. '(Abstract' → logprob: -12.201419830322266
    4. '<Abstract' → logprob: -13.701419830322266
    5. '_Abstract' → logprob: -14.576419830322266
    6. '   ' → logprob: -17.076419830322266
    7. '\Abstract' → logprob: -17.451419830322266
    8. '.Abstract' → logprob: -17.576419830322266
    9. ' ' → logprob: -17.701419830322266
    10. 'Concrete' → logprob: -18.201419830322266

Token 691: 'Ranking' (ID: 99832)
  Prédit: 'Ranking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ranking' → logprob: -3.128163257315464e-07
    2. 'Rating' → logprob: -16.25
    3. 'ranking' → logprob: -17.0
    4. 'Rank' → logprob: -17.25
    5. ' Ranking' → logprob: -17.875
    6. '-ranking' → logprob: -20.125
    7. ' ranking' → logprob: -20.5
    8. 'Routing' → logprob: -20.75
    9. 'R' → logprob: -21.625
    10. 'Ordering' → logprob: -21.875

Token 692: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -1.9361264946837764e-07
    2. 'model' → logprob: -16.25
    3. ' Model' → logprob: -17.375
    4. 'Mode' → logprob: -18.0
    5. 'odel' → logprob: -18.125
    6. '	Model' → logprob: -18.625
    7. 'Models' → logprob: -19.0
    8. 'Mod' → logprob: -19.5
    9. 'Ranking' → logprob: -19.625
    10. '_Model' → logprob: -19.75

Token 693: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.7968066206085496e-05
    2. '(
' → logprob: -11.500027656555176
    3. '(' → logprob: -11.625027656555176
    4. '       ' → logprob: -11.875027656555176
    5. 'self' → logprob: -13.625027656555176
    6. '(len' → logprob: -14.250027656555176
    7. ' self' → logprob: -19.000028610229492
    8. ' (' → logprob: -19.250028610229492
    9. '```' → logprob: -19.250028610229492
    10. '(
' → logprob: -19.250028610229492

Token 694: '.io' (ID: 6249)
  Prédit: '.io'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.io' → logprob: -0.0015481874579563737
    2. '.n' → logprob: -6.6265482902526855
    3. 'self' → logprob: -8.751547813415527
    4. 'io' → logprob: -11.001547813415527
    5. '   ' → logprob: -11.751547813415527
    6. '```' → logprob: -11.876547813415527
    7. ').' → logprob: -12.251547813415527
    8. 'n' → logprob: -12.251547813415527
    9. '=' → logprob: -12.751547813415527
    10. ' .' → logprob: -12.876547813415527

Token 695: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -0.1141674593091011
    2. '.io' → logprob: -2.4891674518585205
    3. 'self' → logprob: -4.1141676902771
    4. '.n' → logprob: -5.6141676902771
    5. 'handler' → logprob: -6.1141676902771
    6. '.handler' → logprob: -6.4891676902771
    7. '   ' → logprob: -7.8641676902771
    8. ' self' → logprob: -8.739167213439941
    9. '.self' → logprob: -8.989167213439941
    10. '       ' → logprob: -9.739167213439941

Token 696: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -5.5577775128767826e-06
    2. 'n' → logprob: -12.625005722045898
    3. ').' → logprob: -13.750005722045898
    4. ' .' → logprob: -14.250005722045898
    5. '.' → logprob: -15.000005722045898
    6. 'self' → logprob: -16.3750057220459
    7. '
' → logprob: -17.3750057220459
    8. '.m' → logprob: -18.2500057220459
    9. '.self' → logprob: -18.2500057220459
    10. '   ' → logprob: -19.1250057220459

Token 697: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.404745439183898e-05
    2. ',self' → logprob: -10.62503433227539
    3. ' ,' → logprob: -12.12503433227539
    4. '       ' → logprob: -12.87503433227539
    5. 'self' → logprob: -13.62503433227539
    6. '   ' → logprob: -15.12503433227539
    7. ',
' → logprob: -15.50003433227539
    8. '           ' → logprob: -16.75003433227539
    9. '_,' → logprob: -18.50003433227539
    10. 's' → logprob: -19.37503433227539

Token 698: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004079112783074379
    2. ' self' → logprob: -5.504079341888428
    3. '       ' → logprob: -14.62907886505127
    4. '[self' → logprob: -16.129079818725586
    5. '           ' → logprob: -17.004079818725586
    6. '	self' → logprob: -17.254079818725586
    7. '   ' → logprob: -17.504079818725586
    8. '(self' → logprob: -18.254079818725586
    9. '=self' → logprob: -19.254079818725586
    10. ' ' → logprob: -19.879079818725586

Token 699: '.io' (ID: 6249)
  Prédit: '.io'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.io' → logprob: -0.0001434690784662962
    2. '_io' → logprob: -9.875143051147461
    3. 'io' → logprob: -10.000143051147461
    4. '.matches' → logprob: -10.250143051147461
    5. 'matches' → logprob: -12.000143051147461
    6. '.i' → logprob: -13.125143051147461
    7. '	io' → logprob: -13.375143051147461
    8. '_matches' → logprob: -14.625143051147461
    9. ' io' → logprob: -15.250143051147461
    10. '"io' → logprob: -15.375143051147461

Token 700: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -5.796184723294573e-06
    2. 'handler' → logprob: -12.375005722045898
    3. 'Handler' → logprob: -14.375005722045898
    4. 'andler' → logprob: -15.500005722045898
    5. 'matches' → logprob: -15.750005722045898
    6. '_HANDLER' → logprob: -15.750005722045898
    7. 's' → logprob: -16.5000057220459
    8. '_Handler' → logprob: -17.1250057220459
    9. '   ' → logprob: -17.3750057220459
    10. '.Handler' → logprob: -17.8750057220459

Token 701: '.matches' (ID: 64560)
  Prédit: '.matches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.matches' → logprob: -1.5048530030981055e-06
    2. ' .' → logprob: -14.125001907348633
    3. '.' → logprob: -15.250001907348633
    4. 'matches' → logprob: -15.375001907348633
    5. '.match' → logprob: -15.625001907348633
    6. '.mat' → logprob: -17.500001907348633
    7. '.math' → logprob: -18.250001907348633
    8. '.matcher' → logprob: -18.250001907348633
    9. '.m' → logprob: -18.500001907348633
    10. ').' → logprob: -18.750001907348633

Token 702: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07079807668924332
    2. ')' → logprob: -3.07079815864563
    3. '       ' → logprob: -3.82079815864563
    4. ')
' → logprob: -9.94579792022705
    5. '   ' → logprob: -12.94579792022705
    6. '           ' → logprob: -13.69579792022705
    7. ' )
' → logprob: -13.94579792022705
    8. ',' → logprob: -14.32079792022705
    9. '      ' → logprob: -14.44579792022705
    10. ')

' → logprob: -14.69579792022705

Token 703: '       ' (ID: 309)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.47792309522628784
    2. '       ' → logprob: -0.9779230952262878
    3. ' order' → logprob: -5.6029229164123535
    4. 'result' → logprob: -8.977923393249512
    5. '	order' → logprob: -11.977923393249512
    6. '
' → logprob: -12.102923393249512
    7. '(order' → logprob: -12.602923393249512
    8. '```' → logprob: -12.602923393249512
    9. '   ' → logprob: -13.352923393249512
    10. ',' → logprob: -13.477923393249512

Token 704: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' (adapté à ' order') → logprob: -1.259079363080673e-05
    2. ' order' → logprob: -11.500012397766113
    3. 'result' → logprob: -13.000012397766113
    4. '       ' → logprob: -16.00001335144043
    5. '	order' → logprob: -20.87501335144043
    6. 'ordering' → logprob: -22.00001335144043
    7. 'orders' → logprob: -22.12501335144043
    8. '_order' → logprob: -22.37501335144043
    9. '(order' → logprob: -22.37501335144043
    10. '```' → logprob: -22.37501335144043

Token 705: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002036595979006961
    2. ',m' → logprob: -8.500204086303711
    3. ' ,' → logprob: -16.50020408630371
    4. 'multiple' → logprob: -17.50020408630371
    5. ',
' → logprob: -18.50020408630371
    6. 'multip' → logprob: -18.62520408630371
    7. '‌,' → logprob: -19.00020408630371
    8. ',n' → logprob: -19.87520408630371
    9. ',module' → logprob: -19.87520408630371
    10. 'm' → logprob: -20.12520408630371

Token 706: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.029752571135759354
    2. ' multiple' → logprob: -3.529752492904663
    3. 'multip' → logprob: -13.779752731323242
    4. 'possible' → logprob: -15.029752731323242
    5. 'mult' → logprob: -15.529752731323242
    6. 'multi' → logprob: -15.654752731323242
    7. 'mul' → logprob: -16.154752731323242
    8. '_multiple' → logprob: -16.404752731323242
    9. 'Multiple' → logprob: -17.279752731323242
    10. '       ' → logprob: -17.279752731323242

Token 707: ' =' (ID: 314)
  Prédit: '_possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -0.12748150527477264
    2. ' =' → logprob: -2.377481460571289
    3. '=' → logprob: -3.627481460571289
    4. 'possible' → logprob: -8.502481460571289
    5. ',' → logprob: -10.002481460571289
    6. '_' → logprob: -10.627481460571289
    7. '_pos' → logprob: -10.877481460571289
    8. '=_' → logprob: -11.752481460571289
    9. 'Possible' → logprob: -12.502481460571289
    10. '   ' → logprob: -12.502481460571289

Token 708: ' model' (ID: 2359)
  Prédit: 'model'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'model' → logprob: -0.4740805923938751
    2. ' model' → logprob: -0.9740805625915527
    3. '       ' → logprob: -12.849081039428711
    4. 'self' → logprob: -14.849081039428711
    5. '	model' → logprob: -14.849081039428711
    6. ' self' → logprob: -16.47408103942871
    7. '(model' → logprob: -17.09908103942871
    8. '=model' → logprob: -17.59908103942871
    9. '$model' → logprob: -17.97408103942871
    10. '   ' → logprob: -18.34908103942871

Token 709: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -1.8789383830153383e-05
    2. 'solve' → logprob: -11.375019073486328
    3. '.' → logprob: -12.375019073486328
    4. '.sol' → logprob: -14.000019073486328
    5. ' =' → logprob: -14.125019073486328
    6. '.s' → logprob: -14.250019073486328
    7. ' .' → logprob: -14.875019073486328
    8. '.run' → logprob: -16.250019073486328
    9. '=' → logprob: -16.500019073486328
    10. '.resolve' → logprob: -16.500019073486328

Token 710: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012737659562844783
    2. '
' → logprob: -9.000127792358398
    3. '        
' → logprob: -13.500127792358398
    4. 'if' → logprob: -14.750127792358398
    5. ' if' → logprob: -14.750127792358398
    6. 'self' → logprob: -14.750127792358398
    7. '<|end|>' → logprob: -14.750127792358398
    8. '	' → logprob: -15.125127792358398
    9. '           ' → logprob: -15.250127792358398
    10. '```' → logprob: -15.625127792358398

Token 711: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014103548601269722
    2. 'if' → logprob: -6.626410484313965
    3. ' if' → logprob: -9.501410484313965
    4. '<|end|>' → logprob: -12.126410484313965
    5. '```' → logprob: -13.251410484313965
    6. '
' → logprob: -13.751410484313965
    7. '   ' → logprob: -14.501410484313965
    8. '        
' → logprob: -15.501410484313965
    9. '	if' → logprob: -15.876410484313965
    10. '	' → logprob: -16.12640953063965

Token 712: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03065021149814129
    2. 'self' → logprob: -3.5306501388549805
    3. '       ' → logprob: -7.0306501388549805
    4. ' if' → logprob: -11.15565013885498
    5. '```' → logprob: -14.53065013885498
    6. ' self' → logprob: -15.40565013885498
    7. 'If' → logprob: -17.655651092529297
    8. '	if' → logprob: -18.405651092529297
    9. '        
' → logprob: -18.405651092529297
    10. '
' → logprob: -18.530651092529297

Token 713: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.251930296421051
    2. ' order' → logprob: -1.5019302368164062
    3. '       ' → logprob: -14.251930236816406
    4. '	order' → logprob: -15.126930236816406
    5. '(order' → logprob: -16.126930236816406
    6. '   ' → logprob: -17.751930236816406
    7. 'multiple' → logprob: -18.001930236816406
    8. 'not' → logprob: -18.126930236816406
    9. '    ' → logprob: -18.376930236816406
    10. ' multiple' → logprob: -18.376930236816406

Token 714: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.02324605919420719
    2. 'is' → logprob: -3.7732460498809814
    3. '	is' → logprob: -15.148245811462402
    4. ' ' → logprob: -15.898245811462402
    5. ':' → logprob: -16.02324676513672
    6. ')' → logprob: -17.27324676513672
    7. '   ' → logprob: -17.77324676513672
    8. '==' → logprob: -18.39824676513672
    9. ' ' → logprob: -18.52324676513672
    10. '```' → logprob: -18.64824676513672

Token 715: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.47854509949684143
    2. 'None' → logprob: -0.978545069694519
    3. ' not' → logprob: -5.728545188903809
    4. ' None' → logprob: -6.728545188903809
    5. '   ' → logprob: -11.728545188903809
    6. '       ' → logprob: -14.228545188903809
    7. 'Not' → logprob: -14.478545188903809
    8. 'none' → logprob: -14.603545188903809
    9. 'is' → logprob: -15.978545188903809
    10. '	not' → logprob: -16.228544235229492

Token 716: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2822665274143219
    2. ':' → logprob: -1.4072664976119995
    3. ' or' → logprob: -7.407266616821289
    4. '           ' → logprob: -8.032266616821289
    5. '       ' → logprob: -9.282266616821289
    6. ':return' → logprob: -9.657266616821289
    7. ':
' → logprob: -11.282266616821289
    8. '):
' → logprob: -12.657266616821289
    9. ' and' → logprob: -12.657266616821289
    10. 'or' → logprob: -12.782266616821289

Token 717: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005119257839396596
    2. 'print' → logprob: -8.62551212310791
    3. ':' → logprob: -8.87551212310791
    4. ':
' → logprob: -9.12551212310791
    5. '```' → logprob: -10.25051212310791
    6. '       ' → logprob: -10.75051212310791
    7. 'return' → logprob: -12.12551212310791
    8. '
' → logprob: -12.37551212310791
    9. ',' → logprob: -12.62551212310791
    10. ' print' → logprob: -13.12551212310791

Token 718: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003088871017098427
    2. '           ' → logprob: -8.250308990478516
    3. ' print' → logprob: -10.500308990478516
    4. '       ' → logprob: -10.875308990478516
    5. '```' → logprob: -14.500308990478516
    6. '	print' → logprob: -14.625308990478516
    7. '   ' → logprob: -15.500308990478516
    8. 'return' → logprob: -17.625308990478516
    9. 'raise' → logprob: -17.875308990478516
    10. '               ' → logprob: -18.375308990478516

Token 719: ' According' (ID: 16344)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.935296834039036e-06
    2. ' print' → logprob: -13.12500286102295
    3. '       ' → logprob: -14.37500286102295
    4. '           ' → logprob: -15.37500286102295
    5. 'pr' → logprob: -16.750003814697266
    6. 'prin' → logprob: -18.875003814697266
    7. 'raise' → logprob: -19.000003814697266
    8. 'import' → logprob: -19.000003814697266
    9. '	print' → logprob: -19.000003814697266
    10. 'self' → logprob: -19.375003814697266

Token 720: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.10959143936634064
    2. ' to' → logprob: -2.484591484069824
    3. '       ' → logprob: -4.734591484069824
    4. 'ly' → logprob: -4.859591484069824
    5. 'print' → logprob: -6.109591484069824
    6. '        ' → logprob: -7.234591484069824
    7. '           ' → logprob: -7.859591484069824
    8. '#' → logprob: -8.234591484069824
    9. 'for' → logprob: -9.234591484069824
    10. ' print' → logprob: -9.609591484069824

Token 721: ' problem' (ID: 4792)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004126011393964291
    2. ' print' → logprob: -5.754126071929932
    3. '#' → logprob: -7.379126071929932
    4. 'self' → logprob: -8.504125595092773
    5. 'the' → logprob: -9.754125595092773
    6. ' the' → logprob: -10.254125595092773
    7. 'problem' → logprob: -12.254125595092773
    8. '
' → logprob: -12.504125595092773
    9. 'raise' → logprob: -12.879125595092773
    10. '   ' → logprob: -12.879125595092773

Token 722: ' statement' (ID: 9710)
  Prédit: ' statement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' statement' → logprob: -1.120527744293213
    2. 'statement' → logprob: -1.245527744293213
    3. 'description' → logprob: -1.745527744293213
    4. ' description' → logprob: -2.495527744293213
    5. 'spec' → logprob: -3.245527744293213
    6. '           ' → logprob: -3.995527744293213
    7. '       ' → logprob: -4.370527744293213
    8. '   ' → logprob: -4.495527744293213
    9. 'constraints' → logprob: -4.495527744293213
    10. 'requirements' → logprob: -4.620527744293213

Token 723: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6647323369979858
    2. '       ' → logprob: -1.4147323369979858
    3. '           ' → logprob: -1.6647323369979858
    4. ',' → logprob: -3.0397324562072754
    5. ' print' → logprob: -5.289732456207275
    6. '   ' → logprob: -8.664731979370117
    7. '               ' → logprob: -8.789731979370117
    8. '	       ' → logprob: -10.039731979370117
    9. '	print' → logprob: -10.914731979370117
    10. '```' → logprob: -11.039731979370117

Token 724: ' no' (ID: 860)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008216609712690115
    2. ' print' → logprob: -7.250821590423584
    3. '           ' → logprob: -9.125822067260742
    4. '       ' → logprob: -13.125822067260742
    5. '	print' → logprob: -14.750822067260742
    6. '#' → logprob: -15.750822067260742
    7. '               ' → logprob: -16.000822067260742
    8. '   ' → logprob: -17.375822067260742
    9. '-' → logprob: -17.500822067260742
    10. '0' → logprob: -17.500822067260742

Token 725: ' invalid' (ID: 15796)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1075257733464241
    2. 'output' → logprob: -3.3575258255004883
    3. 'valid' → logprob: -3.8575258255004883
    4. ' print' → logprob: -3.8575258255004883
    5. ' valid' → logprob: -4.607525825500488
    6. ' output' → logprob: -4.732525825500488
    7. '       ' → logprob: -7.107525825500488
    8. ' possible' → logprob: -7.107525825500488
    9. 'possible' → logprob: -7.107525825500488
    10. 'order' → logprob: -7.232525825500488

Token 726: ' inputs' (ID: 21963)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7353453040122986
    2. 'ranking' → logprob: -1.2353453636169434
    3. 'order' → logprob: -2.1103453636169434
    4. 'rank' → logprob: -3.2353453636169434
    5. 'output' → logprob: -3.3603453636169434
    6. ' print' → logprob: -4.985345363616943
    7. ' ranking' → logprob: -4.985345363616943
    8. 'result' → logprob: -5.235345363616943
    9. ' order' → logprob: -5.610345363616943
    10. '       ' → logprob: -6.360345363616943

Token 727: ' will' (ID: 738)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5223627686500549
    2. '           ' → logprob: -1.0223627090454102
    3. ',' → logprob: -3.64736270904541
    4. ' or' → logprob: -4.39736270904541
    5. ' and' → logprob: -6.27236270904541
    6. ' will' → logprob: -6.77236270904541
    7. ' is' → logprob: -7.02236270904541
    8. ' are' → logprob: -7.39736270904541
    9. 'or' → logprob: -7.64736270904541
    10. ' should' → logprob: -8.02236270904541

Token 728: ' be' (ID: 413)
  Prédit: 'occur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occur' → logprob: -0.005059060174971819
    2. 'be' → logprob: -5.630059242248535
    3. ' occur' → logprob: -6.755059242248535
    4. 'appear' → logprob: -9.005059242248535
    5. ' be' → logprob: -9.755059242248535
    6. 'print' → logprob: -10.130059242248535
    7. 'h' → logprob: -10.380059242248535
    8. 'exist' → logprob: -11.130059242248535
    9. 'occ' → logprob: -11.630059242248535
    10. '   ' → logprob: -11.755059242248535

Token 729: ' given' (ID: 4335)
  Prédit: 'provided'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'provided' → logprob: -0.38855060935020447
    2. 'given' → logprob: -1.1385506391525269
    3. ' given' → logprob: -7.638550758361816
    4. 'passed' → logprob: -7.888550758361816
    5. 'present' → logprob: -7.888550758361816
    6. ' provided' → logprob: -8.513550758361816
    7. 'handled' → logprob: -10.138550758361816
    8. 'produ' → logprob: -10.263550758361816
    9. 'printed' → logprob: -10.263550758361816
    10. 'output' → logprob: -10.263550758361816

Token 730: ',
' (ID: 412)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007098094210959971
    2. ',' → logprob: -8.125709533691406
    3. 'return' → logprob: -8.125709533691406
    4. 'print' → logprob: -10.000709533691406
    5. '
' → logprob: -10.750709533691406
    6. 'raise' → logprob: -10.750709533691406
    7. '       ' → logprob: -11.500709533691406
    8. ' return' → logprob: -11.625709533691406
    9. '   ' → logprob: -13.125709533691406
    10. ';' → logprob: -13.875709533691406

Token 731: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006364276050589979
    2. '       ' → logprob: -7.750636577606201
    3. '#' → logprob: -8.625636100769043
    4. ' but' → logprob: -11.375636100769043
    5. 'but' → logprob: -11.875636100769043
    6. '   ' → logprob: -12.875636100769043
    7. ' #' → logprob: -13.875636100769043
    8. 'else' → logprob: -14.125636100769043
    9. 'print' → logprob: -14.250636100769043
    10. ',' → logprob: -14.625636100769043

Token 732: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.008746113628149033
    2. 'print' → logprob: -5.508746147155762
    3. '           ' → logprob: -5.758746147155762
    4. 'pass' → logprob: -7.508746147155762
    5. 'return' → logprob: -7.758746147155762
    6. '       ' → logprob: -8.133746147155762
    7. ' #' → logprob: -8.508746147155762
    8. ' pass' → logprob: -11.633746147155762
    9. 'raise' → logprob: -12.008746147155762
    10. '#print' → logprob: -12.508746147155762

Token 733: ' but' (ID: 889)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2830807864665985
    2. '           ' → logprob: -2.033080816268921
    3. 'print' → logprob: -2.908080816268921
    4. 'return' → logprob: -3.158080816268921
    5. '       ' → logprob: -4.033080577850342
    6. ' #' → logprob: -7.908080577850342
    7. ' return' → logprob: -8.7830810546875
    8. '#print' → logprob: -9.1580810546875
    9. 'raise' → logprob: -9.7830810546875
    10. ' print' → logprob: -9.9080810546875

Token 734: ' if' (ID: 538)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06785250455141068
    2. '       ' → logprob: -2.81785249710083
    3. '           ' → logprob: -5.19285249710083
    4. 'else' → logprob: -8.317852973937988
    5. ' #' → logprob: -10.567852973937988
    6. 'print' → logprob: -10.817852973937988
    7. '   ' → logprob: -12.192852973937988
    8. 'we' → logprob: -12.692852973937988
    9. '
' → logprob: -12.817852973937988
    10. '#else' → logprob: -13.442852973937988

Token 735: ' cycle' (ID: 15839)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.7769262194633484
    2. 'not' → logprob: -1.9019262790679932
    3. ' False' → logprob: -2.401926279067993
    4. ' order' → logprob: -2.651926279067993
    5. 'False' → logprob: -2.651926279067993
    6. ' not' → logprob: -3.276926279067993
    7. ' no' → logprob: -3.276926279067993
    8. 'self' → logprob: -4.026926040649414
    9. ' self' → logprob: -4.151926040649414
    10. ' we' → logprob: -4.526926040649414

Token 736: ' or' (ID: 503)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.8619144558906555
    2. ' detected' → logprob: -1.1119143962860107
    3. '_detect' → logprob: -2.1119143962860107
    4. ' is' → logprob: -2.2369143962860107
    5. ' or' → logprob: -4.61191463470459
    6. 'is' → logprob: -5.23691463470459
    7. ' occurs' → logprob: -5.86191463470459
    8. 'or' → logprob: -7.48691463470459
    9. 'Detected' → logprob: -8.11191463470459
    10. 'detect' → logprob: -8.48691463470459

Token 737: ' contradiction' (ID: 133882)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -1.1109774112701416
    2. 'in' → logprob: -1.4859774112701416
    3. 'other' → logprob: -1.8609774112701416
    4. ' multiple' → logprob: -1.9859774112701416
    5. ' other' → logprob: -2.8609774112701416
    6. ' incons' → logprob: -3.2359774112701416
    7. ' no' → logprob: -3.9859774112701416
    8. 'no' → logprob: -4.2359771728515625
    9. 'invalid' → logprob: -5.2359771728515625
    10. 'not' → logprob: -5.8609771728515625

Token 738: ' appears' (ID: 14518)
  Prédit: ' occurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' occurs' → logprob: -0.6311975717544556
    2. 'is' → logprob: -1.6311975717544556
    3. ' is' → logprob: -1.8811975717544556
    4. 'occur' → logprob: -3.881197452545166
    5. 'occ' → logprob: -4.131197452545166
    6. ' happens' → logprob: -4.256197452545166
    7. '           ' → logprob: -4.381197452545166
    8. '   ' → logprob: -4.631197452545166
    9. 's' → logprob: -5.006197452545166
    10. ':' → logprob: -5.006197452545166

Token 739: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3113603889942169
    2. '           ' → logprob: -1.4363603591918945
    3. ':' → logprob: -3.6863603591918945
    4. ':
' → logprob: -5.4363603591918945
    5. ' or' → logprob: -8.561360359191895
    6. ',
' → logprob: -10.061360359191895
    7. '               ' → logprob: -10.811360359191895
    8. '       ' → logprob: -10.936360359191895
    9. ' in' → logprob: -11.436360359191895
    10. '.' → logprob: -11.936360359191895

Token 740: ' fallback' (ID: 66264)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10849843919277191
    2. ' print' → logprob: -2.4834983348846436
    3. '           ' → logprob: -3.9834983348846436
    4. 'return' → logprob: -7.483498573303223
    5. ' return' → logprob: -9.233498573303223
    6. 'raise' → logprob: -10.483498573303223
    7. '       ' → logprob: -10.858498573303223
    8. '               ' → logprob: -11.358498573303223
    9. ' raise' → logprob: -11.858498573303223
    10. 'pass' → logprob: -12.483498573303223

Token 741: ' output' (ID: 4733)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08728799968957901
    2. ':' → logprob: -2.7122879028320312
    3. ' to' → logprob: -4.337287902832031
    4. ',' → logprob: -7.212287902832031
    5. 'to' → logprob: -7.212287902832031
    6. '       ' → logprob: -7.337287902832031
    7. ':
' → logprob: -7.462287902832031
    8. '               ' → logprob: -7.837287902832031
    9. 'print' → logprob: -8.212287902832031
    10. '   ' → logprob: -8.837287902832031

Token 742: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017132731154561043
    2. '()' → logprob: -4.892132759094238
    3. '0' → logprob: -5.892132759094238
    4. '(' → logprob: -6.017132759094238
    5. '       ' → logprob: -6.642132759094238
    6. ',' → logprob: -7.267132759094238
    7. '()
' → logprob: -7.517132759094238
    8. '1' → logprob: -7.767132759094238
    9. ':' → logprob: -8.017132759094238
    10. ' =' → logprob: -8.517132759094238

Token 743: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009093831293284893
    2. '           ' → logprob: -4.884093761444092
    3. '0' → logprob: -7.009093761444092
    4. '-' → logprob: -8.13409423828125
    5. '       ' → logprob: -9.00909423828125
    6. ' print' → logprob: -9.63409423828125
    7. '```' → logprob: -9.88409423828125
    8. '   ' → logprob: -10.88409423828125
    9. '               ' → logprob: -11.88409423828125
    10. ' ' → logprob: -12.25909423828125

Token 744: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001919479575008154
    2. 'for' → logprob: -6.501919269561768
    3. '           ' → logprob: -8.751919746398926
    4. '       ' → logprob: -9.001919746398926
    5. ' print' → logprob: -9.126919746398926
    6. '0' → logprob: -11.001919746398926
    7. '```' → logprob: -12.376919746398926
    8. ' for' → logprob: -12.876919746398926
    9. 'return' → logprob: -13.751919746398926
    10. '	print' → logprob: -14.501919746398926

Token 745: ' Just' (ID: 6214)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007128073368221521
    2. 'for' → logprob: -5.5071282386779785
    3. '0' → logprob: -6.0071282386779785
    4. '-' → logprob: -8.00712776184082
    5. '       ' → logprob: -9.13212776184082
    6. ' print' → logprob: -9.38212776184082
    7. '           ' → logprob: -10.63212776184082
    8. 'pr' → logprob: -11.63212776184082
    9. '```' → logprob: -11.88212776184082
    10. 'prin' → logprob: -12.63212776184082

Token 746: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00030197695014066994
    2. ' print' → logprob: -8.1253023147583
    3. 'return' → logprob: -13.2503023147583
    4. 'for' → logprob: -13.5003023147583
    5. '           ' → logprob: -13.7503023147583
    6. '       ' → logprob: -14.0003023147583
    7. '   ' → logprob: -15.1253023147583
    8. 'pr' → logprob: -15.8753023147583
    9. '
' → logprob: -16.000301361083984
    10. 'prin' → logprob: -16.000301361083984

Token 747: ' any' (ID: 1062)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27451011538505554
    2. '-' → logprob: -1.774510145187378
    3. '(' → logprob: -2.774510145187378
    4. '(-' → logprob: -4.899509906768799
    5. 'print' → logprob: -8.524510383605957
    6. '("' → logprob: -8.899510383605957
    7. ' -' → logprob: -9.149510383605957
    8. '"' → logprob: -10.399510383605957
    9. ' ' → logprob: -10.649510383605957
    10. 'self' → logprob: -10.649510383605957

Token 748: ' permutation' (ID: 135200)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -1.1592384576797485
    2. '1' → logprob: -1.5342384576797485
    3. ' valid' → logprob: -1.6592384576797485
    4. 'team' → logprob: -2.034238338470459
    5. 'order' → logprob: -2.284238338470459
    6. 'existing' → logprob: -4.659238338470459
    7. ' order' → logprob: -5.284238338470459
    8. 'rank' → logprob: -5.284238338470459
    9. '0' → logprob: -5.409238338470459
    10. ' ' → logprob: -5.784238338470459

Token 749: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004884536610916257
    2. 'import' → logprob: -7.75048828125
    3. '       ' → logprob: -10.50048828125
    4. ',' → logprob: -11.50048828125
    5. '
' → logprob: -12.12548828125
    6. '               ' → logprob: -12.50048828125
    7. 'print' → logprob: -13.12548828125
    8. ' for' → logprob: -13.25048828125
    9. 'for' → logprob: -13.25048828125
    10. '		' → logprob: -14.00048828125

Token 750: ' ' (ID: 220)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.5835365056991577
    2. 'return' → logprob: -1.2085365056991577
    3. 'print' → logprob: -2.3335366249084473
    4. '0' → logprob: -4.083536624908447
    5. ' exit' → logprob: -4.083536624908447
    6. ' return' → logprob: -4.708536624908447
    7. '1' → logprob: -6.958536624908447
    8. ' print' → logprob: -6.958536624908447
    9. ' ' → logprob: -7.458536624908447
    10. 'self' → logprob: -7.833536624908447

Token 751: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.509552001953125
    2. 'print' → logprob: -1.134552001953125
    3. 'exit' → logprob: -2.884552001953125
    4. '1' → logprob: -4.384552001953125
    5. 'return' → logprob: -5.259552001953125
    6. ' print' → logprob: -6.634552001953125
    7. 'self' → logprob: -7.259552001953125
    8. ' ' → logprob: -7.384552001953125
    9. ' exit' → logprob: -7.509552001953125
    10. 'then' → logprob: -8.009552001953125

Token 752: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0035815376322716475
    2. '
' → logprob: -5.878581523895264
    3. '       ' → logprob: -7.378581523895264
    4. ',' → logprob: -9.878582000732422
    5. '            
' → logprob: -10.003582000732422
    6. '        
' → logprob: -10.753582000732422
    7. 'import' → logprob: -11.003582000732422
    8. '               ' → logprob: -12.253582000732422
    9. ',
' → logprob: -13.128582000732422
    10. '    
' → logprob: -13.128582000732422

Token 753: ' uniqueness' (ID: 105230)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.06258776783943176
    2. 'multip' → logprob: -3.1875877380371094
    3. 'no' → logprob: -4.312587738037109
    4. 'the' → logprob: -6.062587738037109
    5. 'possible' → logprob: -6.937587738037109
    6. 'ambigu' → logprob: -7.437587738037109
    7. 'uni' → logprob: -7.562587738037109
    8. 'im' → logprob: -8.06258773803711
    9. ' multiple' → logprob: -8.06258773803711
    10. 'print' → logprob: -8.18758773803711

Token 754: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00045736716128885746
    2. '
' → logprob: -7.875457286834717
    3. '       ' → logprob: -9.625457763671875
    4. 'import' → logprob: -12.125457763671875
    5. ',' → logprob: -13.125457763671875
    6. '            
' → logprob: -13.125457763671875
    7. '               ' → logprob: -14.375457763671875
    8. '        
' → logprob: -15.000457763671875
    9. '		' → logprob: -15.500457763671875
    10. '```' → logprob: -15.750457763671875

Token 755: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006838412955403328
    2. '       ' → logprob: -7.375683784484863
    3. '
' → logprob: -9.875683784484863
    4. 'import' → logprob: -13.125683784484863
    5. '               ' → logprob: -13.875683784484863
    6. ',' → logprob: -14.500683784484863
    7. '          ' → logprob: -14.625683784484863
    8. '            
' → logprob: -14.875683784484863
    9. ' for' → logprob: -15.125683784484863
    10. '   ' → logprob: -15.250683784484863

Token 756: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05019085109233856
    2. '           ' → logprob: -3.9251909255981445
    3. 'print' → logprob: -4.3001909255981445
    4. 'order' → logprob: -4.8001909255981445
    5. ' for' → logprob: -5.5501909255981445
    6. 'import' → logprob: -6.0501909255981445
    7. 'from' → logprob: -6.9251909255981445
    8. '       ' → logprob: -8.925190925598145
    9. 'result' → logprob: -11.175190925598145
    10. ' print' → logprob: -11.425190925598145

Token 757: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020473242329899222
    2. 'team' → logprob: -8.750205039978027
    3. ' i' → logprob: -10.000205039978027
    4. 'range' → logprob: -14.375205039978027
    5. '   ' → logprob: -16.75020408630371
    6. ' team' → logprob: -16.87520408630371
    7. 'rank' → logprob: -17.00020408630371
    8. 'x' → logprob: -17.00020408630371
    9. 'idx' → logprob: -17.25020408630371
    10. '	i' → logprob: -17.50020408630371

Token 758: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05500177666544914
    2. 'in' → logprob: -2.930001735687256
    3. ' ' → logprob: -9.805002212524414
    4. ',' → logprob: -10.805002212524414
    5. 'n' → logprob: -10.805002212524414
    6. ' i' → logprob: -12.180002212524414
    7. '	in' → logprob: -12.305002212524414
    8. 'range' → logprob: -12.680002212524414
    9. '  ' → logprob: -12.930002212524414
    10. '   ' → logprob: -13.180002212524414

Token 759: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0028065370861440897
    2. ' range' → logprob: -5.877806663513184
    3. '   ' → logprob: -13.752806663513184
    4. '	range' → logprob: -15.752806663513184
    5. '(range' → logprob: -15.752806663513184
    6. ' ' → logprob: -16.252805709838867
    7. '  ' → logprob: -16.502805709838867
    8. '    ' → logprob: -17.127805709838867
    9. '
' → logprob: -17.377805709838867
    10. 'rang' → logprob: -17.502805709838867

Token 760: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0691269636154175
    2. 'self' → logprob: -1.0691269636154175
    3. '1' → logprob: -1.6941269636154175
    4. '(self' → logprob: -2.069127082824707
    5. '           ' → logprob: -5.819127082824707
    6. ' self' → logprob: -9.194127082824707
    7. '       ' → logprob: -9.194127082824707
    8. '   ' → logprob: -9.944127082824707
    9. '               ' → logprob: -9.944127082824707
    10. '                   ' → logprob: -11.319127082824707

Token 761: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2521263360977173
    2. '1' → logprob: -1.5021263360977173
    3. ' self' → logprob: -8.877126693725586
    4. '           ' → logprob: -10.752126693725586
    5. '       ' → logprob: -11.252126693725586
    6. '   ' → logprob: -11.627126693725586
    7. 'model' → logprob: -12.127126693725586
    8. ' ' → logprob: -13.002126693725586
    9. '(self' → logprob: -13.377126693725586
    10. '               ' → logprob: -14.127126693725586

Token 762: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041577612864784896
    2. ' ,' → logprob: -8.000415802001953
    3. ',self' → logprob: -9.750415802001953
    4. ',
' → logprob: -11.500415802001953
    5. 'self' → logprob: -12.125415802001953
    6. '1' → logprob: -12.500415802001953
    7. '(self' → logprob: -14.000415802001953
    8. '<|end|>' → logprob: -14.500415802001953
    9. '       ' → logprob: -15.750415802001953
    10. 'to' → logprob: -15.875415802001953

Token 763: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005131178768351674
    2. ' self' → logprob: -7.625513076782227
    3. 'model' → logprob: -11.750513076782227
    4. '           ' → logprob: -11.875513076782227
    5. '       ' → logprob: -12.500513076782227
    6. '(self' → logprob: -13.875513076782227
    7. '```' → logprob: -14.000513076782227
    8. '   ' → logprob: -14.125513076782227
    9. 'application' → logprob: -14.250513076782227
    10. '                   ' → logprob: -14.625513076782227

Token 764: '.io' (ID: 6249)
  Prédit: '.io'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.io' → logprob: -0.004563750233501196
    2. 'io' → logprob: -5.754563808441162
    3. '.n' → logprob: -6.879563808441162
    4. 'n' → logprob: -8.379563331604004
    5. 'self' → logprob: -9.629563331604004
    6. '.' → logprob: -11.254563331604004
    7. '.i' → logprob: -11.754563331604004
    8. '	io' → logprob: -12.004563331604004
    9. '.nio' → logprob: -12.129563331604004
    10. '_io' → logprob: -12.629563331604004

Token 765: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -4.596781946020201e-05
    2. 'handler' → logprob: -10.125045776367188
    3. 'Handler' → logprob: -13.375045776367188
    4. '   ' → logprob: -13.625045776367188
    5. '       ' → logprob: -14.250045776367188
    6. '_HANDLER' → logprob: -14.625045776367188
    7. '.handler' → logprob: -14.875045776367188
    8. '           ' → logprob: -15.375045776367188
    9. 'self' → logprob: -15.500045776367188
    10. '._' → logprob: -15.500045776367188

Token 766: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -4.127333340875339e-06
    2. 'n' → logprob: -12.750003814697266
    3. '.' → logprob: -13.750003814697266
    4. ' .' → logprob: -17.500003814697266
    5. '_n' → logprob: -17.500003814697266
    6. '	n' → logprob: -17.625003814697266
    7. '   ' → logprob: -18.125003814697266
    8. '```' → logprob: -19.625003814697266
    9. ' n' → logprob: -20.000003814697266
    10. '.nt' → logprob: -20.125003814697266

Token 767: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01416750717908144
    2. ' +' → logprob: -4.264167308807373
    3. '()+' → logprob: -12.764167785644531
    4. '+self' → logprob: -14.639167785644531
    5. '   ' → logprob: -15.264167785644531
    6. '+
' → logprob: -16.01416778564453
    7. '```' → logprob: -16.01416778564453
    8. ')+' → logprob: -16.63916778564453
    9. '):
' → logprob: -16.63916778564453
    10. '):' → logprob: -17.01416778564453

Token 768: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. ')' → logprob: -16.000001907348633
    4. '```' → logprob: -17.250001907348633
    5. '   ' → logprob: -18.000001907348633
    6. 'self' → logprob: -18.375001907348633
    7. '2' → logprob: -19.500001907348633
    8. '۱' → logprob: -19.625001907348633
    9. '=' → logprob: -19.875001907348633
    10. '`' → logprob: -20.500001907348633

Token 769: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -17.500001907348633
    4. '   ' → logprob: -17.875001907348633
    5. '2' → logprob: -18.875001907348633
    6. ')' → logprob: -18.875001907348633
    7. '=' → logprob: -19.750001907348633
    8. '+' → logprob: -19.750001907348633
    9. '۱' → logprob: -19.750001907348633
    10. 'self' → logprob: -20.250001907348633

Token 770: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0797702968120575
    2. '):
' → logprob: -2.57977032661438
    3. ':' → logprob: -7.454770088195801
    4. ')' → logprob: -8.2047700881958
    5. '):
' → logprob: -10.7047700881958
    6. ':
' → logprob: -12.8297700881958
    7. '       ' → logprob: -14.2047700881958
    8. ',' → logprob: -14.4547700881958
    9. '):

' → logprob: -14.7047700881958
    10. '   ' → logprob: -14.9547700881958

Token 771: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.43962177634239197
    2. ':' → logprob: -1.3146218061447144
    3. ':
' → logprob: -3.314621686935425
    4. '           ' → logprob: -3.564621686935425
    5. 'print' → logprob: -4.064621925354004
    6. ' print' → logprob: -5.689621925354004
    7. '):
' → logprob: -7.439621925354004
    8. '<|end|>' → logprob: -7.689621925354004
    9. ',' → logprob: -8.439621925354004
    10. '):' → logprob: -9.189621925354004

Token 772: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.7848862373502925e-05
    2. ' print' → logprob: -10.500027656555176
    3. '               ' → logprob: -15.375027656555176
    4. '                   ' → logprob: -17.125028610229492
    5. '	print' → logprob: -19.125028610229492
    6. '           ' → logprob: -19.250028610229492
    7. 'self' → logprob: -20.000028610229492
    8. '   ' → logprob: -20.250028610229492
    9. '.print' → logprob: -20.625028610229492
    10. '```' → logprob: -21.250028610229492

Token 773: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00015920029545668513
    2. 'i' → logprob: -8.75015926361084
    3. '(' → logprob: -14.50015926361084
    4. ' i' → logprob: -16.500158309936523
    5. ')i' → logprob: -18.625158309936523
    6. '{i' → logprob: -19.250158309936523
    7. '	i' → logprob: -19.375158309936523
    8. '(f' → logprob: -19.625158309936523
    9. '(
' → logprob: -20.125158309936523
    10. '()' → logprob: -20.375158309936523

Token 774: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2014758139848709
    2. ')
' → logprob: -1.7014758586883545
    3. ')
' → logprob: -9.701476097106934
    4. ')

' → logprob: -14.826476097106934
    5. ' )' → logprob: -15.201476097106934
    6. '   ' → logprob: -15.451476097106934
    7. ' )
' → logprob: -16.451475143432617
    8. ')`
' → logprob: -16.451475143432617
    9. ')`' → logprob: -16.826475143432617
    10. '       ' → logprob: -16.951475143432617

Token 775: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009215848403982818
    2. '0' → logprob: -7.625921726226807
    3. '       ' → logprob: -9.125921249389648
    4. '
' → logprob: -9.250921249389648
    5. 'print' → logprob: -9.250921249389648
    6. '               ' → logprob: -9.750921249389648
    7. '		' → logprob: -10.750921249389648
    8. ',' → logprob: -11.250921249389648
    9. '<|end|>' → logprob: -11.500921249389648
    10. '   ' → logprob: -11.750921249389648

Token 776: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.030563848093152046
    2. '           ' → logprob: -3.5305638313293457
    3. '       ' → logprob: -7.780563831329346
    4. ' print' → logprob: -8.030564308166504
    5. '0' → logprob: -9.655564308166504
    6. 'return' → logprob: -12.405564308166504
    7. '   ' → logprob: -13.905564308166504
    8. '1' → logprob: -15.655564308166504
    9. '	print' → logprob: -15.655564308166504
    10. '7' → logprob: -16.155563354492188

Token 777: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02324605919420719
    2. '(' → logprob: -3.7732460498809814
    3. ' ' → logprob: -14.398245811462402
    4. ' (' → logprob: -17.64824676513672
    5. '('' → logprob: -18.02324676513672
    6. '(
' → logprob: -18.39824676513672
    7. '۰' → logprob: -18.52324676513672
    8. '`' → logprob: -19.14824676513672
    9. '("' → logprob: -19.14824676513672
    10. '```' → logprob: -19.52324676513672

Token 778: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '۰' → logprob: -20.875
    4. '00' → logprob: -21.375
    5. '０' → logprob: -22.25
    6. '   ' → logprob: -22.25
    7. ')' → logprob: -22.5
    8. '٠' → logprob: -23.0
    9. '০' → logprob: -23.125
    10. '`' → logprob: -23.25

Token 779: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028493450372479856
    2. '<|end|>' → logprob: -8.250285148620605
    3. '       ' → logprob: -12.250285148620605
    4. ')
' → logprob: -12.375285148620605
    5. ' )' → logprob: -12.375285148620605
    6. ')return' → logprob: -12.875285148620605
    7. '```' → logprob: -12.875285148620605
    8. '")' → logprob: -13.250285148620605
    9. '')' → logprob: -13.750285148620605
    10. '
' → logprob: -14.125285148620605

Token 780: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10988499224185944
    2. '<|end|>' → logprob: -2.3598849773406982
    3. '           ' → logprob: -4.734885215759277
    4. '<|end|>' → logprob: -8.109885215759277
    5. '   ' → logprob: -8.359885215759277
    6. '```' → logprob: -9.234885215759277
    7. '
' → logprob: -9.484885215759277
    8. ')' → logprob: -10.609885215759277
    9. '        ' → logprob: -10.984885215759277
    10. ' ' → logprob: -11.609885215759277

Token 781: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01657138764858246
    2. 'else' (adapté à ' else') → logprob: -4.141571521759033
    3. ' else' → logprob: -7.641571521759033
    4. '   ' → logprob: -10.391571044921875
    5. '           ' → logprob: -10.891571044921875
    6. '<|end|>' → logprob: -12.516571044921875
    7. '      ' → logprob: -14.391571044921875
    8. '```' → logprob: -14.516571044921875
    9. '	else' → logprob: -14.766571044921875
    10. ' ' → logprob: -14.766571044921875

Token 782: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9139868021011353
    2. '           ' → logprob: -1.0389868021011353
    3. ':
' → logprob: -1.4139868021011353
    4. '       ' → logprob: -6.288986682891846
    5. '   ' → logprob: -9.538987159729004
    6. 'self' → logprob: -10.288987159729004
    7. ':self' → logprob: -10.413987159729004
    8. '	       ' → logprob: -10.663987159729004
    9. '```' → logprob: -11.038987159729004
    10. '          ' → logprob: -11.788987159729004

Token 783: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013594144023954868
    2. '       ' → logprob: -4.638594150543213
    3. 'self' → logprob: -5.638594150543213
    4. ' self' → logprob: -8.888593673706055
    5. '	       ' → logprob: -9.263593673706055
    6. '   ' → logprob: -10.388593673706055
    7. '```' → logprob: -13.013593673706055
    8. '               ' → logprob: -13.638593673706055
    9. '	self' → logprob: -14.013593673706055
    10. ' ' → logprob: -14.013593673706055

Token 784: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0003589416155591607
    2. ' self' → logprob: -8.500358581542969
    3. '           ' → logprob: -9.250358581542969
    4. '       ' → logprob: -9.750358581542969
    5. '   ' → logprob: -14.375358581542969
    6. '	self' → logprob: -15.375358581542969
    7. '               ' → logprob: -15.375358581542969
    8. ' ' → logprob: -17.62535858154297
    9. '(self' → logprob: -19.12535858154297
    10. '[self' → logprob: -20.00035858154297

Token 785: '.io' (ID: 6249)
  Prédit: '.io'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.io' → logprob: -1.7432603272027336e-06
    2. '_io' → logprob: -14.500001907348633
    3. 'io' → logprob: -14.625001907348633
    4. '	io' → logprob: -14.875001907348633
    5. ' .' → logprob: -15.625001907348633
    6. '\.' → logprob: -16.500001907348633
    7. '.ip' → logprob: -17.250001907348633
    8. '.i' → logprob: -17.375001907348633
    9. '.' → logprob: -17.625001907348633
    10. '   ' → logprob: -18.125001907348633

Token 786: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -9.729906196298543e-06
    2. 'handler' → logprob: -11.625009536743164
    3. 'Handler' → logprob: -14.250009536743164
    4. '_HANDLER' → logprob: -17.375009536743164
    5. 'andler' → logprob: -18.750009536743164
    6. 'd' → logprob: -19.000009536743164
    7. '   ' → logprob: -19.250009536743164
    8. '_handle' → logprob: -19.250009536743164
    9. 'h' → logprob: -19.375009536743164
    10. 's' → logprob: -19.375009536743164

Token 787: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -2.339278580620885e-06
    2. 'output' → logprob: -13.000001907348633
    3. '.' → logprob: -18.250001907348633
    4. ' .' → logprob: -19.375001907348633
    5. '	output' → logprob: -21.000001907348633
    6. '.print' → logprob: -21.375001907348633
    7. '.input' → logprob: -21.875001907348633
    8. '.Output' → logprob: -22.000001907348633
    9. '.outputs' → logprob: -22.000001907348633
    10. '$output' → logprob: -22.125001907348633

Token 788: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -3.128163257315464e-07
    2. 'result' → logprob: -15.375
    3. '_RESULT' → logprob: -19.25
    4. '_results' → logprob: -19.625
    5. 'Result' → logprob: -19.75
    6. 's' → logprob: -20.375
    7. '_Result' → logprob: -21.5
    8. '   ' → logprob: -21.625
    9. '       ' → logprob: -22.0
    10. '_res' → logprob: -22.375

Token 789: '(order' (ID: 33050)
  Prédit: '(order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(order' → logprob: -3.128163257315464e-07
    2. '(ord' → logprob: -16.25
    3. '(' → logprob: -16.625
    4. 'order' → logprob: -16.875
    5. '(
' → logprob: -17.875
    6. ' (' → logprob: -18.0
    7. '(Order' → logprob: -19.0
    8. '	order' → logprob: -19.625
    9. '$order' → logprob: -20.125
    10. '/order' → logprob: -20.375

Token 790: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005239921621978283
    2. ',m' → logprob: -5.255239963531494
    3. ' ,' → logprob: -12.005239486694336
    4. ',
' → logprob: -17.880239486694336
    5. 'multiple' → logprob: -19.130239486694336
    6. ' multiple' → logprob: -19.755239486694336
    7. 'multip' → logprob: -20.005239486694336
    8. ',module' → logprob: -20.130239486694336
    9. '           ' → logprob: -20.255239486694336
    10. '   ' → logprob: -20.255239486694336

Token 791: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.023246178403496742
    2. ' multiple' → logprob: -3.7732462882995605
    3. 'multip' → logprob: -14.523245811462402
    4. 'ultiple' → logprob: -16.77324676513672
    5. 'mult' → logprob: -17.39824676513672
    6. '_multiple' → logprob: -17.39824676513672
    7. 'multi' → logprob: -17.77324676513672
    8. 'm' → logprob: -17.77324676513672
    9. 'mul' → logprob: -17.89824676513672
    10. 'Multiple' → logprob: -18.27324676513672

Token 792: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5570885807392187e-05
    2. ')
' → logprob: -12.375015258789062
    3. '       ' → logprob: -12.500015258789062
    4. '())' → logprob: -12.625015258789062
    5. ' )' → logprob: -13.000015258789062
    6. '<|end|>' → logprob: -13.875015258789062
    7. '()' → logprob: -14.875015258789062
    8. ')#' → logprob: -15.875015258789062
    9. ')view' → logprob: -16.250015258789062
    10. ')return' → logprob: -16.625015258789062

Token 793: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.988221684878226e-06
    2. ' if' → logprob: -12.500006675720215
    3. '```' → logprob: -13.375006675720215
    4. 'app' → logprob: -14.250006675720215
    5. '
' → logprob: -14.375006675720215
    6. 'def' → logprob: -15.000006675720215
    7. '<|end|>' → logprob: -17.00000762939453
    8. '#' → logprob: -17.37500762939453
    9. 'If' → logprob: -18.12500762939453
    10. '	if' → logprob: -19.50000762939453

Token 794: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2014281451702118
    2. '__' → logprob: -1.7014281749725342
    3. '_name' → logprob: -11.826428413391113
    4. 'name' → logprob: -12.451428413391113
    5. '_' → logprob: -13.076428413391113
    6. '___' → logprob: -13.826428413391113
    7. ' "__' → logprob: -16.201427459716797
    8. ' ' → logprob: -16.326427459716797
    9. '```' → logprob: -16.576427459716797
    10. '/__' → logprob: -16.576427459716797

Token 795: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.034774892032146454
    2. ' __' → logprob: -3.4097747802734375
    3. ' ==' → logprob: -7.2847747802734375
    4. 'name' → logprob: -8.409774780273438
    5. '==' → logprob: -9.784774780273438
    6. '_' → logprob: -10.034774780273438
    7. '<|end|>' → logprob: -10.659774780273438
    8. '.__' → logprob: -11.284774780273438
    9. '__.__' → logprob: -11.409774780273438
    10. '_name' → logprob: -11.534774780273438

Token 796: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.0100624169572257e-05
    2. '==' → logprob: -10.875020027160645
    3. '__.__' → logprob: -14.125020027160645
    4. ' ==' → logprob: -15.500020027160645
    5. '=="' → logprob: -16.87502098083496
    6. '__.' → logprob: -17.87502098083496
    7. '____' → logprob: -18.00002098083496
    8. '__
' → logprob: -18.25002098083496
    9. '```' → logprob: -18.37502098083496
    10. 'name' → logprob: -18.50002098083496

Token 797: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.022180013358592987
    2. '==' → logprob: -3.8971800804138184
    3. ' ==' → logprob: -7.147180080413818
    4. '=="' → logprob: -7.147180080413818
    5. '__.__' → logprob: -10.39717960357666
    6. '=='' → logprob: -10.77217960357666
    7. '_' → logprob: -12.64717960357666
    8. '__":
' → logprob: -13.39717960357666
    9. '___' → logprob: -13.77217960357666
    10. '==
' → logprob: -13.89717960357666

Token 798: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005243002902716398
    2. ''' → logprob: -5.255242824554443
    3. ' "__' → logprob: -12.130243301391602
    4. '__' → logprob: -12.505243301391602
    5. ' '__' → logprob: -16.8802433013916
    6. '"class' → logprob: -17.3802433013916
    7. '"name' → logprob: -17.5052433013916
    8. '   ' → logprob: -17.6302433013916
    9. ''"' → logprob: -17.7552433013916
    10. '("__' → logprob: -18.0052433013916

Token 799: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00018208740220870823
    2. '__' → logprob: -8.625182151794434
    3. 'name' → logprob: -13.500182151794434
    4. '"' → logprob: -13.875182151794434
    5. 'built' → logprob: -16.500181198120117
    6. ' main' → logprob: -17.375181198120117
    7. '_main' → logprob: -18.000181198120117
    8. ''' → logprob: -18.500181198120117
    9. 'python' → logprob: -18.500181198120117
    10. 'builtin' → logprob: -18.875181198120117

Token 800: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.03008854202926159
    2. '__' → logprob: -3.530088424682617
    3. '__':
' → logprob: -8.155088424682617
    4. '__:' → logprob: -9.905088424682617
    5. '__
' → logprob: -14.905088424682617
    6. '__
' → logprob: -15.780088424682617
    7. ':' → logprob: -16.030088424682617
    8. '__.' → logprob: -16.905088424682617
    9. '":' → logprob: -17.280088424682617
    10. '__["' → logprob: -17.405088424682617

Token 801: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002725821454077959
    2. 'app' → logprob: -7.002725601196289
    3. 'Application' → logprob: -7.252725601196289
    4. 'controller' → logprob: -7.752725601196289
    5. 'ac' → logprob: -8.752725601196289
    6. 'App' → logprob: -9.002725601196289
    7. 'AC' → logprob: -9.127725601196289
    8. 'application' → logprob: -10.127725601196289
    9. ':
' → logprob: -10.252725601196289
    10. '	Application' → logprob: -10.502725601196289

Token 802: ' app' (ID: 1053)
  Prédit: 'Application'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Application' → logprob: -0.5803490281105042
    2. 'app' (adapté à ' app') → logprob: -0.8303490281105042
    3. 'controller' → logprob: -5.955348968505859
    4. 'import' → logprob: -7.080348968505859
    5. 'ctrl' → logprob: -7.830348968505859
    6. 'ac' → logprob: -8.20534896850586
    7. '   ' → logprob: -8.45534896850586
    8. ' app' → logprob: -10.70534896850586
    9. ' Application' → logprob: -10.70534896850586
    10. 'App' → logprob: -11.08034896850586

Token 803: ' =' (ID: 314)
  Prédit: '.run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.41992515325546265
    2. '_controller' → logprob: -1.6699252128601074
    3. '.' → logprob: -2.6699252128601074
    4. '._' → logprob: -3.5449252128601074
    5. '().' → logprob: -3.6699252128601074
    6. '.app' → logprob: -4.794925212860107
    7. '()' → logprob: -5.169925212860107
    8. '_' → logprob: -5.419925212860107
    9. ' =' → logprob: -5.544925212860107
    10. '   ' → logprob: -6.169925212860107

Token 804: ' Application' (ID: 12493)
  Prédit: 'Application'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Application' → logprob: -0.5759425759315491
    2. ' Application' → logprob: -0.8259425759315491
    3. '	Application' → logprob: -12.825942993164062
    4. '<Application' → logprob: -15.200942993164062
    5. 'App' → logprob: -15.825942993164062
    6. ' application' → logprob: -17.075942993164062
    7. '.Application' → logprob: -17.700942993164062
    8. '(Application' → logprob: -18.575942993164062
    9. '_application' → logprob: -19.450942993164062
    10. '\Application' → logprob: -20.325942993164062

Token 805: 'Controller' (ID: 2947)
  Prédit: 'Controller'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Controller' → logprob: -0.002546293195337057
    2. '.run' → logprob: -6.502546310424805
    3. 'app' → logprob: -7.127546310424805
    4. 'controller' → logprob: -8.877546310424805
    5. '.app' → logprob: -9.877546310424805
    6. '@Controller' → logprob: -11.127546310424805
    7. 'run' → logprob: -11.252546310424805
    8. '   ' → logprob: -12.377546310424805
    9. '_controller' → logprob: -12.752546310424805
    10. '(app' → logprob: -12.877546310424805

Token 806: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3648732006549835
    2. '
' → logprob: -1.4898731708526611
    3. 'app' → logprob: -2.614873170852661
    4. '.app' → logprob: -5.23987340927124
    5. '	app' → logprob: -7.11487340927124
    6. '(app' → logprob: -7.73987340927124
    7. '
' → logprob: -8.864872932434082
    8. '    
' → logprob: -8.989872932434082
    9. '@app' → logprob: -8.989872932434082
    10. ' app' → logprob: -9.989872932434082

Token 807: '   ' (ID: 271)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.03859344497323036
    2. '   ' → logprob: -3.2885935306549072
    3. '	app' → logprob: -7.913593292236328
    4. ' app' → logprob: -8.788593292236328
    5. '.app' → logprob: -11.038593292236328
    6. '(app' → logprob: -11.038593292236328
    7. '@app' → logprob: -14.913593292236328
    8. '_app' → logprob: -15.163593292236328
    9. '  ' → logprob: -15.288593292236328
    10. '    
' → logprob: -15.663593292236328

Token 808: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' (adapté à ' app') → logprob: 0.0
    2. ' app' → logprob: -19.5
    3. '	app' → logprob: -25.75
    4. '.app' → logprob: -26.125
    5. '   ' → logprob: -26.5
    6. '(app' → logprob: -27.25
    7. 'application' → logprob: -29.375
    8. '_app' → logprob: -30.0
    9. ''app' → logprob: -30.25
    10. '$app' → logprob: -30.375

Token 809: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.0007104054093360901
    2. '.' → logprob: -7.250710487365723
    3. ' .' → logprob: -15.500710487365723
    4. '.
' → logprob: -15.625710487365723
    5. '.mainloop' → logprob: -17.750709533691406
    6. '.Run' → logprob: -18.000709533691406
    7. 'run' → logprob: -18.375709533691406
    8. ' run' → logprob: -19.375709533691406
    9. '().' → logprob: -19.750709533691406
    10. '	run' → logprob: -19.875709533691406

Token 810: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 808
Tokens correctement prédits (1ère position, stricte): 388
Tokens correctement prédits (1ère position, avec adaptation): 433
Tokens correctement prédits (top 10): 696
Précision stricte (1ère position): 48.02%
Précision adaptée (1ère position): 53.59%
Précision (top 10): 86.14%
================================================================================
