================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:34:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Position:
    __slots__ = ('x', 'y')
    def __init__(self, x:int, y:int): self.x, self.y = x, y
    def __eq__(self, other): return (self.x, self.y) == (other.x, other.y)
    def __hash__(self): return hash((self.x, self.y))
    def __add__(self, other): return Position(self.x + other.x, self.y + other.y)
    def is_within_bounds(self) -> bool: return 0 <= self.x <= 9 and 0 <= self.y <= 9

class JumpSet:
    def __init__(self, deltas):
        self.moves = [Position(dx, dy) for (dx, dy) in deltas]
    def next_positions(self, pos):
        for m in self.moves:
            np = pos + m
            if np.is_within_bounds():
                yield np

class Sprinkler:
    def __init__(self, pos:Position):
        self.pos = pos
        self.coverage = self.calc_coverage()
    def calc_coverage(self):
        # Around position, range is self plus 8 neighbours (up to 9 pos)
        neighbors = [Position(dx, dy) for dx in [-1,0,1] for dy in [-1,0,1]]
        return {self.pos + n for n in neighbors if (self.pos + n).is_within_bounds()}
    def covers(self, pos:Position) -> bool:
        return pos in self.coverage

class SprinklerSequence:
    def __init__(self, sprinklers):
        self.sprinklers = sprinklers
    def length(self): return len(self.sprinklers)
    def sprinkler_at(self, idx): return self.sprinklers[idx]

class PyonkichiMovementModel:
    # Jump pattern fixed as in problem
    def __init__(self):
        # From diagram (b) jump range: manhattan 3 with no intermediate, deltas:
        deltas = [
            (+3,0), (-3,0), (0,+3), (0,-3),
            (+2,+2), (+2,-2), (-2,+2), (-2,-2)
        ]
        self.jumps = JumpSet(deltas)
    def valid_moves(self, pos): return self.jumps.next_positions(pos)

class SurvivalSolver:
    def __init__(self, initial_pos:Position, sprinklers_positions):
        self.initial_pos = initial_pos
        self.sprinkler_seq = SprinklerSequence([Sprinkler(Position(x,y)) for x,y in sprinklers_positions])
        self.movement_model = PyonkichiMovementModel()
        self.cache = {}
    def can_survive(self):
        # We assume a path for p steps (number of sprinklers)
        # State (pos, idx): idx = which sprinkler is running
        # On sprinkler i: pyonkichi must be in coverage of sprinkler i
        # Once sprinkler i stops and i+1 starts,
        # He can jump once to a position that covers next sprinkler i+1 coverage.
        return self._dfs(self.initial_pos, 0, True)
    def _dfs(self, pos, idx, must_jump):
        if idx == self.sprinkler_seq.length():
            # All sprinklers done, survived
            return True
        key = (pos.x, pos.y, idx, must_jump)
        if key in self.cache:
            return self.cache[key]
        current_sprinkler = self.sprinkler_seq.sprinkler_at(idx)
        if must_jump:
            # Must jump once now to a coverage of current sprinkler
            for next_pos in self.movement_model.valid_moves(pos):
                if current_sprinkler.covers(next_pos):
                    # After jump, pyonkichi stays there until sprinkler stops
                    if self._dfs(next_pos, idx, False):
                        self.cache[key] = True
                        return True
            self.cache[key] = False
            return False
        else:
            # Wait until sprinkler stops, check if current pos is covered
            if not current_sprinkler.covers(pos):
                self.cache[key] = False
                return False
            # Next sprinkler starts, must jump once to coverage of next sprinkler or end if last
            result = self._dfs(pos, idx+1, True)
            self.cache[key] = result
            return result

def readints():
    return list(map(int, input().split()))

def main():
    import sys
    inputiter = iter(sys.stdin.read().strip().split('\n'))
    while True:
        try:
            px_py = next(inputiter)
        except StopIteration:
            break
        if not px_py.strip():
            break
        px, py = map(int, px_py.split())
        if px == 0 and py == 0:
            break
        n = int(next(inputiter))
        coords_line = next(inputiter).strip()
        coords = list(map(int, coords_line.split()))
        sprinklers_positions = [(coords[i], coords[i+1]) for i in range(0, 2*n, 2)]
        # According to problem, initial jump is on sprinkler 1 (index 0) start
        # So in model, must_jump=True at idx=0 state
        solver = SurvivalSolver(Position(px, py), sprinklers_positions)
        print("OK" if solver.can_survive() else "NA")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Position' (ID: 21829)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09798231720924377
    2. '(' → logprob: -2.722982406616211
    3. '   ' → logprob: -4.097982406616211
    4. '```' → logprob: -5.347982406616211
    5. '():' → logprob: -6.097982406616211
    6. ' :' → logprob: -7.097982406616211
    7. ' (' → logprob: -7.472982406616211
    8. ' ' → logprob: -8.097982406616211
    9. ':
' → logprob: -8.097982406616211
    10. '(
' → logprob: -8.222982406616211

Token 4: ' __' (ID: 2516)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19873148202896118
    2. '```' → logprob: -2.0737314224243164
    3. 'def' → logprob: -3.8237314224243164
    4. '(' → logprob: -4.448731422424316
    5. '    ' → logprob: -5.073731422424316
    6. ' def' → logprob: -5.823731422424316
    7. '`' → logprob: -6.073731422424316
    8. '_' → logprob: -6.198731422424316
    9. ':' → logprob: -6.323731422424316
    10. '``' → logprob: -6.448731422424316

Token 5: 'slots' (ID: 101916)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.03785635530948639
    2. '_init' → logprob: -3.412856340408325
    3. '_' → logprob: -5.662856578826904
    4. '_pos' → logprob: -8.537856101989746
    5. ' init' → logprob: -8.787856101989746
    6. '_slots' → logprob: -9.537856101989746
    7. 'slots' → logprob: -9.912856101989746
    8. ' _' → logprob: -9.912856101989746
    9. '_str' → logprob: -10.537856101989746
    10. '_x' → logprob: -10.537856101989746

Token 6: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000157293034135364
    2. '__.__' → logprob: -9.625157356262207
    3. '=' → logprob: -10.000157356262207
    4. '__[' → logprob: -11.000157356262207
    5. '__.' → logprob: -11.375157356262207
    6. '__["' → logprob: -11.625157356262207
    7. '___' → logprob: -12.875157356262207
    8. '__('' → logprob: -13.250157356262207
    9. '=['' → logprob: -13.625157356262207
    10. '____' → logprob: -14.375157356262207

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05987432971596718
    2. '__' → logprob: -3.4348742961883545
    3. ' =' → logprob: -3.9348742961883545
    4. '=['' → logprob: -5.559874534606934
    5. '_' → logprob: -7.184874534606934
    6. '[' → logprob: -7.559874534606934
    7. '=[' → logprob: -7.809874534606934
    8. '_=' → logprob: -8.309874534606934
    9. '=[
' → logprob: -9.059874534606934
    10. '=["' → logprob: -9.059874534606934

Token 8: ' ('' (ID: 9906)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15948551893234253
    2. ' ('' → logprob: -3.0344855785369873
    3. ' '__' → logprob: -3.2844855785369873
    4. '('__' → logprob: -3.4094855785369873
    5. ' '' → logprob: -4.534485340118408
    6. '('_' → logprob: -5.409485340118408
    7. '('' → logprob: -5.659485340118408
    8. '['' → logprob: -6.034485340118408
    9. '(' → logprob: -6.284485340118408
    10. ''s' → logprob: -6.534485340118408

Token 9: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05728284642100334
    2. '_x' → logprob: -2.9322829246520996
    3. '__' → logprob: -6.5572829246521
    4. 'latitude' → logprob: -8.307282447814941
    5. '_name' → logprob: -8.432282447814941
    6. 'name' → logprob: -8.807282447814941
    7. '_lat' → logprob: -9.432282447814941
    8. 'value' → logprob: -10.057282447814941
    9. '_id' → logprob: -10.557282447814941
    10. 'row' → logprob: -10.557282447814941

Token 10: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.03400583937764168
    2. ',' → logprob: -3.409005880355835
    3. '')' → logprob: -8.909006118774414
    4. ' ',' → logprob: -9.034006118774414
    5. '','' → logprob: -9.409006118774414
    6. '',
' → logprob: -12.034006118774414
    7. '_',' → logprob: -12.534006118774414
    8. 's' → logprob: -12.784006118774414
    9. ''' → logprob: -13.034006118774414
    10. ','' → logprob: -13.159006118774414

Token 11: ' '' (ID: 461)
  Prédit: ''y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''y' → logprob: -0.14428798854351044
    2. ' y' → logprob: -2.8942880630493164
    3. ''' → logprob: -3.3942880630493164
    4. ' '' → logprob: -3.3942880630493164
    5. 'y' → logprob: -4.519288063049316
    6. '‘y' → logprob: -7.019288063049316
    7. ' ' → logprob: -10.019288063049316
    8. '’y' → logprob: -11.394288063049316
    9. '`' → logprob: -11.894288063049316
    10. ''s' → logprob: -12.644288063049316

Token 12: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.7994282795116305e-05
    2. ' y' → logprob: -10.37504768371582
    3. ''y' → logprob: -11.25004768371582
    4. '   ' → logprob: -13.62504768371582
    5. '_y' → logprob: -13.62504768371582
    6. '‘y' → logprob: -14.62504768371582
    7. ''' → logprob: -15.12504768371582
    8. ')' → logprob: -16.25004768371582
    9. 'y's' → logprob: -16.37504768371582
    10. '')' → logprob: -16.75004768371582

Token 13: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.019515393301844597
    2. '',' → logprob: -4.269515514373779
    3. ')' → logprob: -5.269515514373779
    4. ''' → logprob: -8.644515037536621
    5. '','' → logprob: -12.644515037536621
    6. ',' → logprob: -12.644515037536621
    7. '')
' → logprob: -12.894515037536621
    8. '('' → logprob: -13.644515037536621
    9. '(',' → logprob: -14.144515037536621
    10. '')

' → logprob: -14.144515037536621

Token 14: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.059366147965192795
    2. '   ' → logprob: -3.309366226196289
    3. '\n' → logprob: -4.934366226196289
    4. '    
' → logprob: -5.559366226196289
    5. 'def' → logprob: -6.184366226196289
    6. ',' → logprob: -6.309366226196289
    7. ':' → logprob: -6.559366226196289
    8. '\' → logprob: -7.184366226196289
    9. '```' → logprob: -7.184366226196289
    10. '<|end|>' → logprob: -7.184366226196289

Token 15: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8588073253631592
    2. '
' → logprob: -0.9838073253631592
    3. 'def' (adapté à ' def') → logprob: -2.733807325363159
    4. '    
' → logprob: -3.608807325363159
    5. '\n' → logprob: -3.858807325363159
    6. ':' → logprob: -4.108807563781738
    7. 'x' → logprob: -4.108807563781738
    8. ' def' → logprob: -4.733807563781738
    9. ',' → logprob: -4.858807563781738
    10. '```' → logprob: -5.108807563781738

Token 16: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07062914222478867
    2. ' __' → logprob: -2.945629119873047
    3. '__' → logprob: -5.195629119873047
    4. ' space' → logprob: -6.320629119873047
    5. ' init' → logprob: -6.570629119873047
    6. '<|end|>' → logprob: -6.570629119873047
    7. '  ' → logprob: -6.820629119873047
    8. ' def' → logprob: -6.945629119873047
    9. 'space' → logprob: -7.320629119873047
    10. ')' → logprob: -7.820629119873047

Token 17: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00017076305812224746
    2. 'i' → logprob: -8.750170707702637
    3. 'ini' → logprob: -12.000170707702637
    4. ' init' → logprob: -12.500170707702637
    5. 'in' → logprob: -13.250170707702637
    6. '_init' → logprob: -15.000170707702637
    7. 'int' → logprob: -15.875170707702637
    8. '_i' → logprob: -16.625171661376953
    9. 'inite' → logprob: -17.125171661376953
    10. ' i' → logprob: -17.125171661376953

Token 18: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03912528231739998
    2. '__' → logprob: -3.2891252040863037
    3. '__(
' → logprob: -7.539125442504883
    4. '(' → logprob: -8.039125442504883
    5. '(self' → logprob: -8.914125442504883
    6. '__((' → logprob: -9.914125442504883
    7. '__('' → logprob: -11.164125442504883
    8. '_' → logprob: -11.914125442504883
    9. '__(*' → logprob: -12.039125442504883
    10. '___' → logprob: -12.539125442504883

Token 19: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004311460361350328
    2. ' self' → logprob: -7.750431060791016
    3. ')' → logprob: -15.250431060791016
    4. 'x' → logprob: -16.875431060791016
    5. '   ' → logprob: -16.875431060791016
    6. '(self' → logprob: -17.000431060791016
    7. ' ' → logprob: -17.375431060791016
    8. '       ' → logprob: -18.000431060791016
    9. ',self' → logprob: -19.125431060791016
    10. '0' → logprob: -19.250431060791016

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019308339804410934
    2. ' ,' → logprob: -4.144308567047119
    3. ')' → logprob: -6.394308567047119
    4. 'self' → logprob: -6.769308567047119
    5. '<|end|>' → logprob: -8.644308090209961
    6. ' )' → logprob: -9.019308090209961
    7. ',self' → logprob: -9.894308090209961
    8. ' self' → logprob: -10.394308090209961
    9. ',x' → logprob: -10.894308090209961
    10. ',
' → logprob: -11.269308090209961

Token 21: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4955574572086334
    2. 'self' → logprob: -1.620557427406311
    3. ' x' → logprob: -1.745557427406311
    4. ' self' → logprob: -3.9955575466156006
    5. ')' → logprob: -11.49555778503418
    6. ' ' → logprob: -11.87055778503418
    7. '   ' → logprob: -11.99555778503418
    8. ')x' → logprob: -12.12055778503418
    9. 'position' → logprob: -13.99555778503418
    10. ' )' → logprob: -14.24555778503418

Token 22: ':int' (ID: 30362)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055747535079717636
    2. ')' → logprob: -2.9307475090026855
    3. ' ,' → logprob: -7.5557475090026855
    4. ',)' → logprob: -9.555747985839844
    5. '):' → logprob: -9.680747985839844
    6. ' )' → logprob: -10.055747985839844
    7. '=' → logprob: -10.180747985839844
    8. '<|end|>' → logprob: -10.180747985839844
    9. ',x' → logprob: -10.305747985839844
    10. ':' → logprob: -11.055747985839844

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02673112228512764
    2. ')' → logprob: -4.276731014251709
    3. '):' → logprob: -4.401731014251709
    4. ' ,' → logprob: -8.651731491088867
    5. '<|end|>' → logprob: -11.151731491088867
    6. ',x' → logprob: -11.401731491088867
    7. '   ' → logprob: -12.401731491088867
    8. '):
' → logprob: -12.401731491088867
    9. '),' → logprob: -12.526731491088867
    10. ',int' → logprob: -12.901731491088867

Token 24: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.043156761676073074
    2. 'y' → logprob: -3.168156862258911
    3. ' ' → logprob: -8.918156623840332
    4. ')' → logprob: -11.918156623840332
    5. ' ' → logprob: -12.043156623840332
    6. 'position' → logprob: -13.168156623840332
    7. ' position' → logprob: -13.418156623840332
    8. 'x' → logprob: -13.543156623840332
    9. ' x' → logprob: -13.793156623840332
    10. ' )' → logprob: -13.918156623840332

Token 25: ':int' (ID: 30362)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.42325377464294434
    2. ')' → logprob: -1.2982537746429443
    3. ':' → logprob: -2.6732537746429443
    4. '=' → logprob: -6.298254013061523
    5. ':int' → logprob: -7.673254013061523
    6. ' ):' → logprob: -8.173254013061523
    7. ',' → logprob: -8.548254013061523
    8. ' )' → logprob: -9.298254013061523
    9. ')=' → logprob: -10.423254013061523
    10. '<|end|>' → logprob: -10.798254013061523

Token 26: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011112074367702007
    2. ')' → logprob: -4.511112213134766
    3. '):
' → logprob: -10.136112213134766
    4. ':' → logprob: -11.136112213134766
    5. ',' → logprob: -12.511112213134766
    6. ''):' → logprob: -12.636112213134766
    7. ' ):' → logprob: -13.761112213134766
    8. '),' → logprob: -15.011112213134766
    9. ')->' → logprob: -15.136112213134766
    10. '):

' → logprob: -15.136112213134766

Token 27: ' self' (ID: 1051)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.3819095492362976
    2. '       ' → logprob: -1.6319096088409424
    3. ' ' → logprob: -2.6319096088409424
    4. '    ' → logprob: -4.381909370422363
    5. '<|end|>' → logprob: -4.756909370422363
    6. '   ' → logprob: -4.881909370422363
    7. ')' → logprob: -5.381909370422363
    8. '        
' → logprob: -5.381909370422363
    9. '    
' → logprob: -5.756909370422363
    10. '        ' → logprob: -6.256909370422363

Token 28: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006405997555702925
    2. '.x' → logprob: -7.375640392303467
    3. ' .' → logprob: -11.875640869140625
    4. '.y' → logprob: -13.375640869140625
    5. '<|end|>' → logprob: -14.375640869140625
    6. '.s' → logprob: -14.625640869140625
    7. '<|end|>' → logprob: -14.625640869140625
    8. '.)' → logprob: -14.750640869140625
    9. '.i' → logprob: -14.875640869140625
    10. ').' → logprob: -15.375640869140625

Token 29: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5240569114685059
    2. '=' → logprob: -0.8990569114685059
    3. ' ' → logprob: -7.274056911468506
    4. '.' → logprob: -9.149057388305664
    5. '<|end|>' → logprob: -10.274057388305664
    6. ',' → logprob: -10.399057388305664
    7. '_' → logprob: -10.899057388305664
    8. ')' → logprob: -11.399057388305664
    9. ' =)' → logprob: -11.399057388305664
    10. ' =
' → logprob: -12.274057388305664

Token 30: ' self' (ID: 1051)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.12445146590471268
    2. ' self' → logprob: -2.9994513988494873
    3. 'y' → logprob: -3.3744513988494873
    4. 'self' → logprob: -4.124451637268066
    5. ' ' → logprob: -4.499451637268066
    6. '<|end|>' → logprob: -5.374451637268066
    7. ' ' → logprob: -7.249451637268066
    8. ' position' → logprob: -9.249451637268066
    9. '<|end|>' → logprob: -9.749451637268066
    10. '  ' → logprob: -10.124451637268066

Token 31: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00027706706896424294
    2. '.y' → logprob: -8.750277519226074
    3. '.x' → logprob: -9.625277519226074
    4. '<|end|>' → logprob: -10.500277519226074
    5. '<|end|>' → logprob: -11.125277519226074
    6. ' .' → logprob: -12.625277519226074
    7. '.s' → logprob: -14.000277519226074
    8. ' ' → logprob: -14.250277519226074
    9. '.)' → logprob: -14.500277519226074
    10. '.​' → logprob: -14.500277519226074

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740859866142273
    2. '=' → logprob: -0.9740859866142273
    3. ' ' → logprob: -12.099085807800293
    4. ' =
' → logprob: -13.849085807800293
    5. '<|end|>' → logprob: -14.474085807800293
    6. '=

' → logprob: -14.849085807800293
    7. ',' → logprob: -14.849085807800293
    8. ')' → logprob: -15.724085807800293
    9. ' =(' → logprob: -15.974085807800293
    10. '=
' → logprob: -16.22408676147461

Token 33: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.12694112956523895
    2. 'x' → logprob: -2.126941204071045
    3. ' ' → logprob: -12.126940727233887
    4. '(x' → logprob: -12.501940727233887
    5. ' (' → logprob: -13.001940727233887
    6. ' ' → logprob: -14.001940727233887
    7. '	x' → logprob: -14.251940727233887
    8. '    ' → logprob: -16.376941680908203
    9. ')x' → logprob: -18.001941680908203
    10. ',' → logprob: -18.439441680908203

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008058924227952957
    2. ' ,' → logprob: -4.883059024810791
    3. ',y' → logprob: -7.758059024810791
    4. ',
' → logprob: -11.133058547973633
    5. ' ' → logprob: -13.133058547973633
    6. ' ,
' → logprob: -13.383058547973633
    7. ',x' → logprob: -13.633058547973633
    8. '`,' → logprob: -13.883058547973633
    9. ',

' → logprob: -14.258058547973633
    10. '‌,' → logprob: -14.258058547973633

Token 35: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.25192990899086
    2. 'y' → logprob: -1.5019298791885376
    3. ' ' → logprob: -14.251930236816406
    4. ' ' → logprob: -15.876930236816406
    5. '	y' → logprob: -17.251930236816406
    6. ''y' → logprob: -18.501930236816406
    7. ')y' → logprob: -18.876930236816406
    8. '‘y' → logprob: -19.126930236816406
    9. '_y' → logprob: -19.626930236816406
    10. '```' → logprob: -20.001930236816406

Token 36: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3590444326400757
    2. '
' → logprob: -1.4840444326400757
    3. '<|end|>' → logprob: -2.8590445518493652
    4. ':' → logprob: -5.984044551849365
    5. ',' → logprob: -5.984044551849365
    6. '.
' → logprob: -6.359044551849365
    7. 'newline' → logprob: -6.609044551849365
    8. '' → logprob: -6.609044551849365
    9. '\n' → logprob: -6.859044551849365
    10. ' ' → logprob: -6.984044551849365

Token 37: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23398466408252716
    2. '.' → logprob: -2.4839847087860107
    3. '<|end|>' → logprob: -2.9839847087860107
    4. ':' → logprob: -4.108984470367432
    5. '\n' → logprob: -4.483984470367432
    6. ' 
' → logprob: -5.108984470367432
    7. ' ' → logprob: -5.358984470367432
    8. '   ' → logprob: -5.358984470367432
    9. ',' → logprob: -5.358984470367432
    10. '' → logprob: -5.483984470367432

Token 38: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3638438880443573
    2. '<|end|>' → logprob: -1.4888439178466797
    3. '   ' → logprob: -4.23884391784668
    4. '.' → logprob: -4.36384391784668
    5. ' 
' → logprob: -4.98884391784668
    6. '\n' → logprob: -4.98884391784668
    7. '    
' → logprob: -5.23884391784668
    8. 'def' (adapté à ' def') → logprob: -5.48884391784668
    9. 'newline' → logprob: -5.48884391784668
    10. ' ' → logprob: -5.61384391784668

Token 39: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.025833282619714737
    2. ' __' → logprob: -4.0258331298828125
    3. '_' → logprob: -5.4008331298828125
    4. ' ' → logprob: -6.2758331298828125
    5. ' _' → logprob: -8.275833129882812
    6. '__' → logprob: -8.775833129882812
    7. ' copy' → logprob: -9.150833129882812
    8. '_repr' → logprob: -9.150833129882812
    9. ' .' → logprob: -9.400833129882812
    10. '.' → logprob: -9.650833129882812

Token 40: 'eq' (ID: 21725)
  Prédit: 'repr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.5905749201774597
    2. 'eq' → logprob: -0.8405749201774597
    3. 'get' → logprob: -5.465574741363525
    4. 'init' → logprob: -5.965574741363525
    5. 'str' → logprob: -5.965574741363525
    6. 'r' → logprob: -6.340574741363525
    7. '_' → logprob: -6.715574741363525
    8. 're' → logprob: -7.465574741363525
    9. '_eq' → logprob: -8.090575218200684
    10. 's' → logprob: -8.340575218200684

Token 41: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0035745303612202406
    2. '__(' → logprob: -6.003574371337891
    3. '_' → logprob: -6.878574371337891
    4. '___' → logprob: -10.00357437133789
    5. '__(
' → logprob: -11.62857437133789
    6. '__('' → logprob: -12.37857437133789
    7. '__.__' → logprob: -12.75357437133789
    8. '__((' → logprob: -12.87857437133789
    9. '____' → logprob: -13.37857437133789
    10. '__(*' → logprob: -14.25357437133789

Token 42: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007297091069631279
    2. 'other' → logprob: -7.625729560852051
    3. ' self' → logprob: -8.37572956085205
    4. ')' → logprob: -12.62572956085205
    5. '   ' → logprob: -13.37572956085205
    6. ' ' → logprob: -13.37572956085205
    7. ' other' → logprob: -13.50072956085205
    8. 's' → logprob: -13.75072956085205
    9. '(self' → logprob: -14.25072956085205
    10. ',' → logprob: -14.62572956085205

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004142626188695431
    2. ' ,' → logprob: -5.504142761230469
    3. '__,' → logprob: -10.379142761230469
    4. ',self' → logprob: -11.879142761230469
    5. ',__' → logprob: -11.879142761230469
    6. ')' → logprob: -12.129142761230469
    7. '_,' → logprob: -13.254142761230469
    8. 'self' → logprob: -13.379142761230469
    9. ',p' → logprob: -13.879142761230469
    10. ',s' → logprob: -14.004142761230469

Token 44: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.20230990648269653
    2. 'other' → logprob: -1.7023098468780518
    3. ' o' → logprob: -7.077310085296631
    4. 'o' → logprob: -10.202309608459473
    5. ' oth' → logprob: -11.952309608459473
    6. ' ' → logprob: -12.827309608459473
    7. 'othe' → logprob: -13.452309608459473
    8. 'self' → logprob: -14.077309608459473
    9. 'oth' → logprob: -14.327309608459473
    10. ' position' → logprob: -14.702309608459473

Token 45: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003171294927597046
    2. ')' → logprob: -6.003171443939209
    3. ':' → logprob: -7.753171443939209
    4. ' ):' → logprob: -8.37817096710205
    5. '):
' → logprob: -10.37817096710205
    6. ' )' → logprob: -13.87817096710205
    7. ' ' → logprob: -14.12817096710205
    8. ',' → logprob: -14.12817096710205
    9. '   ' → logprob: -14.25317096710205
    10. '):

' → logprob: -15.37817096710205

Token 46: ' return' (ID: 622)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4402630627155304
    2. ' isinstance' → logprob: -1.315263032913208
    3. ' other' → logprob: -3.190263032913208
    4. ' ' → logprob: -4.190263271331787
    5. ' return' → logprob: -4.440263271331787
    6. '    ' → logprob: -5.190263271331787
    7. ' getattr' → logprob: -5.440263271331787
    8. ' 
' → logprob: -6.065263271331787
    9. ' (' → logprob: -6.065263271331787
    10. 'self' → logprob: -6.440263271331787

Token 47: ' (' (ID: 350)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1931333839893341
    2. 'self' → logprob: -1.8181333541870117
    3. ' isinstance' → logprob: -4.443133354187012
    4. '(self' → logprob: -7.318133354187012
    5. ' (' → logprob: -7.568133354187012
    6. ' ' → logprob: -8.818133354187012
    7. '(' → logprob: -9.318133354187012
    8. ' hasattr' → logprob: -10.193133354187012
    9. ' getattr' → logprob: -10.443133354187012
    10. 'is' → logprob: -10.443133354187012

Token 48: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.013629775494337082
    2. ' self' → logprob: -4.388629913330078
    3. '(self' → logprob: -7.263629913330078
    4. ' isinstance' → logprob: -8.388629913330078
    5. 'is' → logprob: -9.013629913330078
    6. '   ' → logprob: -10.638629913330078
    7. ' ' → logprob: -11.888629913330078
    8. ' (' → logprob: -12.013629913330078
    9. ')' → logprob: -12.013629913330078
    10. 'other' → logprob: -12.138629913330078

Token 49: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5816610455513
    2. '.x' → logprob: -0.8316610455513
    3. ' .' → logprob: -5.331661224365234
    4. ').' → logprob: -7.831661224365234
    5. ' is' → logprob: -8.581661224365234
    6. '.is' → logprob: -9.581661224365234
    7. '.)' → logprob: -10.081661224365234
    8. '.user' → logprob: -10.081661224365234
    9. '.y' → logprob: -10.581661224365234
    10. ')' → logprob: -11.206661224365234

Token 50: ',' (ID: 11)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01198621466755867
    2. '==' → logprob: -4.511986255645752
    3. ',' → logprob: -7.136986255645752
    4. ')' → logprob: -10.136985778808594
    5. ' ,' → logprob: -10.261985778808594
    6. ')==' → logprob: -10.386985778808594
    7. ' ' → logprob: -10.636985778808594
    8. ' )' → logprob: -11.761985778808594
    9. ' ==
' → logprob: -12.636985778808594
    10. ' ' → logprob: -14.636985778808594

Token 51: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2912491261959076
    2. 'self' → logprob: -1.54124915599823
    3. ' other' → logprob: -3.4162490367889404
    4. 'other' → logprob: -5.1662492752075195
    5. ' ' → logprob: -11.54124927520752
    6. ' ' → logprob: -13.04124927520752
    7. '	self' → logprob: -13.54124927520752
    8. '    ' → logprob: -14.54124927520752
    9. '(self' → logprob: -14.54124927520752
    10. ')' → logprob: -15.04124927520752

Token 52: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004154260735958815
    2. '.y' → logprob: -5.754154205322266
    3. '.x' → logprob: -7.004154205322266
    4. '.
' → logprob: -10.879154205322266
    5. '<|end|>' → logprob: -11.004154205322266
    6. ').' → logprob: -11.254154205322266
    7. '.)' → logprob: -12.629154205322266
    8. '.user' → logprob: -13.129154205322266
    9. ' .' → logprob: -13.129154205322266
    10. ')' → logprob: -13.504154205322266

Token 53: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06360535323619843
    2. ' )' → logprob: -2.813605308532715
    3. ')==' → logprob: -6.688605308532715
    4. ' ==' → logprob: -7.938605308532715
    5. '==' → logprob: -10.313605308532715
    6. ' )
' → logprob: -15.188605308532715
    7. ')
' → logprob: -15.563605308532715
    8. '')' → logprob: -15.938605308532715
    9. '    ' → logprob: -16.06360626220703
    10. ',)' → logprob: -16.31360626220703

Token 54: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1003476083278656
    2. '==' → logprob: -2.3503475189208984
    3. ' ==
' → logprob: -10.100347518920898
    4. ')==' → logprob: -10.725347518920898
    5. '==
' → logprob: -11.100347518920898
    6. '=' → logprob: -11.225347518920898
    7. '==(' → logprob: -11.350347518920898
    8. ' ' → logprob: -11.850347518920898
    9. ')' → logprob: -11.850347518920898
    10. ',' → logprob: -12.100347518920898

Token 55: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.005310604348778725
    2. '(other' → logprob: -5.255310535430908
    3. ' other' → logprob: -10.505311012268066
    4. ' ' → logprob: -10.755311012268066
    5. '(' → logprob: -11.005311012268066
    6. 'other' → logprob: -11.505311012268066
    7. '  ' → logprob: -14.255311012268066
    8. ' ' → logprob: -15.255311012268066
    9. '   ' → logprob: -15.630311012268066
    10. ' (
' → logprob: -15.880311012268066

Token 56: 'other' (ID: 2141)
  Prédit: 'other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0070699588395655155
    2. ' other' → logprob: -5.007070064544678
    3. '(other' → logprob: -8.25706958770752
    4. 'o' → logprob: -10.75706958770752
    5. 'othe' → logprob: -10.75706958770752
    6. 'self' → logprob: -10.88206958770752
    7. ' ' → logprob: -11.63206958770752
    8. 'oth' → logprob: -12.25706958770752
    9. ' (' → logprob: -12.50706958770752
    10. ')' → logprob: -12.75706958770752

Token 57: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.008748479187488556
    2. '.' → logprob: -4.758748531341553
    3. ' .' → logprob: -9.258748054504395
    4. ').' → logprob: -10.883748054504395
    5. '.s' → logprob: -12.758748054504395
    6. '.y' → logprob: -12.883748054504395
    7. '`.' → logprob: -13.008748054504395
    8. ''.' → logprob: -13.383748054504395
    9. 'x' → logprob: -13.508748054504395
    10. '".' → logprob: -13.758748054504395

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001756575657054782
    2. ' ,' → logprob: -6.37675666809082
    3. ')' → logprob: -10.62675666809082
    4. ',y' → logprob: -11.00175666809082
    5. '       ' → logprob: -12.75175666809082
    6. '   ' → logprob: -13.00175666809082
    7. ',
' → logprob: -13.12675666809082
    8. '<|end|>' → logprob: -13.87675666809082
    9. ' ' → logprob: -14.00175666809082
    10. '.' → logprob: -14.25175666809082

Token 59: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.029752103611826897
    2. 'other' → logprob: -3.529752016067505
    3. ' ' → logprob: -13.904751777648926
    4. '(other' → logprob: -15.529751777648926
    5. 'self' → logprob: -15.779751777648926
    6. ' self' → logprob: -15.779751777648926
    7. 'Other' → logprob: -16.404752731323242
    8. ' ' → logprob: -16.654752731323242
    9. '.other' → logprob: -17.154752731323242
    10. '_other' → logprob: -17.904752731323242

Token 60: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.008742451667785645
    2. '.' → logprob: -5.008742332458496
    3. ' .' → logprob: -7.258742332458496
    4. '.x' → logprob: -7.508742332458496
    5. ').' → logprob: -7.633742332458496
    6. ')' → logprob: -8.383742332458496
    7. 'y' → logprob: -10.883742332458496
    8. '.)' → logprob: -11.258742332458496
    9. ' ' → logprob: -11.633742332458496
    10. ',' → logprob: -12.883742332458496

Token 61: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.696077227592468e-05
    2. ' )' → logprob: -9.500077247619629
    3. ')return' → logprob: -14.375077247619629
    4. '   ' → logprob: -14.750077247619629
    5. ')
' → logprob: -15.000077247619629
    6. '))' → logprob: -15.500077247619629
    7. ' ' → logprob: -16.125076293945312
    8. '<|end|>' → logprob: -16.375076293945312
    9. '')' → logprob: -16.625076293945312
    10. '`)' → logprob: -16.625076293945312

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5334459543228149
    2. '<|end|>' → logprob: -2.1584458351135254
    3. '
' → logprob: -2.4084458351135254
    4. ' ' → logprob: -2.7834458351135254
    5. ' 
' → logprob: -3.1584458351135254
    6. '\n' → logprob: -3.5334458351135254
    7. '    
' → logprob: -3.7834458351135254
    8. ':' → logprob: -4.158445835113525
    9. '  
' → logprob: -4.408445835113525
    10. '\' → logprob: -5.533445835113525

Token 63: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6490044593811035
    2. '
' → logprob: -1.7740044593811035
    3. '    
' → logprob: -2.2740044593811035
    4. ' 
' → logprob: -3.0240044593811035
    5. ' ' → logprob: -3.2740044593811035
    6. '  
' → logprob: -3.2740044593811035
    7. 'def' (adapté à ' def') → logprob: -3.5240044593811035
    8. ' def' → logprob: -4.2740044593811035
    9. '\n' → logprob: -5.0240044593811035
    10. '\' → logprob: -5.0240044593811035

Token 64: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0014282134361565113
    2. '__' → logprob: -6.626428127288818
    3. ' ' → logprob: -10.001428604125977
    4. ' ' → logprob: -10.126428604125977
    5. ' def' → logprob: -11.626428604125977
    6. 'def' → logprob: -13.126428604125977
    7. ' _' → logprob: -14.126428604125977
    8. 't' → logprob: -14.501428604125977
    9. 'x' → logprob: -14.501428604125977
    10. ' `' → logprob: -14.501428604125977

Token 65: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.49875909090042114
    2. 'repr' → logprob: -1.6237590312957764
    3. 'lt' → logprob: -1.7487590312957764
    4. 'ne' → logprob: -3.8737590312957764
    5. 'str' → logprob: -7.8737592697143555
    6. 'le' → logprob: -8.998759269714355
    7. 'ge' → logprob: -9.873759269714355
    8. 'eq' → logprob: -10.248759269714355
    9. 'init' → logprob: -10.373759269714355
    10. 'gt' → logprob: -10.373759269714355

Token 66: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1768331080675125
    2. '(self' → logprob: -1.926833152770996
    3. '__(' → logprob: -4.801833152770996
    4. ' (' → logprob: -6.051833152770996
    5. '<|end|>' → logprob: -6.176833152770996
    6. '(
' → logprob: -7.301833152770996
    7. '__' → logprob: -7.301833152770996
    8. ')(' → logprob: -7.551833152770996
    9. '__(
' → logprob: -7.676833152770996
    10. '__((' → logprob: -7.801833152770996

Token 67: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.6286106983898208e-05
    2. ' self' → logprob: -11.250016212463379
    3. ')' → logprob: -12.875016212463379
    4. '   ' → logprob: -15.000016212463379
    5. '
' → logprob: -15.750016212463379
    6. ' ' → logprob: -16.500017166137695
    7. 's' → logprob: -16.875017166137695
    8. '(self' → logprob: -17.125017166137695
    9. '0' → logprob: -17.750017166137695
    10. '  ' → logprob: -18.625017166137695

Token 68: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4219715893268585
    2. ')' → logprob: -1.1719715595245361
    3. '):' → logprob: -3.421971559524536
    4. ' ' → logprob: -7.296971797943115
    5. '),' → logprob: -7.921971797943115
    6. ' )' → logprob: -8.671971321105957
    7. '):
' → logprob: -8.921971321105957
    8. '.' → logprob: -8.921971321105957
    9. ').' → logprob: -9.296971321105957
    10. ' ,' → logprob: -9.546971321105957

Token 69: ' return' (ID: 622)
  Prédit: ' hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hash' → logprob: -0.10070013254880905
    2. ' return' → logprob: -2.4757001399993896
    3. 'hash' → logprob: -5.1006999015808105
    4. '    ' → logprob: -6.1006999015808105
    5. ' self' → logprob: -6.2256999015808105
    6. '   ' → logprob: -7.4756999015808105
    7. ' ' → logprob: -8.100700378417969
    8. 'return' → logprob: -8.100700378417969
    9. '(hash' → logprob: -9.475700378417969
    10. ' (' → logprob: -9.725700378417969

Token 70: ' hash' (ID: 10691)
  Prédit: ' hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hash' → logprob: -0.04113946110010147
    2. 'hash' → logprob: -3.2911393642425537
    3. ' self' → logprob: -5.916139602661133
    4. '(hash' → logprob: -8.541139602661133
    5. '   ' → logprob: -9.541139602661133
    6. ' (' → logprob: -9.916139602661133
    7. ' ' → logprob: -10.291139602661133
    8. 'self' → logprob: -10.291139602661133
    9. '  ' → logprob: -12.541139602661133
    10. '    ' → logprob: -13.166139602661133

Token 71: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0063862488605082035
    2. '(' → logprob: -5.1313862800598145
    3. '(self' → logprob: -7.7563862800598145
    4. ' ((' → logprob: -11.006385803222656
    5. ' (' → logprob: -12.006385803222656
    6. '(s' → logprob: -12.881385803222656
    7. '(
' → logprob: -13.006385803222656
    8. '(((' → logprob: -13.506385803222656
    9. ' ' → logprob: -15.506385803222656
    10. '(

' → logprob: -16.381385803222656

Token 72: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.490809417096898e-05
    2. ' self' → logprob: -9.875055313110352
    3. '   ' → logprob: -13.250055313110352
    4. '(self' → logprob: -14.125055313110352
    5. ' ' → logprob: -15.000055313110352
    6. '  ' → logprob: -15.875055313110352
    7. '    ' → logprob: -16.37505531311035
    8. '
' → logprob: -16.37505531311035
    9. '	self' → logprob: -16.87505531311035
    10. '       ' → logprob: -17.62505531311035

Token 73: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0022702778223901987
    2. '.' → logprob: -6.127270221710205
    3. ' .' → logprob: -9.502270698547363
    4. ').' → logprob: -12.502270698547363
    5. ' ' → logprob: -13.252270698547363
    6. '.y' → logprob: -13.752270698547363
    7. '`.' → logprob: -14.127270698547363
    8. 'x' → logprob: -14.252270698547363
    9. '.s' → logprob: -14.627270698547363
    10. '
' → logprob: -14.627270698547363

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.668304245569743e-05
    2. ' ,' → logprob: -10.000046730041504
    3. ',
' → logprob: -14.375046730041504
    4. ',self' → logprob: -15.125046730041504
    5. '‌,' → logprob: -16.000045776367188
    6. ',y' → logprob: -16.250045776367188
    7. '<|end|>' → logprob: -17.125045776367188
    8. ')' → logprob: -17.500045776367188
    9. 'self' → logprob: -17.875045776367188
    10. ' ' → logprob: -18.000045776367188

Token 75: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14271338284015656
    2. ' self' → logprob: -2.0177133083343506
    3. ' ' → logprob: -11.14271354675293
    4. 'y' → logprob: -11.89271354675293
    5. '	self' → logprob: -11.89271354675293
    6. ' ' → logprob: -13.01771354675293
    7. '   ' → logprob: -13.51771354675293
    8. ' y' → logprob: -13.51771354675293
    9. '(self' → logprob: -14.01771354675293
    10. '    ' → logprob: -14.01771354675293

Token 76: '.y' (ID: 4486)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035438310354948044
    2. '.' → logprob: -3.785438299179077
    3. '.y' → logprob: -4.910438537597656
    4. ',y' → logprob: -6.035438537597656
    5. ')' → logprob: -6.660438537597656
    6. ',
' → logprob: -7.285438537597656
    7. '.
' → logprob: -8.535438537597656
    8. ' ,' → logprob: -9.535438537597656
    9. '),' → logprob: -10.160438537597656
    10. '<|end|>' → logprob: -11.160438537597656

Token 77: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.061970822513103485
    2. '))' → logprob: -2.8119707107543945
    3. ')
' → logprob: -13.436970710754395
    4. ' )' → logprob: -14.186970710754395
    5. ')))' → logprob: -14.686970710754395
    6. '))
' → logprob: -15.061970710754395
    7. ' ))' → logprob: -15.936970710754395
    8. '')' → logprob: -16.93697166442871
    9. ''))' → logprob: -17.06197166442871
    10. ' ' → logprob: -17.31197166442871

Token 78: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0984382629394531
    2. '<|end|>' → logprob: -1.2234382629394531
    3. '
' → logprob: -2.098438262939453
    4. ':' → logprob: -2.223438262939453
    5. '   ' → logprob: -3.223438262939453
    6. ' ' → logprob: -3.598438262939453
    7. ')' → logprob: -4.348438262939453
    8. ',' → logprob: -4.473438262939453
    9. ' 
' → logprob: -4.473438262939453
    10. '    
' → logprob: -5.348438262939453

Token 79: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08691629022359848
    2. '   ' → logprob: -3.586916208267212
    3. '<|end|>' → logprob: -4.211916446685791
    4. ' ' → logprob: -4.336916446685791
    5. ' 
' → logprob: -4.836916446685791
    6. ':' → logprob: -5.711916446685791
    7. 'n' → logprob: -6.086916446685791
    8. '    
' → logprob: -6.086916446685791
    9. '.' → logprob: -6.211916446685791
    10. 'newline' → logprob: -6.461916446685791

Token 80: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4396398961544037
    2. ' __' → logprob: -1.064639925956726
    3. ' ' → logprob: -4.939640045166016
    4. ' ​' → logprob: -6.814640045166016
    5. '_' → logprob: -7.314640045166016
    6. ' ‌' → logprob: -7.689640045166016
    7. ' _' → logprob: -7.939640045166016
    8. 'repr' → logprob: -8.064640045166016
    9. '  ' → logprob: -8.564640045166016
    10. ' repr' → logprob: -8.689640045166016

Token 81: 'add' (ID: 964)
  Prédit: 'repr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.010533888824284077
    2. 'lt' → logprob: -5.260533809661865
    3. 'str' → logprob: -5.635533809661865
    4. 'r' → logprob: -6.760533809661865
    5. 'ne' → logprob: -7.885533809661865
    6. 're' → logprob: -10.135534286499023
    7. 'rep' → logprob: -10.135534286499023
    8. 'add' → logprob: -10.260534286499023
    9. 'copy' → logprob: -11.635534286499023
    10. 'iter' → logprob: -11.760534286499023

Token 82: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.5770842432975769
    2. '__' → logprob: -1.0770843029022217
    3. '_' → logprob: -2.7020843029022217
    4. '(' → logprob: -3.5770843029022217
    5. '__(
' → logprob: -7.077084064483643
    6. '(self' → logprob: -7.077084064483643
    7. '__('' → logprob: -7.702084064483643
    8. '_(' → logprob: -8.2020845413208
    9. '__((' → logprob: -8.4520845413208
    10. '<|end|>' → logprob: -8.9520845413208

Token 83: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.36510688066482544
    2. 'other' → logprob: -1.2401068210601807
    3. ' other' → logprob: -4.74010705947876
    4. ' self' → logprob: -4.86510705947876
    5. ' ' → logprob: -10.115106582641602
    6. 'o' → logprob: -11.240106582641602
    7. ')' → logprob: -12.490106582641602
    8. '   ' → logprob: -12.615106582641602
    9. 'Other' → logprob: -12.990106582641602
    10. '(self' → logprob: -13.115106582641602

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7463621497154236
    2. ' ,' → logprob: -0.8713621497154236
    3. ' ' → logprob: -2.7463622093200684
    4. ')' → logprob: -3.4963622093200684
    5. '<|end|>' → logprob: -4.996362209320068
    6. ' )' → logprob: -5.621362209320068
    7. '  ' → logprob: -6.996362209320068
    8. '(' → logprob: -7.246362209320068
    9. ' (' → logprob: -8.12136173248291
    10. '[' → logprob: -8.99636173248291

Token 85: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.06224876269698143
    2. 'other' → logprob: -2.812248706817627
    3. ' o' → logprob: -8.562249183654785
    4. 'o' → logprob: -10.062249183654785
    5. ' ' → logprob: -10.562249183654785
    6. ' oth' → logprob: -11.812249183654785
    7. '(other' → logprob: -12.062249183654785
    8. ' ot' → logprob: -12.812249183654785
    9. '_other' → logprob: -14.312249183654785
    10. ' position' → logprob: -14.437249183654785

Token 86: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006188771687448025
    2. ')' → logprob: -6.006188869476318
    3. ' ):' → logprob: -6.131188869476318
    4. ':' → logprob: -6.631188869476318
    5. '):
' → logprob: -8.88118839263916
    6. ',' → logprob: -9.88118839263916
    7. ' ' → logprob: -11.75618839263916
    8. ' )' → logprob: -11.88118839263916
    9. ' :' → logprob: -13.25618839263916
    10. '   ' → logprob: -13.38118839263916

Token 87: ' return' (ID: 622)
  Prédit: ' Position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Position' → logprob: -0.02568213641643524
    2. ' ' → logprob: -3.775682210922241
    3. 'Position' → logprob: -6.275681972503662
    4. ' 
' → logprob: -8.52568244934082
    5. ' P' → logprob: -8.65068244934082
    6. '(Position' → logprob: -9.90068244934082
    7. ' ' → logprob: -10.40068244934082
    8. ' Pos' → logprob: -10.77568244934082
    9. '    ' → logprob: -11.65068244934082
    10. ' 

' → logprob: -11.65068244934082

Token 88: ' Position' (ID: 21829)
  Prédit: ' Position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Position' → logprob: -0.6327317953109741
    2. 'Position' → logprob: -0.7577317953109741
    3. 'self' → logprob: -10.007731437683105
    4. 'Pos' → logprob: -10.882731437683105
    5. ' ' → logprob: -11.007731437683105
    6. ' self' → logprob: -11.257731437683105
    7. ' ' → logprob: -11.382731437683105
    8. '(Position' → logprob: -12.382731437683105
    9. 'Type' → logprob: -12.507731437683105
    10. '   ' → logprob: -12.757731437683105

Token 89: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016806557541713119
    2. '(self' → logprob: -6.626680850982666
    3. '((' → logprob: -8.501680374145508
    4. '(
' → logprob: -9.251680374145508
    5. '(x' → logprob: -10.751680374145508
    6. '(

' → logprob: -11.001680374145508
    7. '(s' → logprob: -12.001680374145508
    8. '(other' → logprob: -12.626680374145508
    9. '("("' → logprob: -13.751680374145508
    10. '('' → logprob: -13.876680374145508

Token 90: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0022753889206796885
    2. '.x' → logprob: -6.127275466918945
    3. ' .' → logprob: -9.877275466918945
    4. ' ' → logprob: -10.502275466918945
    5. '.
' → logprob: -12.502275466918945
    6. '.y' → logprob: -13.877275466918945
    7. '.s' → logprob: -14.002275466918945
    8. ').' → logprob: -14.377275466918945
    9. ''.' → logprob: -14.502275466918945
    10. '.i' → logprob: -14.502275466918945

Token 91: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5760906338691711
    2. '+' → logprob: -0.8260906338691711
    3. ' ' → logprob: -8.826090812683105
    4. ' ,' → logprob: -13.826090812683105
    5. '+x' → logprob: -13.826090812683105
    6. ' +
' → logprob: -14.201090812683105
    7. ',' → logprob: -15.326090812683105
    8. '+y' → logprob: -15.451090812683105
    9. ' ' → logprob: -15.701090812683105
    10. ' plus' → logprob: -15.826090812683105

Token 92: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.13060759007930756
    2. 'other' → logprob: -2.1306076049804688
    3. ' ' → logprob: -5.630607604980469
    4. ' o' → logprob: -10.505607604980469
    5. '(other' → logprob: -10.755607604980469
    6. 'o' → logprob: -11.255607604980469
    7. ' ' → logprob: -12.005607604980469
    8. ' oth' → logprob: -12.005607604980469
    9. ' 
' → logprob: -12.505607604980469
    10. '_other' → logprob: -13.255607604980469

Token 93: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.048751894384622574
    2. '.x' → logprob: -3.0487518310546875
    3. ' .' → logprob: -9.548751831054688
    4. '<|end|>' → logprob: -10.548751831054688
    5. ').' → logprob: -11.298751831054688
    6. '.y' → logprob: -11.548751831054688
    7. ''.' → logprob: -11.548751831054688
    8. ' ' → logprob: -11.798751831054688
    9. '.
' → logprob: -12.423751831054688
    10. '".' → logprob: -12.673751831054688

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002790935104712844
    2. ')' → logprob: -8.625279426574707
    3. ',
' → logprob: -9.500279426574707
    4. ' ,' → logprob: -11.000279426574707
    5. '<|end|>' → logprob: -12.000279426574707
    6. ',

' → logprob: -14.125279426574707
    7. ',)' → logprob: -15.500279426574707
    8. ' ' → logprob: -15.500279426574707
    9. ',y' → logprob: -16.00027847290039
    10. '‌,' → logprob: -16.37527847290039

Token 95: ' self' (ID: 1051)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.06695941835641861
    2. ' ' → logprob: -3.1919593811035156
    3. 'other' → logprob: -3.8169593811035156
    4. ' 
' → logprob: -7.066959381103516
    5. ' ' → logprob: -8.441959381103516
    6. ' self' → logprob: -8.816959381103516
    7. ')' → logprob: -9.441959381103516
    8. ''' → logprob: -9.441959381103516
    9. 'Other' → logprob: -9.691959381103516
    10. '"' → logprob: -10.066959381103516

Token 96: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.043058112263679504
    2. '.y' → logprob: -3.168058156967163
    3. '.x' → logprob: -10.418058395385742
    4. ')' → logprob: -11.668058395385742
    5. '<|end|>' → logprob: -12.043058395385742
    6. '.
' → logprob: -12.168058395385742
    7. ').' → logprob: -12.793058395385742
    8. '.)' → logprob: -13.668058395385742
    9. ' .' → logprob: -13.668058395385742
    10. '<|end|>' → logprob: -14.168058395385742

Token 97: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.023781340569257736
    2. '+' → logprob: -3.7737812995910645
    3. ')' → logprob: -7.6487812995910645
    4. ' )' → logprob: -10.273781776428223
    5. '+)' → logprob: -11.398781776428223
    6. ' +
' → logprob: -11.648781776428223
    7. '<|end|>' → logprob: -13.148781776428223
    8. ' ' → logprob: -13.398781776428223
    9. ' ' → logprob: -14.523781776428223
    10. ')+' → logprob: -15.523781776428223

Token 98: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.3133685290813446
    2. 'other' → logprob: -1.313368558883667
    3. ' ' → logprob: -9.438368797302246
    4. '1' → logprob: -10.688368797302246
    5. '(other' → logprob: -12.813368797302246
    6. '_other' → logprob: -15.063368797302246
    7. ' oth' → logprob: -15.188368797302246
    8. '0' → logprob: -15.313368797302246
    9. ' ' → logprob: -15.438368797302246
    10. '.other' → logprob: -15.688368797302246

Token 99: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.006109028588980436
    2. '.' → logprob: -5.381109237670898
    3. 'y' → logprob: -6.881109237670898
    4. ')' → logprob: -8.006109237670898
    5. ' .' → logprob: -9.756109237670898
    6. '<|end|>' → logprob: -10.631109237670898
    7. ' y' → logprob: -10.881109237670898
    8. ').' → logprob: -12.006109237670898
    9. ' ' → logprob: -12.131109237670898
    10. '	y' → logprob: -12.256109237670898

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -13.875001907348633
    3. ' )' → logprob: -14.625001907348633
    4. ')return' → logprob: -17.375001907348633
    5. '))' → logprob: -18.625001907348633
    6. ')

' → logprob: -18.750001907348633
    7. '')' → logprob: -19.375001907348633
    8. '<|end|>' → logprob: -19.750001907348633
    9. ')`' → logprob: -20.250001907348633
    10. '),' → logprob: -20.625001907348633

Token 101: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0391513109207153
    2. '<|end|>' → logprob: -1.4141513109207153
    3. ' 
' → logprob: -2.164151191711426
    4. '   ' → logprob: -2.539151191711426
    5. '\n' → logprob: -2.914151191711426
    6. ' ' → logprob: -2.914151191711426
    7. '    
' → logprob: -3.289151191711426
    8. '  
' → logprob: -3.789151191711426
    9. ':' → logprob: -4.789151191711426
    10. '\' → logprob: -5.414151191711426

Token 102: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.9449160695075989
    2. '   ' → logprob: -1.194916009902954
    3. '
' → logprob: -2.194916009902954
    4. ':' → logprob: -2.944916009902954
    5. '\n' → logprob: -2.944916009902954
    6. ' ' → logprob: -3.444916009902954
    7. ' def' → logprob: -3.694916009902954
    8. '    
' → logprob: -5.194916248321533
    9. '\' → logprob: -5.694916248321533
    10. ':
' → logprob: -5.819916248321533

Token 103: ' is' (ID: 382)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0034273394849151373
    2. ' ' → logprob: -5.878427505493164
    3. '__' → logprob: -7.878427505493164
    4. ' ' → logprob: -8.628427505493164
    5. '_' → logprob: -10.878427505493164
    6. ' _' → logprob: -12.128427505493164
    7. ' def' → logprob: -12.128427505493164
    8. '_repr' → logprob: -12.253427505493164
    9. ' `' → logprob: -12.628427505493164
    10. '1' → logprob: -12.878427505493164

Token 104: '_with' (ID: 14161)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15108558535575867
    2. '_valid' → logprob: -2.151085615158081
    3. ' _' → logprob: -4.276085376739502
    4. '_inside' → logprob: -5.151085376739502
    5. '_adj' → logprob: -6.651085376739502
    6. '_in' → logprob: -7.276085376739502
    7. '_a' → logprob: -7.526085376739502
    8. ' ' → logprob: -8.40108585357666
    9. '_horizontal' → logprob: -8.90108585357666
    10. '_with' → logprob: -8.90108585357666

Token 105: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2951327860355377
    2. 'ith' → logprob: -1.6701327562332153
    3. '_in' → logprob: -3.420132875442505
    4. 'hin' → logprob: -3.670132875442505
    5. 'thin' → logprob: -6.295132637023926
    6. 'ihin' → logprob: -6.420132637023926
    7. '```' → logprob: -7.045132637023926
    8. '
' → logprob: -7.295132637023926
    9. 'itin' → logprob: -7.295132637023926
    10. '   ' → logprob: -7.670132637023926

Token 106: '_bounds' (ID: 90408)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.38463330268859863
    2. '(' → logprob: -1.2596333026885986
    3. '_bounds' → logprob: -3.3846333026885986
    4. '<|end|>' → logprob: -7.3846330642700195
    5. '(
' → logprob: -8.13463306427002
    6. ' (' → logprob: -9.00963306427002
    7. '_area' → logprob: -9.38463306427002
    8. '_rectangle' → logprob: -9.75963306427002
    9. 'self' → logprob: -9.88463306427002
    10. '(x' → logprob: -10.13463306427002

Token 107: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1612619161605835
    2. '(' → logprob: -1.9112619161605835
    3. ' (' → logprob: -7.036262035369873
    4. '(
' → logprob: -9.036261558532715
    5. 'self' → logprob: -11.286261558532715
    6. '(s' → logprob: -11.411261558532715
    7. ' ' → logprob: -12.536261558532715
    8. ' self' → logprob: -12.786261558532715
    9. '<|end|>' → logprob: -12.911261558532715
    10. '(

' → logprob: -13.286261558532715

Token 108: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03916551172733307
    2. ' ,' → logprob: -3.539165496826172
    3. '(self' → logprob: -5.039165496826172
    4. 'self' → logprob: -6.664165496826172
    5. ')' → logprob: -6.914165496826172
    6. ',self' → logprob: -7.914165496826172
    7. ' self' → logprob: -8.789165496826172
    8. ' (' → logprob: -10.289165496826172
    9. ',
' → logprob: -10.664165496826172
    10. '(' → logprob: -11.289165496826172

Token 109: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09395913034677505
    2. '(' → logprob: -2.468959093093872
    3. ' (' → logprob: -5.968959331512451
    4. '(
' → logprob: -6.968959331512451
    5. 'self' → logprob: -7.218959331512451
    6. ' self' → logprob: -7.718959331512451
    7. ':' → logprob: -8.343958854675293
    8. '   ' → logprob: -9.843958854675293
    9. ' ' → logprob: -11.593958854675293
    10. ':self' → logprob: -12.218958854675293

Token 110: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.07928003370761871
    2. 'bool' → logprob: -2.579280138015747
    3. ' ' → logprob: -8.329279899597168
    4. ' int' → logprob: -10.079279899597168
    5. ' ' → logprob: -10.204279899597168
    6. ' True' → logprob: -10.954279899597168
    7. '(bool' → logprob: -11.329279899597168
    8. 'int' → logprob: -11.329279899597168
    9. ' None' → logprob: -12.204279899597168
    10. '	bool' → logprob: -12.329279899597168

Token 111: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.26211321353912354
    2. '(' → logprob: -1.5121132135391235
    3. ':' → logprob: -5.512113094329834
    4. '(
' → logprob: -5.637113094329834
    5. ' self' → logprob: -7.137113094329834
    6. '   ' → logprob: -7.637113094329834
    7. ' (' → logprob: -7.887113094329834
    8. 'self' → logprob: -7.887113094329834
    9. '       ' → logprob: -8.637113571166992
    10. ':
' → logprob: -9.012113571166992

Token 112: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8772739171981812
    2. ' ' → logprob: -1.3772739171981812
    3. ' (' → logprob: -2.1272740364074707
    4. ' self' → logprob: -2.2522740364074707
    5. ' True' → logprob: -3.7522740364074707
    6. '    ' → logprob: -4.127274036407471
    7. '(self' → logprob: -4.377274036407471
    8. 'self' → logprob: -4.377274036407471
    9. ' return' → logprob: -4.502274036407471
    10. '   ' → logprob: -4.627274036407471

Token 113: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6938496828079224
    2. ' ' → logprob: -0.6938496828079224
    3. ' (' → logprob: -7.818849563598633
    4. '(' → logprob: -8.443849563598633
    5. ' self' → logprob: -10.568849563598633
    6. '   ' → logprob: -10.568849563598633
    7. '  ' → logprob: -11.818849563598633
    8. ' ' → logprob: -12.068849563598633
    9. ' isinstance' → logprob: -12.193849563598633
    10. ' True' → logprob: -12.318849563598633

Token 114: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010006214492022991
    2. ' ' → logprob: -4.635006427764893
    3. '(' → logprob: -8.885005950927734
    4. 'self' → logprob: -9.635005950927734
    5. ' (' → logprob: -10.885005950927734
    6. ' self' → logprob: -11.385005950927734
    7. '   ' → logprob: -11.885005950927734
    8. '(self' → logprob: -13.385005950927734
    9. ' isinstance' → logprob: -13.510005950927734
    10. '  ' → logprob: -13.885005950927734

Token 115: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.014195004478096962
    2. '<=' → logprob: -4.264194965362549
    3. ' <' → logprob: -11.389195442199707
    4. ' ' → logprob: -11.639195442199707
    5. '<' → logprob: -12.014195442199707
    6. ' ' → logprob: -13.514195442199707
    7. 'x' → logprob: -13.889195442199707
    8. '0' → logprob: -14.389195442199707
    9. ' ≤' → logprob: -15.576695442199707
    10. 'if' → logprob: -15.701695442199707

Token 116: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03805044665932655
    2. ' self' → logprob: -3.288050413131714
    3. '	self' → logprob: -11.913050651550293
    4. '(self' → logprob: -14.038050651550293
    5. '<|end|>' → logprob: -14.913050651550293
    6. ' ' → logprob: -15.038050651550293
    7. '   ' → logprob: -15.413050651550293
    8. '[self' → logprob: -15.538050651550293
    9. '
' → logprob: -16.288049697875977
    10. '*self' → logprob: -16.663049697875977

Token 117: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.030081596225500107
    2. '.' → logprob: -3.5300815105438232
    3. ' .' → logprob: -8.030081748962402
    4. ' ' → logprob: -12.530081748962402
    5. '.y' → logprob: -15.155081748962402
    6. 'x' → logprob: -15.280081748962402
    7. '<x' → logprob: -15.405081748962402
    8. '

' → logprob: -16.030080795288086
    9. '.s' → logprob: -16.405080795288086
    10. '.gridx' → logprob: -16.405080795288086

Token 118: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2298150211572647
    2. '<' → logprob: -1.9798150062561035
    3. 'and' → logprob: -3.3548150062561035
    4. ' and' → logprob: -3.4798150062561035
    5. ' ' → logprob: -6.7298150062561035
    6. ' <=' → logprob: -9.104815483093262
    7. '<=' → logprob: -9.979815483093262
    8. '<size' → logprob: -10.854815483093262
    9. '<int' → logprob: -10.979815483093262
    10. '<len' → logprob: -11.229815483093262

Token 119: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28189143538475037
    2. '9' → logprob: -1.5318914651870728
    3. '10' → logprob: -4.281891345977783
    4. '99' → logprob: -5.156891345977783
    5. '100' → logprob: -5.156891345977783
    6. '7' → logprob: -5.656891345977783
    7. '19' → logprob: -8.781891822814941
    8. '79' → logprob: -9.156891822814941
    9. '49' → logprob: -9.406891822814941
    10. '999' → logprob: -9.406891822814941

Token 120: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.20429915189743042
    2. '100' → logprob: -2.954299211502075
    3. '99' → logprob: -3.079299211502075
    4. '7' → logprob: -3.079299211502075
    5. ' ' → logprob: -3.829299211502075
    6. '10' → logprob: -4.079298973083496
    7. '999' → logprob: -7.329298973083496
    8. '79' → logprob: -8.329298973083496
    9. '19' → logprob: -8.329298973083496
    10. '1' → logprob: -8.579298973083496

Token 121: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.002992916852235794
    2. 'and' → logprob: -5.877993106842041
    3. ' ' → logprob: -8.627992630004883
    4. '    ' → logprob: -12.627992630004883
    5. ' an' → logprob: -13.002992630004883
    6. ' ' → logprob: -13.377992630004883
    7. ' a' → logprob: -14.377992630004883
    8. '<|end|>' → logprob: -15.127992630004883
    9. '   ' → logprob: -15.377992630004883
    10. '  ' → logprob: -15.877992630004883

Token 122: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06196970492601395
    2. '0' → logprob: -2.811969757080078
    3. ' ' → logprob: -13.311969757080078
    4. '  ' → logprob: -15.811969757080078
    5. '    ' → logprob: -16.311969757080078
    6. '   ' → logprob: -17.186969757080078
    7. ' (' → logprob: -17.436969757080078
    8. ' 
' → logprob: -18.061969757080078
    9. '...' → logprob: -18.936969757080078
    10. '9' → logprob: -18.999469757080078

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11282805353403091
    2. ' ' → logprob: -2.237828016281128
    3. 'self' → logprob: -12.612828254699707
    4. ' self' → logprob: -13.362828254699707
    5. ' ' → logprob: -14.737828254699707
    6. '  ' → logprob: -15.362828254699707
    7. '   ' → logprob: -16.11282730102539
    8. '    ' → logprob: -17.48782730102539
    9. '9' → logprob: -18.36282730102539
    10. ' (' → logprob: -18.61282730102539

Token 124: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.011323668994009495
    2. '<=' → logprob: -4.51132345199585
    3. ' ' → logprob: -8.761323928833008
    4. '<|end|>' → logprob: -9.136323928833008
    5. ' >=' → logprob: -12.886323928833008
    6. '<' → logprob: -13.386323928833008
    7. ' <' → logprob: -13.636323928833008
    8. '   ' → logprob: -13.761323928833008
    9. ' ' → logprob: -13.886323928833008
    10. '  ' → logprob: -14.261323928833008

Token 125: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47409674525260925
    2. ' self' → logprob: -0.9740967750549316
    3. ' ' → logprob: -11.099096298217773
    4. '(self' → logprob: -13.849096298217773
    5. ' ' → logprob: -14.099096298217773
    6. '	self' → logprob: -14.224096298217773
    7. '<|end|>' → logprob: -14.474096298217773
    8. '9' → logprob: -15.474096298217773
    9. '10' → logprob: -15.599096298217773
    10. 's' → logprob: -15.599096298217773

Token 126: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.43121761083602905
    2. '.' → logprob: -1.0562176704406738
    3. '.x' → logprob: -6.431217670440674
    4. ' .' → logprob: -7.056217670440674
    5. '.
' → logprob: -11.306217193603516
    6. 'y' → logprob: -11.806217193603516
    7. '<|end|>' → logprob: -11.931217193603516
    8. ' ' → logprob: -13.056217193603516
    9. '‌.' → logprob: -13.181217193603516
    10. '.user' → logprob: -13.306217193603516

Token 127: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0103119732812047
    2. '<=' → logprob: -4.635312080383301
    3. ' ' → logprob: -7.635312080383301
    4. '<|end|>' → logprob: -9.7603120803833
    5. ' <' → logprob: -12.3853120803833
    6. ' ' → logprob: -12.6353120803833
    7. ')<=' → logprob: -13.3853120803833
    8. ' <=",' → logprob: -14.1353120803833
    9. '10' → logprob: -14.2603120803833
    10. '<' → logprob: -14.2603120803833

Token 128: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.11282432079315186
    2. ' ' → logprob: -2.2378244400024414
    3. '   ' → logprob: -13.862824440002441
    4. '  ' → logprob: -15.112824440002441
    5. '8' → logprob: -15.237824440002441
    6. ' ' → logprob: -15.737824440002441
    7. '```' → logprob: -16.175323486328125
    8. '
' → logprob: -16.862823486328125
    9. '4' → logprob: -17.300323486328125
    10. '	' → logprob: -17.550323486328125

Token 129: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.00002098083496
    4. '۹' → logprob: -18.87502098083496
    5. '９' → logprob: -19.12502098083496
    6. '```' → logprob: -19.37502098083496
    7. '  ' → logprob: -19.62502098083496
    8. '९' → logprob: -20.18752098083496
    9. '
' → logprob: -20.25002098083496
    10. '`' → logprob: -20.93752098083496

Token 130: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21372568607330322
    2. '<|end|>' → logprob: -2.8387255668640137
    3. ':' → logprob: -3.0887255668640137
    4. '.' → logprob: -3.0887255668640137
    5. 'newline' → logprob: -4.213725566864014
    6. '\n' → logprob: -5.338725566864014
    7. ' 
' → logprob: -5.713725566864014
    8. '' → logprob: -5.963725566864014
    9. ' ' → logprob: -6.213725566864014
    10. ',' → logprob: -6.213725566864014

Token 131: 'class' (ID: 1444)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3495875597000122
    2. '
' → logprob: -2.2245874404907227
    3. '.' → logprob: -2.4745874404907227
    4. ' 
' → logprob: -3.5995874404907227
    5. ' ' → logprob: -4.099587440490723
    6. ',' → logprob: -4.224587440490723
    7. ':
' → logprob: -4.474587440490723
    8. '   ' → logprob: -4.599587440490723
    9. '[' → logprob: -6.224587440490723
    10. '<|end|>' → logprob: -6.349587440490723

Token 132: ' Jump' (ID: 51108)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08625698834657669
    2. ' Position' → logprob: -2.961256980895996
    3. ' Board' → logprob: -4.211256980895996
    4. ' Player' → logprob: -5.461256980895996
    5. ' Piece' → logprob: -5.711256980895996
    6. ' Chess' → logprob: -6.461256980895996
    7. ' Space' → logprob: -6.711256980895996
    8. ' ' → logprob: -6.836256980895996
    9. ' Direction' → logprob: -6.961256980895996
    10. ' Token' → logprob: -7.711256980895996

Token 133: 'Set' (ID: 1984)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020110270008444786
    2. 'Position' → logprob: -4.770110130310059
    3. 'Point' → logprob: -5.395110130310059
    4. 'Move' → logprob: -5.770110130310059
    5. '():' → logprob: -6.645110130310059
    6. ':
' → logprob: -7.145110130310059
    7. '(Position' → logprob: -7.770110130310059
    8. '(' → logprob: -8.020110130310059
    9. 'Action' → logprob: -8.770110130310059
    10. '(Point' → logprob: -9.645110130310059

Token 134: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17387144267559052
    2. '(set' → logprob: -1.923871397972107
    3. '(dict' → logprob: -5.1738715171813965
    4. ' :' → logprob: -5.4238715171813965
    5. '(' → logprob: -6.2988715171813965
    6. '(list' → logprob: -7.0488715171813965
    7. ':
' → logprob: -8.048871040344238
    8. ':set' → logprob: -8.923871040344238
    9. '(Set' → logprob: -9.298871040344238
    10. '(object' → logprob: -9.673871040344238

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27834299206733704
    2. ':' → logprob: -2.5283429622650146
    3. ':
' → logprob: -2.9033429622650146
    4. ' def' → logprob: -3.0283429622650146
    5. '    
' → logprob: -4.653343200683594
    6. ' 
' → logprob: -4.778343200683594
    7. ' ' → logprob: -4.778343200683594
    8. 'def' → logprob: -4.903343200683594
    9. ' :
' → logprob: -5.028343200683594
    10. '
' → logprob: -5.653343200683594

Token 136: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.20038935542106628
    2. 'def' (adapté à ' def') → logprob: -1.8253893852233887
    3. '   ' → logprob: -4.075389385223389
    4. ' __' → logprob: -5.950389385223389
    5. '    ' → logprob: -8.07538890838623
    6. '__' → logprob: -9.07538890838623
    7. ' 
' → logprob: -9.20038890838623
    8. ' ' → logprob: -9.57538890838623
    9. 'class' → logprob: -9.70038890838623
    10. '    
' → logprob: -9.95038890838623

Token 137: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.003996596205979586
    2. ' ' → logprob: -5.6289963722229
    3. '_init' → logprob: -9.253996849060059
    4. '_' → logprob: -9.503996849060059
    5. ' _' → logprob: -9.503996849060059
    6. '__' → logprob: -9.753996849060059
    7. ' init' → logprob: -10.753996849060059
    8. ' ' → logprob: -10.878996849060059
    9. ' ___' → logprob: -11.253996849060059
    10. '  ' → logprob: -11.503996849060059

Token 138: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0001370320824207738
    2. 'i' → logprob: -9.875137329101562
    3. 'ini' → logprob: -10.375137329101562
    4. 'slots' → logprob: -10.375137329101562
    5. 'in' → logprob: -10.875137329101562
    6. ' init' → logprob: -13.375137329101562
    7. 'inite' → logprob: -14.125137329101562
    8. ' ' → logprob: -15.000137329101562
    9. 'iter' → logprob: -15.000137329101562
    10. '_init' → logprob: -15.625137329101562

Token 139: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0185819361358881
    2. '(self' → logprob: -4.143581867218018
    3. '(' → logprob: -6.393581867218018
    4. '__(
' → logprob: -7.893581867218018
    5. '_(' → logprob: -8.268582344055176
    6. '__' → logprob: -8.893582344055176
    7. ' (' → logprob: -10.393582344055176
    8. '<>(' → logprob: -11.018582344055176
    9. ')(' → logprob: -11.018582344055176
    10. '_' → logprob: -12.393582344055176

Token 140: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010125647531822324
    2. ' self' → logprob: -7.251012802124023
    3. ')' → logprob: -8.376012802124023
    4. '
' → logprob: -9.876012802124023
    5. '0' → logprob: -12.126012802124023
    6. '):
' → logprob: -12.626012802124023
    7. ' ' → logprob: -12.751012802124023
    8. '   ' → logprob: -13.251012802124023
    9. '  ' → logprob: -13.376012802124023
    10. '

' → logprob: -13.751012802124023

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7956272959709167
    2. '):' → logprob: -0.9206272959709167
    3. ' ):' → logprob: -2.2956273555755615
    4. ' ,' → logprob: -3.5456273555755615
    5. ')' → logprob: -5.295627117156982
    6. 'self' → logprob: -5.420627117156982
    7. '):
' → logprob: -5.545627117156982
    8. ' ' → logprob: -5.670627117156982
    9. ' self' → logprob: -6.420627117156982
    10. ' )' → logprob: -6.545627117156982

Token 142: ' del' (ID: 1083)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.861610472202301
    2. 'self' → logprob: -1.6116104125976562
    3. ' positions' → logprob: -1.8616104125976562
    4. ' self' → logprob: -2.2366104125976562
    5. ')' → logprob: -3.6116104125976562
    6. '):
' → logprob: -4.111610412597656
    7. ' jumps' → logprob: -4.486610412597656
    8. 'j' → logprob: -4.861610412597656
    9. 'initial' → logprob: -5.361610412597656
    10. 'start' → logprob: -5.486610412597656

Token 143: 'tas' (ID: 34419)
  Prédit: 'tas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tas' → logprob: -0.5906671285629272
    2. 'ta' → logprob: -1.4656671285629272
    3. 'etas' → logprob: -3.090667247772217
    4. 'ete' → logprob: -3.465667247772217
    5. 'eg' → logprob: -3.715667247772217
    6. 'ays' → logprob: -4.090667247772217
    7. 'ay' → logprob: -4.215667247772217
    8. 'e' → logprob: -4.465667247772217
    9. 'et' → logprob: -4.715667247772217
    10. 'eta' → logprob: -5.090667247772217

Token 144: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.29952967166900635
    2. ' ):' → logprob: -2.049529552459717
    3. ':' → logprob: -2.424529552459717
    4. ')' → logprob: -3.799529552459717
    5. '=None' → logprob: -5.424529552459717
    6. ' :' → logprob: -5.549529552459717
    7. '=' → logprob: -5.799529552459717
    8. ' )' → logprob: -5.799529552459717
    9. ',' → logprob: -6.049529552459717
    10. ':list' → logprob: -6.799529552459717

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5571212768554688
    2. ':' → logprob: -0.9321212768554688
    3. ',' → logprob: -3.8071212768554688
    4. ' self' → logprob: -5.307121276855469
    5. '):' → logprob: -6.307121276855469
    6. 'self' → logprob: -7.182121276855469
    7. '   ' → logprob: -7.182121276855469
    8. '[' → logprob: -7.682121276855469
    9. '<|end|>' → logprob: -7.682121276855469
    10. ')' → logprob: -7.932121276855469

Token 146: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.056386034935712814
    2. 'self' (adapté à ' self') → logprob: -2.9313859939575195
    3. '       ' → logprob: -6.5563859939575195
    4. ' ' → logprob: -10.43138599395752
    5. '        ' → logprob: -11.05638599395752
    6. '	self' → logprob: -11.30638599395752
    7. '   ' → logprob: -11.93138599395752
    8. '    ' → logprob: -12.18138599395752
    9. ' ' → logprob: -12.18138599395752
    10. '[self' → logprob: -13.18138599395752

Token 147: '.moves' (ID: 189072)
  Prédit: '.d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.8166001439094543
    2. ' =' → logprob: -1.4416000843048096
    3. ' .' → logprob: -1.6916000843048096
    4. '._' → logprob: -2.4416000843048096
    5. '.' → logprob: -3.4416000843048096
    6. ' ' → logprob: -5.191600322723389
    7. '   ' → logprob: -5.566600322723389
    8. '=' → logprob: -6.066600322723389
    9. '_d' → logprob: -6.066600322723389
    10. 'd' → logprob: -6.316600322723389

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020561743527650833
    2. '=' → logprob: -3.895561695098877
    3. 's' → logprob: -11.270562171936035
    4. ' ' → logprob: -12.020562171936035
    5. '_' → logprob: -15.395562171936035
    6. '  ' → logprob: -15.770562171936035
    7. ' =[' → logprob: -16.02056121826172
    8. '=[]' → logprob: -16.14556121826172
    9. ' =
' → logprob: -16.52056121826172
    10. '.' → logprob: -16.64556121826172

Token 149: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.2886606454849243
    2. 'set' → logprob: -1.7886606454849243
    3. ' set' → logprob: -1.9136606454849243
    4. '{' → logprob: -1.9136606454849243
    5. '[d' → logprob: -2.2886605262756348
    6. '[' → logprob: -2.7886605262756348
    7. 'd' → logprob: -3.0386605262756348
    8. ' {' → logprob: -3.7886605262756348
    9. '[j' → logprob: -4.788660526275635
    10. ' tuple' → logprob: -5.663660526275635

Token 150: 'Position' (ID: 5647)
  Prédit: 'Position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Position' → logprob: -0.018514178693294525
    2. ' Position' → logprob: -4.518514156341553
    3. '(Position' → logprob: -5.268514156341553
    4. 'self' → logprob: -7.018514156341553
    5. 'delta' → logprob: -7.893514156341553
    6. 'Jump' → logprob: -7.893514156341553
    7. 'd' → logprob: -8.768514633178711
    8. ']' → logprob: -9.768514633178711
    9. 'pos' → logprob: -10.143514633178711
    10. 'Pos' → logprob: -10.268514633178711

Token 151: '(dx' (ID: 124932)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.6365085244178772
    2. '(delta' → logprob: -1.0115084648132324
    3. '(d' → logprob: -2.7615084648132324
    4. '(' → logprob: -3.5115084648132324
    5. '(x' → logprob: -4.636508464813232
    6. '(dx' → logprob: -6.136508464813232
    7. '(*(' → logprob: -7.886508464813232
    8. '(pos' → logprob: -8.01150894165039
    9. '(p' → logprob: -8.13650894165039
    10. '(
' → logprob: -8.38650894165039

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005651841638609767
    2. ' ,' → logprob: -7.625565052032471
    3. ',d' → logprob: -10.500565528869629
    4. '[' → logprob: -11.000565528869629
    5. ',y' → logprob: -11.125565528869629
    6. ',
' → logprob: -12.375565528869629
    7. ',x' → logprob: -13.250565528869629
    8. '+' → logprob: -13.500565528869629
    9. ' ' → logprob: -13.500565528869629
    10. 'dx' → logprob: -13.625565528869629

Token 153: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.03806237503886223
    2. ' dy' → logprob: -3.288062334060669
    3. ' ' → logprob: -11.78806209564209
    4. '

' → logprob: -12.78806209564209
    5. '
' → logprob: -13.28806209564209
    6. '   ' → logprob: -13.41306209564209
    7. '.dy' → logprob: -13.66306209564209
    8. 'd' → logprob: -14.16306209564209
    9. ')' → logprob: -14.16306209564209
    10. '  ' → logprob: -14.28806209564209

Token 154: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001801801408873871
    2. ' )' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.6251802444458
    4. ')
' → logprob: -16.250179290771484
    5. '))' → logprob: -17.125179290771484
    6. '')' → logprob: -17.375179290771484
    7. '    ' → logprob: -17.500179290771484
    8. ' ' → logprob: -17.625179290771484
    9. '）' → logprob: -17.625179290771484
    10. '```' → logprob: -18.000179290771484

Token 155: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.005223682615906
    2. 'for' → logprob: -5.755223751068115
    3. ')' → logprob: -6.255223751068115
    4. ' )' → logprob: -9.380223274230957
    5. ' ' → logprob: -10.630223274230957
    6. '	for' → logprob: -12.380223274230957
    7. '    ' → logprob: -12.630223274230957
    8. '        ' → logprob: -12.880223274230957
    9. ']' → logprob: -13.255223274230957
    10. ' ]' → logprob: -13.505223274230957

Token 156: ' (' (ID: 350)
  Prédit: ' del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' del' → logprob: -0.22640588879585266
    2. 'd' → logprob: -1.6014058589935303
    3. ' dx' → logprob: -7.226406097412109
    4. ' d' → logprob: -9.47640609741211
    5. 'dx' → logprob: -9.60140609741211
    6. ' delta' → logprob: -10.22640609741211
    7. ' delt' → logprob: -10.97640609741211
    8. '	d' → logprob: -10.97640609741211
    9. 'delta' → logprob: -11.22640609741211
    10. 'del' → logprob: -11.47640609741211

Token 157: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.00044496997725218534
    2. ' dx' → logprob: -8.125445365905762
    3. '(dx' → logprob: -9.250445365905762
    4. 'd' → logprob: -10.250445365905762
    5. 'x' → logprob: -11.625445365905762
    6. '_dx' → logprob: -12.375445365905762
    7. ')' → logprob: -13.875445365905762
    8. '
' → logprob: -14.000445365905762
    9. '.dx' → logprob: -14.500445365905762
    10. 'delta' → logprob: -14.500445365905762

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002114097122102976
    2. '<|end|>' → logprob: -6.502114295959473
    3. ' ,' → logprob: -7.502114295959473
    4. ',d' → logprob: -10.877114295959473
    5. '<|end|>' → logprob: -11.002114295959473
    6. '‌,' → logprob: -11.627114295959473
    7. ',x' → logprob: -12.627114295959473
    8. ',y' → logprob: -13.377114295959473
    9. ' ' → logprob: -13.377114295959473
    10. ',user' → logprob: -13.627114295959473

Token 159: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.04861132428050041
    2. ' dy' → logprob: -3.0486114025115967
    3. ')' → logprob: -11.173611640930176
    4. ' ' → logprob: -12.298611640930176
    5. '<|end|>' → logprob: -12.673611640930176
    6. 'd' → logprob: -14.048611640930176
    7. '
' → logprob: -14.923611640930176
    8. '.dy' → logprob: -15.048611640930176
    9. '

' → logprob: -15.798611640930176
    10. ' 
' → logprob: -16.79861068725586

Token 160: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06599380075931549
    2. ' in' → logprob: -3.1909937858581543
    3. ' )' → logprob: -3.9409937858581543
    4. '<|end|>' → logprob: -5.940993785858154
    5. 'in' → logprob: -7.565993785858154
    6. '<|end|>' → logprob: -9.565994262695312
    7. ' ' → logprob: -10.065994262695312
    8. '),' → logprob: -12.065994262695312
    9. ',' → logprob: -12.190994262695312
    10. ')]' → logprob: -12.815994262695312

Token 161: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.035413000732660294
    2. 'd' → logprob: -4.285412788391113
    3. ')' → logprob: -4.535412788391113
    4. ')d' → logprob: -5.535412788391113
    5. ' del' → logprob: -5.910412788391113
    6. ' d' → logprob: -6.535412788391113
    7. '<|end|>' → logprob: -7.160412788391113
    8. 'in' → logprob: -7.535412788391113
    9. ' )' → logprob: -7.785412788391113
    10. ']' → logprob: -8.035412788391113

Token 162: ' del' (ID: 1083)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16037146747112274
    2. ' del' → logprob: -1.9103714227676392
    3. ']' → logprob: -10.160371780395508
    4. ')d' → logprob: -10.285371780395508
    5. ')' → logprob: -10.785371780395508
    6. ' d' → logprob: -11.472871780395508
    7. '   ' → logprob: -11.597871780395508
    8. ' ' → logprob: -11.722871780395508
    9. 'del' → logprob: -11.785371780395508
    10. '	d' → logprob: -13.160371780395508

Token 163: 'tas' (ID: 34419)
  Prédit: 'tas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tas' → logprob: -3.9292415749514475e-05
    2. 'as' → logprob: -10.875039100646973
    3. '[' → logprob: -12.125039100646973
    4. 't' → logprob: -12.625039100646973
    5. 'etas' → logprob: -13.000039100646973
    6. 's' → logprob: -13.500039100646973
    7. 'ta' → logprob: -13.875039100646973
    8. 'das' → logprob: -14.000039100646973
    9. '
' → logprob: -14.000039100646973
    10. 'd' → logprob: -14.125039100646973

Token 164: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003793144423980266
    2. ' ]' → logprob: -8.00037956237793
    3. ')]' → logprob: -11.00037956237793
    4. ')' → logprob: -11.25037956237793
    5. '       ' → logprob: -11.75037956237793
    6. ']
' → logprob: -12.87537956237793
    7. '   ' → logprob: -12.87537956237793
    8. '	' → logprob: -15.50037956237793
    9. '])' → logprob: -15.50037956237793
    10. ' ' → logprob: -15.75037956237793

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17131389677524567
    2. 'def' → logprob: -2.671314001083374
    3. '<|end|>' → logprob: -3.046314001083374
    4. '
' → logprob: -3.921314001083374
    5. ' def' → logprob: -4.046313762664795
    6. '    
' → logprob: -6.796313762664795
    7. ' ' → logprob: -6.921313762664795
    8. '<|end|>' → logprob: -7.671313762664795
    9. '	def' → logprob: -7.921313762664795
    10. ' 
' → logprob: -8.796314239501953

Token 166: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.49030375480651855
    2. ' def' → logprob: -1.8653037548065186
    3. '
' → logprob: -2.1153037548065186
    4. '<|end|>' → logprob: -2.7403037548065186
    5. '   ' → logprob: -3.1153037548065186
    6. '    
' → logprob: -6.365303993225098
    7. '<|end|>' → logprob: -7.865303993225098
    8. ' 
' → logprob: -7.865303993225098
    9. '	def' → logprob: -8.115303993225098
    10. ' ' → logprob: -8.865303993225098

Token 167: ' next' (ID: 2613)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.05791023001074791
    2. ' ' → logprob: -3.932910203933716
    3. ' get' → logprob: -5.057910442352295
    4. ' is' → logprob: -5.307910442352295
    5. ' possible' → logprob: -5.307910442352295
    6. ' add' → logprob: -5.557910442352295
    7. '__' → logprob: -5.557910442352295
    8. ' contains' → logprob: -5.807910442352295
    9. ' can' → logprob: -5.932910442352295
    10. ' has' → logprob: -6.182910442352295

Token 168: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.17052854597568512
    2. '_moves' → logprob: -1.920528531074524
    3. '(self' → logprob: -5.295528411865234
    4. '_' → logprob: -6.170528411865234
    5. '(' → logprob: -6.795528411865234
    6. '_position' → logprob: -7.170528411865234
    7. '_pos' → logprob: -7.420528411865234
    8. '_move' → logprob: -7.920528411865234
    9. '_(' → logprob: -9.170528411865234
    10. '_possible' → logprob: -9.670528411865234

Token 169: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008835439570248127
    2. '(' → logprob: -4.758835315704346
    3. ' (' → logprob: -8.633835792541504
    4. '(
' → logprob: -10.258835792541504
    5. '(s' → logprob: -12.758835792541504
    6. 'self' → logprob: -13.133835792541504
    7. '<|end|>' → logprob: -13.508835792541504
    8. ' self' → logprob: -14.008835792541504
    9. '   ' → logprob: -15.508835792541504
    10. '(sel' → logprob: -15.758835792541504

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019448186503723264
    2. ' ,' → logprob: -6.2519450187683105
    3. '):' → logprob: -11.251944541931152
    4. 'self' → logprob: -13.876944541931152
    5. ')' → logprob: -13.876944541931152
    6. ',self' → logprob: -14.751944541931152
    7. ' ):' → logprob: -15.626944541931152
    8. ',pos' → logprob: -15.626944541931152
    9. '   ' → logprob: -16.25194549560547
    10. ',
' → logprob: -16.62694549560547

Token 171: ' pos' (ID: 1253)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06379929929971695
    2. ' self' → logprob: -2.8137993812561035
    3. 'pos' → logprob: -6.9387993812561035
    4. 'position' → logprob: -7.3137993812561035
    5. ' position' → logprob: -9.688798904418945
    6. '   ' → logprob: -10.063798904418945
    7. ' pos' → logprob: -10.188798904418945
    8. ' current' → logprob: -10.938798904418945
    9. 'current' → logprob: -11.063798904418945
    10. 's' → logprob: -12.688798904418945

Token 172: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0037572095170617104
    2. ')' → logprob: -6.503756999969482
    3. '):
' → logprob: -6.878756999969482
    4. ' ):' → logprob: -7.503756999969482
    5. ':' → logprob: -7.628756999969482
    6. ',' → logprob: -8.87875747680664
    7. '   ' → logprob: -10.50375747680664
    8. '       ' → logprob: -11.87875747680664
    9. ' )' → logprob: -13.12875747680664
    10. ' :' → logprob: -13.37875747680664

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4189586639404297
    2. ':' → logprob: -1.2939586639404297
    3. ':
' → logprob: -3.2939586639404297
    4. '(self' → logprob: -4.04395866394043
    5. '   ' → logprob: -5.16895866394043
    6. ' for' → logprob: -6.16895866394043
    7. '):' → logprob: -6.79395866394043
    8. '):
' → logprob: -7.16895866394043
    9. ' self' → logprob: -7.41895866394043
    10. '[' → logprob: -7.41895866394043

Token 174: ' for' (ID: 395)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2542327046394348
    2. ' return' → logprob: -2.37923264503479
    3. '[' → logprob: -2.50423264503479
    4. '[
' → logprob: -3.87923264503479
    5. ' [' → logprob: -4.879232883453369
    6. 'for' (adapté à ' for') → logprob: -5.004232883453369
    7. ' for' → logprob: -5.379232883453369
    8. '   ' → logprob: -5.379232883453369
    9. '       ' → logprob: -6.254232883453369
    10. '
' → logprob: -6.379232883453369

Token 175: ' m' (ID: 284)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.003232256043702364
    2. 'move' → logprob: -5.753232479095459
    3. ' m' → logprob: -10.6282320022583
    4. ' delta' → logprob: -11.7532320022583
    5. ' jump' → logprob: -11.8782320022583
    6. ' mv' → logprob: -12.7532320022583
    7. ' offset' → logprob: -12.7532320022583
    8. 'm' → logprob: -12.8782320022583
    9. '	move' → logprob: -13.2532320022583
    10. ' ' → logprob: -13.5032320022583

Token 176: ' in' (ID: 306)
  Prédit: 'ove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -0.26808640360832214
    2. ' in' → logprob: -1.5180864334106445
    3. 'in' → logprob: -4.1430864334106445
    4. 'o' → logprob: -9.893086433410645
    5. '	in' → logprob: -10.893086433410645
    6. 'move' → logprob: -11.268086433410645
    7. 'ov' → logprob: -11.268086433410645
    8. 'ovement' → logprob: -11.393086433410645
    9. '   ' → logprob: -11.893086433410645
    10. ' ' → logprob: -12.143086433410645

Token 177: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5760121941566467
    2. 'self' → logprob: -0.8260121941566467
    3. 'elf' → logprob: -9.57601261138916
    4. ' ' → logprob: -13.45101261138916
    5. '	self' → logprob: -14.20101261138916
    6. '   ' → logprob: -14.70101261138916
    7. '(self' → logprob: -15.20101261138916
    8. '[self' → logprob: -15.57601261138916
    9. '    ' → logprob: -15.70101261138916
    10. ' ' → logprob: -16.326011657714844

Token 178: '.moves' (ID: 189072)
  Prédit: '.moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.moves' → logprob: -0.0033162652980536222
    2. '.' → logprob: -5.753316402435303
    3. ' .' → logprob: -9.128315925598145
    4. '.mov' → logprob: -11.628315925598145
    5. '.m' → logprob: -11.878315925598145
    6. 'moves' → logprob: -12.003315925598145
    7. '.positions' → logprob: -13.378315925598145
    8. '.movies' → logprob: -13.503315925598145
    9. '.s' → logprob: -13.878315925598145
    10. ').' → logprob: -14.128315925598145

Token 179: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000181372175575234
    2. ':
' → logprob: -8.875181198120117
    3. ':return' → logprob: -11.000181198120117
    4. ' :' → logprob: -11.250181198120117
    5. '<|end|>' → logprob: -12.625181198120117
    6. '):' → logprob: -12.625181198120117
    7. ':

' → logprob: -13.000181198120117
    8. ',' → logprob: -14.250181198120117
    9. '<|end|>' → logprob: -14.500181198120117
    10. '       ' → logprob: -14.625181198120117

Token 180: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43012169003486633
    2. ':' → logprob: -1.180121660232544
    3. '
' → logprob: -3.555121660232544
    4. ':
' → logprob: -4.805121898651123
    5. '       ' → logprob: -6.680121898651123
    6. ' yield' → logprob: -6.805121898651123
    7. ',' → logprob: -7.055121898651123
    8. '            
' → logprob: -7.805121898651123
    9. 'yield' → logprob: -7.805121898651123
    10. '<|end|>' → logprob: -7.805121898651123

Token 181: ' np' (ID: 5374)
  Prédit: ' yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.5566510558128357
    2. 'yield' → logprob: -0.9316510558128357
    3. ' 
' → logprob: -4.0566511154174805
    4. '           ' → logprob: -4.8066511154174805
    5. '
' → logprob: -5.3066511154174805
    6. '	yield' → logprob: -7.0566511154174805
    7. ' ' → logprob: -7.5566511154174805
    8. '            
' → logprob: -8.43165111541748
    9. '        
' → logprob: -9.30665111541748
    10. '        ' → logprob: -9.30665111541748

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1359773874282837
    2. 'osition' → logprob: -2.510977268218994
    3. 'os' → logprob: -3.260977268218994
    4. '=' → logprob: -5.010977268218994
    5. 'osit' → logprob: -8.010977745056152
    6. ' os' → logprob: -8.135977745056152
    7. ' ' → logprob: -9.010977745056152
    8. 'osi' → logprob: -9.260977745056152
    9. 's' → logprob: -10.135977745056152
    10. '=os' → logprob: -10.510977745056152

Token 183: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.47415024042129517
    2. 'pos' → logprob: -0.9741502404212952
    3. 'Position' → logprob: -9.849150657653809
    4. ' Position' → logprob: -11.099150657653809
    5. 'Pos' → logprob: -13.224150657653809
    6. 'position' → logprob: -13.724150657653809
    7. ' position' → logprob: -14.224150657653809
    8. '	pos' → logprob: -14.724150657653809
    9. '_pos' → logprob: -14.849150657653809
    10. '           ' → logprob: -15.599150657653809

Token 184: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.008629591204226017
    2. '+' → logprob: -4.75862979888916
    3. '<|end|>' → logprob: -11.88362979888916
    4. '+m' → logprob: -12.75862979888916
    5. '+self' → logprob: -12.88362979888916
    6. ' ' → logprob: -13.75862979888916
    7. ' ' → logprob: -14.38362979888916
    8. '<|end|>' → logprob: -15.50862979888916
    9. ' +
' → logprob: -15.75862979888916
    10. '+xml' → logprob: -15.88362979888916

Token 185: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4740772247314453
    2. ' m' → logprob: -0.9740772247314453
    3. '	m' → logprob: -16.099077224731445
    4. ' ' → logprob: -16.099077224731445
    5. '
' → logprob: -17.724077224731445
    6. ' 
' → logprob: -18.099077224731445
    7. ' м' → logprob: -18.474077224731445
    8. ' ' → logprob: -19.224077224731445
    9. '

' → logprob: -19.724077224731445
    10. ')m' → logprob: -20.099077224731445

Token 186: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0005888947052881122
    2. '
' → logprob: -8.500589370727539
    3. '<|end|>' → logprob: -8.625589370727539
    4. ' 
' → logprob: -10.000589370727539
    5. '           ' → logprob: -10.125589370727539
    6. '            
' → logprob: -10.375589370727539
    7. 'yield' → logprob: -10.875589370727539
    8. ' ' → logprob: -11.000589370727539
    9. '

' → logprob: -11.375589370727539
    10. '       ' → logprob: -11.875589370727539

Token 187: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08300770819187164
    2. '           ' → logprob: -2.5830078125
    3. '            
' → logprob: -6.0830078125
    4. '
' → logprob: -7.5830078125
    5. ' 
' → logprob: -7.5830078125
    6. '<|end|>' → logprob: -8.8330078125
    7. '        
' → logprob: -8.9580078125
    8. 'yield' → logprob: -9.0830078125
    9. '  
' → logprob: -9.3330078125
    10. '    
' → logprob: -9.3330078125

Token 188: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3550907075405121
    2. 'if' (adapté à ' if') → logprob: -1.2300907373428345
    3. '
' → logprob: -5.230090618133545
    4. '           ' → logprob: -6.855090618133545
    5. 'yield' → logprob: -9.605091094970703
    6. '            
' → logprob: -9.855091094970703
    7. ' ' → logprob: -10.105091094970703
    8. ' 
' → logprob: -10.980091094970703
    9. '            ' → logprob: -11.605091094970703
    10. ' yield' → logprob: -12.230091094970703

Token 189: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.2519359588623047
    2. 'np' → logprob: -1.5019359588623047
    3. '0' → logprob: -13.001935958862305
    4. '(np' → logprob: -13.251935958862305
    5. '_np' → logprob: -14.626935958862305
    6. ' ' → logprob: -14.751935958862305
    7. '
' → logprob: -15.001935958862305
    8. '1' → logprob: -15.251935958862305
    9. 'Np' → logprob: -15.376935958862305
    10. ' ' → logprob: -15.501935958862305

Token 190: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.004725245293229818
    2. '.' → logprob: -5.379725456237793
    3. ' .' → logprob: -9.254725456237793
    4. '.isnan' → logprob: -12.379725456237793
    5. ').' → logprob: -14.004725456237793
    6. '.isfile' → logprob: -14.254725456237793
    7. '.eql' → logprob: -14.254725456237793
    8. 'is' → logprob: -15.379725456237793
    9. '.jupiter' → logprob: -15.379725456237793
    10. '‍.' → logprob: -15.504725456237793

Token 191: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -9.686778503237292e-05
    2. '_w' → logprob: -9.875097274780273
    3. ' _' → logprob: -10.750097274780273
    4. '_' → logprob: -10.875097274780273
    5. '_without' → logprob: -14.125097274780273
    6. '_in' → logprob: -14.375097274780273
    7. '_valid' → logprob: -14.625097274780273
    8. '_inside' → logprob: -14.625097274780273
    9. '._' → logprob: -14.875097274780273
    10. 'within' → logprob: -15.000097274780273

Token 192: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2870102524757385
    2. '_bounds' → logprob: -1.7870101928710938
    3. 'bounds' → logprob: -2.5370101928710938
    4. 'ith' → logprob: -6.037010192871094
    5. ' bounds' → logprob: -8.787010192871094
    6. 'n' → logprob: -9.662010192871094
    7. 'it' → logprob: -9.787010192871094
    8. 'ins' → logprob: -9.787010192871094
    9. 'inds' → logprob: -11.037010192871094
    10. '(bounds' → logprob: -11.037010192871094

Token 193: '_bounds' (ID: 90408)
  Prédit: '_bounds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bounds' → logprob: -2.935296834039036e-06
    2. '_limits' → logprob: -13.25000286102295
    3. '_bound' → logprob: -14.75000286102295
    4. '_b' → logprob: -14.87500286102295
    5. '_' → logprob: -16.000003814697266
    6. ' _' → logprob: -16.250003814697266
    7. 'bounds' → logprob: -16.500003814697266
    8. 's' → logprob: -17.875003814697266
    9. '```' → logprob: -18.375003814697266
    10. ' bounds' → logprob: -18.625003814697266

Token 194: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.000282431225059554
    2. ' ():' → logprob: -8.750282287597656
    3. '()' → logprob: -9.125282287597656
    4. '():
' → logprob: -11.250282287597656
    5. ':' → logprob: -13.750282287597656
    6. ' ()' → logprob: -14.625282287597656
    7. '():
' → logprob: -15.500282287597656
    8. '():

' → logprob: -15.750282287597656
    9. '(' → logprob: -16.500282287597656
    10. '()==' → logprob: -17.250282287597656

Token 195: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33235153555870056
    2. ':' → logprob: -1.332351565361023
    3. ':
' → logprob: -4.2073516845703125
    4. ':return' → logprob: -6.2073516845703125
    5. '           ' → logprob: -6.5823516845703125
    6. '                
' → logprob: -8.832351684570312
    7. ' return' → logprob: -9.207351684570312
    8. '
' → logprob: -9.332351684570312
    9. '            
' → logprob: -9.707351684570312
    10. '\n' → logprob: -9.957351684570312

Token 196: ' yield' (ID: 14376)
  Prédit: ' yield'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.05980168282985687
    2. 'yield' (adapté à ' yield') → logprob: -2.9348015785217285
    3. '               ' → logprob: -6.4348015785217285
    4. '                   ' → logprob: -6.5598015785217285
    5. '	yield' → logprob: -7.0598015785217285
    6. ' 
' → logprob: -7.5598015785217285
    7. '
' → logprob: -8.059802055358887
    8. '                ' → logprob: -8.809802055358887
    9. 'Yield' → logprob: -11.684802055358887
    10. '                    ' → logprob: -11.684802055358887

Token 197: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.02984224446117878
    2. 'np' → logprob: -3.5298421382904053
    3. ' ' → logprob: -9.404842376708984
    4. ' 
' → logprob: -12.154842376708984
    5. '(np' → logprob: -13.029842376708984
    6. ',np' → logprob: -13.529842376708984
    7. ' ' → logprob: -15.404842376708984
    8. ' npe' → logprob: -15.779842376708984
    9. '_np' → logprob: -16.529842376708984
    10. ' 

' → logprob: -17.154842376708984

Token 198: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 199: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.024966740980744362
    2. 'def' → logprob: -4.649966716766357
    3. '
' → logprob: -5.024966716766357
    4. '[' → logprob: -5.899966716766357
    5. '<|end|>' → logprob: -6.274966716766357
    6. '#' → logprob: -7.024966716766357
    7. ' class' → logprob: -7.024966716766357
    8. '[
' → logprob: -8.149967193603516
    9. 'newline' → logprob: -8.149967193603516
    10. ' 
' → logprob: -8.399967193603516

Token 200: ' Spr' (ID: 16635)
  Prédit: 'Knight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Knight' → logprob: -1.1275956630706787
    2. ' Knight' → logprob: -1.6275956630706787
    3. 'Chess' → logprob: -2.7525956630706787
    4. 'Board' → logprob: -2.7525956630706787
    5. ' Board' → logprob: -3.1275956630706787
    6. 'Jump' → logprob: -3.3775956630706787
    7. ' Chess' → logprob: -3.6275956630706787
    8. 'Piece' → logprob: -3.7525956630706787
    9. 'Game' → logprob: -3.8775956630706787
    10. ' Jump' → logprob: -3.8775956630706787

Token 201: 'ink' (ID: 881)
  Prédit: 'ite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.5728948712348938
    2. 'int' → logprob: -1.822894811630249
    3. 'ing' → logprob: -2.197894811630249
    4. 'inter' → logprob: -2.572894811630249
    5. 'inte' → logprob: -3.572894811630249
    6. 'ote' → logprob: -4.072895050048828
    7. 'iter' → logprob: -5.572895050048828
    8. 'o' → logprob: -6.197895050048828
    9. 'ate' → logprob: -6.322895050048828
    10. 'ose' → logprob: -6.447895050048828

Token 202: 'ler' (ID: 1639)
  Prédit: 'ler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ler' → logprob: -0.00022654302301816642
    2. 'er' → logprob: -8.750226974487305
    3. 'le' → logprob: -10.250226974487305
    4. 'lers' → logprob: -11.125226974487305
    5. 'l' → logprob: -12.375226974487305
    6. '   ' → logprob: -13.000226974487305
    7. ' ler' → logprob: -13.750226974487305
    8. '1' → logprob: -13.750226974487305
    9. '#' → logprob: -14.000226974487305
    10. 'ling' → logprob: -14.000226974487305

Token 203: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020017961505800486
    2. ':
' → logprob: -6.252001762390137
    3. '(' → logprob: -9.877001762390137
    4. '(J' → logprob: -11.752001762390137
    5. '<|end|>' → logprob: -13.002001762390137
    6. 'Position' → logprob: -13.502001762390137
    7. ':

' → logprob: -13.502001762390137
    8. '():' → logprob: -13.627001762390137
    9. ':J' → logprob: -13.752001762390137
    10. 'J' → logprob: -13.877001762390137

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004053229466080666
    2. ' def' → logprob: -5.754053115844727
    3. 'def' → logprob: -7.129053115844727
    4. '    
' → logprob: -10.254053115844727
    5. 'class' → logprob: -11.629053115844727
    6. '   ' → logprob: -12.129053115844727
    7. '	def' → logprob: -12.129053115844727
    8. '
' → logprob: -12.504053115844727
    9. '    ' → logprob: -13.004053115844727
    10. '<|end|>' → logprob: -13.004053115844727

Token 205: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.055934444069862366
    2. 'def' (adapté à ' def') → logprob: -2.930934429168701
    3. '   ' → logprob: -6.930934429168701
    4. 'class' → logprob: -10.30593490600586
    5. ' __' → logprob: -10.43093490600586
    6. '__' → logprob: -11.93093490600586
    7. '    ' → logprob: -13.80593490600586
    8. ' ' → logprob: -13.80593490600586
    9. ' class' → logprob: -13.93093490600586
    10. ' positions' → logprob: -15.18093490600586

Token 206: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02694501169025898
    2. '_init' → logprob: -4.151945114135742
    3. '__' → logprob: -5.276945114135742
    4. ' ' → logprob: -5.776945114135742
    5. ' init' → logprob: -7.026945114135742
    6. ' _' → logprob: -7.776945114135742
    7. ' def' → logprob: -7.901945114135742
    8. ' ' → logprob: -7.901945114135742
    9. 'init' → logprob: -8.276945114135742
    10. '_' → logprob: -8.901945114135742

Token 207: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.704273118884885e-07
    2. 'ini' → logprob: -15.000000953674316
    3. 'in' → logprob: -16.5
    4. ' init' → logprob: -17.125
    5. 'int' → logprob: -17.375
    6. 'i' → logprob: -17.5
    7. 'class' → logprob: -17.625
    8. '
' → logprob: -18.875
    9. 'def' → logprob: -19.0
    10. 'call' → logprob: -19.375

Token 208: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07945004850625992
    2. '(self' → logprob: -2.5794501304626465
    3. '__' → logprob: -8.079449653625488
    4. '(' → logprob: -8.829449653625488
    5. '_(' → logprob: -9.829449653625488
    6. ' (' → logprob: -10.829449653625488
    7. 'self' → logprob: -11.204449653625488
    8. '__(
' → logprob: -11.579449653625488
    9. ',' → logprob: -13.079449653625488
    10. '__((' → logprob: -13.954449653625488

Token 209: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004446124075911939
    2. ' self' → logprob: -7.750444412231445
    3. ')' → logprob: -12.375444412231445
    4. '0' → logprob: -12.875444412231445
    5. ',' → logprob: -13.375444412231445
    6. 'position' → logprob: -13.625444412231445
    7. 'pos' → logprob: -14.125444412231445
    8. '(self' → logprob: -14.250444412231445
    9. '10' → logprob: -14.250444412231445
    10. ' ' → logprob: -14.750444412231445

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032195416279137135
    2. ' ,' → logprob: -5.7532196044921875
    3. 'self' → logprob: -10.253219604492188
    4. '<|end|>' → logprob: -13.628219604492188
    5. '‌,' → logprob: -13.878219604492188
    6. ')' → logprob: -13.878219604492188
    7. 'position' → logprob: -14.878219604492188
    8. ' ' → logprob: -15.003219604492188
    9. '‍,' → logprob: -15.128219604492188
    10. ' self' → logprob: -15.253219604492188

Token 211: ' pos' (ID: 1253)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.818453311920166
    2. ' position' → logprob: -1.568453311920166
    3. 'position' → logprob: -1.693453311920166
    4. ' self' → logprob: -2.193453311920166
    5. 'positions' → logprob: -4.443453311920166
    6. 'pos' → logprob: -4.568453311920166
    7. ' positions' → logprob: -4.943453311920166
    8. ' pos' → logprob: -5.068453311920166
    9. 'start' → logprob: -5.193453311920166
    10. ' start' → logprob: -5.443453311920166

Token 212: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.605026364326477
    2. '):' → logprob: -0.855026364326477
    3. ',' → logprob: -3.6050262451171875
    4. ' :' → logprob: -7.6050262451171875
    5. ')' → logprob: -7.7300262451171875
    6. ' ):' → logprob: -8.355026245117188
    7. '):
' → logprob: -9.230026245117188
    8. '=None' → logprob: -9.355026245117188
    9. ' ,' → logprob: -9.855026245117188
    10. '<|end|>' → logprob: -10.730026245117188

Token 213: 'Position' (ID: 5647)
  Prédit: 'Position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Position' → logprob: -0.01817651465535164
    2. ' Position' → logprob: -4.018176555633545
    3. ')' → logprob: -10.643176078796387
    4. '<|end|>' → logprob: -14.143176078796387
    5. '(Position' → logprob: -14.393176078796387
    6. '_Position' → logprob: -15.018176078796387
    7. '_position' → logprob: -15.143176078796387
    8. 'position' → logprob: -15.268176078796387
    9. 'int' → logprob: -15.518176078796387
    10. '.Position' → logprob: -16.018177032470703

Token 214: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3160189390182495
    2. ',' → logprob: -1.3160189390182495
    3. ' ):' → logprob: -6.441019058227539
    4. ')' → logprob: -7.191019058227539
    5. '):
' → logprob: -8.441019058227539
    6. ' ,' → logprob: -8.816019058227539
    7. '   ' → logprob: -10.941019058227539
    8. ' )' → logprob: -11.941019058227539
    9. '=' → logprob: -12.941019058227539
    10. '       ' → logprob: -13.191019058227539

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1829890012741089
    2. ' self' → logprob: -1.9329890012741089
    3. 'self' → logprob: -3.8079891204833984
    4. '	self' → logprob: -8.932989120483398
    5. ' ' → logprob: -9.557989120483398
    6. '   ' → logprob: -9.932989120483398
    7. ',' → logprob: -10.557989120483398
    8. '	' → logprob: -11.432989120483398
    9. ' ' → logprob: -11.682989120483398
    10. ',self' → logprob: -12.432989120483398

Token 216: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.046347275376319885
    2. ' self' → logprob: -3.2963473796844482
    3. '       ' → logprob: -4.796347141265869
    4. '   ' → logprob: -11.796347618103027
    5. '	self' → logprob: -12.671347618103027
    6. '        ' → logprob: -15.046347618103027
    7. ' ' → logprob: -15.796347618103027
    8. '    ' → logprob: -16.54634666442871
    9. '      ' → logprob: -16.67134666442871
    10. '
' → logprob: -16.79634666442871

Token 217: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.039564233273267746
    2. '.position' → logprob: -3.7895641326904297
    3. ' =' → logprob: -4.66456413269043
    4. '.' → logprob: -5.16456413269043
    5. '=' → logprob: -7.66456413269043
    6. 'pos' → logprob: -8.16456413269043
    7. '.positions' → logprob: -8.91456413269043
    8. '_pos' → logprob: -9.66456413269043
    9. ' .' → logprob: -10.41456413269043
    10. ' pos' → logprob: -10.78956413269043

Token 218: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761903524398804
    2. '=' → logprob: -0.8261903524398804
    3. '<|end|>' → logprob: -9.201189994812012
    4. ' ' → logprob: -9.326189994812012
    5. ')' → logprob: -10.701189994812012
    6. ',' → logprob: -10.826189994812012
    7. '_' → logprob: -12.451189994812012
    8. '.' → logprob: -12.826189994812012
    9. ' =)' → logprob: -13.076189994812012
    10. ' =
' → logprob: -13.076189994812012

Token 219: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.12692947685718536
    2. 'pos' → logprob: -2.126929521560669
    3. 'Position' → logprob: -14.37692928314209
    4. '	pos' → logprob: -14.75192928314209
    5. ' Position' → logprob: -15.37692928314209
    6. 'Pos' → logprob: -16.626930236816406
    7. '_pos' → logprob: -16.626930236816406
    8. 'position' → logprob: -16.751930236816406
    9. ' position' → logprob: -16.876930236816406
    10. ' ' → logprob: -18.001930236816406

Token 220: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02252810448408127
    2. '<|end|>' → logprob: -4.147528171539307
    3. '   ' → logprob: -5.147528171539307
    4. '<|end|>' → logprob: -8.022527694702148
    5. 'def' → logprob: -8.647527694702148
    6. ' def' → logprob: -9.772527694702148
    7. ',' → logprob: -10.647527694702148
    8. '    
' → logprob: -10.772527694702148
    9. '

' → logprob: -10.897527694702148
    10. '	def' → logprob: -11.647527694702148

Token 221: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008528641425073147
    2. '
' → logprob: -5.508528709411621
    3. '<|end|>' → logprob: -6.008528709411621
    4. 'def' → logprob: -6.633528709411621
    5. ' def' → logprob: -8.008528709411621
    6. '<|end|>' → logprob: -8.883528709411621
    7. '       ' → logprob: -9.633528709411621
    8. '    
' → logprob: -9.758528709411621
    9. '	def' → logprob: -10.258528709411621
    10. ',' → logprob: -11.258528709411621

Token 222: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02335856482386589
    2. 'def' → logprob: -4.023358345031738
    3. '       ' → logprob: -5.398358345031738
    4. ' self' → logprob: -8.398358345031738
    5. '   ' → logprob: -8.523358345031738
    6. 'class' → logprob: -8.773358345031738
    7. '
' → logprob: -9.648358345031738
    8. '@property' → logprob: -12.148358345031738
    9. '        
' → logprob: -12.273358345031738
    10. '	self' → logprob: -12.523358345031738

Token 223: '.cover' (ID: 93824)
  Prédit: '.moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.moves' → logprob: -1.8639092445373535
    2. '.' → logprob: -1.9889092445373535
    3. '.jump' → logprob: -1.9889092445373535
    4. 'def' → logprob: -2.6139092445373535
    5. '.j' → logprob: -2.6139092445373535
    6. '.positions' → logprob: -2.6139092445373535
    7. 'class' → logprob: -2.9889092445373535
    8. '.pos' → logprob: -2.9889092445373535
    9. '_moves' → logprob: -3.1139092445373535
    10. '._' → logprob: -3.3639092445373535

Token 224: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.089560367166996
    2. 'ed' → logprob: -2.4645602703094482
    3. '=' → logprob: -8.464560508728027
    4. ' =' → logprob: -8.589560508728027
    5. 's' → logprob: -8.839560508728027
    6. 'ages' → logprob: -10.339560508728027
    7. '=set' → logprob: -10.964560508728027
    8. 'aged' → logprob: -11.589560508728027
    9. '   ' → logprob: -12.214560508728027
    10. 'set' → logprob: -12.214560508728027

Token 225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3880196809768677
    2. '=' → logprob: -1.1380196809768677
    3. 's' → logprob: -7.513019561767578
    4. '=set' → logprob: -8.138019561767578
    5. ' ' → logprob: -8.513019561767578
    6. '  ' → logprob: -10.388019561767578
    7. '   ' → logprob: -10.388019561767578
    8. ':' → logprob: -10.763019561767578
    9. '_set' → logprob: -11.763019561767578
    10. '=[]' → logprob: -12.388019561767578

Token 226: ' self' (ID: 1051)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.026007182896137238
    2. 'Jump' → logprob: -4.651007175445557
    3. '{}' → logprob: -5.026007175445557
    4. '{' → logprob: -5.151007175445557
    5. ' set' → logprob: -5.651007175445557
    6. '[]' → logprob: -9.026007652282715
    7. ' Jump' → logprob: -9.776007652282715
    8. ' {' → logprob: -11.651007652282715
    9. '	set' → logprob: -11.776007652282715
    10. '0' → logprob: -11.901007652282715

Token 227: '.calc' (ID: 83158)
  Prédit: '.pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.33109113574028015
    2. '.next' → logprob: -1.5810911655426025
    3. 'pos' → logprob: -2.8310911655426025
    4. '._' → logprob: -5.081090927124023
    5. 'Jump' → logprob: -6.081090927124023
    6. '.' → logprob: -6.706090927124023
    7. '.jump' → logprob: -6.831090927124023
    8. '.position' → logprob: -6.956090927124023
    9. '.J' → logprob: -6.956090927124023
    10. '.get' → logprob: -6.956090927124023

Token 228: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0019219681853428483
    2. '_area' → logprob: -7.376922130584717
    3. '_positions' → logprob: -7.376922130584717
    4. '_range' → logprob: -8.501921653747559
    5. '_cover' → logprob: -8.751921653747559
    6. '_position' → logprob: -9.251921653747559
    7. '_points' → logprob: -10.626921653747559
    8. '_radius' → logprob: -10.626921653747559
    9. 'Coverage' → logprob: -10.626921653747559
    10. '_cov' → logprob: -11.251921653747559

Token 229: 'coverage' (ID: 90073)
  Prédit: 'coverage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coverage' → logprob: -0.00017398154886905104
    2. 'positions' → logprob: -8.875173568725586
    3. 'cover' → logprob: -11.375173568725586
    4. 'area' → logprob: -12.000173568725586
    5. '_' → logprob: -12.125173568725586
    6. 'range' → logprob: -12.625173568725586
    7. ' coverage' → logprob: -12.625173568725586
    8. 'Coverage' → logprob: -13.125173568725586
    9. 'jump' → logprob: -14.500173568725586
    10. 's' → logprob: -15.375173568725586

Token 230: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008910824544727802
    2. '(' → logprob: -5.133910655975342
    3. '()
' → logprob: -6.508910655975342
    4. '(pos' → logprob: -7.883910655975342
    5. '()

' → logprob: -8.1339111328125
    6. '([]' → logprob: -8.5089111328125
    7. '(set' → logprob: -8.5089111328125
    8. ' ()' → logprob: -10.0089111328125
    9. '(lambda' → logprob: -10.0089111328125
    10. '[]' → logprob: -10.3839111328125

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2438424974679947
    2. '
' → logprob: -1.8688424825668335
    3. 'def' → logprob: -2.993842601776123
    4. '    
' → logprob: -5.118842601776123
    5. ' def' → logprob: -5.243842601776123
    6. '```' → logprob: -8.868842124938965
    7. '<|end|>' → logprob: -8.993842124938965
    8. '        
' → logprob: -9.118842124938965
    9. ' 
' → logprob: -9.243842124938965
    10. ' ' → logprob: -9.493842124938965

Token 232: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41166001558303833
    2. 'def' (adapté à ' def') → logprob: -1.4116599559783936
    3. '   ' → logprob: -2.7866599559783936
    4. ' def' → logprob: -3.5366599559783936
    5. '    
' → logprob: -6.286660194396973
    6. '<|end|>' → logprob: -7.786660194396973
    7. ' ' → logprob: -8.786660194396973
    8. '  
' → logprob: -8.911660194396973
    9. ' 
' → logprob: -9.036660194396973
    10. '```' → logprob: -9.411660194396973

Token 233: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.2833424508571625
    2. ' calc' → logprob: -1.4083424806594849
    3. 'def' → logprob: -6.783342361450195
    4. ' def' → logprob: -7.908342361450195
    5. 'cover' → logprob: -8.658342361450195
    6. ' coverage' → logprob: -9.158342361450195
    7. ' cover' → logprob: -9.408342361450195
    8. 'cal' → logprob: -9.783342361450195
    9. '_calc' → logprob: -9.908342361450195
    10. 'coverage' → logprob: -10.158342361450195

Token 234: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.128163257315464e-07
    2. '_cover' → logprob: -15.125
    3. ' _' → logprob: -18.375
    4. '_cov' → logprob: -18.5
    5. 'coverage' → logprob: -19.5
    6. '_positions' → logprob: -19.75
    7. '_
' → logprob: -19.875
    8. '_

' → logprob: -20.25
    9. '_range' → logprob: -21.75
    10. 'Coverage' → logprob: -21.75

Token 235: 'coverage' (ID: 90073)
  Prédit: 'coverage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coverage' → logprob: -4.008129963040119e-06
    2. ' coverage' → logprob: -12.625003814697266
    3. 'cover' → logprob: -14.375003814697266
    4. 'positions' → logprob: -17.125003814697266
    5. 'position' → logprob: -17.625003814697266
    6. '_' → logprob: -17.750003814697266
    7. 'Coverage' → logprob: -18.375003814697266
    8. 'covery' → logprob: -19.875003814697266
    9. 'visibility' → logprob: -20.125003814697266
    10. 'movement' → logprob: -20.125003814697266

Token 236: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.941850526549388e-06
    2. '(' → logprob: -11.875007629394531
    3. ' (' → logprob: -14.125007629394531
    4. '   ' → logprob: -16.62500762939453
    5. 'self' → logprob: -17.62500762939453
    6. ' self' → logprob: -18.25000762939453
    7. '(s' → logprob: -18.62500762939453
    8. '()' → logprob: -18.75000762939453
    9. '(
' → logprob: -19.12500762939453
    10. '       ' → logprob: -19.50000762939453

Token 237: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.387099027633667
    2. 'self' → logprob: -1.387099027633667
    3. '(self' → logprob: -3.262099027633667
    4. '):
' → logprob: -3.512099027633667
    5. ')' → logprob: -6.262099266052246
    6. ',' → logprob: -8.012099266052246
    7. ' self' → logprob: -8.012099266052246
    8. '   ' → logprob: -8.637099266052246
    9. '):

' → logprob: -8.887099266052246
    10. ' ):' → logprob: -9.762099266052246

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30358296632766724
    2. ' coverage' → logprob: -1.5535829067230225
    3. 'coverage' → logprob: -3.3035829067230225
    4. ' positions' → logprob: -5.553583145141602
    5. ' reachable' → logprob: -6.303583145141602
    6. 'positions' → logprob: -6.428583145141602
    7. ' covered' → logprob: -6.553583145141602
    8. 'covered' → logprob: -6.803583145141602
    9. ' visited' → logprob: -6.928583145141602
    10. 'visited' → logprob: -7.053583145141602

Token 239: ' #' (ID: 1069)
  Prédit: 'coverage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coverage' → logprob: -0.14751450717449188
    2. 'covered' → logprob: -2.397514581680298
    3. ' coverage' → logprob: -4.147514343261719
    4. '       ' → logprob: -4.647514343261719
    5. 'positions' → logprob: -4.647514343261719
    6. '{' → logprob: -5.397514343261719
    7. 'cover' → logprob: -6.272514343261719
    8. 'visited' → logprob: -6.897514343261719
    9. ' covered' → logprob: -7.147514343261719
    10. 'result' → logprob: -7.647514343261719

Token 240: ' Around' (ID: 51777)
  Prédit: 'coverage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coverage' → logprob: -0.17278867959976196
    2. ' coverage' → logprob: -2.172788619995117
    3. 'covered' → logprob: -4.297788619995117
    4. 'visited' → logprob: -4.922788619995117
    5. 'positions' → logprob: -4.922788619995117
    6. 'dire' → logprob: -6.297788619995117
    7. '#' → logprob: -6.422788619995117
    8. 'd' → logprob: -6.547788619995117
    9. '   ' → logprob: -6.672788619995117
    10. ' covered' → logprob: -7.047788619995117

Token 241: ' position' (ID: 4010)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positions' → logprob: -1.4843308925628662
    2. ' coverage' → logprob: -1.6093308925628662
    3. ' return' → logprob: -1.8593308925628662
    4. 'positions' → logprob: -2.109330892562866
    5. 'coverage' → logprob: -2.234330892562866
    6. 'return' → logprob: -2.234330892562866
    7. ' offsets' → logprob: -3.859330892562866
    8. '[' → logprob: -4.609331130981445
    9. 'cover' → logprob: -4.984331130981445
    10. '[(' → logprob: -5.234331130981445

Token 242: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1345517784357071
    2. 'positions' → logprob: -3.134551763534546
    3. 'return' → logprob: -3.884551763534546
    4. ' positions' → logprob: -4.509552001953125
    5. 's' → logprob: -4.509552001953125
    6. ' coverage' → logprob: -4.884552001953125
    7. 'coverage' → logprob: -4.884552001953125
    8. ' return' → logprob: -5.509552001953125
    9. '<|end|>' → logprob: -5.509552001953125
    10. ' =' → logprob: -5.634552001953125

Token 243: ' range' (ID: 3352)
  Prédit: ' coverage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coverage' → logprob: -0.4667588472366333
    2. 'coverage' → logprob: -1.0917588472366333
    3. '       ' → logprob: -3.8417587280273438
    4. 'cover' → logprob: -5.716758728027344
    5. 'return' → logprob: -5.966758728027344
    6. ' return' → logprob: -6.091758728027344
    7. ' positions' → logprob: -6.591758728027344
    8. 'positions' → logprob: -7.091758728027344
    9. 'result' → logprob: -7.466758728027344
    10. '[' → logprob: -7.591758728027344

Token 244: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6854977011680603
    2. '(' → logprob: -1.435497760772705
    3. ' =' → logprob: -1.685497760772705
    4. 'return' → logprob: -3.560497760772705
    5. '1' → logprob: -4.810497760772705
    6. 's' → logprob: -4.810497760772705
    7. '   ' → logprob: -4.935497760772705
    8. '       ' → logprob: -5.310497760772705
    9. '3' → logprob: -5.560497760772705
    10. 'range' → logprob: -5.810497760772705

Token 245: ' self' (ID: 1051)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6074973344802856
    2. '2' → logprob: -1.1074973344802856
    3. '3' → logprob: -2.232497215270996
    4. ' ' → logprob: -4.232497215270996
    5. '[' → logprob: -6.607497215270996
    6. '5' → logprob: -7.482497215270996
    7. '[(' → logprob: -7.857497215270996
    8. '[
' → logprob: -8.357497215270996
    9. '4' → logprob: -8.482497215270996
    10. ' [' → logprob: -9.732497215270996

Token 246: ' plus' (ID: 2932)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1972249746322632
    2. ' ' → logprob: -1.4472249746322632
    3. '+' → logprob: -2.5722250938415527
    4. '(' → logprob: -2.8222250938415527
    5. ' +' → logprob: -2.9472250938415527
    6. ',' → logprob: -2.9472250938415527
    7. ':' → logprob: -3.1972250938415527
    8. '3' → logprob: -3.4472250938415527
    9. '2' → logprob: -4.072225093841553
    10. '5' → logprob: -4.197225093841553

Token 247: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28787216544151306
    2. '[
' → logprob: -2.162872076034546
    3. 'all' → logprob: -3.412872076034546
    4. '{' → logprob: -3.412872076034546
    5. 'Jump' → logprob: -4.537872314453125
    6. ' [' → logprob: -4.662872314453125
    7. 'self' → logprob: -5.037872314453125
    8. ' ' → logprob: -5.287872314453125
    9. '[(' → logprob: -5.287872314453125
    10. '1' → logprob: -5.287872314453125

Token 248: '8' (ID: 23)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5277507305145264
    2. 'Position' → logprob: -1.6527507305145264
    3. '[
' → logprob: -1.7777507305145264
    4. '[(' → logprob: -4.1527509689331055
    5. '{' → logprob: -4.5277509689331055
    6. '1' → logprob: -5.6527509689331055
    7. 'Jump' → logprob: -5.7777509689331055
    8. '(Position' → logprob: -5.9027509689331055
    9. ' Position' → logprob: -6.1527509689331055
    10. 'positions' → logprob: -6.5277509689331055

Token 249: ' neighbours' (ID: 71541)
  Prédit: ' surrounding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' surrounding' → logprob: -0.8300462961196899
    2. ' positions' → logprob: -1.70504629611969
    3. 'positions' → logprob: -1.95504629611969
    4. '<|end|>' → logprob: -2.3300461769104004
    5. ' neighboring' → logprob: -2.9550461769104004
    6. ' adjacent' → logprob: -3.5800461769104004
    7. ' neighbors' → logprob: -4.3300461769104
    8. 'neighbor' → logprob: -4.4550461769104
    9. 'neighbors' → logprob: -4.7050461769104
    10. ' directions' → logprob: -5.2050461769104

Token 250: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017216388136148453
    2. '<|end|>' → logprob: -4.767216205596924
    3. ',' → logprob: -5.892216205596924
    4. '
' → logprob: -6.017216205596924
    5. ' =' → logprob: -7.267216205596924
    6. 'return' → logprob: -7.517216205596924
    7. ':' → logprob: -8.142216682434082
    8. ':
' → logprob: -8.392216682434082
    9. 's' → logprob: -8.392216682434082
    10. '<|end|>' → logprob: -8.517216682434082

Token 251: 'up' (ID: 817)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.7274861335754395
    2. '[(' → logprob: -0.8524861335754395
    3. 'self' → logprob: -3.7274861335754395
    4. '[' → logprob: -3.8524861335754395
    5. ' [(' → logprob: -4.3524861335754395
    6. ' [
' → logprob: -4.9774861335754395
    7. ')' → logprob: -5.1024861335754395
    8. ')
' → logprob: -5.6024861335754395
    9. '[self' → logprob: -6.1024861335754395
    10. ' self' → logprob: -6.1024861335754395

Token 252: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.021091576665639877
    2. ' to' → logprob: -4.521091461181641
    3. ',' → logprob: -5.521091461181641
    4. '(' → logprob: -6.146091461181641
    5. ')' → logprob: -6.646091461181641
    6. '       ' → logprob: -7.521091461181641
    7. '1' → logprob: -8.02109146118164
    8. '   ' → logprob: -8.02109146118164
    9. 'left' → logprob: -8.02109146118164
    10. '(one' → logprob: -8.89609146118164

Token 253: ' ' (ID: 220)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -1.425287127494812
    2. '9' → logprob: -1.550287127494812
    3. '1' → logprob: -1.925287127494812
    4. '8' → logprob: -2.3002872467041016
    5. ' one' → logprob: -2.4252872467041016
    6. 'distance' → logprob: -2.6752872467041016
    7. ' ' → logprob: -2.9252872467041016
    8. 'eight' → logprob: -3.4252872467041016
    9. ')' → logprob: -4.425287246704102
    10. 'nine' → logprob: -4.925287246704102

Token 254: '9' (ID: 24)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9356743693351746
    2. '8' → logprob: -1.1856744289398193
    3. '9' → logprob: -1.8106744289398193
    4. 'one' → logprob: -2.8106744289398193
    5. 'eight' → logprob: -3.5606744289398193
    6. ' one' → logprob: -4.31067419052124
    7. ' ' → logprob: -4.43567419052124
    8. 'distance' → logprob: -4.56067419052124
    9. 'positions' → logprob: -6.06067419052124
    10. 'nine' → logprob: -6.31067419052124

Token 255: ' pos' (ID: 1253)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.5428467392921448
    2. ')' → logprob: -1.1678466796875
    3. 'positions' → logprob: -2.5428466796875
    4. '):
' → logprob: -5.0428466796875
    5. ' )' → logprob: -5.2928466796875
    6. ' cells' → logprob: -5.2928466796875
    7. '):' → logprob: -5.5428466796875
    8. ')
' → logprob: -5.5428466796875
    9. '):

' → logprob: -6.5428466796875
    10. 'cells' → logprob: -6.6678466796875

Token 256: ')
' (ID: 446)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8865017890930176
    2. ')' → logprob: -1.0115017890930176
    3. 'itions' → logprob: -1.5115017890930176
    4. 'ions' → logprob: -6.136501789093018
    5. ')s' → logprob: -8.13650131225586
    6. 'positions' → logprob: -8.26150131225586
    7. '   ' → logprob: -8.76150131225586
    8. ')
' → logprob: -9.13650131225586
    9. 'ations' → logprob: -9.13650131225586
    10. ' )' → logprob: -9.51150131225586

Token 257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006581788882613182
    2. '<|end|>' → logprob: -5.756581783294678
    3. '
' → logprob: -6.506581783294678
    4. 'return' → logprob: -7.631581783294678
    5. ',' → logprob: -8.006582260131836
    6. 'def' → logprob: -8.881582260131836
    7. ' coverage' → logprob: -9.006582260131836
    8. 'positions' → logprob: -9.256582260131836
    9. '   ' → logprob: -9.256582260131836
    10. 'coverage' → logprob: -9.381582260131836

Token 258: ' neighbors' (ID: 31655)
  Prédit: 'coverage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coverage' → logprob: -0.02583804912865162
    2. 'positions' → logprob: -4.7758378982543945
    3. 'covered' → logprob: -5.0258378982543945
    4. ' coverage' → logprob: -5.5258378982543945
    5. 'cover' → logprob: -5.6508378982543945
    6. '       ' → logprob: -6.2758378982543945
    7. 'return' → logprob: -7.1508378982543945
    8. 'covers' → logprob: -9.400837898254395
    9. 'result' → logprob: -9.900837898254395
    10. 'points' → logprob: -10.400837898254395

Token 259: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013042574748396873
    2. '=' → logprob: -4.388042449951172
    3. '_offsets' → logprob: -7.763042449951172
    4. 's' → logprob: -10.013042449951172
    5. '_positions' → logprob: -10.013042449951172
    6. '   ' → logprob: -11.888042449951172
    7. ' ' → logprob: -12.513042449951172
    8. 'd' → logprob: -13.888042449951172
    9. '=[' → logprob: -13.888042449951172
    10. ':' → logprob: -14.263042449951172

Token 260: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5151047110557556
    2. '[
' → logprob: -1.0151047706604004
    3. '[self' → logprob: -3.8901047706604004
    4. '[(' → logprob: -4.0151047706604
    5. '[J' → logprob: -7.0151047706604
    6. '[j' → logprob: -8.765104293823242
    7. '[]
' → logprob: -8.890104293823242
    8. '[position' → logprob: -9.265104293823242
    9. '[new' → logprob: -9.265104293823242
    10. '[next' → logprob: -9.890104293823242

Token 261: 'Position' (ID: 5647)
  Prédit: 'Position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Position' → logprob: -0.6657748222351074
    2. 'self' → logprob: -0.7907748222351074
    3. '(Position' → logprob: -4.540774822235107
    4. ' self' → logprob: -4.915774822235107
    5. ' Position' → logprob: -5.040774822235107
    6. '(' → logprob: -5.165774822235107
    7. '(self' → logprob: -6.290774822235107
    8. ' (' → logprob: -8.415775299072266
    9. '(-' → logprob: -8.790775299072266
    10. '   ' → logprob: -10.290775299072266

Token 262: '(dx' (ID: 124932)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00018625585653353482
    2. '(' → logprob: -8.8751859664917
    3. 'self' → logprob: -10.8751859664917
    4. '(dx' → logprob: -11.5001859664917
    5. '(x' → logprob: -11.6251859664917
    6. '((' → logprob: -12.7501859664917
    7. '(-' → logprob: -13.6251859664917
    8. '(i' → logprob: -13.6251859664917
    9. '(pos' → logprob: -13.8751859664917
    10. '(max' → logprob: -14.7501859664917

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004494089167565107
    2. ' ,' → logprob: -6.8794941902160645
    3. ' +' → logprob: -7.0044941902160645
    4. '+' → logprob: -7.1294941902160645
    5. '-' → logprob: -7.5044941902160645
    6. ' -' → logprob: -8.004493713378906
    7. '=' → logprob: -9.004493713378906
    8. '(self' → logprob: -9.254493713378906
    9. 'self' → logprob: -9.254493713378906
    10. ',pos' → logprob: -9.254493713378906

Token 264: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.5897756814956665
    2. '-' → logprob: -0.9647756814956665
    3. ' dy' → logprob: -3.339775562286377
    4. ' -' → logprob: -3.714775562286377
    5. '-d' → logprob: -5.589775562286377
    6. '0' → logprob: -7.464775562286377
    7. ' ' → logprob: -8.089776039123535
    8. '   ' → logprob: -11.089776039123535
    9. '  ' → logprob: -11.464776039123535
    10. '    ' → logprob: -11.839776039123535

Token 265: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6408663988113403
    2. ')' → logprob: -1.6408663988113403
    3. 'for' → logprob: -2.015866279602051
    4. '(' → logprob: -2.515866279602051
    5. '           ' → logprob: -3.765866279602051
    6. ' in' → logprob: -3.890866279602051
    7. '(x' → logprob: -5.390866279602051
    8. '(-' → logprob: -5.515866279602051
    9. ' (' → logprob: -6.015866279602051
    10. ',' → logprob: -6.265866279602051

Token 266: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6677514910697937
    2. 'for' → logprob: -0.7927514910697937
    3. '(' → logprob: -3.9177515506744385
    4. '           ' → logprob: -5.042751312255859
    5. ' in' → logprob: -5.167751312255859
    6. '       ' → logprob: -8.04275131225586
    7. '(dx' → logprob: -8.16775131225586
    8. ' (' → logprob: -8.29275131225586
    9. '(x' → logprob: -8.41775131225586
    10. '(-' → logprob: -8.41775131225586

Token 267: ' dx' (ID: 29472)
  Prédit: '(dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.7908055186271667
    2. 'dx' → logprob: -1.0408055782318115
    3. ' dx' → logprob: -1.7908055782318115
    4. ' (' → logprob: -4.290805339813232
    5. '(-' → logprob: -4.915805339813232
    6. ' (-' → logprob: -6.540805339813232
    7. ' range' → logprob: -6.790805339813232
    8. 'range' → logprob: -6.915805339813232
    9. '   ' → logprob: -7.540805339813232
    10. ' ' → logprob: -8.66580581665039

Token 268: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3868977725505829
    2. ' in' → logprob: -1.1368978023529053
    3. 'range' → logprob: -11.761898040771484
    4. '   ' → logprob: -12.261898040771484
    5. ' ' → logprob: -12.511898040771484
    6. '(-' → logprob: -13.511898040771484
    7. '  ' → logprob: -13.511898040771484
    8. '-' → logprob: -13.511898040771484
    9. '
' → logprob: -13.761898040771484
    10. 'import' → logprob: -14.011898040771484

Token 269: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.5003844499588013
    2. '(-' → logprob: -1.2503844499588013
    3. 'range' → logprob: -3.0003843307495117
    4. ' range' → logprob: -3.0003843307495117
    5. ' (-' → logprob: -5.250384330749512
    6. ' [-' → logprob: -6.125384330749512
    7. '[' → logprob: -9.000384330749512
    8. '(range' → logprob: -9.375384330749512
    9. '-' → logprob: -9.875384330749512
    10. '   ' → logprob: -10.375384330749512

Token 270: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '
' → logprob: -15.875001907348633
    4. '0' → logprob: -16.125001907348633
    5. 'self' → logprob: -16.937501907348633
    6. '-' → logprob: -17.375001907348633
    7. '   ' → logprob: -18.125001907348633
    8. '```' → logprob: -18.812501907348633
    9. '' → logprob: -18.937501907348633
    10. '

' → logprob: -19.062501907348633

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032361785415560007
    2. ' ,' → logprob: -5.753236293792725
    3. '0' → logprob: -10.003235816955566
    4. ' ' → logprob: -11.503235816955566
    5. ',
' → logprob: -13.878235816955566
    6. '1' → logprob: -15.003235816955566
    7. ',+' → logprob: -15.003235816955566
    8. '   ' → logprob: -15.128235816955566
    9. '
' → logprob: -15.378235816955566
    10. 'import' → logprob: -16.003236770629883

Token 272: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '1' → logprob: -18.625553131103516
    4. '
' → logprob: -18.875553131103516
    5. ' ' → logprob: -19.500553131103516
    6. '   ' → logprob: -19.625553131103516
    7. ' 
' → logprob: -19.750553131103516
    8. ',' → logprob: -20.000553131103516
    9. '

' → logprob: -20.125553131103516
    10. '  ' → logprob: -20.250553131103516

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056740209460258484
    2. ']' → logprob: -3.0567402839660645
    3. ' ,' → logprob: -4.9317402839660645
    4. '],' → logprob: -7.5567402839660645
    5. ' ]' → logprob: -8.556739807128906
    6. '   ' → logprob: -9.431739807128906
    7. ' ' → logprob: -10.181739807128906
    8. ',-' → logprob: -11.056739807128906
    9. ' ],' → logprob: -11.681739807128906
    10. '       ' → logprob: -11.681739807128906

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '+' → logprob: -18.750030517578125
    4. '   ' → logprob: -21.500030517578125
    5. '
' → logprob: -21.625030517578125
    6. ']' → logprob: -21.750030517578125
    7. '```' → logprob: -21.875030517578125
    8. ',' → logprob: -22.125030517578125
    9. '１' → logprob: -22.125030517578125
    10. ' ' → logprob: -22.500030517578125

Token 275: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03715892881155014
    2. ' for' → logprob: -3.412158966064453
    3. 'for' → logprob: -6.162158966064453
    4. '   ' → logprob: -7.412158966064453
    5. ' ]' → logprob: -8.412158966064453
    6. '       ' → logprob: -8.662158966064453
    7. ',' → logprob: -9.412158966064453
    8. '    ' → logprob: -9.662158966064453
    9. '           ' → logprob: -10.037158966064453
    10. '	for' → logprob: -10.162158966064453

Token 276: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07932671904563904
    2. 'for' → logprob: -2.579326629638672
    3. '	for' → logprob: -8.579326629638672
    4. '           ' → logprob: -8.829326629638672
    5. '               ' → logprob: -11.079326629638672
    6. '                ' → logprob: -11.079326629638672
    7. '            ' → logprob: -11.329326629638672
    8. '   ' → logprob: -11.579326629638672
    9. '             ' → logprob: -11.704326629638672
    10. '        ' → logprob: -11.829326629638672

Token 277: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.6931514143943787
    2. ' dy' → logprob: -0.6931514143943787
    3. '   ' → logprob: -13.193151473999023
    4. '.dy' → logprob: -14.443151473999023
    5. ' ' → logprob: -14.693151473999023
    6. '       ' → logprob: -14.943151473999023
    7. '    ' → logprob: -14.943151473999023
    8. '  ' → logprob: -15.818151473999023
    9. '           ' → logprob: -16.193151473999023
    10. '     ' → logprob: -16.568151473999023

Token 278: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008802352473139763
    2. 'in' → logprob: -4.88380241394043
    3. '[-' → logprob: -7.00880241394043
    4. ' [-' → logprob: -8.25880241394043
    5. ' ' → logprob: -11.63380241394043
    6. '   ' → logprob: -12.13380241394043
    7. '([-' → logprob: -12.25880241394043
    8. ' (-' → logprob: -12.75880241394043
    9. '(-' → logprob: -12.88380241394043
    10. '][-' → logprob: -14.00880241394043

Token 279: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0005537479883059859
    2. ' [-' → logprob: -7.500553607940674
    3. '-' → logprob: -14.375554084777832
    4. '[' → logprob: -16.250553131103516
    5. ' ' → logprob: -17.250553131103516
    6. '   ' → logprob: -17.500553131103516
    7. '  ' → logprob: -19.125553131103516
    8. '(-' → logprob: -19.250553131103516
    9. '{-' → logprob: -19.500553131103516
    10. '][-' → logprob: -19.750553131103516

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.250000953674316
    3. '<|end|>' → logprob: -16.000001907348633
    4. ',' → logprob: -16.375001907348633
    5. '
' → logprob: -17.625001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '১' → logprob: -18.250001907348633
    8. '```' → logprob: -18.250001907348633
    9. '<|end|>' → logprob: -18.250001907348633
    10. '१' → logprob: -18.312501907348633

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008123377338051796
    2. '1' → logprob: -4.883123397827148
    3. ' ,' → logprob: -7.758123397827148
    4. ',-' → logprob: -10.008123397827148
    5. ' ' → logprob: -10.883123397827148
    6. ',
' → logprob: -11.258123397827148
    7. '-' → logprob: -11.633123397827148
    8. ' -' → logprob: -13.508123397827148
    9. '   ' → logprob: -14.133123397827148
    10. '0' → logprob: -14.508123397827148

Token 282: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17579133808612823
    2. '1' → logprob: -1.9257913827896118
    3. '-' → logprob: -4.175791263580322
    4. ' ' → logprob: -9.80079174041748
    5. ' -' → logprob: -10.55079174041748
    6. '
' → logprob: -14.17579174041748
    7. '```' → logprob: -15.17579174041748
    8. '01' → logprob: -15.55079174041748
    9. ',' → logprob: -16.050790786743164
    10. ']' → logprob: -16.050790786743164

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010723850573413074
    2. ' ,' → logprob: -9.250106811523438
    3. '1' → logprob: -11.625106811523438
    4. ',
' → logprob: -13.375106811523438
    5. ' ' → logprob: -14.875106811523438
    6. '
' → logprob: -15.875106811523438
    7. ',

' → logprob: -17.312606811523438
    8. '

' → logprob: -17.625106811523438
    9. ',+' → logprob: -17.875106811523438
    10. '   ' → logprob: -18.625106811523438

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. ']' → logprob: -17.75001335144043
    4. '```' → logprob: -18.12501335144043
    5. '<|end|>' → logprob: -18.68751335144043
    6. '
' → logprob: -19.68751335144043
    7. ']]' → logprob: -19.68751335144043
    8. '0' → logprob: -19.75001335144043
    9. ',' → logprob: -19.93751335144043
    10. '۱' → logprob: -20.68751335144043

Token 285: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.08951525390148163
    2. ']' → logprob: -2.464515209197998
    3. ']]
' → logprob: -8.589515686035156
    4. ' ]]' → logprob: -8.964515686035156
    5. ')]' → logprob: -9.089515686035156
    6. ']]]' → logprob: -9.839515686035156
    7. ' ]' → logprob: -11.089515686035156
    8. '']]' → logprob: -11.214515686035156
    9. '       ' → logprob: -11.214515686035156
    10. ' if' → logprob: -11.339515686035156

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6616140604019165
    2. 'coverage' → logprob: -1.1616140604019165
    3. ' coverage' → logprob: -2.411613941192627
    4. 'return' → logprob: -3.536613941192627
    5. 'positions' → logprob: -3.661613941192627
    6. '
' → logprob: -4.161613941192627
    7. ' positions' → logprob: -6.036613941192627
    8. 'result' → logprob: -6.411613941192627
    9. ' return' → logprob: -6.411613941192627
    10. '   ' → logprob: -6.911613941192627

Token 287: ' return' (ID: 622)
  Prédit: 'coverage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coverage' → logprob: -0.11911692470312119
    2. ' coverage' → logprob: -2.369117021560669
    3. 'positions' → logprob: -5.24411678314209
    4. 'return' (adapté à ' return') → logprob: -5.36911678314209
    5. 'cover' → logprob: -5.86911678314209
    6. '       ' → logprob: -6.11911678314209
    7. 'covered' → logprob: -6.24411678314209
    8. ' positions' → logprob: -7.11911678314209
    9. ' return' → logprob: -8.24411678314209
    10. 'result' → logprob: -8.24411678314209

Token 288: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.20125028491020203
    2. 'set' → logprob: -1.8262503147125244
    3. '[' → logprob: -3.9512503147125244
    4. ' {' → logprob: -6.951250076293945
    5. ' set' → logprob: -8.326250076293945
    6. '{s' → logprob: -8.701250076293945
    7. '[self' → logprob: -8.826250076293945
    8. '[position' → logprob: -8.826250076293945
    9. '{x' → logprob: -9.576250076293945
    10. ' [' → logprob: -9.701250076293945

Token 289: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.025567447766661644
    2. 'pos' → logprob: -4.025567531585693
    3. 'p' → logprob: -5.400567531585693
    4. 'Position' → logprob: -6.400567531585693
    5. ' self' → logprob: -7.650567531585693
    6. 'np' → logprob: -8.150567054748535
    7. 'npos' → logprob: -9.025567054748535
    8. '(self' → logprob: -9.025567054748535
    9. '(Position' → logprob: -9.900567054748535
    10. 'Pos' → logprob: -10.025567054748535

Token 290: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -2.0219828002154827e-05
    2. 'pos' → logprob: -11.000020027160645
    3. '.' → logprob: -14.000020027160645
    4. ' .' → logprob: -14.250020027160645
    5. 'Pos' → logprob: -14.500020027160645
    6. '	pos' → logprob: -14.500020027160645
    7. ',pos' → logprob: -15.125020027160645
    8. '.position' → logprob: -15.625020027160645
    9. '.Pos' → logprob: -16.00002098083496
    10. '+' → logprob: -16.25002098083496

Token 291: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2785866856575012
    2. ' +' → logprob: -1.9035866260528564
    3. '}' → logprob: -2.5285866260528564
    4. '}+' → logprob: -4.4035868644714355
    5. '.add' → logprob: -7.4035868644714355
    6. '+x' → logprob: -8.153586387634277
    7. '+
' → logprob: -8.903586387634277
    8. 'for' → logprob: -9.028586387634277
    9. ' for' → logprob: -9.278586387634277
    10. '   ' → logprob: -9.528586387634277

Token 292: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.558325469493866
    2. ' n' → logprob: -1.1833255290985107
    3. 'neighbor' → logprob: -2.6833255290985107
    4. ' neighbor' → logprob: -3.0583255290985107
    5. 'nbr' → logprob: -5.933325290679932
    6. ' nbr' → logprob: -7.058325290679932
    7. 'npos' → logprob: -7.433325290679932
    8. 'offset' → logprob: -7.558325290679932
    9. 'nb' → logprob: -8.18332576751709
    10. ' neigh' → logprob: -8.43332576751709

Token 293: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.023247109726071358
    2. 'for' → logprob: -3.773247003555298
    3. '	for' → logprob: -14.398246765136719
    4. '
' → logprob: -14.523246765136719
    5. ' ' → logprob: -14.648246765136719
    6. '}' → logprob: -16.39824676513672
    7. '   ' → logprob: -16.89824676513672
    8. '    ' → logprob: -17.77324676513672
    9. ' ' → logprob: -17.89824676513672
    10. '           ' → logprob: -18.14824676513672

Token 294: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12720420956611633
    2. ' n' → logprob: -2.127204179763794
    3. 'neighbors' → logprob: -8.377203941345215
    4. ' neighbors' → logprob: -10.002203941345215
    5. '	n' → logprob: -14.377203941345215
    6. 'neighbor' → logprob: -16.75220489501953
    7. 'Neighbors' → logprob: -16.75220489501953
    8. ' ' → logprob: -17.00220489501953
    9. ' н' → logprob: -17.50220489501953
    10. '_neighbors' → logprob: -17.62720489501953

Token 295: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012864887714385986
    2. 'in' → logprob: -4.38786506652832
    3. '}' → logprob: -8.88786506652832
    4. 'neighbors' → logprob: -8.88786506652832
    5. ' neighbors' → logprob: -10.51286506652832
    6. ')' → logprob: -10.88786506652832
    7. '<|end|>' → logprob: -11.63786506652832
    8. 'n' → logprob: -11.76286506652832
    9. ' ' → logprob: -11.76286506652832
    10. ']' → logprob: -12.88786506652832

Token 296: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.0015030752401798964
    2. ' neighbors' → logprob: -6.501502990722656
    3. '_neighbors' → logprob: -15.251502990722656
    4. 'neighbor' → logprob: -15.501502990722656
    5. '
' → logprob: -16.376502990722656
    6. 'ne' → logprob: -16.876502990722656
    7. 'Neighbors' → logprob: -17.251502990722656
    8. ' neighbours' → logprob: -18.376502990722656
    9. ' ' → logprob: -18.501502990722656
    10. 'ighbors' → logprob: -18.751502990722656

Token 297: ' if' (ID: 538)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -1.6405310816480778e-05
    2. ' }' → logprob: -11.250016212463379
    3. '   ' → logprob: -13.000016212463379
    4. '}
' → logprob: -14.125016212463379
    5. '       ' → logprob: -15.875016212463379
    6. '}

' → logprob: -16.500017166137695
    7. ' if' → logprob: -17.000017166137695
    8. '	' → logprob: -17.250017166137695
    9. ')' → logprob: -17.750017166137695
    10. ' ' → logprob: -18.750017166137695

Token 298: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3183867931365967
    2. ' (' → logprob: -1.5683867931365967
    3. 'self' → logprob: -3.9433867931365967
    4. '(n' → logprob: -3.9433867931365967
    5. ' self' → logprob: -4.193387031555176
    6. 'n' → logprob: -5.068387031555176
    7. '(' → logprob: -5.943387031555176
    8. ' n' → logprob: -7.443387031555176
    9. '0' → logprob: -8.193387031555176
    10. ' ' → logprob: -8.193387031555176

Token 299: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07054616510868073
    2. '(self' → logprob: -2.9455461502075195
    3. '0' → logprob: -5.0705461502075195
    4. '(' → logprob: -5.4455461502075195
    5. ' self' → logprob: -5.5705461502075195
    6. 'n' → logprob: -7.3205461502075195
    7. ' (' → logprob: -8.07054615020752
    8. 'pos' → logprob: -9.94554615020752
    9. '(n' → logprob: -10.32054615020752
    10. '-' → logprob: -10.94554615020752

Token 300: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.04573778435587883
    2. '+' → logprob: -3.4207377433776855
    3. 'pos' → logprob: -4.7957377433776855
    4. ' +' → logprob: -6.4207377433776855
    5. '.x' → logprob: -7.0457377433776855
    6. ').' → logprob: -7.5457377433776855
    7. '.is' → logprob: -8.545738220214844
    8. 'is' → logprob: -8.920738220214844
    9. '.' → logprob: -9.045738220214844
    10. '+x' → logprob: -9.045738220214844

Token 301: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5775181651115417
    2. ' +' → logprob: -1.0775182247161865
    3. '.x' → logprob: -2.4525182247161865
    4. '+x' → logprob: -4.452517986297607
    5. 'x' → logprob: -7.702517986297607
    6. '.' → logprob: -11.077518463134766
    7. ' ' → logprob: -11.077518463134766
    8. '+
' → logprob: -11.577518463134766
    9. '.y' → logprob: -11.827518463134766
    10. ' is' → logprob: -11.952518463134766

Token 302: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0010331686353310943
    2. ' n' → logprob: -6.876033306121826
    3. '
' → logprob: -15.876032829284668
    4. '	n' → logprob: -15.876032829284668
    5. ')n' → logprob: -16.626033782958984
    6. 'Position' → logprob: -16.751033782958984
    7. '_n' → logprob: -17.001033782958984
    8. '<|end|>' → logprob: -17.376033782958984
    9. ' ' → logprob: -18.251033782958984
    10. '(n' → logprob: -18.376033782958984

Token 303: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -4.723352049040841e-06
    2. '.is' → logprob: -12.750004768371582
    3. ' ).' → logprob: -13.875004768371582
    4. ')._' → logprob: -15.125004768371582
    5. '.' → logprob: -15.375004768371582
    6. ')' → logprob: -15.750004768371582
    7. 'is' → logprob: -17.125003814697266
    8. '   ' → logprob: -17.375003814697266
    9. ' ' → logprob: -17.500003814697266
    10. '}.' → logprob: -17.500003814697266

Token 304: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -9.088346359931165e-07
    2. ' is' → logprob: -14.000000953674316
    3. '.is' → logprob: -17.75
    4. '
' → logprob: -19.125
    5. '```' → logprob: -19.5
    6. '	is' → logprob: -19.625
    7. '

' → logprob: -20.875
    8. 'x' → logprob: -21.0
    9. ' ' → logprob: -21.125
    10. '_is' → logprob: -21.5

Token 305: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.625000953674316
    3. ' _' → logprob: -15.875000953674316
    4. '_without' → logprob: -16.25
    5. '_WITH' → logprob: -17.125
    6. '_in' → logprob: -17.25
    7. '_w' → logprob: -17.25
    8. 'within' → logprob: -17.375
    9. '_using' → logprob: -17.375
    10. '._' → logprob: -17.875

Token 306: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.15725277364253998
    2. 'ith' → logprob: -2.282252788543701
    3. '_bounds' → logprob: -4.032252788543701
    4. 'bounds' → logprob: -4.282252788543701
    5. 'itin' → logprob: -5.782252788543701
    6. 'it' → logprob: -6.032252788543701
    7. 'n' → logprob: -6.407252788543701
    8. 'thin' → logprob: -6.907252788543701
    9. 'within' → logprob: -7.532252788543701
    10. '_with' → logprob: -7.532252788543701

Token 307: '_bounds' (ID: 90408)
  Prédit: '_bounds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bounds' → logprob: -0.00014060820103622973
    2. 'bounds' → logprob: -8.875140190124512
    3. 'Bounds' → logprob: -15.000140190124512
    4. ' bounds' → logprob: -15.375140190124512
    5. '_bound' → logprob: -16.750141143798828
    6. '_b' → logprob: -17.500141143798828
    7. '
' → logprob: -18.000141143798828
    8. '_limits' → logprob: -18.000141143798828
    9. '(bounds' → logprob: -18.000141143798828
    10. '.bounds' → logprob: -18.250141143798828

Token 308: '()}
' (ID: 46697)
  Prédit: '()}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()}' → logprob: -0.004509393125772476
    2. '()' → logprob: -5.504509449005127
    3. '}' → logprob: -8.254508972167969
    4. '())' → logprob: -8.754508972167969
    5. ')}' → logprob: -12.129508972167969
    6. '()}
' → logprob: -12.379508972167969
    7. '()]' → logprob: -13.004508972167969
    8. '():' → logprob: -15.504508972167969
    9. '()},' → logprob: -15.879508972167969
    10. ')' → logprob: -15.879508972167969

Token 309: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 311: ' covers' (ID: 17804)
  Prédit: ' covers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' covers' → logprob: -0.6501249670982361
    2. 'covers' → logprob: -0.9001249670982361
    3. 'is' → logprob: -3.775125026702881
    4. 'can' → logprob: -4.275125026702881
    5. ' is' → logprob: -5.025125026702881
    6. 'cover' → logprob: -5.525125026702881
    7. 'covered' → logprob: -5.650125026702881
    8. '__' → logprob: -5.775125026702881
    9. ' can' → logprob: -6.025125026702881
    10. 'in' → logprob: -6.400125026702881

Token 312: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012545088306069374
    2. '(' → logprob: -4.387545108795166
    3. ' (' → logprob: -10.887544631958008
    4. '(s' → logprob: -11.762544631958008
    5. 'self' → logprob: -12.512544631958008
    6. '(
' → logprob: -12.637544631958008
    7. '<|end|>' → logprob: -14.887544631958008
    8. '(this' → logprob: -15.387544631958008
    9. 's' → logprob: -15.512544631958008
    10. ' ' → logprob: -15.762544631958008

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.655447781085968
    2. 'self' → logprob: -1.0304477214813232
    3. '(self' → logprob: -2.1554477214813232
    4. ')' → logprob: -6.405447959899902
    5. ' self' → logprob: -6.405447959899902
    6. ',self' → logprob: -6.780447959899902
    7. ' (' → logprob: -7.155447959899902
    8. ' ,' → logprob: -7.530447959899902
    9. 'position' → logprob: -7.530447959899902
    10. '(' → logprob: -7.905447959899902

Token 314: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.014559502713382244
    2. 'position' → logprob: -4.639559268951416
    3. ' pos' → logprob: -5.389559268951416
    4. ' position' → logprob: -8.764559745788574
    5. 'point' → logprob: -10.139559745788574
    6. 'other' → logprob: -11.139559745788574
    7. 'p' → logprob: -11.889559745788574
    8. 'self' → logprob: -12.389559745788574
    9. 'target' → logprob: -12.764559745788574
    10. '   ' → logprob: -13.139559745788574

Token 315: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12286372482776642
    2. ')' → logprob: -2.24786376953125
    3. ' ):' → logprob: -5.49786376953125
    4. '):
' → logprob: -6.12286376953125
    5. ',' → logprob: -6.12286376953125
    6. ' )' → logprob: -6.74786376953125
    7. 'self' → logprob: -8.74786376953125
    8. ':' → logprob: -9.99786376953125
    9. '):

' → logprob: -10.12286376953125
    10. '):
' → logprob: -10.74786376953125

Token 316: 'Position' (ID: 5647)
  Prédit: 'Position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Position' → logprob: -0.0015023599844425917
    2. ')' → logprob: -7.126502513885498
    3. ' Position' → logprob: -7.626502513885498
    4. '):' → logprob: -8.62650203704834
    5. '):
' → logprob: -10.75150203704834
    6. ' )' → logprob: -12.87650203704834
    7. 'pos' → logprob: -13.25150203704834
    8. '   ' → logprob: -13.62650203704834
    9. 'position' → logprob: -13.75150203704834
    10. ' ):' → logprob: -14.25150203704834

Token 317: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062037933617830276
    2. '):' → logprob: -2.812037944793701
    3. ' )' → logprob: -10.312037467956543
    4. '):
' → logprob: -10.687037467956543
    5. ')->' → logprob: -12.062037467956543
    6. '   ' → logprob: -12.687037467956543
    7. ' ):' → logprob: -13.187037467956543
    8. 'self' → logprob: -13.562037467956543
    9. '):

' → logprob: -13.937037467956543
    10. '       ' → logprob: -14.687037467956543

Token 318: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37450581789016724
    2. '(self' → logprob: -2.1245057582855225
    3. '       ' → logprob: -2.6245057582855225
    4. '->' → logprob: -3.2495057582855225
    5. ')' → logprob: -3.3745057582855225
    6. ' ->' → logprob: -4.124505996704102
    7. '   ' → logprob: -4.874505996704102
    8. ',' → logprob: -5.249505996704102
    9. '):' → logprob: -5.249505996704102
    10. 'self' → logprob: -5.374505996704102

Token 319: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.061970822513103485
    2. ' bool' → logprob: -2.8119707107543945
    3. '   ' → logprob: -13.311970710754395
    4. '	bool' → logprob: -13.936970710754395
    5. ' ' → logprob: -15.186970710754395
    6. '<bool' → logprob: -16.18697166442871
    7. '  ' → logprob: -16.31197166442871
    8. ' ' → logprob: -16.81197166442871
    9. '    ' → logprob: -17.18697166442871
    10. '(bool' → logprob: -17.31197166442871

Token 320: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.23387625813484192
    2. ':' → logprob: -1.6088762283325195
    3. '(' → logprob: -5.1088762283325195
    4. '       ' → logprob: -6.3588762283325195
    5. '   ' → logprob: -8.60887622833252
    6. ',' → logprob: -9.35887622833252
    7. ':
' → logprob: -9.73387622833252
    8. 'self' → logprob: -9.73387622833252
    9. ':self' → logprob: -9.73387622833252
    10. ' self' → logprob: -9.98387622833252

Token 321: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3575146198272705
    2. '       ' → logprob: -1.2325146198272705
    3. 'return' → logprob: -4.732514381408691
    4. '	return' → logprob: -8.857514381408691
    5. '   ' → logprob: -10.357514381408691
    6. '<|end|>' → logprob: -11.232514381408691
    7. '{return' → logprob: -11.482514381408691
    8. ':return' → logprob: -11.607514381408691
    9. ' ' → logprob: -13.107514381408691
    10. '	   ' → logprob: -13.107514381408691

Token 322: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3874949812889099
    2. 'return' (adapté à ' return') → logprob: -1.1374950408935547
    3. '       ' → logprob: -7.387495040893555
    4. ' pos' → logprob: -13.137495040893555
    5. 'pos' → logprob: -13.262495040893555
    6. '   ' → logprob: -14.512495040893555
    7. '	return' → logprob: -14.512495040893555
    8. '{return' → logprob: -16.637495040893555
    9. ':return' → logprob: -16.887495040893555
    10. '
' → logprob: -17.387495040893555

Token 323: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.07888989895582199
    2. 'pos' → logprob: -2.578889846801758
    3. '	pos' → logprob: -16.578889846801758
    4. '(pos' → logprob: -17.328889846801758
    5. ' ' → logprob: -19.078889846801758
    6. 'self' → logprob: -19.953889846801758
    7. '   ' → logprob: -20.578889846801758
    8. ',pos' → logprob: -20.703889846801758
    9. ' self' → logprob: -21.078889846801758
    10. '[pos' → logprob: -21.328889846801758

Token 324: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2811540365219116
    2. 'in' → logprob: -1.4061540365219116
    3. ' ' → logprob: -14.031153678894043
    4. ' ' → logprob: -14.406153678894043
    5. ')' → logprob: -14.656153678894043
    6. '==' → logprob: -14.656153678894043
    7. '	in' → logprob: -14.906153678894043
    8. '<|end|>' → logprob: -15.156153678894043
    9. 'inth' → logprob: -16.03115463256836
    10. '.' → logprob: -16.53115463256836

Token 325: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008626393973827362
    2. ' self' → logprob: -4.758626461029053
    3. '       ' → logprob: -11.508625984191895
    4. '   ' → logprob: -13.758625984191895
    5. '	self' → logprob: -14.883625984191895
    6. '(self' → logprob: -15.008625984191895
    7. '[self' → logprob: -16.88362693786621
    8. ' ' → logprob: -18.00862693786621
    9. '
' → logprob: -18.13362693786621
    10. '           ' → logprob: -18.25862693786621

Token 326: '.cover' (ID: 93824)
  Prédit: '.cover'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cover' → logprob: -1.2948405128554441e-05
    2. '.c' → logprob: -12.25001335144043
    3. 'coverage' → logprob: -12.25001335144043
    4. ' .' → logprob: -13.25001335144043
    5. '.' → logprob: -13.50001335144043
    6. ' coverage' → logprob: -16.87501335144043
    7. 'Coverage' → logprob: -17.12501335144043
    8. '.C' → logprob: -17.75001335144043
    9. 'cover' → logprob: -18.75001335144043
    10. '   ' → logprob: -18.87501335144043

Token 327: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -3.128163257315464e-07
    2. 'rage' → logprob: -15.625
    3. 'arge' → logprob: -17.25
    4. 'ages' → logprob: -17.25
    5. 'coverage' → logprob: -17.75
    6. '   ' → logprob: -20.125
    7. ' coverage' → logprob: -20.625
    8. 'sage' → logprob: -21.875
    9. 'tage' → logprob: -22.0
    10. 'ag' → logprob: -22.0

Token 328: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 329: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.011781826615333557
    2. '
' → logprob: -4.886781692504883
    3. '<|end|>' → logprob: -5.511781692504883
    4. ' class' → logprob: -9.386781692504883
    5. '<|end|>' → logprob: -11.136781692504883
    6. 'def' → logprob: -11.136781692504883
    7. '  
' → logprob: -12.761781692504883
    8. '   ' → logprob: -13.011781692504883
    9. '

' → logprob: -13.011781692504883
    10. '```' → logprob: -13.636781692504883

Token 330: ' Spr' (ID: 16635)
  Prédit: 'Garden'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Garden' → logprob: -0.6234681606292725
    2. 'Field' → logprob: -2.1234681606292725
    3. 'Spr' → logprob: -2.3734681606292725
    4. ' Garden' → logprob: -2.4984681606292725
    5. 'Grid' → logprob: -2.7484681606292725
    6. 'L' → logprob: -3.1234681606292725
    7. ' Spr' → logprob: -4.498468399047852
    8. ' Lawn' → logprob: -4.998468399047852
    9. ' Field' → logprob: -5.123468399047852
    10. 'I' → logprob: -5.248468399047852

Token 331: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.1928376406431198
    2. 'ay' → logprob: -2.192837715148926
    3. 'inkle' → logprob: -3.192837715148926
    4. 'ayer' → logprob: -4.067837715148926
    5. 'inker' → logprob: -7.380337715148926
    6. 'ayers' → logprob: -7.505337715148926
    7. 'aying' → logprob: -7.567837715148926
    8. 'int' → logprob: -7.630337715148926
    9. 'inkl' → logprob: -7.630337715148926
    10. 'inkles' → logprob: -7.942837715148926

Token 332: 'ler' (ID: 1639)
  Prédit: 'ler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ler' → logprob: -9.877503907773644e-05
    2. 'lers' → logprob: -9.750099182128906
    3. 'er' → logprob: -10.375099182128906
    4. 'l' → logprob: -12.875099182128906
    5. ' ler' → logprob: -13.500099182128906
    6. '_' → logprob: -14.125099182128906
    7. 'лер' → logprob: -14.125099182128906
    8. 'lerin' → logprob: -15.000099182128906
    9. '\' → logprob: -15.250099182128906
    10. '#' → logprob: -15.250099182128906

Token 333: 'Sequence' (ID: 17333)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.5358596444129944
    2. 'Manager' → logprob: -1.6608595848083496
    3. 'Grid' → logprob: -2.4108595848083496
    4. 'System' → logprob: -2.9108595848083496
    5. 'Field' → logprob: -3.6608595848083496
    6. 'Controller' → logprob: -4.41085958480835
    7. 'Network' → logprob: -4.53585958480835
    8. 'Group' → logprob: -5.03585958480835
    9. 'Array' → logprob: -5.16085958480835
    10. 'Cluster' → logprob: -5.53585958480835

Token 334: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.231182826217264e-05
    2. ':
' → logprob: -10.375072479248047
    3. '(' → logprob: -10.625072479248047
    4. '():' → logprob: -12.125072479248047
    5. '(object' → logprob: -12.625072479248047
    6. ' :' → logprob: -13.250072479248047
    7. ':def' → logprob: -13.500072479248047
    8. '(J' → logprob: -13.625072479248047
    9. ':

' → logprob: -14.000072479248047
    10. '(S' → logprob: -14.500072479248047

Token 335: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018658103654161096
    2. ' def' → logprob: -6.376865863800049
    3. 'def' → logprob: -8.75186538696289
    4. '	def' → logprob: -13.25186538696289
    5. '   ' → logprob: -13.37686538696289
    6. 'class' → logprob: -13.87686538696289
    7. '```' → logprob: -14.50186538696289
    8. ' class' → logprob: -15.75186538696289
    9. ':' → logprob: -16.62686538696289
    10. '(' → logprob: -16.62686538696289

Token 336: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3896547555923462
    2. 'def' (adapté à ' def') → logprob: -1.1396547555923462
    3. '   ' → logprob: -5.889654636383057
    4. ' ' → logprob: -12.764655113220215
    5. '__' → logprob: -12.889655113220215
    6. 'class' → logprob: -12.889655113220215
    7. ' __' → logprob: -13.264655113220215
    8. '
' → logprob: -14.389655113220215
    9. '	def' → logprob: -14.389655113220215
    10. '    ' → logprob: -15.264655113220215

Token 337: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.024155646562576294
    2. '__' → logprob: -3.774155616760254
    3. 'init' → logprob: -7.399155616760254
    4. ' def' → logprob: -9.024155616760254
    5. 'def' → logprob: -9.149155616760254
    6. '_init' → logprob: -10.149155616760254
    7. ' init' → logprob: -10.649155616760254
    8. '___' → logprob: -13.024155616760254
    9. ' ___' → logprob: -13.524155616760254
    10. '_' → logprob: -13.774155616760254

Token 338: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. ' init' → logprob: -16.25
    3. 'in' → logprob: -18.0
    4. 'def' → logprob: -18.25
    5. '   ' → logprob: -19.625
    6. 'i' → logprob: -20.0
    7. '_init' → logprob: -20.125
    8. '	init' → logprob: -20.125
    9. 'ini' → logprob: -20.125
    10. '(init' → logprob: -20.125

Token 339: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00030114251421764493
    2. '__' → logprob: -8.375301361083984
    3. '(self' → logprob: -9.875301361083984
    4. '__(
' → logprob: -11.125301361083984
    5. '_(' → logprob: -12.625301361083984
    6. '__((' → logprob: -14.500301361083984
    7. '(' → logprob: -15.125301361083984
    8. ' (' → logprob: -16.125301361083984
    9. '__('' → logprob: -16.625301361083984
    10. 'self' → logprob: -17.500301361083984

Token 340: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.599403423024341e-05
    2. '
' → logprob: -10.625065803527832
    3. ' self' → logprob: -10.750065803527832
    4. ')' → logprob: -11.625065803527832
    5. '):
' → logprob: -12.000065803527832
    6. '   ' → logprob: -13.250065803527832
    7. '       ' → logprob: -13.375065803527832
    8. '0' → logprob: -14.750065803527832
    9. ',' → logprob: -14.875065803527832
    10. '[' → logprob: -15.625065803527832

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011596736498177052
    2. 'self' → logprob: -4.7615966796875
    3. '):
' → logprob: -6.1365966796875
    4. '):' → logprob: -8.0115966796875
    5. ',self' → logprob: -8.5115966796875
    6. ',
' → logprob: -9.1365966796875
    7. ' ,' → logprob: -9.6365966796875
    8. '
' → logprob: -10.0115966796875
    9. '(self' → logprob: -10.3865966796875
    10. ' self' → logprob: -11.8865966796875

Token 342: ' sprink' (ID: 80706)
  Prédit: ' sprink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sprink' → logprob: -0.5098940134048462
    2. 'positions' → logprob: -1.7598940134048462
    3. 'spr' → logprob: -2.1348938941955566
    4. ' positions' → logprob: -2.5098938941955566
    5. 'start' → logprob: -4.884893894195557
    6. 's' → logprob: -5.509893894195557
    7. 'sequence' → logprob: -5.509893894195557
    8. ' sequence' → logprob: -5.884893894195557
    9. ' start' → logprob: -6.259893894195557
    10. 'pos' → logprob: -7.134893894195557

Token 343: 'lers' (ID: 15137)
  Prédit: 'ler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ler' → logprob: -0.029874637722969055
    2. 'lers' → logprob: -3.529874563217163
    3. 'er' → logprob: -9.279874801635742
    4. 'l' → logprob: -11.904874801635742
    5. 'ers' → logprob: -12.029874801635742
    6. ' ler' → logprob: -12.279874801635742
    7. '   ' → logprob: -13.029874801635742
    8. '[' → logprob: -13.779874801635742
    9. 'le' → logprob: -13.904874801635742
    10. 'лер' → logprob: -13.904874801635742

Token 344: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16099609434604645
    2. '=[]' → logprob: -2.285996198654175
    3. '=None' → logprob: -3.910996198654175
    4. ':' → logprob: -4.035995960235596
    5. '=' → logprob: -5.035995960235596
    6. '):
' → logprob: -6.910995960235596
    7. ':list' → logprob: -6.910995960235596
    8. ')' → logprob: -8.035996437072754
    9. ' ):' → logprob: -8.035996437072754
    10. ',' → logprob: -9.535996437072754

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010242708027362823
    2. 'self' → logprob: -5.385242938995361
    3. ' self' → logprob: -5.385242938995361
    4. ' sprink' → logprob: -8.135242462158203
    5. '[' → logprob: -8.385242462158203
    6. ',' → logprob: -9.260242462158203
    7. ' list' → logprob: -9.260242462158203
    8. 'spr' → logprob: -9.385242462158203
    9. 'list' → logprob: -10.385242462158203
    10. ' [' → logprob: -10.760242462158203

Token 346: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.010105117224156857
    2. ' self' → logprob: -4.760105133056641
    3. '       ' → logprob: -6.510105133056641
    4. '	self' → logprob: -14.51010513305664
    5. '   ' → logprob: -14.88510513305664
    6. '(self' → logprob: -15.88510513305664
    7. '[self' → logprob: -16.51010513305664
    8. ' ' → logprob: -17.38510513305664
    9. 'class' → logprob: -17.88510513305664
    10. 'def' → logprob: -18.38510513305664

Token 347: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.04024921730160713
    2. '.' → logprob: -3.2902491092681885
    3. ' .' → logprob: -6.165249347686768
    4. 's' → logprob: -9.79024887084961
    5. '=' → logprob: -11.29024887084961
    6. ' =' → logprob: -11.66524887084961
    7. 'spr' → logprob: -11.66524887084961
    8. ' sprink' → logprob: -12.16524887084961
    9. '   ' → logprob: -13.16524887084961
    10. ':' → logprob: -13.41524887084961

Token 348: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.00020354038861114532
    2. 'spr' → logprob: -10.375203132629395
    3. '```' → logprob: -10.750203132629395
    4. 'priv' → logprob: -11.000203132629395
    5. '``' → logprob: -11.125203132629395
    6. 'elf' → logprob: -11.625203132629395
    7. '#' → logprob: -12.000203132629395
    8. 'p' → logprob: -12.125203132629395
    9. 'e' → logprob: -12.125203132629395
    10. 'rink' → logprob: -12.375203132629395

Token 349: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.0003243798855692148
    2. 'inkl' → logprob: -8.875324249267578
    3. 'inkles' → logprob: -10.375324249267578
    4. 'link' → logprob: -10.625324249267578
    5. '{"' → logprob: -10.750324249267578
    6. 'rink' → logprob: -11.125324249267578
    7. 'inkle' → logprob: -11.250324249267578
    8. 'in' → logprob: -11.250324249267578
    9. 'lers' → logprob: -11.375324249267578
    10. '   ' → logprob: -12.250324249267578

Token 350: 'lers' (ID: 15137)
  Prédit: 'lers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lers' → logprob: -0.22549615800380707
    2. 'ers' → logprob: -1.6004961729049683
    3. 'ler' → logprob: -9.725496292114258
    4. 'l' → logprob: -11.350496292114258
    5. 'kers' → logprob: -12.600496292114258
    6. 'er' → logprob: -13.100496292114258
    7. '{' → logprob: -14.225496292114258
    8. 's' → logprob: -14.350496292114258
    9. ' ers' → logprob: -14.475496292114258
    10. 'sers' → logprob: -14.600496292114258

Token 351: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693165123462677
    2. ' =' → logprob: -0.693165123462677
    3. '=s' → logprob: -12.318164825439453
    4. ',' → logprob: -12.443164825439453
    5. '=list' → logprob: -12.568164825439453
    6. '=set' → logprob: -13.193164825439453
    7. '=[]' → logprob: -13.443164825439453
    8. '   ' → logprob: -14.193164825439453
    9. ':' → logprob: -14.443164825439453
    10. '.extend' → logprob: -14.693164825439453

Token 352: ' sprink' (ID: 80706)
  Prédit: 'spr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spr' → logprob: -0.3499719798564911
    2. ' sprink' → logprob: -1.2249720096588135
    3. 'list' → logprob: -6.724971771240234
    4. 's' → logprob: -9.224971771240234
    5. '[s' → logprob: -9.349971771240234
    6. '[' → logprob: -9.599971771240234
    7. ' sprinkler' → logprob: -10.474971771240234
    8. ' list' → logprob: -11.474971771240234
    9. '[]' → logprob: -11.599971771240234
    10. ' sprinkled' → logprob: -12.349971771240234

Token 353: 'lers' (ID: 15137)
  Prédit: 'lers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lers' → logprob: -0.0006317823426797986
    2. 'ers' → logprob: -7.375631809234619
    3. 'ler' → logprob: -13.125631332397461
    4. 'l' → logprob: -13.250631332397461
    5. 'kers' → logprob: -14.625631332397461
    6. '[' → logprob: -15.000631332397461
    7. 'list' → logprob: -15.750631332397461
    8. 'akers' → logprob: -16.25063133239746
    9. 'ayers' → logprob: -16.37563133239746
    10. 'sl' → logprob: -16.75063133239746

Token 354: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5863615870475769
    2. '   ' → logprob: -1.2113616466522217
    3. '<|end|>' → logprob: -1.9613616466522217
    4. 'def' → logprob: -5.586361408233643
    5. ' def' → logprob: -7.211361408233643
    6. '<|end|>' → logprob: -7.586361408233643
    7. '    
' → logprob: -9.3363618850708
    8. '

' → logprob: -10.3363618850708
    9. ' ' → logprob: -10.8363618850708
    10. '	def' → logprob: -11.3363618850708

Token 355: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.045685410499572754
    2. '<|end|>' → logprob: -3.670685291290283
    3. '   ' → logprob: -4.045685291290283
    4. 'def' → logprob: -6.920685291290283
    5. ' def' → logprob: -7.670685291290283
    6. '<|end|>' → logprob: -8.920685768127441
    7. '    
' → logprob: -9.920685768127441
    8. '

' → logprob: -11.045685768127441
    9. ' 
' → logprob: -11.170685768127441
    10. '	def' → logprob: -11.795685768127441

Token 356: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7164565920829773
    2. 'def' (adapté à ' def') → logprob: -0.7164565920829773
    3. ' def' → logprob: -4.091456413269043
    4. '
' → logprob: -5.091456413269043
    5. '    
' → logprob: -9.716456413269043
    6. '	def' → logprob: -9.841456413269043
    7. '<|end|>' → logprob: -9.966456413269043
    8. '        
' → logprob: -12.841456413269043
    9. ' ' → logprob: -12.966456413269043
    10. ' 
' → logprob: -12.966456413269043

Token 357: ' length' (ID: 5517)
  Prédit: ' covers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' covers' → logprob: -0.28659433126449585
    2. 'covers' → logprob: -1.4115943908691406
    3. '__' → logprob: -6.786594390869141
    4. ' def' → logprob: -6.786594390869141
    5. ' __' → logprob: -7.411594390869141
    6. ' coverage' → logprob: -7.911594390869141
    7. 'def' → logprob: -7.911594390869141
    8. ' positions' → logprob: -8.16159439086914
    9. 'c' → logprob: -8.16159439086914
    10. ' is' → logprob: -8.78659439086914

Token 358: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003268831642344594
    2. '(' → logprob: -8.875327110290527
    3. ' (' → logprob: -8.875327110290527
    4. '():' → logprob: -10.375327110290527
    5. '   ' → logprob: -12.125327110290527
    6. 'self' → logprob: -12.625327110290527
    7. '()' → logprob: -13.000327110290527
    8. '(s' → logprob: -13.375327110290527
    9. ' ' → logprob: -13.750327110290527
    10. '():
' → logprob: -14.125327110290527

Token 359: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000965891988016665
    2. ' ):' → logprob: -7.7509660720825195
    3. '):
' → logprob: -8.12596607208252
    4. ')' → logprob: -8.62596607208252
    5. '():' → logprob: -10.62596607208252
    6. '   ' → logprob: -11.25096607208252
    7. '(self' → logprob: -12.00096607208252
    8. ',' → logprob: -12.50096607208252
    9. ' ' → logprob: -12.87596607208252
    10. '()' → logprob: -13.12596607208252

Token 360: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5401268601417542
    2. ' return' → logprob: -1.2901268005371094
    3. '       ' → logprob: -2.0401268005371094
    4. '
' → logprob: -4.540126800537109
    5. ' 
' → logprob: -7.165126800537109
    6. '   ' → logprob: -8.79012680053711
    7. ':return' → logprob: -8.91512680053711
    8. '        
' → logprob: -9.16512680053711
    9. '    
' → logprob: -9.41512680053711
    10. '{return' → logprob: -10.04012680053711

Token 361: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.02975071594119072
    2. 'len' → logprob: -3.5297508239746094
    3. '(len' → logprob: -15.77975082397461
    4. '	len' → logprob: -17.40475082397461
    5. '=len' → logprob: -17.77975082397461
    6. '[len' → logprob: -18.27975082397461
    7. ' ' → logprob: -18.40475082397461
    8. '   ' → logprob: -19.02975082397461
    9. '0' → logprob: -19.27975082397461
    10. '1' → logprob: -19.27975082397461

Token 362: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10021637380123138
    2. '(' → logprob: -2.3502163887023926
    3. '(
' → logprob: -12.100215911865234
    4. ' (' → logprob: -13.600215911865234
    5. '(s' → logprob: -13.850215911865234
    6. '(this' → logprob: -13.975215911865234
    7. '(

' → logprob: -14.100215911865234
    8. 'self' → logprob: -15.475215911865234
    9. '((' → logprob: -17.100215911865234
    10. '()' → logprob: -18.100215911865234

Token 363: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.0001793457195162773
    2. '.' → logprob: -9.125179290771484
    3. ' .' → logprob: -9.625179290771484
    4. 's' → logprob: -13.375179290771484
    5. ').' → logprob: -13.625179290771484
    6. '.sponge' → logprob: -14.750179290771484
    7. 'spr' → logprob: -15.500179290771484
    8. '.springframework' → logprob: -15.625179290771484
    9. ')' → logprob: -15.750179290771484
    10. ' ' → logprob: -16.625179290771484

Token 364: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.01108495518565178
    2. 'elf' → logprob: -4.886085033416748
    3. '.s' → logprob: -5.886085033416748
    4. '.pr' → logprob: -8.01108455657959
    5. 'self' → logprob: -8.76108455657959
    6. 'p' → logprob: -10.01108455657959
    7. 'spr' → logprob: -10.13608455657959
    8. '.' → logprob: -11.51108455657959
    9. 'e' → logprob: -11.51108455657959
    10. '.self' → logprob: -11.63608455657959

Token 365: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.0006378580583259463
    2. 'lers' → logprob: -8.750638008117676
    3. 'kl' → logprob: -9.000638008117676
    4. 'n' → logprob: -9.375638008117676
    5. 'link' → logprob: -9.875638008117676
    6. 'inkl' → logprob: -10.125638008117676
    7. '{"' → logprob: -10.500638008117676
    8. 'nk' → logprob: -10.875638008117676
    9. '#' → logprob: -11.000638008117676
    10. 'inkles' → logprob: -11.000638008117676

Token 366: 'lers' (ID: 15137)
  Prédit: 'lers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lers' → logprob: -0.0002270198310725391
    2. 'ers' → logprob: -8.500226974487305
    3. 'l' → logprob: -10.875226974487305
    4. 'ler' → logprob: -13.000226974487305
    5. 'kers' → logprob: -14.875226974487305
    6. 'layers' → logprob: -15.000226974487305
    7. 'akers' → logprob: -15.250226974487305
    8. 'rs' → logprob: -15.250226974487305
    9. 'r' → logprob: -15.500226974487305
    10. 'ters' → logprob: -15.750226974487305

Token 367: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5332478142227046e-05
    2. '()' → logprob: -12.125015258789062
    3. ')
' → logprob: -12.375015258789062
    4. '<|end|>' → logprob: -13.125015258789062
    5. ' )' → logprob: -13.250015258789062
    6. '())' → logprob: -13.625015258789062
    7. '   ' → logprob: -15.125015258789062
    8. '}' → logprob: -16.250015258789062
    9. ')return' → logprob: -16.750015258789062
    10. ' ' → logprob: -16.750015258789062

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00032473751343786716
    2. 'def' → logprob: -8.125325202941895
    3. ' def' → logprob: -11.000325202941895
    4. '<|end|>' → logprob: -11.500325202941895
    5. '
' → logprob: -14.250325202941895
    6. '<|end|>' → logprob: -14.500325202941895
    7. '    
' → logprob: -15.125325202941895
    8. '```' → logprob: -15.750325202941895
    9. '	def' → logprob: -15.875325202941895
    10. '       ' → logprob: -17.000324249267578

Token 369: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.29202067852020264
    2. '   ' → logprob: -1.4170206785202026
    3. ' def' → logprob: -4.542020797729492
    4. '	def' → logprob: -9.417020797729492
    5. ' ' → logprob: -10.417020797729492
    6. '<|end|>' → logprob: -10.792020797729492
    7. '    
' → logprob: -11.792020797729492
    8. '  ' → logprob: -12.042020797729492
    9. '    ' → logprob: -12.667020797729492
    10. '
' → logprob: -12.917020797729492

Token 370: ' sprinkler' (ID: 181940)
  Prédit: ' covers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' covers' → logprob: -1.1849561929702759
    2. ' __' → logprob: -1.5599561929702759
    3. 'covers' → logprob: -1.6849561929702759
    4. '__' → logprob: -2.6849560737609863
    5. 'positions' → logprob: -2.8099560737609863
    6. ' positions' → logprob: -2.8099560737609863
    7. ' coverage' → logprob: -3.1849560737609863
    8. ' last' → logprob: -3.9349560737609863
    9. 'coverage' → logprob: -4.434956073760986
    10. ' add' → logprob: -4.809956073760986

Token 371: '_at' (ID: 8254)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22815492749214172
    2. '_at' → logprob: -1.6031548976898193
    3. '_positions' → logprob: -6.353155136108398
    4. '(self' → logprob: -7.478155136108398
    5. 'at' → logprob: -8.853155136108398
    6. 'At' → logprob: -9.478155136108398
    7. '_' → logprob: -9.603155136108398
    8. '_s' → logprob: -10.228155136108398
    9. '_position' → logprob: -10.978155136108398
    10. '_by' → logprob: -11.353155136108398

Token 372: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006860532332211733
    2. '(' → logprob: -5.006860733032227
    3. 'self' → logprob: -9.131860733032227
    4. '<|end|>' → logprob: -10.881860733032227
    5. ' (' → logprob: -11.756860733032227
    6. '(
' → logprob: -12.381860733032227
    7. 'index' → logprob: -12.756860733032227
    8. ' self' → logprob: -14.006860733032227
    9. '(s' → logprob: -14.256860733032227
    10. '(index' → logprob: -15.131860733032227

Token 373: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9364243745803833
    2. ',' → logprob: -1.0614243745803833
    3. '(' → logprob: -1.5614243745803833
    4. ')(' → logprob: -3.0614242553710938
    5. ')(
' → logprob: -6.686424255371094
    6. '(self' → logprob: -6.811424255371094
    7. '(index' → logprob: -7.061424255371094
    8. ' )' → logprob: -7.436424255371094
    9. 'index' → logprob: -7.936424255371094
    10. ' (' → logprob: -8.436424255371094

Token 374: ' idx' (ID: 14016)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3935016095638275
    2. 'index' → logprob: -1.51850163936615
    3. '0' → logprob: -2.8935015201568604
    4. ' self' → logprob: -3.7685015201568604
    5. ')' → logprob: -4.3935017585754395
    6. 'idx' → logprob: -5.6435017585754395
    7. ' ' → logprob: -5.7685017585754395
    8. 'i' → logprob: -5.8935017585754395
    9. '<|end|>' → logprob: -6.3935017585754395
    10. 'int' → logprob: -6.5185017585754395

Token 375: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007177072111517191
    2. ')' → logprob: -5.007176876068115
    3. '):
' → logprob: -8.007177352905273
    4. ' ):' → logprob: -9.132177352905273
    5. '   ' → logprob: -11.632177352905273
    6. ' )' → logprob: -12.132177352905273
    7. '):

' → logprob: -13.132177352905273
    8. '):
' → logprob: -14.007177352905273
    9. ':' → logprob: -14.382177352905273
    10. '<|end|>' → logprob: -14.507177352905273

Token 376: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.01841564103960991
    2. 'return' → logprob: -4.018415451049805
    3. '       ' → logprob: -8.268415451049805
    4. '   ' → logprob: -11.893415451049805
    5. '	return' → logprob: -13.143415451049805
    6. ':return' → logprob: -16.393415451049805
    7. '{return' → logprob: -16.393415451049805
    8. ' ' → logprob: -16.643415451049805
    9. '    ' → logprob: -17.268415451049805
    10. '```' → logprob: -17.268415451049805

Token 377: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20141352713108063
    2. ' self' → logprob: -1.7014135122299194
    3. '	self' → logprob: -16.326414108276367
    4. '   ' → logprob: -16.701414108276367
    5. '(self' → logprob: -16.701414108276367
    6. ' ' → logprob: -17.951414108276367
    7. '[self' → logprob: -18.451414108276367
    8. '       ' → logprob: -18.701414108276367
    9. ' ' → logprob: -19.201414108276367
    10. 's' → logprob: -19.701414108276367

Token 378: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -1.664371848164592e-05
    2. ' .' → logprob: -11.875016212463379
    3. '.' → logprob: -12.000016212463379
    4. '.springframework' → logprob: -13.375016212463379
    5. '.sponge' → logprob: -13.750016212463379
    6. '.spring' → logprob: -15.750016212463379
    7. '.jupiter' → logprob: -16.625017166137695
    8. '.sp' → logprob: -16.750017166137695
    9. 'spr' → logprob: -16.750017166137695
    10. '.slf' → logprob: -16.750017166137695

Token 379: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.00020354038861114532
    2. 'p' → logprob: -9.500203132629395
    3. 'spr' → logprob: -10.625203132629395
    4. 'self' → logprob: -11.125203132629395
    5. 'r' → logprob: -11.250203132629395
    6. 'elf' → logprob: -11.375203132629395
    7. 'rink' → logprob: -11.750203132629395
    8. 'pro' → logprob: -12.125203132629395
    9. '```' → logprob: -12.125203132629395
    10. 'print' → logprob: -12.625203132629395

Token 380: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.09950879216194153
    2. 'n' → logprob: -2.724508762359619
    3. 'nk' → logprob: -3.599508762359619
    4. 'kl' → logprob: -6.974508762359619
    5. 'inkl' → logprob: -8.224509239196777
    6. 'k' → logprob: -8.349509239196777
    7. 'ank' → logprob: -9.224509239196777
    8. '{"' → logprob: -9.974509239196777
    9. '{' → logprob: -10.224509239196777
    10. 'inkles' → logprob: -10.599509239196777

Token 381: 'lers' (ID: 15137)
  Prédit: 'lers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lers' → logprob: -0.0060219415463507175
    2. 'ler' → logprob: -5.131021976470947
    3. 'l' → logprob: -10.256021499633789
    4. 'k' → logprob: -10.881021499633789
    5. 'kl' → logprob: -11.006021499633789
    6. 'ers' → logprob: -11.381021499633789
    7. '   ' → logprob: -12.506021499633789
    8. 'kers' → logprob: -13.131021499633789
    9. '       ' → logprob: -13.881021499633789
    10. '[' → logprob: -14.256021499633789

Token 382: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.8921695047756657e-05
    2. '[' → logprob: -10.500028610229492
    3. ' [' → logprob: -14.125028610229492
    4. '[
' → logprob: -14.750028610229492
    5. '[id' → logprob: -16.125028610229492
    6. '[int' → logprob: -16.375028610229492
    7. '   ' → logprob: -17.125028610229492
    8. 'idx' → logprob: -17.625028610229492
    9. '[index' → logprob: -18.125028610229492
    10. '[i' → logprob: -18.250028610229492

Token 383: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10130463540554047
    2. ']' → logprob: -2.351304531097412
    3. ' )' → logprob: -7.101304531097412
    4. '}' → logprob: -8.85130500793457
    5. ' ]' → logprob: -9.22630500793457
    6. '<|end|>' → logprob: -11.35130500793457
    7. ')]' → logprob: -11.72630500793457
    8. ' ' → logprob: -12.60130500793457
    9. '])' → logprob: -12.85130500793457
    10. '   ' → logprob: -13.35130500793457

Token 384: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5769779086112976
    2. 'def' → logprob: -0.8269779086112976
    3. ' def' → logprob: -7.201977729797363
    4. 'class' → logprob: -9.326977729797363
    5. '	def' → logprob: -9.951977729797363
    6. '    
' → logprob: -10.076977729797363
    7. '<|end|>' → logprob: -10.076977729797363
    8. ' ' → logprob: -10.451977729797363
    9. '```' → logprob: -11.701977729797363
    10. '
' → logprob: -11.826977729797363

Token 385: ' P' (ID: 398)
  Prédit: ' Spr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Spr' → logprob: -1.6933943033218384
    2. ' Garden' → logprob: -1.9433943033218384
    3. ' Position' → logprob: -2.318394184112549
    4. ' Board' → logprob: -2.693394184112549
    5. ' Grid' → logprob: -2.693394184112549
    6. ' Water' → logprob: -3.068394184112549
    7. ' Solution' → logprob: -3.318394184112549
    8. ' Coverage' → logprob: -3.318394184112549
    9. 'Spr' → logprob: -3.443394184112549
    10. ' Field' → logprob: -3.443394184112549

Token 386: 'yon' (ID: 10033)
  Prédit: 'osition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'osition' → logprob: -0.22880926728248596
    2. 'ath' → logprob: -2.228809356689453
    3. 'os' → logprob: -3.603809356689453
    4. 'uzzle' → logprob: -4.228809356689453
    5. 'ro' → logprob: -4.603809356689453
    6. 'l' → logprob: -4.603809356689453
    7. 'arking' → logprob: -5.478809356689453
    8. 'lace' → logprob: -5.728809356689453
    9. 'oint' → logprob: -5.728809356689453
    10. 'attern' → logprob: -6.103809356689453

Token 387: 'k' (ID: 74)
  Prédit: 'Jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Jump' → logprob: -1.0542776584625244
    2. '<|end|>' → logprob: -1.0542776584625244
    3. 'Game' → logprob: -2.4292776584625244
    4. 'Move' → logprob: -4.054277420043945
    5. 'ic' → logprob: -4.304277420043945
    6. 'Solver' → logprob: -4.429277420043945
    7. 'Walker' → logprob: -4.679277420043945
    8. 'inja' → logprob: -4.679277420043945
    9. 'Position' → logprob: -4.679277420043945
    10. 'ex' → logprob: -4.804277420043945

Token 388: 'ichi' (ID: 44252)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2443641871213913
    2. 'Jump' → logprob: -2.6193642616271973
    3. '<|end|>' → logprob: -2.7443642616271973
    4. 'Position' → logprob: -4.619364261627197
    5. 'Moves' → logprob: -4.869364261627197
    6. '{' → logprob: -5.119364261627197
    7. 'Move' → logprob: -5.369364261627197
    8. 'Step' → logprob: -5.369364261627197
    9. 'Game' → logprob: -5.619364261627197
    10. '<|end|>' → logprob: -5.744364261627197

Token 389: 'Movement' (ID: 42868)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008228530059568584
    2. ':
' → logprob: -7.125823020935059
    3. '(' → logprob: -12.250823020935059
    4. ':

' → logprob: -12.750823020935059
    5. '(J' → logprob: -12.750823020935059
    6. '(S' → logprob: -13.500823020935059
    7. ':J' → logprob: -13.875823020935059
    8. ':def' → logprob: -14.250823020935059
    9. '<|end|>' → logprob: -14.250823020935059
    10. 'J' → logprob: -14.375823020935059

Token 390: 'Model' (ID: 2239)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009411195642314851
    2. ':
' → logprob: -7.000941276550293
    3. '(J' → logprob: -11.500941276550293
    4. ':

' → logprob: -11.875941276550293
    5. '(' → logprob: -12.625941276550293
    6. ':J' → logprob: -12.750941276550293
    7. 'Jump' → logprob: -13.000941276550293
    8. ':def' → logprob: -13.875941276550293
    9. '<|end|>' → logprob: -14.250941276550293
    10. '_jump' → logprob: -14.625941276550293

Token 391: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.966313281329349e-05
    2. ':
' → logprob: -10.000049591064453
    3. '<|end|>' → logprob: -13.750049591064453
    4. ':

' → logprob: -14.125049591064453
    5. ':def' → logprob: -14.125049591064453
    6. ' :' → logprob: -14.875049591064453
    7. '(' → logprob: -15.000049591064453
    8. '():' → logprob: -15.625049591064453
    9. '(J' → logprob: -15.875049591064453
    10. ':J' → logprob: -15.875049591064453

Token 392: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023312099277973175
    2. ' def' → logprob: -3.7733120918273926
    3. 'def' → logprob: -10.02331256866455
    4. ' J' → logprob: -11.52331256866455
    5. '
' → logprob: -12.27331256866455
    6. '	def' → logprob: -13.14831256866455
    7. ' class' → logprob: -13.14831256866455
    8. '    
' → logprob: -14.27331256866455
    9. 'class' → logprob: -14.39831256866455
    10. '   ' → logprob: -14.64831256866455

Token 393: ' #' (ID: 1069)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.07103750109672546
    2. 'def' → logprob: -2.696037530899048
    3. '   ' → logprob: -7.696037292480469
    4. 'class' → logprob: -7.946037292480469
    5. ' class' → logprob: -9.696037292480469
    6. ' J' → logprob: -10.446037292480469
    7. ' ' → logprob: -10.946037292480469
    8. ' jumps' → logprob: -11.321037292480469
    9. ' move' → logprob: -11.446037292480469
    10. ' MOVE' → logprob: -11.446037292480469

Token 394: ' Jump' (ID: 51108)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.14141647517681122
    2. 'def' → logprob: -2.516416549682617
    3. 'class' → logprob: -4.266416549682617
    4. ' class' → logprob: -4.891416549682617
    5. 'd' → logprob: -5.391416549682617
    6. ' knight' → logprob: -5.766416549682617
    7. '#' → logprob: -5.891416549682617
    8. ' moves' → logprob: -6.141416549682617
    9. ' KN' → logprob: -6.266416549682617
    10. ' #' → logprob: -6.391416549682617

Token 395: ' pattern' (ID: 8302)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5137797594070435
    2. 's' → logprob: -1.5137797594070435
    3. 'set' → logprob: -2.388779640197754
    4. 'moves' → logprob: -3.513779640197754
    5. '_set' → logprob: -4.263779640197754
    6. '_d' → logprob: -4.888779640197754
    7. 'sets' → logprob: -5.013779640197754
    8. ' =' → logprob: -5.388779640197754
    9. 'def' → logprob: -5.513779640197754
    10. 'D' → logprob: -5.513779640197754

Token 396: ' fixed' (ID: 13213)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021431179717183113
    2. '   ' → logprob: -4.021430969238281
    3. '=' → logprob: -6.146430969238281
    4. ':' → logprob: -7.271430969238281
    5. 'd' → logprob: -9.771430969238281
    6. '=[' → logprob: -9.771430969238281
    7. '_d' → logprob: -10.146430969238281
    8. 'def' → logprob: -10.271430969238281
    9. ' =
' → logprob: -10.396430969238281
    10. ' ' → logprob: -10.396430969238281

Token 397: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011934977024793625
    2. ':' → logprob: -4.636934757232666
    3. '   ' → logprob: -6.386934757232666
    4. '=' → logprob: -8.886935234069824
    5. ' :' → logprob: -9.511935234069824
    6. 'def' → logprob: -10.011935234069824
    7. ',' → logprob: -10.011935234069824
    8. 's' → logprob: -10.261935234069824
    9. ' =
' → logprob: -10.386935234069824
    10. ':
' → logprob: -10.636935234069824

Token 398: ' in' (ID: 306)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.08552588522434235
    2. '[' → logprob: -3.7105259895324707
    3. '[
' → logprob: -3.8355259895324707
    4. 'Jump' → logprob: -4.210525989532471
    5. ' [(' → logprob: -4.460525989532471
    6. '[((' → logprob: -5.835525989532471
    7. ' [' → logprob: -5.960525989532471
    8. '   ' → logprob: -6.585525989532471
    9. ' Jump' → logprob: -6.835525989532471
    10. '{' → logprob: -7.960525989532471

Token 399: ' problem' (ID: 4792)
  Prédit: 'Jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Jump' → logprob: -0.6394042372703552
    2. '[(' → logprob: -1.389404296875
    3. 'class' → logprob: -1.889404296875
    4. '[' → logprob: -3.889404296875
    5. '__' → logprob: -4.389404296875
    6. 'def' → logprob: -5.139404296875
    7. 'code' → logprob: -5.264404296875
    8. '{' → logprob: -5.639404296875
    9. 'Position' → logprob: -5.639404296875
    10. 'the' → logprob: -5.764404296875

Token 400: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29120054841041565
    2. ' =' → logprob: -2.166200637817383
    3. ':' → logprob: -2.416200637817383
    4. '
' → logprob: -4.166200637817383
    5. ':
' → logprob: -4.166200637817383
    6. 'class' → logprob: -5.916200637817383
    7. ',' → logprob: -5.916200637817383
    8. '    
' → logprob: -6.291200637817383
    9. ' class' → logprob: -6.791200637817383
    10. ' ' → logprob: -6.791200637817383

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006093031261116266
    2. ':' → logprob: -5.2560930252075195
    3. '    ' → logprob: -8.13109302520752
    4. '
' → logprob: -8.25609302520752
    5. 'def' → logprob: -9.50609302520752
    6. ' def' → logprob: -9.75609302520752
    7. ':
' → logprob: -10.13109302520752
    8. '    
' → logprob: -10.50609302520752
    9. ' :' → logprob: -10.75609302520752
    10. ' =' → logprob: -11.25609302520752

Token 402: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.20197798311710358
    2. 'def' (adapté à ' def') → logprob: -2.0769779682159424
    3. '   ' → logprob: -4.0769782066345215
    4. 'J' → logprob: -4.8269782066345215
    5. ' J' → logprob: -5.2019782066345215
    6. 'j' → logprob: -5.3269782066345215
    7. '_j' → logprob: -5.3269782066345215
    8. ' jumps' → logprob: -5.3269782066345215
    9. '_jump' → logprob: -5.5769782066345215
    10. 'jump' → logprob: -5.7019782066345215

Token 403: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5760535597801208
    2. '__' → logprob: -0.8260535597801208
    3. '_init' → logprob: -9.201053619384766
    4. 'init' → logprob: -11.576053619384766
    5. 'def' → logprob: -13.451053619384766
    6. '.__' → logprob: -13.951053619384766
    7. ' init' → logprob: -14.576053619384766
    8. '___' → logprob: -14.826053619384766
    9. ' _' → logprob: -15.951053619384766
    10. '_jump' → logprob: -16.326053619384766

Token 404: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.125
    3. 'ini' → logprob: -18.875
    4. '_init' → logprob: -21.0
    5. 'def' → logprob: -21.25
    6. 'hash' → logprob: -21.75
    7. 'in' → logprob: -21.875
    8. 'inite' → logprob: -21.875
    9. 'int' → logprob: -22.125
    10. '```' → logprob: -22.625

Token 405: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00022082125360611826
    2. '(self' → logprob: -8.750221252441406
    3. '__' → logprob: -9.750221252441406
    4. '_(' → logprob: -12.625221252441406
    5. '__(
' → logprob: -14.875221252441406
    6. ' (' → logprob: -16.375221252441406
    7. '(' → logprob: -16.625221252441406
    8. '__((' → logprob: -16.875221252441406
    9. '___' → logprob: -17.250221252441406
    10. '

' → logprob: -17.375221252441406

Token 406: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011152983643114567
    2. '
' → logprob: -9.37511157989502
    3. ' self' → logprob: -10.62511157989502
    4. ')' → logprob: -14.00011157989502
    5. '   ' → logprob: -14.75011157989502
    6. '  ' → logprob: -15.12511157989502
    7. '0' → logprob: -15.50011157989502
    8. '(self' → logprob: -15.75011157989502
    9. ' ' → logprob: -16.375110626220703
    10. '):
' → logprob: -17.000110626220703

Token 407: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021772179752588272
    2. '):' → logprob: -4.646772384643555
    3. '):
' → logprob: -5.521772384643555
    4. 'self' → logprob: -5.896772384643555
    5. '__(' → logprob: -5.896772384643555
    6. '__,' → logprob: -6.771772384643555
    7. '__' → logprob: -7.396772384643555
    8. '(self' → logprob: -8.146772384643555
    9. ',self' → logprob: -9.271772384643555
    10. ')' → logprob: -9.896772384643555

Token 408: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08408770710229874
    2. ' self' → logprob: -2.834087610244751
    3. '       ' → logprob: -3.834087610244751
    4. 'Jump' → logprob: -8.834087371826172
    5. ' Jump' → logprob: -9.709087371826172
    6. '   ' → logprob: -10.834087371826172
    7. '(self' → logprob: -11.584087371826172
    8. '	self' → logprob: -11.834087371826172
    9. ' ' → logprob: -13.084087371826172
    10. 'J' → logprob: -13.709087371826172

Token 409: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.032794687896966934
    2. '       ' → logprob: -3.532794713973999
    3. ' self' → logprob: -5.90779447555542
    4. 'd' → logprob: -8.407794952392578
    5. 'j' → logprob: -10.782794952392578
    6. 'Jump' → logprob: -10.907794952392578
    7. 'jump' → logprob: -10.907794952392578
    8. 'dx' → logprob: -11.907794952392578
    9. ' jumps' → logprob: -12.157794952392578
    10. '[self' → logprob: -12.282794952392578

Token 410: ' From' (ID: 7217)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04546000435948372
    2. 'd' → logprob: -3.7954599857330322
    3. '       ' → logprob: -3.9204599857330322
    4. ' self' → logprob: -6.295460224151611
    5. 'j' → logprob: -9.045459747314453
    6. '#' → logprob: -10.045459747314453
    7. 'dx' → logprob: -10.170459747314453
    8. 'jump' → logprob: -10.670459747314453
    9. ' del' → logprob: -11.420459747314453
    10. ' jumps' → logprob: -11.670459747314453

Token 411: ' diagram' (ID: 37044)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7706589102745056
    2. 'Position' → logprob: -0.8956589102745056
    3. '[(' → logprob: -3.0206589698791504
    4. ' (' → logprob: -4.02065896987915
    5. '[' → logprob: -4.14565896987915
    6. ' Position' → logprob: -4.64565896987915
    7. '(Position' → logprob: -4.64565896987915
    8. 'Jump' → logprob: -5.02065896987915
    9. '(-' → logprob: -5.27065896987915
    10. 'self' → logprob: -5.39565896987915

Token 412: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22567568719387054
    2. 'self' → logprob: -2.475675582885742
    3. '[' → logprob: -2.850675582885742
    4. ',' → logprob: -3.350675582885742
    5. ' self' → logprob: -5.350675582885742
    6. '[(' → logprob: -5.475675582885742
    7. '(self' → logprob: -5.725675582885742
    8. '(' → logprob: -5.975675582885742
    9. 'd' → logprob: -6.225675582885742
    10. ' [' → logprob: -6.225675582885742

Token 413: 'b' (ID: 65)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.4739808440208435
    2. '(' → logprob: -1.2239809036254883
    3. '-' → logprob: -2.9739809036254883
    4. ' (' → logprob: -4.973980903625488
    5. '0' → logprob: -5.098980903625488
    6. '[' → logprob: -5.223980903625488
    7. ' (-' → logprob: -5.598980903625488
    8. '[(' → logprob: -5.848980903625488
    9. '1' → logprob: -6.723980903625488
    10. '[-' → logprob: -7.223980903625488

Token 414: ')' (ID: 8)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.201328158378601
    2. '=' → logprob: -1.951328158378601
    3. '1' → logprob: -2.2013282775878906
    4. '(' → logprob: -2.7013282775878906
    5. 'oard' → logprob: -3.2013282775878906
    6. 'ishop' → logprob: -3.2013282775878906
    7. '[-' → logprob: -3.5763282775878906
    8. ' =' → logprob: -3.7013282775878906
    9. ',' → logprob: -3.9513282775878906
    10. '[' → logprob: -4.076328277587891

Token 415: ' jump' (ID: 13843)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35146281123161316
    2. 'self' → logprob: -1.3514628410339355
    3. ' self' → logprob: -4.2264628410339355
    4. 'd' → logprob: -4.3514628410339355
    5. ',' → logprob: -5.8514628410339355
    6. '[' → logprob: -5.8514628410339355
    7. '
' → logprob: -7.1014628410339355
    8. '[(' → logprob: -7.1014628410339355
    9. '(self' → logprob: -7.4764628410339355
    10. ' jumps' → logprob: -8.601462364196777

Token 416: ' range' (ID: 3352)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18351241946220398
    2. 'd' → logprob: -2.1835124492645264
    3. '_d' → logprob: -3.1835124492645264
    4. 'set' → logprob: -4.933512210845947
    5. '_set' → logprob: -5.808512210845947
    6. '_offsets' → logprob: -6.558512210845947
    7. ' =' → logprob: -7.808512210845947
    8. 'D' → logprob: -8.308512687683105
    9. 'sets' → logprob: -8.433512687683105
    10. '_positions' → logprob: -8.558512687683105

Token 417: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3988460600376129
    2. 's' → logprob: -1.5238460302352905
    3. '=' → logprob: -3.39884614944458
    4. '=[' → logprob: -3.77384614944458
    5. 'd' → logprob: -3.89884614944458
    6. '       ' → logprob: -4.39884614944458
    7. '[' → logprob: -4.64884614944458
    8. '   ' → logprob: -5.39884614944458
    9. '[(' → logprob: -6.02384614944458
    10. 'self' → logprob: -7.52384614944458

Token 418: ' man' (ID: 873)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.1373172253370285
    2. '[' → logprob: -2.762317180633545
    3. ' [(' → logprob: -3.012317180633545
    4. ' [' → logprob: -4.887317180633545
    5. '[
' → logprob: -5.887317180633545
    6. '       ' → logprob: -6.137317180633545
    7. '{' → logprob: -6.512317180633545
    8. 'Jump' → logprob: -7.637317180633545
    9. '[((' → logprob: -7.762317180633545
    10. '   ' → logprob: -8.137317657470703

Token 419: 'hattan' (ID: 41652)
  Prédit: 'hattan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hattan' → logprob: -0.34439632296562195
    2. 'hat' → logprob: -1.9693963527679443
    3. 'h' → logprob: -2.5943963527679443
    4. 'd' → logprob: -3.3443963527679443
    5. '(' → logprob: -3.9693963527679443
    6. '[' → logprob: -5.594396114349365
    7. '=' → logprob: -5.719396114349365
    8. 'hatan' → logprob: -5.969396114349365
    9. 'tle' → logprob: -6.594396114349365
    10. 'dx' → logprob: -7.406896114349365

Token 420: ' ' (ID: 220)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.9107003808021545
    2. '_distance' → logprob: -1.5357003211975098
    3. ' distances' → logprob: -1.7857003211975098
    4. 'dist' → logprob: -2.2857003211975098
    5. ' distance' → logprob: -2.7857003211975098
    6. '_dist' → logprob: -3.9107003211975098
    7. '=' → logprob: -4.28570032119751
    8. ' =' → logprob: -5.03570032119751
    9. 'd' → logprob: -6.03570032119751
    10. '[' → logprob: -6.53570032119751

Token 421: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9743425846099854
    2. '3' → logprob: -1.0993425846099854
    3. 'distance' → logprob: -1.8493425846099854
    4. '=' → logprob: -2.5993425846099854
    5. '1' → logprob: -3.7243425846099854
    6. '==' → logprob: -3.9743425846099854
    7. '4' → logprob: -5.349342346191406
    8. ' ' → logprob: -5.724342346191406
    9. 'dist' → logprob: -6.099342346191406
    10. '<=' → logprob: -6.349342346191406

Token 422: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015785876661539078
    2. ',' → logprob: -4.5157856941223145
    3. 'self' → logprob: -5.8907856941223145
    4. ' and' → logprob: -7.7657856941223145
    5. ' =' → logprob: -7.8907856941223145
    6. 'd' → logprob: -8.140786170959473
    7. ' self' → logprob: -9.015786170959473
    8. '
' → logprob: -9.265786170959473
    9. ' ,' → logprob: -9.390786170959473
    10. '	' → logprob: -9.390786170959473

Token 423: ' no' (ID: 860)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.9031093716621399
    2. '{' → logprob: -1.9031093120574951
    3. 'd' → logprob: -2.153109312057495
    4. '[
' → logprob: -2.403109312057495
    5. '[' → logprob: -2.778109312057495
    6. 'self' → logprob: -2.903109312057495
    7. 'dx' → logprob: -3.653109312057495
    8. '(' → logprob: -4.153109550476074
    9. '{
' → logprob: -4.278109550476074
    10. 'positions' → logprob: -4.778109550476074

Token 424: ' intermediate' (ID: 47388)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18695957958698273
    2. 'dx' → logprob: -2.9369595050811768
    3. '0' → logprob: -3.8119595050811768
    4. '(dx' → logprob: -4.061959743499756
    5. 'di' → logprob: -4.686959743499756
    6. 'Position' → logprob: -4.811959743499756
    7. 'straight' → logprob: -4.811959743499756
    8. 'inter' → logprob: -4.811959743499756
    9. ' (' → logprob: -5.186959743499756
    10. 'self' → logprob: -5.311959743499756

Token 425: ',' (ID: 11)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.9548507928848267
    2. 'steps' → logprob: -1.5798507928848267
    3. ' positions' → logprob: -1.9548507928848267
    4. 'points' → logprob: -2.204850673675537
    5. ' points' → logprob: -3.204850673675537
    6. ' steps' → logprob: -3.829850673675537
    7. 's' → logprob: -4.204850673675537
    8. ' squares' → logprob: -4.704850673675537
    9. 'cells' → logprob: -4.704850673675537
    10. '(' → logprob: -4.829850673675537

Token 426: ' del' (ID: 1083)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0183521509170532
    2. '       ' → logprob: -1.6433521509170532
    3. 'self' → logprob: -1.8933521509170532
    4. ' but' → logprob: -2.6433520317077637
    5. '           ' → logprob: -3.1433520317077637
    6. ' self' → logprob: -3.5183520317077637
    7. ' jumps' → logprob: -4.018352031707764
    8. ' del' → logprob: -4.143352031707764
    9. 'but' → logprob: -4.518352031707764
    10. '#' → logprob: -4.518352031707764

Token 427: 'tas' (ID: 34419)
  Prédit: 'tas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tas' → logprob: -1.771655115589965e-05
    2. '[' → logprob: -12.250018119812012
    3. 'ta' → logprob: -12.750018119812012
    4. 'as' → logprob: -12.875018119812012
    5. 'etas' → logprob: -13.375018119812012
    6. '   ' → logprob: -13.500018119812012
    7. '(' → logprob: -13.750018119812012
    8. 'atas' → logprob: -14.750018119812012
    9. '('' → logprob: -14.875018119812012
    10. '[(' → logprob: -15.000018119812012

Token 428: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01346760056912899
    2. '=' → logprob: -4.513467788696289
    3. '=[' → logprob: -6.138467788696289
    4. ' =[' → logprob: -9.013467788696289
    5. '=[
' → logprob: -9.013467788696289
    6. '   ' → logprob: -12.638467788696289
    7. '[' → logprob: -13.138467788696289
    8. ':' → logprob: -13.138467788696289
    9. ' ' → logprob: -13.513467788696289
    10. '=[]' → logprob: -13.763467788696289

Token 429: '       ' (ID: 309)
  Prédit: ' [('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -1.121436595916748
    2. '       ' → logprob: -1.246436595916748
    3. '[(' → logprob: -1.496436595916748
    4. ' [' → logprob: -2.996436595916748
    5. '[' → logprob: -3.246436595916748
    6. '[
' → logprob: -3.746436595916748
    7. ' self' → logprob: -3.871436595916748
    8. 'self' → logprob: -4.121436595916748
    9. ' [
' → logprob: -4.496436595916748
    10. '   ' → logprob: -7.621436595916748

Token 430: ' del' (ID: 1083)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.2354888767004013
    2. '[' → logprob: -2.4854888916015625
    3. ' [(' → logprob: -2.4854888916015625
    4. ' [' → logprob: -3.6104888916015625
    5. '[
' → logprob: -4.6104888916015625
    6. 'self' → logprob: -5.9854888916015625
    7. '{' → logprob: -6.6104888916015625
    8. '       ' → logprob: -7.3604888916015625
    9. ' self' → logprob: -7.4854888916015625
    10. ' [
' → logprob: -7.4854888916015625

Token 431: 'tas' (ID: 34419)
  Prédit: 'tas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tas' → logprob: -4.842555426876061e-06
    2. 't' → logprob: -13.375004768371582
    3. 'etas' → logprob: -14.250004768371582
    4. 'as' → logprob: -14.625004768371582
    5. 'ta' → logprob: -14.875004768371582
    6. '=' → logprob: -14.875004768371582
    7. '
' → logprob: -15.250004768371582
    8. '   ' → logprob: -16.3750057220459
    9. 's' → logprob: -16.3750057220459
    10. 'atas' → logprob: -16.6250057220459

Token 432: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001057698973454535
    2. '=' → logprob: -7.2510576248168945
    3. '=[' → logprob: -8.126057624816895
    4. ' =[' → logprob: -9.876057624816895
    5. '=[
' → logprob: -15.001057624816895
    6. ' =(' → logprob: -16.37605857849121
    7. ' ' → logprob: -16.50105857849121
    8. '=(' → logprob: -18.00105857849121
    9. '   ' → logprob: -18.25105857849121
    10. '=((' → logprob: -18.37605857849121

Token 433: ' [
' (ID: 4240)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.006171232555061579
    2. '[' → logprob: -5.256171226501465
    3. ' [(' → logprob: -7.631171226501465
    4. '[
' → logprob: -7.881171226501465
    5. '{' → logprob: -9.881171226501465
    6. '[((' → logprob: -11.256171226501465
    7. ' [' → logprob: -11.756171226501465
    8. '   ' → logprob: -14.131171226501465
    9. '(' → logprob: -14.631171226501465
    10. ' ' → logprob: -15.006171226501465

Token 434: '           ' (ID: 352)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18165168166160583
    2. '(-' → logprob: -1.9316517114639282
    3. ' (' → logprob: -3.9316515922546387
    4. '   ' → logprob: -6.806651592254639
    5. ' (-' → logprob: -8.056652069091797
    6. '           ' → logprob: -9.181652069091797
    7. '(+' → logprob: -10.056652069091797
    8. ' ' → logprob: -11.931652069091797
    9. '       ' → logprob: -12.306652069091797
    10. ' (+' → logprob: -12.681652069091797

Token 435: ' (+' (ID: 36088)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.131917804479599
    2. '(-' → logprob: -2.131917715072632
    3. ' (' → logprob: -5.631917953491211
    4. '(+' (adapté à ' (+') → logprob: -6.631917953491211
    5. ' (-' → logprob: -10.131917953491211
    6. '   ' → logprob: -10.631917953491211
    7. ' (+' → logprob: -11.881917953491211
    8. ' ' → logprob: -12.756917953491211
    9. '           ' → logprob: -13.256917953491211
    10. '2' → logprob: -14.131917953491211

Token 436: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2721114158630371
    2. '1' → logprob: -2.022111415863037
    3. '-' → logprob: -2.397111415863037
    4. '3' → logprob: -4.272111415863037
    5. '0' → logprob: -7.522111415863037
    6. ' ' → logprob: -8.272111892700195
    7. '(-' → logprob: -9.772111892700195
    8. '(' → logprob: -10.772111892700195
    9. '4' → logprob: -11.397111892700195
    10. ' -' → logprob: -11.834611892700195

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004633638076484203
    2. ' ,' → logprob: -5.37963342666626
    3. '0' → logprob: -11.254633903503418
    4. ' ' → logprob: -15.504633903503418
    5. '   ' → logprob: -15.879633903503418
    6. ',
' → logprob: -17.1296329498291
    7. ',+' → logprob: -17.6296329498291
    8. '  ' → logprob: -18.1296329498291
    9. '           ' → logprob: -18.7546329498291
    10. '    ' → logprob: -18.7546329498291

Token 438: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27615904808044434
    2. ' ' → logprob: -1.6511590480804443
    3. '+' → logprob: -3.0261590480804443
    4. '-' → logprob: -7.026159286499023
    5. ' +' → logprob: -9.776159286499023
    6. '2' → logprob: -10.651159286499023
    7. '1' → logprob: -12.276159286499023
    8. ' -' → logprob: -13.026159286499023
    9. '+
' → logprob: -14.651159286499023
    10. '4' → logprob: -14.901159286499023

Token 439: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0199582502245903
    2. ')' → logprob: -4.644958019256592
    3. '),
' → logprob: -4.769958019256592
    4. '),(' → logprob: -6.769958019256592
    5. ' ),' → logprob: -7.769958019256592
    6. '),

' → logprob: -9.51995849609375
    7. ',' → logprob: -11.51995849609375
    8. ' ),
' → logprob: -12.01995849609375
    9. '),
' → logprob: -12.64495849609375
    10. ',),' → logprob: -12.89495849609375

Token 440: ' (-' (ID: 21382)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6731513738632202
    2. ' (' → logprob: -0.9231513738632202
    3. ' (+' → logprob: -2.5481514930725098
    4. '(+' → logprob: -4.67315149307251
    5. '           ' → logprob: -5.54815149307251
    6. '(-' → logprob: -7.17315149307251
    7. ' (-' → logprob: -8.048151016235352
    8. ' ' → logprob: -10.548151016235352
    9. '   ' → logprob: -10.798151016235352
    10. '+' → logprob: -10.923151016235352

Token 441: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. '<|end|>' → logprob: -15.87500286102295
    4. '1' → logprob: -16.125001907348633
    5. '2' → logprob: -17.687501907348633
    6. '۳' → logprob: -18.000001907348633
    7. '３' → logprob: -18.125001907348633
    8. '+' → logprob: -18.375001907348633
    9. '<|end|>' → logprob: -18.562501907348633
    10. '৩' → logprob: -18.562501907348633

Token 442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014597235713154078
    2. ' ,' → logprob: -9.12514591217041
    3. '0' → logprob: -10.25014591217041
    4. '<|end|>' → logprob: -13.62514591217041
    5. ',
' → logprob: -15.87514591217041
    6. ' ' → logprob: -16.250146865844727
    7. '‌,' → logprob: -16.625146865844727
    8. ')' → logprob: -16.750146865844727
    9. ',None' → logprob: -17.500146865844727
    10. '),' → logprob: -17.750146865844727

Token 443: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '<|end|>' → logprob: -15.750021934509277
    4. '۰' → logprob: -21.50002098083496
    5. '
' → logprob: -22.62502098083496
    6. '  ' → logprob: -22.87502098083496
    7. ',' → logprob: -24.00002098083496
    8. ')' → logprob: -24.12502098083496
    9. '00' → logprob: -24.25002098083496
    10. '<|end|>' → logprob: -24.31252098083496

Token 444: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0011959441471844912
    2. ')' → logprob: -6.876195907592773
    3. ' ),' → logprob: -9.251195907592773
    4. ',' → logprob: -10.376195907592773
    5. '),(' → logprob: -10.876195907592773
    6. '),
' → logprob: -11.126195907592773
    7. '),

' → logprob: -13.751195907592773
    8. ',),' → logprob: -14.876195907592773
    9. '   ' → logprob: -15.626195907592773
    10. '       ' → logprob: -16.251195907592773

Token 445: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.25807273387908936
    2. '(' → logprob: -1.5080727338790894
    3. ' (+' → logprob: -5.383072853088379
    4. '           ' → logprob: -6.633072853088379
    5. '(+' → logprob: -9.133072853088379
    6. ' ' → logprob: -9.633072853088379
    7. '   ' → logprob: -11.258072853088379
    8. ' (-' → logprob: -11.883072853088379
    9. '            ' → logprob: -12.258072853088379
    10. '<|end|>' → logprob: -12.508072853088379

Token 446: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020735491125378758
    2. '+' → logprob: -9.25020694732666
    3. '3' → logprob: -9.75020694732666
    4. ' ' → logprob: -9.87520694732666
    5. '-' → logprob: -14.00020694732666
    6. '2' → logprob: -14.87520694732666
    7. '(' → logprob: -15.12520694732666
    8. '   ' → logprob: -17.500207901000977
    9. '  
' → logprob: -17.750207901000977
    10. '
' → logprob: -18.000207901000977

Token 447: ',+' (ID: 38214)
  Prédit: ',+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',+' → logprob: -0.15026478469371796
    2. '+' → logprob: -2.4002647399902344
    3. ',' → logprob: -3.0252647399902344
    4. '3' → logprob: -8.400264739990234
    5. ' +' → logprob: -10.650264739990234
    6. '+,' → logprob: -11.525264739990234
    7. '
' → logprob: -12.025264739990234
    8. ',
' → logprob: -12.525264739990234
    9. ' ,' → logprob: -12.525264739990234
    10. ',-' → logprob: -13.025264739990234

Token 448: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.500004768371582
    3. '-' → logprob: -14.250004768371582
    4. '1' → logprob: -16.750003814697266
    5. '
' → logprob: -18.125003814697266
    6. '2' → logprob: -18.125003814697266
    7. '   ' → logprob: -19.125003814697266
    8. ')' → logprob: -19.375003814697266
    9. '+' → logprob: -19.750003814697266
    10. '۳' → logprob: -19.750003814697266

Token 449: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0022714624647051096
    2. ')' → logprob: -6.37727165222168
    3. '),(' → logprob: -8.12727165222168
    4. ' ),' → logprob: -8.62727165222168
    5. ',' → logprob: -9.75227165222168
    6. '),
' → logprob: -10.37727165222168
    7. ',),' → logprob: -13.37727165222168
    8. '),

' → logprob: -13.87727165222168
    9. ' ' → logprob: -14.00227165222168
    10. '0' → logprob: -14.50227165222168

Token 450: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759716629981995
    2. ' (' → logprob: -0.8259716629981995
    3. '0' → logprob: -10.950971603393555
    4. ' ' → logprob: -11.325971603393555
    5. '<|end|>' → logprob: -13.825971603393555
    6. '           ' → logprob: -13.950971603393555
    7. '   ' → logprob: -14.950971603393555
    8. '  ' → logprob: -16.200971603393555
    9. ',' → logprob: -16.200971603393555
    10. '        ' → logprob: -16.325971603393555

Token 451: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.786196975852363e-05
    2. ' ' → logprob: -10.375038146972656
    3. '-' → logprob: -12.000038146972656
    4. '   ' → logprob: -15.375038146972656
    5. '3' → logprob: -16.000038146972656
    6. '  ' → logprob: -17.125038146972656
    7. ')' → logprob: -17.250038146972656
    8. '(' → logprob: -17.375038146972656
    9. ',' → logprob: -17.625038146972656
    10. '
' → logprob: -18.250038146972656

Token 452: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.20480701327323914
    2. '-' → logprob: -1.7048070430755615
    3. ',' → logprob: -5.704806804656982
    4. ' -' → logprob: -10.20480728149414
    5. ',
' → logprob: -11.95480728149414
    6. ' ,-' → logprob: -12.20480728149414
    7. ',-
' → logprob: -12.45480728149414
    8. '
' → logprob: -13.70480728149414
    9. '-,' → logprob: -14.20480728149414
    10. ',+' → logprob: -14.57980728149414

Token 453: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.875
    3. ')' → logprob: -18.875
    4. '-' → logprob: -19.25
    5. '۳' → logprob: -19.375
    6. '   ' → logprob: -19.625
    7. '1' → logprob: -19.875
    8. '```' → logprob: -20.0
    9. '+' → logprob: -20.125
    10. '３' → logprob: -20.625

Token 454: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.007916063070297241
    2. ')' → logprob: -5.00791597366333
    3. '),
' → logprob: -7.50791597366333
    4. ')]' → logprob: -7.75791597366333
    5. '),(' → logprob: -8.882916450500488
    6. '       ' → logprob: -10.757916450500488
    7. ' ),' → logprob: -11.007916450500488
    8. '   ' → logprob: -11.257916450500488
    9. '],' → logprob: -11.382916450500488
    10. '           ' → logprob: -11.382916450500488

Token 455: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6799200177192688
    2. ' (+' → logprob: -1.179919958114624
    3. '(' → logprob: -2.554919958114624
    4. '(+' → logprob: -2.679919958114624
    5. ' (' → logprob: -3.429919958114624
    6. '(-' → logprob: -5.429920196533203
    7. '   ' → logprob: -6.554920196533203
    8. ' (-' → logprob: -6.929920196533203
    9. '       ' → logprob: -7.804920196533203
    10. '          ' → logprob: -9.429920196533203

Token 456: ' (+' (ID: 36088)
  Prédit: '(+'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(+' (adapté à ' (+') → logprob: -0.25876277685165405
    2. ' (+' → logprob: -1.7587628364562988
    3. '(' → logprob: -3.008762836456299
    4. ' (' → logprob: -5.383762836456299
    5. '(-' → logprob: -6.633762836456299
    6. '           ' → logprob: -7.883762836456299
    7. '   ' → logprob: -9.88376235961914
    8. ' (-' → logprob: -11.00876235961914
    9. '+' → logprob: -11.13376235961914
    10. '       ' → logprob: -12.13376235961914

Token 457: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013984529068693519
    2. '1' → logprob: -6.75139856338501
    3. ' ' → logprob: -8.751398086547852
    4. '3' → logprob: -10.251398086547852
    5. '-' → logprob: -11.126398086547852
    6. '0' → logprob: -12.188898086547852
    7. '
' → logprob: -12.313898086547852
    8. '

' → logprob: -12.938898086547852
    9. '+' → logprob: -13.501398086547852
    10. '   ' → logprob: -13.688898086547852

Token 458: ',+' (ID: 38214)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006614599376916885
    2. ',-' → logprob: -5.131614685058594
    3. ',+' → logprob: -7.506614685058594
    4. ' ,' → logprob: -9.131614685058594
    5. '1' → logprob: -10.881614685058594
    6. '0' → logprob: -12.631614685058594
    7. ',
' → logprob: -13.256614685058594
    8. ' ' → logprob: -14.006614685058594
    9. '   ' → logprob: -14.256614685058594
    10. '<|end|>' → logprob: -14.506614685058594

Token 459: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00025287605240009725
    2. '2' → logprob: -8.375252723693848
    3. ' ' → logprob: -11.625252723693848
    4. '-' → logprob: -11.875252723693848
    5. '3' → logprob: -12.250252723693848
    6. '0' → logprob: -14.375252723693848
    7. '   ' → logprob: -14.375252723693848
    8. '+' → logprob: -15.875252723693848
    9. '  ' → logprob: -16.750253677368164
    10. '```' → logprob: -16.750253677368164

Token 460: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0010946154361590743
    2. ')' → logprob: -7.501094818115234
    3. '),
' → logprob: -7.876094818115234
    4. '),(' → logprob: -9.001094818115234
    5. ',' → logprob: -11.126094818115234
    6. ' ),' → logprob: -11.251094818115234
    7. '),

' → logprob: -12.126094818115234
    8. '   ' → logprob: -13.251094818115234
    9. ',),' → logprob: -14.376094818115234
    10. '           ' → logprob: -14.376094818115234

Token 461: ' (+' (ID: 36088)
  Prédit: '(+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(+' → logprob: -0.35907936096191406
    2. ' (+' → logprob: -1.609079360961914
    3. '(' → logprob: -2.359079360961914
    4. '(-' → logprob: -5.359079360961914
    5. ' (' → logprob: -6.109079360961914
    6. '+' → logprob: -8.984079360961914
    7. ' (-' → logprob: -9.984079360961914
    8. '2' → logprob: -13.609079360961914
    9. ' ' → logprob: -14.484079360961914
    10. ' +' → logprob: -14.734079360961914

Token 462: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006358316168189049
    2. '-' → logprob: -7.375635623931885
    3. ' ' → logprob: -11.875636100769043
    4. ' -' → logprob: -14.125636100769043
    5. '1' → logprob: -14.750636100769043
    6. '(-' → logprob: -15.188136100769043
    7. '3' → logprob: -15.250636100769043
    8. '```' → logprob: -15.500636100769043
    9. '0' → logprob: -16.438135147094727
    10. '(' → logprob: -16.500635147094727

Token 463: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.0011089015752077103
    2. ',' → logprob: -6.8761091232299805
    3. '-' → logprob: -9.50110912322998
    4. ',-
' → logprob: -14.50110912322998
    5. ',
' → logprob: -14.75110912322998
    6. ',+' → logprob: -15.62610912322998
    7. ',-

' → logprob: -15.87610912322998
    8. ' ,-' → logprob: -16.626108169555664
    9. '",-' → logprob: -16.876108169555664
    10. '0' → logprob: -16.876108169555664

Token 464: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '<|end|>' → logprob: -17.000001907348633
    4. '-' → logprob: -19.375001907348633
    5. '۲' → logprob: -20.375001907348633
    6. '２' → logprob: -20.750001907348633
    7. '  ' → logprob: -20.750001907348633
    8. '২' → logprob: -21.250001907348633
    9. '   ' → logprob: -21.437501907348633
    10. ')' → logprob: -21.562501907348633

Token 465: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.004113900475203991
    2. ')' → logprob: -5.629113674163818
    3. ',' → logprob: -7.754113674163818
    4. '),(' → logprob: -9.754114151000977
    5. '),
' → logprob: -11.004114151000977
    6. ' ),' → logprob: -12.129114151000977
    7. '   ' → logprob: -13.379114151000977
    8. '),

' → logprob: -13.879114151000977
    9. ' ,' → logprob: -14.879114151000977
    10. '],' → logprob: -15.004114151000977

Token 466: ' (-' (ID: 21382)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4125775694847107
    2. '(' → logprob: -2.0375776290893555
    3. ' (-' → logprob: -2.2875776290893555
    4. '<|end|>' → logprob: -3.0375776290893555
    5. ' (+' → logprob: -3.1625776290893555
    6. '(-' → logprob: -4.4125776290893555
    7. ' ' → logprob: -5.9125776290893555
    8. '(+' → logprob: -6.9125776290893555
    9. ' ' → logprob: -10.037577629089355
    10. '   ' → logprob: -11.162577629089355

Token 467: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.25000286102295
    3. '<|end|>' → logprob: -14.00000286102295
    4. '-' → logprob: -18.375001907348633
    5. '
' → logprob: -18.500001907348633
    6. '２' → logprob: -18.500001907348633
    7. '۲' → logprob: -18.625001907348633
    8. '<|end|>' → logprob: -18.750001907348633
    9. '```' → logprob: -18.875001907348633
    10. '+' → logprob: -19.062501907348633

Token 468: ',+' (ID: 38214)
  Prédit: ',+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',+' → logprob: -0.011187756434082985
    2. '+' → logprob: -5.386187553405762
    3. ',-' → logprob: -5.386187553405762
    4. ',' → logprob: -6.261187553405762
    5. '-' → logprob: -10.386187553405762
    6. '2' → logprob: -11.511187553405762
    7. ' ,' → logprob: -12.136187553405762
    8. '+,' → logprob: -12.761187553405762
    9. '(+' → logprob: -13.386187553405762
    10. ')+' → logprob: -13.386187553405762

Token 469: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.180258191714529e-06
    2. '-' → logprob: -11.750008583068848
    3. ' ' → logprob: -15.250008583068848
    4. '<|end|>' → logprob: -18.37500762939453
    5. ' -' → logprob: -19.87500762939453
    6. '(-' → logprob: -20.25000762939453
    7. '(' → logprob: -20.50000762939453
    8. '۲' → logprob: -20.50000762939453
    9. '```' → logprob: -21.12500762939453
    10. '２' → logprob: -21.37500762939453

Token 470: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0033932526130229235
    2. ',' → logprob: -6.128393173217773
    3. ')' → logprob: -6.753393173217773
    4. ' ),' → logprob: -10.878393173217773
    5. '),(' → logprob: -11.503393173217773
    6. '),
' → logprob: -12.253393173217773
    7. ' ,' → logprob: -13.253393173217773
    8. '   ' → logprob: -13.378393173217773
    9. ',),' → logprob: -13.503393173217773
    10. '),

' → logprob: -14.503393173217773

Token 471: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.313296377658844
    2. ' (-' → logprob: -1.3132963180541992
    3. '(' → logprob: -10.4382963180542
    4. ' (' → logprob: -12.5632963180542
    5. ' ' → logprob: -14.0632963180542
    6. '   ' → logprob: -14.0632963180542
    7. '<|end|>' → logprob: -16.063297271728516
    8. ' -' → logprob: -16.188297271728516
    9. '-' → logprob: -16.313297271728516
    10. '  ' → logprob: -17.188297271728516

Token 472: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.988221684878226e-06
    2. '-' → logprob: -12.625006675720215
    3. ' ' → logprob: -12.750006675720215
    4. '<|end|>' → logprob: -15.000006675720215
    5. '(' → logprob: -16.62500762939453
    6. ' -' → logprob: -17.06250762939453
    7. '   ' → logprob: -17.06250762939453
    8. '(-' → logprob: -17.31250762939453
    9. '...' → logprob: -17.37500762939453
    10. '۲' → logprob: -17.56250762939453

Token 473: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.0489705465734005
    2. '-' → logprob: -3.0489704608917236
    3. ',' → logprob: -7.923970699310303
    4. ' -' → logprob: -11.298970222473145
    5. ',-
' → logprob: -12.548970222473145
    6. ' ,-' → logprob: -13.673970222473145
    7. '",-' → logprob: -14.298970222473145
    8. '(-' → logprob: -14.423970222473145
    9. ',
' → logprob: -14.548970222473145
    10. '<|end|>' → logprob: -14.548970222473145

Token 474: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.500005722045898
    3. '-' → logprob: -14.000005722045898
    4. ')' → logprob: -14.625005722045898
    5. '<|end|>' → logprob: -15.625005722045898
    6. '۲' → logprob: -17.7500057220459
    7. '２' → logprob: -18.5625057220459
    8. '```' → logprob: -18.6875057220459
    9. '   ' → logprob: -18.7500057220459
    10. '<|end|>' → logprob: -19.1875057220459

Token 475: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6467893719673157
    2. ']' → logprob: -0.7717893719673157
    3. ')]' → logprob: -4.77178955078125
    4. '   ' → logprob: -6.27178955078125
    5. '),' → logprob: -6.39678955078125
    6. '       ' → logprob: -6.89678955078125
    7. '],' → logprob: -7.52178955078125
    8. ',' → logprob: -8.27178955078125
    9. ' ]' → logprob: -9.27178955078125
    10. '           ' → logprob: -9.52178955078125

Token 476: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1133112981915474
    2. ']' → logprob: -2.238311290740967
    3. '   ' → logprob: -8.738311767578125
    4. ' ]' → logprob: -8.988311767578125
    5. ']
' → logprob: -9.238311767578125
    6. ',' → logprob: -9.238311767578125
    7. ')' → logprob: -12.863311767578125
    8. ',
' → logprob: -13.113311767578125
    9. '           ' → logprob: -13.363311767578125
    10. '               ' → logprob: -14.738311767578125

Token 477: ' ]
' (ID: 10213)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2836683392524719
    2. '       ' → logprob: -2.033668279647827
    3. ']
' (adapté à ' ]
') → logprob: -2.158668279647827
    4. '   ' → logprob: -7.783668518066406
    5. ' ]' → logprob: -9.158668518066406
    6. ' ]
' → logprob: -9.533668518066406
    7. ']
' → logprob: -10.158668518066406
    8. ')' → logprob: -12.033668518066406
    9. '           ' → logprob: -12.533668518066406
    10. ']

' → logprob: -13.408668518066406

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003266447747591883
    2. 'self' → logprob: -8.625327110290527
    3. '
' → logprob: -9.625327110290527
    4. ' self' → logprob: -9.750327110290527
    5. '   ' → logprob: -10.875327110290527
    6. '<|end|>' → logprob: -13.875327110290527
    7. '           ' → logprob: -14.250327110290527
    8. '
' → logprob: -14.750327110290527
    9. '        
' → logprob: -15.000327110290527
    10. ' ' → logprob: -15.125327110290527

Token 479: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0002273774443892762
    2. ' self' → logprob: -8.500226974487305
    3. '       ' → logprob: -10.875226974487305
    4. '
' → logprob: -12.500226974487305
    5. '        
' → logprob: -14.625226974487305
    6. '	self' → logprob: -15.250226974487305
    7. 'Jump' → logprob: -15.500226974487305
    8. '   ' → logprob: -16.625226974487305
    9. 'jump' → logprob: -16.750226974487305
    10. '[self' → logprob: -17.750226974487305

Token 480: '.j' (ID: 1760)
  Prédit: '.j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.j' → logprob: -0.3905535638332367
    2. '.jump' → logprob: -1.140553593635559
    3. ' =' → logprob: -6.2655534744262695
    4. '.moves' → logprob: -6.6405534744262695
    5. '.m' → logprob: -9.39055347442627
    6. ' .' → logprob: -9.51555347442627
    7. '.s' → logprob: -9.76555347442627
    8. '.mov' → logprob: -10.14055347442627
    9. '=' → logprob: -10.26555347442627
    10. ' jumps' → logprob: -10.51555347442627

Token 481: 'umps' (ID: 14938)
  Prédit: 'umps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umps' → logprob: -0.07893319427967072
    2. 'ump' → logprob: -2.5789332389831543
    3. 'um' → logprob: -10.328932762145996
    4. '   ' → logprob: -12.328932762145996
    5. ' um' → logprob: -14.203932762145996
    6. 'd' → logprob: -14.453932762145996
    7. 'ums' → logprob: -14.578932762145996
    8. ' jumps' → logprob: -14.828932762145996
    9. 'urn' → logprob: -15.078932762145996
    10. 'u' → logprob: -15.078932762145996

Token 482: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014133334159851
    2. '=' → logprob: -1.7014133930206299
    3. ' ' → logprob: -17.201414108276367
    4. 's' → logprob: -18.201414108276367
    5. ' =
' → logprob: -20.076414108276367
    6. '＝' → logprob: -20.451414108276367
    7. '=[]' → logprob: -20.576414108276367
    8. '=

' → logprob: -20.701414108276367
    9. ' =)' → logprob: -21.076414108276367
    10. ' =[' → logprob: -21.201414108276367

Token 483: ' Jump' (ID: 51108)
  Prédit: 'Jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Jump' → logprob: -0.0004307884373702109
    2. ' Jump' → logprob: -7.750430583953857
    3. 'J' → logprob: -16.125431060791016
    4. '	J' → logprob: -20.125431060791016
    5. '   ' → logprob: -20.625431060791016
    6. ' ' → logprob: -21.875431060791016
    7. 'jump' → logprob: -22.000431060791016
    8. '[' → logprob: -22.125431060791016
    9. 'Job' → logprob: -22.250431060791016
    10. '_jump' → logprob: -22.250431060791016

Token 484: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -5.319370302458992e-06
    2. 'set' → logprob: -12.750005722045898
    3. 'et' → logprob: -13.000005722045898
    4. 'Sets' → logprob: -16.2500057220459
    5. '_set' → logprob: -16.7500057220459
    6. '	Set' → logprob: -17.3750057220459
    7. '_Set' → logprob: -18.2500057220459
    8. ' Set' → logprob: -18.6250057220459
    9. 'List' → logprob: -19.1250057220459
    10. 'S' → logprob: -19.1250057220459

Token 485: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -8.061054359131958e-06
    2. '(' → logprob: -11.750007629394531
    3. '((' → logprob: -17.00000762939453
    4. ' (' → logprob: -17.75000762939453
    5. '([' → logprob: -18.50000762939453
    6. '(de' → logprob: -19.62500762939453
    7. '(D' → logprob: -19.75000762939453
    8. 'd' → logprob: -19.75000762939453
    9. '(
' → logprob: -19.87500762939453
    10. '([(' → logprob: -20.50000762939453

Token 486: 'eltas' (ID: 84139)
  Prédit: 'eltas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eltas' → logprob: -0.00037466554204002023
    2. 'tas' → logprob: -8.125374794006348
    3. 'lt' → logprob: -9.625374794006348
    4. 'elta' → logprob: -12.125374794006348
    5. 'l' → logprob: -12.500374794006348
    6. 'las' → logprob: -12.875374794006348
    7. 'elt' → logprob: -15.000374794006348
    8. 'atas' → logprob: -15.875374794006348
    9. 'd' → logprob: -16.37537384033203
    10. 't' → logprob: -16.75037384033203

Token 487: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2233183042553719e-05
    2. ' )' → logprob: -11.375012397766113
    3. '<|end|>' → logprob: -15.000012397766113
    4. ')
' → logprob: -15.250012397766113
    5. '   ' → logprob: -16.125011444091797
    6. ')}' → logprob: -17.750011444091797
    7. ')return' → logprob: -17.875011444091797
    8. '}' → logprob: -18.000011444091797
    9. ' ' → logprob: -18.125011444091797
    10. '),' → logprob: -18.500011444091797

Token 488: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7229552268981934
    2. '<|end|>' → logprob: -0.7229552268981934
    3. 'def' → logprob: -3.8479552268981934
    4. ' def' → logprob: -5.597955226898193
    5. '<|end|>' → logprob: -6.222955226898193
    6. '
' → logprob: -6.472955226898193
    7. '```' → logprob: -8.097955703735352
    8. ' ' → logprob: -8.847955703735352
    9. '    
' → logprob: -9.222955703735352
    10. '       ' → logprob: -9.222955703735352

Token 489: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2047191858291626
    2. 'def' (adapté à ' def') → logprob: -1.9547191858291626
    3. '<|end|>' → logprob: -3.329719066619873
    4. ' def' → logprob: -5.079719066619873
    5. '<|end|>' → logprob: -7.204719066619873
    6. '    
' → logprob: -8.329719543457031
    7. '
' → logprob: -8.829719543457031
    8. ' ' → logprob: -8.954719543457031
    9. '	def' → logprob: -9.579719543457031
    10. '```' → logprob: -9.829719543457031

Token 490: ' valid' (ID: 4529)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.9128291606903076
    2. ' possible' → logprob: -1.4128291606903076
    3. ' next' → logprob: -2.0378291606903076
    4. 'next' → logprob: -2.2878291606903076
    5. ' valid' → logprob: -3.6628291606903076
    6. 'valid' → logprob: -3.9128291606903076
    7. ' get' → logprob: -3.9128291606903076
    8. 'get' → logprob: -4.412829399108887
    9. 'can' → logprob: -4.912829399108887
    10. ' jump' → logprob: -5.287829399108887

Token 491: '_moves' (ID: 110706)
  Prédit: '_moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -1.139743685722351
    2. '_j' → logprob: -1.514743685722351
    3. '_jump' → logprob: -1.514743685722351
    4. '_' → logprob: -2.2647438049316406
    5. '_next' → logprob: -2.3897438049316406
    6. '_positions' → logprob: -3.2647438049316406
    7. '_move' → logprob: -5.389743804931641
    8. '_position' → logprob: -8.13974380493164
    9. '_mov' → logprob: -8.38974380493164
    10. '_choices' → logprob: -8.76474380493164

Token 492: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.602024900028482e-05
    2. '(' → logprob: -9.375085830688477
    3. ' (' → logprob: -15.000085830688477
    4. 'self' → logprob: -15.125085830688477
    5. '(s' → logprob: -15.250085830688477
    6. '(
' → logprob: -15.250085830688477
    7. '   ' → logprob: -16.875085830688477
    8. '(sel' → logprob: -17.000085830688477
    9. 'from' → logprob: -17.875085830688477
    10. '	self' → logprob: -18.125085830688477

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05259796604514122
    2. '(self' → logprob: -3.052597999572754
    3. ',self' → logprob: -6.427597999572754
    4. 'self' → logprob: -6.677597999572754
    5. ' ,' → logprob: -6.927597999572754
    6. ' self' → logprob: -9.177597999572754
    7. '	self' → logprob: -11.302597999572754
    8. ')' → logprob: -11.427597999572754
    9. '   ' → logprob: -12.427597999572754
    10. '<|end|>' → logprob: -12.677597999572754

Token 494: ' pos' (ID: 1253)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.39163753390312195
    2. ' self' → logprob: -1.1416375637054443
    3. 'pos' → logprob: -5.891637325286865
    4. ' pos' → logprob: -6.266637325286865
    5. 'position' → logprob: -10.391637802124023
    6. '       ' → logprob: -10.891637802124023
    7. '(self' → logprob: -11.141637802124023
    8. ' position' → logprob: -11.266637802124023
    9. ')' → logprob: -11.891637802124023
    10. '   ' → logprob: -12.516637802124023

Token 495: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006880069151520729
    2. '):
' → logprob: -5.006880283355713
    3. '   ' → logprob: -10.381879806518555
    4. ')' → logprob: -10.506879806518555
    5. '       ' → logprob: -10.506879806518555
    6. ' ):' → logprob: -10.506879806518555
    7. '):
' → logprob: -10.631879806518555
    8. ':' → logprob: -10.756879806518555
    9. ',' → logprob: -12.756879806518555
    10. '):

' → logprob: -13.131879806518555

Token 496: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.033361077308654785
    2. '       ' → logprob: -3.6583609580993652
    3. 'return' → logprob: -5.033360958099365
    4. '
' → logprob: -8.283361434936523
    5. ' 
' → logprob: -9.033361434936523
    6. ' for' → logprob: -9.658361434936523
    7. ' ' → logprob: -10.658361434936523
    8. '	return' → logprob: -10.783361434936523
    9. ' ' → logprob: -11.033361434936523
    10. '        
' → logprob: -12.283361434936523

Token 497: ' self' (ID: 1051)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.13917474448680878
    2. 'self' → logprob: -2.139174699783325
    3. ' list' → logprob: -4.514174938201904
    4. ' self' → logprob: -6.764174938201904
    5. '[self' → logprob: -9.889174461364746
    6. 'set' → logprob: -11.389174461364746
    7. 'next' → logprob: -14.139174461364746
    8. '[list' → logprob: -14.389174461364746
    9. '[' → logprob: -14.889174461364746
    10. '(self' → logprob: -14.889174461364746

Token 498: '.j' (ID: 1760)
  Prédit: '.j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.j' → logprob: -7.896309739408025e-07
    2. 'self' → logprob: -14.125000953674316
    3. ' .' → logprob: -17.5
    4. ' jumps' → logprob: -18.25
    5. 'j' → logprob: -18.625
    6. '.' → logprob: -19.125
    7. '   ' → logprob: -19.25
    8. ').' → logprob: -19.875
    9. '```' → logprob: -19.875
    10. '
' → logprob: -20.125

Token 499: 'umps' (ID: 14938)
  Prédit: 'umps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umps' → logprob: -2.9160102712921798e-05
    2. 'm' → logprob: -12.000029563903809
    3. ' jumps' → logprob: -12.125029563903809
    4. 'ump' → logprob: -12.375029563903809
    5. 'ust' → logprob: -12.750029563903809
    6. '(self' → logprob: -13.750029563903809
    7. '   ' → logprob: -13.750029563903809
    8. 's' → logprob: -13.750029563903809
    9. 'j' → logprob: -14.250029563903809
    10. 'ums' → logprob: -14.500029563903809

Token 500: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -3.762356209335849e-05
    2. 'next' → logprob: -10.37503719329834
    3. '.' → logprob: -12.25003719329834
    4. ' .' → logprob: -13.75003719329834
    5. ' next' → logprob: -15.50003719329834
    6. '	next' → logprob: -15.62503719329834
    7. '[next' → logprob: -16.625038146972656
    8. '_next' → logprob: -17.375038146972656
    9. '
' → logprob: -17.625038146972656
    10. '.moves' → logprob: -18.000038146972656

Token 501: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -5.512236498361744e-07
    2. '_pos' → logprob: -15.500000953674316
    3. '_position' → logprob: -16.25
    4. '_' → logprob: -16.5
    5. 'positions' → logprob: -17.375
    6. 'Positions' → logprob: -18.375
    7. ' _' → logprob: -19.0
    8. '_p' → logprob: -19.25
    9. '_moves' → logprob: -19.25
    10. '```' → logprob: -19.5

Token 502: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0005255113355815411
    2. '(' → logprob: -7.62552547454834
    3. ' (' → logprob: -10.50052547454834
    4. '(
' → logprob: -12.25052547454834
    5. '(position' → logprob: -14.00052547454834
    6. '(pop' → logprob: -14.12552547454834
    7. ',pos' → logprob: -14.37552547454834
    8. '(prev' → logprob: -14.50052547454834
    9. '(post' → logprob: -15.12552547454834
    10. '(p' → logprob: -15.12552547454834

Token 503: ')

' (ID: 1029)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3159618377685547
    2. ',pos' → logprob: -1.3159618377685547
    3. ')' → logprob: -6.065961837768555
    4. '(pos' → logprob: -8.690961837768555
    5. ' ,' → logprob: -9.065961837768555
    6. 'pos' → logprob: -9.690961837768555
    7. '[pos' → logprob: -11.190961837768555
    8. '   ' → logprob: -11.815961837768555
    9. ' pos' → logprob: -12.815961837768555
    10. ',p' → logprob: -12.940961837768555

Token 504: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 505: ' Survival' (ID: 97921)
  Prédit: 'Spr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Spr' → logprob: -0.9721971750259399
    2. 'P' → logprob: -1.72219717502594
    3. ' Spr' → logprob: -2.5971970558166504
    4. 'Water' → logprob: -2.7221970558166504
    5. ' P' → logprob: -3.2221970558166504
    6. 'B' → logprob: -3.9721970558166504
    7. ' Water' → logprob: -4.09719705581665
    8. 'Coverage' → logprob: -4.47219705581665
    9. ' Coverage' → logprob: -4.53469705581665
    10. 'Position' → logprob: -4.65969705581665

Token 506: 'Solver' (ID: 70484)
  Prédit: 'Model'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Model' → logprob: -0.24131469428539276
    2. 'Strategy' → logprob: -1.7413146495819092
    3. 'Probability' → logprob: -3.866314649581909
    4. 'Chance' → logprob: -5.241314888000488
    5. 'Time' → logprob: -5.866314888000488
    6. 'Analyzer' → logprob: -6.366314888000488
    7. 'Optimizer' → logprob: -6.366314888000488
    8. 'Game' → logprob: -6.991314888000488
    9. 'Analysis' → logprob: -7.366314888000488
    10. 'Agent' → logprob: -7.491314888000488

Token 507: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009791390039026737
    2. ':
' → logprob: -4.634791374206543
    3. '<|end|>' → logprob: -11.384791374206543
    4. ' :' → logprob: -11.634791374206543
    5. ':def' → logprob: -12.634791374206543
    6. '(object' → logprob: -13.134791374206543
    7. '():' → logprob: -13.134791374206543
    8. '(' → logprob: -13.384791374206543
    9. ':

' → logprob: -13.759791374206543
    10. '():
' → logprob: -13.884791374206543

Token 508: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030296508222818375
    2. ' def' → logprob: -3.530296564102173
    3. 'def' → logprob: -7.530296325683594
    4. '```' → logprob: -13.155296325683594
    5. '	def' → logprob: -13.405296325683594
    6. 'import' → logprob: -13.780296325683594
    7. ' class' → logprob: -13.780296325683594
    8. '   ' → logprob: -14.280296325683594
    9. '    ' → logprob: -14.530296325683594
    10. 'class' → logprob: -14.530296325683594

Token 509: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.014181484468281269
    2. 'def' (adapté à ' def') → logprob: -4.264181613922119
    3. '   ' → logprob: -11.264181137084961
    4. 'class' → logprob: -12.639181137084961
    5. ' class' → logprob: -14.514181137084961
    6. ':' → logprob: -14.764181137084961
    7. 'import' → logprob: -15.389181137084961
    8. '__' → logprob: -15.389181137084961
    9. ' __' → logprob: -15.639181137084961
    10. '	def' → logprob: -15.764181137084961

Token 510: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0030992848332971334
    2. ' def' → logprob: -6.00309944152832
    3. '__' → logprob: -7.50309944152832
    4. ' ' → logprob: -10.37809944152832
    5. 'def' → logprob: -11.12809944152832
    6. ' ' → logprob: -11.50309944152832
    7. '_init' → logprob: -12.00309944152832
    8. ' init' → logprob: -12.25309944152832
    9. 'init' → logprob: -13.50309944152832
    10. ' ___' → logprob: -13.87809944152832

Token 511: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. '(init' → logprob: -17.375
    3. 'def' → logprob: -17.625
    4. ' init' → logprob: -18.125
    5. '_init' → logprob: -19.5
    6. 'call' → logprob: -19.625
    7. 'new' → logprob: -19.625
    8. 'int' → logprob: -19.75
    9. '	init' → logprob: -20.25
    10. 'in' → logprob: -20.5

Token 512: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.005994801409542561
    2. '(self' → logprob: -5.25599479675293
    3. '__' → logprob: -8.00599479675293
    4. '__(
' → logprob: -8.50599479675293
    5. '(' → logprob: -9.25599479675293
    6. ' (' → logprob: -9.88099479675293
    7. '_(' → logprob: -10.00599479675293
    8. '__((' → logprob: -11.75599479675293
    9. '<>(' → logprob: -11.75599479675293
    10. ')(' → logprob: -12.13099479675293

Token 513: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00027813989436253905
    2. ')' → logprob: -9.00027847290039
    3. ' self' → logprob: -9.37527847290039
    4. '
' → logprob: -10.12527847290039
    5. '):
' → logprob: -11.25027847290039
    6. '   ' → logprob: -11.75027847290039
    7. ',' → logprob: -12.50027847290039
    8. '0' → logprob: -13.00027847290039
    9. '(self' → logprob: -14.25027847290039
    10. '       ' → logprob: -15.00027847290039

Token 514: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037490393151529133
    2. '):
' → logprob: -8.500374794006348
    3. '):' → logprob: -9.500374794006348
    4. 'self' → logprob: -9.875374794006348
    5. ',
' → logprob: -10.875374794006348
    6. ' ,' → logprob: -11.125374794006348
    7. ',self' → logprob: -12.375374794006348
    8. '
' → logprob: -13.000374794006348
    9. '(self' → logprob: -13.250374794006348
    10. '   ' → logprob: -14.125374794006348

Token 515: ' initial' (ID: 4871)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -1.581540822982788
    2. 'spr' → logprob: -1.706540822982788
    3. 'start' → logprob: -2.081540822982788
    4. 'initial' → logprob: -2.331540822982788
    5. ' sprink' → logprob: -2.831540822982788
    6. ' initial' → logprob: -2.956540822982788
    7. ' grid' → logprob: -3.081540822982788
    8. 'max' → logprob: -3.206540822982788
    9. ' sprinkler' → logprob: -3.331540822982788
    10. ' start' → logprob: -3.456540822982788

Token 516: '_pos' (ID: 14692)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.12112899869680405
    2. '_position' → logprob: -2.496129035949707
    3. '_s' → logprob: -3.871129035949707
    4. '_pos' → logprob: -4.746129035949707
    5. '_state' → logprob: -7.621129035949707
    6. '_' → logprob: -7.621129035949707
    7. ',' → logprob: -8.371129035949707
    8. 'positions' → logprob: -8.621129035949707
    9. '_alive' → logprob: -9.746129035949707
    10. '_sur' → logprob: -9.996129035949707

Token 517: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11037500947713852
    2. ',' → logprob: -2.735374927520752
    3. '):' → logprob: -3.235374927520752
    4. '):
' → logprob: -8.98537540435791
    5. ' :' → logprob: -9.73537540435791
    6. ')' → logprob: -10.23537540435791
    7. ' ):' → logprob: -10.86037540435791
    8. '<|end|>' → logprob: -11.11037540435791
    9. ' ,' → logprob: -12.11037540435791
    10. '=' → logprob: -12.23537540435791

Token 518: 'Position' (ID: 5647)
  Prédit: 'Position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Position' → logprob: -0.0002646735229063779
    2. ' Position' → logprob: -8.250265121459961
    3. 'position' → logprob: -13.375265121459961
    4. ')' → logprob: -14.250265121459961
    5. '_position' → logprob: -15.375265121459961
    6. '_Position' → logprob: -15.625265121459961
    7. '(Position' → logprob: -15.750265121459961
    8. 'Initial' → logprob: -16.00026512145996
    9. '<|end|>' → logprob: -16.25026512145996
    10. 'Pos' → logprob: -16.50026512145996

Token 519: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034969616681337357
    2. '):' → logprob: -5.753497123718262
    3. '):
' → logprob: -8.503497123718262
    4. ' ,' → logprob: -10.003497123718262
    5. '       ' → logprob: -10.253497123718262
    6. ',
' → logprob: -11.003497123718262
    7. '   ' → logprob: -11.628497123718262
    8. ')' → logprob: -12.378497123718262
    9. '<|end|>' → logprob: -13.378497123718262
    10. '),' → logprob: -13.753497123718262

Token 520: ' sprink' (ID: 80706)
  Prédit: ' sprink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sprink' → logprob: -0.7471771836280823
    2. 'spr' → logprob: -1.2471771240234375
    3. ' sprinkler' → logprob: -2.3721771240234375
    4. 'jump' → logprob: -3.3721771240234375
    5. 'sequence' → logprob: -3.7471771240234375
    6. 'max' → logprob: -4.2471771240234375
    7. ' sequence' → logprob: -4.3721771240234375
    8. ' jump' → logprob: -5.1221771240234375
    9. 's' → logprob: -5.1221771240234375
    10. 'coverage' → logprob: -5.8721771240234375

Token 521: 'lers' (ID: 15137)
  Prédit: 'lers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lers' → logprob: -0.0025009866803884506
    2. 'ler' → logprob: -6.002501010894775
    3. 'ers' → logprob: -11.002500534057617
    4. 'l' → logprob: -12.002500534057617
    5. '_l' → logprob: -15.252500534057617
    6. '_' → logprob: -15.252500534057617
    7. ' l' → logprob: -15.377500534057617
    8. 'er' → logprob: -15.502500534057617
    9. '   ' → logprob: -15.502500534057617
    10. '{' → logprob: -16.127500534057617

Token 522: '_positions' (ID: 93193)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.48291051387786865
    2. ',' → logprob: -1.3579105138778687
    3. ':' → logprob: -2.107910633087158
    4. '<|end|>' → logprob: -6.732910633087158
    5. '):
' → logprob: -6.857910633087158
    6. ')' → logprob: -7.357910633087158
    7. ' ):' → logprob: -7.982910633087158
    8. ':list' → logprob: -7.982910633087158
    9. ' ,' → logprob: -8.73291015625
    10. '):

' → logprob: -9.10791015625

Token 523: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10613756626844406
    2. ':' → logprob: -2.98113751411438
    3. '):
' → logprob: -3.10613751411438
    4. ' ):' → logprob: -6.481137752532959
    5. '):

' → logprob: -6.731137752532959
    6. ':list' → logprob: -6.981137752532959
    7. ')' → logprob: -7.856137752532959
    8. '=[]' → logprob: -7.981137752532959
    9. '<|end|>' → logprob: -8.3561372756958
    10. ',' → logprob: -8.6061372756958

Token 524: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04398883506655693
    2. ':' → logprob: -3.6689889430999756
    3. ',' → logprob: -4.1689887046813965
    4. '):
' → logprob: -6.5439887046813965
    5. '[' → logprob: -9.043989181518555
    6. '   ' → logprob: -9.168989181518555
    7. ':
' → logprob: -9.168989181518555
    8. '=' → logprob: -9.543989181518555
    9. '):' → logprob: -10.293989181518555
    10. ' :' → logprob: -10.543989181518555

Token 525: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4886433780193329
    2. ' self' → logprob: -0.9886434078216553
    3. '       ' → logprob: -4.238643169403076
    4. ' ' → logprob: -11.488643646240234
    5. 'from' → logprob: -11.738643646240234
    6. '   ' → logprob: -12.113643646240234
    7. '	self' → logprob: -12.363643646240234
    8. ' from' → logprob: -13.238643646240234
    9. 'import' → logprob: -14.488643646240234
    10. 'super' → logprob: -14.613643646240234

Token 526: '.initial' (ID: 58290)
  Prédit: '.initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.initial' → logprob: -0.0038193145301193
    2. '.pos' → logprob: -5.628819465637207
    3. '.current' → logprob: -9.503819465637207
    4. 'initial' → logprob: -9.878819465637207
    5. '.' → logprob: -10.128819465637207
    6. '.positions' → logprob: -10.753819465637207
    7. '.s' → logprob: -11.253819465637207
    8. 'pos' → logprob: -11.628819465637207
    9. '.position' → logprob: -12.628819465637207
    10. ' .' → logprob: -13.753819465637207

Token 527: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00017565040616318583
    2. '_position' → logprob: -8.875175476074219
    3. '_' → logprob: -11.250175476074219
    4. '_positions' → logprob: -11.875175476074219
    5. ' _' → logprob: -12.500175476074219
    6. '=' → logprob: -12.875175476074219
    7. '=_' → logprob: -12.875175476074219
    8. ' =' → logprob: -13.125175476074219
    9. 'Pos' → logprob: -13.750175476074219
    10. '._' → logprob: -14.000175476074219

Token 528: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932411193847656
    2. ' =' → logprob: -0.6932411193847656
    3. ',' → logprob: -9.318241119384766
    4. ':' → logprob: -13.443241119384766
    5. ')' → logprob: -14.068241119384766
    6. ' ' → logprob: -14.193241119384766
    7. '=self' → logprob: -14.693241119384766
    8. ' ,' → logprob: -15.693241119384766
    9. '<|end|>' → logprob: -16.068241119384766
    10. '=
' → logprob: -16.193241119384766

Token 529: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.05488893762230873
    2. ' initial' → logprob: -2.929888963699341
    3. '	initial' → logprob: -12.929888725280762
    4. 'Initial' → logprob: -13.054888725280762
    5. '(initial' → logprob: -13.804888725280762
    6. 'Position' → logprob: -14.679888725280762
    7. '.initial' → logprob: -16.054889678955078
    8. ' ' → logprob: -16.179889678955078
    9. '   ' → logprob: -16.179889678955078
    10. ' inicial' → logprob: -16.429889678955078

Token 530: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -4.842555426876061e-06
    2. 'Pos' → logprob: -12.375004768371582
    3. '_' → logprob: -15.500004768371582
    4. 'pos' → logprob: -16.0000057220459
    5. '_Pos' → logprob: -16.3750057220459
    6. '_position' → logprob: -18.0000057220459
    7. ' _' → logprob: -18.0000057220459
    8. '_val' → logprob: -18.6250057220459
    9. '_p' → logprob: -18.8750057220459
    10. '_POS' → logprob: -19.0000057220459

Token 531: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023119196703191847
    2. '
' → logprob: -9.50023078918457
    3. 'self' → logprob: -9.62523078918457
    4. ' self' → logprob: -10.00023078918457
    5. ',' → logprob: -10.37523078918457
    6. '<|end|>' → logprob: -11.50023078918457
    7. '   ' → logprob: -13.75023078918457
    8. ',
' → logprob: -14.37523078918457
    9. '        
' → logprob: -15.00023078918457
    10. ' ,' → logprob: -15.50023078918457

Token 532: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011975488450843841
    2. 'self' → logprob: -9.375120162963867
    3. ' self' → logprob: -10.375120162963867
    4. '   ' → logprob: -12.750120162963867
    5. ',' → logprob: -14.625120162963867
    6. '<|end|>' → logprob: -15.375120162963867
    7. '
' → logprob: -17.000120162963867
    8. '      ' → logprob: -17.750120162963867
    9. '           ' → logprob: -17.875120162963867
    10. 'import' → logprob: -18.125120162963867

Token 533: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -2.2842308680992573e-05
    2. '       ' → logprob: -11.000022888183594
    3. ' self' → logprob: -12.250022888183594
    4. 'spr' → logprob: -13.875022888183594
    5. 's' → logprob: -16.500022888183594
    6. '   ' → logprob: -16.750022888183594
    7. '        
' → logprob: -17.125022888183594
    8. '
' → logprob: -17.500022888183594
    9. 'from' → logprob: -17.625022888183594
    10. '#' → logprob: -17.750022888183594

Token 534: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.015509857796132565
    2. 'spr' → logprob: -4.265510082244873
    3. 's' → logprob: -6.640510082244873
    4. 'positions' → logprob: -11.640509605407715
    5. '.positions' → logprob: -11.640509605407715
    6. '.initial' → logprob: -12.390509605407715
    7. '_s' → logprob: -13.015509605407715
    8. '.' → logprob: -13.640509605407715
    9. '.cover' → logprob: -13.640509605407715
    10. '.sp' → logprob: -13.765509605407715

Token 535: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -2.6656825866666622e-05
    2. '```' → logprob: -12.00002670288086
    3. 'rink' → logprob: -12.00002670288086
    4. 'positions' → logprob: -13.12502670288086
    5. '_pr' → logprob: -13.37502670288086
    6. '``' → logprob: -13.75002670288086
    7. 'initial' → logprob: -14.12502670288086
    8. 'spr' → logprob: -14.37502670288086
    9. ' sprink' → logprob: -14.50002670288086
    10. 'ink' → logprob: -14.50002670288086

Token 536: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.015455269254744053
    2. 'rink' → logprob: -4.51545524597168
    3. 'r' → logprob: -6.26545524597168
    4. 'inkl' → logprob: -7.14045524597168
    5. 'inkles' → logprob: -8.14045524597168
    6. '```' → logprob: -8.14045524597168
    7. 'rin' → logprob: -8.64045524597168
    8. '#' → logprob: -8.64045524597168
    9. 'link' → logprob: -9.26545524597168
    10. 'pr' → logprob: -9.89045524597168

Token 537: 'ler' (ID: 1639)
  Prédit: 'lers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lers' → logprob: -5.478889215737581e-05
    2. 'ler' → logprob: -10.125054359436035
    3. 'l' → logprob: -11.500054359436035
    4. 'kl' → logprob: -13.375054359436035
    5. 'ers' → logprob: -13.500054359436035
    6. 'layers' → logprob: -14.375054359436035
    7. 'kers' → logprob: -14.375054359436035
    8. 'k' → logprob: -15.750054359436035
    9. 'ink' → logprob: -17.12505531311035
    10. '```' → logprob: -17.12505531311035

Token 538: '_seq' (ID: 34260)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014172914437949657
    2. '_positions' → logprob: -4.2641730308532715
    3. '_s' → logprob: -11.764172554016113
    4. 'positions' → logprob: -14.139172554016113
    5. '_pos' → logprob: -14.764172554016113
    6. 'Positions' → logprob: -15.764172554016113
    7. ' s' → logprob: -17.01417350769043
    8. 'es' → logprob: -17.01417350769043
    9. '_locations' → logprob: -17.13917350769043
    10. '_' → logprob: -17.26417350769043

Token 539: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.25495895743370056
    2. 's' → logprob: -1.504958987236023
    3. '_positions' → logprob: -6.7549591064453125
    4. 'ues' → logprob: -7.3799591064453125
    5. 'uent' → logprob: -8.129959106445312
    6. '=' → logprob: -8.629959106445312
    7. ' =' → logprob: -8.629959106445312
    8. 'positions' → logprob: -8.879959106445312
    9. 'uen' → logprob: -9.004959106445312
    10. 'ences' → logprob: -9.129959106445312

Token 540: ' Spr' (ID: 16635)
  Prédit: 'Spr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Spr' → logprob: -0.008731221780180931
    2. ' Spr' → logprob: -4.758731365203857
    3. '[' → logprob: -9.1337308883667
    4. '[S' → logprob: -12.1337308883667
    5. ' [' → logprob: -13.3837308883667
    6. '   ' → logprob: -15.3837308883667
    7. 'Spl' → logprob: -15.6337308883667
    8. 'Sp' → logprob: -15.7587308883667
    9. 'Sprite' → logprob: -15.8837308883667
    10. '	S' → logprob: -15.8837308883667

Token 541: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -1.4140441635390744e-05
    2. 'inkl' → logprob: -12.625014305114746
    3. 'link' → logprob: -13.000014305114746
    4. 'inker' → logprob: -13.500014305114746
    5. '\' → logprob: -13.875014305114746
    6. 'inkle' → logprob: -14.000014305114746
    7. 'k' → logprob: -14.000014305114746
    8. 'nk' → logprob: -14.125014305114746
    9. '(' → logprob: -14.250014305114746
    10. 'inkles' → logprob: -14.500014305114746

Token 542: 'ler' (ID: 1639)
  Prédit: 'ler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ler' → logprob: -0.008760163560509682
    2. 'k' → logprob: -4.75875997543335
    3. 'lers' → logprob: -9.008760452270508
    4. 'ker' → logprob: -11.008760452270508
    5. 'kl' → logprob: -13.508760452270508
    6. 'l' → logprob: -13.508760452270508
    7. 'g' → logprob: -13.758760452270508
    8. 'er' → logprob: -14.258760452270508
    9. 'лер' → logprob: -14.883760452270508
    10. 'cler' → logprob: -15.133760452270508

Token 543: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: 0.0
    2. 'sequence' → logprob: -17.25
    3. '_sequence' → logprob: -18.5
    4. ' Sequence' → logprob: -18.75
    5. '[' → logprob: -19.125
    6. 'Sequ' → logprob: -19.5
    7. 'Set' → logprob: -19.875
    8. ' sequence' → logprob: -20.125
    9. 's' → logprob: -20.25
    10. 'Seq' → logprob: -20.5

Token 544: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0023898023646324873
    2. '[S' → logprob: -6.627389907836914
    3. '[' → logprob: -7.127389907836914
    4. '(S' → logprob: -9.002389907836914
    5. '(
' → logprob: -9.627389907836914
    6. '([
' → logprob: -10.002389907836914
    7. '[
' → logprob: -11.002389907836914
    8. '[s' → logprob: -12.627389907836914
    9. '({' → logprob: -13.377389907836914
    10. '(' → logprob: -13.502389907836914

Token 545: 'Spr' (ID: 51988)
  Prédit: 'Spr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Spr' → logprob: -7.896309739408025e-07
    2. ' Spr' → logprob: -14.250000953674316
    3. '   ' → logprob: -18.5
    4. 'spr' → logprob: -18.625
    5. 'Sp' → logprob: -19.0
    6. '       ' → logprob: -19.625
    7. 'Spring' → logprob: -20.0
    8. '
' → logprob: -20.375
    9. 'Spl' → logprob: -20.625
    10. '           ' → logprob: -21.25

Token 546: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -1.7954958821064793e-05
    2. 'nk' → logprob: -11.625018119812012
    3. 'k' → logprob: -12.375018119812012
    4. 'inker' → logprob: -13.750018119812012
    5. 'inkl' → logprob: -14.000018119812012
    6. 'inkle' → logprob: -15.000018119812012
    7. 'Ink' → logprob: -15.000018119812012
    8. 'link' → logprob: -15.125018119812012
    9. 'ank' → logprob: -15.125018119812012
    10. '(' → logprob: -15.500018119812012

Token 547: 'ler' (ID: 1639)
  Prédit: 'ler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ler' → logprob: -3.650518920039758e-06
    2. 'lers' → logprob: -13.125003814697266
    3. 'er' → logprob: -14.625003814697266
    4. 'k' → logprob: -15.125003814697266
    5. 'лер' → logprob: -15.125003814697266
    6. 'pler' → logprob: -16.500003814697266
    7. '(' → logprob: -16.500003814697266
    8. 'hler' → logprob: -16.500003814697266
    9. 'lerin' → logprob: -16.750003814697266
    10. '{' → logprob: -17.000003814697266

Token 548: '(Position' (ID: 142944)
  Prédit: '(Position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Position' → logprob: -0.003370319725945592
    2. '(pos' → logprob: -5.75337028503418
    3. 'Position' → logprob: -9.25337028503418
    4. '(Pos' → logprob: -9.87837028503418
    5. 'pos' → logprob: -10.50337028503418
    6. 'Pos' → logprob: -11.25337028503418
    7. '(p' → logprob: -12.75337028503418
    8. '(' → logprob: -15.00337028503418
    9. '(position' → logprob: -15.50337028503418
    10. '           ' → logprob: -15.50337028503418

Token 549: '(x' (ID: 4061)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.22855499386787415
    2. '(x' → logprob: -2.4785549640655518
    3. '(sp' → logprob: -2.7285549640655518
    4. '(pos' → logprob: -3.2285549640655518
    5. 'p' → logprob: -4.853555202484131
    6. '(*' → logprob: -6.228555202484131
    7. 'pos' → logprob: -6.228555202484131
    8. '(s' → logprob: -6.603555202484131
    9. '(px' → logprob: -6.728555202484131
    10. 'sp' → logprob: -7.103555202484131

Token 550: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07729331403970718
    2. '(x' → logprob: -3.5772933959960938
    3. ',x' → logprob: -3.5772933959960938
    4. 'x' → logprob: -4.577293395996094
    5. ',y' → logprob: -5.827293395996094
    6. ',p' → logprob: -6.077293395996094
    7. ' ,' → logprob: -6.452293395996094
    8. ',pos' → logprob: -7.702293395996094
    9. '(px' → logprob: -8.702293395996094
    10. '(p' → logprob: -8.827293395996094

Token 551: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.016059592366218567
    2. ')' → logprob: -4.141059398651123
    3. ' ))' → logprob: -11.391059875488281
    4. '(x' → logprob: -11.891059875488281
    5. ')))' → logprob: -13.266059875488281
    6. '   ' → logprob: -13.516059875488281
    7. '))
' → logprob: -13.516059875488281
    8. ' )' → logprob: -13.641059875488281
    9. '(p' → logprob: -14.641059875488281
    10. '(pos' → logprob: -15.266059875488281

Token 552: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06464613229036331
    2. 'for' → logprob: -2.8146462440490723
    3. '(x' → logprob: -6.314646244049072
    4. ' (' → logprob: -8.314645767211914
    5. '(p' → logprob: -8.814645767211914
    6. ')' → logprob: -8.814645767211914
    7. '(pos' → logprob: -9.189645767211914
    8. '(' → logprob: -9.439645767211914
    9. '   ' → logprob: -10.064645767211914
    10. '           ' → logprob: -10.064645767211914

Token 553: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.13940425217151642
    2. ' (' → logprob: -2.514404296875
    3. 'x' → logprob: -3.139404296875
    4. ' x' → logprob: -5.139404296875
    5. '(' → logprob: -11.014404296875
    6. ' ' → logprob: -11.389404296875
    7. '   ' → logprob: -12.639404296875
    8. '(s' → logprob: -12.639404296875
    9. 'xy' → logprob: -13.264404296875
    10. '  ' → logprob: -13.389404296875

Token 554: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4777151644229889
    2. ',y' → logprob: -0.9777151346206665
    3. 'in' → logprob: -6.602715015411377
    4. ' in' → logprob: -7.102715015411377
    5. ' ,' → logprob: -7.227715015411377
    6. ',x' → logprob: -7.852715015411377
    7. ',user' → logprob: -9.352715492248535
    8. ',s' → logprob: -9.602715492248535
    9. ',in' → logprob: -9.977715492248535
    10. ',
' → logprob: -10.227715492248535

Token 555: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005939701572060585
    2. 'in' → logprob: -5.130939483642578
    3. 's' → logprob: -11.630939483642578
    4. ' ' → logprob: -14.755939483642578
    5. ' 
' → logprob: -14.755939483642578
    6. 'spr' → logprob: -15.255939483642578
    7. ')' → logprob: -15.380939483642578
    8. '    ' → logprob: -15.505939483642578
    9. '
' → logprob: -15.755939483642578
    10. '   ' → logprob: -16.130939483642578

Token 556: ' sprink' (ID: 80706)
  Prédit: 'spr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spr' → logprob: -0.08946849405765533
    2. ' sprink' → logprob: -2.464468479156494
    3. 's' → logprob: -7.589468479156494
    4. ' sprinkler' → logprob: -11.214468955993652
    5. 'spring' → logprob: -12.714468955993652
    6. ' sprinkled' → logprob: -13.589468955993652
    7. 'spl' → logprob: -14.089468955993652
    8. 'spar' → logprob: -14.339468955993652
    9. 'sprites' → logprob: -14.714468955993652
    10. 'Spr' → logprob: -14.964468955993652

Token 557: 'lers' (ID: 15137)
  Prédit: 'lers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lers' → logprob: -0.026654738932847977
    2. 'l' → logprob: -4.4016547203063965
    3. 'kl' → logprob: -4.6516547203063965
    4. 'ler' → logprob: -6.0266547203063965
    5. 'alers' → logprob: -7.6516547203063965
    6. 'ulers' → logprob: -7.6516547203063965
    7. 'akers' → logprob: -7.7766547203063965
    8. 'kers' → logprob: -8.151655197143555
    9. 'k' → logprob: -8.901655197143555
    10. 'arkers' → logprob: -10.026655197143555

Token 558: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.0003364158037584275
    2. 's' → logprob: -8.625336647033691
    3. 'positions' → logprob: -9.375336647033691
    4. '_s' → logprob: -10.375336647033691
    5. ')]' → logprob: -11.250336647033691
    6. ')' → logprob: -11.875336647033691
    7. '_sequences' → logprob: -11.875336647033691
    8. ')_' → logprob: -12.750336647033691
    9. ')])' → logprob: -12.875336647033691
    10. ' _' → logprob: -13.750336647033691

Token 559: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -4.334533878136426e-05
    2. '])
' → logprob: -11.000042915344238
    3. '       ' → logprob: -11.125042915344238
    4. ' ])' → logprob: -11.875042915344238
    5. ')])' → logprob: -12.875042915344238
    6. '])]' → logprob: -13.750042915344238
    7. '   ' → logprob: -14.750042915344238
    8. ']))' → logprob: -15.125042915344238
    9. ')' → logprob: -15.625042915344238
    10. ']' → logprob: -16.250043869018555

Token 560: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020761314779520035
    2. '       ' → logprob: -3.895761251449585
    3. 'def' → logprob: -9.520761489868164
    4. '<|end|>' → logprob: -9.520761489868164
    5. '
' → logprob: -9.895761489868164
    6. ' def' → logprob: -11.020761489868164
    7. '```' → logprob: -13.270761489868164
    8. '    
' → logprob: -14.145761489868164
    9. '<|end|>' → logprob: -14.145761489868164
    10. ',' → logprob: -14.520761489868164

Token 561: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13466055691242218
    2. 'def' → logprob: -2.259660482406616
    3. 'self' (adapté à ' self') → logprob: -4.259660720825195
    4. '   ' → logprob: -5.384660720825195
    5. ' self' → logprob: -6.384660720825195
    6. ' def' → logprob: -7.134660720825195
    7. '
' → logprob: -8.384660720825195
    8. 'from' → logprob: -9.509660720825195
    9. '<|end|>' → logprob: -10.009660720825195
    10. 'import' → logprob: -11.134660720825195

Token 562: '.m' (ID: 1021)
  Prédit: '.current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.8155864477157593
    2. '.time' → logprob: -1.8155864477157593
    3. '.vis' → logprob: -2.440586566925049
    4. '.s' → logprob: -2.940586566925049
    5. '.max' → logprob: -2.940586566925049
    6. '.steps' → logprob: -3.190586566925049
    7. '.positions' → logprob: -3.315586566925049
    8. '.initial' → logprob: -3.815586566925049
    9. '.remaining' → logprob: -4.315586566925049
    10. '.num' → logprob: -4.690586566925049

Token 563: 'ovement' (ID: 75257)
  Prédit: 'ovement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ovement' → logprob: -0.24180223047733307
    2. 'odel' → logprob: -1.6168022155761719
    3. 'ov' → logprob: -4.241802215576172
    4. 'ove' → logprob: -7.241802215576172
    5. 'model' → logprob: -7.491802215576172
    6. 'over' → logprob: -8.866802215576172
    7. 'oven' → logprob: -8.991802215576172
    8. 'oves' → logprob: -9.491802215576172
    9. '_model' → logprob: -9.616802215576172
    10. 'movement' → logprob: -10.116802215576172

Token 564: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -0.2728428840637207
    2. ' =' → logprob: -1.5228428840637207
    3. '=' → logprob: -4.147842884063721
    4. 'Model' → logprob: -5.647842884063721
    5. 'model' → logprob: -6.647842884063721
    6. '=model' → logprob: -10.022842407226562
    7. '_' → logprob: -11.522842407226562
    8. ' model' → logprob: -11.522842407226562
    9. '_Model' → logprob: -12.522842407226562
    10. '=_' → logprob: -13.272842407226562

Token 565: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132616877555847
    2. ' =' → logprob: -1.3132617473602295
    3. ' ' → logprob: -17.063261032104492
    4. '=P' → logprob: -17.563261032104492
    5. ' =
' → logprob: -18.188261032104492
    6. '=

' → logprob: -18.313261032104492
    7. '=
' → logprob: -18.563261032104492
    8. ',' → logprob: -19.063261032104492
    9. '＝' → logprob: -19.688261032104492
    10. '  ' → logprob: -20.063261032104492

Token 566: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.009757505729794502
    2. ' P' → logprob: -4.6347575187683105
    3. '	P' → logprob: -14.134757041931152
    4. '   ' → logprob: -14.759757041931152
    5. ' ' → logprob: -15.509757041931152
    6. 'Py' → logprob: -16.63475799560547
    7. '\P' → logprob: -16.75975799560547
    8. '_P' → logprob: -17.63475799560547
    9. ' Py' → logprob: -17.88475799560547
    10. '       ' → logprob: -17.88475799560547

Token 567: 'yon' (ID: 10033)
  Prédit: 'yon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yon' → logprob: -0.00030721822986379266
    2. 'y' → logprob: -8.750307083129883
    3. ' yon' → logprob: -9.750307083129883
    4. 'yo' → logprob: -10.375307083129883
    5. 'yoni' → logprob: -10.875307083129883
    6. 'onk' → logprob: -11.250307083129883
    7. 'yk' → logprob: -11.375307083129883
    8. '```' → logprob: -12.250307083129883
    9. 'yond' → logprob: -12.375307083129883
    10. 'ython' → logprob: -13.250307083129883

Token 568: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.2729995988775045e-06
    2. 'kich' → logprob: -12.000006675720215
    3. 'ki' → logprob: -18.1250057220459
    4. 'ichi' → logprob: -18.5000057220459
    5. '```' → logprob: -18.6250057220459
    6. 'к' → logprob: -18.7500057220459
    7. '...' → logprob: -18.8750057220459
    8. '

' → logprob: -19.0000057220459
    9. 'kish' → logprob: -19.0000057220459
    10. '
' → logprob: -19.1250057220459

Token 569: 'ichi' (ID: 44252)
  Prédit: 'ichi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichi' → logprob: -0.07313282787799835
    2. 'k' → logprob: -3.1981327533721924
    3. 'ich' → logprob: -4.3231329917907715
    4. 'kich' → logprob: -4.8231329917907715
    5. 'chi' → logprob: -4.9481329917907715
    6. 'ic' → logprob: -7.9481329917907715
    7. 'c' → logprob: -8.073132514953613
    8. 'uchi' → logprob: -9.198132514953613
    9. ' ichi' → logprob: -9.323132514953613
    10. 'ch' → logprob: -9.948132514953613

Token 570: 'Movement' (ID: 42868)
  Prédit: 'Movement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Movement' → logprob: -5.512236498361744e-07
    2. 'movement' → logprob: -15.375000953674316
    3. 'Mov' → logprob: -16.25
    4. ' Movement' → logprob: -16.375
    5. 'Model' → logprob: -17.125
    6. ' movement' → logprob: -18.125
    7. 'Jump' → logprob: -18.25
    8. 'Move' → logprob: -18.5
    9. 'ovement' → logprob: -18.75
    10. '
' → logprob: -19.125

Token 571: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -1.5048530030981055e-06
    2. 'model' → logprob: -13.500001907348633
    3. ' Model' → logprob: -17.750001907348633
    4. '	Model' → logprob: -18.625001907348633
    5. '_model' → logprob: -18.750001907348633
    6. ' model' → logprob: -19.625001907348633
    7. '_Model' → logprob: -19.750001907348633
    8. 'MODEL' → logprob: -20.125001907348633
    9. '   ' → logprob: -20.250001907348633
    10. 'Mode' → logprob: -20.750001907348633

Token 572: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10942454636096954
    2. '
' → logprob: -2.359424591064453
    3. '<|end|>' → logprob: -4.859424591064453
    4. '       ' → logprob: -7.359424591064453
    5. '    
' → logprob: -7.609424591064453
    6. '<|end|>' → logprob: -8.859424591064453
    7. 'def' → logprob: -9.734424591064453
    8. ' def' → logprob: -10.484424591064453
    9. ',' → logprob: -11.109424591064453
    10. '        
' → logprob: -11.609424591064453

Token 573: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016642312984913588
    2. '
' → logprob: -7.001664161682129
    3. '<|end|>' → logprob: -8.376664161682129
    4. 'def' → logprob: -8.501664161682129
    5. ' def' → logprob: -8.876664161682129
    6. '    
' → logprob: -9.126664161682129
    7. '       ' → logprob: -10.126664161682129
    8. '<|end|>' → logprob: -11.626664161682129
    9. '        
' → logprob: -11.751664161682129
    10. ' ' → logprob: -12.376664161682129

Token 574: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019672619178891182
    2. 'self' (adapté à ' self') → logprob: -4.269672393798828
    3. '   ' → logprob: -5.894672393798828
    4. '       ' → logprob: -6.269672393798828
    5. ' def' → logprob: -7.269672393798828
    6. ' self' → logprob: -9.644672393798828
    7. '
' → logprob: -10.144672393798828
    8. '<|end|>' → logprob: -11.019672393798828
    9. 'from' → logprob: -11.644672393798828
    10. 'import' → logprob: -11.894672393798828

Token 575: '.cache' (ID: 37175)
  Prédit: '.current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.current' → logprob: -1.0051555633544922
    2. '.vis' → logprob: -1.2551555633544922
    3. '.max' → logprob: -2.255155563354492
    4. '.time' → logprob: -2.880155563354492
    5. '.safe' → logprob: -3.630155563354492
    6. '.' → logprob: -3.630155563354492
    7. '.s' → logprob: -4.005155563354492
    8. 'visited' → logprob: -4.130155563354492
    9. '.positions' → logprob: -4.255155563354492
    10. '.pos' → logprob: -4.380155563354492

Token 576: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08922287821769714
    2. '=' → logprob: -2.4642229080200195
    3. '={}' → logprob: -8.21422290802002
    4. '={' → logprob: -12.58922290802002
    5. ':' → logprob: -13.08922290802002
    6. ' ={' → logprob: -13.21422290802002
    7. ' ' → logprob: -13.46422290802002
    8. '	' → logprob: -13.96422290802002
    9. '={}
' → logprob: -14.46422290802002
    10. '  ' → logprob: -14.58922290802002

Token 577: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.00016766376211307943
    2. 'set' → logprob: -9.250167846679688
    3. 'dict' → logprob: -10.250167846679688
    4. ' {}' → logprob: -10.250167846679688
    5. ' set' → logprob: -14.750167846679688
    6. '{}
' → logprob: -15.500167846679688
    7. ' dict' → logprob: -15.750167846679688
    8. '={}' → logprob: -16.250167846679688
    9. '{},' → logprob: -17.625167846679688
    10. '   ' → logprob: -18.000167846679688

Token 578: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012620178749784827
    2. 'def' → logprob: -7.001262187957764
    3. '
' → logprob: -9.126261711120605
    4. '<|end|>' → logprob: -9.251261711120605
    5. '    
' → logprob: -9.501261711120605
    6. ' def' → logprob: -9.751261711120605
    7. '<|end|>' → logprob: -11.751261711120605
    8. '        
' → logprob: -13.251261711120605
    9. '```' → logprob: -13.876261711120605
    10. '	def' → logprob: -14.126261711120605

Token 579: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.15507102012634277
    2. '   ' → logprob: -2.0300710201263428
    3. ' def' → logprob: -4.405071258544922
    4. '
' → logprob: -9.780071258544922
    5. '    
' → logprob: -10.280071258544922
    6. '<|end|>' → logprob: -12.280071258544922
    7. '	def' → logprob: -12.405071258544922
    8. '<|end|>' → logprob: -14.155071258544922
    9. '        
' → logprob: -14.280071258544922
    10. ' ' → logprob: -14.530071258544922

Token 580: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.3935249149799347
    2. ' can' → logprob: -1.5185248851776123
    3. 'max' → logprob: -3.1435248851776123
    4. 'solve' → logprob: -3.8935248851776123
    5. 'sur' → logprob: -4.143525123596191
    6. 'is' → logprob: -5.018525123596191
    7. 'dfs' → logprob: -5.518525123596191
    8. ' max' → logprob: -5.643525123596191
    9. ' is' → logprob: -5.893525123596191
    10. ' solve' → logprob: -6.393525123596191

Token 581: '_sur' (ID: 160451)
  Prédit: '_sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sur' → logprob: -0.002898666774854064
    2. '_st' → logprob: -6.377898693084717
    3. '_continue' → logprob: -7.127898693084717
    4. '_re' → logprob: -8.877898216247559
    5. '_' → logprob: -9.877898216247559
    6. 'sur' → logprob: -9.877898216247559
    7. '_keep' → logprob: -10.377898216247559
    8. '_save' → logprob: -10.502898216247559
    9. '_use' → logprob: -11.377898216247559
    10. '_move' → logprob: -11.377898216247559

Token 582: 'vive' (ID: 131935)
  Prédit: 'vive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vive' → logprob: -9.031157969729975e-05
    2. 'ive' → logprob: -9.500090599060059
    3. ' vive' → logprob: -11.625090599060059
    4. 'v' → logprob: -13.125090599060059
    5. '#' → logprob: -13.250090599060059
    6. 'vice' → logprob: -13.625090599060059
    7. 'rive' → logprob: -14.750090599060059
    8. '   ' → logprob: -15.125090599060059
    9. '
' → logprob: -16.125089645385742
    10. '_' → logprob: -16.125089645385742

Token 583: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.000763510703109e-05
    2. '(' → logprob: -10.375040054321289
    3. 'self' → logprob: -12.250040054321289
    4. '   ' → logprob: -13.250040054321289
    5. ' (' → logprob: -13.375040054321289
    6. '(
' → logprob: -15.250040054321289
    7. 'def' → logprob: -16.12504005432129
    8. '       ' → logprob: -16.37504005432129
    9. '	self' → logprob: -17.00004005432129
    10. ' ' → logprob: -17.00004005432129

Token 584: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010068230039905757
    2. 'self' → logprob: -9.375101089477539
    3. ' ,' → logprob: -11.750101089477539
    4. '(self' → logprob: -12.750101089477539
    5. ',self' → logprob: -13.250101089477539
    6. ',
' → logprob: -13.500101089477539
    7. '   ' → logprob: -13.875101089477539
    8. '       ' → logprob: -14.500101089477539
    9. '
' → logprob: -16.25010108947754
    10. ' self' → logprob: -17.12510108947754

Token 585: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017743845819495618
    2. '
' → logprob: -10.500177383422852
    3. '   ' → logprob: -10.750177383422852
    4. '```' → logprob: -10.750177383422852
    5. '<|end|>' → logprob: -11.000177383422852
    6. ',' → logprob: -11.000177383422852
    7. ' return' → logprob: -11.125177383422852
    8. '        
' → logprob: -11.500177383422852
    9. ' self' → logprob: -11.500177383422852
    10. ' def' → logprob: -11.875177383422852

Token 586: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8707577586174011
    2. 'def' → logprob: -1.120757818222046
    3. '       ' → logprob: -1.370757818222046
    4. ' return' → logprob: -6.745757579803467
    5. ' def' → logprob: -8.620758056640625
    6. 'visited' → logprob: -10.745758056640625
    7. 'from' → logprob: -11.245758056640625
    8. '   ' → logprob: -11.620758056640625
    9. 'start' → logprob: -12.495758056640625
    10. 'queue' → logprob: -12.745758056640625

Token 587: ' We' (ID: 1416)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1412474662065506
    2. 'return' → logprob: -2.141247510910034
    3. 'from' → logprob: -4.516247272491455
    4. '       ' → logprob: -6.516247272491455
    5. 'start' → logprob: -7.641247272491455
    6. ' def' → logprob: -7.766247272491455
    7. ' return' → logprob: -7.891247272491455
    8. 'import' → logprob: -8.516247749328613
    9. 'visited' → logprob: -9.266247749328613
    10. 'self' → logprob: -9.641247749328613

Token 588: ' assume' (ID: 19429)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0215867068618536
    2. '       ' → logprob: -4.396586894989014
    3. '   ' → logprob: -5.271586894989014
    4. ' def' → logprob: -6.271586894989014
    5. 'eturn' → logprob: -7.396586894989014
    6. 'return' → logprob: -7.646586894989014
    7. '    ' → logprob: -8.896586418151855
    8. 'define' → logprob: -9.271586418151855
    9. '```' → logprob: -9.271586418151855
    10. 'ef' → logprob: -9.521586418151855

Token 589: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1536487638950348
    2. 'self' → logprob: -2.028648853302002
    3. 'len' → logprob: -5.903648853302002
    4. '0' → logprob: -6.028648853302002
    5. ' def' → logprob: -6.278648853302002
    6. 'pos' → logprob: -6.528648853302002
    7. 'current' → logprob: -7.278648853302002
    8. 'True' → logprob: -7.278648853302002
    9. ' self' → logprob: -7.528648853302002
    10. '   ' → logprob: -9.153648376464844

Token 590: ' path' (ID: 3104)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016767168417572975
    2. ' def' → logprob: -5.2667670249938965
    3. 'max' → logprob: -5.3917670249938965
    4. 'self' → logprob: -6.8917670249938965
    5. 'depth' → logprob: -7.0167670249938965
    6. 't' → logprob: -7.1417670249938965
    7. 'from' → logprob: -7.7667670249938965
    8. '   ' → logprob: -7.8917670249938965
    9. 'time' → logprob: -8.016767501831055
    10. ')' → logprob: -8.266767501831055

Token 591: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.918472945690155
    2. '       ' → logprob: -1.4184730052947998
    3. '(self' → logprob: -1.5434730052947998
    4. '(' → logprob: -3.0434730052948
    5. ' def' → logprob: -3.2934730052948
    6. '<|end|>' → logprob: -4.168472766876221
    7. '   ' → logprob: -4.418472766876221
    8. ' (' → logprob: -4.793472766876221
    9. ',' → logprob: -5.543472766876221
    10. '(
' → logprob: -5.793472766876221

Token 592: ' p' (ID: 275)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.34213146567344666
    2. 'def' → logprob: -2.3421313762664795
    3. 'the' → logprob: -2.4671313762664795
    4. ' self' → logprob: -4.092131614685059
    5. 'idx' → logprob: -4.217131614685059
    6. '0' → logprob: -4.342131614685059
    7. 'pos' → logprob: -4.592131614685059
    8. 'time' → logprob: -4.717131614685059
    9. 'current' → logprob: -4.967131614685059
    10. 'a' → logprob: -5.217131614685059

Token 593: ' steps' (ID: 10331)
  Prédit: 'yon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yon' → logprob: -0.2733331322669983
    2. 'os' → logprob: -1.8983330726623535
    3. 'ython' → logprob: -3.3983330726623535
    4. 'self' → logprob: -4.2733330726623535
    5. 'y' → logprob: -4.2733330726623535
    6. 'def' → logprob: -5.6483330726623535
    7. '#' → logprob: -5.8983330726623535
    8. 'ylon' → logprob: -6.1483330726623535
    9. '0' → logprob: -6.3983330726623535
    10. 'yk' → logprob: -6.5233330726623535

Token 594: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04451732710003853
    2. '(self' → logprob: -3.9195172786712646
    3. '   ' → logprob: -4.419517517089844
    4. 'def' → logprob: -5.669517517089844
    5. ',' → logprob: -5.794517517089844
    6. '
' → logprob: -6.794517517089844
    7. '<|end|>' → logprob: -6.794517517089844
    8. '(' → logprob: -7.169517517089844
    9. ' at' → logprob: -7.794517517089844
    10. '<|end|>' → logprob: -7.919517517089844

Token 595: 'number' (ID: 8096)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2348286211490631
    2. 'p' → logprob: -2.2348287105560303
    3. 'self' → logprob: -2.6098287105560303
    4. 'def' → logprob: -5.234828472137451
    5. 'pos' → logprob: -5.484828472137451
    6. ' self' → logprob: -5.609828472137451
    7. ' p' → logprob: -5.859828472137451
    8. 'step' → logprob: -5.984828472137451
    9. '
' → logprob: -6.859828472137451
    10. '),' → logprob: -7.234828472137451

Token 596: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.30281293392181396
    2. ')' → logprob: -1.552812933921814
    3. '_of' → logprob: -3.4278130531311035
    4. '=' → logprob: -4.4278130531311035
    5. ' of' → logprob: -6.4278130531311035
    6. '_sur' → logprob: -7.5528130531311035
    7. '_steps' → logprob: -7.8028130531311035
    8. 'def' → logprob: -7.9278130531311035
    9. ',' → logprob: -8.427812576293945
    10. '
' → logprob: -8.427812576293945

Token 597: ' sprink' (ID: 80706)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04989943653345108
    2. 'spr' → logprob: -3.1748993396759033
    3. 's' → logprob: -5.299899578094482
    4. ' self' → logprob: -6.674899578094482
    5. 'steps' → logprob: -7.924899578094482
    6. '(self' → logprob: -9.924899101257324
    7. 'positions' → logprob: -10.049899101257324
    8. ')' → logprob: -10.299899101257324
    9. '[self' → logprob: -10.799899101257324
    10. '=self' → logprob: -11.174899101257324

Token 598: 'lers' (ID: 15137)
  Prédit: 'lers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lers' → logprob: -0.00012487331696320325
    2. 'ler' → logprob: -9.50012493133545
    3. 'ers' → logprob: -10.75012493133545
    4. 'l' → logprob: -11.00012493133545
    5. '#' → logprob: -13.00012493133545
    6. 'kers' → logprob: -13.12512493133545
    7. '>' → logprob: -14.00012493133545
    8. '[' → logprob: -14.12512493133545
    9. 'layers' → logprob: -14.25012493133545
    10. '```' → logprob: -14.37512493133545

Token 599: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06762892007827759
    2. ' )' → logprob: -3.317628860473633
    3. ',' → logprob: -5.317628860473633
    4. '   ' → logprob: -5.442628860473633
    5. ' -' → logprob: -5.442628860473633
    6. ' +' → logprob: -6.067628860473633
    7. '):' → logprob: -6.317628860473633
    8. '+' → logprob: -6.442628860473633
    9. ')>' → logprob: -6.442628860473633
    10. '),' → logprob: -6.567628860473633

Token 600: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00871597696095705
    2. '
' → logprob: -5.633716106414795
    3. '   ' → logprob: -5.633716106414795
    4. ',' → logprob: -7.758716106414795
    5. 'def' → logprob: -7.883716106414795
    6. '<|end|>' → logprob: -8.008715629577637
    7. ' at' → logprob: -9.133715629577637
    8. '        
' → logprob: -9.758715629577637
    9. '<|end|>' → logprob: -10.883715629577637
    10. ' to' → logprob: -11.008715629577637

Token 601: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20315776765346527
    2. '       ' → logprob: -2.203157663345337
    3. ' def' → logprob: -2.828157663345337
    4. 'return' → logprob: -5.578157901763916
    5. 'p' → logprob: -5.953157901763916
    6. ' p' → logprob: -6.203157901763916
    7. ' return' → logprob: -6.453157901763916
    8. '   ' → logprob: -6.578157901763916
    9. 'pos' → logprob: -6.703157901763916
    10. 'current' → logprob: -7.328157901763916

Token 602: ' State' (ID: 5388)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014986937865614891
    2. 'p' → logprob: -4.389986991882324
    3. '   ' → logprob: -7.014986991882324
    4. 'start' → logprob: -8.139986991882324
    5. 'return' → logprob: -8.264986991882324
    6. ' def' → logprob: -8.264986991882324
    7. 'pos' → logprob: -8.389986991882324
    8. 'n' → logprob: -8.639986991882324
    9. 'from' → logprob: -8.639986991882324
    10. 'path' → logprob: -10.389986991882324

Token 603: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0161330234259367
    2. '=' → logprob: -5.141132831573486
    3. 'def' → logprob: -6.141132831573486
    4. ',' → logprob: -6.266132831573486
    5. '_key' → logprob: -6.391132831573486
    6. ' def' → logprob: -6.516132831573486
    7. ':' → logprob: -7.016132831573486
    8. ' (' → logprob: -7.641132831573486
    9. ' key' → logprob: -7.891132831573486
    10. '_token' → logprob: -8.266133308410645

Token 604: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.035877980291843414
    2. 'self' → logprob: -4.1608781814575195
    3. 'position' → logprob: -4.2858781814575195
    4. 'idx' → logprob: -6.2858781814575195
    5. 'index' → logprob: -6.4108781814575195
    6. 'step' → logprob: -6.6608781814575195
    7. ' pos' → logprob: -7.4108781814575195
    8. 'current' → logprob: -8.41087818145752
    9. 'def' → logprob: -9.03587818145752
    10. ' self' → logprob: -10.16087818145752

Token 605: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000351670227246359
    2. ' ,' → logprob: -8.125351905822754
    3. ',state' → logprob: -11.250351905822754
    4. ',pos' → logprob: -11.750351905822754
    5. ',current' → logprob: -12.000351905822754
    6. ')' → logprob: -12.000351905822754
    7. '‌,' → logprob: -12.375351905822754
    8. ',p' → logprob: -12.625351905822754
    9. ',
' → logprob: -13.000351905822754
    10. ',time' → logprob: -13.125351905822754

Token 606: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6443796157836914
    2. 'step' → logprob: -1.2693796157836914
    3. 'index' → logprob: -2.0193796157836914
    4. ' idx' → logprob: -3.1443796157836914
    5. ' step' → logprob: -4.519379615783691
    6. 'time' → logprob: -5.644379615783691
    7. ' index' → logprob: -6.144379615783691
    8. 'spr' → logprob: -8.394379615783691
    9. 'turn' → logprob: -8.519379615783691
    10. 'p' → logprob: -8.769379615783691

Token 607: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4765319526195526
    2. ')' → logprob: -0.976531982421875
    3. '):
' → logprob: -6.101531982421875
    4. ',' → logprob: -9.101531982421875
    5. ')=' → logprob: -10.851531982421875
    6. ' ):' → logprob: -11.226531982421875
    7. ' )' → logprob: -11.226531982421875
    8. '):

' → logprob: -11.226531982421875
    9. '):
' → logprob: -11.226531982421875
    10. '),' → logprob: -11.601531982421875

Token 608: ' idx' (ID: 14016)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8866915106773376
    2. 'pos' → logprob: -1.5116915702819824
    3. ' pos' → logprob: -2.5116915702819824
    4. ' return' → logprob: -2.7616915702819824
    5. ' if' → logprob: -3.1366915702819824
    6. 'return' → logprob: -3.1366915702819824
    7. 'def' → logprob: -3.3866915702819824
    8. ')' → logprob: -3.7616915702819824
    9. 'position' → logprob: -4.386691570281982
    10. ' (' → logprob: -4.636691570281982

Token 609: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9496437311172485
    2. ' represents' → logprob: -1.8246437311172485
    3. '+' → logprob: -2.199643611907959
    4. '<|end|>' → logprob: -2.199643611907959
    5. ' +' → logprob: -2.324643611907959
    6. ' is' → logprob: -3.574643611907959
    7. ' ==' → logprob: -3.699643611907959
    8. ',' → logprob: -3.824643611907959
    9. ' in' → logprob: -4.074643611907959
    10. ' ranges' → logprob: -5.199643611907959

Token 610: ' which' (ID: 1118)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.923386812210083
    2. 'self' → logprob: -1.173386812210083
    3. '0' → logprob: -1.798386812210083
    4. 'current' → logprob: -2.673386812210083
    5. ' current' → logprob: -4.048386573791504
    6. ' self' → logprob: -4.423386573791504
    7. 'the' → logprob: -5.048386573791504
    8. ' len' → logprob: -5.048386573791504
    9. 'index' → logprob: -5.298386573791504
    10. 'step' → logprob: -5.423386573791504

Token 611: ' sprinkler' (ID: 181940)
  Prédit: ' sprinkler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sprinkler' → logprob: -0.459675669670105
    2. 'spr' → logprob: -1.084675669670105
    3. ' sprink' → logprob: -3.8346757888793945
    4. 's' → logprob: -5.8346757888793945
    5. ' step' → logprob: -6.0846757888793945
    6. 'step' → logprob: -7.2096757888793945
    7. ' in' → logprob: -7.5846757888793945
    8. '_s' → logprob: -8.209675788879395
    9. ' of' → logprob: -8.209675788879395
    10. ' spr' → logprob: -8.334675788879395

Token 612: ' is' (ID: 382)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -1.0100311040878296
    2. 'index' → logprob: -1.1350311040878296
    3. ' in' → logprob: -2.135031223297119
    4. ' is' → logprob: -3.260031223297119
    5. '_index' → logprob: -3.260031223297119
    6. ' sequence' → logprob: -3.260031223297119
    7. 'sequence' → logprob: -4.635031223297119
    8. '   ' → logprob: -4.635031223297119
    9. ' coverage' → logprob: -4.885031223297119
    10. '<|end|>' → logprob: -4.885031223297119

Token 613: ' running' (ID: 6788)
  Prédit: ' active'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' active' → logprob: -0.7168596386909485
    2. 'active' → logprob: -0.8418596386909485
    3. 'next' → logprob: -3.3418595790863037
    4. ' next' → logprob: -4.341859817504883
    5. 'current' → logprob: -4.716859817504883
    6. 'currently' → logprob: -5.216859817504883
    7. 'in' → logprob: -5.591859817504883
    8. 'activated' → logprob: -5.966859817504883
    9. ' currently' → logprob: -6.341859817504883
    10. ' reached' → logprob: -6.591859817504883

Token 614: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.691938042640686
    2. ',' → logprob: -1.941938042640686
    3. '   ' → logprob: -2.3169379234313965
    4. '<|end|>' → logprob: -2.3169379234313965
    5. '
' → logprob: -2.6919379234313965
    6. 'def' → logprob: -3.5669379234313965
    7. '<|end|>' → logprob: -3.6919379234313965
    8. ' def' → logprob: -4.5669379234313965
    9. ' in' → logprob: -4.5669379234313965
    10. ' at' → logprob: -5.5669379234313965

Token 615: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006229521706700325
    2. '   ' → logprob: -6.381229400634766
    3. ' def' → logprob: -6.381229400634766
    4. 'def' → logprob: -6.631229400634766
    5. '
' → logprob: -7.381229400634766
    6. ',' → logprob: -7.756229400634766
    7. '<|end|>' → logprob: -8.006229400634766
    8. ')' → logprob: -10.756229400634766
    9. '        
' → logprob: -10.881229400634766
    10. ' ' → logprob: -10.881229400634766

Token 616: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05239865556359291
    2. '   ' → logprob: -3.677398681640625
    3. 'def' → logprob: -3.927398681640625
    4. ' def' → logprob: -5.177398681640625
    5. 'pos' → logprob: -8.802398681640625
    6. ' pos' → logprob: -8.927398681640625
    7. '
' → logprob: -10.177398681640625
    8. '    ' → logprob: -10.302398681640625
    9. '           ' → logprob: -11.677398681640625
    10. ')' → logprob: -11.677398681640625

Token 617: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3198482394218445
    2. ' def' → logprob: -1.3198482990264893
    3. '   ' → logprob: -5.19484806060791
    4. 'pos' → logprob: -7.44484806060791
    5. ' pos' → logprob: -9.31984806060791
    6. ' if' → logprob: -9.31984806060791
    7. '       ' → logprob: -9.56984806060791
    8. ' key' → logprob: -10.06984806060791
    9. 'if' → logprob: -10.19484806060791
    10. ' stack' → logprob: -10.69484806060791

Token 618: ' sprinkler' (ID: 181940)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -1.057446837425232
    2. 'self' → logprob: -2.0574469566345215
    3. ' def' → logprob: -2.1824469566345215
    4. 'def' → logprob: -2.5574469566345215
    5. 'each' → logprob: -2.6824469566345215
    6. 'e' → logprob: -2.8074469566345215
    7. ' self' → logprob: -2.9324469566345215
    8. ' the' → logprob: -3.4324469566345215
    9. ' idx' → logprob: -3.5574469566345215
    10. ' range' → logprob: -4.1824469566345215

Token 619: ' i' (ID: 575)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.4870072305202484
    2. 's' → logprob: -2.9870071411132812
    3. ' coverage' → logprob: -2.9870071411132812
    4. 'pos' → logprob: -3.3620071411132812
    5. '   ' → logprob: -3.3620071411132812
    6. ' sequence' → logprob: -3.7370071411132812
    7. ',' → logprob: -3.7370071411132812
    8. 'coverage' → logprob: -3.7370071411132812
    9. '_sequence' → logprob: -3.8620071411132812
    10. 'sequence' → logprob: -3.8620071411132812

Token 620: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06391952186822891
    2. ' the' → logprob: -3.3139195442199707
    3. ' coverage' → logprob: -5.438919544219971
    4. 'def' → logprob: -5.938919544219971
    5. ' at' → logprob: -6.188919544219971
    6. ' we' → logprob: -6.438919544219971
    7. 'the' → logprob: -6.563919544219971
    8. ' def' → logprob: -6.563919544219971
    9. '   ' → logprob: -6.813919544219971
    10. ' ,' → logprob: -6.813919544219971

Token 621: ' p' (ID: 275)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.85429847240448
    2. ' pos' → logprob: -1.60429847240448
    3. ' if' → logprob: -1.72929847240448
    4. 'if' → logprob: -2.8542985916137695
    5. ' current' → logprob: -3.1042985916137695
    6. 'def' → logprob: -3.3542985916137695
    7. 'current' → logprob: -3.6042985916137695
    8. ' def' → logprob: -3.9792985916137695
    9. '       ' → logprob: -4.8542985916137695
    10. ' for' → logprob: -6.3542985916137695

Token 622: 'yon' (ID: 10033)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.012266159988939762
    2. 'osition' → logprob: -5.012266159057617
    3. 'def' → logprob: -6.762266159057617
    4. '==' → logprob: -7.262266159057617
    5. 'osit' → logprob: -7.512266159057617
    6. '   ' → logprob: -7.887266159057617
    7. 'pos' → logprob: -8.137266159057617
    8. ' =' → logprob: -8.449766159057617
    9. '=' → logprob: -8.512266159057617
    10. ' ==' → logprob: -8.824766159057617

Token 623: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0028343498706817627
    2. 'kich' → logprob: -5.877834320068359
    3. '   ' → logprob: -12.00283432006836
    4. 'к' → logprob: -12.87783432006836
    5. '_k' → logprob: -13.12783432006836
    6. '
' → logprob: -13.25283432006836
    7. 'kih' → logprob: -13.50283432006836
    8. ' k' → logprob: -13.50283432006836
    9. 'kish' → logprob: -13.50283432006836
    10. '	k' → logprob: -13.87783432006836

Token 624: 'ichi' (ID: 44252)
  Prédit: 'ichi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichi' → logprob: -0.02120339125394821
    2. 'ich' → logprob: -4.396203517913818
    3. 'ic' → logprob: -4.896203517913818
    4. '   ' → logprob: -8.02120304107666
    5. 'i' → logprob: -8.39620304107666
    6. 'inchi' → logprob: -9.14620304107666
    7. 'itch' → logprob: -9.27120304107666
    8. ' pos' → logprob: -9.77120304107666
    9. '    ' → logprob: -10.27120304107666
    10. 'ichí' → logprob: -10.52120304107666

Token 625: ' must' (ID: 2804)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.41571885347366333
    2. '_pos' → logprob: -1.4157187938690186
    3. ' =' → logprob: -3.5407187938690186
    4. ' can' → logprob: -3.9157187938690186
    5. 'can' → logprob: -5.040719032287598
    6. ' at' → logprob: -5.290719032287598
    7. ' is' → logprob: -5.415719032287598
    8. ' must' → logprob: -5.415719032287598
    9. 'def' → logprob: -5.540719032287598
    10. '=' → logprob: -5.665719032287598

Token 626: ' be' (ID: 413)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7939121127128601
    2. 'not' → logprob: -1.0439121723175049
    3. ' be' → logprob: -1.7939121723175049
    4. 'be' → logprob: -3.543912172317505
    5. ' avoid' → logprob: -8.793911933898926
    6. ' cover' → logprob: -9.043911933898926
    7. 'avoid' → logprob: -9.543911933898926
    8. ' stay' → logprob: -9.918911933898926
    9. 'cover' → logprob: -9.918911933898926
    10. ' stand' → logprob: -10.418911933898926

Token 627: ' in' (ID: 306)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.13893064856529236
    2. 'in' → logprob: -2.263930559158325
    3. 'inside' → logprob: -4.763930797576904
    4. 'within' → logprob: -4.888930797576904
    5. ' covered' → logprob: -5.763930797576904
    6. 'self' → logprob: -5.763930797576904
    7. 'not' → logprob: -7.013930797576904
    8. 'at' → logprob: -7.513930797576904
    9. ' in' → logprob: -7.763930797576904
    10. 'under' → logprob: -8.138930320739746

Token 628: ' coverage' (ID: 13422)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006794307846575975
    2. ' self' → logprob: -7.7506794929504395
    3. 'the' → logprob: -9.125679016113281
    4. 'coverage' → logprob: -10.375679016113281
    5. 'spr' → logprob: -10.375679016113281
    6. 's' → logprob: -10.625679016113281
    7. '=self' → logprob: -11.375679016113281
    8. '       ' → logprob: -11.750679016113281
    9. '(self' → logprob: -12.000679016113281
    10. '           ' → logprob: -12.125679016113281

Token 629: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05233496427536011
    2. '       ' → logprob: -3.802335023880005
    3. '
' → logprob: -4.052334785461426
    4. 'def' → logprob: -4.677334785461426
    5. ',' → logprob: -7.552334785461426
    6. ' def' → logprob: -7.677334785461426
    7. '<|end|>' → logprob: -8.302334785461426
    8. ' ' → logprob: -8.677334785461426
    9. ' at' → logprob: -8.802334785461426
    10. '        
' → logprob: -9.552334785461426

Token 630: ' sprinkler' (ID: 181940)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017339673358947039
    2. ' self' → logprob: -6.376733779907227
    3. '       ' → logprob: -11.251733779907227
    4. '   ' → logprob: -11.876733779907227
    5. 'the' → logprob: -12.001733779907227
    6. '(self' → logprob: -13.001733779907227
    7. 'spr' → logprob: -13.626733779907227
    8. '[self' → logprob: -14.501733779907227
    9. 'class' → logprob: -14.751733779907227
    10. '           ' → logprob: -15.126733779907227

Token 631: ' i' (ID: 575)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.215369701385498
    2. '[i' → logprob: -1.215369701385498
    3. ' at' → logprob: -1.965369701385498
    4. '[self' → logprob: -2.090369701385498
    5. '(self' → logprob: -2.715369701385498
    6. '(i' → logprob: -3.715369701385498
    7. ' self' → logprob: -4.090369701385498
    8. 'at' → logprob: -4.715369701385498
    9. 'i' → logprob: -4.840369701385498
    10. '       ' → logprob: -5.215369701385498

Token 632: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12157204002141953
    2. '
' → logprob: -2.6215720176696777
    3. ' at' → logprob: -4.246572017669678
    4. '       ' → logprob: -4.621572017669678
    5. 'def' → logprob: -5.371572017669678
    6. ',' → logprob: -5.621572017669678
    7. ' and' → logprob: -5.996572017669678
    8. '<|end|>' → logprob: -5.996572017669678
    9. ' or' → logprob: -6.871572017669678
    10. ' ' → logprob: -7.246572017669678

Token 633: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43050462007522583
    2. '       ' → logprob: -1.055504560470581
    3. '
' → logprob: -7.30550479888916
    4. 'def' → logprob: -7.43050479888916
    5. ' ' → logprob: -8.68050479888916
    6. '<|end|>' → logprob: -9.18050479888916
    7. ' def' → logprob: -9.30550479888916
    8. ',' → logprob: -9.93050479888916
    9. '```' → logprob: -10.30550479888916
    10. '    ' → logprob: -10.93050479888916

Token 634: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23955966532230377
    2. '   ' → logprob: -1.6145596504211426
    3. 'def' → logprob: -4.614559650421143
    4. ' def' → logprob: -5.739559650421143
    5. 'pos' → logprob: -8.2395601272583
    6. '
' → logprob: -8.3645601272583
    7. ' pos' → logprob: -8.6145601272583
    8. '    ' → logprob: -9.9895601272583
    9. '        
' → logprob: -9.9895601272583
    10. ' ' → logprob: -10.2395601272583

Token 635: ' Once' (ID: 12466)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5389280915260315
    2. '   ' → logprob: -1.5389280319213867
    3. 'def' → logprob: -2.0389280319213867
    4. ' def' → logprob: -2.6639280319213867
    5. ' pos' → logprob: -7.663928031921387
    6. 'pos' → logprob: -7.663928031921387
    7. '    ' → logprob: -8.538928031921387
    8. '
' → logprob: -8.913928031921387
    9. '        
' → logprob: -8.913928031921387
    10. ' ' → logprob: -9.413928031921387

Token 636: ' sprinkler' (ID: 181940)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.8866087198257446
    2. ' idx' → logprob: -1.5116087198257446
    3. 'def' → logprob: -2.386608600616455
    4. 'self' → logprob: -2.511608600616455
    5. ' the' → logprob: -2.886608600616455
    6. ' self' → logprob: -2.886608600616455
    7. ' def' → logprob: -3.636608600616455
    8. ' you' → logprob: -4.511608600616455
    9. '_idx' → logprob: -4.886608600616455
    10. '<|end|>' → logprob: -4.886608600616455

Token 637: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9814324378967285
    2. 'idx' → logprob: -1.4814324378967285
    3. 's' → logprob: -2.2314324378967285
    4. '_idx' → logprob: -2.3564324378967285
    5. '_sequence' → logprob: -2.8564324378967285
    6. ' sequence' → logprob: -3.9814324378967285
    7. 'index' → logprob: -4.1064324378967285
    8. 'sequence' → logprob: -4.1064324378967285
    9. ' i' → logprob: -4.3564324378967285
    10. ' at' → logprob: -4.4814324378967285

Token 638: ' stops' (ID: 29924)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.1492608785629272
    2. ' finishes' → logprob: -1.1492608785629272
    3. ' completes' → logprob: -2.149260997772217
    4. 'idx' → logprob: -3.149260997772217
    5. ' has' → logprob: -3.399260997772217
    6. 'is' → logprob: -3.774260997772217
    7. 'runs' → logprob: -4.024260997772217
    8. ' stops' → logprob: -4.149260997772217
    9. 'fin' → logprob: -4.274260997772217
    10. '.' → logprob: -4.649260997772217

Token 639: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030293390154838562
    2. ' at' → logprob: -4.5302934646606445
    3. ' and' → logprob: -4.6552934646606445
    4. ':' → logprob: -5.4052934646606445
    5. '   ' → logprob: -5.9052934646606445
    6. ' or' → logprob: -6.9052934646606445
    7. 'and' → logprob: -8.155293464660645
    8. '       ' → logprob: -8.655293464660645
    9. ' (' → logprob: -9.030293464660645
    10. ' ,' → logprob: -9.030293464660645

Token 640: ' i' (ID: 575)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.874576210975647
    2. 'i' → logprob: -1.249576210975647
    3. 'moves' → logprob: -1.874576210975647
    4. 'we' → logprob: -2.9995760917663574
    5. 'the' → logprob: -3.2495760917663574
    6. 'index' → logprob: -4.249576091766357
    7. 'next' → logprob: -4.499576091766357
    8. ' idx' → logprob: -4.624576091766357
    9. 'p' → logprob: -5.874576091766357
    10. ' moves' → logprob: -5.999576091766357

Token 641: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004007876385003328
    2. ' +' → logprob: -6.129007816314697
    3. '++' → logprob: -7.754007816314697
    4. '==' → logprob: -8.629008293151855
    5. ' reaches' → logprob: -8.629008293151855
    6. '+=' → logprob: -8.879008293151855
    7. ' increments' → logprob: -9.004008293151855
    8. ' is' → logprob: -9.129008293151855
    9. 's' → logprob: -9.129008293151855
    10. ' becomes' → logprob: -9.379008293151855

Token 642: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000145137935760431
    2. ' ' → logprob: -9.125144958496094
    3. '+' → logprob: -10.875144958496094
    4. '
' → logprob: -12.000144958496094
    5. ' is' → logprob: -13.125144958496094
    6. '<|end|>' → logprob: -13.125144958496094
    7. 's' → logprob: -13.500144958496094
    8. 'def' → logprob: -14.000144958496094
    9. '```' → logprob: -14.250144958496094
    10. '=' → logprob: -14.375144958496094

Token 643: ' starts' (ID: 13217)
  Prédit: ' starts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' starts' → logprob: -0.10839533805847168
    2. 'starts' → logprob: -2.9833953380584717
    3. ' runs' → logprob: -4.233395576477051
    4. ' begins' → logprob: -4.358395576477051
    5. 'spr' → logprob: -4.608395576477051
    6. ' is' → logprob: -5.108395576477051
    7. ' sprinkler' → logprob: -5.983395576477051
    8. 'runs' → logprob: -6.108395576477051
    9. ' activates' → logprob: -7.108395576477051
    10. 'is' → logprob: -8.23339557647705

Token 644: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08105673640966415
    2. '       ' → logprob: -2.581056833267212
    3. ' at' → logprob: -7.081056594848633
    4. ':' → logprob: -7.456056594848633
    5. '   ' → logprob: -7.706056594848633
    6. ' the' → logprob: -9.706056594848633
    7. ' and' → logprob: -10.206056594848633
    8. '.' → logprob: -10.456056594848633
    9. ' ,' → logprob: -10.456056594848633
    10. 'def' → logprob: -11.081056594848633

Token 645: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18125179409980774
    2. '#' → logprob: -1.8062517642974854
    3. '   ' → logprob: -7.0562520027160645
    4. ' the' → logprob: -8.806251525878906
    5. 'def' → logprob: -8.931251525878906
    6. 'the' → logprob: -8.931251525878906
    7. '           ' → logprob: -9.431251525878906
    8. ' #' → logprob: -9.806251525878906
    9. 'return' → logprob: -11.056251525878906
    10. ',' → logprob: -11.181251525878906

Token 646: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.1297275424003601
    2. '       ' → logprob: -2.129727602005005
    3. 'def' → logprob: -6.379727363586426
    4. '   ' → logprob: -7.879727363586426
    5. 'the' → logprob: -8.254727363586426
    6. 'return' → logprob: -9.129727363586426
    7. 'self' → logprob: -9.254727363586426
    8. 'pos' → logprob: -9.629727363586426
    9. ' #' → logprob: -9.629727363586426
    10. ' the' → logprob: -9.754727363586426

Token 647: ' He' (ID: 1679)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10660818964242935
    2. '       ' → logprob: -2.8566081523895264
    3. 'def' → logprob: -3.2316081523895264
    4. '   ' → logprob: -5.8566083908081055
    5. 'pos' → logprob: -8.106608390808105
    6. ' def' → logprob: -8.231608390808105
    7. ' #' → logprob: -8.481608390808105
    8. 'return' → logprob: -8.856608390808105
    9. 'the' → logprob: -8.981608390808105
    10. ' the' → logprob: -9.606608390808105

Token 648: ' can' (ID: 665)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.22733406722545624
    2. ' def' → logprob: -2.4773340225219727
    3. 'def' → logprob: -2.6023340225219727
    4. ' can' → logprob: -4.102334022521973
    5. 'must' → logprob: -4.852334022521973
    6. '       ' → logprob: -4.852334022521973
    7. ' is' → logprob: -5.477334022521973
    8. 's' → logprob: -5.977334022521973
    9. '   ' → logprob: -6.227334022521973
    10. ' s' → logprob: -6.727334022521973

Token 649: ' jump' (ID: 13843)
  Prédit: 'stay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stay' → logprob: -0.8408658504486084
    2. ' stay' → logprob: -1.2158658504486084
    3. 'move' → logprob: -2.0908658504486084
    4. ' move' → logprob: -2.4658658504486084
    5. 'remain' → logprob: -4.3408660888671875
    6. ' either' → logprob: -4.3408660888671875
    7. ' be' → logprob: -4.8408660888671875
    8. 'stand' → logprob: -5.3408660888671875
    9. 'be' → logprob: -5.3408660888671875
    10. ' only' → logprob: -5.7158660888671875

Token 650: ' once' (ID: 4730)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.39591434597969055
    2. '(self' → logprob: -1.7709143161773682
    3. '       ' → logprob: -2.895914316177368
    4. 'to' → logprob: -3.145914316177368
    5. 'def' → logprob: -4.020914554595947
    6. ' at' → logprob: -4.395914554595947
    7. 'from' → logprob: -4.895914554595947
    8. 'self' → logprob: -5.020914554595947
    9. '   ' → logprob: -5.020914554595947
    10. ',' → logprob: -6.520914554595947

Token 651: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30576011538505554
    2. '       ' → logprob: -1.555760145187378
    3. '   ' → logprob: -3.180760145187378
    4. '        
' → logprob: -5.930759906768799
    5. ' def' → logprob: -6.180759906768799
    6. 'def' → logprob: -6.305759906768799
    7. '    
' → logprob: -6.555759906768799
    8. '<|end|>' → logprob: -6.680759906768799
    9. ',' → logprob: -7.430759906768799
    10. ' ' → logprob: -8.180760383605957

Token 652: ' a' (ID: 261)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.732639491558075
    2. 'a' → logprob: -1.3576395511627197
    3. 'next' → logprob: -2.4826395511627197
    4. ' any' → logprob: -2.6076395511627197
    5. ' a' → logprob: -2.8576395511627197
    6. 'the' → logprob: -4.107639312744141
    7. ' next' → logprob: -4.232639312744141
    8. ' the' → logprob: -5.232639312744141
    9. 'continue' → logprob: -6.482639312744141
    10. 'positions' → logprob: -6.732639312744141

Token 653: ' position' (ID: 4010)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5470458269119263
    2. 'new' → logprob: -1.5470458269119263
    3. 'position' → logprob: -2.9220457077026367
    4. 'spr' → logprob: -3.0470457077026367
    5. 'valid' → logprob: -3.5470457077026367
    6. 'self' → logprob: -3.9220457077026367
    7. ' next' → logprob: -4.547045707702637
    8. 'Position' → logprob: -4.672045707702637
    9. ' new' → logprob: -5.047045707702637
    10. 'neighbor' → logprob: -5.047045707702637

Token 654: ' that' (ID: 484)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31208211183547974
    2. '   ' → logprob: -1.562082052230835
    3. '       ' → logprob: -3.062082052230835
    4. 'def' → logprob: -5.562082290649414
    5. '    
' → logprob: -6.562082290649414
    6. '        
' → logprob: -6.687082290649414
    7. ',' → logprob: -6.687082290649414
    8. '<|end|>' → logprob: -6.687082290649414
    9. ' def' → logprob: -7.187082290649414
    10. ' ' → logprob: -7.312082290649414

Token 655: ' covers' (ID: 17804)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3535919487476349
    2. 'is' → logprob: -1.6035919189453125
    3. 'covers' → logprob: -2.7285919189453125
    4. ' covers' → logprob: -3.6035919189453125
    5. 's' → logprob: -7.8535919189453125
    6. 'c' → logprob: -7.8535919189453125
    7. '```' → logprob: -7.8535919189453125
    8. '
' → logprob: -8.228591918945312
    9. ' still' → logprob: -8.478591918945312
    10. 'belongs' → logprob: -8.728591918945312

Token 656: ' next' (ID: 2613)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0781906843185425
    2. 'the' → logprob: -1.0781906843185425
    3. 'self' → logprob: -1.7031906843185425
    4. 'i' → logprob: -2.203190803527832
    5. ' i' → logprob: -4.328190803527832
    6. ' self' → logprob: -5.203190803527832
    7. '(i' → logprob: -5.953190803527832
    8. 'next' → logprob: -6.078190803527832
    9. ' next' → logprob: -6.078190803527832
    10. '<|end|>' → logprob: -8.453190803527832

Token 657: ' sprinkler' (ID: 181940)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4495104551315308
    2. '   ' → logprob: -1.5745104551315308
    3. ' def' → logprob: -2.0745105743408203
    4. ' sprinkler' → logprob: -2.1995105743408203
    5. '       ' → logprob: -2.3245105743408203
    6. ' ' → logprob: -2.8245105743408203
    7. '_s' → logprob: -2.9495105743408203
    8. '_' → logprob: -3.3245105743408203
    9. 'spr' → logprob: -4.07451057434082
    10. '_idx' → logprob: -4.44951057434082

Token 658: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4759387671947479
    2. '
' → logprob: -0.9759387969970703
    3. '    
' → logprob: -6.72593879699707
    4. 'def' → logprob: -8.35093879699707
    5. '<|end|>' → logprob: -8.97593879699707
    6. '        
' → logprob: -9.22593879699707
    7. ',' → logprob: -10.10093879699707
    8. '<|end|>' → logprob: -10.35093879699707
    9. '       ' → logprob: -10.47593879699707
    10. ' def' → logprob: -10.85093879699707

Token 659: '+' (ID: 10)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005577840842306614
    2. '
' → logprob: -5.38057804107666
    3. 'def' → logprob: -7.38057804107666
    4. '    
' → logprob: -9.13057804107666
    5. ' def' → logprob: -9.88057804107666
    6. ',' → logprob: -10.00557804107666
    7. '       ' → logprob: -10.38057804107666
    8. ' ' → logprob: -10.63057804107666
    9. '        
' → logprob: -10.75557804107666
    10. '<|end|>' → logprob: -11.25557804107666

Token 660: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002593130338937044
    2. '+' → logprob: -8.375259399414062
    3. ' ' → logprob: -10.500259399414062
    4. ' +' → logprob: -15.125259399414062
    5. 's' → logprob: -15.250259399414062
    6. '   ' → logprob: -16.000259399414062
    7. '
' → logprob: -16.125259399414062
    8. 'n' → logprob: -16.500259399414062
    9. 'def' → logprob: -16.500259399414062
    10. 'x' → logprob: -17.000259399414062

Token 661: ' coverage' (ID: 13422)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.037778306752443314
    2. '       ' → logprob: -4.287778377532959
    3. '   ' → logprob: -4.412778377532959
    4. '        
' → logprob: -5.412778377532959
    5. '    
' → logprob: -5.412778377532959
    6. '<|end|>' → logprob: -7.412778377532959
    7. 'def' → logprob: -7.537778377532959
    8. '  
' → logprob: -8.5377779006958
    9. ',' → logprob: -8.5377779006958
    10. ' ' → logprob: -8.7877779006958

Token 662: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5882615447044373
    2. '   ' → logprob: -0.8382615447044373
    3. '    
' → logprob: -5.338261604309082
    4. '       ' → logprob: -5.838261604309082
    5. 'def' → logprob: -5.963261604309082
    6. '        
' → logprob: -6.713261604309082
    7. '<|end|>' → logprob: -7.963261604309082
    8. ',' → logprob: -8.963261604309082
    9. '```' → logprob: -9.338261604309082
    10. '  
' → logprob: -10.338261604309082

Token 663: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017111752182245255
    2. '       ' → logprob: -4.392111778259277
    3. 'def' → logprob: -5.642111778259277
    4. '
' → logprob: -7.517111778259277
    5. ' def' → logprob: -8.142111778259277
    6. '<|end|>' → logprob: -9.767111778259277
    7. '```' → logprob: -10.142111778259277
    8. ' ' → logprob: -10.142111778259277
    9. '    
' → logprob: -10.517111778259277
    10. ',' → logprob: -11.142111778259277

Token 664: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4005369544029236
    2. '   ' → logprob: -1.5255370140075684
    3. ' def' → logprob: -2.9005370140075684
    4. 'def' → logprob: -3.5255370140075684
    5. '
' → logprob: -3.7755370140075684
    6. '        
' → logprob: -5.775537014007568
    7. '    
' → logprob: -7.150537014007568
    8. ' ' → logprob: -8.02553653717041
    9. '    ' → logprob: -8.02553653717041
    10. ' 
' → logprob: -8.77553653717041

Token 665: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003418991982471198
    2. ' self' → logprob: -8.00034236907959
    3. '(self' → logprob: -12.75034236907959
    4. '   ' → logprob: -13.87534236907959
    5. 'True' → logprob: -14.00034236907959
    6. 'not' → logprob: -14.87534236907959
    7. 'False' → logprob: -15.12534236907959
    8. '0' → logprob: -15.12534236907959
    9. '	self' → logprob: -15.75034236907959
    10. 'len' → logprob: -15.75034236907959

Token 666: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.696535050868988
    2. '.can' → logprob: -0.696535050868988
    3. '_can' → logprob: -6.071535110473633
    4. 'can' → logprob: -8.196535110473633
    5. ' .' → logprob: -8.446535110473633
    6. '.' → logprob: -9.321535110473633
    7. 'def' → logprob: -9.321535110473633
    8. '.s' → logprob: -9.446535110473633
    9. '.check' → logprob: -9.821535110473633
    10. '.def' → logprob: -9.946535110473633

Token 667: 'dfs' (ID: 60837)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.04852934181690216
    2. 'dfs' → logprob: -3.4235293865203857
    3. 'search' → logprob: -4.923529148101807
    4. '_can' → logprob: -5.673529148101807
    5. 'sur' → logprob: -6.298529148101807
    6. 'check' → logprob: -7.798529148101807
    7. '_sur' → logprob: -7.923529148101807
    8. '_search' → logprob: -8.173529624938965
    9. 'try' → logprob: -8.423529624938965
    10. 'expl' → logprob: -8.673529624938965

Token 668: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.038844142109155655
    2. '(' → logprob: -3.288844108581543
    3. '((' → logprob: -7.413844108581543
    4. '(
' → logprob: -9.038844108581543
    5. '<|end|>' → logprob: -10.288844108581543
    6. 'self' → logprob: -10.663844108581543
    7. '(None' → logprob: -11.788844108581543
    8. ' (' → logprob: -12.663844108581543
    9. '(s' → logprob: -13.288844108581543
    10. '(True' → logprob: -13.913844108581543

Token 669: '.initial' (ID: 58290)
  Prédit: '.initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.initial' → logprob: -0.000665375788230449
    2. 'initial' → logprob: -7.375665187835693
    3. '(initial' → logprob: -11.125665664672852
    4. ',' → logprob: -11.875665664672852
    5. '_initial' → logprob: -12.375665664672852
    6. ').' → logprob: -13.000665664672852
    7. ')' → logprob: -13.125665664672852
    8. '.' → logprob: -13.750665664672852
    9. ' .' → logprob: -13.750665664672852
    10. '
' → logprob: -13.875665664672852

Token 670: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.129266067640856e-05
    2. 'pos' → logprob: -10.875020980834961
    3. 'Pos' → logprob: -13.125020980834961
    4. '_position' → logprob: -15.750020980834961
    5. '_positions' → logprob: -16.12502098083496
    6. '.pos' → logprob: -18.00002098083496
    7. '_p' → logprob: -18.00002098083496
    8. ')' → logprob: -18.25002098083496
    9. '_Pos' → logprob: -18.75002098083496
    10. 'Position' → logprob: -19.00002098083496

Token 671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.898723561083898e-05
    2. '0' → logprob: -9.875079154968262
    3. ',
' → logprob: -11.250079154968262
    4. ' ,' → logprob: -11.375079154968262
    5. ',len' → logprob: -13.750079154968262
    6. '<|end|>' → logprob: -14.500079154968262
    7. '       ' → logprob: -15.125079154968262
    8. '   ' → logprob: -15.375079154968262
    9. '‌,' → logprob: -16.250078201293945
    10. ',self' → logprob: -16.250078201293945

Token 672: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. 'len' → logprob: -15.750140190124512
    4. '   ' → logprob: -17.625139236450195
    5. '1' → logprob: -17.750139236450195
    6. '<|end|>' → logprob: -17.750139236450195
    7. ')' → logprob: -18.625139236450195
    8. '[' → logprob: -19.250139236450195
    9. ',' → logprob: -19.375139236450195
    10. '-' → logprob: -19.500139236450195

Token 673: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '1' → logprob: -19.000001907348633
    4. 'len' → logprob: -19.750001907348633
    5. '۰' → logprob: -20.750001907348633
    6. ')' → logprob: -20.875001907348633
    7. '00' → logprob: -21.125001907348633
    8. '-' → logprob: -21.125001907348633
    9. '000' → logprob: -21.375001907348633
    10. '   ' → logprob: -22.000001907348633

Token 674: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16042771935462952
    2. ',' → logprob: -1.9104276895523071
    3. '   ' → logprob: -9.410428047180176
    4. ' )' → logprob: -10.035428047180176
    5. '<|end|>' → logprob: -11.160428047180176
    6. ',)' → logprob: -11.285428047180176
    7. '       ' → logprob: -11.285428047180176
    8. ' ,' → logprob: -11.785428047180176
    9. ',
' → logprob: -11.910428047180176
    10. ')
' → logprob: -12.535428047180176

Token 675: ' True' (ID: 6432)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6443920135498047
    2. 'self' → logprob: -2.1443920135498047
    3. 'set' → logprob: -2.5193920135498047
    4. 'len' → logprob: -2.7693920135498047
    5. 'False' → logprob: -3.0193920135498047
    6. 'True' → logprob: -3.3943920135498047
    7. '0' → logprob: -3.3943920135498047
    8. '{})' → logprob: -3.6443920135498047
    9. 'None' → logprob: -4.019392013549805
    10. '{}' → logprob: -4.894392013549805

Token 676: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.35837464465294e-05
    2. ',' → logprob: -10.250043869018555
    3. ')
' → logprob: -12.750043869018555
    4. ' )' → logprob: -13.250043869018555
    5. '   ' → logprob: -13.500043869018555
    6. '):' → logprob: -14.000043869018555
    7. '       ' → logprob: -15.500043869018555
    8. ')return' → logprob: -15.500043869018555
    9. ',)' → logprob: -15.625043869018555
    10. '
' → logprob: -15.625043869018555

Token 677: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18312597274780273
    2. '(' → logprob: -2.0581259727478027
    3. '<|end|>' → logprob: -4.183125972747803
    4. '(
' → logprob: -4.808125972747803
    5. '
' → logprob: -5.808125972747803
    6. ',' → logprob: -5.933125972747803
    7. 'def' → logprob: -5.933125972747803
    8. '(self' → logprob: -6.808125972747803
    9. ':' → logprob: -6.933125972747803
    10. ')' → logprob: -7.058125972747803

Token 678: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1320090889930725
    2. '
' → logprob: -3.1320090293884277
    3. 'def' (adapté à ' def') → logprob: -3.5070090293884277
    4. '(
' → logprob: -4.257009029388428
    5. '(' → logprob: -4.632009029388428
    6. '(self' → logprob: -5.007009029388428
    7. ')' → logprob: -5.632009029388428
    8. '    
' → logprob: -5.882009029388428
    9. '\n' → logprob: -6.632009029388428
    10. ',' → logprob: -6.757009029388428

Token 679: ' _' (ID: 1175)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -4.23917081207037e-05
    2. ' _' → logprob: -10.375041961669922
    3. '_def' → logprob: -12.375041961669922
    4. 'def' → logprob: -12.875041961669922
    5. '_df' → logprob: -13.000041961669922
    6. '_can' → logprob: -14.750041961669922
    7. '_defs' → logprob: -14.875041961669922
    8. '
' → logprob: -15.000041961669922
    9. '_cache' → logprob: -15.375041961669922
    10. '_ds' → logprob: -16.000041961669922

Token 680: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -4.417976379045285e-05
    2. 'def' → logprob: -10.250043869018555
    3. ' dfs' → logprob: -12.000043869018555
    4. 'df' → logprob: -13.125043869018555
    5. '_d' → logprob: -15.250043869018555
    6. '_' → logprob: -16.000043869018555
    7. 'd' → logprob: -16.500043869018555
    8. 'dfa' → logprob: -16.625043869018555
    9. '
' → logprob: -17.875043869018555
    10. 'DFS' → logprob: -18.375043869018555

Token 681: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.000000953674316
    3. ' (' → logprob: -15.500000953674316
    4. 'self' → logprob: -16.000001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '(s' → logprob: -17.500001907348633
    7. '(
' → logprob: -17.750001907348633
    8. '       ' → logprob: -18.000001907348633
    9. '(pos' → logprob: -18.375001907348633
    10. '(sel' → logprob: -18.500001907348633

Token 682: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05507342144846916
    2. '(self' → logprob: -2.9300734996795654
    3. ',self' → logprob: -9.055073738098145
    4. 'self' → logprob: -10.305073738098145
    5. ' ,' → logprob: -11.180073738098145
    6. ')(' → logprob: -11.430073738098145
    7. ',pos' → logprob: -11.930073738098145
    8. ')' → logprob: -13.180073738098145
    9. ' (' → logprob: -13.555073738098145
    10. '(' → logprob: -13.680073738098145

Token 683: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.20407697558403015
    2. ' pos' → logprob: -1.7040770053863525
    3. ' current' → logprob: -6.579076766967773
    4. 'current' → logprob: -7.204076766967773
    5. '   ' → logprob: -8.704076766967773
    6. 'self' → logprob: -8.829076766967773
    7. 'position' → logprob: -9.579076766967773
    8. ' self' → logprob: -10.454076766967773
    9. ' position' → logprob: -10.704076766967773
    10. ' ' → logprob: -10.829076766967773

Token 684: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9795445849886164e-05
    2. ' ,' → logprob: -9.750060081481934
    3. '       ' → logprob: -14.375060081481934
    4. '   ' → logprob: -14.750060081481934
    5. '‌,' → logprob: -15.625060081481934
    6. ',int' → logprob: -16.625059127807617
    7. ',pos' → logprob: -16.750059127807617
    8. '<|end|>' → logprob: -16.875059127807617
    9. ',
' → logprob: -17.125059127807617
    10. ',index' → logprob: -17.125059127807617

Token 685: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.09482073038816452
    2. ' idx' → logprob: -2.469820737838745
    3. 'index' → logprob: -5.219820499420166
    4. 'spr' → logprob: -8.844820976257324
    5. ' index' → logprob: -9.094820976257324
    6. ' sprinkler' → logprob: -9.844820976257324
    7. 's' → logprob: -9.969820976257324
    8. '   ' → logprob: -10.344820976257324
    9. 'i' → logprob: -10.969820976257324
    10. ' ' → logprob: -11.719820976257324

Token 686: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.596781946020201e-05
    2. ' ,' → logprob: -10.000045776367188
    3. '   ' → logprob: -14.750045776367188
    4. ',
' → logprob: -17.125045776367188
    5. '‌,' → logprob: -17.125045776367188
    6. ',is' → logprob: -17.125045776367188
    7. ':' → logprob: -17.375045776367188
    8. ',bool' → logprob: -17.875045776367188
    9. '_,' → logprob: -18.875045776367188
    10. '       ' → logprob: -19.000045776367188

Token 687: ' must' (ID: 2804)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -1.0640337467193604
    2. 'is' → logprob: -2.1890337467193604
    3. 'started' → logprob: -2.8140337467193604
    4. 'just' → logprob: -2.9390337467193604
    5. 'entered' → logprob: -3.0640337467193604
    6. 'must' → logprob: -3.1890337467193604
    7. 'visited' → logprob: -3.4390337467193604
    8. 'covered' → logprob: -3.6890337467193604
    9. ' first' → logprob: -3.6890337467193604
    10. 'in' → logprob: -3.8140337467193604

Token 688: '_jump' (ID: 164075)
  Prédit: '_be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_be' → logprob: -0.6908534169197083
    2. '_cover' → logprob: -1.1908533573150635
    3. '_st' → logprob: -2.3158533573150635
    4. '_' → logprob: -2.8158533573150635
    5. 'stay' → logprob: -4.565853595733643
    6. 'be' → logprob: -5.440853595733643
    7. '_sur' → logprob: -5.440853595733643
    8. '_in' → logprob: -5.690853595733643
    9. '_c' → logprob: -5.815853595733643
    10. '_land' → logprob: -6.065853595733643

Token 689: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026471098884940147
    2. '):
' → logprob: -3.6514711380004883
    3. '):
' → logprob: -9.151471138000488
    4. '   ' → logprob: -10.526471138000488
    5. ':' → logprob: -11.151471138000488
    6. '):

' → logprob: -11.651471138000488
    7. ' ):' → logprob: -11.901471138000488
    8. '       ' → logprob: -13.276471138000488
    9. ')' → logprob: -13.526471138000488
    10. '=True' → logprob: -13.901471138000488

Token 690: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017973965732380748
    2. '<|end|>' → logprob: -6.626797199249268
    3. ' if' → logprob: -8.626797676086426
    4. ':' → logprob: -8.626797676086426
    5. '   ' → logprob: -10.126797676086426
    6. ',' → logprob: -10.626797676086426
    7. '<|end|>' → logprob: -11.126797676086426
    8. ')' → logprob: -11.751797676086426
    9. '):' → logprob: -12.251797676086426
    10. '        
' → logprob: -12.376797676086426

Token 691: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7337943315505981
    2. ' if' → logprob: -1.2337943315505981
    3. '       ' → logprob: -1.4837943315505981
    4. 'key' → logprob: -6.608794212341309
    5. ' key' → logprob: -7.608794212341309
    6. 'state' → logprob: -9.233794212341309
    7. '	if' → logprob: -11.858794212341309
    8. '   ' → logprob: -12.858794212341309
    9. '#' → logprob: -14.608794212341309
    10. '_key' → logprob: -14.608794212341309

Token 692: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0619802325963974
    2. ' idx' → logprob: -2.8119802474975586
    3. '	idx' → logprob: -11.561980247497559
    4. '       ' → logprob: -14.061980247497559
    5. '   ' → logprob: -14.186980247497559
    6. '(idx' → logprob: -14.311980247497559
    7. 'pos' → logprob: -15.061980247497559
    8. '           ' → logprob: -15.311980247497559
    9. 'index' → logprob: -15.436980247497559
    10. '_idx' → logprob: -15.436980247497559

Token 693: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.29174932837486267
    2. '==' → logprob: -2.0417492389678955
    3. ' >=' → logprob: -2.1667492389678955
    4. '>=' → logprob: -4.791749477386475
    5. '<|end|>' → logprob: -8.291749000549316
    6. ')' → logprob: -10.416749000549316
    7. ')>=' → logprob: -10.791749000549316
    8. ' ' → logprob: -10.791749000549316
    9. '=' → logprob: -10.916749000549316
    10. ')==' → logprob: -11.791749000549316

Token 694: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009446507319808006
    2. 'len' → logprob: -4.759446620941162
    3. ' self' → logprob: -7.134446620941162
    4. '<|end|>' → logprob: -10.759446144104004
    5. ' len' → logprob: -11.509446144104004
    6. '   ' → logprob: -14.759446144104004
    7. '(self' → logprob: -14.759446144104004
    8. '	self' → logprob: -14.884446144104004
    9. '[self' → logprob: -15.009446144104004
    10. 'length' → logprob: -15.259446144104004

Token 695: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.13870590925216675
    2. '.length' → logprob: -2.1387059688568115
    3. 'length' → logprob: -5.388705730438232
    4. 'len' → logprob: -5.763705730438232
    5. '.len' → logprob: -6.388705730438232
    6. 's' → logprob: -7.638705730438232
    7. 'self' → logprob: -7.888705730438232
    8. '.' → logprob: -8.51370620727539
    9. '.sequence' → logprob: -8.76370620727539
    10. ' .' → logprob: -8.76370620727539

Token 696: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.000340111117111519
    2. 'spr' → logprob: -9.375340461730957
    3. '   ' → logprob: -10.250340461730957
    4. 'elf' → logprob: -10.750340461730957
    5. '       ' → logprob: -10.750340461730957
    6. 'p' → logprob: -11.000340461730957
    7. '```' → logprob: -11.000340461730957
    8. 'пр' → logprob: -11.125340461730957
    9. ')' → logprob: -11.125340461730957
    10. '.s' → logprob: -11.250340461730957

Token 697: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.00025883622583933175
    2. 'link' → logprob: -8.875258445739746
    3. 'inkl' → logprob: -10.625258445739746
    4. '_link' → logprob: -11.625258445739746
    5. 'rink' → logprob: -11.750258445739746
    6. '_' → logprob: -12.000258445739746
    7. '{"' → logprob: -12.000258445739746
    8. '\' → logprob: -12.125258445739746
    9. 'inkle' → logprob: -12.250258445739746
    10. 'inkles' → logprob: -12.375258445739746

Token 698: 'ler' (ID: 1639)
  Prédit: 'ink'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.39979293942451477
    2. 'ler' → logprob: -1.3997929096221924
    3. 'lers' → logprob: -2.5247929096221924
    4. 'link' → logprob: -6.7747931480407715
    5. 'r' → logprob: -7.1497931480407715
    6. 'inker' → logprob: -7.7747931480407715
    7. 'rink' → logprob: -8.774792671203613
    8. 'l' → logprob: -9.774792671203613
    9. 'k' → logprob: -10.149792671203613
    10. 'ers' → logprob: -10.524792671203613

Token 699: '_seq' (ID: 34260)
  Prédit: '_seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -0.04937751591205597
    2. 's' → logprob: -3.04937744140625
    3. 'seq' → logprob: -7.29937744140625
    4. 'sequence' → logprob: -10.17437744140625
    5. '_sequence' → logprob: -10.17437744140625
    6. '_se' → logprob: -11.79937744140625
    7. 'Seq' → logprob: -11.79937744140625
    8. 'sequ' → logprob: -11.79937744140625
    9. 'Sequence' → logprob: -12.79937744140625
    10. '.seq' → logprob: -13.04937744140625

Token 700: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -1.9981420336989686e-05
    2. ').' → logprob: -11.375020027160645
    3. 'length' → logprob: -12.750020027160645
    4. ':length' → logprob: -13.625020027160645
    5. '.size' → logprob: -13.875020027160645
    6. '.' → logprob: -14.000020027160645
    7. '.LENGTH' → logprob: -14.000020027160645
    8. ')' → logprob: -15.000020027160645
    9. '   ' → logprob: -15.375020027160645
    10. ' .' → logprob: -15.500020027160645

Token 701: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007152695674449205
    2. '():
' → logprob: -5.007152557373047
    3. '()' → logprob: -7.757152557373047
    4. ':' → logprob: -12.882152557373047
    5. ' ():' → logprob: -13.007152557373047
    6. '()-' → logprob: -13.382152557373047
    7. '():
' → logprob: -13.632152557373047
    8. '()):
' → logprob: -14.007152557373047
    9. '()==' → logprob: -15.632152557373047
    10. '():

' → logprob: -15.757152557373047

Token 702: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4358972907066345
    2. ':' → logprob: -1.3108973503112793
    3. '       ' → logprob: -2.9358973503112793
    4. ':return' → logprob: -3.8108973503112793
    5. ' return' → logprob: -5.185897350311279
    6. ':
' → logprob: -6.310897350311279
    7. 'return' → logprob: -7.185897350311279
    8. '   ' → logprob: -8.935896873474121
    9. '               ' → logprob: -10.185896873474121
    10. '<|end|>' → logprob: -10.810896873474121

Token 703: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3650829792022705
    2. 'return' → logprob: -1.8650829792022705
    3. '       ' → logprob: -1.9900829792022705
    4. '           ' → logprob: -4.365082740783691
    5. '	return' → logprob: -7.240082740783691
    6. '   ' → logprob: -7.615082740783691
    7. ':return' → logprob: -8.615082740783691
    8. '	' → logprob: -9.740082740783691
    9. '	       ' → logprob: -10.490082740783691
    10. '{return' → logprob: -10.865082740783691

Token 704: ' All' (ID: 2545)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.018176162615418434
    2. ' return' → logprob: -4.018176078796387
    3. '       ' → logprob: -10.768176078796387
    4. '	return' → logprob: -13.143176078796387
    5. '           ' → logprob: -13.268176078796387
    6. '#' → logprob: -14.518176078796387
    7. '   ' → logprob: -14.768176078796387
    8. '{return' → logprob: -14.893176078796387
    9. ':return' → logprob: -15.893176078796387
    10. '
' → logprob: -16.893177032470703

Token 705: ' sprink' (ID: 80706)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.510197103023529
    2. ' positions' → logprob: -1.5101971626281738
    3. 'spr' → logprob: -2.760197162628174
    4. 'return' → logprob: -3.385197162628174
    5. 's' → logprob: -3.760197162628174
    6. '           ' → logprob: -4.385197162628174
    7. '       ' → logprob: -4.635197162628174
    8. ' return' → logprob: -5.010197162628174
    9. ')' → logprob: -5.135197162628174
    10. '_s' → logprob: -5.635197162628174

Token 706: 'lers' (ID: 15137)
  Prédit: 'lers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lers' → logprob: -1.0564331205387134e-05
    2. 'ler' → logprob: -11.87501049041748
    3. 'ers' → logprob: -12.87501049041748
    4. 'l' → logprob: -15.62501049041748
    5. 'layers' → logprob: -15.87501049041748
    6. 'r' → logprob: -16.125011444091797
    7. 'kl' → logprob: -16.250011444091797
    8. '_' → logprob: -16.500011444091797
    9. 'kers' → logprob: -16.625011444091797
    10. '_l' → logprob: -17.000011444091797

Token 707: ' done' (ID: 4167)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5425094366073608
    2. 'return' → logprob: -1.2925094366073608
    3. '       ' → logprob: -2.4175095558166504
    4. ' return' → logprob: -3.1675095558166504
    5. ':return' → logprob: -4.79250955581665
    6. '               ' → logprob: -6.79250955581665
    7. '
' → logprob: -7.04250955581665
    8. '{return' → logprob: -7.66750955581665
    9. '   ' → logprob: -7.79250955581665
    10. ')return' → logprob: -8.292509078979492

Token 708: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03717248886823654
    2. ' return' → logprob: -3.912172555923462
    3. 'return' → logprob: -4.162172317504883
    4. '       ' → logprob: -7.412172317504883
    5. ':return' → logprob: -8.787172317504883
    6. '               ' → logprob: -9.662172317504883
    7. '
' → logprob: -10.912172317504883
    8. '   ' → logprob: -11.037172317504883
    9. '	return' → logprob: -11.287172317504883
    10. '	       ' → logprob: -11.412172317504883

Token 709: ' survived' (ID: 47203)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5957366824150085
    2. ' return' → logprob: -0.8457366824150085
    3. '           ' → logprob: -4.220736503601074
    4. '       ' → logprob: -5.345736503601074
    5. '	return' → logprob: -9.845736503601074
    6. '               ' → logprob: -10.220736503601074
    7. ':return' → logprob: -10.845736503601074
    8. '{return' → logprob: -11.095736503601074
    9. '   ' → logprob: -11.470736503601074
    10. '
' → logprob: -12.470736503601074

Token 710: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.039110779762268
    2. '           ' → logprob: -1.289110779762268
    3. 'return' → logprob: -1.539110779762268
    4. ' return' → logprob: -1.914110779762268
    5. ' True' → logprob: -5.4141106605529785
    6. 'True' → logprob: -6.7891106605529785
    7. ':return' → logprob: -7.0391106605529785
    8. '               ' → logprob: -7.5391106605529785
    9. '	return' → logprob: -7.9141106605529785
    10. '(True' → logprob: -8.289111137390137

Token 711: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016605738550424576
    2. '       ' → logprob: -5.016605854034424
    3. ' True' → logprob: -5.016605854034424
    4. 'return' → logprob: -6.516605854034424
    5. ' return' → logprob: -7.391605854034424
    6. 'True' → logprob: -7.516605854034424
    7. '               ' → logprob: -8.266605377197266
    8. '(True' → logprob: -8.766605377197266
    9. '		' → logprob: -10.141605377197266
    10. '	       ' → logprob: -10.266605377197266

Token 712: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03187102451920509
    2. ' return' → logprob: -3.5318710803985596
    3. '           ' → logprob: -6.2818708419799805
    4. '       ' → logprob: -8.40687084197998
    5. 'True' → logprob: -11.53187084197998
    6. '	return' → logprob: -12.40687084197998
    7. '   ' → logprob: -12.78187084197998
    8. '               ' → logprob: -12.90687084197998
    9. ' True' → logprob: -12.90687084197998
    10. ':return' → logprob: -13.15687084197998

Token 713: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.005233763717114925
    2. ' True' → logprob: -5.2552337646484375
    3. '(True' → logprob: -17.130233764648438
    4. '   ' → logprob: -21.130233764648438
    5. '=True' → logprob: -22.005233764648438
    6. '1' → logprob: -22.005233764648438
    7. '       ' → logprob: -22.380233764648438
    8. '
' → logprob: -22.755233764648438
    9. 'true' → logprob: -22.755233764648438
    10. 'False' → logprob: -23.380233764648438

Token 714: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19046908617019653
    2. '
' → logprob: -2.5654690265655518
    3. '<|end|>' → logprob: -2.6904690265655518
    4. '        
' → logprob: -4.315469264984131
    5. ' if' → logprob: -5.940469264984131
    6. '    
' → logprob: -5.940469264984131
    7. '   ' → logprob: -5.940469264984131
    8. '\n' → logprob: -6.315469264984131
    9. '  
' → logprob: -6.940469264984131
    10. 'if' → logprob: -7.440469264984131

Token 715: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012545911595225334
    2. ' if' → logprob: -5.512546062469482
    3. '   ' → logprob: -5.637546062469482
    4. '
' → logprob: -6.637546062469482
    5. '        
' → logprob: -7.012546062469482
    6. '	' → logprob: -7.262546062469482
    7. 'if' → logprob: -7.512546062469482
    8. '<|end|>' → logprob: -8.012545585632324
    9. '    
' → logprob: -8.387545585632324
    10. '\t' → logprob: -8.762545585632324

Token 716: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' (adapté à ' key') → logprob: -0.09031126648187637
    2. ' key' → logprob: -3.090311288833618
    3. 'if' → logprob: -3.340311288833618
    4. '       ' → logprob: -5.840311050415039
    5. 'cache' → logprob: -6.465311050415039
    6. 'state' → logprob: -7.340311050415039
    7. ' if' → logprob: -8.090311050415039
    8. ' cache' → logprob: -11.590311050415039
    9. '	key' → logprob: -12.965311050415039
    10. '_key' → logprob: -13.090311050415039

Token 717: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931853294372559
    2. ' =' → logprob: -0.6931853294372559
    3. '=(' → logprob: -10.818185806274414
    4. ',' → logprob: -11.318185806274414
    5. ' =(' → logprob: -13.068185806274414
    6. '=
' → logprob: -13.068185806274414
    7. '<|end|>' → logprob: -14.443185806274414
    8. ')' → logprob: -14.818185806274414
    9. ' =
' → logprob: -15.693185806274414
    10. '(' → logprob: -15.693185806274414

Token 718: ' (' (ID: 350)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0002210596576333046
    2. ' (' → logprob: -8.500221252441406
    3. '(' → logprob: -11.250221252441406
    4. '(position' → logprob: -13.000221252441406
    5. '   ' → logprob: -13.875221252441406
    6. '(Pos' → logprob: -15.125221252441406
    7. '(str' → logprob: -16.000221252441406
    8. '(prev' → logprob: -16.000221252441406
    9. '(rep' → logprob: -16.000221252441406
    10. '(val' → logprob: -16.625221252441406

Token 719: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.6286106983898208e-05
    2. '(pos' → logprob: -11.125016212463379
    3. ' pos' → logprob: -13.500016212463379
    4. 'position' → logprob: -17.250017166137695
    5. '(' → logprob: -17.750017166137695
    6. ' (' → logprob: -18.750017166137695
    7. '   ' → logprob: -19.125017166137695
    8. '	pos' → logprob: -20.625017166137695
    9. ',pos' → logprob: -21.250017166137695
    10. '[pos' → logprob: -21.500017166137695

Token 720: '.x' (ID: 3700)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014418430509977043
    2. ' ,' → logprob: -9.000144004821777
    3. ',x' → logprob: -11.250144004821777
    4. '.x' → logprob: -12.000144004821777
    5. ',index' → logprob: -14.625144004821777
    6. ',
' → logprob: -15.125144004821777
    7. 'x' → logprob: -15.250144004821777
    8. '.idx' → logprob: -16.125144958496094
    9. 'idx' → logprob: -16.375144958496094
    10. '
' → logprob: -16.750144958496094

Token 721: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008750165579840541
    2. ',pos' → logprob: -7.125874996185303
    3. ' ,' → logprob: -9.750875473022461
    4. ',
' → logprob: -12.000875473022461
    5. ',key' → logprob: -12.875875473022461
    6. ',y' → logprob: -13.375875473022461
    7. ',p' → logprob: -14.625875473022461
    8. ',index' → logprob: -14.875875473022461
    9. ',len' → logprob: -15.625875473022461
    10. ',num' → logprob: -16.37587547302246

Token 722: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -2.15310683415737e-05
    2. ' pos' → logprob: -10.750021934509277
    3. '	pos' → logprob: -23.12502098083496
    4. 'position' → logprob: -24.50002098083496
    5. '(pos' → logprob: -24.87502098083496
    6. ',pos' → logprob: -25.12502098083496
    7. '   ' → logprob: -25.50002098083496
    8. '_pos' → logprob: -26.25002098083496
    9. '[pos' → logprob: -26.62502098083496
    10. 'pose' → logprob: -26.75002098083496

Token 723: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.002922564512118697
    2. ',' → logprob: -6.377922534942627
    3. '.pos' → logprob: -7.002922534942627
    4. ',y' → logprob: -8.502923011779785
    5. '.x' → logprob: -9.627923011779785
    6. '.' → logprob: -11.127923011779785
    7. 'pos' → logprob: -12.002923011779785
    8. 'y' → logprob: -12.127923011779785
    9. ' ,' → logprob: -12.627923011779785
    10. ',pos' → logprob: -12.627923011779785

Token 724: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7968066206085496e-05
    2. ' ,' → logprob: -10.625027656555176
    3. ',len' → logprob: -13.625027656555176
    4. ',index' → logprob: -13.875027656555176
    5. ',pos' → logprob: -14.375027656555176
    6. ',
' → logprob: -15.125027656555176
    7. '       ' → logprob: -16.375028610229492
    8. '‌,' → logprob: -16.375028610229492
    9. '   ' → logprob: -16.500028610229492
    10. ',x' → logprob: -17.125028610229492

Token 725: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0004307884373702109
    2. ' idx' → logprob: -7.750430583953857
    3. 'index' → logprob: -16.375431060791016
    4. '	idx' → logprob: -16.750431060791016
    5. '   ' → logprob: -17.250431060791016
    6. '(idx' → logprob: -18.500431060791016
    7. '[idx' → logprob: -19.250431060791016
    8. 'indx' → logprob: -19.500431060791016
    9. '_idx' → logprob: -20.250431060791016
    10. '       ' → logprob: -20.625431060791016

Token 726: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.062064483761787415
    2. ',m' → logprob: -2.8120644092559814
    3. ' ,' → logprob: -9.312064170837402
    4. ',
' → logprob: -13.937064170837402
    5. ',bool' → logprob: -14.062064170837402
    6. 'm' → logprob: -14.312064170837402
    7. ',len' → logprob: -14.437064170837402
    8. ',true' → logprob: -14.687064170837402
    9. ',is' → logprob: -14.812064170837402
    10. 'must' → logprob: -14.812064170837402

Token 727: ' must' (ID: 2804)
  Prédit: 'must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'must' → logprob: -0.6384481191635132
    2. ' must' → logprob: -0.7634481191635132
    3. ' int' → logprob: -5.638448238372803
    4. 'int' → logprob: -6.388448238372803
    5. '1' → logprob: -7.513448238372803
    6. ' ' → logprob: -10.513447761535645
    7. ' bool' → logprob: -11.638447761535645
    8. 'bool' → logprob: -12.013447761535645
    9. 'm' → logprob: -14.138447761535645
    10. '0' → logprob: -14.513447761535645

Token 728: '_jump' (ID: 164075)
  Prédit: '_jump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_jump' → logprob: -0.008822325617074966
    2. '_' → logprob: -4.758822441101074
    3. '_j' → logprob: -8.508822441101074
    4. 'Jump' → logprob: -13.383822441101074
    5. ' _' → logprob: -14.008822441101074
    6. '_)' → logprob: -14.133822441101074
    7. '_
' → logprob: -14.258822441101074
    8. '_move' → logprob: -14.258822441101074
    9. '_J' → logprob: -14.633822441101074
    10. ')' → logprob: -14.883822441101074

Token 729: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.963691804325208e-05
    2. ')
' → logprob: -10.500029563903809
    3. ' )' → logprob: -13.375029563903809
    4. ')return' → logprob: -16.250030517578125
    5. ')#' → logprob: -16.500030517578125
    6. '   ' → logprob: -16.625030517578125
    7. ')
' → logprob: -16.625030517578125
    8. ')

' → logprob: -17.125030517578125
    9. ',' → logprob: -17.250030517578125
    10. '       ' → logprob: -17.625030517578125

Token 730: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025525733828544617
    2. '<|end|>' → logprob: -4.4005255699157715
    3. ' if' → logprob: -5.1505255699157715
    4. '   ' → logprob: -5.7755255699157715
    5. ')' → logprob: -6.1505255699157715
    6. '
' → logprob: -7.0255255699157715
    7. 'if' → logprob: -7.4005255699157715
    8. '<|end|>' → logprob: -9.02552604675293
    9. ',' → logprob: -9.77552604675293
    10. '        
' → logprob: -10.27552604675293

Token 731: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008771627210080624
    2. ' if' → logprob: -4.7587714195251465
    3. '       ' → logprob: -8.758771896362305
    4. '   ' → logprob: -16.883771896362305
    5. '	if' → logprob: -16.883771896362305
    6. 'If' → logprob: -18.883771896362305
    7. '           ' → logprob: -19.633771896362305
    8. '        
' → logprob: -19.758771896362305
    9. '
' → logprob: -20.383771896362305
    10. ';if' → logprob: -21.133771896362305

Token 732: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.3868710398674011
    2. ' key' → logprob: -1.136871099472046
    3. '_key' → logprob: -18.136871337890625
    4. '   ' → logprob: -18.386871337890625
    5. '	key' → logprob: -19.011871337890625
    6. 'Key' → logprob: -19.636871337890625
    7. '
' → logprob: -19.761871337890625
    8. ' ' → logprob: -20.761871337890625
    9. '(key' → logprob: -20.761871337890625
    10. 'self' → logprob: -21.511871337890625

Token 733: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17976422607898712
    2. 'in' → logprob: -1.8047642707824707
    3. '	in' → logprob: -11.054763793945312
    4. ')' → logprob: -13.679763793945312
    5. ' i' → logprob: -14.429763793945312
    6. ' ' → logprob: -14.429763793945312
    7. '[' → logprob: -14.929763793945312
    8. 'In' → logprob: -15.804763793945312
    9. '   ' → logprob: -15.804763793945312
    10. ']' → logprob: -15.929763793945312

Token 734: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.908022285439074e-05
    2. ' self' → logprob: -9.750059127807617
    3. '       ' → logprob: -14.625059127807617
    4. '
' → logprob: -15.375059127807617
    5. '(self' → logprob: -17.375059127807617
    6. '	self' → logprob: -18.625059127807617
    7. '=self' → logprob: -19.125059127807617
    8. '[self' → logprob: -19.125059127807617
    9. '   ' → logprob: -19.375059127807617
    10. '           ' → logprob: -19.875059127807617

Token 735: '.cache' (ID: 37175)
  Prédit: '.cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cache' → logprob: -0.018155328929424286
    2. 'cache' → logprob: -4.018155097961426
    3. 'self' → logprob: -12.518155097961426
    4. ' cache' → logprob: -14.268155097961426
    5. '_cache' → logprob: -14.393155097961426
    6. '	cache' → logprob: -14.643155097961426
    7. '.' → logprob: -15.768155097961426
    8. ' .' → logprob: -18.518156051635742
    9. '.cached' → logprob: -19.018156051635742
    10. 'Cache' → logprob: -19.268156051635742

Token 736: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004997617099434137
    2. ':
' → logprob: -5.629997730255127
    3. ':return' → logprob: -6.629997730255127
    4. '       ' → logprob: -10.004997253417969
    5. ',' → logprob: -11.879997253417969
    6. ' and' → logprob: -11.879997253417969
    7. '=' → logprob: -12.629997253417969
    8. '           ' → logprob: -12.754997253417969
    9. '<|end|>' → logprob: -12.879997253417969
    10. '   ' → logprob: -13.504997253417969

Token 737: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5499178767204285
    2. '           ' → logprob: -0.9249178767204285
    3. 'return' → logprob: -4.049917697906494
    4. ' return' → logprob: -4.799917697906494
    5. '   ' → logprob: -7.674917697906494
    6. ':return' → logprob: -8.299918174743652
    7. '{return' → logprob: -10.799918174743652
    8. '	return' → logprob: -10.799918174743652
    9. '
' → logprob: -11.674918174743652
    10. ')return' → logprob: -12.549918174743652

Token 738: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2130281776189804
    2. ' return' → logprob: -1.7130281925201416
    3. '           ' → logprob: -4.4630279541015625
    4. ':return' → logprob: -11.338027954101562
    5. '	return' → logprob: -13.088027954101562
    6. '       ' → logprob: -13.213027954101562
    7. '{return' → logprob: -13.463027954101562
    8. '
' → logprob: -13.838027954101562
    9. '   ' → logprob: -13.838027954101562
    10. ')return' → logprob: -14.588027954101562

Token 739: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.941850526549388e-06
    2. ' self' → logprob: -11.750007629394531
    3. '[self' → logprob: -19.75000762939453
    4. '(self' → logprob: -21.25000762939453
    5. '	self' → logprob: -21.50000762939453
    6. '       ' → logprob: -21.87500762939453
    7. '   ' → logprob: -22.37500762939453
    8. '
' → logprob: -22.50000762939453
    9. 's' → logprob: -22.75000762939453
    10. '           ' → logprob: -23.00000762939453

Token 740: '.cache' (ID: 37175)
  Prédit: '.cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cache' → logprob: -2.1008713702030946e-06
    2. 'cache' → logprob: -13.125001907348633
    3. '.cached' → logprob: -17.625001907348633
    4. '	cache' → logprob: -18.250001907348633
    5. '.' → logprob: -19.125001907348633
    6. ' .' → logprob: -19.625001907348633
    7. '_cache' → logprob: -20.625001907348633
    8. ' cache' → logprob: -21.250001907348633
    9. 'CACHE' → logprob: -21.375001907348633
    10. '.c' → logprob: -21.625001907348633

Token 741: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.750001907348633
    3. '[
' → logprob: -14.375001907348633
    4. '[token' → logprob: -17.500001907348633
    5. 'key' → logprob: -17.875001907348633
    6. '(key' → logprob: -19.000001907348633
    7. '
' → logprob: -19.875001907348633
    8. '\[' → logprob: -20.000001907348633
    9. '[val' → logprob: -20.375001907348633
    10. '[value' → logprob: -20.625001907348633

Token 742: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011275818571448326
    2. ']
' → logprob: -4.511275768280029
    3. ']
' → logprob: -9.261276245117188
    4. '       ' → logprob: -9.386276245117188
    5. ' ]' → logprob: -10.136276245117188
    6. '   ' → logprob: -12.386276245117188
    7. ']

' → logprob: -12.886276245117188
    8. ' ]
' → logprob: -13.386276245117188
    9. ')]' → logprob: -15.636276245117188
    10. ')' → logprob: -15.886276245117188

Token 743: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004452083958312869
    2. ' if' → logprob: -7.875445365905762
    3. '<|end|>' → logprob: -10.375445365905762
    4. 'if' → logprob: -11.125445365905762
    5. '        
' → logprob: -11.500445365905762
    6. '
' → logprob: -12.125445365905762
    7. '```' → logprob: -13.375445365905762
    8. '   ' → logprob: -14.500445365905762
    9. '      ' → logprob: -15.625445365905762
    10. '<|end|>' → logprob: -15.625445365905762

Token 744: ' current' (ID: 2208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5621402263641357
    2. '       ' → logprob: -0.9371402263641357
    3. 'current' (adapté à ' current') → logprob: -3.4371402263641357
    4. '#' → logprob: -6.062140464782715
    5. 'coverage' → logprob: -6.687140464782715
    6. ' if' → logprob: -6.812140464782715
    7. '   ' → logprob: -8.062140464782715
    8. 'cover' → logprob: -8.562140464782715
    9. 'covered' → logprob: -8.687140464782715
    10. 'next' → logprob: -8.937140464782715

Token 745: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.13472764194011688
    2. '_pos' → logprob: -2.634727716445923
    3. 'spr' → logprob: -3.259727716445923
    4. '=' → logprob: -5.134727478027344
    5. '_' → logprob: -5.259727478027344
    6. 'pos' → logprob: -6.134727478027344
    7. 's' → logprob: -6.759727478027344
    8. ' =' → logprob: -7.134727478027344
    9. '_cover' → logprob: -8.009727478027344
    10. '_position' → logprob: -9.009727478027344

Token 746: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.015800779685378075
    2. 'elf' → logprob: -5.015800952911377
    3. 'p' → logprob: -5.890800952911377
    4. 'e' → logprob: -6.015800952911377
    5. 'printer' → logprob: -7.265800952911377
    6. 'spr' → logprob: -7.890800952911377
    7. '_pr' → logprob: -8.140800476074219
    8. '=' → logprob: -8.640800476074219
    9. '   ' → logprob: -8.765800476074219
    10. 'et' → logprob: -8.890800476074219

Token 747: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.0002509687910787761
    2. 'inkl' → logprob: -8.625250816345215
    3. 'inkles' → logprob: -10.875250816345215
    4. 'inkle' → logprob: -11.125250816345215
    5. 'inker' → logprob: -11.375250816345215
    6. 'k' → logprob: -12.500250816345215
    7. 'inter' → logprob: -12.500250816345215
    8. '   ' → logprob: -12.750250816345215
    9. '       ' → logprob: -13.375250816345215
    10. 'link' → logprob: -13.500250816345215

Token 748: 'ler' (ID: 1639)
  Prédit: 'ler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ler' → logprob: -0.05739225819706917
    2. 'er' → logprob: -3.3073923587799072
    3. 'lers' → logprob: -4.307392120361328
    4. 'ers' → logprob: -5.307392120361328
    5. 'ink' → logprob: -8.682392120361328
    6. 'l' → logprob: -8.807392120361328
    7. 'k' → logprob: -9.307392120361328
    8. 'kl' → logprob: -10.369892120361328
    9. 'ker' → logprob: -10.619892120361328
    10. '   ' → logprob: -11.182392120361328

Token 749: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043004110455513
    2. '=' → logprob: -3.168004035949707
    3. '   ' → logprob: -14.043004035949707
    4. ':' → logprob: -14.293004035949707
    5. ' ' → logprob: -14.293004035949707
    6. '.c' → logprob: -14.668004035949707
    7. '=self' → logprob: -14.918004035949707
    8. '.cover' → logprob: -14.918004035949707
    9. '=c' → logprob: -14.918004035949707
    10. '.' → logprob: -15.293004035949707

Token 750: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804987296462059
    2. ' self' → logprob: -3.2880499362945557
    3. '       ' → logprob: -11.788049697875977
    4. '	self' → logprob: -15.038049697875977
    5. '(self' → logprob: -15.663049697875977
    6. '=self' → logprob: -15.913049697875977
    7. '   ' → logprob: -16.038049697875977
    8. '[self' → logprob: -16.413049697875977
    9. '           ' → logprob: -17.663049697875977
    10. ' ' → logprob: -17.788049697875977

Token 751: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.11049946397542953
    2. 's' → logprob: -2.360499382019043
    3. 'spr' → logprob: -4.610499382019043
    4. 'pr' → logprob: -8.360499382019043
    5. '_s' → logprob: -10.610499382019043
    6. 'self' → logprob: -11.110499382019043
    7. ' sprinkler' → logprob: -12.485499382019043
    8. '```' → logprob: -12.860499382019043
    9. '	s' → logprob: -13.110499382019043
    10. '   ' → logprob: -13.860499382019043

Token 752: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.2917279303073883
    2. 'elf' → logprob: -2.0417280197143555
    3. 'e' → logprob: -2.1667280197143555
    4. 'self' → logprob: -6.4167280197143555
    5. 'r' → logprob: -6.5417280197143555
    6. 'equ' → logprob: -6.5417280197143555
    7. 'eq' → logprob: -6.7917280197143555
    8. 'q' → logprob: -7.6667280197143555
    9. 'el' → logprob: -7.9167280197143555
    10. 'ink' → logprob: -8.041728019714355

Token 753: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.0017608561320230365
    2. 'inkl' → logprob: -6.751760959625244
    3. '{"' → logprob: -8.251760482788086
    4. 'inkles' → logprob: -9.876760482788086
    5. '```' → logprob: -9.876760482788086
    6. 'inkle' → logprob: -10.126760482788086
    7. '{' → logprob: -10.126760482788086
    8. 'link' → logprob: -11.251760482788086
    9. 'in' → logprob: -11.376760482788086
    10. '   ' → logprob: -11.501760482788086

Token 754: 'ler' (ID: 1639)
  Prédit: 'lers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lers' → logprob: -0.10028517246246338
    2. 'ler' → logprob: -2.475285053253174
    3. 'ers' → logprob: -4.600285053253174
    4. 'er' → logprob: -8.100285530090332
    5. 'l' → logprob: -8.475285530090332
    6. 'ink' → logprob: -8.850285530090332
    7. 'k' → logprob: -8.850285530090332
    8. 'r' → logprob: -8.975285530090332
    9. 'kl' → logprob: -9.100285530090332
    10. 'kers' → logprob: -9.725285530090332

Token 755: '_seq' (ID: 34260)
  Prédit: '_seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -0.03975179046392441
    2. 'seq' → logprob: -3.4147517681121826
    3. 'self' → logprob: -5.539752006530762
    4. 's' → logprob: -6.539752006530762
    5. '_sequence' → logprob: -8.164752006530762
    6. '_at' → logprob: -8.414752006530762
    7. 'sequence' → logprob: -9.789752006530762
    8. 'Seq' → logprob: -9.914752006530762
    9. 'Sequence' → logprob: -10.164752006530762
    10. '[self' → logprob: -11.164752006530762

Token 756: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.0007854487630538642
    2. '.' → logprob: -7.6257853507995605
    3. 's' → logprob: -8.750785827636719
    4. 'spr' → logprob: -9.125785827636719
    5. ' .' → logprob: -11.125785827636719
    6. '   ' → logprob: -11.500785827636719
    7. '\.' → logprob: -14.125785827636719
    8. '.
' → logprob: -14.250785827636719
    9. '```' → logprob: -14.250785827636719
    10. '.sponge' → logprob: -14.375785827636719

Token 757: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -3.774276774493046e-05
    2. 'p' → logprob: -11.250038146972656
    3. 'r' → logprob: -11.625038146972656
    4. '[' → logprob: -11.750038146972656
    5. 'pl' → logprob: -12.750038146972656
    6. '```' → logprob: -13.750038146972656
    7. '``' → logprob: -14.750038146972656
    8. 'rink' → logprob: -15.000038146972656
    9. '   ' → logprob: -15.250038146972656
    10. '{' → logprob: -15.250038146972656

Token 758: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.000145137935760431
    2. 'inkl' → logprob: -9.500144958496094
    3. 'inkles' → logprob: -10.875144958496094
    4. '{"' → logprob: -11.250144958496094
    5. 'inkle' → logprob: -11.875144958496094
    6. 'kl' → logprob: -12.125144958496094
    7. 'link' → logprob: -12.500144958496094
    8. 'in' → logprob: -12.875144958496094
    9. 'lers' → logprob: -12.875144958496094
    10. 'k' → logprob: -13.000144958496094

Token 759: 'ler' (ID: 1639)
  Prédit: 'ers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -0.20147521793842316
    2. 'lers' → logprob: -1.7014752626419067
    3. 'ors' → logprob: -11.451475143432617
    4. 'kers' → logprob: -11.451475143432617
    5. 'rs' → logprob: -11.576475143432617
    6. 'ayers' → logprob: -12.076475143432617
    7. 'ler' → logprob: -12.326475143432617
    8. 'l' → logprob: -12.701475143432617
    9. '[' → logprob: -12.826475143432617
    10. ' ers' → logprob: -13.201475143432617

Token 760: '_at' (ID: 8254)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6997445821762085
    2. '_at' → logprob: -0.6997445821762085
    3. 'at' → logprob: -5.074744701385498
    4. 'sat' → logprob: -9.07474422454834
    5. '[idx' → logprob: -9.69974422454834
    6. '[s' → logprob: -9.82474422454834
    7. 'At' → logprob: -9.82474422454834
    8. '	at' → logprob: -12.19974422454834
    9. '[' → logprob: -12.32474422454834
    10. 'ats' → logprob: -12.44974422454834

Token 761: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.00036846695002168417
    2. 'idx' → logprob: -8.500368118286133
    3. '(index' → logprob: -9.250368118286133
    4. '(' → logprob: -10.000368118286133
    5. ' idx' → logprob: -11.750368118286133
    6. '[idx' → logprob: -12.250368118286133
    7. '(
' → logprob: -12.500368118286133
    8. ' (' → logprob: -13.000368118286133
    9. '(id' → logprob: -13.500368118286133
    10. '(key' → logprob: -14.625368118286133

Token 762: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04870864003896713
    2. ')
' → logprob: -3.04870867729187
    3. '())' → logprob: -9.92370891571045
    4. '       ' → logprob: -10.29870891571045
    5. ')
' → logprob: -11.29870891571045
    6. '())
' → logprob: -11.67370891571045
    7. ')

' → logprob: -12.17370891571045
    8. '   ' → logprob: -12.42370891571045
    9. '()' → logprob: -12.79870891571045
    10. ' )' → logprob: -12.92370891571045

Token 763: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027356047183275223
    2. 'if' → logprob: -3.6523561477661133
    3. ' if' → logprob: -6.902356147766113
    4. '```' → logprob: -11.152356147766113
    5. 'pos' → logprob: -11.402356147766113
    6. 'current' → logprob: -11.402356147766113
    7. '   ' → logprob: -12.527356147766113
    8. '
' → logprob: -12.777356147766113
    9. '        
' → logprob: -12.777356147766113
    10. 'next' → logprob: -14.152356147766113

Token 764: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011345830745995045
    2. '       ' → logprob: -4.761345863342285
    3. 'in' → logprob: -6.636345863342285
    4. ' if' → logprob: -7.261345863342285
    5. '#' → logprob: -7.636345863342285
    6. 'can' → logprob: -9.511345863342285
    7. 'current' → logprob: -10.261345863342285
    8. 'covered' → logprob: -10.386345863342285
    9. 'cover' → logprob: -10.636345863342285
    10. 'inside' → logprob: -10.761345863342285

Token 765: ' must' (ID: 2804)
  Prédit: 'must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'must' → logprob: -0.043938085436820984
    2. 'not' → logprob: -3.293938159942627
    3. ' must' → logprob: -5.793938159942627
    4. ' not' → logprob: -6.793938159942627
    5. '(not' → logprob: -6.793938159942627
    6. '   ' → logprob: -7.668938159942627
    7. '(m' → logprob: -10.543937683105469
    8. ' ' → logprob: -10.543937683105469
    9. '    ' → logprob: -11.543937683105469
    10. '(' → logprob: -11.543937683105469

Token 766: '_jump' (ID: 164075)
  Prédit: '_jump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_jump' → logprob: -1.9743012671824545e-05
    2. '_continue' → logprob: -11.875020027160645
    3. '_' → logprob: -12.125020027160645
    4. '_move' → logprob: -12.750020027160645
    5. 'jump' → logprob: -13.625020027160645
    6. 'Jump' → logprob: -14.000020027160645
    7. '_j' → logprob: -14.250020027160645
    8. '_skip' → logprob: -15.000020027160645
    9. '_throw' → logprob: -15.500020027160645
    10. '_have' → logprob: -15.500020027160645

Token 767: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3604535758495331
    2. 'and' → logprob: -1.2354536056518555
    3. ':' → logprob: -4.7354536056518555
    4. '==' → logprob: -6.6104536056518555
    5. ':
' → logprob: -6.7354536056518555
    6. '       ' → logprob: -8.860453605651855
    7. '   ' → logprob: -8.860453605651855
    8. '=' → logprob: -9.360453605651855
    9. ' ' → logprob: -9.485453605651855
    10. '           ' → logprob: -9.485453605651855

Token 768: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051988497376441956
    2. '           ' → logprob: -4.05198860168457
    3. ' and' → logprob: -4.05198860168457
    4. ':
' → logprob: -4.92698860168457
    5. ' if' → logprob: -5.30198860168457
    6. ':' → logprob: -6.30198860168457
    7. '
' → logprob: -7.17698860168457
    8. '        
' → logprob: -8.17698860168457
    9. 'if' → logprob: -9.05198860168457
    10. '):
' → logprob: -9.17698860168457

Token 769: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03225754201412201
    2. ' for' → logprob: -3.532257556915283
    3. '#' (adapté à ' #') → logprob: -6.407257556915283
    4. '       ' → logprob: -8.157257080078125
    5. 'can' → logprob: -8.782257080078125
    6. '           ' → logprob: -9.157257080078125
    7. 'found' → logprob: -9.282257080078125
    8. 'possible' → logprob: -9.532257080078125
    9. ' #' → logprob: -10.532257080078125
    10. 'moves' → logprob: -10.657257080078125

Token 770: ' Must' (ID: 20953)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013074465095996857
    2. '#' → logprob: -4.6380743980407715
    3. 'moves' → logprob: -6.8880743980407715
    4. 'possible' → logprob: -7.3880743980407715
    5. ' for' → logprob: -7.7630743980407715
    6. 'found' → logprob: -7.7630743980407715
    7. '           ' → logprob: -7.7630743980407715
    8. 'can' → logprob: -9.01307487487793
    9. 'valid' → logprob: -9.13807487487793
    10. 'next' → logprob: -10.51307487487793

Token 771: ' jump' (ID: 13843)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.22495675086975098
    2. 'be' → logprob: -1.724956750869751
    3. 'for' → logprob: -4.849956512451172
    4. ' for' → logprob: -5.599956512451172
    5. ' in' → logprob: -5.974956512451172
    6. 'in' → logprob: -6.224956512451172
    7. '_be' → logprob: -6.974956512451172
    8. 'jump' → logprob: -6.974956512451172
    9. 'move' → logprob: -7.099956512451172
    10. ' move' → logprob: -7.224956512451172

Token 772: ' once' (ID: 4730)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42631030082702637
    2. ' for' → logprob: -1.1763103008270264
    3. '               ' → logprob: -4.1763105392456055
    4. 'for' → logprob: -4.1763105392456055
    5. 'positions' → logprob: -6.3013105392456055
    6. ' found' → logprob: -6.5513105392456055
    7. ':' → logprob: -7.0513105392456055
    8. ' positions' → logprob: -7.3013105392456055
    9. ' next' → logprob: -7.4263105392456055
    10. ' any' → logprob: -7.6763105392456055

Token 773: ' now' (ID: 1954)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24542900919914246
    2. ' for' → logprob: -1.8704290390014648
    3. '       ' → logprob: -3.120429039001465
    4. ' to' → logprob: -4.995429039001465
    5. 'for' → logprob: -4.995429039001465
    6. ',' → logprob: -6.620429039001465
    7. ' next' → logprob: -6.745429039001465
    8. ' at' → logprob: -6.995429039001465
    9. ' and' → logprob: -7.870429039001465
    10. ':' → logprob: -7.870429039001465

Token 774: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005674490821547806
    2. ' for' → logprob: -8.125567436218262
    3. '
' → logprob: -8.750567436218262
    4. ',' → logprob: -9.750567436218262
    5. ':' → logprob: -11.375567436218262
    6. '            
' → logprob: -11.625567436218262
    7. 'for' → logprob: -11.750567436218262
    8. ':
' → logprob: -12.125567436218262
    9. '               ' → logprob: -12.500567436218262
    10. '       ' → logprob: -12.625567436218262

Token 775: ' a' (ID: 261)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.08133470267057419
    2. 'continue' → logprob: -3.4563345909118652
    3. 'a' → logprob: -3.7063345909118652
    4. ' any' → logprob: -4.956334590911865
    5. 'next' → logprob: -5.081334590911865
    6. 'reach' → logprob: -6.456334590911865
    7. 'find' → logprob: -6.706334590911865
    8. 'get' → logprob: -6.831334590911865
    9. 'sur' → logprob: -7.081334590911865
    10. 'escape' → logprob: -7.331334590911865

Token 776: ' coverage' (ID: 13422)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7618864178657532
    2. 'pos' → logprob: -0.8868864178657532
    3. 'position' → logprob: -2.8868863582611084
    4. 'new' → logprob: -3.6368863582611084
    5. 'move' → logprob: -3.8868863582611084
    6. 'valid' → logprob: -5.2618865966796875
    7. ' next' → logprob: -5.3868865966796875
    8. 'p' → logprob: -6.5118865966796875
    9. 'for' → logprob: -6.7618865966796875
    10. 'covered' → logprob: -7.0118865966796875

Token 777: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49452805519104004
    2. '           ' → logprob: -1.74452805519104
    3. 'of' → logprob: -3.36952805519104
    4. 'area' → logprob: -3.49452805519104
    5. 'position' → logprob: -3.61952805519104
    6. ' of' → logprob: -3.61952805519104
    7. 'pos' → logprob: -3.86952805519104
    8. 'for' → logprob: -4.119527816772461
    9. ' area' → logprob: -4.369527816772461
    10. '               ' → logprob: -4.994527816772461

Token 778: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.004195694345980883
    2. ' current' → logprob: -5.504195690155029
    3. 'next' → logprob: -9.379196166992188
    4. 'self' → logprob: -11.129196166992188
    5. 'the' → logprob: -11.629196166992188
    6. '(current' → logprob: -11.879196166992188
    7. ' next' → logprob: -13.629196166992188
    8. '[current' → logprob: -14.879196166992188
    9. ' the' → logprob: -15.629196166992188
    10. '=current' → logprob: -15.879196166992188

Token 779: ' sprinkler' (ID: 181940)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00011188744247192517
    2. 's' → logprob: -9.37511157989502
    3. 'spr' → logprob: -10.75011157989502
    4. '_' → logprob: -12.50011157989502
    5. 'Spr' → logprob: -14.12511157989502
    6. '   ' → logprob: -15.37511157989502
    7. 'current' → logprob: -15.75011157989502
    8. '
' → logprob: -15.87511157989502
    9. '_
' → logprob: -16.375112533569336
    10. ' ' → logprob: -16.625112533569336

Token 780: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034556567668914795
    2. '
' → logprob: -3.5345566272735596
    3. ' for' → logprob: -6.0345563888549805
    4. '       ' → logprob: -6.7845563888549805
    5. '            
' → logprob: -7.9095563888549805
    6. ',' → logprob: -8.15955638885498
    7. 'for' → logprob: -8.78455638885498
    8. ':' → logprob: -9.03455638885498
    9. '               ' → logprob: -9.65955638885498
    10. '
' → logprob: -9.78455638885498

Token 781: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10700137168169022
    2. '
' → logprob: -2.357001304626465
    3. '           ' → logprob: -5.107001304626465
    4. '        
' → logprob: -7.857001304626465
    5. ':
' → logprob: -9.482001304626465
    6. ',' → logprob: -9.482001304626465
    7. ' for' → logprob: -9.857001304626465
    8. ':' → logprob: -10.232001304626465
    9. '  
' → logprob: -10.982001304626465
    10. '            
' → logprob: -11.482001304626465

Token 782: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.031214965507388115
    2. ' for' → logprob: -3.531214952468872
    3. '       ' → logprob: -6.656215190887451
    4. '           ' → logprob: -8.656214714050293
    5. 'found' → logprob: -13.656214714050293
    6. '
' → logprob: -13.906214714050293
    7. '   ' → logprob: -15.031214714050293
    8. '               ' → logprob: -15.156214714050293
    9. '	for' → logprob: -15.781214714050293
    10. 'result' → logprob: -15.906214714050293

Token 783: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.09709054231643677
    2. 'move' → logprob: -3.347090482711792
    3. 'new' → logprob: -3.472090482711792
    4. 'np' → logprob: -3.972090482711792
    5. 'npos' → logprob: -5.972090721130371
    6. ' next' → logprob: -6.097090721130371
    7. 'n' → logprob: -6.472090721130371
    8. '   ' → logprob: -8.222090721130371
    9. 'jump' → logprob: -8.347090721130371
    10. ' move' → logprob: -8.722090721130371

Token 784: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.009396791458129883
    2. '_move' → logprob: -4.759396553039551
    3. '_' → logprob: -8.00939655303955
    4. '_position' → logprob: -8.13439655303955
    5. 'pos' → logprob: -8.88439655303955
    6. ' in' → logprob: -11.25939655303955
    7. ' _' → logprob: -13.13439655303955
    8. '_token' → logprob: -13.88439655303955
    9. 'move' → logprob: -14.00939655303955
    10. 'Pos' → logprob: -15.13439655303955

Token 785: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033683739602565765
    2. 'in' → logprob: -3.4086837768554688
    3. 'self' → logprob: -11.158683776855469
    4. 's' → logprob: -11.783683776855469
    5. ' ' → logprob: -12.408683776855469
    6. 'import' → logprob: -12.658683776855469
    7. '	in' → logprob: -13.533683776855469
    8. ' ' → logprob: -13.908683776855469
    9. ',' → logprob: -14.283683776855469
    10. '
' → logprob: -14.533683776855469

Token 786: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002485288307070732
    2. ' self' → logprob: -6.002485275268555
    3. '           ' → logprob: -11.752485275268555
    4. '(self' → logprob: -13.752485275268555
    5. '[self' → logprob: -15.002485275268555
    6. '               ' → logprob: -15.502485275268555
    7. 'current' → logprob: -16.502485275268555
    8. '=self' → logprob: -16.877485275268555
    9. '   ' → logprob: -17.127485275268555
    10. '	self' → logprob: -17.502485275268555

Token 787: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -3.5358694731257856e-05
    2. 'movement' → logprob: -11.000035285949707
    3. '.valid' → logprob: -11.625035285949707
    4. '   ' → logprob: -12.625035285949707
    5. '           ' → logprob: -13.000035285949707
    6. '       ' → logprob: -13.250035285949707
    7. 'valid' → logprob: -14.375035285949707
    8. '.mov' → logprob: -14.625035285949707
    9. 'm' → logprob: -14.875035285949707
    10. '     ' → logprob: -15.750035285949707

Token 788: 'ovement' (ID: 75257)
  Prédit: 'ovement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ovement' → logprob: -0.03069251775741577
    2. '.m' → logprob: -3.5306925773620605
    3. 'movement' → logprob: -7.4056925773620605
    4. 'ov' → logprob: -8.530692100524902
    5. '.' → logprob: -10.780692100524902
    6. '   ' → logprob: -11.155692100524902
    7. 'vement' → logprob: -11.155692100524902
    8. '.valid' → logprob: -11.280692100524902
    9. '.v' → logprob: -11.280692100524902
    10. 'oves' → logprob: -11.780692100524902

Token 789: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -8.006006828509271e-05
    2. '._' → logprob: -10.125080108642578
    3. 'model' → logprob: -10.875080108642578
    4. '.valid' → logprob: -11.125080108642578
    5. '.next' → logprob: -13.375080108642578
    6. '.j' → logprob: -13.500080108642578
    7. 'Model' → logprob: -13.875080108642578
    8. '.model' → logprob: -14.250080108642578
    9. 'valid' → logprob: -14.875080108642578
    10. '   ' → logprob: -14.875080108642578

Token 790: '.valid' (ID: 41805)
  Prédit: '.valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.valid' → logprob: -8.2994620242971e-06
    2. 'valid' → logprob: -12.250008583068848
    3. '.next' → logprob: -12.875008583068848
    4. ' .' → logprob: -14.750008583068848
    5. '.' → logprob: -15.625008583068848
    6. '	valid' → logprob: -15.750008583068848
    7. ' valid' → logprob: -16.75000762939453
    8. '   ' → logprob: -17.12500762939453
    9. 'Valid' → logprob: -17.62500762939453
    10. '.invalid' → logprob: -17.75000762939453

Token 791: '_moves' (ID: 110706)
  Prédit: '_moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.000193527273950167
    2. '_' → logprob: -8.75019359588623
    3. '_positions' → logprob: -10.37519359588623
    4. '_move' → logprob: -13.50019359588623
    5. 'moves' → logprob: -14.12519359588623
    6. '_
' → logprob: -14.50019359588623
    7. '_mov' → logprob: -14.75019359588623
    8. '_matches' → logprob: -16.125192642211914
    9. '```' → logprob: -16.250192642211914
    10. '_changes' → logprob: -16.375192642211914

Token 792: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0033931334037333727
    2. '(current' → logprob: -5.753393173217773
    3. '(' → logprob: -9.253393173217773
    4. '(position' → logprob: -9.503393173217773
    5. ' (' → logprob: -10.753393173217773
    6. '(prev' → logprob: -12.128393173217773
    7. ')' → logprob: -12.628393173217773
    8. '(next' → logprob: -13.003393173217773
    9. 'pos' → logprob: -13.253393173217773
    10. '   ' → logprob: -13.753393173217773

Token 793: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009693054482340813
    2. '):
' → logprob: -4.884693145751953
    3. ' ):' → logprob: -6.634693145751953
    4. ')' → logprob: -7.384693145751953
    5. '):
' → logprob: -10.009693145751953
    6. '(next' → logprob: -10.509693145751953
    7. ':' → logprob: -11.259693145751953
    8. '()' → logprob: -11.509693145751953
    9. ' ):
' → logprob: -11.509693145751953
    10. '():' → logprob: -11.884693145751953

Token 794: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00020914296328555793
    2. ' if' → logprob: -8.750208854675293
    3. '<|end|>' → logprob: -10.625208854675293
    4. '           ' → logprob: -11.125208854675293
    5. '                
' → logprob: -12.750208854675293
    6. 'if' → logprob: -13.125208854675293
    7. '                ' → logprob: -13.625208854675293
    8. '	           ' → logprob: -14.000208854675293
    9. '                   ' → logprob: -14.000208854675293
    10. '              ' → logprob: -14.250208854675293

Token 795: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7315366268157959
    2. '                   ' → logprob: -1.356536626815796
    3. '               ' → logprob: -1.981536626815796
    4. ' if' → logprob: -2.106536626815796
    5. '           ' → logprob: -6.481536865234375
    6. '   ' → logprob: -8.981536865234375
    7. '                       ' → logprob: -10.856536865234375
    8. '
' → logprob: -10.981536865234375
    9. ' ' → logprob: -11.356536865234375
    10. '	           ' → logprob: -11.481536865234375

Token 796: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.014164921827614307
    2. ' current' → logprob: -4.264164924621582
    3. '(current' → logprob: -15.014164924621582
    4. '                   ' → logprob: -15.264164924621582
    5. '               ' → logprob: -15.389164924621582
    6. '   ' → logprob: -15.514164924621582
    7. '	current' → logprob: -15.639164924621582
    8. '[current' → logprob: -16.139163970947266
    9. '           ' → logprob: -16.389163970947266
    10. '$current' → logprob: -17.139163970947266

Token 797: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -3.047134305234067e-05
    2. '_' → logprob: -10.625030517578125
    3. '._' → logprob: -13.125030517578125
    4. 's' → logprob: -13.500030517578125
    5. ' _' → logprob: -13.750030517578125
    6. '_
' → logprob: -14.375030517578125
    7. '
' → logprob: -15.250030517578125
    8. '_.' → logprob: -16.000030517578125
    9. 'S' → logprob: -16.250030517578125
    10. 'Spr' → logprob: -16.250030517578125

Token 798: 'pr' (ID: 638)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.2061365395784378
    2. 'pr' → logprob: -1.8311365842819214
    3. 'spr' → logprob: -3.706136465072632
    4. 's' → logprob: -7.081136703491211
    5. '_pr' → logprob: -8.081136703491211
    6. '_' → logprob: -9.456136703491211
    7. 'pos' → logprob: -9.956136703491211
    8. 'Spr' → logprob: -10.206136703491211
    9. '_p' → logprob: -10.456136703491211
    10. '.s' → logprob: -10.831136703491211

Token 799: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.0011805851245298982
    2. 'inker' → logprob: -8.251180648803711
    3. 'inkl' → logprob: -8.626180648803711
    4. 'inter' → logprob: -9.001180648803711
    5. '```' → logprob: -9.251180648803711
    6. 'inkle' → logprob: -9.376180648803711
    7. 'link' → logprob: -9.876180648803711
    8. 'nk' → logprob: -10.001180648803711
    9. 'k' → logprob: -10.501180648803711
    10. '{"' → logprob: -10.813680648803711

Token 800: 'ler' (ID: 1639)
  Prédit: 'ler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ler' → logprob: -0.18357710540294647
    2. 'er' → logprob: -1.808577060699463
    3. 'rer' → logprob: -5.683577060699463
    4. 'ter' → logprob: -9.183577537536621
    5. 'r' → logprob: -9.308577537536621
    6. 'ow' → logprob: -9.808577537536621
    7. 'ker' → logprob: -10.308577537536621
    8. 'ower' → logprob: -10.808577537536621
    9. 'ayer' → logprob: -10.808577537536621
    10. 'er's' → logprob: -11.058577537536621

Token 801: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.0002371521550230682
    2. '.cover' → logprob: -9.000237464904785
    3. '.' → logprob: -9.125237464904785
    4. ' .' → logprob: -12.500237464904785
    5. ').' → logprob: -15.250237464904785
    6. '.s' → logprob: -15.375237464904785
    7. '   ' → logprob: -15.875237464904785
    8. '>.' → logprob: -16.00023651123047
    9. '.controls' → logprob: -16.87523651123047
    10. '.can' → logprob: -17.00023651123047

Token 802: 'overs' (ID: 21115)
  Prédit: 'overs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'overs' → logprob: -0.0003986144147347659
    2. 'over' → logprob: -8.375398635864258
    3. 'covers' → logprob: -8.750398635864258
    4. 'o' → logprob: -12.750398635864258
    5. 'ov' → logprob: -13.125398635864258
    6. '```' → logprob: -13.500398635864258
    7. ' overs' → logprob: -13.750398635864258
    8. 'vers' → logprob: -13.875398635864258
    9. 'oves' → logprob: -14.875398635864258
    10. 'Overs' → logprob: -15.875398635864258

Token 803: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -9.610702363715973e-06
    2. 'next' → logprob: -11.625009536743164
    3. '(' → logprob: -15.250009536743164
    4. ' (' → logprob: -15.875009536743164
    5. ' next' → logprob: -16.125009536743164
    6. '[next' → logprob: -16.375009536743164
    7. ',next' → logprob: -19.125009536743164
    8. '(
' → logprob: -19.625009536743164
    9. ')' → logprob: -20.125009536743164
    10. '	next' → logprob: -20.625009536743164

Token 804: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.173704271830502e-06
    2. '(next' → logprob: -13.25000286102295
    3. 'pos' → logprob: -13.62500286102295
    4. '_token' → logprob: -17.000003814697266
    5. '_position' → logprob: -17.375003814697266
    6. 'Pos' → logprob: -17.375003814697266
    7. 'next' → logprob: -17.625003814697266
    8. '_' → logprob: -17.750003814697266
    9. '_positions' → logprob: -17.750003814697266
    10. '(pos' → logprob: -18.250003814697266

Token 805: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5768272280693054
    2. '):
' → logprob: -0.8268272280693054
    3. ')' → logprob: -7.576827049255371
    4. '                   ' → logprob: -8.826827049255371
    5. '):
' → logprob: -9.326827049255371
    6. '):

' → logprob: -9.701827049255371
    7. '               ' → logprob: -10.451827049255371
    8. '                       ' → logprob: -10.701827049255371
    9. ':' → logprob: -11.451827049255371
    10. '           ' → logprob: -12.326827049255371

Token 806: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00019424250058364123
    2. '                       ' → logprob: -9.375194549560547
    3. ' if' → logprob: -10.000194549560547
    4. 'if' → logprob: -10.625194549560547
    5. '               ' → logprob: -11.750194549560547
    6. '           ' → logprob: -11.875194549560547
    7. ' return' → logprob: -12.125194549560547
    8. 'return' → logprob: -12.375194549560547
    9. '                    
' → logprob: -12.500194549560547
    10. ',' → logprob: -12.875194549560547

Token 807: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003669317811727524
    2. ' if' → logprob: -6.003669261932373
    3. '                       ' → logprob: -6.753669261932373
    4. '                   ' → logprob: -10.628669738769531
    5. 'return' → logprob: -14.003669738769531
    6. 'result' → logprob: -14.753669738769531
    7. '           ' → logprob: -15.878669738769531
    8. '                           ' → logprob: -15.878669738769531
    9. '       ' → logprob: -16.00366973876953
    10. '               ' → logprob: -16.12866973876953

Token 808: ' After' (ID: 6311)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.013429614715278149
    2. ' if' → logprob: -4.513429641723633
    3. 'res' → logprob: -6.638429641723633
    4. '                   ' → logprob: -7.513429641723633
    5. '                       ' → logprob: -7.763429641723633
    6. 'result' → logprob: -10.138429641723633
    7. ' res' → logprob: -10.638429641723633
    8. 'found' → logprob: -10.763429641723633
    9. 'self' → logprob: -12.013429641723633
    10. '#' → logprob: -13.263429641723633

Token 809: ' jump' (ID: 13843)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jump' → logprob: -1.4992564916610718
    2. ' next' → logprob: -1.6242564916610718
    3. 'next' → logprob: -1.6242564916610718
    4. ' this' → logprob: -2.8742566108703613
    5. '_jump' → logprob: -3.2492566108703613
    6. 'this' → logprob: -3.2492566108703613
    7. ' the' → logprob: -3.3742566108703613
    8. 'self' → logprob: -4.124256610870361
    9. ' all' → logprob: -4.124256610870361
    10. 'all' → logprob: -4.374256610870361

Token 810: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.24439051747322083
    2. '                       ' → logprob: -1.8693904876708984
    3. ',' → logprob: -3.4943904876708984
    4. ' return' → logprob: -3.9943904876708984
    5. 'return' → logprob: -4.619390487670898
    6. ':' → logprob: -6.619390487670898
    7. ':
' → logprob: -7.869390487670898
    8. 'self' → logprob: -7.869390487670898
    9. ' cache' → logprob: -8.494390487670898
    10. ' self' → logprob: -8.619390487670898

Token 811: ' p' (ID: 275)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11286532878875732
    2. 'result' → logprob: -3.237865447998047
    3. ' if' → logprob: -3.487865447998047
    4. 'res' → logprob: -3.737865447998047
    5. '                   ' → logprob: -4.862865447998047
    6. ' result' → logprob: -6.362865447998047
    7. '                       ' → logprob: -6.487865447998047
    8. 'return' → logprob: -6.612865447998047
    9. ' res' → logprob: -7.612865447998047
    10. '#' → logprob: -9.862865447998047

Token 812: 'yon' (ID: 10033)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.1826460361480713
    2. 'must' → logprob: -3.1826460361480713
    3. ' =' → logprob: -3.4326460361480713
    4. 'yield' → logprob: -3.8076460361480713
    5. 'return' → logprob: -3.9326460361480713
    6. 'osition' → logprob: -4.682645797729492
    7. 'ass' → logprob: -5.057645797729492
    8. 'ython' → logprob: -5.307645797729492
    9. 'osit' → logprob: -5.307645797729492
    10. 'self' → logprob: -5.557645797729492

Token 813: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1041145626222715e-05
    2. 'kich' → logprob: -11.750011444091797
    3. 'ichi' → logprob: -13.125011444091797
    4. '_k' → logprob: -15.500011444091797
    5. '                   ' → logprob: -15.625011444091797
    6. '   ' → logprob: -15.750011444091797
    7. '
' → logprob: -16.750011444091797
    8. 'ich' → logprob: -16.750011444091797
    9. '    
' → logprob: -17.125011444091797
    10. ' k' → logprob: -17.250011444091797

Token 814: 'ichi' (ID: 44252)
  Prédit: 'ichi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichi' → logprob: -0.0003301016695331782
    2. 'ich' → logprob: -8.875329971313477
    3. 'k' → logprob: -9.875329971313477
    4. '   ' → logprob: -10.250329971313477
    5. '_pos' → logprob: -10.875329971313477
    6. '_' → logprob: -11.250329971313477
    7. 'inchi' → logprob: -11.250329971313477
    8. 'ic' → logprob: -11.875329971313477
    9. '```' → logprob: -12.000329971313477
    10. 'chi' → logprob: -12.125329971313477

Token 815: ' stays' (ID: 35239)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.5395236015319824
    2. ' can' → logprob: -1.5395236015319824
    3. ' survives' → logprob: -2.4145236015319824
    4. 'sur' → logprob: -2.5395236015319824
    5. 'cannot' → logprob: -4.789523601531982
    6. 'must' → logprob: -5.039523601531982
    7. '_sur' → logprob: -5.414523601531982
    8. ' stays' → logprob: -6.664523601531982
    9. 'st' → logprob: -6.914523601531982
    10. 's' → logprob: -6.914523601531982

Token 816: ' there' (ID: 1354)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.005578637123108
    2. 'True' → logprob: -1.755578637123108
    3. 'there' → logprob: -2.0055785179138184
    4. 'in' → logprob: -2.3805785179138184
    5. 'here' → logprob: -3.0055785179138184
    6. '                   ' → logprob: -3.0055785179138184
    7. 'inside' → logprob: -3.8805785179138184
    8. 'on' → logprob: -4.130578517913818
    9. ' at' → logprob: -4.130578517913818
    10. '   ' → logprob: -4.255578517913818

Token 817: ' until' (ID: 4609)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006197464535944164
    2. ' and' → logprob: -8.625619888305664
    3. 'return' → logprob: -8.625619888305664
    4. ',' → logprob: -8.750619888305664
    5. ' return' → logprob: -10.125619888305664
    6. '
' → logprob: -10.250619888305664
    7. 'and' → logprob: -11.750619888305664
    8. '                    
' → logprob: -12.125619888305664
    9. '           ' → logprob: -12.250619888305664
    10. '                       ' → logprob: -12.625619888305664

Token 818: ' sprinkler' (ID: 181940)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.2869794964790344
    2. ' next' → logprob: -2.1619794368743896
    3. 'the' → logprob: -2.6619794368743896
    4. ' the' → logprob: -4.036979675292969
    5. 'idx' → logprob: -4.036979675292969
    6. 'must' → logprob: -5.161979675292969
    7. 'self' → logprob: -5.661979675292969
    8. 'True' → logprob: -5.661979675292969
    9. 'spr' → logprob: -5.786979675292969
    10. 'False' → logprob: -6.036979675292969

Token 819: ' stops' (ID: 29924)
  Prédit: ' stops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stops' → logprob: -0.9995076656341553
    2. 's' → logprob: -1.9995076656341553
    3. 'idx' → logprob: -1.9995076656341553
    4. 'st' → logprob: -2.8745076656341553
    5. 'sequence' → logprob: -2.8745076656341553
    6. ' sequence' → logprob: -3.2495076656341553
    7. '_sequence' → logprob: -3.2495076656341553
    8. ' finishes' → logprob: -3.6245076656341553
    9. '_idx' → logprob: -3.8745076656341553
    10. ' idx' → logprob: -4.249507904052734

Token 820: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0001657565007917583
    2. ',' → logprob: -9.750165939331055
    3. '
' → logprob: -9.750165939331055
    4. '                       ' → logprob: -11.125165939331055
    5. '                    
' → logprob: -11.375165939331055
    6. '           ' → logprob: -11.500165939331055
    7. '               ' → logprob: -12.000165939331055
    8. '       ' → logprob: -13.250165939331055
    9. ' and' → logprob: -13.625165939331055
    10. '                    ' → logprob: -14.125165939331055

Token 821: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00023047674039844424
    2. '                       ' → logprob: -8.87523078918457
    3. ',' → logprob: -10.62523078918457
    4. '                    
' → logprob: -10.87523078918457
    5. '
' → logprob: -11.12523078918457
    6. '           ' → logprob: -11.50023078918457
    7. '               ' → logprob: -11.62523078918457
    8. '       ' → logprob: -12.75023078918457
    9. ':' → logprob: -13.00023078918457
    10. 'return' → logprob: -13.37523078918457

Token 822: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2572009265422821
    2. '                   ' → logprob: -1.8822009563446045
    3. ' if' → logprob: -3.1322009563446045
    4. 'return' → logprob: -3.8822009563446045
    5. '                       ' → logprob: -4.632200717926025
    6. ' return' → logprob: -7.882200717926025
    7. '
' → logprob: -9.257201194763184
    8. '           ' → logprob: -10.382201194763184
    9. 'result' → logprob: -10.757201194763184
    10. '       ' → logprob: -11.757201194763184

Token 823: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04870375618338585
    2. ' self' → logprob: -3.048703670501709
    3. '                   ' → logprob: -9.423704147338867
    4. '(self' → logprob: -10.548704147338867
    5. '   ' → logprob: -12.798704147338867
    6. '                       ' → logprob: -13.048704147338867
    7. '               ' → logprob: -13.173704147338867
    8. '           ' → logprob: -14.048704147338867
    9. ' ' → logprob: -15.048704147338867
    10. '       ' → logprob: -15.548704147338867

Token 824: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00018458699923940003
    2. '_can' → logprob: -8.750185012817383
    3. '.can' → logprob: -10.750185012817383
    4. '.' → logprob: -13.625185012817383
    5. 'can' → logprob: -14.250185012817383
    6. '_d' → logprob: -14.375185012817383
    7. ' .' → logprob: -14.625185012817383
    8. '.__' → logprob: -14.750185012817383
    9. '_cache' → logprob: -15.500185012817383
    10. '.\' → logprob: -15.500185012817383

Token 825: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -5.512236498361744e-07
    2. ' dfs' → logprob: -15.250000953674316
    3. 'df' → logprob: -16.125
    4. '_' → logprob: -17.125
    5. '
' → logprob: -17.375
    6. '_d' → logprob: -17.625
    7. 'DFS' → logprob: -18.125
    8. 'def' → logprob: -18.625
    9. 'dfa' → logprob: -18.75
    10. '```' → logprob: -18.875

Token 826: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -1.4855663721391466e-05
    2. '(' → logprob: -11.625015258789062
    3. 'next' → logprob: -12.250015258789062
    4. ' next' → logprob: -14.125015258789062
    5. '[next' → logprob: -15.750015258789062
    6. '(
' → logprob: -16.000015258789062
    7. ' (' → logprob: -16.500015258789062
    8. '(n' → logprob: -17.625015258789062
    9. '(pos' → logprob: -17.750015258789062
    10. '	next' → logprob: -18.000015258789062

Token 827: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.1782583391759545e-05
    2. 'pos' → logprob: -11.000031471252441
    3. '(next' → logprob: -11.875031471252441
    4. 'next' → logprob: -12.375031471252441
    5. 'Pos' → logprob: -12.875031471252441
    6. '_positions' → logprob: -15.375031471252441
    7. '```' → logprob: -15.625031471252441
    8. '_p' → logprob: -16.375032424926758
    9. '_position' → logprob: -16.500032424926758
    10. '_next' → logprob: -16.625032424926758

Token 828: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0219828002154827e-05
    2. ' ,' → logprob: -11.000020027160645
    3. ',
' → logprob: -13.750020027160645
    4. '                   ' → logprob: -13.750020027160645
    5. '               ' → logprob: -14.375020027160645
    6. '‌,' → logprob: -16.12502098083496
    7. ',index' → logprob: -16.12502098083496
    8. '   ' → logprob: -16.25002098083496
    9. '           ' → logprob: -16.75002098083496
    10. '                       ' → logprob: -17.00002098083496

Token 829: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -3.619311974034645e-05
    2. ' idx' → logprob: -10.250036239624023
    3. '                   ' → logprob: -15.625036239624023
    4. '	idx' → logprob: -15.625036239624023
    5. '               ' → logprob: -16.000036239624023
    6. '(idx' → logprob: -16.250036239624023
    7. '   ' → logprob: -16.750036239624023
    8. '
' → logprob: -17.875036239624023
    9. '           ' → logprob: -17.875036239624023
    10. '       ' → logprob: -18.000036239624023

Token 830: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1604776829481125
    2. ' +' → logprob: -1.910477638244629
    3. ',' → logprob: -8.285477638244629
    4. '   ' → logprob: -14.410477638244629
    5. ' ,' → logprob: -14.910477638244629
    6. '+,' → logprob: -15.660477638244629
    7. '+
' → logprob: -16.285478591918945
    8. '       ' → logprob: -16.410478591918945
    9. '
' → logprob: -16.535478591918945
    10. '```' → logprob: -16.910478591918945

Token 831: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00018363336857873946
    2. ' False' → logprob: -8.625184059143066
    3. '(False' → logprob: -12.875184059143066
    4. 'must' → logprob: -13.750184059143066
    5. '=False' → logprob: -15.375184059143066
    6. '   ' → logprob: -16.87518310546875
    7. '           ' → logprob: -17.00018310546875
    8. 'True' → logprob: -17.12518310546875
    9. 'false' → logprob: -17.50018310546875
    10. '               ' → logprob: -17.75018310546875

Token 832: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2533082365989685
    2. '):
' → logprob: -1.5033082962036133
    3. '                   ' → logprob: -7.253308296203613
    4. ')' → logprob: -7.753308296203613
    5. '                       ' → logprob: -9.003308296203613
    6. '):
' → logprob: -10.003308296203613
    7. ':' → logprob: -10.253308296203613
    8. '                           ' → logprob: -11.753308296203613
    9. '               ' → logprob: -11.878308296203613
    10. '       ' → logprob: -12.253308296203613

Token 833: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0010967610869556665
    2. '                           ' → logprob: -7.626096725463867
    3. ':' → logprob: -8.251096725463867
    4. '                   ' → logprob: -8.751096725463867
    5. '                               ' → logprob: -9.626096725463867
    6. '                        ' → logprob: -10.376096725463867
    7. ':return' → logprob: -10.501096725463867
    8. '                      ' → logprob: -10.751096725463867
    9. ':
' → logprob: -12.001096725463867
    10. '                    ' → logprob: -12.126096725463867

Token 834: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01145438477396965
    2. '                           ' → logprob: -4.5114545822143555
    3. ' self' → logprob: -8.011454582214355
    4. '                       ' → logprob: -10.261454582214355
    5. '           ' → logprob: -10.761454582214355
    6. '   ' → logprob: -11.386454582214355
    7. '                               ' → logprob: -12.136454582214355
    8. '               ' → logprob: -14.386454582214355
    9. '                   ' → logprob: -14.386454582214355
    10. '       ' → logprob: -15.386454582214355

Token 835: '.cache' (ID: 37175)
  Prédit: '.cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cache' → logprob: -5.676981345459353e-06
    2. 'cache' → logprob: -12.125005722045898
    3. '.' → logprob: -15.500005722045898
    4. ' .' → logprob: -16.7500057220459
    5. '	cache' → logprob: -17.3750057220459
    6. ' cache' → logprob: -19.1250057220459
    7. ').' → logprob: -20.6250057220459
    8. '_cache' → logprob: -20.7500057220459
    9. '.Cache' → logprob: -20.7500057220459
    10. 'CACHE' → logprob: -20.8750057220459

Token 836: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.625000953674316
    3. 'key' → logprob: -15.250000953674316
    4. '[token' → logprob: -16.875
    5. '[k' → logprob: -18.5
    6. '[
' → logprob: -18.875
    7. '[(' → logprob: -20.75
    8. ',key' → logprob: -20.875
    9. ' key' → logprob: -20.875
    10. '$key' → logprob: -21.125

Token 837: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.027672892436385155
    2. ' =' → logprob: -3.9026730060577393
    3. ']' → logprob: -5.15267276763916
    4. ']=' → logprob: -6.65267276763916
    5. ' ]' → logprob: -11.27767276763916
    6. '[' → logprob: -11.40267276763916
    7. ')' → logprob: -12.90267276763916
    8. '=True' → logprob: -13.02767276763916
    9. ')=' → logprob: -14.15267276763916
    10. '=
' → logprob: -14.15267276763916

Token 838: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0046737417578697205
    2. ' =' → logprob: -5.379673957824707
    3. '                       ' → logprob: -10.254673957824707
    4. '                           ' → logprob: -12.004673957824707
    5. '=True' → logprob: -12.254673957824707
    6. '=
' → logprob: -12.879673957824707
    7. '           ' → logprob: -13.129673957824707
    8. ']=' → logprob: -13.879673957824707
    9. '                   ' → logprob: -14.504673957824707
    10. '[' → logprob: -14.629673957824707

Token 839: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -7.941850526549388e-06
    2. ' True' → logprob: -11.750007629394531
    3. '(True' → logprob: -19.75000762939453
    4. 'true' → logprob: -21.75000762939453
    5. '                   ' → logprob: -22.37500762939453
    6. '=True' → logprob: -22.62500762939453
    7. '                       ' → logprob: -23.62500762939453
    8. '   ' → logprob: -24.62500762939453
    9. '           ' → logprob: -24.62500762939453
    10. 'False' → logprob: -25.12500762939453

Token 840: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -9.364928700961173e-05
    2. '                           ' → logprob: -10.500093460083008
    3. '                        
' → logprob: -10.625093460083008
    4. '
' → logprob: -11.125093460083008
    5. '           ' → logprob: -11.625093460083008
    6. '                   ' → logprob: -12.000093460083008
    7. '               ' → logprob: -12.750093460083008
    8. 'return' → logprob: -13.125093460083008
    9. '                        ' → logprob: -13.125093460083008
    10. '       ' → logprob: -13.750093460083008

Token 841: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -4.0484450437361374e-05
    2. '           ' → logprob: -10.500040054321289
    3. '                   ' → logprob: -12.875040054321289
    4. '                           ' → logprob: -13.000040054321289
    5. 'return' → logprob: -13.125040054321289
    6. '               ' → logprob: -13.250040054321289
    7. '                        
' → logprob: -13.500040054321289
    8. '                        ' → logprob: -14.000040054321289
    9. '
' → logprob: -14.625040054321289
    10. '```' → logprob: -15.125040054321289

Token 842: ' return' (ID: 622)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00037979125045239925
    2. 'return' (adapté à ' return') → logprob: -8.00037956237793
    3. '                           ' → logprob: -10.50037956237793
    4. '                   ' → logprob: -12.37537956237793
    5. '                        ' → logprob: -12.37537956237793
    6. '                        
' → logprob: -13.00037956237793
    7. '                               ' → logprob: -13.25037956237793
    8. ' return' → logprob: -13.75037956237793
    9. '           ' → logprob: -14.00037956237793
    10. '               ' → logprob: -14.25037956237793

Token 843: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0019289902411401272
    2. ' True' → logprob: -6.251928806304932
    3. '                       ' → logprob: -15.25192928314209
    4. '
' → logprob: -16.876928329467773
    5. '                   ' → logprob: -17.126928329467773
    6. '(True' → logprob: -17.251928329467773
    7. 'self' → logprob: -18.126928329467773
    8. '                           ' → logprob: -18.376928329467773
    9. '                        
' → logprob: -18.501928329467773
    10. '=True' → logprob: -20.001928329467773

Token 844: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022523177904076874
    2. '           ' → logprob: -8.500225067138672
    3. '
' → logprob: -11.125225067138672
    4. '        
' → logprob: -13.000225067138672
    5. '```' → logprob: -13.500225067138672
    6. '   ' → logprob: -13.875225067138672
    7. '                   ' → logprob: -14.250225067138672
    8. '	' → logprob: -14.625225067138672
    9. '      ' → logprob: -15.500225067138672
    10. '        ' → logprob: -15.500225067138672

Token 845: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013488641707226634
    2. '           ' → logprob: -9.750134468078613
    3. '
' → logprob: -10.625134468078613
    4. '        
' → logprob: -11.125134468078613
    5. '```' → logprob: -11.375134468078613
    6. '                        
' → logprob: -11.500134468078613
    7. '                       ' → logprob: -11.875134468078613
    8. '               ' → logprob: -13.375134468078613
    9. '	' → logprob: -13.375134468078613
    10. '                   ' → logprob: -13.625134468078613

Token 846: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001719327294267714
    2. 'self' (adapté à ' self') → logprob: -6.3767194747924805
    3. '```' → logprob: -11.37671947479248
    4. '
' → logprob: -13.00171947479248
    5. '#' → logprob: -13.62671947479248
    6. '	' → logprob: -14.75171947479248
    7. ' self' → logprob: -15.00171947479248
    8. 'else' → logprob: -15.12671947479248
    9. 'continue' → logprob: -15.25171947479248
    10. '           ' → logprob: -16.001718521118164

Token 847: '.cache' (ID: 37175)
  Prédit: '.cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cache' → logprob: -0.0002270198310725391
    2. '.' → logprob: -8.500226974487305
    3. '._' → logprob: -11.625226974487305
    4. 'cache' → logprob: -11.750226974487305
    5. '_cache' → logprob: -12.125226974487305
    6. '	cache' → logprob: -14.375226974487305
    7. ' cache' → logprob: -15.250226974487305
    8. ' .' → logprob: -15.375226974487305
    9. '.Cache' → logprob: -16.625226974487305
    10. '_CACHE' → logprob: -17.375226974487305

Token 848: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -13.750000953674316
    3. '\[' → logprob: -17.625001907348633
    4. '[
' → logprob: -18.000001907348633
    5. ' [' → logprob: -18.000001907348633
    6. '[user' → logprob: -18.750001907348633
    7. 'key' → logprob: -19.250001907348633
    8. '```' → logprob: -20.125001907348633
    9. '[k' → logprob: -20.375001907348633
    10. '[token' → logprob: -20.625001907348633

Token 849: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011737978784367442
    2. ' =' → logprob: -7.001173973083496
    3. ']' → logprob: -8.376173973083496
    4. ']=' → logprob: -10.376173973083496
    5. '[' → logprob: -14.751173973083496
    6. '=
' → logprob: -15.501173973083496
    7. ')' → logprob: -15.626173973083496
    8. ')=' → logprob: -16.50117301940918
    9. '=

' → logprob: -18.00117301940918
    10. ' ]' → logprob: -18.12617301940918

Token 850: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.615255839889869e-05
    2. ' =' → logprob: -9.250096321105957
    3. '=
' → logprob: -17.50009536743164
    4. '=False' → logprob: -19.75009536743164
    5. '=

' → logprob: -20.37509536743164
    6. '   ' → logprob: -21.12509536743164
    7. '=True' → logprob: -21.37509536743164
    8. ']=' → logprob: -21.75009536743164
    9. '＝' → logprob: -21.87509536743164
    10. '[' → logprob: -23.00009536743164

Token 851: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.15310683415737e-05
    2. ' False' → logprob: -10.750021934509277
    3. '(False' → logprob: -19.37502098083496
    4. '=False' → logprob: -22.62502098083496
    5. 'false' → logprob: -23.25002098083496
    6. '   ' → logprob: -25.12502098083496
    7. '_false' → logprob: -25.12502098083496
    8. '.False' → logprob: -25.12502098083496
    9. 'F' → logprob: -26.87502098083496
    10. 'True' → logprob: -27.12502098083496

Token 852: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003646633995231241
    2. '           ' → logprob: -8.000364303588867
    3. '
' → logprob: -12.000364303588867
    4. '   ' → logprob: -12.125364303588867
    5. 'return' → logprob: -12.250364303588867
    6. '        
' → logprob: -12.375364303588867
    7. '<|end|>' → logprob: -12.625364303588867
    8. '	' → logprob: -13.625364303588867
    9. '	       ' → logprob: -13.625364303588867
    10. '               ' → logprob: -13.875364303588867

Token 853: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000822495436295867
    2. '           ' → logprob: -7.1258225440979
    3. '   ' → logprob: -11.625822067260742
    4. 'return' → logprob: -12.750822067260742
    5. '
' → logprob: -13.250822067260742
    6. '        
' → logprob: -13.625822067260742
    7. '	       ' → logprob: -14.375822067260742
    8. '	' → logprob: -14.750822067260742
    9. 'else' → logprob: -14.750822067260742
    10. '               ' → logprob: -14.875822067260742

Token 854: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14768318831920624
    2. '       ' → logprob: -2.1476831436157227
    3. 'return' (adapté à ' return') → logprob: -3.8976831436157227
    4. ' return' → logprob: -8.397683143615723
    5. '   ' → logprob: -10.772683143615723
    6. '               ' → logprob: -12.897683143615723
    7. '                   ' → logprob: -13.272683143615723
    8. '	return' → logprob: -14.772683143615723
    9. '	       ' → logprob: -15.272683143615723
    10. '	   ' → logprob: -15.522683143615723

Token 855: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -5.512236498361744e-07
    2. ' False' → logprob: -14.500000953674316
    3. '(False' → logprob: -21.375
    4. 'false' → logprob: -23.625
    5. '=False' → logprob: -25.875
    6. '_false' → logprob: -26.0
    7. 'FALSE' → logprob: -27.625
    8. 'self' → logprob: -27.875
    9. 'True' → logprob: -27.875
    10. '   ' → logprob: -28.375

Token 856: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005566088366322219
    2. '
' → logprob: -7.625556468963623
    3. 'else' → logprob: -10.000556945800781
    4. '        
' → logprob: -11.125556945800781
    5. '```' → logprob: -12.500556945800781
    6. '#' → logprob: -13.625556945800781
    7. '   ' → logprob: -14.000556945800781
    8. 'if' → logprob: -14.125556945800781
    9. 'next' → logprob: -14.500556945800781
    10. ' else' → logprob: -14.750556945800781

Token 857: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00029244067263789475
    2. 'else' → logprob: -8.500292778015137
    3. '
' → logprob: -10.125292778015137
    4. '        
' → logprob: -10.500292778015137
    5. '```' → logprob: -11.125292778015137
    6. ' else' → logprob: -13.000292778015137
    7. '<|end|>' → logprob: -13.500292778015137
    8. '   ' → logprob: -14.625292778015137
    9. 'elif' → logprob: -15.000292778015137
    10. 'self' → logprob: -15.000292778015137

Token 858: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33388927578926086
    2. 'else' (adapté à ' else') → logprob: -1.3338892459869385
    3. ' else' → logprob: -4.083889484405518
    4. 'if' → logprob: -5.958889484405518
    5. '#' → logprob: -7.583889484405518
    6. ' if' → logprob: -8.20888900756836
    7. '
' → logprob: -9.08388900756836
    8. '   ' → logprob: -10.08388900756836
    9. 'elif' → logprob: -10.58388900756836
    10. '        
' → logprob: -10.70888900756836

Token 859: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08139394223690033
    2. '       ' → logprob: -2.9563939571380615
    3. ':
' → logprob: -3.7063939571380615
    4. '<|end|>' → logprob: -7.331393718719482
    5. ',' → logprob: -7.581393718719482
    6. '           ' → logprob: -9.08139419555664
    7. '   ' → logprob: -9.33139419555664
    8. '        
' → logprob: -10.08139419555664
    9. '<|end|>' → logprob: -10.45639419555664
    10. ' if' → logprob: -10.58139419555664

Token 860: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2182830423116684
    2. 'if' → logprob: -1.7182830572128296
    3. ' if' → logprob: -4.093283176422119
    4. '#' → logprob: -11.093282699584961
    5. 'for' → logprob: -11.343282699584961
    6. 'current' → logprob: -12.343282699584961
    7. '        
' → logprob: -12.593282699584961
    8. ' ' → logprob: -12.968282699584961
    9. '   ' → logprob: -13.218282699584961
    10. '```' → logprob: -13.218282699584961

Token 861: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02522575482726097
    2. '       ' → logprob: -4.025225639343262
    3. '#' (adapté à ' #') → logprob: -5.025225639343262
    4. ' if' → logprob: -7.650225639343262
    5. 'for' → logprob: -12.775225639343262
    6. ' #' → logprob: -13.650225639343262
    7. 'If' → logprob: -15.775225639343262
    8. '	if' → logprob: -16.025226593017578
    9. 'current' → logprob: -16.025226593017578
    10. ' ' → logprob: -16.275226593017578

Token 862: ' Wait' (ID: 24305)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.42991936206817627
    2. '#' → logprob: -1.0549193620681763
    3. '           ' → logprob: -7.054919242858887
    4. ' if' → logprob: -9.054919242858887
    5. 'for' → logprob: -9.429919242858887
    6. 'If' → logprob: -9.679919242858887
    7. '       ' → logprob: -9.804919242858887
    8. ' #' → logprob: -10.554919242858887
    9. 'current' → logprob: -12.054919242858887
    10. 'pos' → logprob: -13.054919242858887

Token 863: ' until' (ID: 4609)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24656803905963898
    2. 'for' → logprob: -1.8715680837631226
    3. ' for' → logprob: -3.371567964553833
    4. 'pos' → logprob: -4.746568202972412
    5. '       ' → logprob: -5.121568202972412
    6. '               ' → logprob: -5.371568202972412
    7. 'if' → logprob: -5.871568202972412
    8. '
' → logprob: -6.246568202972412
    9. '   ' → logprob: -6.371568202972412
    10. '            
' → logprob: -6.371568202972412

Token 864: ' sprinkler' (ID: 181940)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.097668170928955
    2. 'idx' → logprob: -1.347668170928955
    3. 'current' → logprob: -1.597668170928955
    4. 'the' → logprob: -2.347668170928955
    5. '#' → logprob: -3.722668170928955
    6. 'not' → logprob: -3.722668170928955
    7. 'next' → logprob: -3.972668170928955
    8. 'spr' → logprob: -3.972668170928955
    9. ' current' → logprob: -5.222668170928955
    10. ' the' → logprob: -5.472668170928955

Token 865: ' stops' (ID: 29924)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.16693979501724243
    2. ' stops' → logprob: -2.0419397354125977
    3. ' finishes' → logprob: -4.541939735412598
    4. 's' → logprob: -5.916939735412598
    5. '   ' → logprob: -6.166939735412598
    6. 'fin' → logprob: -6.416939735412598
    7. 'idx' → logprob: -6.666939735412598
    8. '.' → logprob: -6.916939735412598
    9. 'ends' → logprob: -7.041939735412598
    10. '_st' → logprob: -7.541939735412598

Token 866: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16811437904834747
    2. '           ' → logprob: -1.918114423751831
    3. ',' → logprob: -5.668114185333252
    4. ' for' → logprob: -6.418114185333252
    5. ' if' → logprob: -6.793114185333252
    6. '
' → logprob: -7.168114185333252
    7. '<|end|>' → logprob: -8.29311466217041
    8. 'for' → logprob: -8.66811466217041
    9. '   ' → logprob: -9.16811466217041
    10. ' and' → logprob: -9.54311466217041

Token 867: ' check' (ID: 2371)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5521574020385742
    2. 'if' → logprob: -1.3021574020385742
    3. '#' → logprob: -1.9271574020385742
    4. ' if' → logprob: -6.177157402038574
    5. 'pos' → logprob: -6.677157402038574
    6. 'next' → logprob: -6.677157402038574
    7. ' #' → logprob: -7.302157402038574
    8. 'for' → logprob: -7.427157402038574
    9. '       ' → logprob: -7.802157402038574
    10. 'and' → logprob: -9.052157402038574

Token 868: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3549383580684662
    2. 'current' → logprob: -1.6049383878707886
    3. ' current' → logprob: -3.104938268661499
    4. ' if' → logprob: -3.354938268661499
    5. 'self' → logprob: -4.854938507080078
    6. '           ' → logprob: -4.854938507080078
    7. '       ' → logprob: -6.604938507080078
    8. ' self' → logprob: -7.104938507080078
    9. '   ' → logprob: -9.104938507080078
    10. 'for' → logprob: -9.354938507080078

Token 869: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.21125587821006775
    2. 'self' → logprob: -1.8362559080123901
    3. 'idx' → logprob: -3.9612557888031006
    4. ' current' → logprob: -5.46125602722168
    5. 'not' → logprob: -5.71125602722168
    6. 'pos' → logprob: -6.21125602722168
    7. '(current' → logprob: -7.21125602722168
    8. 'any' → logprob: -7.71125602722168
    9. ' self' → logprob: -8.08625602722168
    10. '(self' → logprob: -8.83625602722168

Token 870: ' pos' (ID: 1253)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.020641040056943893
    2. 's' → logprob: -4.395640850067139
    3. 'spr' → logprob: -5.020640850067139
    4. 'pos' → logprob: -6.645640850067139
    5. 'current' → logprob: -9.645641326904297
    6. 'idx' → logprob: -10.145641326904297
    7. '_pos' → logprob: -10.770641326904297
    8. 'position' → logprob: -11.020641326904297
    9. 'self' → logprob: -12.020641326904297
    10. '_sp' → logprob: -12.520641326904297

Token 871: ' is' (ID: 382)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.37461519241333
    2. ' in' → logprob: -1.37461519241333
    3. ' is' → logprob: -1.49961519241333
    4. 'is' → logprob: -1.62461519241333
    5. '           ' → logprob: -3.49961519241333
    6. 'and' → logprob: -4.24961519241333
    7. '               ' → logprob: -4.99961519241333
    8. ' and' → logprob: -4.99961519241333
    9. ' not' → logprob: -5.87461519241333
    10. ',' → logprob: -5.87461519241333

Token 872: ' covered' (ID: 13083)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.15544234216213226
    2. 'current' → logprob: -2.030442237854004
    3. ' current' → logprob: -4.780442237854004
    4. ' covered' → logprob: -5.780442237854004
    5. '           ' → logprob: -7.530442237854004
    6. 'currently' → logprob: -8.655442237854004
    7. '               ' → logprob: -9.030442237854004
    8. 'still' → logprob: -9.655442237854004
    9. 'within' → logprob: -9.655442237854004
    10. 'in' → logprob: -9.780442237854004

Token 873: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032188263721764088
    2. '       ' → logprob: -6.378218650817871
    3. 'if' → logprob: -7.253218650817871
    4. ' if' → logprob: -7.253218650817871
    5. ' and' → logprob: -10.503218650817871
    6. ',' → logprob: -10.503218650817871
    7. 'and' → logprob: -10.753218650817871
    8. '   ' → logprob: -11.753218650817871
    9. ' by' → logprob: -12.378218650817871
    10. ' or' → logprob: -12.378218650817871

Token 874: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07490723580121994
    2. '       ' → logprob: -2.6999073028564453
    3. ' if' → logprob: -5.449907302856445
    4. '
' → logprob: -8.074907302856445
    5. 'if' → logprob: -8.199907302856445
    6. '   ' → logprob: -9.574907302856445
    7. ',' → logprob: -13.699907302856445
    8. '        
' → logprob: -14.074907302856445
    9. '               ' → logprob: -14.074907302856445
    10. '            
' → logprob: -14.074907302856445

Token 875: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.025796106085181236
    2. '           ' → logprob: -4.025795936584473
    3. ' if' → logprob: -5.400795936584473
    4. '       ' → logprob: -5.775795936584473
    5. '   ' → logprob: -13.275795936584473
    6. 'If' → logprob: -15.525795936584473
    7. '```' → logprob: -16.77579689025879
    8. 'import' → logprob: -16.90079689025879
    9. '	if' → logprob: -17.15079689025879
    10. ' ' → logprob: -17.27579689025879

Token 876: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.01567932963371277
    2. ' not' → logprob: -4.265679359436035
    3. 'current' → logprob: -6.515679359436035
    4. '   ' → logprob: -10.765679359436035
    5. ' current' → logprob: -11.640679359436035
    6. '           ' → logprob: -13.390679359436035
    7. '(not' → logprob: -13.390679359436035
    8. '	not' → logprob: -14.265679359436035
    9. '       ' → logprob: -14.890679359436035
    10. '
' → logprob: -15.640679359436035

Token 877: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -3.547789674485102e-05
    2. ' current' → logprob: -10.250035285949707
    3. '(current' → logprob: -19.125036239624023
    4. '   ' → logprob: -19.625036239624023
    5. 'self' → logprob: -19.750036239624023
    6. 'cur' → logprob: -20.000036239624023
    7. '
' → logprob: -20.000036239624023
    8. '	current' → logprob: -20.125036239624023
    9. 'urrent' → logprob: -20.375036239624023
    10. ' ' → logprob: -20.875036239624023

Token 878: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -7.822646693966817e-06
    2. '_' → logprob: -12.000007629394531
    3. 's' → logprob: -14.125007629394531
    4. '_pos' → logprob: -15.000007629394531
    5. '_
' → logprob: -16.12500762939453
    6. 'pos' → logprob: -16.12500762939453
    7. '._' → logprob: -16.25000762939453
    8. ' _' → logprob: -16.62500762939453
    9. 'spr' → logprob: -18.00000762939453
    10. '_position' → logprob: -18.25000762939453

Token 879: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.3569871783256531
    2. 'spr' → logprob: -1.2319872379302979
    3. '_s' → logprob: -5.481986999511719
    4. 's' → logprob: -5.481986999511719
    5. '_pr' → logprob: -9.981986999511719
    6. '_' → logprob: -9.981986999511719
    7. 'p' → logprob: -10.356986999511719
    8. 'r' → logprob: -11.481986999511719
    9. '-s' → logprob: -12.106986999511719
    10. 'w' → logprob: -12.481986999511719

Token 880: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.008884591981768608
    2. 'link' → logprob: -6.383884429931641
    3. 'ler' → logprob: -6.383884429931641
    4. 'inker' → logprob: -6.508884429931641
    5. 'k' → logprob: -6.633884429931641
    6. '_link' → logprob: -7.758884429931641
    7. '_' → logprob: -8.13388442993164
    8. 'l' → logprob: -8.13388442993164
    9. '_k' → logprob: -8.75888442993164
    10. 'inter' → logprob: -9.00888442993164

Token 881: 'ler' (ID: 1639)
  Prédit: 'ler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ler' → logprob: -0.0003827676991932094
    2. 'er' → logprob: -8.000382423400879
    3. 'r' → logprob: -11.625382423400879
    4. 'rer' → logprob: -11.750382423400879
    5. 'ent' → logprob: -12.750382423400879
    6. 'lers' → logprob: -12.750382423400879
    7. 'bler' → logprob: -12.750382423400879
    8. 'ling' → logprob: -13.000382423400879
    9. 't' → logprob: -13.250382423400879
    10. 'le' → logprob: -13.375382423400879

Token 882: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -2.3438327843905427e-05
    2. ' .' → logprob: -11.12502384185791
    3. '.' → logprob: -12.00002384185791
    4. '.cover' → logprob: -13.25002384185791
    5. '   ' → logprob: -15.12502384185791
    6. ').' → logprob: -15.75002384185791
    7. '       ' → logprob: -16.375022888183594
    8. '`.' → logprob: -16.375022888183594
    9. '
' → logprob: -16.500022888183594
    10. '​.' → logprob: -16.875022888183594

Token 883: 'overs' (ID: 21115)
  Prédit: 'overs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'overs' → logprob: -4.394135612528771e-05
    2. 'over' → logprob: -10.125043869018555
    3. ' overs' → logprob: -13.500043869018555
    4. 'ov' → logprob: -13.875043869018555
    5. 'oves' → logprob: -14.125043869018555
    6. 'covers' → logprob: -15.375043869018555
    7. 'o' → logprob: -15.500043869018555
    8. 'vers' → logprob: -16.125043869018555
    9. 'Overs' → logprob: -16.125043869018555
    10. 'ovs' → logprob: -18.125043869018555

Token 884: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -9.627176768844947e-05
    2. 'pos' → logprob: -9.250096321105957
    3. '(position' → logprob: -16.87509536743164
    4. ',pos' → logprob: -16.87509536743164
    5. '[pos' → logprob: -17.00009536743164
    6. ' pos' → logprob: -17.12509536743164
    7. '(' → logprob: -17.75009536743164
    8. ' (' → logprob: -18.75009536743164
    9. '	pos' → logprob: -19.75009536743164
    10. '(Pos' → logprob: -20.37509536743164

Token 885: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014678034000098705
    2. '):' → logprob: -4.264678001403809
    3. '           ' → logprob: -7.764678001403809
    4. '               ' → logprob: -10.264678001403809
    5. '):
' → logprob: -10.389678001403809
    6. ')' → logprob: -11.514678001403809
    7. '):

' → logprob: -12.014678001403809
    8. '       ' → logprob: -12.139678001403809
    9. ' ):
' → logprob: -14.389678001403809
    10. ':
' → logprob: -14.389678001403809

Token 886: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08907512575387955
    2. '           ' → logprob: -2.4640750885009766
    3. '
' → logprob: -9.714075088500977
    4. ' return' → logprob: -10.464075088500977
    5. '       ' → logprob: -10.964075088500977
    6. '   ' → logprob: -11.714075088500977
    7. ':
' → logprob: -12.214075088500977
    8. 'return' → logprob: -12.339075088500977
    9. '            
' → logprob: -12.964075088500977
    10. ':' → logprob: -13.339075088500977

Token 887: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6690000295639038
    2. 'self' (adapté à ' self') → logprob: -1.1690000295639038
    3. '               ' → logprob: -1.9190000295639038
    4. '   ' → logprob: -4.544000148773193
    5. '                   ' → logprob: -4.669000148773193
    6. ' self' → logprob: -4.794000148773193
    7. '       ' → logprob: -7.169000148773193
    8. '
' → logprob: -7.169000148773193
    9. 'return' → logprob: -7.794000148773193
    10. '```' → logprob: -10.918999671936035

Token 888: '.cache' (ID: 37175)
  Prédit: '.cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cache' → logprob: -4.692145012086257e-05
    2. '.' → logprob: -10.250046730041504
    3. 'cache' → logprob: -11.500046730041504
    4. ' .' → logprob: -13.875046730041504
    5. '	cache' → logprob: -15.625046730041504
    6. ' cache' → logprob: -16.50004768371582
    7. '_cache' → logprob: -16.50004768371582
    8. '.
' → logprob: -17.37504768371582
    9. '       ' → logprob: -18.12504768371582
    10. '._' → logprob: -18.37504768371582

Token 889: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.25
    3. '[user' → logprob: -18.0
    4. ' [' → logprob: -19.125
    5. 'key' → logprob: -19.375
    6. '       ' → logprob: -20.25
    7. '[k' → logprob: -20.5
    8. '\[' → logprob: -21.625
    9. ' key' → logprob: -21.875
    10. '[token' → logprob: -22.0

Token 890: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16045767068862915
    2. ' =' → logprob: -1.9104576110839844
    3. '           ' → logprob: -9.660457611083984
    4. '[' → logprob: -9.660457611083984
    5. ']' → logprob: -10.285457611083984
    6. '       ' → logprob: -10.660457611083984
    7. '               ' → logprob: -11.160457611083984
    8. ')' → logprob: -11.660457611083984
    9. ']=' → logprob: -11.785457611083984
    10. '=True' → logprob: -12.285457611083984

Token 891: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005235190503299236
    2. ' =' → logprob: -5.255235195159912
    3. '=
' → logprob: -14.505234718322754
    4. '=True' → logprob: -15.005234718322754
    5. '=False' → logprob: -15.505234718322754
    6. '       ' → logprob: -15.755234718322754
    7. '[' → logprob: -16.13023567199707
    8. '   ' → logprob: -16.75523567199707
    9. '           ' → logprob: -17.50523567199707
    10. ']=' → logprob: -18.25523567199707

Token 892: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0002613358374219388
    2. ' False' → logprob: -8.250261306762695
    3. '(False' → logprob: -17.750261306762695
    4. 'false' → logprob: -20.125261306762695
    5. '=False' → logprob: -20.250261306762695
    6. '_false' → logprob: -21.750261306762695
    7. '   ' → logprob: -22.000261306762695
    8. '.False' → logprob: -22.125261306762695
    9. 'FALSE' → logprob: -23.250261306762695
    10. '               ' → logprob: -24.000261306762695

Token 893: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11690298467874527
    2. '               ' → logprob: -3.366903066635132
    3. '<|end|>' → logprob: -3.366903066635132
    4. '       ' → logprob: -3.866903066635132
    5. '\n' → logprob: -4.491902828216553
    6. '           ' → logprob: -5.491902828216553
    7. ' 
' → logprob: -6.991902828216553
    8. '
' → logprob: -7.366902828216553
    9. '   ' → logprob: -7.741902828216553
    10. '\' → logprob: -7.991902828216553

Token 894: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007350585656240582
    2. '           ' → logprob: -7.375735282897949
    3. '       ' → logprob: -9.50073528289795
    4. '                   ' → logprob: -10.87573528289795
    5. '<|end|>' → logprob: -12.37573528289795
    6. '   ' → logprob: -12.50073528289795
    7. '```' → logprob: -12.75073528289795
    8. '
' → logprob: -14.12573528289795
    9. '                       ' → logprob: -14.12573528289795
    10. '                
' → logprob: -14.87573528289795

Token 895: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00041065402911044657
    2. ' return' → logprob: -8.000411033630371
    3. '               ' → logprob: -9.500411033630371
    4. '                   ' → logprob: -16.375410079956055
    5. '           ' → logprob: -16.375410079956055
    6. '   ' → logprob: -16.875410079956055
    7. '{return' → logprob: -17.125410079956055
    8. '       ' → logprob: -17.250410079956055
    9. '	return' → logprob: -17.625410079956055
    10. ':return' → logprob: -18.000410079956055

Token 896: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.320199877838604e-07
    2. ' False' → logprob: -15.0
    3. 'false' → logprob: -21.0
    4. 'True' → logprob: -22.5
    5. 'self' → logprob: -23.125
    6. '(False' → logprob: -23.375
    7. '_false' → logprob: -24.0
    8. '
' → logprob: -25.25
    9. '=False' → logprob: -26.375
    10. 'FALSE' → logprob: -26.875

Token 897: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11737120151519775
    2. '
' → logprob: -2.242371082305908
    3. '        
' → logprob: -5.742371082305908
    4. '           ' → logprob: -7.117371082305908
    5. '\
' → logprob: -8.867371559143066
    6. '\n' → logprob: -8.867371559143066
    7. '\' → logprob: -9.617371559143066
    8. '```' → logprob: -9.992371559143066
    9. '            
' → logprob: -10.492371559143066
    10. '    
' → logprob: -10.742371559143066

Token 898: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42072850465774536
    2. '           ' → logprob: -1.4207284450531006
    3. '
' → logprob: -2.2957284450531006
    4. '        
' → logprob: -7.42072868347168
    5. 'return' → logprob: -8.67072868347168
    6. '            
' → logprob: -8.79572868347168
    7. 'if' → logprob: -9.29572868347168
    8. '   ' → logprob: -9.92072868347168
    9. 'self' → logprob: -9.92072868347168
    10. '#' → logprob: -10.92072868347168

Token 899: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21900440752506256
    2. 'if' → logprob: -2.2190043926239014
    3. 'return' → logprob: -2.7190043926239014
    4. 'for' → logprob: -4.7190046310424805
    5. 'result' → logprob: -5.0940046310424805
    6. 'next' → logprob: -5.2190046310424805
    7. 'self' → logprob: -7.2190046310424805
    8. ' if' → logprob: -8.09400463104248
    9. '```' → logprob: -8.34400463104248
    10. ' for' → logprob: -9.96900463104248

Token 900: ' Next' (ID: 13886)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.72752845287323
    2. 'for' → logprob: -1.22752845287323
    3. 'if' → logprob: -1.97752845287323
    4. 'next' → logprob: -2.8525285720825195
    5. '#' → logprob: -3.8525285720825195
    6. 'result' → logprob: -5.2275285720825195
    7. 'self' → logprob: -7.8525285720825195
    8. '       ' → logprob: -8.72752857208252
    9. 'res' → logprob: -9.10252857208252
    10. ' return' → logprob: -9.22752857208252

Token 901: ' sprinkler' (ID: 181940)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.6178820729255676
    2. '       ' → logprob: -1.8678820133209229
    3. 'return' → logprob: -1.8678820133209229
    4. 'pos' → logprob: -2.367882013320923
    5. '_idx' → logprob: -3.617882013320923
    6. 'if' → logprob: -4.867882251739502
    7. 'idx' → logprob: -5.242882251739502
    8. ' return' → logprob: -5.492882251739502
    9. '_s' → logprob: -5.992882251739502
    10. ' if' → logprob: -6.117882251739502

Token 902: ' starts' (ID: 13217)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33457353711128235
    2. '           ' → logprob: -1.33457350730896
    3. 'return' → logprob: -4.834573745727539
    4. ',' → logprob: -5.709573745727539
    5. ' =' → logprob: -5.959573745727539
    6. ' return' → logprob: -6.459573745727539
    7. 'idx' → logprob: -6.834573745727539
    8. '_idx' → logprob: -7.334573745727539
    9. ' if' → logprob: -7.459573745727539
    10. '   ' → logprob: -7.459573745727539

Token 903: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005296365823596716
    2. 'return' → logprob: -5.505296230316162
    3. ' return' → logprob: -7.380296230316162
    4. '           ' → logprob: -7.505296230316162
    5. '
' → logprob: -11.00529670715332
    6. '   ' → logprob: -11.38029670715332
    7. '        
' → logprob: -11.75529670715332
    8. ',' → logprob: -12.25529670715332
    9. '```' → logprob: -14.25529670715332
    10. '               ' → logprob: -14.50529670715332

Token 904: ' must' (ID: 2804)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.39686068892478943
    2. '       ' → logprob: -1.1468607187271118
    3. ' return' → logprob: -4.646860599517822
    4. '           ' → logprob: -8.77186107635498
    5. 'self' → logprob: -8.77186107635498
    6. '               ' → logprob: -11.14686107635498
    7. '   ' → logprob: -11.64686107635498
    8. 'result' → logprob: -12.64686107635498
    9. 'if' → logprob: -12.77186107635498
    10. '	return' → logprob: -13.27186107635498

Token 905: ' jump' (ID: 13843)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.126988485455513
    2. '_jump' → logprob: -2.126988410949707
    3. ' jump' → logprob: -10.251988410949707
    4. 'return' → logprob: -10.876988410949707
    5. '.jump' → logprob: -13.001988410949707
    6. 'Jump' → logprob: -13.501988410949707
    7. '_j' → logprob: -13.626988410949707
    8. 'now' → logprob: -15.251988410949707
    9. 'jmp' → logprob: -15.251988410949707
    10. '_' → logprob: -15.626988410949707

Token 906: ' once' (ID: 4730)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1378956437110901
    2. 'return' → logprob: -2.3878955841064453
    3. '           ' → logprob: -4.012895584106445
    4. ' return' → logprob: -4.387895584106445
    5. '
' → logprob: -5.887895584106445
    6. '        
' → logprob: -6.512895584106445
    7. '(' → logprob: -7.262895584106445
    8. ',' → logprob: -8.012895584106445
    9. '   ' → logprob: -8.512895584106445
    10. '(return' → logprob: -8.762895584106445

Token 907: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018114479258656502
    2. 'return' → logprob: -4.2681145668029785
    3. '           ' → logprob: -5.6431145668029785
    4. ' return' → logprob: -8.14311408996582
    5. '        
' → logprob: -9.89311408996582
    6. '
' → logprob: -10.14311408996582
    7. '   ' → logprob: -11.14311408996582
    8. ',' → logprob: -13.76811408996582
    9. '               ' → logprob: -13.89311408996582
    10. '<|end|>' → logprob: -14.01811408996582

Token 908: ' coverage' (ID: 13422)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7551408410072327
    2. 'self' → logprob: -2.005140781402588
    3. 'True' → logprob: -2.630140781402588
    4. ' next' → logprob: -2.880140781402588
    5. 'continue' → logprob: -3.005140781402588
    6. 'sur' → logprob: -3.005140781402588
    7. 'a' → logprob: -3.255140781402588
    8. 'coverage' → logprob: -3.880140781402588
    9. 'the' → logprob: -4.005140781402588
    10. 'pos' → logprob: -4.130140781402588

Token 909: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5145264863967896
    2. '           ' → logprob: -1.1395264863967896
    3. 'return' → logprob: -2.5145263671875
    4. 'next' → logprob: -7.8895263671875
    5. 'to' → logprob: -8.5145263671875
    6. ' return' → logprob: -8.7645263671875
    7. ',' → logprob: -9.1395263671875
    8. 'for' → logprob: -9.1395263671875
    9. 'self' → logprob: -9.5145263671875
    10. 'of' → logprob: -9.7645263671875

Token 910: ' next' (ID: 2613)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0038986308500170708
    2. ' self' → logprob: -6.003898620605469
    3. 'the' → logprob: -7.378898620605469
    4. 'next' → logprob: -7.628898620605469
    5. '           ' → logprob: -8.753898620605469
    6. '(self' → logprob: -9.878898620605469
    7. ' next' → logprob: -10.003898620605469
    8. ' the' → logprob: -10.753898620605469
    9. '[self' → logprob: -11.753898620605469
    10. '
' → logprob: -11.878898620605469

Token 911: ' sprinkler' (ID: 181940)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.18163427710533142
    2. 'spr' → logprob: -3.1816341876983643
    3. 'idx' → logprob: -3.3066341876983643
    4. 'self' → logprob: -3.5566341876983643
    5. 's' → logprob: -3.6816341876983643
    6. '_idx' → logprob: -4.431634426116943
    7. 'current' → logprob: -4.556634426116943
    8. '_pos' → logprob: -5.056634426116943
    9. 'pos' → logprob: -6.556634426116943
    10. 'Spr' → logprob: -6.556634426116943

Token 912: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032111038453876972
    2. '           ' → logprob: -6.25321102142334
    3. 'return' → logprob: -8.00321102142334
    4. '
' → logprob: -8.25321102142334
    5. '        
' → logprob: -8.37821102142334
    6. ',' → logprob: -8.50321102142334
    7. '<|end|>' → logprob: -9.12821102142334
    8. ' return' → logprob: -9.87821102142334
    9. '```' → logprob: -10.12821102142334
    10. '   ' → logprob: -10.62821102142334

Token 913: ' end' (ID: 1268)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.17614324390888214
    2. 'return' → logprob: -2.801143169403076
    3. '#' → logprob: -3.051143169403076
    4. '(self' → logprob: -3.676143169403076
    5. '(False' → logprob: -5.051143169403076
    6. 'if' → logprob: -5.176143169403076
    7. '(index' → logprob: -5.551143169403076
    8. '(True' → logprob: -5.801143169403076
    9. ' (' → logprob: -6.301143169403076
    10. 'self' → logprob: -6.426143169403076

Token 914: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00766127509996295
    2. 'return' → logprob: -5.13266134262085
    3. '        
' → logprob: -7.50766134262085
    4. '
' → logprob: -7.63266134262085
    5. '           ' → logprob: -8.632660865783691
    6. '```' → logprob: -8.632660865783691
    7. 'if' → logprob: -8.882660865783691
    8. ' return' → logprob: -9.382660865783691
    9. ',' → logprob: -10.007660865783691
    10. ' if' → logprob: -10.382660865783691

Token 915: ' last' (ID: 2174)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00027945113833993673
    2. ' idx' → logprob: -8.250279426574707
    3. '(idx' → logprob: -11.000279426574707
    4. 'index' → logprob: -13.750279426574707
    5. '	idx' → logprob: -15.250279426574707
    6. 'self' → logprob: -16.625280380249023
    7. '```' → logprob: -16.750280380249023
    8. '   ' → logprob: -17.625280380249023
    9. '           ' → logprob: -18.375280380249023
    10. '(' → logprob: -18.500280380249023

Token 916: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03954613208770752
    2. 'if' → logprob: -3.664546012878418
    3. ' if' → logprob: -4.914546012878418
    4. '
' → logprob: -5.414546012878418
    5. '           ' → logprob: -7.664546012878418
    6. '        
' → logprob: -7.789546012878418
    7. ',' → logprob: -9.039546012878418
    8. 'return' → logprob: -9.039546012878418
    9. '(' → logprob: -10.164546012878418
    10. 'self' → logprob: -10.539546012878418

Token 917: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05617351084947586
    2. '
' → logprob: -2.93117356300354
    3. ' return' → logprob: -7.431173324584961
    4. '        
' → logprob: -8.056173324584961
    5. 'return' → logprob: -9.056173324584961
    6. '\n' → logprob: -9.806173324584961
    7. '   ' → logprob: -9.931173324584961
    8. '```' → logprob: -10.056173324584961
    9. '  
' → logprob: -10.806173324584961
    10. ' 
' → logprob: -10.806173324584961

Token 918: ' result' (ID: 1534)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.019302841275930405
    2. '       ' → logprob: -4.019302845001221
    3. 'if' → logprob: -7.894302845001221
    4. 'self' → logprob: -8.394302368164062
    5. 'result' (adapté à ' result') → logprob: -8.519302368164062
    6. ' return' → logprob: -8.769302368164062
    7. '           ' → logprob: -8.894302368164062
    8. '```' → logprob: -10.644302368164062
    9. 'for' → logprob: -10.769302368164062
    10. '   ' → logprob: -12.019302368164062

Token 919: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694154679775238
    2. ' =' → logprob: -2.126941442489624
    3. '=self' → logprob: -11.251941680908203
    4. '       ' → logprob: -15.501941680908203
    5. 'self' → logprob: -16.751941680908203
    6. '   ' → logprob: -16.751941680908203
    7. '           ' → logprob: -17.001941680908203
    8. ' self' → logprob: -17.501941680908203
    9. '=True' → logprob: -18.001941680908203
    10. '    ' → logprob: -18.251941680908203

Token 920: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0052628107368946075
    2. ' self' → logprob: -5.255262851715088
    3. '           ' → logprob: -11.13026237487793
    4. '(self' → logprob: -11.63026237487793
    5. 'False' → logprob: -12.50526237487793
    6. 'True' → logprob: -14.75526237487793
    7. '   ' → logprob: -14.88026237487793
    8. '               ' → logprob: -15.38026237487793
    9. '(' → logprob: -15.75526237487793
    10. ' False' → logprob: -16.00526237487793

Token 921: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.16222791373729706
    2. '_d' → logprob: -1.9122278690338135
    3. '_cache' → logprob: -6.662228107452393
    4. '_can' → logprob: -8.412227630615234
    5. '_s' → logprob: -9.287227630615234
    6. 'if' → logprob: -9.787227630615234
    7. 'self' → logprob: -9.912227630615234
    8. '.d' → logprob: -9.912227630615234
    9. '_self' → logprob: -9.912227630615234
    10. '.cache' → logprob: -10.287227630615234

Token 922: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -4.961759259458631e-06
    2. 'df' → logprob: -13.000004768371582
    3. 'DFS' → logprob: -14.750004768371582
    4. ' dfs' → logprob: -14.875004768371582
    5. 'call' → logprob: -15.250004768371582
    6. 'and' → logprob: -15.500004768371582
    7. 'or' → logprob: -15.500004768371582
    8. 'cache' → logprob: -15.750004768371582
    9. 'recursive' → logprob: -15.875004768371582
    10. 'dfa' → logprob: -16.1250057220459

Token 923: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.00020699729793705046
    2. 'pos' → logprob: -8.50020694732666
    3. ' pos' → logprob: -13.87520694732666
    4. '(' → logprob: -14.12520694732666
    5. '(position' → logprob: -14.37520694732666
    6. ',pos' → logprob: -14.37520694732666
    7. '[pos' → logprob: -15.12520694732666
    8. '(
' → logprob: -15.25020694732666
    9. '(self' → logprob: -16.750207901000977
    10. ' (' → logprob: -16.750207901000977

Token 924: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5941604690160602e-05
    2. ' ,' → logprob: -10.750025749206543
    3. '       ' → logprob: -13.750025749206543
    4. ',
' → logprob: -13.875025749206543
    5. '   ' → logprob: -14.250025749206543
    6. ',pos' → logprob: -14.625025749206543
    7. '           ' → logprob: -14.750025749206543
    8. ',index' → logprob: -15.125025749206543
    9. '<|end|>' → logprob: -16.12502670288086
    10. '‌,' → logprob: -16.25002670288086

Token 925: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.318681188422488e-05
    2. ' idx' → logprob: -11.25001335144043
    3. '(idx' → logprob: -16.62501335144043
    4. '   ' → logprob: -18.25001335144043
    5. '	idx' → logprob: -18.37501335144043
    6. '       ' → logprob: -19.37501335144043
    7. '           ' → logprob: -19.62501335144043
    8. 'index' → logprob: -19.62501335144043
    9. '[idx' → logprob: -20.50001335144043
    10. '
' → logprob: -21.87501335144043

Token 926: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029753033071756363
    2. ' +' → logprob: -3.5297529697418213
    3. ',' → logprob: -13.029752731323242
    4. '+,' → logprob: -15.279752731323242
    5. '   ' → logprob: -16.904752731323242
    6. '()+' → logprob: -17.279752731323242
    7. '+
' → logprob: -17.654752731323242
    8. '```' → logprob: -18.779752731323242
    9. ',+' → logprob: -19.279752731323242
    10. '＋' → logprob: -19.279752731323242

Token 927: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006606113165616989
    2. 'False' → logprob: -7.875660419464111
    3. '0' → logprob: -8.50066089630127
    4. 'True' → logprob: -10.00066089630127
    5. ' ' → logprob: -10.75066089630127
    6. ' False' → logprob: -12.37566089630127
    7. '+' → logprob: -13.12566089630127
    8. ' True' → logprob: -13.25066089630127
    9. ',' → logprob: -13.87566089630127
    10. '   ' → logprob: -14.62566089630127

Token 928: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004354286473244429
    2. 'True' → logprob: -5.504354476928711
    3. 'False' → logprob: -8.879354476928711
    4. '(True' → logprob: -10.004354476928711
    5. ' True' → logprob: -10.254354476928711
    6. '   ' → logprob: -11.129354476928711
    7. ',
' → logprob: -11.379354476928711
    8. '       ' → logprob: -11.504354476928711
    9. ' ,' → logprob: -12.254354476928711
    10. '=True' → logprob: -12.254354476928711

Token 929: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.7697225252486533e-06
    2. ' True' → logprob: -12.500003814697266
    3. '(True' → logprob: -19.500003814697266
    4. 'False' → logprob: -20.125003814697266
    5. '   ' → logprob: -20.625003814697266
    6. '=True' → logprob: -21.875003814697266
    7. '           ' → logprob: -22.625003814697266
    8. '       ' → logprob: -22.750003814697266
    9. 'true' → logprob: -22.875003814697266
    10. '
' → logprob: -23.500003814697266

Token 930: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5770367383956909
    2. ')' → logprob: -0.8270367383956909
    3. '       ' → logprob: -6.8270368576049805
    4. ')return' → logprob: -11.95203685760498
    5. ')
' → logprob: -12.95203685760498
    6. '   ' → logprob: -13.32703685760498
    7. ')

' → logprob: -13.70203685760498
    8. ' )
' → logprob: -14.82703685760498
    9. ' )' → logprob: -15.57703685760498
    10. ')`
' → logprob: -16.077035903930664

Token 931: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010154210962355137
    2. '
' → logprob: -4.7601542472839355
    3. '<|end|>' → logprob: -6.7601542472839355
    4. '```' → logprob: -8.510153770446777
    5. '           ' → logprob: -9.635153770446777
    6. '   ' → logprob: -9.885153770446777
    7. '<|end|>' → logprob: -11.135153770446777
    8. '        
' → logprob: -11.385153770446777
    9. ')
' → logprob: -11.760153770446777
    10. 'self' → logprob: -12.260153770446777

Token 932: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20152434706687927
    2. 'self' (adapté à ' self') → logprob: -1.7015243768692017
    3. ' self' → logprob: -9.82652473449707
    4. '   ' → logprob: -10.45152473449707
    5. 'return' → logprob: -11.32652473449707
    6. '           ' → logprob: -11.82652473449707
    7. '```' → logprob: -12.20152473449707
    8. '
' → logprob: -13.57652473449707
    9. '	self' → logprob: -14.20152473449707
    10. '[self' → logprob: -14.82652473449707

Token 933: '.cache' (ID: 37175)
  Prédit: '.cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cache' → logprob: -0.00013691288768313825
    2. 'cache' → logprob: -9.000137329101562
    3. '.' → logprob: -11.500137329101562
    4. '	cache' → logprob: -14.000137329101562
    5. '_cache' → logprob: -14.750137329101562
    6. ' .' → logprob: -15.125137329101562
    7. '.
' → logprob: -15.125137329101562
    8. '.cached' → logprob: -15.250137329101562
    9. '   ' → logprob: -15.500137329101562
    10. '.s' → logprob: -15.625137329101562

Token 934: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -13.750000953674316
    3. ' [' → logprob: -16.875001907348633
    4. '```' → logprob: -18.750001907348633
    5. '[
' → logprob: -19.250001907348633
    6. 'key' → logprob: -19.875001907348633
    7. '[idx' → logprob: -20.000001907348633
    8. '[k' → logprob: -20.500001907348633
    9. '\[' → logprob: -20.750001907348633
    10. '
' → logprob: -20.750001907348633

Token 935: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.017784174531698227
    2. ']' → logprob: -4.767784118652344
    3. '[key' → logprob: -4.892784118652344
    4. ']=' → logprob: -6.892784118652344
    5. '[' → logprob: -8.267784118652344
    6. ' =' → logprob: -8.392784118652344
    7. ')' → logprob: -10.142784118652344
    8. '=
' → logprob: -10.642784118652344
    9. '       ' → logprob: -10.767784118652344
    10. '   ' → logprob: -11.017784118652344

Token 936: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00317783304490149
    2. ' =' → logprob: -5.753177642822266
    3. '=
' → logprob: -16.378177642822266
    4. '[' → logprob: -17.378177642822266
    5. '=True' → logprob: -19.128177642822266
    6. '=

' → logprob: -19.128177642822266
    7. '.=' → logprob: -19.878177642822266
    8. ',' → logprob: -20.253177642822266
    9. ' =
' → logprob: -20.753177642822266
    10. '=}' → logprob: -21.003177642822266

Token 937: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -6.2729995988775045e-06
    2. ' result' → logprob: -12.000006675720215
    3. '(result' → logprob: -19.7500057220459
    4. '=result' → logprob: -20.2500057220459
    5. '[result' → logprob: -21.5000057220459
    6. '$result' → logprob: -21.7500057220459
    7. '	result' → logprob: -22.1250057220459
    8. '   ' → logprob: -23.6250057220459
    9. ',result' → logprob: -24.1250057220459
    10. '
' → logprob: -24.2500057220459

Token 938: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006467910134233534
    2. '<|end|>' → logprob: -8.125646591186523
    3. 'return' → logprob: -8.375646591186523
    4. '   ' → logprob: -10.375646591186523
    5. '	' → logprob: -10.875646591186523
    6. '<|end|>' → logprob: -11.250646591186523
    7. '	return' → logprob: -11.375646591186523
    8. ' return' → logprob: -11.625646591186523
    9. '
' → logprob: -11.750646591186523
    10. '           ' → logprob: -11.750646591186523

Token 939: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008000997477211058
    2. 'return' → logprob: -7.250800132751465
    3. '   ' → logprob: -9.750800132751465
    4. ' return' → logprob: -11.125800132751465
    5. '	' → logprob: -12.000800132751465
    6. '	return' → logprob: -12.375800132751465
    7. '           ' → logprob: -12.625800132751465
    8. '<|end|>' → logprob: -13.375800132751465
    9. '```' → logprob: -15.000800132751465
    10. ':return' → logprob: -15.125800132751465

Token 940: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31720298528671265
    2. '       ' → logprob: -1.3172030448913574
    3. '           ' → logprob: -5.817203044891357
    4. ' return' → logprob: -7.067203044891357
    5. '   ' → logprob: -9.1922025680542
    6. '	return' → logprob: -13.0672025680542
    7. '```' → logprob: -15.0672025680542
    8. '{return' → logprob: -15.4422025680542
    9. ':return' → logprob: -15.9422025680542
    10. '               ' → logprob: -16.192203521728516

Token 941: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.306760805164231e-05
    2. ' result' → logprob: -11.25001335144043
    3. '
' → logprob: -18.50001335144043
    4. '	result' → logprob: -20.62501335144043
    5. '(result' → logprob: -21.62501335144043
    6. '=result' → logprob: -23.12501335144043
    7. '$result' → logprob: -23.12501335144043
    8. 'return' → logprob: -23.25001335144043
    9. '   ' → logprob: -23.37501335144043
    10. 'results' → logprob: -24.00001335144043

Token 942: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 943: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 944: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.09968004375696182
    2. ' solve' → logprob: -2.599679946899414
    3. ' test' → logprob: -4.474679946899414
    4. ' run' → logprob: -5.599679946899414
    5. 'main' → logprob: -6.349679946899414
    6. ' survival' → logprob: -6.724679946899414
    7. 'solve' → logprob: -6.974679946899414
    8. ' solution' → logprob: -7.724679946899414
    9. ' p' → logprob: -7.849679946899414
    10. ' example' → logprob: -8.224679946899414

Token 945: 'ints' (ID: 20448)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28169652819633484
    2. '_line' → logprob: -2.0316965579986572
    3. '()' → logprob: -3.2816965579986572
    4. '(' → logprob: -3.7816965579986572
    5. '_input' → logprob: -3.9066965579986572
    6. 'line' → logprob: -4.406696319580078
    7. ' _' → logprob: -5.156696319580078
    8. '():' → logprob: -5.281696319580078
    9. '():
' → logprob: -6.531696319580078
    10. 's' → logprob: -6.531696319580078

Token 946: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001374518615193665
    2. '():
' → logprob: -7.0013747215271
    3. '()' → logprob: -7.8763747215271
    4. ' ():' → logprob: -9.751374244689941
    5. '():

' → logprob: -11.126374244689941
    6. ' ()' → logprob: -12.126374244689941
    7. '()>' → logprob: -13.501374244689941
    8. '(' → logprob: -14.376374244689941
    9. '()*' → logprob: -14.376374244689941
    10. '()=>' → logprob: -14.501374244689941

Token 947: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02413620799779892
    2. '():
' → logprob: -3.7741363048553467
    3. '()' → logprob: -7.149136066436768
    4. '()->' → logprob: -9.399136543273926
    5. '()[' → logprob: -12.524136543273926
    6. ' ():' → logprob: -12.774136543273926
    7. '();' → logprob: -13.149136543273926
    8. '()*' → logprob: -13.274136543273926
    9. '()>' → logprob: -13.399136543273926
    10. '   ' → logprob: -13.399136543273926

Token 948: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0002016331272898242
    2. ' return' → logprob: -8.750201225280762
    3. '   ' → logprob: -10.125201225280762
    4. 'map' → logprob: -13.500201225280762
    5. 'yield' → logprob: -14.000201225280762
    6. '
' → logprob: -15.250201225280762
    7. '	return' → logprob: -15.625201225280762
    8. 'list' → logprob: -15.875201225280762
    9. 'int' → logprob: -16.000202178955078
    10. 'lambda' → logprob: -16.250202178955078

Token 949: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.006919968873262405
    2. 'map' → logprob: -5.006919860839844
    3. ' list' → logprob: -8.506919860839844
    4. '[list' → logprob: -13.756919860839844
    5. ' map' → logprob: -14.256919860839844
    6. 'tuple' → logprob: -14.631919860839844
    7. '[' → logprob: -15.006919860839844
    8. '	list' → logprob: -19.756919860839844
    9. '(list' → logprob: -19.881919860839844
    10. '=list' → logprob: -20.006919860839844

Token 950: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00031627772841602564
    2. 'map' → logprob: -8.750316619873047
    3. '(' → logprob: -8.875316619873047
    4. '(int' → logprob: -11.625316619873047
    5. '()' → logprob: -12.000316619873047
    6. ' map' → logprob: -14.250316619873047
    7. '(
' → logprob: -14.375316619873047
    8. '(input' → logprob: -14.625316619873047
    9. ',map' → logprob: -14.875316619873047
    10. '	map' → logprob: -15.125316619873047

Token 951: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07892019301652908
    2. 'int' → logprob: -2.5789201259613037
    3. ',int' → logprob: -11.078920364379883
    4. '[int' → logprob: -12.328920364379883
    5. ' int' → logprob: -12.703920364379883
    6. '=int' → logprob: -13.078920364379883
    7. '<int' → logprob: -13.453920364379883
    8. '(' → logprob: -13.828920364379883
    9. ']int' → logprob: -14.203920364379883
    10. 'input' → logprob: -14.328920364379883

Token 952: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.17913350462913513
    2. ',' → logprob: -2.554133415222168
    3. 'input' → logprob: -2.554133415222168
    4. '(input' → logprob: -4.804133415222168
    5. ' input' → logprob: -8.679133415222168
    6. '=input' → logprob: -10.554133415222168
    7. '   ' → logprob: -10.679133415222168
    8. '(' → logprob: -11.179133415222168
    9. ' ,' → logprob: -11.304133415222168
    10. '<input' → logprob: -11.554133415222168

Token 953: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0003357006062287837
    2. ' input' → logprob: -8.000335693359375
    3. ',input' → logprob: -16.625335693359375
    4. 'open' → logprob: -17.000335693359375
    5. '=input' → logprob: -17.125335693359375
    6. '(input' → logprob: -17.875335693359375
    7. '	input' → logprob: -18.375335693359375
    8. 'sys' → logprob: -18.625335693359375
    9. '   ' → logprob: -19.000335693359375
    10. '
' → logprob: -19.125335693359375

Token 954: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.816093228830141e-06
    2. '()' → logprob: -13.12500286102295
    3. ' ().' → logprob: -14.62500286102295
    4. ')' → logprob: -15.62500286102295
    5. '))' → logprob: -16.750001907348633
    6. '   ' → logprob: -16.875001907348633
    7. '.split' → logprob: -17.125001907348633
    8. '(' → logprob: -17.500001907348633
    9. '().__' → logprob: -17.625001907348633
    10. '()))' → logprob: -17.750001907348633

Token 955: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011804660316556692
    2. 'strip' → logprob: -6.751180648803711
    3. 'read' → logprob: -12.251180648803711
    4. 'rstrip' → logprob: -12.626180648803711
    5. 'spl' → logprob: -13.751180648803711
    6. ' split' → logprob: -14.626180648803711
    7. '(split' → logprob: -14.751180648803711
    8. '_split' → logprob: -16.00118064880371
    9. '().' → logprob: -17.00118064880371
    10. '.split' → logprob: -17.25118064880371

Token 956: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.25662440061569214
    2. '))' → logprob: -1.506624460220337
    3. '()' → logprob: -5.381624221801758
    4. '())' → logprob: -10.256624221801758
    5. '()))
' → logprob: -10.381624221801758
    6. '(' → logprob: -11.506624221801758
    7. ')' → logprob: -12.256624221801758
    8. ' ))' → logprob: -13.881624221801758
    9. '()));' → logprob: -14.631624221801758
    10. '))
' → logprob: -15.006624221801758

Token 957: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07997862994670868
    2. 'if' → logprob: -2.5799787044525146
    3. 'n' → logprob: -6.8299784660339355
    4. '#' → logprob: -12.704978942871094
    5. 'N' → logprob: -13.329978942871094
    6. 't' → logprob: -13.329978942871094
    7. 'T' → logprob: -15.454978942871094
    8. ' if' → logprob: -15.704978942871094
    9. 'for' → logprob: -15.704978942871094
    10. 'num' → logprob: -15.704978942871094

Token 958: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.003381379647180438
    2. 'read' → logprob: -5.878381252288818
    3. 'solve' → logprob: -7.878381252288818
    4. 'def' → logprob: -9.003381729125977
    5. '__' → logprob: -9.878381729125977
    6. 'run' → logprob: -11.878381729125977
    7. ' main' → logprob: -11.878381729125977
    8. '_main' → logprob: -12.628381729125977
    9. '```' → logprob: -12.878381729125977
    10. 'test' → logprob: -13.753381729125977

Token 959: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002043748099822551
    2. '():
' → logprob: -8.500204086303711
    3. ' ():' → logprob: -14.625204086303711
    4. '()' → logprob: -15.000204086303711
    5. '():
' → logprob: -16.37520408630371
    6. '():

' → logprob: -17.50020408630371
    7. '(' → logprob: -18.37520408630371
    8. '()>' → logprob: -19.12520408630371
    9. ':' → logprob: -19.12520408630371
    10. '();' → logprob: -19.25020408630371

Token 960: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039416633546352386
    2. 'n' → logprob: -3.289416551589966
    3. ' n' → logprob: -7.039416790008545
    4. 't' → logprob: -8.039416313171387
    5. 'initial' → logprob: -9.789416313171387
    6. '```' → logprob: -10.164416313171387
    7. 'N' → logprob: -10.414416313171387
    8. '	n' → logprob: -10.789416313171387
    9. 'T' → logprob: -11.664416313171387
    10. '   ' → logprob: -12.039416313171387

Token 961: ' import' (ID: 1588)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10969389230012894
    2. 'initial' → logprob: -2.859694004058838
    3. 'N' → logprob: -3.234694004058838
    4. '   ' → logprob: -5.734694004058838
    5. ' n' → logprob: -5.984694004058838
    6. ' initial' → logprob: -7.109694004058838
    7. 'H' → logprob: -8.48469352722168
    8. 'import' (adapté à ' import') → logprob: -8.98469352722168
    9. ' N' → logprob: -9.73469352722168
    10. 't' → logprob: -10.10969352722168

Token 962: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.5048530030981055e-06
    2. ' sys' → logprob: -13.500001907348633
    3. '=sys' → logprob: -20.625001907348633
    4. 'collections' → logprob: -21.000001907348633
    5. 'math' → logprob: -21.750001907348633
    6. '	sys' → logprob: -22.125001907348633
    7. '(sys' → logprob: -22.125001907348633
    8. '```' → logprob: -23.375001907348633
    9. '_sys' → logprob: -23.500001907348633
    10. 'heap' → logprob: -24.500001907348633

Token 963: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03737761825323105
    2. 'input' → logprob: -4.162377834320068
    3. 'n' → logprob: -4.287377834320068
    4. ' n' → logprob: -6.037377834320068
    5. ' input' → logprob: -6.537377834320068
    6. 'data' → logprob: -7.162377834320068
    7. '
' → logprob: -7.287377834320068
    8. 't' → logprob: -7.537377834320068
    9. ' lines' → logprob: -7.662377834320068
    10. 'for' → logprob: -8.16237735748291

Token 964: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014583001844584942
    2. 'input' → logprob: -4.389583110809326
    3. 'n' → logprob: -6.389583110809326
    4. 'data' → logprob: -8.389582633972168
    5. ' input' → logprob: -9.389582633972168
    6. 't' → logprob: -10.139582633972168
    7. ' n' → logprob: -10.639582633972168
    8. 'for' → logprob: -12.639582633972168
    9. 'r' → logprob: -13.139582633972168
    10. '    
' → logprob: -13.139582633972168

Token 965: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.06043735146522522
    2. '   ' → logprob: -3.3104374408721924
    3. 'n' → logprob: -3.9354374408721924
    4. ' input' → logprob: -6.935437202453613
    5. 'data' → logprob: -6.935437202453613
    6. 'N' → logprob: -7.935437202453613
    7. 'r' → logprob: -8.560437202453613
    8. 't' → logprob: -10.310437202453613
    9. 'read' → logprob: -10.310437202453613
    10. ' n' → logprob: -11.560437202453613

Token 966: 'iter' (ID: 2340)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5881444215774536
    2. ' =' → logprob: -1.7131444215774536
    3. '_line' → logprob: -1.8381444215774536
    4. '=' → logprob: -2.963144302368164
    5. '_data' → logprob: -3.088144302368164
    6. '_token' → logprob: -6.713144302368164
    7. '_lines' → logprob: -6.713144302368164
    8. '_tokens' → logprob: -6.838144302368164
    9. 'data' → logprob: -6.963144302368164
    10. '_' → logprob: -7.338144302368164

Token 967: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3159542977809906
    2. ' =' → logprob: -1.315954327583313
    3. '=sys' → logprob: -5.940954208374023
    4. '_=' → logprob: -11.065954208374023
    5. '=line' → logprob: -11.440954208374023
    6. '   ' → logprob: -11.565954208374023
    7. '()' → logprob: -11.815954208374023
    8. 'er' → logprob: -11.815954208374023
    9. 'ator' → logprob: -12.815954208374023
    10. '=input' → logprob: -13.315954208374023

Token 968: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.003391352714970708
    2. 'sys' → logprob: -5.753391265869141
    3. ' iter' → logprob: -8.50339126586914
    4. '(iter' → logprob: -11.50339126586914
    5. ' sys' → logprob: -14.62839126586914
    6. '(sys' → logprob: -15.50339126586914
    7. 'input' → logprob: -17.12839126586914
    8. 'map' → logprob: -17.25339126586914
    9. '=sys' → logprob: -18.12839126586914
    10. '	iter' → logprob: -18.50339126586914

Token 969: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -3.173704271830502e-06
    2. 'sys' → logprob: -13.62500286102295
    3. '(input' → logprob: -13.75000286102295
    4. '=sys' → logprob: -14.50000286102295
    5. '(' → logprob: -16.000003814697266
    6. ' sys' → logprob: -16.250003814697266
    7. '(stdin' → logprob: -16.875003814697266
    8. '	sys' → logprob: -17.000003814697266
    9. '(iter' → logprob: -17.875003814697266
    10. '(line' → logprob: -18.625003814697266

Token 970: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.008129963040119e-06
    2. '.argv' → logprob: -13.375003814697266
    3. 'stdin' → logprob: -13.375003814697266
    4. '.stdout' → logprob: -14.875003814697266
    5. '.std' → logprob: -15.000003814697266
    6. '.' → logprob: -15.625003814697266
    7. '.st' → logprob: -18.875003814697266
    8. ' stdin' → logprob: -19.500003814697266
    9. '(stdin' → logprob: -19.500003814697266
    10. '.modules' → logprob: -19.875003814697266

Token 971: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.04376203194260597
    2. ')' → logprob: -3.543761968612671
    3. '.readlines' → logprob: -4.29376220703125
    4. '.read' → logprob: -8.79376220703125
    5. 'read' → logprob: -9.79376220703125
    6. ')
' → logprob: -10.66876220703125
    7. '())' → logprob: -10.66876220703125
    8. ' readline' → logprob: -12.29376220703125
    9. '.' → logprob: -14.79376220703125
    10. '())
' → logprob: -15.16876220703125

Token 972: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.2994620242971e-06
    2. '()' → logprob: -11.750008583068848
    3. '())' → logprob: -15.125008583068848
    4. ' ().' → logprob: -16.37500762939453
    5. '(' → logprob: -18.00000762939453
    6. '()
' → logprob: -18.62500762939453
    7. '()\' → logprob: -18.62500762939453
    8. ')' → logprob: -19.62500762939453
    9. '()).' → logprob: -20.12500762939453
    10. 'lines' → logprob: -20.50000762939453

Token 973: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.2053486704826355
    2. 'strip' → logprob: -1.9553487300872803
    3. 'read' → logprob: -3.2053487300872803
    4. 'decode' → logprob: -5.705348491668701
    5. 'lines' → logprob: -8.45534896850586
    6. '().' → logprob: -11.08034896850586
    7. 'rstrip' → logprob: -11.08034896850586
    8. 'line' → logprob: -12.58034896850586
    9. 'tokens' → logprob: -14.70534896850586
    10. ')' → logprob: -15.08034896850586

Token 974: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5048530030981055e-06
    2. '()' → logprob: -13.875001907348633
    3. '('\' → logprob: -14.500001907348633
    4. '()\' → logprob: -17.125001907348633
    5. '.split' → logprob: -18.750001907348633
    6. '()
' → logprob: -19.750001907348633
    7. 'split' → logprob: -19.750001907348633
    8. ' ().' → logprob: -20.375001907348633
    9. '())' → logprob: -21.125001907348633
    10. '("\' → logprob: -21.625001907348633

Token 975: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.625
    3. 'lines' → logprob: -17.75
    4. '(split' → logprob: -19.25
    5. 'spl' → logprob: -19.375
    6. '.split' → logprob: -20.875
    7. 'strip' → logprob: -21.875
    8. '   ' → logprob: -22.25
    9. '().' → logprob: -23.375
    10. 'rstrip' → logprob: -23.875

Token 976: '('\' (ID: 24345)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0002998312993440777
    2. '()' → logprob: -8.375299453735352
    3. '())
' → logprob: -9.750299453735352
    4. ')' → logprob: -12.375299453735352
    5. '(' → logprob: -13.125299453735352
    6. '('' → logprob: -13.500299453735352
    7. ' ())' → logprob: -14.250299453735352
    8. '()))' → logprob: -14.500299453735352
    9. '('\' → logprob: -14.500299453735352
    10. '())

' → logprob: -14.500299453735352

Token 977: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.41969841718673706
    2. '\n' → logprob: -1.1696984767913818
    3. ')' → logprob: -4.169698238372803
    4. 'lines' → logprob: -4.669698238372803
    5. 'newline' → logprob: -5.544698238372803
    6. '))' → logprob: -6.919698238372803
    7. ''\' → logprob: -7.169698238372803
    8. '')' → logprob: -7.419698238372803
    9. ''))' → logprob: -7.544698238372803
    10. '\' → logprob: -8.294698715209961

Token 978: ''))
' (ID: 15277)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.31173062324523926
    2. ''))
' → logprob: -1.4367306232452393
    3. '   ' → logprob: -4.06173038482666
    4. '))' → logprob: -4.56173038482666
    5. ')' → logprob: -6.68673038482666
    6. '))
' → logprob: -7.06173038482666
    7. '')' → logprob: -8.93673038482666
    8. ''))
' → logprob: -9.06173038482666
    9. ''))

' → logprob: -9.81173038482666
    10. '')))' → logprob: -11.68673038482666

Token 979: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05128239467740059
    2. 'for' → logprob: -3.1762824058532715
    3. 'while' → logprob: -4.9262824058532715
    4. 'try' → logprob: -7.8012824058532715
    5. 'n' → logprob: -8.676281929016113
    6. 'line' → logprob: -9.051281929016113
    7. '```' → logprob: -9.176281929016113
    8. ' for' → logprob: -9.426281929016113
    9. '    
' → logprob: -10.426281929016113
    10. 'def' → logprob: -10.426281929016113

Token 980: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6530410051345825
    2. 'T' → logprob: -1.6530410051345825
    3. 'n' → logprob: -1.9030410051345825
    4. 't' → logprob: -2.528040885925293
    5. 'for' → logprob: -3.403040885925293
    6. 'while' (adapté à ' while') → logprob: -4.153040885925293
    7. 'try' → logprob: -5.403040885925293
    8. 'N' → logprob: -5.403040885925293
    9. 'num' → logprob: -7.653040885925293
    10. ' T' → logprob: -8.653040885925293

Token 981: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.038268230855464935
    2. ' True' → logprob: -3.2882683277130127
    3. '(True' → logprob: -8.663268089294434
    4. '   ' → logprob: -10.788268089294434
    5. '1' → logprob: -11.163268089294434
    6. '
' → logprob: -11.788268089294434
    7. 'line' → logprob: -11.788268089294434
    8. 'len' → logprob: -13.038268089294434
    9. 'true' → logprob: -14.538268089294434
    10. ' line' → logprob: -14.913268089294434

Token 982: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28219255805015564
    2. '       ' → logprob: -1.532192587852478
    3. ':
' → logprob: -3.9071924686431885
    4. ',' → logprob: -5.032192707061768
    5. '   ' → logprob: -6.157192707061768
    6. '():' → logprob: -8.03219223022461
    7. '):' → logprob: -8.40719223022461
    8. ' and' → logprob: -9.40719223022461
    9. '):
' → logprob: -9.40719223022461
    10. '():
' → logprob: -9.65719223022461

Token 983: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14072243869304657
    2. '   ' → logprob: -2.3907225131988525
    3. 'try' → logprob: -3.2657225131988525
    4. ' try' → logprob: -6.890722274780273
    5. '	try' → logprob: -7.640722274780273
    6. '           ' → logprob: -11.765722274780273
    7. ' ' → logprob: -12.265722274780273
    8. '     ' → logprob: -12.640722274780273
    9. 'Try' → logprob: -12.640722274780273
    10. '<|end|>' → logprob: -12.640722274780273

Token 984: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -0.4854753315448761
    2. 'line' → logprob: -0.9854753017425537
    3. '   ' → logprob: -4.485475540161133
    4. ' try' → logprob: -10.610475540161133
    5. ' line' → logprob: -10.860475540161133
    6. 'n' → logprob: -11.235475540161133
    7. '	line' → logprob: -13.735475540161133
    8. 'lines' → logprob: -14.110475540161133
    9. '       ' → logprob: -14.235475540161133
    10. '	try' → logprob: -14.610475540161133

Token 985: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27028608322143555
    2. ':
' → logprob: -1.8952860832214355
    3. '       ' → logprob: -2.8952860832214355
    4. '           ' → logprob: -3.6452860832214355
    5. '():
' → logprob: -5.8952860832214355
    6. '():' → logprob: -7.0202860832214355
    7. '<|end|>' → logprob: -7.8952860832214355
    8. ' :' → logprob: -8.895286560058594
    9. '<|end|>' → logprob: -8.895286560058594
    10. '):
' → logprob: -9.520286560058594

Token 986: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034470646642148495
    2. 'line' → logprob: -5.75344705581665
    3. ' line' → logprob: -8.503447532653809
    4. '#line' → logprob: -11.128447532653809
    5. 'input' → logprob: -11.378447532653809
    6. '		' → logprob: -11.878447532653809
    7. '[line' → logprob: -12.503447532653809
    8. '	       ' → logprob: -12.503447532653809
    9. 'n' → logprob: -12.628447532653809
    10. '	line' → logprob: -12.628447532653809

Token 987: ' px' (ID: 27003)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1200762540102005
    2. 'N' → logprob: -2.6200761795043945
    3. '           ' → logprob: -3.9950761795043945
    4. 'line' → logprob: -4.1200761795043945
    5. 'p' → logprob: -6.8700761795043945
    6. '   ' → logprob: -7.3700761795043945
    7. 'parts' → logprob: -7.3700761795043945
    8. 'nm' → logprob: -7.6200761795043945
    9. 'nums' → logprob: -8.245076179504395
    10. 'w' → logprob: -8.370076179504395

Token 988: '_py' (ID: 118507)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018009616760537028
    2. ',y' → logprob: -6.876801013946533
    3. ' ,' → logprob: -7.626801013946533
    4. ',p' → logprob: -8.501800537109375
    5. ',user' → logprob: -10.876800537109375
    6. ',pos' → logprob: -10.876800537109375
    7. 'y' → logprob: -11.626800537109375
    8. ' =' → logprob: -12.376800537109375
    9. ',x' → logprob: -12.501800537109375
    10. '_,' → logprob: -12.626800537109375

Token 989: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47410696744918823
    2. '=' → logprob: -0.9741069674491882
    3. ',' → logprob: -10.724106788635254
    4. '=line' → logprob: -11.974106788635254
    5. '=input' → logprob: -14.849106788635254
    6. ' ' → logprob: -15.599106788635254
    7. '＝' → logprob: -15.849106788635254
    8. 's' → logprob: -15.974106788635254
    9. ' ,' → logprob: -16.09910774230957
    10. ')' → logprob: -16.72410774230957

Token 990: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.005575948394834995
    2. 'read' → logprob: -6.005576133728027
    3. ' next' → logprob: -6.255576133728027
    4. 'list' → logprob: -6.755576133728027
    5. '[next' → logprob: -11.630576133728027
    6. ' read' → logprob: -13.755576133728027
    7. ' list' → logprob: -14.005576133728027
    8. '(next' → logprob: -15.380576133728027
    9. 'input' → logprob: -15.505576133728027
    10. 'tuple' → logprob: -16.13057518005371

Token 991: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008615161292254925
    2. 'input' → logprob: -4.758615016937256
    3. '=input' → logprob: -15.008615493774414
    4. ' input' → logprob: -15.258615493774414
    5. '<input' → logprob: -17.758615493774414
    6. ',input' → logprob: -18.008615493774414
    7. '[input' → logprob: -18.633615493774414
    8. '	input' → logprob: -19.383615493774414
    9. '_input' → logprob: -20.258615493774414
    10. '/input' → logprob: -20.633615493774414

Token 992: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.0001593195047462359
    2. 'input' → logprob: -9.25015926361084
    3. '(iter' → logprob: -10.37515926361084
    4. ')' → logprob: -10.87515926361084
    5. '_iter' → logprob: -12.75015926361084
    6. 'iterator' → logprob: -13.25015926361084
    7. '(input' → logprob: -13.25015926361084
    8. 'inter' → logprob: -13.25015926361084
    9. ' iter' → logprob: -14.37515926361084
    10. 'itter' → logprob: -14.37515926361084

Token 993: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45453253388404846
    2. '()' → logprob: -1.329532504081726
    3. ').' → logprob: -2.5795326232910156
    4. '()
' → logprob: -4.329532623291016
    5. '().' → logprob: -5.454532623291016
    6. '())' → logprob: -5.704532623291016
    7. ')
' → logprob: -5.954532623291016
    8. '()).' → logprob: -7.079532623291016
    9. '       ' → logprob: -8.829532623291016
    10. '   ' → logprob: -8.954532623291016

Token 994: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011137197725474834
    2. '       ' → logprob: -4.636137008666992
    3. '<|end|>' → logprob: -7.386137008666992
    4. '            
' → logprob: -8.261137008666992
    5. '		' → logprob: -9.261137008666992
    6. '	       ' → logprob: -9.636137008666992
    7. '=' → logprob: -9.761137008666992
    8. '<|end|>' → logprob: -10.136137008666992
    9. 'except' → logprob: -10.511137008666992
    10. '          ' → logprob: -10.886137008666992

Token 995: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023364856839179993
    2. '           ' → logprob: -4.773365020751953
    3. '        
' → logprob: -5.398365020751953
    4. '
' → logprob: -5.398365020751953
    5. '=' → logprob: -6.648365020751953
    6. ')' → logprob: -7.023365020751953
    7. '<|end|>' → logprob: -7.023365020751953
    8. '            
' → logprob: -7.648365020751953
    9. ' =' → logprob: -8.398365020751953
    10. '.strip' → logprob: -8.523365020751953

Token 996: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -0.002921018283814192
    2. 'EOF' → logprob: -5.877921104431152
    3. ' Stop' → logprob: -9.502921104431152
    4. 'Break' → logprob: -10.502921104431152
    5. ' EOF' → logprob: -12.377921104431152
    6. 'STOP' → logprob: -12.627921104431152
    7. 'Keyboard' → logprob: -13.252921104431152
    8. '_stop' → logprob: -14.127921104431152
    9. '_Stop' → logprob: -14.127921104431152
    10. 'stop' → logprob: -14.377921104431152

Token 997: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -1.5048530030981055e-06
    2. 'Async' → logprob: -14.500001907348633
    3. 'iteration' → logprob: -14.750001907348633
    4. 'Iterator' → logprob: -14.750001907348633
    5. 'Iterations' → logprob: -16.875001907348633
    6. 'Error' → logprob: -17.000001907348633
    7. ' iteration' → logprob: -17.125001907348633
    8. 'Iter' → logprob: -18.375001907348633
    9. '_iteration' → logprob: -18.375001907348633
    10. 'Token' → logprob: -19.625001907348633

Token 998: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6530749201774597
    2. '       ' → logprob: -1.0280749797821045
    3. '           ' → logprob: -2.2780749797821045
    4. ':
' → logprob: -4.278074741363525
    5. ')' → logprob: -7.028074741363525
    6. '=' → logprob: -7.278074741363525
    7. '<|end|>' → logprob: -7.403074741363525
    8. '==' → logprob: -7.528074741363525
    9. '               ' → logprob: -8.153075218200684
    10. ' =' → logprob: -8.153075218200684

Token 999: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43612074851989746
    2. '       ' → logprob: -1.0611207485198975
    3. ':' → logprob: -5.061120986938477
    4. ':
' → logprob: -7.186120986938477
    5. '   ' → logprob: -9.686120986938477
    6. '               ' → logprob: -10.186120986938477
    7. '        ' → logprob: -10.686120986938477
    8. '		' → logprob: -10.811120986938477
    9. '          ' → logprob: -11.061120986938477
    10. '	' → logprob: -11.311120986938477

Token 1000: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1325659304857254
    2. '       ' → logprob: -2.382565975189209
    3. 'break' (adapté à ' break') → logprob: -3.507565975189209
    4. ' break' → logprob: -6.757565975189209
    5. 'return' → logprob: -8.25756549835205
    6. '               ' → logprob: -8.25756549835205
    7. '   ' → logprob: -9.00756549835205
    8. '		' → logprob: -10.75756549835205
    9. '	break' → logprob: -10.75756549835205
    10. '
' → logprob: -11.75756549835205

Token 1001: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.542423165636137e-05
    2. '        
' → logprob: -9.750085830688477
    3. '<|end|>' → logprob: -11.000085830688477
    4. '           ' → logprob: -12.875085830688477
    5. '
' → logprob: -13.250085830688477
    6. '   ' → logprob: -13.625085830688477
    7. '	' → logprob: -14.000085830688477
    8. '```' → logprob: -14.250085830688477
    9. ',' → logprob: -14.375085830688477
    10. '        
' → logprob: -15.375085830688477

Token 1002: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.611323624383658e-05
    2. '        
' → logprob: -10.625065803527832
    3. '   ' → logprob: -11.250065803527832
    4. '```' → logprob: -11.625065803527832
    5. '           ' → logprob: -11.875065803527832
    6. '<|end|>' → logprob: -12.500065803527832
    7. '	' → logprob: -13.250065803527832
    8. ' ' → logprob: -14.000065803527832
    9. '      ' → logprob: -14.125065803527832
    10. ',' → logprob: -14.500065803527832

Token 1003: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04934484139084816
    2. 'px' → logprob: -3.924344778060913
    3. 'x' → logprob: -4.174345016479492
    4. 'n' → logprob: -4.549345016479492
    5. '   ' → logprob: -6.549345016479492
    6. 'parts' → logprob: -8.049345016479492
    7. ' if' → logprob: -8.299345016479492
    8. 'nums' → logprob: -9.424345016479492
    9. 'p' → logprob: -9.674345016479492
    10. '       ' → logprob: -9.674345016479492

Token 1004: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3599657416343689
    2. ' not' → logprob: -1.4849658012390137
    3. 'px' → logprob: -2.6099658012390137
    4. ' px' → logprob: -6.109965801239014
    5. '   ' → logprob: -11.109965324401855
    6. '	not' → logprob: -12.484965324401855
    7. '(px' → logprob: -12.734965324401855
    8. ' ' → logprob: -12.734965324401855
    9. '(not' → logprob: -13.734965324401855
    10. '_px' → logprob: -13.859965324401855

Token 1005: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.0004307884373702109
    2. ' px' → logprob: -7.750430583953857
    3. '(px' → logprob: -16.250431060791016
    4. 'py' → logprob: -16.750431060791016
    5. '_px' → logprob: -21.125431060791016
    6. 'pz' → logprob: -23.000431060791016
    7. '
' → logprob: -24.250431060791016
    8. 'pix' → logprob: -24.375431060791016
    9. ':px' → logprob: -24.875431060791016
    10. 'mx' → logprob: -25.625431060791016

Token 1006: '_py' (ID: 118507)
  Prédit: '_py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_py' → logprob: -7.941850526549388e-06
    2. '_px' → logprob: -11.750007629394531
    3. '_' → logprob: -19.37500762939453
    4. 'Py' → logprob: -19.50000762939453
    5. '_p' → logprob: -19.75000762939453
    6. ' Py' → logprob: -19.87500762939453
    7. 'py' → logprob: -20.00000762939453
    8. '_pw' → logprob: -21.12500762939453
    9. '   ' → logprob: -21.37500762939453
    10. '(py' → logprob: -22.00000762939453

Token 1007: '.strip' (ID: 40613)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22045128047466278
    2. '.strip' → logprob: -1.9704512357711792
    3. ':
' → logprob: -2.8454513549804688
    4. '.' → logprob: -8.470451354980469
    5. ':return' → logprob: -10.345451354980469
    6. ' or' → logprob: -10.470451354980469
    7. '   ' → logprob: -10.845451354980469
    8. ' :' → logprob: -10.970451354980469
    9. '=' → logprob: -11.470451354980469
    10. ' =' → logprob: -12.345451354980469

Token 1008: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21581816673278809
    2. '():
' → logprob: -2.340818166732788
    3. '():' → logprob: -2.965818166732788
    4. ':
' → logprob: -3.090818166732788
    5. '()' → logprob: -7.965818405151367
    6. ' or' → logprob: -8.090818405151367
    7. '):' → logprob: -10.340818405151367
    8. ':return' → logprob: -10.590818405151367
    9. 'or' → logprob: -10.715818405151367
    10. '():
' → logprob: -10.840818405151367

Token 1009: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00696980906650424
    2. ':' → logprob: -5.006969928741455
    3. ':
' → logprob: -8.881969451904297
    4. '               ' → logprob: -9.881969451904297
    5. '       ' → logprob: -10.256969451904297
    6. '          ' → logprob: -11.756969451904297
    7. '	       ' → logprob: -12.256969451904297
    8. '		' → logprob: -12.381969451904297
    9. ' or' → logprob: -12.506969451904297
    10. ',' → logprob: -13.131969451904297

Token 1010: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41567081212997437
    2. 'continue' → logprob: -1.4156708717346191
    3. 'break' (adapté à ' break') → logprob: -2.915670871734619
    4. ' continue' → logprob: -3.665670871734619
    5. ' break' → logprob: -4.165670871734619
    6. '               ' → logprob: -6.290670871734619
    7. '       ' → logprob: -8.790670394897461
    8. '   ' → logprob: -10.665670394897461
    9. 'return' → logprob: -10.665670394897461
    10. ' ' → logprob: -12.165670394897461

Token 1011: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.469590491382405e-05
    2. '        
' → logprob: -11.12507438659668
    3. '   ' → logprob: -11.25007438659668
    4. ',' → logprob: -11.25007438659668
    5. 'x' → logprob: -11.50007438659668
    6. '```' → logprob: -12.12507438659668
    7. '           ' → logprob: -12.37507438659668
    8. 'px' → logprob: -13.12507438659668
    9. '	' → logprob: -13.37507438659668
    10. 'pos' → logprob: -13.50007438659668

Token 1012: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044151677866466343
    2. 'x' → logprob: -8.125441551208496
    3. 'px' → logprob: -9.875441551208496
    4. '   ' → logprob: -10.625441551208496
    5. 'pos' → logprob: -10.750441551208496
    6. 'p' → logprob: -11.000441551208496
    7. 'parts' → logprob: -12.125441551208496
    8. ' px' → logprob: -12.250441551208496
    9. '           ' → logprob: -12.625441551208496
    10. '	' → logprob: -12.875441551208496

Token 1013: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' (adapté à ' px') → logprob: -0.4815737307071686
    2. 'x' → logprob: -0.9815737009048462
    3. 'n' → logprob: -5.606573581695557
    4. 'p' → logprob: -6.981573581695557
    5. 'initial' → logprob: -7.106573581695557
    6. 'parts' → logprob: -7.481573581695557
    7. 'N' → logprob: -7.856573581695557
    8. 'positions' → logprob: -8.356574058532715
    9. 'sx' → logprob: -8.481574058532715
    10. 'nx' → logprob: -8.856574058532715

Token 1014: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07896656543016434
    2. '_py' → logprob: -2.5789666175842285
    3. '_,' → logprob: -9.95396614074707
    4. '_str' → logprob: -11.57896614074707
    5. ' ,' → logprob: -11.82896614074707
    6. 'py' → logprob: -12.07896614074707
    7. ',_' → logprob: -12.57896614074707
    8. '_px' → logprob: -14.07896614074707
    9. 'Py' → logprob: -14.70396614074707
    10. '_sy' → logprob: -15.20396614074707

Token 1015: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0024865958839654922
    2. ' py' → logprob: -6.002486705780029
    3. '_py' → logprob: -11.502486228942871
    4. '(py' → logprob: -14.377486228942871
    5. 'px' → logprob: -16.252487182617188
    6. 'Py' → logprob: -16.377487182617188
    7. 'ppy' → logprob: -17.502487182617188
    8. '.py' → logprob: -17.627487182617188
    9. 'ipy' → logprob: -19.252487182617188
    10. 'p' → logprob: -19.377487182617188

Token 1016: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01076517254114151
    2. ' =' → logprob: -4.885765075683594
    3. ',' → logprob: -5.760765075683594
    4. '<|end|>' → logprob: -13.385765075683594
    5. '=int' → logprob: -13.510765075683594
    6. '=

' → logprob: -14.635765075683594
    7. ')=' → logprob: -14.635765075683594
    8. '=
' → logprob: -14.885765075683594
    9. ' ,' → logprob: -15.385765075683594
    10. ' ' → logprob: -15.760765075683594

Token 1017: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.47542330622673035
    2. ' map' → logprob: -0.9754233360290527
    3. 'read' → logprob: -6.725423336029053
    4. ' read' → logprob: -8.850422859191895
    5. 'list' → logprob: -13.475422859191895
    6. '(map' → logprob: -15.100422859191895
    7. '[' → logprob: -15.850422859191895
    8. 'px' → logprob: -16.47542381286621
    9. ' list' → logprob: -16.85042381286621
    10. '	map' → logprob: -16.97542381286621

Token 1018: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.38688260316848755
    2. 'int' → logprob: -1.1368825435638428
    3. 'str' → logprob: -12.136882781982422
    4. '[int' → logprob: -12.886882781982422
    5. '(str' → logprob: -13.011882781982422
    6. '=int' → logprob: -14.511882781982422
    7. ' int' → logprob: -15.136882781982422
    8. '<int' → logprob: -15.636882781982422
    9. '```' → logprob: -16.011882781982422
    10. ',int' → logprob: -16.136882781982422

Token 1019: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18020495772361755
    2. '(px' → logprob: -1.80520498752594
    3. 'px' → logprob: -8.180205345153809
    4. ',p' → logprob: -9.680205345153809
    5. '(py' → logprob: -10.180205345153809
    6. ' ,' → logprob: -10.305205345153809
    7. ':px' → logprob: -11.055205345153809
    8. '(' → logprob: -11.680205345153809
    9. '_px' → logprob: -11.680205345153809
    10. ' px' → logprob: -12.430205345153809

Token 1020: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.0003357006062287837
    2. ' px' → logprob: -8.000335693359375
    3. '(px' → logprob: -15.375335693359375
    4. '_px' → logprob: -17.125335693359375
    5. 'py' → logprob: -18.125335693359375
    6. 'PX' → logprob: -20.125335693359375
    7. '
' → logprob: -20.750335693359375
    8. ':px' → logprob: -20.750335693359375
    9. 'Px' → logprob: -22.500335693359375
    10. 'pix' → logprob: -23.000335693359375

Token 1021: '_py' (ID: 118507)
  Prédit: '_py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_py' → logprob: -0.06104109808802605
    2. '_px' → logprob: -2.9360411167144775
    3. '(py' → logprob: -6.311040878295898
    4. '(px' → logprob: -6.561040878295898
    5. 'py' → logprob: -6.936040878295898
    6. ',' → logprob: -7.311040878295898
    7. 'px' → logprob: -7.561040878295898
    8. ')' → logprob: -8.311040878295898
    9. '.readline' → logprob: -8.686040878295898
    10. '(Py' → logprob: -9.061040878295898

Token 1022: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.06423862278461456
    2. '().' → logprob: -3.1892385482788086
    3. '.strip' → logprob: -3.9392385482788086
    4. ')' → logprob: -6.814238548278809
    5. '.readline' → logprob: -8.564238548278809
    6. 'split' → logprob: -9.439238548278809
    7. 'input' → logprob: -10.564238548278809
    8. '(split' → logprob: -10.689238548278809
    9. ' .' → logprob: -10.814238548278809
    10. '.rstrip' → logprob: -10.939238548278809

Token 1023: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005030352156609297
    2. ')' → logprob: -6.130030155181885
    3. '())
' → logprob: -6.505030155181885
    4. '()' → logprob: -6.630030155181885
    5. '('' → logprob: -11.255030632019043
    6. '(','' → logprob: -12.255030632019043
    7. ')
' → logprob: -13.755030632019043
    8. ' )' → logprob: -13.880030632019043
    9. '()
' → logprob: -13.880030632019043
    10. ' ())' → logprob: -14.005030632019043

Token 1024: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0908009260892868
    2. 'if' → logprob: -2.9658010005950928
    3. 'spr' → logprob: -3.4658010005950928
    4. ' if' → logprob: -6.340800762176514
    5. 's' → logprob: -7.090800762176514
    6. 'sp' → logprob: -7.965800762176514
    7. 'x' → logprob: -8.465801239013672
    8. '```' → logprob: -8.965801239013672
    9. 'xs' → logprob: -9.090801239013672
    10. 'sx' → logprob: -9.340801239013672

Token 1025: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004924904555082321
    2. 'ns' → logprob: -6.129924774169922
    3. 'num' → logprob: -6.504924774169922
    4. '       ' → logprob: -7.379924774169922
    5. 'if' (adapté à ' if') → logprob: -8.504924774169922
    6. 'N' → logprob: -8.754924774169922
    7. 'nx' → logprob: -10.254924774169922
    8. '   ' → logprob: -10.379924774169922
    9. ' n' → logprob: -10.379924774169922
    10. 'try' → logprob: -10.629924774169922

Token 1026: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.03399396687746048
    2. '(px' → logprob: -3.40899395942688
    3. ' px' → logprob: -8.0339937210083
    4. '(' → logprob: -10.7839937210083
    5. ' (' → logprob: -13.4089937210083
    6. '_px' → logprob: -14.2839937210083
    7. '   ' → logprob: -15.2839937210083
    8. '(p' → logprob: -15.2839937210083
    9. 'Px' → logprob: -15.4089937210083
    10. ':px' → logprob: -16.408994674682617

Token 1027: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.2379684448242188
    2. '<' → logprob: -1.3629684448242188
    3. ' ==' → logprob: -1.4879684448242188
    4. ' py' → logprob: -1.7379684448242188
    5. ' <' → logprob: -3.7379684448242188
    6. 'py' → logprob: -3.7379684448242188
    7. '==-' → logprob: -6.112968444824219
    8. ' ' → logprob: -7.362968444824219
    9. ' px' → logprob: -7.737968444824219
    10. '(py' → logprob: -8.362968444824219

Token 1028: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.28175976872444153
    2. '0' → logprob: -1.4067597389221191
    3. 'py' → logprob: -7.906759738922119
    4. ' -' → logprob: -8.406760215759277
    5. ' ' → logprob: -11.656760215759277
    6. 'y' → logprob: -12.781760215759277
    7. '
' → logprob: -13.156760215759277
    8. 'px' → logprob: -13.531760215759277
    9. ' py' → logprob: -13.656760215759277
    10. 'and' → logprob: -14.156760215759277

Token 1029: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.5358694731257856e-05
    2. '0' → logprob: -10.375035285949707
    3. ' -' → logprob: -13.000035285949707
    4. 'py' → logprob: -13.500035285949707
    5. 'px' → logprob: -15.250035285949707
    6. '-p' → logprob: -15.750035285949707
    7. '
' → logprob: -18.750036239624023
    8. ' py' → logprob: -18.875036239624023
    9. 'and' → logprob: -19.125036239624023
    10. '-y' → logprob: -19.750036239624023

Token 1030: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3868774473667145
    2. 'and' → logprob: -1.136877417564392
    3. '<|end|>' → logprob: -12.511877059936523
    4. ' ' → logprob: -14.261877059936523
    5. 'py' → logprob: -14.761877059936523
    6. ',' → logprob: -14.761877059936523
    7. '	and' → logprob: -14.761877059936523
    8. ' or' → logprob: -15.136877059936523
    9. ' py' → logprob: -16.261877059936523
    10. '0' → logprob: -16.261877059936523

Token 1031: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.001170225441455841
    2. ' py' → logprob: -6.7511701583862305
    3. 'px' → logprob: -17.376171112060547
    4. '(py' → logprob: -17.876171112060547
    5. '_py' → logprob: -18.501171112060547
    6. 'Py' → logprob: -20.376171112060547
    7. '.py' → logprob: -20.876171112060547
    8. 'ply' → logprob: -22.876171112060547
    9. 'ipy' → logprob: -24.001171112060547
    10. 'ppy' → logprob: -24.126171112060547

Token 1032: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3484944701194763
    2. ' ==' → logprob: -1.223494529724121
    3. '=' → logprob: -11.223494529724121
    4. '0' → logprob: -11.348494529724121
    5. ')==' → logprob: -12.098494529724121
    6. '<|end|>' → logprob: -12.598494529724121
    7. '===' → logprob: -12.848494529724121
    8. '()==' → logprob: -12.973494529724121
    9. '==
' → logprob: -13.098494529724121
    10. ' ' → logprob: -13.348494529724121

Token 1033: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '<|end|>' → logprob: -19.375003814697266
    4. '-' → logprob: -20.375003814697266
    5. '۰' → logprob: -21.375003814697266
    6. '  ' → logprob: -22.625003814697266
    7. '
' → logprob: -22.875003814697266
    8. '<|end|>' → logprob: -23.125003814697266
    9. '   ' → logprob: -23.250003814697266
    10. ' -' → logprob: -23.250003814697266

Token 1034: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '<|end|>' → logprob: -19.625001907348633
    4. '۰' → logprob: -20.250001907348633
    5. '-' → logprob: -21.625001907348633
    6. '<|end|>' → logprob: -22.250001907348633
    7. '০' → logprob: -22.312501907348633
    8. '   ' → logprob: -22.750001907348633
    9. '
' → logprob: -22.812501907348633
    10. '  ' → logprob: -23.250001907348633

Token 1035: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04678260162472725
    2. ':' → logprob: -3.1717824935913086
    3. '       ' → logprob: -6.671782493591309
    4. ' and' → logprob: -6.921782493591309
    5. ':
' → logprob: -7.046782493591309
    6. '		' → logprob: -8.546782493591309
    7. '               ' → logprob: -8.796782493591309
    8. ',' → logprob: -9.296782493591309
    9. '<|end|>' → logprob: -10.171782493591309
    10. '	       ' → logprob: -10.421782493591309

Token 1036: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.822646693966817e-06
    2. '		' → logprob: -12.625007629394531
    3. '               ' → logprob: -13.500007629394531
    4. '       ' → logprob: -13.625007629394531
    5. '          ' → logprob: -14.250007629394531
    6. '	       ' → logprob: -14.875007629394531
    7. '                   ' → logprob: -15.375007629394531
    8. ',' → logprob: -15.625007629394531
    9. '   ' → logprob: -15.875007629394531
    10. ':' → logprob: -16.00000762939453

Token 1037: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20219828188419342
    2. 'break' (adapté à ' break') → logprob: -1.7021982669830322
    3. ' break' → logprob: -7.202198505401611
    4. '               ' → logprob: -10.827198028564453
    5. '       ' → logprob: -11.827198028564453
    6. '		' → logprob: -11.952198028564453
    7. '	break' → logprob: -12.202198028564453
    8. 'return' → logprob: -14.452198028564453
    9. '   ' → logprob: -15.452198028564453
    10. '	       ' → logprob: -15.577198028564453

Token 1038: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000509187753777951
    2. '```' → logprob: -8.500509262084961
    3. 's' → logprob: -9.500509262084961
    4. 'spr' → logprob: -9.750509262084961
    5. '<|end|>' → logprob: -9.875509262084961
    6. '   ' → logprob: -10.000509262084961
    7. '        
' → logprob: -10.875509262084961
    8. 'n' → logprob: -11.000509262084961
    9. 'next' → logprob: -11.750509262084961
    10. 't' → logprob: -12.000509262084961

Token 1039: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014559264294803143
    2. 'n' → logprob: -4.639559268951416
    3. 'spr' → logprob: -5.514559268951416
    4. 's' → logprob: -7.389559268951416
    5. 'num' → logprob: -10.389558792114258
    6. 'ns' → logprob: -10.514558792114258
    7. '   ' → logprob: -10.889558792114258
    8. '```' → logprob: -11.139558792114258
    9. ' n' → logprob: -11.514558792114258
    10. 'x' → logprob: -11.764558792114258

Token 1040: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.03310427814722061
    2. 'N' → logprob: -3.908104181289673
    3. 'ns' → logprob: -4.908104419708252
    4. '       ' → logprob: -6.533104419708252
    5. 'num' → logprob: -6.783104419708252
    6. 'nx' → logprob: -7.158104419708252
    7. '   ' → logprob: -7.783104419708252
    8. 'spr' → logprob: -7.783104419708252
    9. 'k' → logprob: -7.908104419708252
    10. 'Ns' → logprob: -9.408103942871094

Token 1041: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1609065681695938
    2. '=' → logprob: -1.9109065532684326
    3. '=int' → logprob: -7.660906791687012
    4. '    ' → logprob: -9.660906791687012
    5. '   ' → logprob: -9.910906791687012
    6. '       ' → logprob: -10.660906791687012
    7. '=line' → logprob: -10.785906791687012
    8. '_tokens' → logprob: -10.910906791687012
    9. '_line' → logprob: -12.535906791687012
    10. 'tokens' → logprob: -12.660906791687012

Token 1042: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004331725067459047
    2. ' int' → logprob: -7.750432968139648
    3. 'next' → logprob: -13.000432968139648
    4. '       ' → logprob: -15.750432968139648
    5. '	int' → logprob: -18.12543296813965
    6. '<int' → logprob: -18.25043296813965
    7. '[int' → logprob: -18.37543296813965
    8. '(int' → logprob: -19.00043296813965
    9. '=int' → logprob: -19.37543296813965
    10. ' next' → logprob: -19.37543296813965

Token 1043: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.00015860427811276168
    2. 'next' → logprob: -8.750158309936523
    3. '[next' → logprob: -16.375158309936523
    4. '(' → logprob: -17.375158309936523
    5. ' next' → logprob: -20.125158309936523
    6. '((' → logprob: -20.375158309936523
    7. '
' → logprob: -20.375158309936523
    8. '.next' → logprob: -20.625158309936523
    9. '	next' → logprob: -20.625158309936523
    10. ',next' → logprob: -21.250158309936523

Token 1044: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.16029013693332672
    2. 'input' → logprob: -1.9102901220321655
    3. ' input' → logprob: -10.285289764404297
    4. '=input' → logprob: -10.785289764404297
    5. ',input' → logprob: -12.160289764404297
    6. '[input' → logprob: -12.535289764404297
    7. '<input' → logprob: -14.410289764404297
    8. 'token' → logprob: -14.535289764404297
    9. '	input' → logprob: -15.410289764404297
    10. ')' → logprob: -15.660289764404297

Token 1045: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -5.512236498361744e-07
    2. '(iter' → logprob: -15.000000953674316
    3. 'input' → logprob: -15.750000953674316
    4. ')' → logprob: -16.625
    5. 'iterator' → logprob: -17.75
    6. ' iter' → logprob: -18.625
    7. 'inter' → logprob: -18.75
    8. '_iter' → logprob: -19.75
    9. '(input' → logprob: -20.125
    10. '   ' → logprob: -20.25

Token 1046: '))
' (ID: 2210)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07057660818099976
    2. ')' → logprob: -2.6955766677856445
    3. '())
' → logprob: -7.5705766677856445
    4. '().' → logprob: -9.695576667785645
    5. '()' → logprob: -10.570576667785645
    6. ' ())' → logprob: -11.070576667785645
    7. '       ' → logprob: -12.070576667785645
    8. ')
' → logprob: -12.070576667785645
    9. '   ' → logprob: -12.320576667785645
    10. '(' → logprob: -13.570576667785645

Token 1047: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008766854298301041
    2. 'spr' → logprob: -7.3758769035339355
    3. 's' → logprob: -8.875876426696777
    4. '   ' → logprob: -9.750876426696777
    5. '<|end|>' → logprob: -11.000876426696777
    6. 'positions' → logprob: -11.125876426696777
    7. '```' → logprob: -12.375876426696777
    8. 'points' → logprob: -12.750876426696777
    9. '           ' → logprob: -12.875876426696777
    10. '	s' → logprob: -13.625876426696777

Token 1048: ' coords' (ID: 53253)
  Prédit: 'spr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spr' → logprob: -0.2016313523054123
    2. '       ' → logprob: -1.7016313076019287
    3. 'positions' → logprob: -9.201631546020508
    4. '   ' → logprob: -10.451631546020508
    5. 's' → logprob: -10.576631546020508
    6. 'spots' → logprob: -10.951631546020508
    7. 'sprites' → logprob: -10.951631546020508
    8. 'points' → logprob: -11.701631546020508
    9. 'spar' → logprob: -12.701631546020508
    10. '           ' → logprob: -13.076631546020508

Token 1049: '_line' (ID: 14418)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5233146548271179
    2. ' =' → logprob: -0.8983146548271179
    3. '=[]' → logprob: -8.898314476013184
    4. '       ' → logprob: -10.773314476013184
    5. '   ' → logprob: -11.148314476013184
    6. '<|end|>' → logprob: -12.523314476013184
    7. '        ' → logprob: -13.023314476013184
    8. '=[]
' → logprob: -13.148314476013184
    9. '<|end|>' → logprob: -13.273314476013184
    10. '    ' → logprob: -13.273314476013184

Token 1050: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021260380744934
    2. '=' → logprob: -2.350212574005127
    3. '       ' → logprob: -12.350213050842285
    4. '        ' → logprob: -14.475213050842285
    5. '=line' → logprob: -14.475213050842285
    6. '           ' → logprob: -15.725213050842285
    7. '=n' → logprob: -15.850213050842285
    8. '   ' → logprob: -15.975213050842285
    9. '    ' → logprob: -16.60021209716797
    10. ' ' → logprob: -17.10021209716797

Token 1051: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.00861456897109747
    2. ' next' → logprob: -4.758614540100098
    3. '(next' → logprob: -17.133615493774414
    4. '	next' → logprob: -17.508615493774414
    5. '[next' → logprob: -18.008615493774414
    6. '.next' → logprob: -18.883615493774414
    7. ',next' → logprob: -21.633615493774414
    8. '_next' → logprob: -22.758615493774414
    9. '   ' → logprob: -23.258615493774414
    10. 'Next' → logprob: -24.008615493774414

Token 1052: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6939621567726135
    2. '(input' → logprob: -0.6939621567726135
    3. '=input' → logprob: -7.693962097167969
    4. ' input' → logprob: -8.818962097167969
    5. ',input' → logprob: -9.318962097167969
    6. '[input' → logprob: -10.068962097167969
    7. '       ' → logprob: -10.443962097167969
    8. '           ' → logprob: -11.068962097167969
    9. '	input' → logprob: -11.443962097167969
    10. '<input' → logprob: -11.818962097167969

Token 1053: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.47546449303627014
    2. 'input' → logprob: -0.9754644632339478
    3. '(input' → logprob: -6.600464344024658
    4. '(iter' → logprob: -11.350464820861816
    5. 'inter' → logprob: -11.850464820861816
    6. 'iterator' → logprob: -12.350464820861816
    7. 'import' → logprob: -14.100464820861816
    8. '   ' → logprob: -14.975464820861816
    9. '=input' → logprob: -14.975464820861816
    10. ' input' → logprob: -15.350464820861816

Token 1054: ').' (ID: 741)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.611711859703064
    2. ')' → logprob: -1.236711859703064
    3. '       ' → logprob: -2.4867119789123535
    4. ').' → logprob: -2.7367119789123535
    5. '()' → logprob: -5.1117119789123535
    6. '())
' → logprob: -5.4867119789123535
    7. '   ' → logprob: -5.8617119789123535
    8. '()
' → logprob: -6.1117119789123535
    9. '().' → logprob: -6.3617119789123535
    10. '(coords' → logprob: -7.3617119789123535

Token 1055: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.38811346888542175
    2. 'split' → logprob: -1.1381134986877441
    3. 'rstrip' → logprob: -6.763113498687744
    4. '       ' → logprob: -9.763113021850586
    5. 'coords' → logprob: -11.513113021850586
    6. ' strip' → logprob: -12.263113021850586
    7. ' split' → logprob: -12.888113021850586
    8. 'spl' → logprob: -12.888113021850586
    9. 'tokens' → logprob: -12.888113021850586
    10. '.strip' → logprob: -13.013113021850586

Token 1056: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0052534411661326885
    2. 'coords' → logprob: -5.505253314971924
    3. '(coords' → logprob: -7.630253314971924
    4. '_coords' → logprob: -8.505253791809082
    5. 'coordinates' → logprob: -8.880253791809082
    6. '
' → logprob: -9.505253791809082
    7. 'if' → logprob: -10.380253791809082
    8. '=' → logprob: -10.380253791809082
    9. '   ' → logprob: -10.505253791809082
    10. '        
' → logprob: -10.630253791809082

Token 1057: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013683346332982183
    2. 'coords' → logprob: -6.626368522644043
    3. ' coords' → logprob: -11.001368522644043
    4. 'coordinates' → logprob: -11.001368522644043
    5. '           ' → logprob: -12.626368522644043
    6. '   ' → logprob: -12.876368522644043
    7. '_coords' → logprob: -13.751368522644043
    8. '	' → logprob: -14.751368522644043
    9. 'points' → logprob: -15.001368522644043
    10. '	   ' → logprob: -15.251368522644043

Token 1058: ' coords' (ID: 53253)
  Prédit: 'spr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spr' → logprob: -0.7281556129455566
    2. 'coords' (adapté à ' coords') → logprob: -0.7281556129455566
    3. 'd' → logprob: -4.228155612945557
    4. '       ' → logprob: -4.353155612945557
    5. 'coordinates' → logprob: -5.228155612945557
    6. 'if' → logprob: -7.103155612945557
    7. 'positions' → logprob: -7.978155612945557
    8. 'spl' → logprob: -9.103155136108398
    9. 'sprites' → logprob: -9.478155136108398
    10. '   ' → logprob: -9.478155136108398

Token 1059: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8341996073722839
    2. ' =' → logprob: -0.8341996073722839
    3. '=' → logprob: -2.3341996669769287
    4. '_coords' → logprob: -4.33419942855835
    5. '_list' → logprob: -4.95919942855835
    6. '_tokens' → logprob: -5.33419942855835
    7. '_lines' → logprob: -5.70919942855835
    8. '_positions' → logprob: -5.83419942855835
    9. '_line' → logprob: -6.20919942855835
    10. '_s' → logprob: -7.58419942855835

Token 1060: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.061631154268980026
    2. '[list' → logprob: -3.561631202697754
    3. 'coords' → logprob: -4.061631202697754
    4. '[' → logprob: -4.811631202697754
    5. ' list' → logprob: -5.311631202697754
    6. 'read' → logprob: -7.686631202697754
    7. ' [' → logprob: -7.811631202697754
    8. '[(' → logprob: -9.186631202697754
    9. ' coords' → logprob: -9.686631202697754
    10. '(coords' → logprob: -10.811631202697754

Token 1061: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0006539395544677973
    2. 'map' → logprob: -7.3756537437438965
    3. '(coords' → logprob: -11.250654220581055
    4. '(' → logprob: -12.375654220581055
    5. 'coords' → logprob: -13.125654220581055
    6. '=' → logprob: -13.250654220581055
    7. '	map' → logprob: -13.750654220581055
    8. '[int' → logprob: -14.125654220581055
    9. '(int' → logprob: -14.250654220581055
    10. '
' → logprob: -14.375654220581055

Token 1062: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008618354797363281
    2. 'int' → logprob: -4.758618354797363
    3. 'coords' → logprob: -13.633618354797363
    4. ',int' → logprob: -13.883618354797363
    5. '[int' → logprob: -15.008618354797363
    6. ' int' → logprob: -15.133618354797363
    7. '(' → logprob: -15.258618354797363
    8. '   ' → logprob: -15.633618354797363
    9. '=int' → logprob: -15.758618354797363
    10. '(str' → logprob: -16.008617401123047

Token 1063: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02357061579823494
    2. '(coords' → logprob: -3.7735705375671387
    3. ' ,' → logprob: -9.523571014404297
    4. 'coords' → logprob: -9.648571014404297
    5. ',
' → logprob: -10.023571014404297
    6. '(' → logprob: -10.023571014404297
    7. '(co' → logprob: -10.273571014404297
    8. ',c' → logprob: -11.148571014404297
    9. '(coeff' → logprob: -11.648571014404297
    10. '(),' → logprob: -12.148571014404297

Token 1064: ' coords' (ID: 53253)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coords' → logprob: -2.3080716346157715e-05
    2. ' coords' → logprob: -11.000022888183594
    3. '(coords' → logprob: -12.000022888183594
    4. 'coord' → logprob: -16.375022888183594
    5. '
' → logprob: -17.625022888183594
    6. 'coordinates' → logprob: -18.625022888183594
    7. '_coords' → logprob: -18.875022888183594
    8. '   ' → logprob: -19.250022888183594
    9. '.coords' → logprob: -20.250022888183594
    10. 'cord' → logprob: -21.125022888183594

Token 1065: '_line' (ID: 14418)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.1738613247871399
    2. '(coords' → logprob: -1.9238612651824951
    3. '.split' → logprob: -5.048861503601074
    4. '_coords' → logprob: -5.423861503601074
    5. '.coords' → logprob: -6.673861503601074
    6. ',' → logprob: -7.548861503601074
    7. '.' → logprob: -8.048861503601074
    8. 'split' → logprob: -9.298861503601074
    9. '.strip' → logprob: -9.298861503601074
    10. ')' → logprob: -9.798861503601074

Token 1066: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.13824380934238434
    2. '().' → logprob: -2.3882439136505127
    3. '.strip' → logprob: -3.3882439136505127
    4. '.' → logprob: -6.388243675231934
    5. ' .' → logprob: -6.513243675231934
    6. '.replace' → logprob: -9.013243675231934
    7. '.rstrip' → logprob: -10.138243675231934
    8. ')' → logprob: -10.513243675231934
    9. '.reshape' → logprob: -10.888243675231934
    10. '))' → logprob: -10.888243675231934

Token 1067: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.17331717908382416
    2. '()))
' → logprob: -1.9233171939849854
    3. '))' → logprob: -4.423316955566406
    4. '()' → logprob: -7.423316955566406
    5. '))
' → logprob: -8.298316955566406
    6. '(' → logprob: -9.173316955566406
    7. '(','' → logprob: -10.798316955566406
    8. '()))

' → logprob: -11.673316955566406
    9. '())' → logprob: -11.673316955566406
    10. '()))
' → logprob: -11.798316955566406

Token 1068: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018166683614253998
    2. 'spr' → logprob: -4.518166542053223
    3. 'positions' → logprob: -5.268166542053223
    4. 's' → logprob: -7.643166542053223
    5. 'coordinates' → logprob: -7.893166542053223
    6. 'points' → logprob: -8.518166542053223
    7. 'coords' → logprob: -8.768166542053223
    8. ' positions' → logprob: -9.018166542053223
    9. ',' → logprob: -9.143166542053223
    10. '```' → logprob: -9.143166542053223

Token 1069: ' sprink' (ID: 80706)
  Prédit: 'spr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spr' → logprob: -0.2530774474143982
    2. '       ' → logprob: -1.503077507019043
    3. 'positions' → logprob: -6.878077507019043
    4. '   ' → logprob: -9.753077507019043
    5. 's' → logprob: -11.003077507019043
    6. 'sprites' → logprob: -11.378077507019043
    7. 'spots' → logprob: -12.378077507019043
    8. 'coords' → logprob: -12.503077507019043
    9. 'spar' → logprob: -12.628077507019043
    10. 'coordinates' → logprob: -12.878077507019043

Token 1070: 'lers' (ID: 15137)
  Prédit: 'lers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lers' → logprob: -0.014202408492565155
    2. 'ler' → logprob: -4.26420259475708
    3. 'ers' → logprob: -10.514202117919922
    4. 'l' → logprob: -12.264202117919922
    5. 'kers' → logprob: -13.014202117919922
    6. '_' → logprob: -13.764202117919922
    7. '   ' → logprob: -14.264202117919922
    8. '[' → logprob: -14.764202117919922
    9. '_l' → logprob: -14.889202117919922
    10. '#' → logprob: -14.889202117919922

Token 1071: '_positions' (ID: 93193)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6501133441925049
    2. '_positions' → logprob: -0.9001133441925049
    3. '=' → logprob: -2.650113344192505
    4. 'positions' → logprob: -8.650113105773926
    5. '_coords' → logprob: -8.650113105773926
    6. '_coordinates' → logprob: -8.900113105773926
    7. '   ' → logprob: -9.025113105773926
    8. '_pos' → logprob: -9.275113105773926
    9. '=[]' → logprob: -9.900113105773926
    10. '_' → logprob: -10.775113105773926

Token 1072: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759502053260803
    2. ' =' → logprob: -0.8259502053260803
    3. '=[' → logprob: -11.950950622558594
    4. '=[]' → logprob: -12.950950622558594
    5. '   ' → logprob: -14.200950622558594
    6. ' =[' → logprob: -14.450950622558594
    7. '=
' → logprob: -15.825950622558594
    8. ' =
' → logprob: -16.200950622558594
    9. '[' → logprob: -16.200950622558594
    10. '[:]' → logprob: -16.325950622558594

Token 1073: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0002526376338209957
    2. '[' → logprob: -8.750252723693848
    3. ' [(' → logprob: -9.500252723693848
    4. '[list' → logprob: -11.000252723693848
    5. '[((' → logprob: -13.750252723693848
    6. '   ' → logprob: -13.750252723693848
    7. '[s' → logprob: -16.87525177001953
    8. '([(' → logprob: -16.87525177001953
    9. '[class' → logprob: -17.12525177001953
    10. '[pos' → logprob: -17.25025177001953

Token 1074: 'coords' (ID: 78648)
  Prédit: 'coords'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.0001294030516874045
    2. '(coords' → logprob: -9.000129699707031
    3. ' coords' → logprob: -12.250129699707031
    4. 'coordinates' → logprob: -14.500129699707031
    5. '   ' → logprob: -14.625129699707031
    6. '
' → logprob: -16.75012969970703
    7. 'coord' → logprob: -16.87512969970703
    8. '(' → logprob: -17.87512969970703
    9. '           ' → logprob: -18.25012969970703
    10. '       ' → logprob: -18.37512969970703

Token 1075: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020354038861114532
    2. '[' → logprob: -8.500203132629395
    3. '[idx' → logprob: -17.50020408630371
    4. '[n' → logprob: -18.37520408630371
    5. '[ix' → logprob: -18.50020408630371
    6. ' [' → logprob: -18.62520408630371
    7. 'i' → logprob: -18.62520408630371
    8. '[x' → logprob: -18.62520408630371
    9. '
' → logprob: -19.12520408630371
    10. '[j' → logprob: -19.62520408630371

Token 1076: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03786175325512886
    2. ',i' → logprob: -3.6628618240356445
    3. ' ,' → logprob: -4.6628618240356445
    4. ' ' → logprob: -7.1628618240356445
    5. '],' → logprob: -7.5378618240356445
    6. '   ' → logprob: -8.287861824035645
    7. '+' → logprob: -8.287861824035645
    8. '  ' → logprob: -8.912861824035645
    9. '+i' → logprob: -10.537861824035645
    10. '),' → logprob: -11.537861824035645

Token 1077: ' coords' (ID: 53253)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.0031899516470730305
    2. ' coords' → logprob: -5.753190040588379
    3. '(coords' → logprob: -11.378190040588379
    4. 'coordinates' → logprob: -14.878190040588379
    5. '_coords' → logprob: -15.253190040588379
    6. '.coords' → logprob: -15.628190040588379
    7. 'coord' → logprob: -17.753189086914062
    8. 'cols' → logprob: -18.253189086914062
    9. '<|end|>' → logprob: -18.503189086914062
    10. 'Coords' → logprob: -18.503189086914062

Token 1078: '[i' (ID: 1768)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0890401229262352
    2. '[i' → logprob: -2.7140400409698486
    3. '+i' → logprob: -4.589040279388428
    4. 'i' → logprob: -5.839040279388428
    5. '(i' → logprob: -5.964040279388428
    6. '<|end|>' → logprob: -6.839040279388428
    7. ',i' → logprob: -7.839040279388428
    8. ' +' → logprob: -7.964040279388428
    9. '<|end|>' → logprob: -8.33903980255127
    10. '```' → logprob: -8.46403980255127

Token 1079: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.7994282795116305e-05
    2. ' +' → logprob: -10.00004768371582
    3. '+i' → logprob: -13.25004768371582
    4. '   ' → logprob: -15.12504768371582
    5. '])' → logprob: -15.12504768371582
    6. '],' → logprob: -15.62504768371582
    7. '+
' → logprob: -16.87504768371582
    8. ' ' → logprob: -17.62504768371582
    9. '+j' → logprob: -18.12504768371582
    10. 'i' → logprob: -19.00004768371582

Token 1080: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. 'i' → logprob: -11.500015258789062
    3. '2' → logprob: -12.750015258789062
    4. '3' → logprob: -13.625015258789062
    5. '5' → logprob: -15.625015258789062
    6. 'j' → logprob: -15.750015258789062
    7. ' ' → logprob: -16.437515258789062
    8. '
' → logprob: -16.500015258789062
    9. '(i' → logprob: -16.625015258789062
    10. '7' → logprob: -16.687515258789062

Token 1081: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.672236824873835e-05
    2. ' )' → logprob: -9.625076293945312
    3. ')
' → logprob: -12.125076293945312
    4. ')]' → logprob: -12.625076293945312
    5. '   ' → logprob: -13.750076293945312
    6. '])' → logprob: -15.000076293945312
    7. ' ' → logprob: -16.000076293945312
    8. '    ' → logprob: -16.250076293945312
    9. ']' → logprob: -16.500076293945312
    10. '       ' → logprob: -16.750076293945312

Token 1082: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39531925320625305
    2. ' for' → logprob: -1.1453192234039307
    3. '           ' → logprob: -5.64531946182251
    4. '       ' → logprob: -5.77031946182251
    5. '        ' → logprob: -7.27031946182251
    6. '          ' → logprob: -7.77031946182251
    7. '         ' → logprob: -8.770318984985352
    8. '               ' → logprob: -9.020318984985352
    9. '            ' → logprob: -9.520318984985352
    10. '                ' → logprob: -9.895318984985352

Token 1083: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015023599844425917
    2. ' i' → logprob: -6.501502513885498
    3. '
' → logprob: -18.376502990722656
    4. '	i' → logprob: -19.251502990722656
    5. '(i' → logprob: -19.626502990722656
    6. '   ' → logprob: -20.751502990722656
    7. ' ' → logprob: -22.001502990722656
    8. '{i' → logprob: -22.001502990722656
    9. ' in' → logprob: -22.376502990722656
    10. '[i' → logprob: -22.876502990722656

Token 1084: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.17328721284866333
    2. 'i' → logprob: -2.4232871532440186
    3. ' in' → logprob: -2.6732871532440186
    4. ' i' → logprob: -6.548287391662598
    5. '0' → logprob: -11.923287391662598
    6. '
' → logprob: -12.048287391662598
    7. ' ' → logprob: -13.048287391662598
    8. 'range' → logprob: -14.298287391662598
    9. '   ' → logprob: -15.298287391662598
    10. ',i' → logprob: -15.548287391662598

Token 1085: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.5491004129871726e-05
    2. ' range' → logprob: -10.000045776367188
    3. '
' → logprob: -22.125045776367188
    4. 'i' → logprob: -22.625045776367188
    5. '	range' → logprob: -22.625045776367188
    6. '(range' → logprob: -23.375045776367188
    7. '0' → logprob: -23.875045776367188
    8. '   ' → logprob: -24.000045776367188
    9. ' ' → logprob: -24.625045776367188
    10. '  ' → logprob: -26.500045776367188

Token 1086: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25225919485092163
    2. '(' → logprob: -1.5022592544555664
    3. '2' → logprob: -8.127259254455566
    4. '1' → logprob: -11.502259254455566
    5. ' ' → logprob: -11.627259254455566
    6. '(len' → logprob: -12.252259254455566
    7. '   ' → logprob: -12.877259254455566
    8. 'len' → logprob: -13.002259254455566
    9. ' (' → logprob: -13.127259254455566
    10. '           ' → logprob: -13.877259254455566

Token 1087: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002869661897420883
    2. '2' → logprob: -5.877869606018066
    3. '1' → logprob: -9.752869606018066
    4. ' ' → logprob: -12.252869606018066
    5. 'i' → logprob: -14.752869606018066
    6. '4' → logprob: -15.127869606018066
    7. 'len' → logprob: -15.127869606018066
    8. '           ' → logprob: -15.627869606018066
    9. '3' → logprob: -15.877869606018066
    10. '(' → logprob: -16.252870559692383

Token 1088: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010971765033900738
    2. '2' → logprob: -4.760971546173096
    3. ' ' → logprob: -6.760971546173096
    4. ',' → logprob: -6.760971546173096
    5. '(' → logprob: -10.760972023010254
    6. '1' → logprob: -12.135972023010254
    7. ' ,' → logprob: -12.760972023010254
    8. 'len' → logprob: -13.260972023010254
    9. '(len' → logprob: -13.385972023010254
    10. ',len' → logprob: -13.385972023010254

Token 1089: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.001859272480942309
    2. ' len' → logprob: -6.626859188079834
    3. '2' → logprob: -7.626859188079834
    4. '(len' → logprob: -10.626859664916992
    5. '0' → logprob: -11.251859664916992
    6. '           ' → logprob: -13.126859664916992
    7. '       ' → logprob: -14.001859664916992
    8. ' ' → logprob: -14.126859664916992
    9. '   ' → logprob: -14.126859664916992
    10. '	len' → logprob: -14.126859664916992

Token 1090: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.38780203461647034
    2. 'len' → logprob: -1.137802004814148
    3. '0' → logprob: -7.0128021240234375
    4. ' len' → logprob: -11.512802124023438
    5. '           ' → logprob: -12.012802124023438
    6. 'n' → logprob: -12.262802124023438
    7. '
' → logprob: -13.387802124023438
    8. '       ' → logprob: -13.512802124023438
    9. '(len' → logprob: -13.637802124023438
    10. '   ' → logprob: -14.012802124023438

Token 1091: '*n' (ID: 58470)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0039445869624614716
    2. '*' → logprob: -5.753944396972656
    3. ',n' → logprob: -8.003944396972656
    4. '*n' → logprob: -8.378944396972656
    5. ',len' → logprob: -8.753944396972656
    6. ' ,' → logprob: -11.003944396972656
    7. ' *' → logprob: -11.503944396972656
    8. '
' → logprob: -12.253944396972656
    9. '*i' → logprob: -12.753944396972656
    10. '```' → logprob: -12.878944396972656

Token 1092: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.438573680294212e-06
    2. ' ,' → logprob: -12.250005722045898
    3. ',
' → logprob: -14.750005722045898
    4. ',len' → logprob: -16.7500057220459
    5. ',i' → logprob: -16.8750057220459
    6. ',n' → logprob: -17.6250057220459
    7. ',length' → logprob: -18.1250057220459
    8. '‌,' → logprob: -18.3750057220459
    9. ',int' → logprob: -18.5000057220459
    10. ',None' → logprob: -18.6250057220459

Token 1093: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -19.500017166137695
    4. '  ' → logprob: -21.375017166137695
    5. '    ' → logprob: -22.250017166137695
    6. '２' → logprob: -23.125017166137695
    7. '۲' → logprob: -23.250017166137695
    8. '     ' → logprob: -23.250017166137695
    9. '       ' → logprob: -24.125017166137695
    10. '
' → logprob: -24.125017166137695

Token 1094: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -20.75
    4. '
' → logprob: -21.875
    5. '```' → logprob: -22.375
    6. '۲' → logprob: -23.125
    7. '２' → logprob: -23.25
    8. '+' → logprob: -23.875
    9. '  ' → logprob: -24.375
    10. '1' → logprob: -24.75

Token 1095: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.01257805060595274
    2. ',' → logprob: -4.387578010559082
    3. ')' → logprob: -10.637578010559082
    4. ')])' → logprob: -10.762578010559082
    5. ' )' → logprob: -11.637578010559082
    6. ' ,' → logprob: -12.637578010559082
    7. '   ' → logprob: -12.637578010559082
    8. ')]
' → logprob: -13.012578010559082
    9. '       ' → logprob: -13.012578010559082
    10. '])]' → logprob: -14.262578010559082

Token 1096: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17771902680397034
    2. '   ' → logprob: -2.0527191162109375
    3. 'solver' → logprob: -3.4277191162109375
    4. 'ps' → logprob: -7.1777191162109375
    5. ' solver' → logprob: -7.1777191162109375
    6. 'solution' → logprob: -9.052719116210938
    7. 'initial' → logprob: -9.177719116210938
    8. 'py' → logprob: -10.052719116210938
    9. '
' → logprob: -10.552719116210938
    10. 's' → logprob: -10.552719116210938

Token 1097: ' #' (ID: 1069)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.14486032724380493
    2. '   ' → logprob: -2.51986026763916
    3. '       ' → logprob: -3.39486026763916
    4. ' solver' → logprob: -4.01986026763916
    5. 'initial' → logprob: -6.26986026763916
    6. ' initial' → logprob: -7.89486026763916
    7. 'solution' → logprob: -8.39486026763916
    8. 'ps' → logprob: -8.64486026763916
    9. 'sur' → logprob: -9.89486026763916
    10. 'sol' → logprob: -10.76986026763916

Token 1098: ' According' (ID: 16344)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.00599717115983367
    2. 'initial' → logprob: -5.255997180938721
    3. ' solver' → logprob: -8.255996704101562
    4. '       ' → logprob: -8.755996704101562
    5. 'sur' → logprob: -9.005996704101562
    6. '   ' → logprob: -9.380996704101562
    7. 'ss' → logprob: -10.005996704101562
    8. 'sol' → logprob: -10.255996704101562
    9. 'solution' → logprob: -10.505996704101562
    10. 's' → logprob: -11.755996704101562

Token 1099: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4340210556983948
    2. ' to' → logprob: -1.05902099609375
    3. '#' → logprob: -5.93402099609375
    4. '       ' → logprob: -6.68402099609375
    5. 'def' → logprob: -7.43402099609375
    6. '_to' → logprob: -8.30902099609375
    7. '<|end|>' → logprob: -8.80902099609375
    8. '```' → logprob: -9.43402099609375
    9. 'the' → logprob: -9.68402099609375
    10. 'To' → logprob: -9.80902099609375

Token 1100: ' problem' (ID: 4792)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6989637017250061
    2. 'problem' → logprob: -1.0739636421203613
    3. '#' → logprob: -2.4489636421203613
    4. 'code' → logprob: -3.8239636421203613
    5. 'comment' → logprob: -4.698963642120361
    6. 'initial' → logprob: -4.698963642120361
    7. 'previous' → logprob: -5.323963642120361
    8. 'current' → logprob: -5.448963642120361
    9. 'model' → logprob: -5.698963642120361
    10. 'Problem' → logprob: -5.948963642120361

Token 1101: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41241177916526794
    2. 'solver' → logprob: -1.5374118089675903
    3. 'initial' → logprob: -3.162411689758301
    4. '   ' → logprob: -3.287411689758301
    5. ' initial' → logprob: -3.912411689758301
    6. ' solver' → logprob: -4.787411689758301
    7. '#' → logprob: -5.537411689758301
    8. 'py' → logprob: -5.537411689758301
    9. '
' → logprob: -6.662411689758301
    10. 'ps' → logprob: -6.787411689758301

Token 1102: ' initial' (ID: 4871)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.6821833252906799
    2. 'initial' → logprob: -0.8071833252906799
    3. '#' → logprob: -3.807183265686035
    4. 'ps' → logprob: -4.682183265686035
    5. 'py' → logprob: -5.307183265686035
    6. 'model' → logprob: -5.682183265686035
    7. 'pos' → logprob: -6.307183265686035
    8. 'result' → logprob: -6.432183265686035
    9. 'sur' → logprob: -6.557183265686035
    10. 'p' → logprob: -6.807183265686035

Token 1103: ' jump' (ID: 13843)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.31346866488456726
    2. '_pos' → logprob: -1.3134686946868896
    3. '_position' → logprob: -8.938468933105469
    4. 'position' → logprob: -10.063468933105469
    5. '       ' → logprob: -10.938468933105469
    6. '```' → logprob: -11.563468933105469
    7. '   ' → logprob: -12.813468933105469
    8. '
' → logprob: -14.188468933105469
    9. 'Pos' → logprob: -14.313468933105469
    10. '_p' → logprob: -14.813468933105469

Token 1104: ' is' (ID: 382)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.21053697168827057
    2. '   ' → logprob: -2.0855369567871094
    3. '       ' → logprob: -3.2105369567871094
    4. ' solver' → logprob: -3.8355369567871094
    5. ' =' → logprob: -6.710536956787109
    6. '
' → logprob: -7.210536956787109
    7. ',' → logprob: -7.710536956787109
    8. '=' → logprob: -8.46053695678711
    9. 'initial' → logprob: -8.58553695678711
    10. 's' → logprob: -8.83553695678711

Token 1105: ' on' (ID: 402)
  Prédit: 'must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'must' → logprob: -0.6891674399375916
    2. 'required' → logprob: -1.3141674995422363
    3. 'True' → logprob: -2.0641674995422363
    4. 'mandatory' → logprob: -3.4391674995422363
    5. 'to' → logprob: -4.189167499542236
    6. 'always' → logprob: -4.439167499542236
    7. 'False' → logprob: -4.564167499542236
    8. 'from' → logprob: -5.189167499542236
    9. 'allowed' → logprob: -5.689167499542236
    10. '   ' → logprob: -5.689167499542236

Token 1106: ' sprinkler' (ID: 181940)
  Prédit: 'spr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spr' → logprob: -0.050270892679691315
    2. 'a' → logprob: -3.9252707958221436
    3. 'Spr' → logprob: -4.300271034240723
    4. 'the' → logprob: -4.300271034240723
    5. 'self' → logprob: -7.300271034240723
    6. 'first' → logprob: -7.425271034240723
    7. 'current' → logprob: -8.050271034240723
    8. 'initial' → logprob: -9.050271034240723
    9. ' sprink' → logprob: -9.050271034240723
    10. 'coverage' → logprob: -9.175271034240723

Token 1107: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2860364615917206
    2. '   ' → logprob: -2.161036491394043
    3. 'solver' → logprob: -2.661036491394043
    4. 'sequence' → logprob: -3.661036491394043
    5. '
' → logprob: -4.411036491394043
    6. 's' → logprob: -4.661036491394043
    7. 'initial' → logprob: -5.036036491394043
    8. ' sequence' → logprob: -6.661036491394043
    9. 'spr' → logprob: -6.786036491394043
    10. '(s' → logprob: -6.911036491394043

Token 1108: '1' (ID: 16)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.82352215051651
    2. '0' → logprob: -1.4485220909118652
    3. '_positions' → logprob: -1.6985220909118652
    4. 'i' → logprob: -2.6985220909118652
    5. 'seq' → logprob: -4.198522090911865
    6. 'sequence' → logprob: -4.323522090911865
    7. '   ' → logprob: -4.823522090911865
    8. 'idx' → logprob: -4.823522090911865
    9. 'pos' → logprob: -5.448522090911865
    10. '       ' → logprob: -5.823522090911865

Token 1109: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0400795936584473
    2. 'solver' → logprob: -1.1650795936584473
    3. '   ' → logprob: -1.4150795936584473
    4. ' solver' → logprob: -2.5400795936584473
    5. '
' → logprob: -4.540079593658447
    6. 'solution' → logprob: -7.915079593658447
    7. 's' → logprob: -8.040079116821289
    8. ' solution' → logprob: -8.165079116821289
    9. ' ' → logprob: -8.790079116821289
    10. '```' → logprob: -8.790079116821289

Token 1110: 'index' (ID: 2257)
  Prédit: 'spr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spr' → logprob: -0.23699451982975006
    2. '#' → logprob: -1.9869945049285889
    3. 'so' → logprob: -3.361994504928589
    4. 'True' → logprob: -4.236994743347168
    5. 'which' → logprob: -4.986994743347168
    6. 'positions' → logprob: -5.986994743347168
    7. 'coverage' → logprob: -6.236994743347168
    8. 's' → logprob: -6.486994743347168
    9. '0' → logprob: -6.486994743347168
    10. 'meaning' → logprob: -6.611994743347168

Token 1111: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021520459558814764
    2. '=' → logprob: -6.252151966094971
    3. ' =' → logprob: -8.877152442932129
    4. ' ' → logprob: -9.627152442932129
    5. '```' → logprob: -12.252152442932129
    6. '1' → logprob: -12.377152442932129
    7. '==' → logprob: -12.502152442932129
    8. ')' → logprob: -12.752152442932129
    9. '
' → logprob: -14.377152442932129
    10. '       ' → logprob: -15.252152442932129

Token 1112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.537868779967539e-06
    2. '=' → logprob: -12.375008583068848
    3. ' ' → logprob: -13.375008583068848
    4. '```' → logprob: -14.000008583068848
    5. ')' → logprob: -14.500008583068848
    6. '
' → logprob: -14.750008583068848
    7. ' =' → logprob: -14.875008583068848
    8. '1' → logprob: -15.750008583068848
    9. '[' → logprob: -16.00000762939453
    10. ',' → logprob: -16.12500762939453

Token 1113: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2823216915130615
    2. ')' → logprob: -1.5323216915130615
    3. ',' → logprob: -3.7823216915130615
    4. ')
' → logprob: -5.032321929931641
    5. '),' → logprob: -7.782321929931641
    6. '):
' → logprob: -9.65732192993164
    7. '   ' → logprob: -10.03232192993164
    8. ').' → logprob: -10.28232192993164
    9. '#' → logprob: -10.90732192993164
    10. '):' → logprob: -11.03232192993164

Token 1114: ' start' (ID: 1604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29408496618270874
    2. '   ' → logprob: -1.4190850257873535
    3. 'solver' → logprob: -4.4190850257873535
    4. '
' → logprob: -7.7940850257873535
    5. 'solution' → logprob: -9.294084548950195
    6. ' solver' → logprob: -9.419084548950195
    7. 's' → logprob: -9.544084548950195
    8. 'ps' → logprob: -10.419084548950195
    9. '    
' → logprob: -10.544084548950195
    10. '        
' → logprob: -10.669084548950195

Token 1115: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038801487535238266
    2. 'solver' → logprob: -3.913801431655884
    3. '   ' → logprob: -4.038801670074463
    4. ' solver' → logprob: -8.913801193237305
    5. 'initial' → logprob: -9.413801193237305
    6. 's' → logprob: -9.538801193237305
    7. 'solution' → logprob: -9.538801193237305
    8. 'sol' → logprob: -10.413801193237305
    9. '
' → logprob: -10.913801193237305
    10. 'ps' → logprob: -10.913801193237305

Token 1116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02021646872162819
    2. '   ' → logprob: -4.020216464996338
    3. 'solver' → logprob: -6.270216464996338
    4. 'solution' → logprob: -9.020216941833496
    5. '
' → logprob: -11.020216941833496
    6. 'ps' → logprob: -11.770216941833496
    7. 's' → logprob: -11.895216941833496
    8. ' solver' → logprob: -12.395216941833496
    9. 'sol' → logprob: -12.770216941833496
    10. '        
' → logprob: -13.020216941833496

Token 1117: ' #' (ID: 1069)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.22090864181518555
    2. '   ' → logprob: -1.8459086418151855
    3. '       ' → logprob: -4.3459086418151855
    4. 'initial' → logprob: -4.4709086418151855
    5. ' solver' → logprob: -5.0959086418151855
    6. 'py' → logprob: -5.8459086418151855
    7. 'ps' → logprob: -6.4709086418151855
    8. ' initial' → logprob: -6.4709086418151855
    9. 'solution' → logprob: -6.5959086418151855
    10. ' p' → logprob: -7.2209086418151855

Token 1118: ' So' (ID: 2632)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.15234865248203278
    2. '       ' → logprob: -2.027348756790161
    3. '   ' → logprob: -4.902348518371582
    4. 'initial' → logprob: -7.152348518371582
    5. ' solver' → logprob: -7.652348518371582
    6. 'sur' → logprob: -7.902348518371582
    7. 'solution' → logprob: -8.027348518371582
    8. 'sol' → logprob: -8.902348518371582
    9. 'ps' → logprob: -10.652348518371582
    10. 's' → logprob: -11.152348518371582

Token 1119: ' in' (ID: 306)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.043429482728242874
    2. 'initial' → logprob: -3.293429374694824
    3. '       ' → logprob: -6.043429374694824
    4. '   ' → logprob: -6.293429374694824
    5. 'sur' → logprob: -7.668429374694824
    6. ' solver' → logprob: -8.543429374694824
    7. 'solution' → logprob: -8.793429374694824
    8. 'ps' → logprob: -8.918429374694824
    9. 'pos' → logprob: -10.168429374694824
    10. 'sol' → logprob: -10.293429374694824

Token 1120: ' model' (ID: 2359)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.34797078371047974
    2. 'sur' → logprob: -1.722970724105835
    3. 'code' → logprob: -3.097970724105835
    4. 'initial' → logprob: -4.097970962524414
    5. 'pos' → logprob: -4.722970962524414
    6. '#' → logprob: -4.972970962524414
    7. 's' → logprob: -5.097970962524414
    8. 'sol' → logprob: -5.222970962524414
    9. 'spr' → logprob: -5.472970962524414
    10. 'solution' → logprob: -5.597970962524414

Token 1121: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8382458686828613
    2. 'solver' → logprob: -0.8382458686828613
    3. '   ' → logprob: -2.0882458686828613
    4. ' solver' → logprob: -5.213245868682861
    5. 'initial' → logprob: -5.838245868682861
    6. '
' → logprob: -7.338245868682861
    7. 'solution' → logprob: -7.588245868682861
    8. ' initial' → logprob: -7.838245868682861
    9. ',' → logprob: -8.338245391845703
    10. 'ps' → logprob: -8.838245391845703

Token 1122: ' must' (ID: 2804)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.009869883768260479
    2. 'initial' → logprob: -4.8848700523376465
    3. 'sur' → logprob: -6.2598700523376465
    4. 'solution' → logprob: -9.634869575500488
    5. '   ' → logprob: -9.759869575500488
    6. ' solver' → logprob: -9.759869575500488
    7. 'result' → logprob: -10.134869575500488
    8. 'sol' → logprob: -10.259869575500488
    9. 'ss' → logprob: -10.384869575500488
    10. '       ' → logprob: -11.134869575500488

Token 1123: '_jump' (ID: 164075)
  Prédit: '_jump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_jump' → logprob: -0.06197485327720642
    2. 'jump' → logprob: -2.8119747638702393
    3. ' jump' → logprob: -12.18697452545166
    4. '_j' → logprob: -14.06197452545166
    5. '_continue' → logprob: -15.06197452545166
    6. '.jump' → logprob: -15.43697452545166
    7. 'continue' → logprob: -15.68697452545166
    8. 'Jump' → logprob: -15.68697452545166
    9. '_move' → logprob: -16.186975479125977
    10. '```' → logprob: -16.311975479125977

Token 1124: '=True' (ID: 7827)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005941952113062143
    2. ' =' → logprob: -5.255941867828369
    3. '=True' → logprob: -7.255941867828369
    4. ',' → logprob: -13.880942344665527
    5. '=
' → logprob: -14.880942344665527
    6. '   ' → logprob: -15.755942344665527
    7. '=

' → logprob: -16.50594139099121
    8. 'is' → logprob: -17.00594139099121
    9. '=False' → logprob: -17.00594139099121
    10. ' is' → logprob: -17.00594139099121

Token 1125: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0684000626206398
    2. '       ' → logprob: -3.4434001445770264
    3. 'solver' → logprob: -3.4434001445770264
    4. '
' → logprob: -6.818399906158447
    5. ' solver' → logprob: -7.693399906158447
    6. 's' → logprob: -8.318400382995605
    7. '    
' → logprob: -8.818400382995605
    8. 'solution' → logprob: -9.818400382995605
    9. ' ' → logprob: -10.193400382995605
    10. '_solver' → logprob: -10.318400382995605

Token 1126: ' idx' (ID: 14016)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.5530704855918884
    2. 'start' → logprob: -1.1780705451965332
    3. 'the' → logprob: -3.428070545196533
    4. '0' → logprob: -3.428070545196533
    5. 'idx' → logprob: -4.303070545196533
    6. 'index' → logprob: -4.303070545196533
    7. 'call' → logprob: -5.178070545196533
    8. 'can' → logprob: -5.553070545196533
    9. 'def' → logprob: -6.053070545196533
    10. 'main' → logprob: -6.178070545196533

Token 1127: '=' (ID: 28)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013905025087296963
    2. '0' → logprob: -5.013905048370361
    3. '   ' → logprob: -5.138905048370361
    4. ',' → logprob: -7.388905048370361
    5. '
' → logprob: -8.513904571533203
    6. 'def' → logprob: -9.638904571533203
    7. ' =' → logprob: -9.888904571533203
    8. ' (' → logprob: -9.888904571533203
    9. ' ' → logprob: -10.013904571533203
    10. '(' → logprob: -10.263904571533203

Token 1128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.125000953674316
    3. '(' → logprob: -15.500000953674316
    4. '<|end|>' → logprob: -17.75
    5. '[' → logprob: -18.25
    6. '```' → logprob: -18.5
    7. '۰' → logprob: -18.875
    8. '1' → logprob: -19.8125
    9. '
' → logprob: -19.875
    10. '#' → logprob: -20.0

Token 1129: ' state' (ID: 2608)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1346796154975891
    2. '       ' → logprob: -2.5096795558929443
    3. 'solver' → logprob: -3.1346795558929443
    4. ' solver' → logprob: -7.759679794311523
    5. '
' → logprob: -8.009679794311523
    6. 'solution' → logprob: -8.884679794311523
    7. 'initial' → logprob: -9.509679794311523
    8. '    
' → logprob: -9.759679794311523
    9. 's' → logprob: -10.134679794311523
    10. 'ps' → logprob: -10.509679794311523

Token 1130: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06298016756772995
    2. '   ' → logprob: -2.8129801750183105
    3. 'solver' → logprob: -7.9379801750183105
    4. 's' → logprob: -8.562979698181152
    5. 'solution' → logprob: -8.687979698181152
    6. '
' → logprob: -9.187979698181152
    7. 'ps' → logprob: -9.562979698181152
    8. 'py' → logprob: -10.687979698181152
    9. 'result' → logprob: -10.687979698181152
    10. 'sol' → logprob: -10.812979698181152

Token 1131: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19344410300254822
    2. '       ' → logprob: -1.8184441328048706
    3. 'solver' → logprob: -4.31844425201416
    4. 'solution' → logprob: -9.44344425201416
    5. 's' → logprob: -9.69344425201416
    6. ' solver' → logprob: -10.19344425201416
    7. '
' → logprob: -10.31844425201416
    8. 'ps' → logprob: -10.44344425201416
    9. 'sol' → logprob: -11.69344425201416
    10. '    
' → logprob: -11.94344425201416

Token 1132: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.5912512540817261
    2. '   ' → logprob: -0.8412512540817261
    3. '       ' → logprob: -4.341251373291016
    4. ' solver' → logprob: -6.341251373291016
    5. 'solution' → logprob: -8.716251373291016
    6. 'initial' → logprob: -9.466251373291016
    7. 's' → logprob: -9.591251373291016
    8. 'ps' → logprob: -10.841251373291016
    9. 'sol' → logprob: -10.966251373291016
    10. '
' → logprob: -10.966251373291016

Token 1133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02977617457509041
    2. '=' → logprob: -3.529776096343994
    3. '       ' → logprob: -11.279776573181152
    4. '   ' → logprob: -11.529776573181152
    5. '=
' → logprob: -13.529776573181152
    6. ' =
' → logprob: -15.029776573181152
    7. '<|end|>' → logprob: -15.154776573181152
    8. '        ' → logprob: -15.529776573181152
    9. '=s' → logprob: -15.779776573181152
    10. '<|end|>' → logprob: -15.904776573181152

Token 1134: ' Survival' (ID: 97921)
  Prédit: 'Sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sur' → logprob: -3.583550642360933e-05
    2. ' Survival' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.875036239624023
    4. '_sur' → logprob: -18.625036239624023
    5. ' survival' → logprob: -19.750036239624023
    6. '_S' → logprob: -20.375036239624023
    7. '       ' → logprob: -20.500036239624023
    8. ' ' → logprob: -20.500036239624023
    9. 'Super' → logprob: -20.625036239624023
    10. 'Safety' → logprob: -21.125036239624023

Token 1135: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -2.816093228830141e-06
    2. 'solver' → logprob: -13.00000286102295
    3. '(S' → logprob: -15.50000286102295
    4. '_solver' → logprob: -16.500001907348633
    5. ' Solver' → logprob: -16.750001907348633
    6. 'Sol' → logprob: -17.375001907348633
    7. '
' → logprob: -17.625001907348633
    8. '       ' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.625001907348633
    10. '```' → logprob: -18.750001907348633

Token 1136: '(Position' (ID: 142944)
  Prédit: 'Position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Position' → logprob: -0.12711100280284882
    2. '(Position' → logprob: -2.1271109580993652
    3. ' Position' → logprob: -8.752111434936523
    4. '   ' → logprob: -10.877111434936523
    5. '_Position' → logprob: -13.752111434936523
    6. 'Pos' → logprob: -13.752111434936523
    7. '       ' → logprob: -14.002111434936523
    8. 'position' → logprob: -14.127111434936523
    9. '_position' → logprob: -14.252111434936523
    10. '```' → logprob: -14.502111434936523

Token 1137: '(px' (ID: 195026)
  Prédit: '(px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -1.1994775377388578e-05
    2. 'px' → logprob: -11.625012397766113
    3. '(' → logprob: -13.000012397766113
    4. ' (' → logprob: -15.250012397766113
    5. '(
' → logprob: -15.625012397766113
    6. ')' → logprob: -16.125011444091797
    7. '(py' → logprob: -16.125011444091797
    8. ':px' → logprob: -16.875011444091797
    9. ' px' → logprob: -16.875011444091797
    10. '_px' → logprob: -18.375011444091797

Token 1138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012453512754291296
    2. ' ,' → logprob: -7.501245498657227
    3. '(py' → logprob: -8.501245498657227
    4. '<|end|>' → logprob: -8.501245498657227
    5. ',
' → logprob: -9.126245498657227
    6. '[' → logprob: -9.626245498657227
    7. 'py' → logprob: -10.751245498657227
    8. '<|end|>' → logprob: -11.126245498657227
    9. ',p' → logprob: -11.376245498657227
    10. '_py' → logprob: -11.626245498657227

Token 1139: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0005672106635756791
    2. ' py' → logprob: -7.500567436218262
    3. '(py' → logprob: -11.750567436218262
    4. '_py' → logprob: -12.125567436218262
    5. '.py' → logprob: -14.375567436218262
    6. '<|end|>' → logprob: -16.625566482543945
    7. 'ppy' → logprob: -16.875566482543945
    8. 'ply' → logprob: -16.875566482543945
    9. 'Py' → logprob: -17.125566482543945
    10. 'pygame' → logprob: -17.125566482543945

Token 1140: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07010360062122345
    2. '),' → logprob: -2.695103645324707
    3. ',s' → logprob: -8.945103645324707
    4. ' ,' → logprob: -11.570103645324707
    5. ')' → logprob: -12.070103645324707
    6. '   ' → logprob: -12.195103645324707
    7. '       ' → logprob: -12.195103645324707
    8. ',),' → logprob: -12.570103645324707
    9. '),
' → logprob: -13.195103645324707
    10. ',
' → logprob: -13.570103645324707

Token 1141: ' sprink' (ID: 80706)
  Prédit: 'spr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spr' → logprob: -0.0013826170470565557
    2. ' sprink' → logprob: -6.626382827758789
    3. '           ' → logprob: -10.501382827758789
    4. 's' → logprob: -11.376382827758789
    5. '       ' → logprob: -12.001382827758789
    6. 'spar' → logprob: -13.251382827758789
    7. ' sprinkled' → logprob: -13.501382827758789
    8. '   ' → logprob: -13.626382827758789
    9. '                   ' → logprob: -13.751382827758789
    10. ' sprinkler' → logprob: -13.876382827758789

Token 1142: 'lers' (ID: 15137)
  Prédit: 'lers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lers' → logprob: -0.0005631613312289119
    2. 'ler' → logprob: -8.000563621520996
    3. 'kers' → logprob: -8.625563621520996
    4. 'ers' → logprob: -10.375563621520996
    5. 'kl' → logprob: -11.250563621520996
    6. 'l' → logprob: -13.000563621520996
    7. 'k' → logprob: -14.000563621520996
    8. 'blers' → logprob: -14.750563621520996
    9. 'alers' → logprob: -16.25056266784668
    10. 'ker' → logprob: -16.75056266784668

Token 1143: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.00011021859245374799
    2. 's' → logprob: -9.625110626220703
    3. 'positions' → logprob: -10.250110626220703
    4. 'Positions' → logprob: -12.750110626220703
    5. 'r' → logprob: -13.250110626220703
    6. ')_' → logprob: -14.500110626220703
    7. '_coordinates' → logprob: -14.625110626220703
    8. 'e' → logprob: -14.875110626220703
    9. '.positions' → logprob: -14.875110626220703
    10. 'd' → logprob: -15.125110626220703

Token 1144: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07729353755712509
    2. ')
' → logprob: -2.702293634414673
    3. '       ' → logprob: -4.952293395996094
    4. '   ' → logprob: -8.702293395996094
    5. '<|end|>' → logprob: -10.077293395996094
    6. ')
' → logprob: -10.952293395996094
    7. '[' → logprob: -12.327293395996094
    8. '```' → logprob: -12.452293395996094
    9. ').' → logprob: -12.452293395996094
    10. '           ' → logprob: -12.702293395996094

Token 1145: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21210996806621552
    2. 'result' → logprob: -1.837109923362732
    3. 'print' → logprob: -3.5871100425720215
    4. '       ' → logprob: -6.3371100425720215
    5. '```' → logprob: -6.8371100425720215
    6. 'if' → logprob: -7.2121100425720215
    7. 'res' → logprob: -7.8371100425720215
    8. ' result' → logprob: -9.587109565734863
    9. 'success' → logprob: -9.837109565734863
    10. '	result' → logprob: -11.462109565734863

Token 1146: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5433714985847473
    2. 'result' → logprob: -1.0433714389801025
    3. 'if' → logprob: -3.4183714389801025
    4. 'res' → logprob: -3.9183714389801025
    5. '       ' → logprob: -4.293371677398682
    6. 'can' → logprob: -7.793371677398682
    7. '   ' → logprob: -9.918371200561523
    8. 'ok' → logprob: -10.418371200561523
    9. 'answer' → logprob: -10.793371200561523
    10. 'success' → logprob: -10.918371200561523

Token 1147: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.027227170765399933
    2. '('' → logprob: -4.027227401733398
    3. '"' → logprob: -5.027227401733398
    4. '(' → logprob: -6.152227401733398
    5. ''' → logprob: -9.027227401733398
    6. '1' → logprob: -9.527227401733398
    7. '(s' → logprob: -10.527227401733398
    8. '(int' → logprob: -10.652227401733398
    9. '(
' → logprob: -10.902227401733398
    10. '"s' → logprob: -11.027227401733398

Token 1148: 'OK' (ID: 5175)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6940825581550598
    2. 'Yes' → logprob: -1.194082498550415
    3. 'YES' → logprob: -1.694082498550415
    4. ''' → logprob: -5.069082736968994
    5. 'Possible' → logprob: -5.819082736968994
    6. 'Sur' → logprob: -8.069082260131836
    7. 'yes' → logprob: -8.194082260131836
    8. 'OK' → logprob: -8.444082260131836
    9. '"P' → logprob: -8.444082260131836
    10. 'Can' → logprob: -8.569082260131836

Token 1149: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1129053607583046
    2. '")' → logprob: -2.237905263900757
    3. 'if' → logprob: -10.862905502319336
    4. '")
' → logprob: -10.987905502319336
    5. ' if' → logprob: -11.612905502319336
    6. '!")' → logprob: -12.112905502319336
    7. '")
' → logprob: -12.237905502319336
    8. '!"' → logprob: -12.362905502319336
    9. 'Yes' → logprob: -12.362905502319336
    10. '!' → logprob: -13.237905502319336

Token 1150: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03017900325357914
    2. ' if' → logprob: -3.530179023742676
    3. 'if' → logprob: -8.530179023742676
    4. '")' → logprob: -8.655179023742676
    5. '   ' → logprob: -11.155179023742676
    6. ',' → logprob: -11.280179023742676
    7. ')")' → logprob: -12.155179023742676
    8. ' )' → logprob: -12.280179023742676
    9. ')
' → logprob: -12.405179023742676
    10. '[' → logprob: -12.405179023742676

Token 1151: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -7.493430894101039e-05
    2. ' solver' → logprob: -9.500075340270996
    3. '           ' → logprob: -19.12507438659668
    4. '   ' → logprob: -19.50007438659668
    5. '_solver' → logprob: -20.00007438659668
    6. 'sol' → logprob: -20.37507438659668
    7. '               ' → logprob: -21.00007438659668
    8. '       ' → logprob: -22.00007438659668
    9. 'solution' → logprob: -22.37507438659668
    10. 's' → logprob: -23.37507438659668

Token 1152: '.can' (ID: 46002)
  Prédit: '.can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.can' → logprob: -5.676981345459353e-06
    2. 'can' → logprob: -12.750005722045898
    3. '_can' → logprob: -14.125005722045898
    4. ').' → logprob: -14.750005722045898
    5. '	can' → logprob: -15.000005722045898
    6. '   ' → logprob: -15.000005722045898
    7. '.has' → logprob: -15.125005722045898
    8. ' .' → logprob: -15.500005722045898
    9. '.Can' → logprob: -16.0000057220459
    10. ' can' → logprob: -16.1250057220459

Token 1153: '_sur' (ID: 160451)
  Prédit: '_sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sur' → logprob: -1.306760805164231e-05
    2. 'sur' → logprob: -11.25001335144043
    3. ' survive' → logprob: -18.25001335144043
    4. 'Sur' → logprob: -18.50001335144043
    5. '_SUR' → logprob: -19.62501335144043
    6. '_s' → logprob: -19.87501335144043
    7. '_' → logprob: -20.00001335144043
    8. '\' → logprob: -20.00001335144043
    9. '
' → logprob: -21.00001335144043
    10. '_
' → logprob: -21.75001335144043

Token 1154: 'vive' (ID: 131935)
  Prédit: 'ive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.1798616498708725
    2. 'vive' → logprob: -1.8048616647720337
    3. 'rive' → logprob: -10.179862022399902
    4. '_' → logprob: -11.554862022399902
    5. 'iv' → logprob: -11.929862022399902
    6. 'sur' → logprob: -12.179862022399902
    7. ' survive' → logprob: -12.179862022399902
    8. 'live' → logprob: -12.429862022399902
    9. '#' → logprob: -12.679862022399902
    10. '_sur' → logprob: -12.679862022399902

Token 1155: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.36574100604048e-06
    2. '())' → logprob: -12.875004768371582
    3. '()
' → logprob: -13.375004768371582
    4. 'else' → logprob: -16.500003814697266
    5. ')' → logprob: -17.875003814697266
    6. '()`' → logprob: -18.250003814697266
    7. ' ()' → logprob: -18.875003814697266
    8. '   ' → logprob: -19.000003814697266
    9. '()==' → logprob: -19.500003814697266
    10. ' else' → logprob: -19.750003814697266

Token 1156: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.20141518115997314
    2. 'else' → logprob: -1.7014151811599731
    3. '()' → logprob: -14.326415061950684
    4. '   ' → logprob: -14.451415061950684
    5. ' ' → logprob: -14.826415061950684
    6. '       ' → logprob: -15.701415061950684
    7. '```' → logprob: -16.326416015625
    8. ')' → logprob: -16.826416015625
    9. '        ' → logprob: -16.951416015625
    10. '    ' → logprob: -17.201416015625

Token 1157: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002709772903472185
    2. ' "' → logprob: -6.252709865570068
    3. '"No' → logprob: -7.877709865570068
    4. '"K' → logprob: -8.62770938873291
    5. '   ' → logprob: -9.12770938873291
    6. '"N' → logprob: -10.75270938873291
    7. '"D' → logprob: -11.12770938873291
    8. '"H' → logprob: -11.25270938873291
    9. '"W' → logprob: -11.75270938873291
    10. '"I' → logprob: -11.87770938873291

Token 1158: 'NA' (ID: 9555)
  Prédit: 'NG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NG' → logprob: -0.0010002978378906846
    2. 'NA' → logprob: -7.37600040435791
    3. 'FAIL' → logprob: -9.00100040435791
    4. 'NO' → logprob: -9.25100040435791
    5. 'ng' → logprob: -9.50100040435791
    6. 'KO' → logprob: -10.37600040435791
    7. ' NG' → logprob: -11.00100040435791
    8. 'GAME' → logprob: -12.37600040435791
    9. 'Ng' → logprob: -12.62600040435791
    10. ':' → logprob: -12.87600040435791

Token 1159: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0366012305021286
    2. 'OK' → logprob: -4.1616010665893555
    3. 'F' → logprob: -4.2866010665893555
    4. 'M' → logprob: -5.9116010665893555
    5. 'O' → logprob: -6.6616010665893555
    6. 'N' → logprob: -7.7866010665893555
    7. '"' → logprob: -8.036601066589355
    8. 'I' → logprob: -8.161601066589355
    9. 'IL' → logprob: -8.536601066589355
    10. ')' → logprob: -8.661601066589355

Token 1160: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.537868779967539e-06
    2. ' if' → logprob: -12.250008583068848
    3. '```' → logprob: -12.750008583068848
    4. '#' → logprob: -15.125008583068848
    5. '<|end|>' → logprob: -15.125008583068848
    6. '
' → logprob: -15.750008583068848
    7. 'main' → logprob: -16.37500762939453
    8. '	if' → logprob: -17.62500762939453
    9. '#if' → logprob: -18.12500762939453
    10. 'If' → logprob: -18.12500762939453

Token 1161: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10026285797357559
    2. ' __' → logprob: -2.3502628803253174
    3. 'if' → logprob: -9.975262641906738
    4. 'name' → logprob: -12.100262641906738
    5. '_name' → logprob: -13.475262641906738
    6. '___' → logprob: -14.600262641906738
    7. '/__' → logprob: -14.850262641906738
    8. '.__' → logprob: -14.975262641906738
    9. 'True' → logprob: -14.975262641906738
    10. '```' → logprob: -15.225262641906738

Token 1162: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.043475933372974396
    2. ' ==' → logprob: -3.668475866317749
    3. '==' → logprob: -4.793476104736328
    4. '.__' → logprob: -5.043476104736328
    5. 'if' → logprob: -7.668476104736328
    6. '__.__' → logprob: -7.918476104736328
    7. ' __' → logprob: -8.043476104736328
    8. '=="' → logprob: -8.293476104736328
    9. 'name' → logprob: -8.543476104736328
    10. '.name' → logprob: -8.918476104736328

Token 1163: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.288163083605468e-05
    2. '__.__' → logprob: -10.375052452087402
    3. '==' → logprob: -10.875052452087402
    4. ' ==' → logprob: -13.625052452087402
    5. '=="' → logprob: -14.625052452087402
    6. '__.' → logprob: -14.750052452087402
    7. '__
' → logprob: -16.00005340576172
    8. '____' → logprob: -16.25005340576172
    9. '=='' → logprob: -16.37505340576172
    10. '__('' → logprob: -16.87505340576172

Token 1164: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2146635204553604
    2. ' ==' → logprob: -1.8396635055541992
    3. '=="' → logprob: -3.464663505554199
    4. '=='' → logprob: -6.464663505554199
    5. '__' → logprob: -6.839663505554199
    6. '==
' → logprob: -8.0896635055542
    7. '=' → logprob: -10.4646635055542
    8. '[' → logprob: -11.0896635055542
    9. '_' → logprob: -11.3396635055542
    10. '.__' → logprob: -12.3396635055542

Token 1165: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2519460618495941
    2. ''' → logprob: -1.5019460916519165
    3. '__' → logprob: -11.126946449279785
    4. ' "__' → logprob: -13.751946449279785
    5. ' '__' → logprob: -14.751946449279785
    6. '"class' → logprob: -15.876946449279785
    7. ''"' → logprob: -16.12694549560547
    8. '('__' → logprob: -16.50194549560547
    9. '   ' → logprob: -16.62694549560547
    10. ''app' → logprob: -16.87694549560547

Token 1166: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0003682285314425826
    2. '__' → logprob: -8.000368118286133
    3. ''' → logprob: -11.000368118286133
    4. '"' → logprob: -11.375368118286133
    5. 'name' → logprob: -12.750368118286133
    6. '_main' → logprob: -14.125368118286133
    7. ' main' → logprob: -14.250368118286133
    8. ''m' → logprob: -16.000368118286133
    9. 'MAIN' → logprob: -16.875368118286133
    10. '(main' → logprob: -17.125368118286133

Token 1167: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.6391318440437317
    2. '__' → logprob: -0.7641318440437317
    3. '__':
' → logprob: -5.264132022857666
    4. ':' → logprob: -7.389132022857666
    5. '__:' → logprob: -7.889132022857666
    6. '():
' → logprob: -9.514131546020508
    7. '.__' → logprob: -9.639131546020508
    8. ':
' → logprob: -10.139131546020508
    9. '__["' → logprob: -10.389131546020508
    10. '__.' → logprob: -11.389131546020508

Token 1168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03016095981001854
    2. 'main' → logprob: -3.530160903930664
    3. '	main' → logprob: -7.905160903930664
    4. ' main' → logprob: -10.405160903930664
    5. '(main' → logprob: -12.530160903930664
    6. '_main' → logprob: -12.905160903930664
    7. '   ' → logprob: -13.155160903930664
    8. '    
' → logprob: -13.655160903930664
    9. 'import' → logprob: -14.530160903930664
    10. '```' → logprob: -15.030160903930664

Token 1169: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.0
    3. '	main' → logprob: -19.5
    4. '   ' → logprob: -20.75
    5. '_main' → logprob: -22.25
    6. '(main' → logprob: -24.75
    7. 'import' → logprob: -24.75
    8. '.main' → logprob: -24.75
    9. 'Main' → logprob: -26.125
    10. 'mainwindow' → logprob: -26.875

Token 1170: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1168
Tokens correctement prédits (1ère position, stricte): 513
Tokens correctement prédits (1ère position, avec adaptation): 547
Tokens correctement prédits (top 10): 945
Précision stricte (1ère position): 43.92%
Précision adaptée (1ère position): 46.83%
Précision (top 10): 80.91%
================================================================================
