================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque

def main():
    while True:
        w, h = map(int, input().split())
        if w == 0 and h == 0:
            break
        xs, ys = map(int, input().split())
        xg, yg = map(int, input().split())
        n = int(input())
        board = [[0]*(w+1) for _ in range(h+1)]
        for _ in range(n):
            c, d, x, y = map(int, input().split())
            if d == 0:  # horizontal 2x4 block (width=4, height=2)
                for dy in range(2):
                    for dx in range(4):
                        board[y+dy][x+dx] = c
            else:  # vertical 4x2 block (width=2, height=4)
                for dy in range(4):
                    for dx in range(2):
                        board[y+dy][x+dx] = c
        start_color = board[ys][xs]
        if start_color == 0:
            print("NG")
            continue
        visited = [[False]*(w+1) for _ in range(h+1)]
        q = deque()
        q.append((xs, ys))
        visited[ys][xs] = True
        found = False
        while q:
            x, y = q.popleft()
            if x == xg and y == yg:
                found = True
                break
            for nx, ny in ((x+1,y),(x-1,y),(x,y+1),(x,y-1)):
                if 1 <= nx <= w and 1 <= ny <= h:
                    if not visited[ny][nx] and board[ny][nx] == start_color:
                        visited[ny][nx] = True
                        q.append((nx, ny))
        print("OK" if found else "NG")

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.408840298652649
    2. 'abc' → logprob: -1.408840298652649
    3. 'deque' → logprob: -1.408840298652649
    4. 'Counter' → logprob: -2.1588401794433594
    5. ' defaultdict' → logprob: -2.1588401794433594
    6. ' Counter' → logprob: -4.033840179443359
    7. ' abc' → logprob: -4.658840179443359
    8. 'named' → logprob: -5.533840179443359
    9. ' deque' → logprob: -6.283840179443359
    10. '```' → logprob: -6.783840179443359

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010466400533914566
    2. '.' → logprob: -5.385466575622559
    3. '\' → logprob: -6.385466575622559
    4. '\(' → logprob: -6.385466575622559
    5. '\n' → logprob: -7.260466575622559
    6. '```' → logprob: -7.885466575622559
    7. '[' → logprob: -8.010466575622559
    8. 'newline' → logprob: -8.260466575622559
    9. ',' → logprob: -8.760466575622559
    10. '\[' → logprob: -8.885466575622559

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.049969632178545
    2. 'd' → logprob: -3.4249696731567383
    3. '[' → logprob: -6.049969673156738
    4. ',' → logprob: -6.174969673156738
    5. '(
' → logprob: -6.424969673156738
    6. '.' → logprob: -6.549969673156738
    7. '\' → logprob: -6.799969673156738
    8. '```' → logprob: -6.924969673156738
    9. '\n' → logprob: -7.174969673156738
    10. '\(' → logprob: -7.174969673156738

Token 6: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0033856455702334642
    2. ' bfs' → logprob: -6.503385543823242
    3. ' deque' → logprob: -8.003385543823242
    4. ' ' → logprob: -8.253385543823242
    5. ' process' → logprob: -8.628385543823242
    6. ' space' → logprob: -8.753385543823242
    7. ' de' → logprob: -8.878385543823242
    8. ' ```' → logprob: -9.378385543823242
    9. ' queue' → logprob: -9.753385543823242
    10. ' dequeue' → logprob: -10.003385543823242

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006616604048758745
    2. ':' → logprob: -5.881616592407227
    3. '():' → logprob: -6.006616592407227
    4. '(:' → logprob: -7.131616592407227
    5. '```' → logprob: -8.631616592407227
    6. ' (' → logprob: -9.381616592407227
    7. '(
' → logprob: -9.381616592407227
    8. '):' → logprob: -10.381616592407227
    9. '(`' → logprob: -11.131616592407227
    10. '('' → logprob: -11.256616592407227

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03796345368027687
    2. 'de' → logprob: -4.787963390350342
    3. '(' → logprob: -5.287963390350342
    4. 'd' → logprob: -5.412963390350342
    5. '```' → logprob: -5.912963390350342
    6. '[' → logprob: -6.037963390350342
    7. 'deque' → logprob: -6.037963390350342
    8. ' ' → logprob: -6.162963390350342
    9. '    ' → logprob: -6.787963390350342
    10. 'input' → logprob: -6.787963390350342

Token 9: ' while' (ID: 2049)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.1266648769378662
    2. 'q' → logprob: -1.2516648769378662
    3. ' queue' → logprob: -1.3766648769378662
    4. 'd' → logprob: -3.126664876937866
    5. ' q' → logprob: -4.376665115356445
    6. 'n' → logprob: -4.501665115356445
    7. '   ' → logprob: -4.626665115356445
    8. 'de' → logprob: -4.751665115356445
    9. 'deque' → logprob: -4.751665115356445
    10. 'stack' → logprob: -4.876665115356445

Token 10: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.013021869584918022
    2. ' ' → logprob: -4.763021945953369
    3. ' not' → logprob: -5.888021945953369
    4. 'True' → logprob: -6.888021945953369
    5. '  ' → logprob: -7.763021945953369
    6. ' (' → logprob: -9.763021469116211
    7. ' a' → logprob: -10.138021469116211
    8. ' )' → logprob: -11.263021469116211
    9. 'not' → logprob: -11.388021469116211
    10. ' true' → logprob: -11.638021469116211

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001235583913512528
    2. '():' → logprob: -7.376235485076904
    3. ' :' → logprob: -7.876235485076904
    4. '       ' → logprob: -9.876235961914062
    5. ':
' → logprob: -10.126235961914062
    6. '    ' → logprob: -10.251235961914062
    7. '):' → logprob: -10.251235961914062
    8. '   ' → logprob: -10.751235961914062
    9. ':**' → logprob: -11.376235961914062
    10. '(:' → logprob: -11.501235961914062

Token 12: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03719338774681091
    2. '   ' → logprob: -4.162193298339844
    3. '    ' → logprob: -4.287193298339844
    4. '(' → logprob: -5.787193298339844
    5. '        
' → logprob: -6.662193298339844
    6. ' ' → logprob: -7.787193298339844
    7. '    
' → logprob: -8.162193298339844
    8. '        ' → logprob: -8.162193298339844
    9. '     ' → logprob: -8.162193298339844
    10. '      ' → logprob: -8.287193298339844

Token 13: ' w' (ID: 286)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.34845679998397827
    2. ' user' → logprob: -2.098456859588623
    3. '   ' → logprob: -3.098456859588623
    4. 'user' → logprob: -3.348456859588623
    5. 'line' → logprob: -3.973456859588623
    6. ' try' → logprob: -3.973456859588623
    7. ' choice' → logprob: -4.723456859588623
    8. ' command' → logprob: -4.723456859588623
    9. ' input' → logprob: -5.723456859588623
    10. 'command' → logprob: -5.848456859588623

Token 14: ',' (ID: 11)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.5411994457244873
    2. 'h' → logprob: -1.4161994457244873
    3. 'hile' → logprob: -2.7911994457244873
    4. ' =' → logprob: -3.0411994457244873
    5. '=' → logprob: -3.4161994457244873
    6. '   ' → logprob: -4.416199684143066
    7. 'a' → logprob: -4.541199684143066
    8. ' ' → logprob: -5.791199684143066
    9. 'i' → logprob: -6.041199684143066
    10. 'ords' → logprob: -7.041199684143066

Token 15: ' h' (ID: 312)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7948675751686096
    2. ' s' → logprob: -1.5448675155639648
    3. 'n' → logprob: -2.169867515563965
    4. 's' → logprob: -2.294867515563965
    5. ' l' → logprob: -4.419867515563965
    6. 'q' → logprob: -4.669867515563965
    7. 'h' → logprob: -4.669867515563965
    8. 'c' → logprob: -4.794867515563965
    9. ' h' → logprob: -4.919867515563965
    10. 'l' → logprob: -4.919867515563965

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16224323213100433
    2. '=' → logprob: -2.287243127822876
    3. ',' → logprob: -3.037243127822876
    4. ' ,' → logprob: -8.787242889404297
    5. ')' → logprob: -9.662242889404297
    6. '<|end|>' → logprob: -10.912242889404297
    7. ' ' → logprob: -11.662242889404297
    8. '    ' → logprob: -13.287242889404297
    9. '   ' → logprob: -13.412242889404297
    10. '  ' → logprob: -13.912242889404297

Token 17: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.017429035156965256
    2. 'map' → logprob: -4.267428874969482
    3. ' input' → logprob: -5.892428874969482
    4. 'input' → logprob: -7.892428874969482
    5. ' [' → logprob: -10.01742935180664
    6. ' ' → logprob: -10.39242935180664
    7. ' list' → logprob: -11.01742935180664
    8. '   ' → logprob: -11.51742935180664
    9. '[' → logprob: -11.89242935180664
    10. '	map' → logprob: -12.14242935180664

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.022179897874593735
    2. '(' → logprob: -4.022180080413818
    3. '(input' → logprob: -5.647180080413818
    4. '(str' → logprob: -7.647180080413818
    5. '(lambda' → logprob: -11.64717960357666
    6. 'int' → logprob: -12.77217960357666
    7. '(
' → logprob: -13.89717960357666
    8. '(eval' → logprob: -14.02217960357666
    9. ' (' → logprob: -14.27217960357666
    10. '<int' → logprob: -14.27217960357666

Token 19: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3687857985496521
    2. 'input' → logprob: -1.2437858581542969
    3. ')' → logprob: -4.743785858154297
    4. ',input' → logprob: -4.993785858154297
    5. ',' → logprob: -6.368785858154297
    6. ' input' → logprob: -6.368785858154297
    7. '(' → logprob: -6.868785858154297
    8. '=input' → logprob: -9.993785858154297
    9. '```' → logprob: -10.118785858154297
    10. '<input' → logprob: -10.243785858154297

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10020861029624939
    2. ' input' → logprob: -2.3502085208892822
    3. '	input' → logprob: -14.225208282470703
    4. '=input' → logprob: -14.600208282470703
    5. ')' → logprob: -14.725208282470703
    6. '(input' → logprob: -15.350208282470703
    7. ',input' → logprob: -16.350208282470703
    8. '<input' → logprob: -16.975208282470703
    9. '   ' → logprob: -17.475208282470703
    10. '```' → logprob: -18.100208282470703

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00010008628305513412
    2. '()' → logprob: -9.375100135803223
    3. '())' → logprob: -12.125100135803223
    4. '('' → logprob: -12.375100135803223
    5. ' ().' → logprob: -13.500100135803223
    6. '()))' → logprob: -13.625100135803223
    7. '("' → logprob: -14.125100135803223
    8. '(' → logprob: -14.250100135803223
    9. '()
' → logprob: -14.750100135803223
    10. '('').' → logprob: -14.750100135803223

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003398726985324174
    2. 'strip' → logprob: -8.00033950805664
    3. 'rstrip' → logprob: -12.62533950805664
    4. ' split' → logprob: -14.12533950805664
    5. '(split' → logprob: -14.75033950805664
    6. ')' → logprob: -17.75033950805664
    7. 'spl' → logprob: -18.12533950805664
    8. 'read' → logprob: -18.62533950805664
    9. 's' → logprob: -19.50033950805664
    10. ' strip' → logprob: -19.75033950805664

Token 23: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1886821985244751
    2. '())' → logprob: -2.3136820793151855
    3. '))' → logprob: -2.6886820793151855
    4. '()' → logprob: -5.9386820793151855
    5. '()))' → logprob: -6.0636820793151855
    6. '('' → logprob: -10.438682556152344
    7. '(' → logprob: -10.563682556152344
    8. '),' → logprob: -11.063682556152344
    9. '())
' → logprob: -11.438682556152344
    10. '')' → logprob: -12.188682556152344

Token 24: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17257483303546906
    2. '<|end|>' → logprob: -2.297574758529663
    3. ':' → logprob: -4.047574996948242
    4. '   ' → logprob: -4.547574996948242
    5. '```' → logprob: -5.422574996948242
    6. ' ' → logprob: -5.422574996948242
    7. ')' → logprob: -5.547574996948242
    8. ':
' → logprob: -5.672574996948242
    9. ' if' → logprob: -5.672574996948242
    10. '<|end|>' → logprob: -6.672574996948242

Token 25: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4140256941318512
    2. ' ' → logprob: -2.0390257835388184
    3. '<|end|>' → logprob: -2.0390257835388184
    4. ' if' → logprob: -2.6640257835388184
    5. 'if' (adapté à ' if') → logprob: -5.539025783538818
    6. '        ' → logprob: -6.039025783538818
    7. '<|end|>' → logprob: -7.289025783538818
    8. ' \' → logprob: -7.914025783538818
    9. '  ' → logprob: -7.914025783538818
    10. '   ' → logprob: -8.28902530670166

Token 26: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.0005848454311490059
    2. 'w' → logprob: -7.500585079193115
    3. ' not' → logprob: -10.875584602355957
    4. ' (' → logprob: -11.500584602355957
    5. ' ' → logprob: -13.500584602355957
    6. '(w' → logprob: -13.750584602355957
    7. '(' → logprob: -15.375584602355957
    8. 'not' → logprob: -16.250585556030273
    9. '	w' → logprob: -17.000585556030273
    10. '```' → logprob: -17.500585556030273

Token 27: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22546476125717163
    2. '==' → logprob: -1.6004648208618164
    3. ' ' → logprob: -10.850464820861816
    4. '=' → logprob: -10.975464820861816
    5. ' <=' → logprob: -12.475464820861816
    6. ' =' → logprob: -13.100464820861816
    7. '<|end|>' → logprob: -13.350464820861816
    8. ' or' → logprob: -13.600464820861816
    9. '```' → logprob: -13.600464820861816
    10. ' ' → logprob: -14.100464820861816

Token 28: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3868757486343384
    2. ' ' → logprob: -1.1368757486343384
    3. ' h' → logprob: -13.636876106262207
    4. 'h' → logprob: -13.761876106262207
    5. '   ' → logprob: -14.136876106262207
    6. '  ' → logprob: -14.636876106262207
    7. ' ' → logprob: -15.699376106262207
    8. '۰' → logprob: -15.824376106262207
    9. '=' → logprob: -16.07437515258789
    10. '    ' → logprob: -16.19937515258789

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012606535165105015
    2. ' ' → logprob: -9.125125885009766
    3. 'h' → logprob: -11.000125885009766
    4. ' h' → logprob: -16.000125885009766
    5. '```' → logprob: -16.687625885009766
    6. '０' → logprob: -16.937625885009766
    7. 'and' → logprob: -17.125125885009766
    8. '   ' → logprob: -17.625125885009766
    9. '۰' → logprob: -17.750125885009766
    10. '_' → logprob: -18.187625885009766

Token 30: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.027324382215738297
    2. 'and' → logprob: -3.6523244380950928
    3. ' or' → logprob: -6.902324199676514
    4. ' ' → logprob: -11.277324676513672
    5. 'or' → logprob: -13.902324676513672
    6. '0' → logprob: -14.027324676513672
    7. '<|end|>' → logprob: -14.277324676513672
    8. '	and' → logprob: -14.402324676513672
    9. '       ' → logprob: -14.527324676513672
    10. '        ' → logprob: -14.652324676513672

Token 31: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.0013403621269389987
    2. 'h' → logprob: -6.626340389251709
    3. ' ' → logprob: -11.62633991241455
    4. ' ' → logprob: -12.25133991241455
    5. '	h' → logprob: -14.37633991241455
    6. '<|end|>' → logprob: -16.876340866088867
    7. '<h' → logprob: -17.876340866088867
    8. '```' → logprob: -19.251340866088867
    9. ' ‌' → logprob: -19.501340866088867
    10. ' ' → logprob: -19.501340866088867

Token 32: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1129249557852745
    2. '==' → logprob: -2.2379250526428223
    3. '<|end|>' → logprob: -10.112924575805664
    4. ' ' → logprob: -11.112924575805664
    5. '=' → logprob: -11.487924575805664
    6. ' =' → logprob: -11.737924575805664
    7. '<|end|>' → logprob: -11.737924575805664
    8. '0' → logprob: -12.237924575805664
    9. ' ' → logprob: -12.487924575805664
    10. ')==' → logprob: -12.612924575805664

Token 33: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014164102263748646
    2. ' ' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.014163970947266
    4. ' ' → logprob: -16.389163970947266
    5. '  ' → logprob: -16.764163970947266
    6. '       ' → logprob: -17.514163970947266
    7. '۰' → logprob: -18.076663970947266
    8. '```' → logprob: -18.139163970947266
    9. '<|end|>' → logprob: -18.264163970947266
    10. '    ' → logprob: -18.576663970947266

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '<|end|>' → logprob: -17.81256675720215
    4. '   ' → logprob: -17.93756675720215
    5. '```' → logprob: -17.93756675720215
    6. '۰' → logprob: -18.00006675720215
    7. ' ' → logprob: -18.31256675720215
    8. '  ' → logprob: -18.68756675720215
    9. '<|end|>' → logprob: -19.37506675720215
    10. '1' → logprob: -19.75006675720215

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007804421475157142
    2. ':
' → logprob: -7.2507805824279785
    3. ':return' → logprob: -9.75078010559082
    4. '       ' → logprob: -11.87578010559082
    5. '           ' → logprob: -13.25078010559082
    6. '):' → logprob: -13.50078010559082
    7. ' :' → logprob: -14.12578010559082
    8. '   ' → logprob: -14.25078010559082
    9. ',' → logprob: -16.25078010559082
    10. ':
' → logprob: -16.50078010559082

Token 36: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1668536216020584
    2. ':' → logprob: -1.916853666305542
    3. '       ' → logprob: -5.166853427886963
    4. ':
' → logprob: -7.541853427886963
    5. '\n' → logprob: -9.041853904724121
    6. '   ' → logprob: -9.541853904724121
    7. ':return' → logprob: -9.666853904724121
    8. '		' → logprob: -10.666853904724121
    9. ' break' → logprob: -11.166853904724121
    10. '               ' → logprob: -11.666853904724121

Token 37: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.25769054889678955
    2. '           ' → logprob: -2.0076904296875
    3. 'break' (adapté à ' break') → logprob: -2.6326904296875
    4. '       ' → logprob: -4.0076904296875
    5. ' return' → logprob: -6.3826904296875
    6. 'return' → logprob: -7.1326904296875
    7. '	break' → logprob: -8.7576904296875
    8. '   ' → logprob: -9.5076904296875
    9. '               ' → logprob: -9.8826904296875
    10. '_break' → logprob: -11.2576904296875

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10048346221446991
    2. '       ' → logprob: -2.6004834175109863
    3. '<|end|>' → logprob: -3.9754834175109863
    4. '\n' → logprob: -7.350483417510986
    5. '        
' → logprob: -7.475483417510986
    6. '
' → logprob: -7.600483417510986
    7. '<|end|>' → logprob: -7.975483417510986
    8. '' → logprob: -9.350483894348145
    9. '    
' → logprob: -9.475483894348145
    10. '   ' → logprob: -9.600483894348145

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014212633483111858
    2. '        
' → logprob: -5.139212608337402
    3. '<|end|>' → logprob: -6.014212608337402
    4. '
' → logprob: -6.514212608337402
    5. '\' → logprob: -7.139212608337402
    6. '   ' → logprob: -7.264212608337402
    7. '```' → logprob: -7.264212608337402
    8. '\n' → logprob: -7.889212608337402
    9. '    
' → logprob: -8.139212608337402
    10. ':' → logprob: -8.389212608337402

Token 40: ' xs' (ID: 26642)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12972941994667053
    2. 'grid' → logprob: -2.8797295093536377
    3. 'graph' → logprob: -4.379729270935059
    4. '   ' → logprob: -4.504729270935059
    5. ' grid' → logprob: -4.754729270935059
    6. '        
' → logprob: -4.754729270935059
    7. '
' → logprob: -5.504729270935059
    8. ' graph' → logprob: -5.629729270935059
    9. '    
' → logprob: -5.754729270935059
    10. 'map' → logprob: -5.879729270935059

Token 41: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3319454789161682
    2. ',' → logprob: -1.3319454193115234
    3. '=' → logprob: -4.081945419311523
    4. ' ,' → logprob: -6.706945419311523
    5. 'ize' → logprob: -9.081945419311523
    6. '   ' → logprob: -9.831945419311523
    7. ')' → logprob: -10.331945419311523
    8. '       ' → logprob: -10.456945419311523
    9. 't' → logprob: -11.081945419311523
    10. '=[]' → logprob: -11.331945419311523

Token 42: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.02058369852602482
    2. ' ys' → logprob: -3.8955836296081543
    3. 'hs' → logprob: -11.895584106445312
    4. 'y' → logprob: -12.020584106445312
    5. 'ysi' → logprob: -12.520584106445312
    6. 'h' → logprob: -12.645584106445312
    7. 's' → logprob: -12.645584106445312
    8. 'yses' → logprob: -13.020584106445312
    9. '_' → logprob: -13.145584106445312
    10. ' =' → logprob: -13.520584106445312

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.355623722076416
    2. '=' → logprob: -1.730623722076416
    3. ',' → logprob: -2.105623722076416
    4. ' ,' → logprob: -8.105623245239258
    5. ' ' → logprob: -11.355623245239258
    6. ')' → logprob: -14.168123245239258
    7. '```' → logprob: -14.480623245239258
    8. '<|end|>' → logprob: -14.668123245239258
    9. '   ' → logprob: -14.918123245239258
    10. '=input' → logprob: -14.918123245239258

Token 44: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.05299397557973862
    2. ' map' → logprob: -3.5529940128326416
    3. '[],' → logprob: -4.0529937744140625
    4. '[]' → logprob: -6.3029937744140625
    5. '0' → logprob: -6.6779937744140625
    6. ' [],' → logprob: -6.8029937744140625
    7. '[' → logprob: -7.0529937744140625
    8. 'deque' → logprob: -7.9279937744140625
    9. 'list' → logprob: -9.802993774414062
    10. '(map' → logprob: -11.052993774414062

Token 45: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.980854959692806e-05
    2. '(' → logprob: -9.750069618225098
    3. '=int' → logprob: -12.500069618225098
    4. 'int' → logprob: -12.625069618225098
    5. '<int' → logprob: -13.000069618225098
    6. '[int' → logprob: -13.500069618225098
    7. ',int' → logprob: -15.000069618225098
    8. ' (' → logprob: -15.750069618225098
    9. ']int' → logprob: -15.750069618225098
    10. '```' → logprob: -16.375070571899414

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004813161212950945
    2. ',input' → logprob: -8.125481605529785
    3. '(),' → logprob: -9.000481605529785
    4. '(' → logprob: -10.750481605529785
    5. ' ,' → logprob: -11.625481605529785
    6. '<|end|>' → logprob: -11.625481605529785
    7. ',int' → logprob: -12.250481605529785
    8. ')' → logprob: -12.375481605529785
    9. '<|end|>' → logprob: -12.750481605529785
    10. '()' → logprob: -13.250481605529785

Token 47: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759698152542114
    2. 'input' → logprob: -0.8259698152542114
    3. '(input' → logprob: -11.200969696044922
    4. '=input' → logprob: -12.200969696044922
    5. ')' → logprob: -12.575969696044922
    6. '[input' → logprob: -12.700969696044922
    7. ',input' → logprob: -12.950969696044922
    8. '	input' → logprob: -13.325969696044922
    9. '_input' → logprob: -14.825969696044922
    10. '<input' → logprob: -15.200969696044922

Token 48: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.180879816180095e-05
    2. '()' → logprob: -10.000051498413086
    3. ')' → logprob: -12.250051498413086
    4. '())' → logprob: -14.875051498413086
    5. ' ().' → logprob: -15.250051498413086
    6. ').' → logprob: -15.500051498413086
    7. '(' → logprob: -15.750051498413086
    8. '.' → logprob: -16.000051498413086
    9. '().__' → logprob: -16.250051498413086
    10. '()).' → logprob: -16.625051498413086

Token 49: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -16.125
    3. 'strip' → logprob: -16.625
    4. '(split' → logprob: -17.25
    5. 'spl' → logprob: -17.875
    6. 'rstrip' → logprob: -17.875
    7. ')' → logprob: -18.625
    8. '.split' → logprob: -18.75
    9. 'plit' → logprob: -19.625
    10. 's' → logprob: -19.625

Token 50: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8124735355377197
    2. '())' → logprob: -0.8124735355377197
    3. '()' → logprob: -2.1874735355377197
    4. '())
' → logprob: -8.43747329711914
    5. ')
' → logprob: -10.68747329711914
    6. '(' → logprob: -11.18747329711914
    7. '()
' → logprob: -12.06247329711914
    8. ' )' → logprob: -12.81247329711914
    9. '(),' → logprob: -12.93747329711914
    10. '       ' → logprob: -13.18747329711914

Token 51: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' x' (ID: 1215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06468793004751205
    2. '        ' → logprob: -4.439687728881836
    3. '<|end|>' → logprob: -4.439687728881836
    4. ',' → logprob: -4.689687728881836
    5. ' ' → logprob: -4.814687728881836
    6. 's' → logprob: -4.939687728881836
    7. ')' → logprob: -6.064687728881836
    8. '   ' → logprob: -6.064687728881836
    9. '        
' → logprob: -6.439687728881836
    10. '    ' → logprob: -6.439687728881836

Token 53: 'g' (ID: 70)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3484228849411011
    2. 's' → logprob: -1.348422884941101
    3. 't' → logprob: -3.7234230041503906
    4. 'e' → logprob: -4.973423004150391
    5. 'y' → logprob: -6.723423004150391
    6. '1' → logprob: -7.973423004150391
    7. 'c' → logprob: -8.59842300415039
    8. '0' → logprob: -8.59842300415039
    9. 'p' → logprob: -8.84842300415039
    10. 'r' → logprob: -8.84842300415039

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.2166411478538066e-05
    2. ',g' → logprob: -10.000052452087402
    3. 's' → logprob: -12.875052452087402
    4. ' ,' → logprob: -13.125052452087402
    5. ',s' → logprob: -14.250052452087402
    6. 'g' → logprob: -14.250052452087402
    7. ',y' → logprob: -15.375052452087402
    8. 't' → logprob: -16.625051498413086
    9. ',t' → logprob: -16.750051498413086
    10. 'a' → logprob: -16.750051498413086

Token 55: ' yg' (ID: 74175)
  Prédit: ' yg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yg' → logprob: -0.22602349519729614
    2. 'yg' → logprob: -1.6010234355926514
    3. ' y' → logprob: -7.9760236740112305
    4. '<|end|>' → logprob: -9.35102367401123
    5. ' ys' → logprob: -9.85102367401123
    6. 'y' → logprob: -10.10102367401123
    7. 'ysg' → logprob: -10.22602367401123
    8. ' ' → logprob: -11.10102367401123
    9. '<|end|>' → logprob: -12.10102367401123
    10. 'ygy' → logprob: -12.22602367401123

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5762489438056946
    2. '=' → logprob: -0.8262489438056946
    3. ',' → logprob: -8.201249122619629
    4. ' ' → logprob: -10.576249122619629
    5. ' ,' → logprob: -12.701249122619629
    6. ')' → logprob: -12.701249122619629
    7. '   ' → logprob: -14.076249122619629
    8. '＝' → logprob: -14.951249122619629
    9. '    ' → logprob: -15.076249122619629
    10. '  ' → logprob: -15.326249122619629

Token 57: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.012512476183474064
    2. 'map' → logprob: -4.387512683868408
    3. '	map' → logprob: -13.63751220703125
    4. '(map' → logprob: -14.51251220703125
    5. ' ' → logprob: -14.63751220703125
    6. ' mapa' → logprob: -15.88751220703125
    7. '<|end|>' → logprob: -16.38751220703125
    8. '.map' → logprob: -16.38751220703125
    9. ' maps' → logprob: -16.63751220703125
    10. ',map' → logprob: -16.63751220703125

Token 58: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005701907211914659
    2. '(' → logprob: -7.625570297241211
    3. '<int' → logprob: -10.000570297241211
    4. '<|end|>' → logprob: -11.750570297241211
    5. ' (' → logprob: -11.875570297241211
    6. '=int' → logprob: -12.000570297241211
    7. '[int' → logprob: -12.125570297241211
    8. ']int' → logprob: -13.250570297241211
    9. '<|end|>' → logprob: -13.750570297241211
    10. '(lambda' → logprob: -13.750570297241211

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44243982434272766
    2. ',int' → logprob: -1.1924397945404053
    3. '(int' → logprob: -3.0674397945404053
    4. 'int' → logprob: -5.692440032958984
    5. '<int' → logprob: -6.067440032958984
    6. '=int' → logprob: -7.192440032958984
    7. ']int' → logprob: -8.192440032958984
    8. '[int' → logprob: -8.317440032958984
    9. '<|end|>' → logprob: -9.067440032958984
    10. '<|end|>' → logprob: -9.442440032958984

Token 60: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000531467841938138
    2. '(int' → logprob: -7.7505316734313965
    3. ' int' → logprob: -9.625531196594238
    4. '<int' → logprob: -11.250531196594238
    5. '[int' → logprob: -11.375531196594238
    6. 'input' → logprob: -12.000531196594238
    7. '=int' → logprob: -13.000531196594238
    8. ']int' → logprob: -14.000531196594238
    9. ',int' → logprob: -14.750531196594238
    10. ':int' → logprob: -15.750531196594238

Token 61: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00010139751975657418
    2. '()' → logprob: -9.250101089477539
    3. '(' → logprob: -13.000101089477539
    4. '().__' → logprob: -14.250101089477539
    5. ' ().' → logprob: -14.875101089477539
    6. '())' → logprob: -15.000101089477539
    7. '()[' → logprob: -15.375101089477539
    8. '.' → logprob: -15.625101089477539
    9. '()(' → logprob: -16.25010108947754
    10. '().'' → logprob: -16.37510108947754

Token 62: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3856492842023727e-06
    2. ')' → logprob: -14.250000953674316
    3. 'int' → logprob: -15.125000953674316
    4. ' split' → logprob: -15.625000953674316
    5. '(split' → logprob: -16.125001907348633
    6. 'spl' → logprob: -16.125001907348633
    7. 'plit' → logprob: -17.250001907348633
    8. '.split' → logprob: -17.500001907348633
    9. '```' → logprob: -18.125001907348633
    10. '()' → logprob: -18.250001907348633

Token 63: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34904223680496216
    2. '()' → logprob: -1.3490421772003174
    3. '())' → logprob: -3.3490421772003174
    4. ')
' → logprob: -12.224041938781738
    5. '`)' → logprob: -12.349041938781738
    6. '())
' → logprob: -12.849041938781738
    7. '()`' → logprob: -13.099041938781738
    8. ')`' → logprob: -13.099041938781738
    9. '(' → logprob: -13.224041938781738
    10. '))' → logprob: -13.349041938781738

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06748184561729431
    2. '<|end|>' → logprob: -3.317481756210327
    3. '   ' → logprob: -3.817481756210327
    4. '        
' → logprob: -6.442481994628906
    5. '
' → logprob: -6.692481994628906
    6. ')' → logprob: -7.067481994628906
    7. '    ' → logprob: -7.692481994628906
    8. '```' → logprob: -7.817481994628906
    9. '    
' → logprob: -7.817481994628906
    10. '      ' → logprob: -7.942481994628906

Token 65: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5703004002571106
    2. 'grid' → logprob: -1.4453003406524658
    3. 'map' → logprob: -2.570300340652466
    4. ' grid' → logprob: -3.070300340652466
    5. ' map' → logprob: -4.195300579071045
    6. 'graph' → logprob: -4.570300579071045
    7. 'maze' → logprob: -4.570300579071045
    8. '        
' → logprob: -4.820300579071045
    9. '        ' → logprob: -5.320300579071045
    10. '   ' → logprob: -5.695300579071045

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2532750070095062
    2. '=' → logprob: -1.5032750368118286
    3. '=int' → logprob: -6.628274917602539
    4. '   ' → logprob: -13.128274917602539
    5. 'w' → logprob: -13.378274917602539
    6. ' ' → logprob: -13.753274917602539
    7. '	' → logprob: -13.878274917602539
    8. ')' → logprob: -14.003274917602539
    9. '    ' → logprob: -14.128274917602539
    10. '_' → logprob: -14.128274917602539

Token 67: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3132648468017578
    2. ' int' → logprob: -1.3132648468017578
    3. '<int' → logprob: -14.188264846801758
    4. '=int' → logprob: -14.188264846801758
    5. '[int' → logprob: -14.438264846801758
    6. '  ' → logprob: -14.438264846801758
    7. '	int' → logprob: -15.438264846801758
    8. '(int' → logprob: -15.438264846801758
    9. ' ' → logprob: -16.063264846801758
    10. '   ' → logprob: -16.938264846801758

Token 68: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931715607643127
    2. '(input' → logprob: -0.6931715607643127
    3. '(in' → logprob: -11.068171501159668
    4. '(
' → logprob: -13.068171501159668
    5. 'input' → logprob: -13.318171501159668
    6. ' (' → logprob: -13.568171501159668
    7. '()' → logprob: -13.693171501159668
    8. '(int' → logprob: -14.318171501159668
    9. '=input' → logprob: -14.943171501159668
    10. '(

' → logprob: -15.318171501159668

Token 69: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3215685784816742
    2. '()' → logprob: -1.3215686082839966
    3. ')' → logprob: -4.821568489074707
    4. '(' → logprob: -8.821568489074707
    5. '().' → logprob: -10.196568489074707
    6. '())
' → logprob: -11.321568489074707
    7. '()
' → logprob: -11.946568489074707
    8. ' ())' → logprob: -11.946568489074707
    9. '();)' → logprob: -12.696568489074707
    10. '())

' → logprob: -14.071568489074707

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7191597819328308
    2. ' obstacles' → logprob: -1.9691598415374756
    3. 'graph' → logprob: -2.2191598415374756
    4. '        ' → logprob: -2.9691598415374756
    5. '        
' → logprob: -3.4691598415374756
    6. '   ' → logprob: -3.5941598415374756
    7. '    ' → logprob: -3.8441598415374756
    8. ' ' → logprob: -3.9691598415374756
    9. 'grid' → logprob: -4.4691596031188965
    10. ' 
' → logprob: -4.5941596031188965

Token 71: ' board' (ID: 6796)
  Prédit: ' obstacles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' obstacles' → logprob: -0.6061513423919678
    2. 'ob' → logprob: -2.1061513423919678
    3. 'blocked' → logprob: -2.3561513423919678
    4. '#' → logprob: -3.3561513423919678
    5. '       ' → logprob: -3.6061513423919678
    6. '        
' → logprob: -3.6061513423919678
    7. ' blocked' → logprob: -3.7311513423919678
    8. 'block' → logprob: -3.8561513423919678
    9. 'blocks' → logprob: -4.356151580810547
    10. 'obs' → logprob: -4.481151580810547

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0022110389545559883
    2. '=' → logprob: -6.127211093902588
    3. '[' → logprob: -11.12721061706543
    4. '[]' → logprob: -12.37721061706543
    5. ' =
' → logprob: -13.12721061706543
    6. '=[]' → logprob: -13.75221061706543
    7. ' =[' → logprob: -13.87721061706543
    8. '[:]' → logprob: -14.25221061706543
    9. ',' → logprob: -14.62721061706543
    10. 's' → logprob: -15.25221061706543

Token 73: ' [[' (ID: 9237)
  Prédit: ' [['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[' → logprob: -1.0428855419158936
    2. '[[' → logprob: -1.2928855419158936
    3. ' [['' → logprob: -2.2928855419158936
    4. ' [' → logprob: -2.2928855419158936
    5. '[' → logprob: -2.4178855419158936
    6. '[['' → logprob: -2.5428855419158936
    7. '[]' → logprob: -6.667885780334473
    8. ' [["' → logprob: -7.417885780334473
    9. ' []' → logprob: -7.917885780334473
    10. '[list' → logprob: -8.042885780334473

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2016598880290985
    2. ''.' → logprob: -2.326659917831421
    3. 'False' → logprob: -2.576659917831421
    4. ''' → logprob: -5.701659679412842
    5. '-' → logprob: -6.076659679412842
    6. ' ' → logprob: -7.451659679412842
    7. '1' → logprob: -7.451659679412842
    8. 'True' → logprob: -7.701659679412842
    9. '"."' → logprob: -7.701659679412842
    10. '.' → logprob: -8.20166015625

Token 75: ']*(' (ID: 92627)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2758023738861084
    2. ']' → logprob: -2.0258023738861084
    3. ']*' → logprob: -2.2758023738861084
    4. 'for' → logprob: -5.1508026123046875
    5. ' ]' → logprob: -7.5258026123046875
    6. ']*(' → logprob: -10.150802612304688
    7. '	for' → logprob: -10.275802612304688
    8. ' ' → logprob: -10.900802612304688
    9. ')' → logprob: -12.275802612304688
    10. ']+' → logprob: -13.650802612304688

Token 76: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00022034443099983037
    2. ' w' → logprob: -9.00022029876709
    3. '(w' → logprob: -9.87522029876709
    4. 'h' → logprob: -10.12522029876709
    5. '(' → logprob: -12.75022029876709
    6. '100' → logprob: -14.75022029876709
    7. 'm' → logprob: -14.87522029876709
    8. '   ' → logprob: -15.12522029876709
    9. '10' → logprob: -15.75022029876709
    10. ' (' → logprob: -15.87522029876709

Token 77: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05022736266255379
    2. '+' → logprob: -3.675227403640747
    3. ' )' → logprob: -3.800227403640747
    4. ' +' → logprob: -6.675227165222168
    5. '+)' → logprob: -12.675227165222168
    6. '+h' → logprob: -12.925227165222168
    7. ')]' → logprob: -13.300227165222168
    8. ' ' → logprob: -13.550227165222168
    9. ')
' → logprob: -13.550227165222168
    10. ' for' → logprob: -13.675227165222168

Token 78: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1429171860218048
    2. '1' → logprob: -2.0179171562194824
    3. ' ' → logprob: -8.39291763305664
    4. '10' → logprob: -12.26791763305664
    5. '4' → logprob: -13.14291763305664
    6. '   ' → logprob: -13.39291763305664
    7. '20' → logprob: -13.76791763305664
    8. '3' → logprob: -13.76791763305664
    9. '+' → logprob: -13.89291763305664
    10. '5' → logprob: -13.89291763305664

Token 79: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004377022560220212
    2. ' )' → logprob: -7.7504377365112305
    3. ')]' → logprob: -12.62543773651123
    4. ' for' → logprob: -13.37543773651123
    5. 'for' → logprob: -14.37543773651123
    6. '+' → logprob: -14.75043773651123
    7. '))' → logprob: -15.00043773651123
    8. '),' → logprob: -16.500436782836914
    9. '```' → logprob: -16.500436782836914
    10. '   ' → logprob: -16.625436782836914

Token 80: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.006736916024237871
    2. 'for' → logprob: -5.006736755371094
    3. '	for' → logprob: -11.131736755371094
    4. '<|end|>' → logprob: -13.256736755371094
    5. '   ' → logprob: -13.631736755371094
    6. ' ' → logprob: -13.631736755371094
    7. ']' → logprob: -14.006736755371094
    8. ')' → logprob: -14.256736755371094
    9. '       ' → logprob: -14.631736755371094
    10. '```' → logprob: -16.006736755371094

Token 81: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.8176833391189575
    2. ' range' → logprob: -0.8176833391189575
    3. '_' → logprob: -2.192683219909668
    4. '_range' → logprob: -6.317683219909668
    5. 'range' → logprob: -6.442683219909668
    6. '<|end|>' → logprob: -7.067683219909668
    7. ' in' → logprob: -8.192683219909668
    8. ' xrange' → logprob: -8.192683219909668
    9. ' i' → logprob: -8.317683219909668
    10. ' ' → logprob: -8.692683219909668

Token 82: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7646520733833313
    2. '_' → logprob: -1.1396520137786865
    3. 'in' → logprob: -2.3896520137786865
    4. ' in' → logprob: -2.5146520137786865
    5. 'i' → logprob: -3.8896520137786865
    6. ' range' → logprob: -4.014652252197266
    7. ' i' → logprob: -6.639652252197266
    8. ' _' → logprob: -7.514652252197266
    9. ' ' → logprob: -7.764652252197266
    10. '_i' → logprob: -8.139652252197266

Token 83: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889209687709808
    2. ' range' → logprob: -2.5788919925689697
    3. '	range' → logprob: -13.57889175415039
    4. ' ' → logprob: -14.82889175415039
    5. 'rang' → logprob: -15.57889175415039
    6. 'r' → logprob: -15.82889175415039
    7. '(range' → logprob: -16.07889175415039
    8. '   ' → logprob: -16.20389175415039
    9. 'ran' → logprob: -16.70389175415039
    10. '  ' → logprob: -17.45389175415039

Token 84: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0004176833899691701
    2. '(' → logprob: -7.875417709350586
    3. ' (' → logprob: -10.375417709350586
    4. '((' → logprob: -12.750417709350586
    5. ')(' → logprob: -13.125417709350586
    6. ')' → logprob: -14.500417709350586
    7. '(H' → logprob: -14.875417709350586
    8. '(s' → logprob: -16.125417709350586
    9. '(height' → logprob: -16.125417709350586
    10. '   ' → logprob: -16.375417709350586

Token 85: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023296955972909927
    2. ')]' → logprob: -3.773297071456909
    3. ')' → logprob: -10.523297309875488
    4. ' +' → logprob: -11.398297309875488
    5. ')+' → logprob: -11.898297309875488
    6. ')][' → logprob: -13.523297309875488
    7. ']' → logprob: -14.273297309875488
    8. ')])' → logprob: -14.398297309875488
    9. '()+' → logprob: -14.648297309875488
    10. '+]' → logprob: -14.773297309875488

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.027225754223764e-05
    2. ' ' → logprob: -10.000060081481934
    3. '2' → logprob: -11.375060081481934
    4. '0' → logprob: -13.500060081481934
    5. ')' → logprob: -14.000060081481934
    6. '   ' → logprob: -15.125060081481934
    7. '```' → logprob: -15.125060081481934
    8. '+' → logprob: -15.625060081481934
    9. '１' → logprob: -16.43756103515625
    10. 'w' → logprob: -16.81256103515625

Token 87: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.014381390064954758
    2. ')' → logprob: -4.264381408691406
    3. ']' → logprob: -8.514381408691406
    4. ' )' → logprob: -12.014381408691406
    5. ')])' → logprob: -12.514381408691406
    6. '))' → logprob: -13.264381408691406
    7. ')],' → logprob: -13.889381408691406
    8. '   ' → logprob: -14.139381408691406
    9. '])]' → logprob: -14.389381408691406
    10. '       ' → logprob: -14.389381408691406

Token 88: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7454092502593994
    2. '       ' → logprob: -1.1204092502593994
    3. '<|end|>' → logprob: -2.1204092502593994
    4. ' ' → logprob: -3.8704092502593994
    5. ' 
' → logprob: -3.9954092502593994
    6. '        
' → logprob: -4.74540901184082
    7. '   ' → logprob: -5.49540901184082
    8. '    ' → logprob: -5.74540901184082
    9. '<|end|>' → logprob: -5.87040901184082
    10. '        ' → logprob: -5.87040901184082

Token 89: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.68868488073349
    2. '
' → logprob: -2.3136849403381348
    3. '       ' → logprob: -2.3136849403381348
    4. '	for' → logprob: -2.8136849403381348
    5. ' for' → logprob: -2.8136849403381348
    6. '   ' → logprob: -3.5636849403381348
    7. '    ' → logprob: -3.6886849403381348
    8. 'for' (adapté à ' for') → logprob: -3.8136849403381348
    9. '<|end|>' → logprob: -3.8136849403381348
    10. '' → logprob: -4.063684940338135

Token 90: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.001445353147573769
    2. ' ' → logprob: -6.876445293426514
    3. '_' → logprob: -8.376445770263672
    4. ' i' → logprob: -8.626445770263672
    5. ' ‌' → logprob: -13.501445770263672
    6. ' ​' → logprob: -14.876445770263672
    7. 'i' → logprob: -15.126445770263672
    8. ' ▁' → logprob: -15.376445770263672
    9. ' ' → logprob: -15.376445770263672
    10. '_i' → logprob: -15.501445770263672

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07933905720710754
    2. 'in' → logprob: -2.579339027404785
    3. ' ' → logprob: -8.704339027404785
    4. 'n' → logprob: -8.829339027404785
    5. 'i' → logprob: -10.204339027404785
    6. ' i' → logprob: -10.579339027404785
    7. 'range' → logprob: -10.579339027404785
    8. '_' → logprob: -10.704339027404785
    9. ' _' → logprob: -11.454339027404785
    10. ' n' → logprob: -12.829339027404785

Token 92: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007272057700902224
    2. ' range' → logprob: -7.25072717666626
    3. 'ran' → logprob: -11.750727653503418
    4. 'rang' → logprob: -12.500727653503418
    5. 'r' → logprob: -13.125727653503418
    6. 'ra' → logprob: -13.750727653503418
    7. 'ange' → logprob: -14.250727653503418
    8. '	range' → logprob: -14.500727653503418
    9. '_' → logprob: -14.875727653503418
    10. '(range' → logprob: -15.625727653503418

Token 93: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00023643692838959396
    2. '(' → logprob: -9.125236511230469
    3. ' (' → logprob: -9.125236511230469
    4. ' n' → logprob: -11.125236511230469
    5. 'n' → logprob: -12.500236511230469
    6. ' ' → logprob: -16.50023651123047
    7. '	n' → logprob: -18.75023651123047
    8. ')' → logprob: -19.87523651123047
    9. ')n' → logprob: -20.12523651123047
    10. '(
' → logprob: -20.25023651123047

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002079359255731106
    2. ' ):' → logprob: -6.752079486846924
    3. ':' → logprob: -7.252079486846924
    4. '):
' → logprob: -9.377079010009766
    5. ')' → logprob: -9.627079010009766
    6. '():' → logprob: -10.752079010009766
    7. ',' → logprob: -11.502079010009766
    8. ' :' → logprob: -12.377079010009766
    9. '   ' → logprob: -12.627079010009766
    10. ']:' → logprob: -12.752079010009766

Token 95: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46687597036361694
    2. '   ' → logprob: -1.3418760299682617
    3. '<|end|>' → logprob: -2.4668760299682617
    4. '    ' → logprob: -5.216876029968262
    5. ' ' → logprob: -5.591876029968262
    6. '	   ' → logprob: -5.841876029968262
    7. '<|end|>' → logprob: -5.966876029968262
    8. '           ' → logprob: -5.966876029968262
    9. ',' → logprob: -6.466876029968262
    10. '    
' → logprob: -6.716876029968262

Token 96: ' c' (ID: 274)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4789730906486511
    2. ' x' → logprob: -0.9789730906486511
    3. 'xi' → logprob: -6.478972911834717
    4. 'a' → logprob: -7.853972911834717
    5. 'xl' → logprob: -8.228973388671875
    6. ' ' → logprob: -8.228973388671875
    7. 'lx' → logprob: -8.228973388671875
    8. 'sx' → logprob: -8.603973388671875
    9. 'ox' → logprob: -8.728973388671875
    10. 'xs' → logprob: -8.853973388671875

Token 97: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008730865083634853
    2. ' =' → logprob: -6.008730888366699
    3. ',' → logprob: -6.258730888366699
    4. '=' → logprob: -6.508730888366699
    5. '1' → logprob: -7.633730888366699
    6. ' x' → logprob: -7.883730888366699
    7. ' ' → logprob: -8.3837308883667
    8. 's' → logprob: -8.5087308883667
    9. ',x' → logprob: -8.5087308883667
    10. 'y' → logprob: -8.6337308883667

Token 98: ' d' (ID: 272)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8228312730789185
    2. 'r' → logprob: -1.4478312730789185
    3. 'l' → logprob: -2.072831153869629
    4. 'd' → logprob: -2.447831153869629
    5. 's' → logprob: -3.697831153869629
    6. 'y' → logprob: -3.947831153869629
    7. 'a' → logprob: -3.947831153869629
    8. 'sx' → logprob: -5.447831153869629
    9. 'lx' → logprob: -5.572831153869629
    10. 'xl' → logprob: -5.572831153869629

Token 99: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10935017466545105
    2. '=' → logprob: -2.8593502044677734
    3. ',' → logprob: -3.1093502044677734
    4. ' ,' → logprob: -6.734350204467773
    5. ' ' → logprob: -8.859350204467773
    6. 'w' → logprob: -8.984350204467773
    7. 'x' → logprob: -9.609350204467773
    8. 's' → logprob: -10.109350204467773
    9. '    ' → logprob: -11.234350204467773
    10. ',x' → logprob: -11.234350204467773

Token 100: ' x' (ID: 1215)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05288916826248169
    2. ' e' → logprob: -3.177889108657837
    3. 'a' → logprob: -5.552889347076416
    4. 'l' → logprob: -5.802889347076416
    5. 'f' → logprob: -7.552889347076416
    6. 't' → logprob: -8.052888870239258
    7. ' ' → logprob: -8.177888870239258
    8. ' a' → logprob: -8.177888870239258
    9. ' l' → logprob: -8.302888870239258
    10. 'r' → logprob: -8.677888870239258

Token 101: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002397889969870448
    2. ',' → logprob: -6.5023980140686035
    3. '0' → logprob: -7.7523980140686035
    4. 'l' → logprob: -8.127397537231445
    5. 's' → logprob: -9.377397537231445
    6. 'a' → logprob: -10.127397537231445
    7. 'y' → logprob: -10.877397537231445
    8. '_start' → logprob: -12.377397537231445
    9. '2' → logprob: -12.627397537231445
    10. '_,' → logprob: -12.877397537231445

Token 102: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03367578238248825
    2. ' y' → logprob: -3.4086756706237793
    3. ' ' → logprob: -11.533676147460938
    4. '	y' → logprob: -12.158676147460938
    5. ',y' → logprob: -12.533676147460938
    6. 'e' → logprob: -12.908676147460938
    7. ',' → logprob: -13.408676147460938
    8. '   ' → logprob: -13.783676147460938
    9. '  ' → logprob: -13.783676147460938
    10. '_y' → logprob: -14.283676147460938

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1130489930510521
    2. '=' → logprob: -2.238049030303955
    3. ',' → logprob: -8.488048553466797
    4. ' ' → logprob: -10.988048553466797
    5. ' ,' → logprob: -13.488048553466797
    6. ')' → logprob: -13.738048553466797
    7. '  ' → logprob: -14.488048553466797
    8. '    ' → logprob: -15.863048553466797
    9. '   ' → logprob: -15.863048553466797
    10. ' =
' → logprob: -15.988048553466797

Token 104: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.17998293042182922
    2. 'map' → logprob: -1.8049829006195068
    3. ' input' → logprob: -9.179983139038086
    4. 'input' → logprob: -9.679983139038086
    5. ' ' → logprob: -10.929983139038086
    6. '	map' → logprob: -11.304983139038086
    7. ' ' → logprob: -11.554983139038086
    8. 'm' → logprob: -11.554983139038086
    9. ' list' → logprob: -12.179983139038086
    10. '(map' → logprob: -12.304983139038086

Token 105: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00010628487507347018
    2. '(' → logprob: -9.250105857849121
    3. '<int' → logprob: -12.875105857849121
    4. '=int' → logprob: -12.875105857849121
    5. '<|end|>' → logprob: -13.375105857849121
    6. '[int' → logprob: -13.500105857849121
    7. '(in' → logprob: -14.500105857849121
    8. ',int' → logprob: -15.000105857849121
    9. ']int' → logprob: -15.000105857849121
    10. 'int' → logprob: -15.250105857849121

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28354212641716003
    2. ',input' → logprob: -1.4085421562194824
    3. '(input' → logprob: -7.408542156219482
    4. ',int' → logprob: -7.658542156219482
    5. '(),' → logprob: -7.658542156219482
    6. '(' → logprob: -8.033541679382324
    7. ')' → logprob: -8.658541679382324
    8. 'input' → logprob: -9.033541679382324
    9. ' ,' → logprob: -9.158541679382324
    10. '```' → logprob: -10.408541679382324

Token 107: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10020667314529419
    2. 'input' → logprob: -2.3502066135406494
    3. '	input' → logprob: -17.85020637512207
    4. '=input' → logprob: -18.47520637512207
    5. ' ' → logprob: -18.97520637512207
    6. '(input' → logprob: -19.10020637512207
    7. ',input' → logprob: -19.10020637512207
    8. '[input' → logprob: -19.97520637512207
    9. '<input' → logprob: -20.72520637512207
    10. '_input' → logprob: -20.72520637512207

Token 108: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.2200749754119897e-06
    2. '()' → logprob: -13.250001907348633
    3. ' ().' → logprob: -15.375001907348633
    4. ')' → logprob: -16.000001907348633
    5. '.' → logprob: -18.125001907348633
    6. '.split' → logprob: -19.125001907348633
    7. '(' → logprob: -19.875001907348633
    8. '())' → logprob: -19.875001907348633
    9. '()
' → logprob: -20.750001907348633
    10. ').' → logprob: -21.500001907348633

Token 109: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. ' split' → logprob: -16.5
    3. 'spl' → logprob: -16.5
    4. 'strip' → logprob: -17.5
    5. ')' → logprob: -17.875
    6. '(split' → logprob: -18.5
    7. 'plit' → logprob: -19.25
    8. 'sp' → logprob: -19.5
    9. 's' → logprob: -19.875
    10. '.split' → logprob: -20.125

Token 110: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2462599277496338
    2. ')' → logprob: -1.8712599277496338
    3. '()' → logprob: -2.746259927749634
    4. '(' → logprob: -9.246259689331055
    5. '())
' → logprob: -9.996259689331055
    6. ' ())' → logprob: -11.371259689331055
    7. '))' → logprob: -11.871259689331055
    8. '()))' → logprob: -11.996259689331055
    9. ' )' → logprob: -12.746259689331055
    10. '()
' → logprob: -12.871259689331055

Token 111: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6859092116355896
    2. '<|end|>' → logprob: -0.8109092116355896
    3. '
' → logprob: -3.9359092712402344
    4. '        
' → logprob: -4.560909271240234
    5. ' 
' → logprob: -4.810909271240234
    6. '<|end|>' → logprob: -6.060909271240234
    7. '  
' → logprob: -6.185909271240234
    8. '           ' → logprob: -6.685909271240234
    9. ')' → logprob: -6.685909271240234
    10. ' ' → logprob: -6.935909271240234

Token 112: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18336427211761475
    2. 'for' → logprob: -1.8083642721176147
    3. '       ' → logprob: -6.808364391326904
    4. '           ' → logprob: -6.933364391326904
    5. ' if' → logprob: -7.558364391326904
    6. '   ' → logprob: -8.183363914489746
    7. '<|end|>' → logprob: -8.183363914489746
    8. 'if' (adapté à ' if') → logprob: -8.683363914489746
    9. '	for' → logprob: -9.433363914489746
    10. '
' → logprob: -9.558363914489746

Token 113: ' d' (ID: 272)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.14451880753040314
    2. 'c' → logprob: -2.0195188522338867
    3. ' d' → logprob: -7.394518852233887
    4. 'd' → logprob: -8.019518852233887
    5. ' ' → logprob: -8.394518852233887
    6. ' y' → logprob: -8.894518852233887
    7. ' x' → logprob: -8.894518852233887
    8. '	c' → logprob: -9.269518852233887
    9. 'x' → logprob: -9.394518852233887
    10. '0' → logprob: -10.082018852233887

Token 114: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16178762912750244
    2. '==' → logprob: -1.9117876291275024
    3. ':' → logprob: -6.536787509918213
    4. '[' → logprob: -10.411787986755371
    5. '=' → logprob: -10.911787986755371
    6. ' =' → logprob: -11.161787986755371
    7. ' ' → logprob: -11.661787986755371
    8. '0' → logprob: -11.911787986755371
    9. '<|end|>' → logprob: -12.411787986755371
    10. ')' → logprob: -12.661787986755371

Token 115: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008907396346330643
    2. ' ' → logprob: -5.008907318115234
    3. '1' → logprob: -6.133907318115234
    4. '2' → logprob: -11.258907318115234
    5. '=' → logprob: -12.508907318115234
    6. '4' → logprob: -13.883907318115234
    7. '3' → logprob: -14.633907318115234
    8. 'horizontal' → logprob: -14.821407318115234
    9. '>' → logprob: -15.071407318115234
    10. ' horizontal' → logprob: -15.508907318115234

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00823204219341278
    2. '1' → logprob: -4.883232116699219
    3. ' ' → logprob: -7.508232116699219
    4. '2' → logprob: -10.008232116699219
    5. '4' → logprob: -12.008232116699219
    6. '3' → logprob: -12.445732116699219
    7. 'h' → logprob: -12.820732116699219
    8. '=' → logprob: -12.945732116699219
    9. 'horizontal' → logprob: -13.508232116699219
    10. 'c' → logprob: -13.633232116699219

Token 117: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0041661337018013
    2. ':
' → logprob: -5.504166126251221
    3. ' for' → logprob: -9.754166603088379
    4. ' :' → logprob: -10.879166603088379
    5. '<|end|>' → logprob: -12.754166603088379
    6. 'for' → logprob: -12.879166603088379
    7. ' or' → logprob: -13.504166603088379
    8. ' and' → logprob: -13.754166603088379
    9. ':

' → logprob: -14.129166603088379
    10. ' :
' → logprob: -14.379166603088379

Token 118: ' ' (ID: 220)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011765459552407265
    2. 'for' → logprob: -4.636765480041504
    3. '           ' → logprob: -7.136765480041504
    4. ' ' → logprob: -7.511765480041504
    5. '               ' → logprob: -8.136765480041504
    6. '
' → logprob: -9.386765480041504
    7. '       ' → logprob: -9.636765480041504
    8. '<|end|>' → logprob: -9.636765480041504
    9. '   ' → logprob: -10.011765480041504
    10. '	for' → logprob: -10.386765480041504

Token 119: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31567028164863586
    2. ' for' → logprob: -1.3156702518463135
    3. '           ' → logprob: -6.815670490264893
    4. '
' → logprob: -7.065670490264893
    5. '               ' → logprob: -8.690670013427734
    6. '       ' → logprob: -8.815670013427734
    7. '   ' → logprob: -10.065670013427734
    8. '<|end|>' → logprob: -10.440670013427734
    9. '```' → logprob: -11.065670013427734
    10. ' ' → logprob: -11.190670013427734

Token 120: ' horizontal' (ID: 25511)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14834320545196533
    2. 'for' → logprob: -2.023343086242676
    3. ' #' → logprob: -6.023343086242676
    4. '#' → logprob: -6.023343086242676
    5. ' horizontal' → logprob: -7.648343086242676
    6. ' ' → logprob: -8.898343086242676
    7. ' Horizontal' → logprob: -10.398343086242676
    8. 'horizontal' → logprob: -10.523343086242676
    9. '   ' → logprob: -10.648343086242676
    10. '    ' → logprob: -11.023343086242676

Token 121: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8488792181015015
    2. '<|end|>' → logprob: -0.8488792181015015
    3. ':
' → logprob: -2.473879337310791
    4. ' for' → logprob: -3.598879337310791
    5. '<|end|>' → logprob: -4.723879337310791
    6. ',' → logprob: -5.098879337310791
    7. '
' → logprob: -5.223879337310791
    8. ' :
' → logprob: -6.223879337310791
    9. ' :' → logprob: -6.348879337310791
    10. ' ' → logprob: -6.598879337310791

Token 122: '2' (ID: 17)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7499577403068542
    2. 'for' → logprob: -1.124957799911499
    3. ':' → logprob: -1.874957799911499
    4. '<|end|>' → logprob: -3.624957799911499
    5. ':
' → logprob: -4.12495756149292
    6. ')' → logprob: -6.62495756149292
    7. ',' → logprob: -6.74995756149292
    8. '):' → logprob: -6.74995756149292
    9. '
' → logprob: -6.99995756149292
    10. '):
' → logprob: -7.37495756149292

Token 123: 'x' (ID: 87)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.501954197883606
    2. ' lines' → logprob: -2.3769540786743164
    3. ' cells' → logprob: -2.5019540786743164
    4. ' line' → logprob: -2.8769540786743164
    5. ' or' → logprob: -3.6269540786743164
    6. '<|end|>' → logprob: -3.6269540786743164
    7. '       ' → logprob: -4.001954078674316
    8. '           ' → logprob: -4.251954078674316
    9. ' and' → logprob: -4.376954078674316
    10. ':' → logprob: -4.751954078674316

Token 124: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.28391483426094055
    2. '1' → logprob: -1.4089148044586182
    3. '3' → logprob: -6.283915042877197
    4. ' ' → logprob: -7.158915042877197
    5. '4' → logprob: -9.783914566040039
    6. 'c' → logprob: -12.096414566040039
    7. '   ' → logprob: -12.158914566040039
    8. '```' → logprob: -12.221414566040039
    9. 'n' → logprob: -12.346414566040039
    10. '  ' → logprob: -12.471414566040039

Token 125: ' block' (ID: 4355)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7413719296455383
    2. '<|end|>' → logprob: -1.3663718700408936
    3. '           ' → logprob: -2.3663718700408936
    4. '               ' → logprob: -2.8663718700408936
    5. ':
' → logprob: -2.9913718700408936
    6. ' for' → logprob: -3.9913718700408936
    7. '       ' → logprob: -4.491372108459473
    8. '
' → logprob: -4.616372108459473
    9. '<|end|>' → logprob: -5.241372108459473
    10. ' ' → logprob: -5.741372108459473

Token 127: 'width' (ID: 6015)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09636028856039047
    2. ')' → logprob: -2.596360206604004
    3. 'for' → logprob: -4.346360206604004
    4. ' )' → logprob: -6.346360206604004
    5. ' ' → logprob: -6.971360206604004
    6. ')
' → logprob: -7.596360206604004
    7. '<|end|>' → logprob: -8.221360206604004
    8. '   ' → logprob: -8.846360206604004
    9. '):
' → logprob: -9.471360206604004
    10. '           ' → logprob: -9.471360206604004

Token 128: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09959739446640015
    2. ' =' → logprob: -2.474597454071045
    3. ')' → logprob: -5.849597454071045
    4. ' ' → logprob: -6.099597454071045
    5. ':' → logprob: -6.349597454071045
    6. '4' → logprob: -7.224597454071045
    7. '*' → logprob: -7.224597454071045
    8. ' of' → logprob: -7.849597454071045
    9. ',' → logprob: -8.099596977233887
    10. ' *' → logprob: -8.224596977233887

Token 129: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.01690947450697422
    2. '2' → logprob: -4.141909599304199
    3. ' ' → logprob: -7.141909599304199
    4. '3' → logprob: -10.4544095993042
    5. '5' → logprob: -10.9544095993042
    6. '1' → logprob: -11.6419095993042
    7. ')' → logprob: -12.7669095993042
    8. '```' → logprob: -12.9544095993042
    9. '  
' → logprob: -13.2669095993042
    10. '6' → logprob: -13.3919095993042

Token 130: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028141124173998833
    2. ',' → logprob: -3.6531410217285156
    3. '<|end|>' → logprob: -7.528141021728516
    4. ' )' → logprob: -7.903141021728516
    5. ')
' → logprob: -8.278141021728516
    6. ' and' → logprob: -8.528141021728516
    7. '):' → logprob: -8.528141021728516
    8. '):
' → logprob: -8.903141021728516
    9. ' ,' → logprob: -10.528141021728516
    10. '   ' → logprob: -10.653141021728516

Token 131: ' height' (ID: 4679)
  Prédit: ' height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' height' → logprob: -0.7664926648139954
    2. 'height' → logprob: -0.8914926648139954
    3. ' length' → logprob: -2.7664926052093506
    4. 'length' → logprob: -3.0164926052093506
    5. ')' → logprob: -4.89149284362793
    6. ' ' → logprob: -5.76649284362793
    7. 'width' → logprob: -7.01649284362793
    8. ' width' → logprob: -7.64149284362793
    9. '<|end|>' → logprob: -8.01649284362793
    10. '4' → logprob: -8.26649284362793

Token 132: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.135819760151207e-05
    2. '4' → logprob: -10.25007152557373
    3. ' =' → logprob: -11.12507152557373
    4. ')' → logprob: -11.37507152557373
    5. ' ' → logprob: -12.87507152557373
    6. '2' → logprob: -13.50007152557373
    7. '1' → logprob: -13.62507152557373
    8. '   ' → logprob: -13.75007152557373
    9. ':' → logprob: -14.37507152557373
    10. '=
' → logprob: -14.50007152557373

Token 133: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00032044618274085224
    2. ' ' → logprob: -8.125320434570312
    3. '1' → logprob: -11.375320434570312
    4. '3' → logprob: -11.750320434570312
    5. '```' → logprob: -12.875320434570312
    6. ')' → logprob: -14.500320434570312
    7. '   ' → logprob: -14.750320434570312
    8. '4' → logprob: -14.750320434570312
    9. '`' → logprob: -15.437820434570312
    10. '``' → logprob: -15.812820434570312

Token 134: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014370576478540897
    2. '):' → logprob: -4.514370441436768
    3. '):
' → logprob: -6.764370441436768
    4. ')
' → logprob: -6.889370441436768
    5. '           ' → logprob: -7.389370441436768
    6. ' )' → logprob: -8.764370918273926
    7. '               ' → logprob: -8.764370918273926
    8. '       ' → logprob: -9.139370918273926
    9. ',' → logprob: -10.139370918273926
    10. '   ' → logprob: -11.139370918273926

Token 135: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.615753173828125
    2. ' for' → logprob: -1.240753173828125
    3. '               ' → logprob: -2.615753173828125
    4. '       ' → logprob: -3.365753173828125
    5. '<|end|>' → logprob: -3.615753173828125
    6. 'for' → logprob: -4.365753173828125
    7. '   ' → logprob: -5.365753173828125
    8. ' ' → logprob: -5.615753173828125
    9. '
' → logprob: -5.740753173828125
    10. ':' → logprob: -6.115753173828125

Token 136: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38944992423057556
    2. 'for' (adapté à ' for') → logprob: -1.139449954032898
    3. '           ' → logprob: -6.0144500732421875
    4. '               ' → logprob: -9.139450073242188
    5. '   ' → logprob: -11.639450073242188
    6. '```' → logprob: -12.389450073242188
    7. '	for' → logprob: -12.514450073242188
    8. '       ' → logprob: -13.014450073242188
    9. '                   ' → logprob: -14.014450073242188
    10. 'x' → logprob: -14.139450073242188

Token 137: ' dy' (ID: 11996)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7039016485214233
    2. ' i' → logprob: -0.7039016485214233
    3. ' dy' → logprob: -5.828901767730713
    4. 'j' → logprob: -6.203901767730713
    5. ' dx' → logprob: -6.453901767730713
    6. 'dy' → logprob: -6.703901767730713
    7. ' j' → logprob: -6.828901767730713
    8. 'dx' → logprob: -6.828901767730713
    9. '_i' → logprob: -8.578901290893555
    10. '	i' → logprob: -8.828901290893555

Token 138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12704654037952423
    2. 'in' → logprob: -2.127046585083008
    3. ' ' → logprob: -9.627046585083008
    4. 'range' → logprob: -11.627046585083008
    5. '	in' → logprob: -11.877046585083008
    6. '<|end|>' → logprob: -12.127046585083008
    7. 's' → logprob: -12.377046585083008
    8. ')' → logprob: -12.502046585083008
    9. '_in' → logprob: -13.127046585083008
    10. 'd' → logprob: -13.127046585083008

Token 139: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.014170682057738304
    2. 'range' → logprob: -4.2641706466674805
    3. '	range' → logprob: -12.88917064666748
    4. '(range' → logprob: -13.51417064666748
    5. ' ' → logprob: -13.51417064666748
    6. '[' → logprob: -14.38917064666748
    7. '<|end|>' → logprob: -14.63917064666748
    8. ' xrange' → logprob: -15.01417064666748
    9. '_range' → logprob: -16.014171600341797
    10. '0' → logprob: -16.139171600341797

Token 140: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020614642649888992
    2. '2' → logprob: -3.8956146240234375
    3. '(d' → logprob: -9.895614624023438
    4. '(
' → logprob: -11.645614624023438
    5. '(c' → logprob: -12.145614624023438
    6. ' ' → logprob: -12.645614624023438
    7. ' (' → logprob: -13.645614624023438
    8. 'd' → logprob: -14.395614624023438
    9. '
' → logprob: -14.395614624023438
    10. '{' → logprob: -14.895614624023438

Token 141: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.913265239447355e-05
    2. ' ' → logprob: -9.250099182128906
    3. '0' → logprob: -13.500099182128906
    4. '1' → logprob: -14.750099182128906
    5. '   ' → logprob: -15.000099182128906
    6. ')' → logprob: -15.687599182128906
    7. '
' → logprob: -16.250099182128906
    8. '4' → logprob: -16.437599182128906
    9. '```' → logprob: -16.437599182128906
    10. '(' → logprob: -16.562599182128906

Token 142: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20670288801193237
    2. '):
' → logprob: -1.7067029476165771
    3. ')' → logprob: -5.831702709197998
    4. ' ):' → logprob: -6.956702709197998
    5. '       ' → logprob: -7.456702709197998
    6. '   ' → logprob: -8.206703186035156
    7. ' ):
' → logprob: -8.456703186035156
    8. ' ' → logprob: -8.956703186035156
    9. '           ' → logprob: -9.956703186035156
    10. ':' → logprob: -10.456703186035156

Token 143: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6836268305778503
    2. '<|end|>' → logprob: -0.9336268305778503
    3. '                   ' → logprob: -3.308626890182495
    4. '           ' → logprob: -3.933626890182495
    5. '       ' → logprob: -4.433626651763916
    6. ' for' → logprob: -4.933626651763916
    7. ':' → logprob: -4.933626651763916
    8. ',' → logprob: -5.433626651763916
    9. '                       ' → logprob: -5.558626651763916
    10. '<|end|>' → logprob: -5.933626651763916

Token 144: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10414169728755951
    2. 'for' (adapté à ' for') → logprob: -2.4791417121887207
    3. '                       ' → logprob: -4.729141712188721
    4. ' ' → logprob: -6.104141712188721
    5. '                   ' → logprob: -6.354141712188721
    6. '                    ' → logprob: -7.479141712188721
    7. '<|end|>' → logprob: -7.729141712188721
    8. '                        ' → logprob: -8.104141235351562
    9. '                ' → logprob: -8.604141235351562
    10. '               ' → logprob: -8.729141235351562

Token 145: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.2827230393886566
    2. ' dx' → logprob: -1.407723069190979
    3. '4' → logprob: -7.2827229499816895
    4. '   ' → logprob: -7.4077229499816895
    5. ' ' → logprob: -9.032723426818848
    6. ' range' → logprob: -9.782723426818848
    7. '(dx' → logprob: -10.407723426818848
    8. 'range' → logprob: -10.532723426818848
    9. '_dx' → logprob: -11.407723426818848
    10. 'x' → logprob: -11.657723426818848

Token 146: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007653249427676201
    2. 'in' → logprob: -4.88265323638916
    3. ' ' → logprob: -10.25765323638916
    4. '<|end|>' → logprob: -12.63265323638916
    5. 'd' → logprob: -13.25765323638916
    6. '(' → logprob: -13.25765323638916
    7. '	in' → logprob: -14.00765323638916
    8. 'In' → logprob: -14.75765323638916
    9. 'n' → logprob: -14.94515323638916
    10. 'import' → logprob: -15.25765323638916

Token 147: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6132563352584839
    2. ' range' → logprob: -1.2382563352584839
    3. '4' → logprob: -1.8632563352584839
    4. ' ' → logprob: -4.363256454467773
    5. '(' → logprob: -7.738256454467773
    6. '(range' → logprob: -8.738256454467773
    7. '	range' → logprob: -11.363256454467773
    8. ' xrange' → logprob: -12.613256454467773
    9. '_range' → logprob: -13.425756454467773
    10. '   ' → logprob: -13.425756454467773

Token 148: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002636006975080818
    2. '4' → logprob: -8.250263214111328
    3. ' (' → logprob: -13.875263214111328
    4. '(
' → logprob: -13.875263214111328
    5. ' ' → logprob: -15.875263214111328
    6. ')' → logprob: -16.750263214111328
    7. '(x' → logprob: -17.000263214111328
    8. '
' → logprob: -17.312763214111328
    9. '```' → logprob: -17.687763214111328
    10. '   ' → logprob: -17.875263214111328

Token 149: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00021152703266125172
    2. ' ' → logprob: -8.500211715698242
    3. '(' → logprob: -12.125211715698242
    4. ')' → logprob: -14.375211715698242
    5. '```' → logprob: -14.812711715698242
    6. '   ' → logprob: -15.250211715698242
    7. '' → logprob: -15.687711715698242
    8. '3' → logprob: -16.062711715698242
    9. '5' → logprob: -16.250211715698242
    10. '{' → logprob: -16.562711715698242

Token 150: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09024787694215775
    2. '):
' → logprob: -2.465247869491577
    3. ' ):' → logprob: -7.340248107910156
    4. ')' → logprob: -8.715248107910156
    5. '                   ' → logprob: -8.965248107910156
    6. '                       ' → logprob: -8.965248107910156
    7. ':' → logprob: -9.090248107910156
    8. ' ):
' → logprob: -10.215248107910156
    9. '):
' → logprob: -11.090248107910156
    10. '():' → logprob: -11.090248107910156

Token 151: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3455184996128082
    2. '<|end|>' → logprob: -1.8455184698104858
    3. '                   ' → logprob: -3.2205185890197754
    4. ' ' → logprob: -3.5955185890197754
    5. '               ' → logprob: -3.5955185890197754
    6. '                        
' → logprob: -4.470518589019775
    7. '                           ' → logprob: -5.345518589019775
    8. ' 
' → logprob: -5.720518589019775
    9. '       ' → logprob: -5.845518589019775
    10. '#' → logprob: -5.845518589019775

Token 152: ' board' (ID: 6796)
  Prédit: ' board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' board' → logprob: -0.013742187060415745
    2. 'board' (adapté à ' board') → logprob: -4.763741970062256
    3. '                           ' → logprob: -5.638741970062256
    4. '                       ' → logprob: -7.638741970062256
    5. '<|end|>' → logprob: -8.263742446899414
    6. '	board' → logprob: -9.013742446899414
    7. '               ' → logprob: -9.263742446899414
    8. '                               ' → logprob: -9.513742446899414
    9. '                        ' → logprob: -9.888742446899414
    10. '(board' → logprob: -9.888742446899414

Token 153: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.004372206050902605
    2. '[' → logprob: -5.8793721199035645
    3. '[h' → logprob: -6.5043721199035645
    4. ' [' → logprob: -9.879372596740723
    5. 'y' → logprob: -12.629372596740723
    6. '[x' → logprob: -12.754372596740723
    7. '[i' → logprob: -13.004372596740723
    8. '```' → logprob: -13.504372596740723
    9. '[s' → logprob: -13.629372596740723
    10. '][' → logprob: -13.879372596740723

Token 154: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03877030313014984
    2. ' +' → logprob: -3.2887701988220215
    3. '+y' → logprob: -7.4137701988220215
    4. '[' → logprob: -9.91377067565918
    5. '+d' → logprob: -10.78877067565918
    6. '+x' → logprob: -11.16377067565918
    7. '+[' → logprob: -11.66377067565918
    8. '][' → logprob: -11.91377067565918
    9. '-' → logprob: -11.91377067565918
    10. ']+' → logprob: -12.41377067565918

Token 155: 'dy' (ID: 7593)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.6147559881210327
    2. 'dy' → logprob: -0.9897559881210327
    3. 'x' → logprob: -2.4897561073303223
    4. ' dy' → logprob: -5.614756107330322
    5. ' dx' → logprob: -7.114756107330322
    6. 'd' → logprob: -9.864755630493164
    7. ' x' → logprob: -10.239755630493164
    8. '(dx' → logprob: -10.489755630493164
    9. ' ' → logprob: -10.989755630493164
    10. 'xd' → logprob: -11.739755630493164

Token 156: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000961362209636718
    2. ' ][' → logprob: -7.8759613037109375
    3. '[y' → logprob: -8.500961303710938
    4. '[' → logprob: -8.500961303710938
    5. '[x' → logprob: -9.500961303710938
    6. ')][' → logprob: -10.375961303710938
    7. ']' → logprob: -10.625961303710938
    8. ']][' → logprob: -11.125961303710938
    9. '+' → logprob: -11.375961303710938
    10. '"][' → logprob: -12.750961303710938

Token 157: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00010962257510982454
    2. ' x' → logprob: -9.125109672546387
    3. '(x' → logprob: -15.500109672546387
    4. 'c' → logprob: -16.37510871887207
    5. '   ' → logprob: -16.37510871887207
    6. ' ' → logprob: -16.62510871887207
    7. '	x' → logprob: -16.87510871887207
    8. ')x' → logprob: -17.25010871887207
    9. '[x' → logprob: -17.50010871887207
    10. ']' → logprob: -17.87510871887207

Token 158: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014172682538628578
    2. ' +' → logprob: -4.264172554016113
    3. '+x' → logprob: -12.514172554016113
    4. '+
' → logprob: -13.514172554016113
    5. '<|end|>' → logprob: -13.639172554016113
    6. '+]' → logprob: -14.639172554016113
    7. '+xml' → logprob: -14.639172554016113
    8. '＋' → logprob: -14.889172554016113
    9. '+=' → logprob: -15.014172554016113
    10. ' +
' → logprob: -15.139172554016113

Token 159: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0003066222125198692
    2. ' dx' → logprob: -8.250307083129883
    3. 'x' → logprob: -10.250307083129883
    4. '+' → logprob: -12.500307083129883
    5. 'xd' → logprob: -12.750307083129883
    6. '_dx' → logprob: -14.250307083129883
    7. 'd' → logprob: -14.375307083129883
    8. ' ' → logprob: -14.500307083129883
    9. ' +' → logprob: -14.625307083129883
    10. 'sx' → logprob: -15.000307083129883

Token 160: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3824397921562195
    2. '=' → logprob: -1.3824398517608643
    3. ']=' → logprob: -3.0074398517608643
    4. ' =' → logprob: -4.132439613342285
    5. ' ]' → logprob: -6.632439613342285
    6. ')' → logprob: -10.257439613342285
    7. ']+=' → logprob: -12.007439613342285
    8. ')=' → logprob: -12.507439613342285
    9. '1' → logprob: -12.757439613342285
    10. '[' → logprob: -13.257439613342285

Token 161: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005233882926404476
    2. ' =' → logprob: -5.2552337646484375
    3. '+=' → logprob: -17.005233764648438
    4. '=True' → logprob: -18.755233764648438
    5. ' |=' → logprob: -19.130233764648438
    6. ' +=' → logprob: -19.380233764648438
    7. ' ' → logprob: -19.380233764648438
    8. '1' → logprob: -19.505233764648438
    9. '.=' → logprob: -19.630233764648438
    10. '<|end|>' → logprob: -19.755233764648438

Token 162: ' c' (ID: 274)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001948152668774128
    2. 'c' → logprob: -7.126948356628418
    3. ' ' → logprob: -7.501948356628418
    4. '-' → logprob: -7.501948356628418
    5. ' -' → logprob: -10.751948356628418
    6. '2' → logprob: -12.251948356628418
    7. '   ' → logprob: -12.376948356628418
    8. ' c' → logprob: -12.876948356628418
    9. '9' → logprob: -14.126948356628418
    10. '  ' → logprob: -14.501948356628418

Token 163: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8065249919891357
    2. 'else' → logprob: -1.6815249919891357
    3. '<|end|>' → logprob: -1.8065249919891357
    4. '           ' → logprob: -2.3065249919891357
    5. 'elif' → logprob: -2.8065249919891357
    6. '
' → logprob: -3.8065249919891357
    7. ' else' → logprob: -5.431525230407715
    8. '\n' → logprob: -5.556525230407715
    9. '```' → logprob: -5.681525230407715
    10. '<|end|>' → logprob: -6.181525230407715

Token 165: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.14723047614097595
    2. '       ' → logprob: -2.772230386734009
    3. ' else' → logprob: -2.897230386734009
    4. 'elif' → logprob: -4.022230625152588
    5. ' elif' → logprob: -7.522230625152588
    6. '           ' → logprob: -8.52223014831543
    7. '```' → logprob: -9.14723014831543
    8. '	else' → logprob: -9.14723014831543
    9. '   ' → logprob: -9.27223014831543
    10. '	elif' → logprob: -10.52223014831543

Token 166: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3782830137643032e-05
    2. ' :' → logprob: -11.37501335144043
    3. ':#' → logprob: -14.12501335144043
    4. ':
' → logprob: -14.37501335144043
    5. '   ' → logprob: -15.50001335144043
    6. ' ' → logprob: -15.50001335144043
    7. '#:' → logprob: -15.75001335144043
    8. 'd' → logprob: -16.00001335144043
    9. '#' → logprob: -16.75001335144043
    10. ' #' → logprob: -17.25001335144043

Token 167: ' ' (ID: 220)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.5002580285072327
    2. '#' → logprob: -1.125257968902588
    3. ' ' → logprob: -3.250257968902588
    4. '           ' → logprob: -4.000257968902588
    5. '               ' → logprob: -4.625257968902588
    6. '   ' → logprob: -7.125257968902588
    7. '       ' → logprob: -7.125257968902588
    8. ' for' → logprob: -9.250258445739746
    9. '            ' → logprob: -9.375258445739746
    10. '  ' → logprob: -9.625258445739746

Token 168: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20889712870121002
    2. ' #' → logprob: -1.9588971138000488
    3. ' ' → logprob: -3.083897113800049
    4. '           ' → logprob: -7.583897113800049
    5. '   ' → logprob: -7.708897113800049
    6. '               ' → logprob: -7.833897113800049
    7. '       ' → logprob: -8.833897590637207
    8. '  ' → logprob: -8.958897590637207
    9. '
' → logprob: -10.833897590637207
    10. '0' → logprob: -11.208897590637207

Token 169: ' vertical' (ID: 17679)
  Prédit: ' vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.35280048847198486
    2. 'vertical' → logprob: -1.2278004884719849
    3. ' ' → logprob: -5.977800369262695
    4. ' #' → logprob: -6.727800369262695
    5. '#' → logprob: -7.977800369262695
    6. '  ' → logprob: -9.352800369262695
    7. '   ' → logprob: -10.102800369262695
    8. '_vertical' → logprob: -10.352800369262695
    9. 'Vertical' → logprob: -10.477800369262695
    10. 'vert' → logprob: -10.602800369262695

Token 170: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10035062581300735
    2. '2' → logprob: -2.3503506183624268
    3. '4' → logprob: -8.975350379943848
    4. '   ' → logprob: -12.225350379943848
    5. ' (' → logprob: -12.475350379943848
    6. '(' → logprob: -12.600350379943848
    7. ' ' → logprob: -13.850350379943848
    8. ' #' → logprob: -13.975350379943848
    9. '  ' → logprob: -14.100350379943848
    10. '1' → logprob: -14.225350379943848

Token 171: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012972217984497547
    2. '4' → logprob: -4.637972354888916
    3. ' ' → logprob: -5.762972354888916
    4. '1' → logprob: -9.887971878051758
    5. '0' → logprob: -11.512971878051758
    6. '3' → logprob: -12.637971878051758
    7. '(' → logprob: -13.887971878051758
    8. '  ' → logprob: -14.012971878051758
    9. 'c' → logprob: -14.012971878051758
    10. '   ' → logprob: -14.137971878051758

Token 172: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20797869563102722
    2. ' ' → logprob: -1.9579787254333496
    3. '*' → logprob: -3.4579787254333496
    4. ' x' → logprob: -5.20797872543335
    5. '   ' → logprob: -5.70797872543335
    6. '2' → logprob: -5.83297872543335
    7. '0' → logprob: -7.45797872543335
    8. '#' → logprob: -7.70797872543335
    9. 'for' → logprob: -7.83297872543335
    10. '4' → logprob: -8.332978248596191

Token 173: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.226628895296017e-06
    2. '4' → logprob: -12.000007629394531
    3. '```' → logprob: -14.750007629394531
    4. ' ' → logprob: -15.125007629394531
    5. '3' → logprob: -15.625007629394531
    6. '1' → logprob: -16.00000762939453
    7. '   ' → logprob: -17.75000762939453
    8. '8' → logprob: -18.62500762939453
    9. 'c' → logprob: -18.87500762939453
    10. '5' → logprob: -19.06250762939453

Token 174: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.043354492634534836
    2. 'block' → logprob: -3.1683545112609863
    3. '(block' → logprob: -8.043354034423828
    4. ' (' → logprob: -10.418354034423828
    5. '(' → logprob: -13.793354034423828
    6. '	block' → logprob: -13.793354034423828
    7. '_block' → logprob: -14.543354034423828
    8. '               ' → logprob: -15.168354034423828
    9. ' блок' → logprob: -15.543354034423828
    10. '(
' → logprob: -15.543354034423828

Token 175: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.48181280493736267
    2. ' (' → logprob: -0.9818128347396851
    3. ' for' → logprob: -5.481812953948975
    4. '(' → logprob: -6.356812953948975
    5. '           ' → logprob: -6.481812953948975
    6. ':' → logprob: -9.106812477111816
    7. 'for' → logprob: -10.106812477111816
    8. ' ' → logprob: -10.231812477111816
    9. '                ' → logprob: -11.231812477111816
    10. '   ' → logprob: -11.356812477111816

Token 176: 'width' (ID: 6015)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23911505937576294
    2. '4' → logprob: -2.114114999771118
    3. 'width' → logprob: -2.989114999771118
    4. '1' → logprob: -3.989114999771118
    5. '0' → logprob: -4.114115238189697
    6. ' ' → logprob: -5.614115238189697
    7. ' width' → logprob: -6.739115238189697
    8. 'c' → logprob: -7.489115238189697
    9. 'height' → logprob: -7.864115238189697
    10. 'dx' → logprob: -8.114114761352539

Token 177: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -6.392202976712724e-06
    2. '4' → logprob: -12.500006675720215
    3. '2' → logprob: -13.250006675720215
    4. ' =' → logprob: -14.375006675720215
    5. '=
' → logprob: -15.875006675720215
    6. '=

' → logprob: -16.0000057220459
    7. '==' → logprob: -17.6250057220459
    8. ' ' → logprob: -17.8750057220459
    9. '```' → logprob: -17.8750057220459
    10. ':' → logprob: -18.8750057220459

Token 178: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.263011578586884e-05
    2. '4' → logprob: -10.125042915344238
    3. ' ' → logprob: -13.000042915344238
    4. '```' → logprob: -15.625042915344238
    5. '   ' → logprob: -16.875041961669922
    6. '1' → logprob: -17.750041961669922
    7. '۲' → logprob: -17.750041961669922
    8. '`' → logprob: -18.625041961669922
    9. '２' → logprob: -19.312541961669922
    10. '	' → logprob: -19.375041961669922

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.478889215737581e-05
    2. ' ,' → logprob: -10.375054359436035
    3. ')' → logprob: -11.000054359436035
    4. '           ' → logprob: -13.500054359436035
    5. ',
' → logprob: -13.500054359436035
    6. ' ' → logprob: -13.875054359436035
    7. '   ' → logprob: -14.125054359436035
    8. '```' → logprob: -14.625054359436035
    9. '               ' → logprob: -15.250054359436035
    10. '4' → logprob: -15.625054359436035

Token 180: ' height' (ID: 4679)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0015040287980809808
    2. ' ' → logprob: -6.501503944396973
    3. '2' → logprob: -13.376503944396973
    4. '   ' → logprob: -16.62650489807129
    5. '```' → logprob: -17.12650489807129
    6. ' four' → logprob: -17.62650489807129
    7. '' → logprob: -18.12650489807129
    8. 'for' → logprob: -18.12650489807129
    9. ')' → logprob: -19.00150489807129
    10. '۴' → logprob: -19.18900489807129

Token 181: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004933410091325641
    2. '4' → logprob: -7.62549352645874
    3. ':' → logprob: -13.125493049621582
    4. '=
' → logprob: -13.875493049621582
    5. ' =' → logprob: -14.250493049621582
    6. ' ' → logprob: -14.500493049621582
    7. '```' → logprob: -14.875493049621582
    8. ')' → logprob: -15.125493049621582
    9. '=

' → logprob: -15.250493049621582
    10. '*' → logprob: -15.500493049621582

Token 182: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.1472419600977446e-06
    2. '' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '```' → logprob: -15.875000953674316
    5. '৪' → logprob: -16.000001907348633
    6. '۴' → logprob: -16.000001907348633
    7. '４' → logprob: -16.500001907348633
    8. '<|end|>' → logprob: -16.750001907348633
    9. '४' → logprob: -16.875001907348633
    10. '٤' → logprob: -17.500001907348633

Token 183: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16145609319210052
    2. ')' → logprob: -2.5364561080932617
    3. '               ' → logprob: -3.1614561080932617
    4. '):
' → logprob: -3.6614561080932617
    5. 'for' → logprob: -6.911456108093262
    6. '):' → logprob: -7.661456108093262
    7. ' for' → logprob: -8.661456108093262
    8. '           ' → logprob: -9.411456108093262
    9. ')
' → logprob: -9.411456108093262
    10. '                   ' → logprob: -10.161456108093262

Token 184: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04418639838695526
    2. 'for' → logprob: -3.6691863536834717
    3. ' for' → logprob: -4.044186592102051
    4. '           ' → logprob: -8.54418659210205
    5. '              ' → logprob: -13.04418659210205
    6. '                ' → logprob: -13.54418659210205
    7. '                   ' → logprob: -13.91918659210205
    8. '       ' → logprob: -14.04418659210205
    9. '             ' → logprob: -14.04418659210205
    10. '	for' → logprob: -14.29418659210205

Token 185: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16023722290992737
    2. ' for' → logprob: -1.910237193107605
    3. '               ' → logprob: -11.535237312316895
    4. '           ' → logprob: -12.785237312316895
    5. '	for' → logprob: -15.785237312316895
    6. '
' → logprob: -15.910237312316895
    7. '                   ' → logprob: -16.035236358642578
    8. '       ' → logprob: -16.910236358642578
    9. ' ' → logprob: -17.910236358642578
    10. '```' → logprob: -18.035236358642578

Token 186: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.4630720019340515
    2. 'dx' → logprob: -1.2130720615386963
    3. ' dy' → logprob: -2.8380720615386963
    4. ' dx' → logprob: -4.213071823120117
    5. ' range' → logprob: -11.838071823120117
    6. 'range' → logprob: -12.213071823120117
    7. '   ' → logprob: -12.713071823120117
    8. 'd' → logprob: -12.838071823120117
    9. ' ' → logprob: -12.963071823120117
    10. '(dx' → logprob: -12.963071823120117

Token 187: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048747241497039795
    2. 'in' → logprob: -3.0487473011016846
    3. 'range' → logprob: -8.798747062683105
    4. ' ' → logprob: -13.173747062683105
    5. ' range' → logprob: -13.673747062683105
    6. '(' → logprob: -13.673747062683105
    7. '(range' → logprob: -13.923747062683105
    8. 'd' → logprob: -14.048747062683105
    9. '   ' → logprob: -14.298747062683105
    10. 'In' → logprob: -14.673747062683105

Token 188: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015028368216007948
    2. ' range' → logprob: -6.501502990722656
    3. '(range' → logprob: -14.876502990722656
    4. '4' → logprob: -16.001502990722656
    5. '	range' → logprob: -19.626502990722656
    6. ' ' → logprob: -20.501502990722656
    7. '   ' → logprob: -21.626502990722656
    8. 'r' → logprob: -22.376502990722656
    9. '.range' → logprob: -22.376502990722656
    10. 'Range' → logprob: -22.501502990722656

Token 189: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027546025812625885
    2. 'range' → logprob: -4.027545928955078
    3. '4' → logprob: -4.777545928955078
    4. ' range' → logprob: -7.277545928955078
    5. '(range' → logprob: -8.402545928955078
    6. ' (' → logprob: -11.652545928955078
    7. '(
' → logprob: -12.527545928955078
    8. '2' → logprob: -12.777545928955078
    9. ' ' → logprob: -13.277545928955078
    10. 'in' → logprob: -14.027545928955078

Token 190: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -9.849109119386412e-06
    2. ' ' → logprob: -11.625009536743164
    3. '2' → logprob: -14.750009536743164
    4. 'range' → logprob: -15.750009536743164
    5. '   ' → logprob: -17.125009536743164
    6. '' → logprob: -17.125009536743164
    7. '۴' → logprob: -17.562509536743164
    8. '４' → logprob: -18.250009536743164
    9. '৪' → logprob: -18.500009536743164
    10. '٤' → logprob: -18.625009536743164

Token 191: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.009910613298416138
    2. '):' → logprob: -4.634910583496094
    3. ':
' → logprob: -9.634910583496094
    4. '):
' → logprob: -10.134910583496094
    5. ':' → logprob: -10.259910583496094
    6. '       ' → logprob: -12.759910583496094
    7. '   ' → logprob: -12.884910583496094
    8. '               ' → logprob: -13.134910583496094
    9. '):

' → logprob: -13.134910583496094
    10. '                   ' → logprob: -13.634910583496094

Token 192: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05337749794125557
    2. '   ' → logprob: -3.428377389907837
    3. ' for' → logprob: -4.428377628326416
    4. 'for' → logprob: -5.053377628326416
    5. '               ' → logprob: -7.678377628326416
    6. '           ' → logprob: -7.678377628326416
    7. '       ' → logprob: -8.303377151489258
    8. ' ' → logprob: -10.803377151489258
    9. '                       ' → logprob: -10.928377151489258
    10. ' range' → logprob: -14.053377151489258

Token 193: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2519410252571106
    2. ' for' → logprob: -1.5019409656524658
    3. '                   ' → logprob: -12.501940727233887
    4. 'range' → logprob: -12.626940727233887
    5. ' range' → logprob: -12.751940727233887
    6. '               ' → logprob: -13.751940727233887
    7. '   ' → logprob: -15.001940727233887
    8. ' ' → logprob: -15.001940727233887
    9. '       ' → logprob: -16.126941680908203
    10. '           ' → logprob: -16.251941680908203

Token 194: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.022587081417441368
    2. 'dy' → logprob: -3.8975870609283447
    3. 'range' → logprob: -6.772587299346924
    4. '2' → logprob: -7.522587299346924
    5. ' dx' → logprob: -8.272586822509766
    6. ' range' → logprob: -9.522586822509766
    7. ' dy' → logprob: -11.147586822509766
    8. '1' → logprob: -12.022586822509766
    9. '   ' → logprob: -12.397586822509766
    10. '(dx' → logprob: -13.272586822509766

Token 195: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10026048123836517
    2. 'in' → logprob: -2.3502604961395264
    3. ' ' → logprob: -11.100260734558105
    4. '(' → logprob: -11.350260734558105
    5. '[' → logprob: -11.600260734558105
    6. '                   ' → logprob: -12.225260734558105
    7. '```' → logprob: -12.975260734558105
    8. '2' → logprob: -13.600260734558105
    9. '<|end|>' → logprob: -13.725260734558105
    10. '                       ' → logprob: -13.725260734558105

Token 196: ' range' (ID: 3352)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.030890343710780144
    2. 'range' → logprob: -3.5308902263641357
    3. ' range' → logprob: -7.030890464782715
    4. ' ' → logprob: -8.280890464782715
    5. '   ' → logprob: -14.030890464782715
    6. '(' → logprob: -14.655890464782715
    7. '       ' → logprob: -16.1558895111084
    8. '```' → logprob: -16.5308895111084
    9. '(range' → logprob: -16.5308895111084
    10. 'Range' → logprob: -17.4058895111084

Token 197: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008048642775975168
    2. 'range' → logprob: -7.250804901123047
    3. '2' → logprob: -9.375804901123047
    4. ' range' → logprob: -11.875804901123047
    5. '(range' → logprob: -13.875804901123047
    6. ' (' → logprob: -14.000804901123047
    7. 'in' → logprob: -14.750804901123047
    8. '   ' → logprob: -15.125804901123047
    9. '(
' → logprob: -15.500804901123047
    10. ' in' → logprob: -15.750804901123047

Token 198: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. 'range' → logprob: -15.875027656555176
    4. '   ' → logprob: -16.500028610229492
    5. ' range' → logprob: -19.000028610229492
    6. '       ' → logprob: -19.000028610229492
    7. '
' → logprob: -19.000028610229492
    8. '```' → logprob: -19.375028610229492
    9. '۲' → logprob: -19.500028610229492
    10. '0' → logprob: -19.812528610229492

Token 199: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.46936890482902527
    2. ':' → logprob: -1.3443689346313477
    3. '):
' → logprob: -2.2193689346313477
    4. ':
' → logprob: -5.344368934631348
    5. '                       ' → logprob: -8.469368934631348
    6. '                   ' → logprob: -9.594368934631348
    7. ')' → logprob: -9.594368934631348
    8. '):
' → logprob: -11.344368934631348
    9. '():' → logprob: -11.344368934631348
    10. '               ' → logprob: -11.469368934631348

Token 200: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.057510774582624435
    2. ' board' → logprob: -3.6825108528137207
    3. '                   ' → logprob: -3.9325108528137207
    4. 'board' → logprob: -5.182510852813721
    5. '               ' → logprob: -6.057510852813721
    6. '                           ' → logprob: -6.182510852813721
    7. '           ' → logprob: -7.932510852813721
    8. '   ' → logprob: -8.182510375976562
    9. '                               ' → logprob: -9.307510375976562
    10. '```' → logprob: -9.307510375976562

Token 201: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' (adapté à ' board') → logprob: -0.011051355861127377
    2. ' board' → logprob: -4.511051177978516
    3. '                       ' → logprob: -14.011051177978516
    4. '               ' → logprob: -14.511051177978516
    5. '                   ' → logprob: -14.511051177978516
    6. '	board' → logprob: -14.511051177978516
    7. '           ' → logprob: -14.761051177978516
    8. 'Board' → logprob: -15.511051177978516
    9. '.board' → logprob: -15.886051177978516
    10. '   ' → logprob: -16.386051177978516

Token 202: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -6.265633419388905e-05
    2. 'y' → logprob: -10.000062942504883
    3. '[' → logprob: -11.250062942504883
    4. '```' → logprob: -13.500062942504883
    5. ' [' → logprob: -14.125062942504883
    6. '[x' → logprob: -14.375062942504883
    7. '[
' → logprob: -14.750062942504883
    8. '   ' → logprob: -15.875062942504883
    9. '][' → logprob: -16.000062942504883
    10. '
' → logprob: -16.000062942504883

Token 203: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.4849443838757e-06
    2. ' +' → logprob: -12.625004768371582
    3. '[' → logprob: -14.125004768371582
    4. '+[' → logprob: -15.750004768371582
    5. '+d' → logprob: -16.125003814697266
    6. '+
' → logprob: -16.375003814697266
    7. '＋' → logprob: -17.250003814697266
    8. '][' → logprob: -17.375003814697266
    9. '+=' → logprob: -18.125003814697266
    10. '+y' → logprob: -18.125003814697266

Token 204: 'dy' (ID: 7593)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.012589586898684502
    2. 'dy' → logprob: -4.387589454650879
    3. '+' → logprob: -9.637589454650879
    4. 'x' → logprob: -11.637589454650879
    5. 'd' → logprob: -12.887589454650879
    6. ' dx' → logprob: -13.137589454650879
    7. '(dx' → logprob: -14.512589454650879
    8. 'xd' → logprob: -15.512589454650879
    9. '0' → logprob: -15.887589454650879
    10. '_dx' → logprob: -16.012590408325195

Token 205: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004989399458281696
    2. ' ][' → logprob: -8.12549877166748
    3. '[' → logprob: -8.75049877166748
    4. '+' → logprob: -11.25049877166748
    5. ']' → logprob: -11.37549877166748
    6. '[x' → logprob: -11.75049877166748
    7. '   ' → logprob: -13.25049877166748
    8. ']][' → logprob: -13.25049877166748
    9. ')][' → logprob: -13.37549877166748
    10. ')[' → logprob: -13.50049877166748

Token 206: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.153795766294934e-06
    2. ' x' → logprob: -12.125005722045898
    3. '[x' → logprob: -15.625005722045898
    4. '(x' → logprob: -16.0000057220459
    5. ')x' → logprob: -16.2500057220459
    6. '"x' → logprob: -16.5000057220459
    7. '+x' → logprob: -16.8750057220459
    8. ''x' → logprob: -17.0000057220459
    9. '	x' → logprob: -17.1250057220459
    10. '```' → logprob: -17.2500057220459

Token 207: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2352385965641588e-05
    2. '][' → logprob: -11.875012397766113
    3. ' +' → logprob: -12.500012397766113
    4. '+
' → logprob: -13.500012397766113
    5. '+x' → logprob: -16.500011444091797
    6. '＋' → logprob: -17.000011444091797
    7. '+xml' → logprob: -17.250011444091797
    8. '[' → logprob: -17.375011444091797
    9. '+[' → logprob: -17.500011444091797
    10. 'dx' → logprob: -17.625011444091797

Token 208: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -3.054500666621607e-06
    2. ' dx' → logprob: -13.25000286102295
    3. 'xd' → logprob: -15.12500286102295
    4. '(dx' → logprob: -15.25000286102295
    5. 'x' → logprob: -15.87500286102295
    6. '_dx' → logprob: -16.000003814697266
    7. 'd' → logprob: -16.500003814697266
    8. '```' → logprob: -16.500003814697266
    9. '
' → logprob: -17.000003814697266
    10. 'cx' → logprob: -17.000003814697266

Token 209: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021266166120767593
    2. ']=' → logprob: -4.271265983581543
    3. '=' → logprob: -5.021265983581543
    4. ' =' → logprob: -8.396265983581543
    5. ' ]' → logprob: -8.646265983581543
    6. ')' → logprob: -9.521265983581543
    7. ')=' → logprob: -12.896265983581543
    8. '[' → logprob: -14.146265983581543
    9. '<|end|>' → logprob: -14.521265983581543
    10. 'c' → logprob: -15.021265983581543

Token 210: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003178071230649948
    2. ' =' → logprob: -5.753178119659424
    3. '=c' → logprob: -15.253177642822266
    4. ']=' → logprob: -16.253177642822266
    5. '=
' → logprob: -17.378177642822266
    6. ']' → logprob: -18.628177642822266
    7. ')=' → logprob: -19.128177642822266
    8. '=

' → logprob: -19.128177642822266
    9. '<|end|>' → logprob: -19.378177642822266
    10. 'c' → logprob: -19.628177642822266

Token 211: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.7610454708337784e-05
    2. ' c' → logprob: -10.500027656555176
    3. '<|end|>' → logprob: -17.25002670288086
    4. ')c' → logprob: -19.62502670288086
    5. '```' → logprob: -19.62502670288086
    6. '
' → logprob: -19.87502670288086
    7. '	c' → logprob: -19.87502670288086
    8. '                       ' → logprob: -20.00002670288086
    9. '                           ' → logprob: -20.12502670288086
    10. '   ' → logprob: -20.75002670288086

Token 212: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04105285182595253
    2. '   ' → logprob: -4.66605281829834
    3. '        
' → logprob: -4.66605281829834
    4. 'queue' → logprob: -4.79105281829834
    5. 'dist' → logprob: -5.29105281829834
    6. 'visited' → logprob: -6.29105281829834
    7. 'def' → logprob: -6.66605281829834
    8. 'distance' → logprob: -6.66605281829834
    9. '
' → logprob: -6.79105281829834
    10. ' visited' → logprob: -7.41605281829834

Token 214: ' start' (ID: 1604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43667250871658325
    2. 'dire' → logprob: -2.0616724491119385
    3. 'queue' → logprob: -2.9366724491119385
    4. '   ' → logprob: -3.1866724491119385
    5. 'dist' → logprob: -3.5616724491119385
    6. ' directions' → logprob: -3.6866724491119385
    7. 'moves' → logprob: -3.9366724491119385
    8. 'visited' → logprob: -4.061672687530518
    9. '        
' → logprob: -4.186672687530518
    10. 'dx' → logprob: -4.936672687530518

Token 215: '_color' (ID: 15576)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3454723358154297
    2. '=' → logprob: -1.3454723358154297
    3. '_x' → logprob: -3.9704723358154297
    4. '_' → logprob: -5.72047233581543
    5. 'x' → logprob: -5.72047233581543
    6. '_queue' → logprob: -5.72047233581543
    7. ',' → logprob: -6.22047233581543
    8. ')' → logprob: -8.59547233581543
    9. '(' → logprob: -9.22047233581543
    10. '[' → logprob: -9.22047233581543

Token 216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48334041237831116
    2. ',' → logprob: -1.1083403825759888
    3. '=' → logprob: -2.9833405017852783
    4. ' ,' → logprob: -6.108340263366699
    5. ')' → logprob: -9.1083402633667
    6. ' ' → logprob: -9.7333402633667
    7. 's' → logprob: -10.6083402633667
    8. 'x' → logprob: -10.6083402633667
    9. '[' → logprob: -11.2333402633667
    10. 'y' → logprob: -11.3583402633667

Token 217: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.007612305693328381
    2. ' board' → logprob: -4.882612228393555
    3. '   ' → logprob: -12.257612228393555
    4. '	board' → logprob: -14.382612228393555
    5. '(board' → logprob: -15.007612228393555
    6. ' ' → logprob: -15.507612228393555
    7. '  ' → logprob: -15.757612228393555
    8. 'b' → logprob: -16.757612228393555
    9. '    ' → logprob: -17.257612228393555
    10. 'boards' → logprob: -17.382612228393555

Token 218: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.054500666621607e-06
    2. 'ys' → logprob: -13.12500286102295
    3. '   ' → logprob: -14.62500286102295
    4. ' [' → logprob: -15.00000286102295
    5. '[x' → logprob: -16.000003814697266
    6. '[y' → logprob: -16.750003814697266
    7. ' ys' → logprob: -17.000003814697266
    8. '       ' → logprob: -17.750003814697266
    9. '(' → logprob: -17.875003814697266
    10. '#' → logprob: -18.125003814697266

Token 219: 'ys' (ID: 1371)
  Prédit: 'ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -7.226628895296017e-06
    2. ' ys' → logprob: -12.750007629394531
    3. 'xs' → logprob: -13.375007629394531
    4. '[' → logprob: -13.375007629394531
    5. '   ' → logprob: -13.875007629394531
    6. '(' → logprob: -16.75000762939453
    7. '       ' → logprob: -17.62500762939453
    8. 'hs' → logprob: -17.87500762939453
    9. 'Ys' → logprob: -18.12500762939453
    10. 'h' → logprob: -18.50000762939453

Token 220: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006160548073239625
    2. '[' → logprob: -7.625616073608398
    3. ' ][' → logprob: -9.000616073608398
    4. ']' → logprob: -12.875616073608398
    5. '   ' → logprob: -14.250616073608398
    6. '-' → logprob: -15.500616073608398
    7. '[s' → logprob: -15.875616073608398
    8. ')][' → logprob: -16.0006160736084
    9. '	' → logprob: -16.1256160736084
    10. ']][' → logprob: -16.1256160736084

Token 221: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -4.0484450437361374e-05
    2. ' xs' → logprob: -10.125040054321289
    3. '(xs' → logprob: -16.37504005432129
    4. '   ' → logprob: -16.75004005432129
    5. '
' → logprob: -17.12504005432129
    6. ' ' → logprob: -17.87504005432129
    7. 'x' → logprob: -18.37504005432129
    8. '-xs' → logprob: -18.50004005432129
    9. '

' → logprob: -18.62504005432129
    10. 'XS' → logprob: -19.75004005432129

Token 222: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00040576665196567774
    2. ' ]' → logprob: -8.000405311584473
    3. ']
' → logprob: -9.625405311584473
    4. ')]' → logprob: -13.250405311584473
    5. ')' → logprob: -14.125405311584473
    6. ']

' → logprob: -14.625405311584473
    7. ']==' → logprob: -15.125405311584473
    8. '])' → logprob: -15.375405311584473
    9. ']
' → logprob: -15.625405311584473
    10. ']]' → logprob: -15.750405311584473

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4358745217323303
    2. '
' → logprob: -1.5608744621276855
    3. '<|end|>' → logprob: -3.1858744621276855
    4. '   ' → logprob: -3.3108744621276855
    5. 'queue' → logprob: -3.6858744621276855
    6. ' queue' → logprob: -4.5608744621276855
    7. '```' → logprob: -4.9358744621276855
    8. '	queue' → logprob: -5.5608744621276855
    9. '        
' → logprob: -5.5608744621276855
    10. ')' → logprob: -5.6858744621276855

Token 224: ' if' (ID: 538)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.12990719079971313
    2. 'q' → logprob: -2.8799071311950684
    3. '   ' → logprob: -4.129907131195068
    4. 'visited' → logprob: -4.129907131195068
    5. 'dq' → logprob: -4.129907131195068
    6. 'que' → logprob: -5.379907131195068
    7. ' queue' → logprob: -5.504907131195068
    8. 'if' (adapté à ' if') → logprob: -5.504907131195068
    9. 'dist' → logprob: -6.504907131195068
    10. '       ' → logprob: -6.504907131195068

Token 225: ' start' (ID: 1604)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4392014443874359
    2. ' start' → logprob: -1.4392014741897583
    3. '(start' → logprob: -2.9392013549804688
    4. '(xs' → logprob: -3.8142013549804688
    5. 'start' → logprob: -4.064201354980469
    6. ' xs' → logprob: -4.564201354980469
    7. '(' → logprob: -5.189201354980469
    8. ' board' → logprob: -6.064201354980469
    9. '(x' → logprob: -6.564201354980469
    10. '(w' → logprob: -6.564201354980469

Token 226: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.0002602629829198122
    2. '[' → logprob: -8.875260353088379
    3. '_' → logprob: -10.125260353088379
    4. ' _' → logprob: -10.875260353088379
    5. '_colors' → logprob: -11.375260353088379
    6. '```' → logprob: -11.375260353088379
    7. 'color' → logprob: -11.750260353088379
    8. '[_' → logprob: -11.875260353088379
    9. '==' → logprob: -12.375260353088379
    10. '_code' → logprob: -13.250260353088379

Token 227: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14832819998264313
    2. '==' → logprob: -2.0233283042907715
    3. ' !=' → logprob: -5.2733283042907715
    4. '!=' → logprob: -7.7733283042907715
    5. ' is' → logprob: -9.648327827453613
    6. ' ' → logprob: -11.398327827453613
    7. ':' → logprob: -12.523327827453613
    8. '=' → logprob: -12.773327827453613
    9. ')' → logprob: -12.898327827453613
    10. '[' → logprob: -13.398327827453613

Token 228: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0060572512447834015
    2. ' ' → logprob: -5.506057262420654
    3. 'board' → logprob: -6.256057262420654
    4. ' board' → logprob: -10.756056785583496
    5. '1' → logprob: -10.881056785583496
    6. '   ' → logprob: -12.381056785583496
    7. '9' → logprob: -13.193556785583496
    8. '-' → logprob: -13.256056785583496
    9. 'c' → logprob: -13.381056785583496
    10. '  ' → logprob: -14.131056785583496

Token 229: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003610872954595834
    2. ' ' → logprob: -8.125361442565918
    3. 'board' → logprob: -9.750361442565918
    4. '1' → logprob: -12.500361442565918
    5. '-' → logprob: -14.125361442565918
    6. '9' → logprob: -15.000361442565918
    7. ' board' → logprob: -15.125361442565918
    8. 'c' → logprob: -15.312861442565918
    9. 'b' → logprob: -15.812861442565918
    10. '   ' → logprob: -16.0628604888916

Token 230: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0793062373995781
    2. ':
' → logprob: -2.579306125640869
    3. ' or' → logprob: -8.079306602478027
    4. ':return' → logprob: -9.204306602478027
    5. ' and' → logprob: -12.954306602478027
    6. '           ' → logprob: -13.829306602478027
    7. '       ' → logprob: -13.954306602478027
    8. ':
' → logprob: -14.829306602478027
    9. ':

' → logprob: -14.954306602478027
    10. '   ' → logprob: -15.329306602478027

Token 231: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005093070212751627
    2. ':' → logprob: -8.000509262084961
    3. ' return' → logprob: -9.500509262084961
    4. 'return' → logprob: -10.250509262084961
    5. '       ' → logprob: -10.750509262084961
    6. ',' → logprob: -11.875509262084961
    7. '.' → logprob: -12.125509262084961
    8. '
' → logprob: -12.250509262084961
    9. ':
' → logprob: -12.250509262084961
    10. 'print' → logprob: -12.250509262084961

Token 232: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03471605107188225
    2. ' print' → logprob: -3.9097161293029785
    3. '           ' → logprob: -4.5347161293029785
    4. 'return' → logprob: -6.1597161293029785
    5. '       ' → logprob: -6.9097161293029785
    6. 'continue' → logprob: -9.28471565246582
    7. ' return' → logprob: -9.53471565246582
    8. '   ' → logprob: -10.15971565246582
    9. ' continue' → logprob: -11.90971565246582
    10. '
' → logprob: -12.15971565246582

Token 233: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.860481858253479
    2. '(-' → logprob: -0.985481858253479
    3. '("' → logprob: -1.610481858253479
    4. '('' → logprob: -5.6104817390441895
    5. '()' → logprob: -8.360482215881348
    6. '("-' → logprob: -10.610482215881348
    7. '(None' → logprob: -10.610482215881348
    8. '(False' → logprob: -11.235482215881348
    9. '("")' → logprob: -11.735482215881348
    10. '(":' → logprob: -12.735482215881348

Token 234: 'NG' (ID: 19236)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20059773325920105
    2. '0' → logprob: -1.8255977630615234
    3. 'No' → logprob: -4.825597763061523
    4. 'Impossible' → logprob: -4.950597763061523
    5. 'im' → logprob: -6.200597763061523
    6. 'IMP' → logprob: -6.700597763061523
    7. 'None' → logprob: -7.700597763061523
    8. 'NO' → logprob: -8.075597763061523
    9. '"' → logprob: -8.575597763061523
    10. 'Cannot' → logprob: -8.825597763061523

Token 235: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0017421740340068936
    2. ')' → logprob: -7.001742362976074
    3. '")
' → logprob: -7.126742362976074
    4. ')")' → logprob: -11.126742362976074
    5. '"' → logprob: -11.876742362976074
    6. '")
' → logprob: -12.626742362976074
    7. ')
' → logprob: -14.251742362976074
    8. ' )' → logprob: -15.001742362976074
    9. ' ")' → logprob: -15.251742362976074
    10. '')' → logprob: -15.626742362976074

Token 236: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003047186473850161
    2. '       ' → logprob: -8.12530517578125
    3. '		' → logprob: -12.25030517578125
    4. '               ' → logprob: -13.75030517578125
    5. '	       ' → logprob: -14.12530517578125
    6. '   ' → logprob: -14.50030517578125
    7. ',' → logprob: -14.62530517578125
    8. '          ' → logprob: -15.25030517578125
    9. ' continue' → logprob: -15.62530517578125
    10. 'continue' → logprob: -15.87530517578125

Token 237: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005108287557959557
    2. 'continue' (adapté à ' continue') → logprob: -5.50510835647583
    3. ' continue' → logprob: -7.25510835647583
    4. '		' → logprob: -8.630107879638672
    5. '	continue' → logprob: -9.630107879638672
    6. '       ' → logprob: -9.880107879638672
    7. '	       ' → logprob: -11.630107879638672
    8. '	' → logprob: -12.380107879638672
    9. '               ' → logprob: -12.380107879638672
    10. '   ' → logprob: -12.880107879638672

Token 238: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023856377229094505
    2. '        
' → logprob: -6.25238561630249
    3. '
' → logprob: -9.002386093139648
    4. ' queue' → logprob: -9.252386093139648
    5. '    
' → logprob: -10.127386093139648
    6. ',' → logprob: -10.377386093139648
    7. '   ' → logprob: -10.502386093139648
    8. '  
' → logprob: -10.752386093139648
    9. 'queue' → logprob: -11.252386093139648
    10. '            
' → logprob: -11.502386093139648

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00823783129453659
    2. '        
' → logprob: -5.133237838745117
    3. '
' → logprob: -6.633237838745117
    4. '    
' → logprob: -8.383237838745117
    5. '  
' → logprob: -8.883237838745117
    6. '   ' → logprob: -9.008237838745117
    7. ' 
' → logprob: -9.508237838745117
    8. ')' → logprob: -10.008237838745117
    9. ' queue' → logprob: -10.008237838745117
    10. 'queue' → logprob: -10.383237838745117

Token 240: ' visited' (ID: 18416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019727090373635292
    2. 'visited' (adapté à ' visited') → logprob: -4.7697272300720215
    3. 'dire' → logprob: -5.8947272300720215
    4. '        
' → logprob: -5.8947272300720215
    5. 'queue' → logprob: -6.3947272300720215
    6. ' visited' → logprob: -7.0197272300720215
    7. 'moves' → logprob: -7.1447272300720215
    8. ' directions' → logprob: -7.3947272300720215
    9. 'q' → logprob: -8.019726753234863
    10. '   ' → logprob: -8.394726753234863

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890751957893372
    2. '=' → logprob: -2.5789074897766113
    3. '=[[' → logprob: -11.70390796661377
    4. '[' → logprob: -11.95390796661377
    5. '=[' → logprob: -14.20390796661377
    6. '=set' → logprob: -14.20390796661377
    7. ' =[' → logprob: -14.70390796661377
    8. ' ' → logprob: -14.82890796661377
    9. '=[]' → logprob: -15.57890796661377
    10. '＝' → logprob: -15.82890796661377

Token 242: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0018389179604128003
    2. ' [[' → logprob: -6.501838684082031
    3. 'set' → logprob: -8.001838684082031
    4. ' set' → logprob: -13.376838684082031
    5. '[' → logprob: -16.12683868408203
    6. 'deque' → logprob: -16.75183868408203
    7. '{' → logprob: -17.50183868408203
    8. '[['' → logprob: -19.00183868408203
    9. '{{' → logprob: -19.37683868408203
    10. '   ' → logprob: -19.75183868408203

Token 243: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.054500666621607e-06
    2. ' False' → logprob: -12.75000286102295
    3. '0' → logprob: -15.75000286102295
    4. '(False' → logprob: -17.875003814697266
    5. '   ' → logprob: -21.500003814697266
    6. '=False' → logprob: -22.125003814697266
    7. 'True' → logprob: -22.375003814697266
    8. '[' → logprob: -24.000003814697266
    9. '.False' → logprob: -24.125003814697266
    10. 'false' → logprob: -24.250003814697266

Token 244: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.055172137916088104
    2. ']' → logprob: -3.3051722049713135
    3. ' for' → logprob: -4.430171966552734
    4. ']*' → logprob: -5.805171966552734
    5. 'for' → logprob: -6.680171966552734
    6. '](' → logprob: -7.805171966552734
    7. '][' → logprob: -8.430171966552734
    8. '   ' → logprob: -9.555171966552734
    9. '*(' → logprob: -10.305171966552734
    10. '           ' → logprob: -11.305171966552734

Token 245: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -4.5252596464706585e-05
    2. '(w' → logprob: -10.500044822692871
    3. ' w' → logprob: -11.000044822692871
    4. '   ' → logprob: -14.250044822692871
    5. 'len' → logprob: -16.500045776367188
    6. '	w' → logprob: -16.750045776367188
    7. '[w' → logprob: -16.875045776367188
    8. 'h' → logprob: -17.500045776367188
    9. '
' → logprob: -18.000045776367188
    10. 'W' → logprob: -18.500045776367188

Token 246: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.2603901015827432e-05
    2. ' +' → logprob: -10.750022888183594
    3. '+
' → logprob: -14.000022888183594
    4. '1' → logprob: -16.375022888183594
    5. '   ' → logprob: -17.500022888183594
    6. '＋' → logprob: -17.750022888183594
    7. '```' → logprob: -17.750022888183594
    8. '
' → logprob: -17.875022888183594
    9. ')' → logprob: -18.000022888183594
    10. ')+' → logprob: -18.500022888183594

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004104758147150278
    2. '2' → logprob: -5.5041046142578125
    3. ' ' → logprob: -11.129104614257812
    4. '+' → logprob: -12.254104614257812
    5. '   ' → logprob: -12.504104614257812
    6. '6' → logprob: -14.004104614257812
    7. '```' → logprob: -14.004104614257812
    8. '       ' → logprob: -14.879104614257812
    9. '7' → logprob: -15.316604614257812
    10. '
' → logprob: -15.379104614257812

Token 248: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.274932143744081e-05
    2. ' )' → logprob: -10.125042915344238
    3. ' for' → logprob: -13.750042915344238
    4. 'for' → logprob: -14.000042915344238
    5. '   ' → logprob: -15.500042915344238
    6. '       ' → logprob: -15.625042915344238
    7. ']' → logprob: -15.625042915344238
    8. ')
' → logprob: -16.250041961669922
    9. '           ' → logprob: -16.875041961669922
    10. ')]' → logprob: -17.250041961669922

Token 249: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04301666095852852
    2. 'for' → logprob: -3.1680166721343994
    3. ')' → logprob: -11.66801643371582
    4. '       ' → logprob: -12.79301643371582
    5. '   ' → logprob: -13.41801643371582
    6. '	for' → logprob: -13.54301643371582
    7. '           ' → logprob: -13.66801643371582
    8. '               ' → logprob: -14.41801643371582
    9. ' ' → logprob: -15.04301643371582
    10. ']' → logprob: -15.54301643371582

Token 250: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0017352750292047858
    2. ' _' → logprob: -6.376735210418701
    3. ' range' → logprob: -10.75173568725586
    4. ' in' → logprob: -11.87673568725586
    5. 'range' → logprob: -12.50173568725586
    6. '_range' → logprob: -15.00173568725586
    7. '_=' → logprob: -15.75173568725586
    8. ' ' → logprob: -15.87673568725586
    9. 'in' → logprob: -16.25173568725586
    10. '_in' → logprob: -16.37673568725586

Token 251: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17147769033908844
    2. ' range' → logprob: -2.171477794647217
    3. ' in' → logprob: -3.171477794647217
    4. 'in' → logprob: -6.421477794647217
    5. '_' → logprob: -12.921477317810059
    6. '(range' → logprob: -13.921477317810059
    7. '_range' → logprob: -14.671477317810059
    8. ' ' → logprob: -16.671478271484375
    9. '	range' → logprob: -16.671478271484375
    10. ' _' → logprob: -17.046478271484375

Token 252: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022828221321106
    2. ' range' → logprob: -1.9102282524108887
    3. '(range' → logprob: -12.410228729248047
    4. '	range' → logprob: -16.785228729248047
    5. '_range' → logprob: -17.535228729248047
    6. 'w' → logprob: -18.535228729248047
    7. '   ' → logprob: -18.910228729248047
    8. '_' → logprob: -19.410228729248047
    9. ' ' → logprob: -19.785228729248047
    10. ' xrange' → logprob: -19.910228729248047

Token 253: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -5.240481914370321e-05
    2. ' (' → logprob: -10.125052452087402
    3. 'h' → logprob: -11.625052452087402
    4. 'range' → logprob: -13.625052452087402
    5. '(' → logprob: -14.625052452087402
    6. '[h' → logprob: -14.625052452087402
    7. '   ' → logprob: -15.000052452087402
    8. ' h' → logprob: -15.125052452087402
    9. ' range' → logprob: -15.625052452087402
    10. '       ' → logprob: -15.625052452087402

Token 254: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.4849443838757e-06
    2. ' +' → logprob: -13.000004768371582
    3. '+
' → logprob: -14.125004768371582
    4. '1' → logprob: -14.125004768371582
    5. ')+' → logprob: -15.250004768371582
    6. '[' → logprob: -16.500003814697266
    7. ')' → logprob: -17.000003814697266
    8. '   ' → logprob: -17.250003814697266
    9. '()+' → logprob: -17.375003814697266
    10. '＋' → logprob: -17.625003814697266

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '0' → logprob: -14.500001907348633
    3. '2' → logprob: -15.000001907348633
    4. ' ' → logprob: -15.250001907348633
    5. '   ' → logprob: -16.000001907348633
    6. '```' → logprob: -16.437501907348633
    7. '+' → logprob: -17.500001907348633
    8. '
' → logprob: -17.937501907348633
    9. '{' → logprob: -18.375001907348633
    10. '       ' → logprob: -18.375001907348633

Token 256: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0018312999745830894
    2. ')' → logprob: -6.626831531524658
    3. ']' → logprob: -7.626831531524658
    4. '       ' → logprob: -11.1268310546875
    5. ')]
' → logprob: -13.3768310546875
    6. '   ' → logprob: -14.8768310546875
    7. ' )' → logprob: -14.8768310546875
    8. ')])' → logprob: -15.3768310546875
    9. '])' → logprob: -15.6268310546875
    10. ')],' → logprob: -15.7518310546875

Token 257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022892709239386022
    2. '        
' → logprob: -9.625228881835938
    3. '	' → logprob: -10.125228881835938
    4. '   ' → logprob: -10.500228881835938
    5. ' queue' → logprob: -11.000228881835938
    6. ',' → logprob: -11.625228881835938
    7. '        ' → logprob: -11.750228881835938
    8. '	queue' → logprob: -11.875228881835938
    9. '' → logprob: -12.000228881835938
    10. '```' → logprob: -12.000228881835938

Token 258: ' q' (ID: 2335)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.04561319202184677
    2. 'q' (adapté à ' q') → logprob: -4.1706132888793945
    3. ' queue' → logprob: -4.1706132888793945
    4. '       ' → logprob: -5.2956132888793945
    5. '   ' → logprob: -5.2956132888793945
    6. 'dq' → logprob: -5.9206132888793945
    7. 'que' → logprob: -7.2956132888793945
    8. 'deque' → logprob: -8.670613288879395
    9. ' que' → logprob: -10.170613288879395
    10. '```' → logprob: -10.295613288879395

Token 259: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759446620941162
    2. '=' → logprob: -0.8259446620941162
    3. '.' → logprob: -12.575944900512695
    4. '.append' → logprob: -13.950944900512695
    5. '.=' → logprob: -15.075944900512695
    6. ' ' → logprob: -16.075944900512695
    7. 'e' → logprob: -16.325944900512695
    8. '	' → logprob: -16.325944900512695
    9. '=[]' → logprob: -16.700944900512695
    10. '＝' → logprob: -16.825944900512695

Token 260: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.004078401252627373
    2. ' deque' → logprob: -5.504078388214111
    3. 'de' → logprob: -16.879077911376953
    4. 'Deque' → logprob: -18.129077911376953
    5. '	de' → logprob: -22.004077911376953
    6. 'collections' → logprob: -22.129077911376953
    7. '(de' → logprob: -23.129077911376953
    8. '   ' → logprob: -24.129077911376953
    9. '```' → logprob: -24.129077911376953
    10. 'queue' → logprob: -24.504077911376953

Token 261: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.06264577060937881
    2. '()' → logprob: -2.812645673751831
    3. '(' → logprob: -8.06264591217041
    4. '([' → logprob: -8.31264591217041
    5. '[(' → logprob: -9.81264591217041
    6. '((' → logprob: -10.81264591217041
    7. '()
' → logprob: -11.06264591217041
    8. '([]' → logprob: -11.31264591217041
    9. '([
' → logprob: -11.56264591217041
    10. '()\' → logprob: -13.93764591217041

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6615111827850342
    2. 'q' → logprob: -0.9115111827850342
    3. ' q' → logprob: -3.036511182785034
    4. '(q' → logprob: -4.036511421203613
    5. '(' → logprob: -5.536511421203613
    6. '        
' → logprob: -5.786511421203613
    7. '[' → logprob: -6.161511421203613
    8. '	q' → logprob: -6.161511421203613
    9. ' (' → logprob: -6.286511421203613
    10. '[q' → logprob: -6.536511421203613

Token 263: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.0019907322712242603
    2. '       ' → logprob: -6.626990795135498
    3. ' q' → logprob: -7.376990795135498
    4. '	q' → logprob: -11.25199031829834
    5. '   ' → logprob: -11.62699031829834
    6. '        
' → logprob: -12.12699031829834
    7. '(q' → logprob: -12.12699031829834
    8. '(' → logprob: -12.62699031829834
    9. ' (' → logprob: -13.50199031829834
    10. '
' → logprob: -14.37699031829834

Token 264: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.160971628967673e-05
    2. '.enqueue' → logprob: -10.250082015991211
    3. '.' → logprob: -11.500082015991211
    4. 'append' → logprob: -11.750082015991211
    5. '.put' → logprob: -12.125082015991211
    6. '.extend' → logprob: -12.250082015991211
    7. '.add' → logprob: -12.500082015991211
    8. ' .' → logprob: -12.625082015991211
    9. '.p' → logprob: -12.875082015991211
    10. '.ap' → logprob: -13.000082015991211

Token 265: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -6.623244553338736e-05
    2. '(' → logprob: -9.625065803527832
    3. '(((' → logprob: -16.12506675720215
    4. ' ((' → logprob: -17.37506675720215
    5. '[(' → logprob: -17.87506675720215
    6. '([' → logprob: -17.87506675720215
    7. '(xs' → logprob: -18.50006675720215
    8. '([(' → logprob: -18.50006675720215
    9. '(('' → logprob: -19.00006675720215
    10. '(("' → logprob: -19.75006675720215

Token 266: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.0010567454155534506
    2. 'ys' → logprob: -6.876056671142578
    3. ' xs' → logprob: -11.376056671142578
    4. '(xs' → logprob: -11.626056671142578
    5. 'x' → logprob: -13.251056671142578
    6. '(' → logprob: -14.001056671142578
    7. '   ' → logprob: -15.001056671142578
    8. ')' → logprob: -15.251056671142578
    9. 'sx' → logprob: -16.126056671142578
    10. ' ys' → logprob: -17.251056671142578

Token 267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0445127372804563e-05
    2. ' ,' → logprob: -11.75001049041748
    3. '<|end|>' → logprob: -13.37501049041748
    4. ',
' → logprob: -14.25001049041748
    5. '‌,' → logprob: -16.250009536743164
    6. ',y' → logprob: -16.500009536743164
    7. 's' → logprob: -17.000009536743164
    8. '<|end|>' → logprob: -17.375009536743164
    9. ',

' → logprob: -17.750009536743164
    10. ',s' → logprob: -17.875009536743164

Token 268: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.0006268949946388602
    2. ' ys' → logprob: -7.375627040863037
    3. '
' → logprob: -16.125627517700195
    4. 'Ys' → logprob: -16.125627517700195
    5. '   ' → logprob: -17.500627517700195
    6. ' ' → logprob: -17.875627517700195
    7. 'ysi' → logprob: -17.875627517700195
    8. 'yses' → logprob: -18.125627517700195
    9. '

' → logprob: -18.375627517700195
    10. 'YS' → logprob: -18.500627517700195

Token 269: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007999918423593044
    2. ',' → logprob: -4.882999897003174
    3. ')' → logprob: -7.882999897003174
    4. '),' → logprob: -12.258000373840332
    5. ')))' → logprob: -12.258000373840332
    6. '))
' → logprob: -12.508000373840332
    7. ' ))' → logprob: -13.508000373840332
    8. '));' → logprob: -14.008000373840332
    9. '```' → logprob: -15.883000373840332
    10. ')),' → logprob: -16.007999420166016

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3694494366645813
    2. ' 
' → logprob: -2.7444493770599365
    3. ' visited' → logprob: -2.8694493770599365
    4. 'visited' → logprob: -2.9944493770599365
    5. '        
' → logprob: -3.2444493770599365
    6. '<|end|>' → logprob: -3.2444493770599365
    7. ')' → logprob: -3.6194493770599365
    8. '```' → logprob: -5.244449615478516
    9. '  
' → logprob: -5.369449615478516
    10. '[' → logprob: -5.369449615478516

Token 271: ' visited' (ID: 18416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8253540992736816
    2. 'visited' (adapté à ' visited') → logprob: -0.9503540992736816
    3. ' visited' → logprob: -1.8253540992736816
    4. ' while' → logprob: -4.950354099273682
    5. '   ' → logprob: -5.700354099273682
    6. 'while' → logprob: -6.575354099273682
    7. ')' → logprob: -7.575354099273682
    8. ' 
' → logprob: -7.700354099273682
    9. ' )' → logprob: -8.200353622436523
    10. '    ' → logprob: -8.700353622436523

Token 272: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4498052223643754e-05
    2. ' [' → logprob: -12.250014305114746
    3. '[y' → logprob: -12.625014305114746
    4. '[i' → logprob: -13.000014305114746
    5. '[h' → logprob: -13.250014305114746
    6. '][' → logprob: -14.375014305114746
    7. '[q' → logprob: -14.375014305114746
    8. '[js' → logprob: -14.875014305114746
    9. '[s' → logprob: -15.625014305114746
    10. '[int' → logprob: -16.625015258789062

Token 273: 'ys' (ID: 1371)
  Prédit: 'ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -8.661626634420827e-05
    2. '[' → logprob: -9.500086784362793
    3. ' ys' → logprob: -11.625086784362793
    4. 'Ys' → logprob: -14.000086784362793
    5. 'hs' → logprob: -14.500086784362793
    6. '][' → logprob: -15.000086784362793
    7. '0' → logprob: -15.250086784362793
    8. 'y' → logprob: -15.375086784362793
    9. 'YS' → logprob: -16.500085830688477
    10. 's' → logprob: -16.625085830688477

Token 274: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00017922651022672653
    2. '[' → logprob: -8.875179290771484
    3. ' ][' → logprob: -11.000179290771484
    4. ')][' → logprob: -11.750179290771484
    5. ']' → logprob: -11.875179290771484
    6. ')[' → logprob: -12.250179290771484
    7. '   ' → logprob: -13.875179290771484
    8. ']][' → logprob: -14.375179290771484
    9. '       ' → logprob: -15.250179290771484
    10. '```' → logprob: -15.250179290771484

Token 275: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -6.749814019713085e-06
    2. ' xs' → logprob: -12.500006675720215
    3. 'x' → logprob: -12.750006675720215
    4. '(xs' → logprob: -17.00000762939453
    5. '0' → logprob: -17.62500762939453
    6. '   ' → logprob: -19.87500762939453
    7. 'Xs' → logprob: -20.50000762939453
    8. ' ' → logprob: -20.50000762939453
    9. 'sx' → logprob: -20.62500762939453
    10. 'ys' → logprob: -20.75000762939453

Token 276: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00043794067460112274
    2. ')' → logprob: -8.12543773651123
    3. ']=' → logprob: -9.00043773651123
    4. '])' → logprob: -11.50043773651123
    5. ' ]' → logprob: -11.87543773651123
    6. '=' → logprob: -14.37543773651123
    7. 'True' → logprob: -15.00043773651123
    8. ')]' → logprob: -15.87543773651123
    9. ']
' → logprob: -16.625438690185547
    10. '[' → logprob: -16.625438690185547

Token 277: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868838846683502
    2. ' =' → logprob: -1.1368838548660278
    3. '=True' → logprob: -11.261883735656738
    4. ']' → logprob: -17.136884689331055
    5. ' ' → logprob: -17.386884689331055
    6. ')' → logprob: -17.386884689331055
    7. '[' → logprob: -18.261884689331055
    8. 'True' → logprob: -18.511884689331055
    9. ']=' → logprob: -18.511884689331055
    10. ')=' → logprob: -19.136884689331055

Token 278: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001584850688232109
    2. ' True' → logprob: -8.750158309936523
    3. '(True' → logprob: -21.500158309936523
    4. '=True' → logprob: -23.625158309936523
    5. '1' → logprob: -24.000158309936523
    6. 'true' → logprob: -26.250158309936523
    7. 'False' → logprob: -26.625158309936523
    8. 'Tr' → logprob: -26.875158309936523
    9. 'T' → logprob: -27.000158309936523
    10. '.True' → logprob: -28.000158309936523

Token 279: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015778129920363426
    2. '       ' → logprob: -4.640778064727783
    3. '<|end|>' → logprob: -5.515778064727783
    4. ' while' → logprob: -8.140778541564941
    5. '```' → logprob: -8.140778541564941
    6. '   ' → logprob: -8.390778541564941
    7. 'while' → logprob: -8.515778541564941
    8. '        
' → logprob: -8.640778541564941
    9. '\n' → logprob: -8.890778541564941
    10. '    
' → logprob: -9.265778541564941

Token 280: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22142453491687775
    2. '       ' → logprob: -1.8464245796203613
    3. ' 
' → logprob: -5.096424579620361
    4. '   ' → logprob: -5.096424579620361
    5. ' while' → logprob: -5.471424579620361
    6. 'while' → logprob: -5.471424579620361
    7. '        
' → logprob: -5.596424579620361
    8. '\n' → logprob: -5.721424579620361
    9. '<|end|>' → logprob: -5.721424579620361
    10. '    
' → logprob: -6.346424579620361

Token 281: ' found' (ID: 2491)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.02923763170838356
    2. ' while' → logprob: -3.904237747192383
    3. 'dire' → logprob: -5.029237747192383
    4. '       ' → logprob: -7.029237747192383
    5. '   ' → logprob: -7.404237747192383
    6. 'dirs' → logprob: -8.279237747192383
    7. 'dx' → logprob: -8.529237747192383
    8. ' directions' → logprob: -9.029237747192383
    9. '	while' → logprob: -10.904237747192383
    10. 'moves' → logprob: -11.154237747192383

Token 282: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054942771792411804
    2. '=' → logprob: -2.9299428462982178
    3. '=False' → logprob: -10.429943084716797
    4. ',' → logprob: -11.179943084716797
    5. ':' → logprob: -12.554943084716797
    6. '_' → logprob: -12.679943084716797
    7. ')' → logprob: -12.929943084716797
    8. '=True' → logprob: -13.054943084716797
    9. ' ' → logprob: -13.429943084716797
    10. '(' → logprob: -13.929943084716797

Token 283: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0024756586644798517
    2. ' False' → logprob: -6.002475738525391
    3. 'True' → logprob: -18.12747573852539
    4. '(False' → logprob: -18.25247573852539
    5. '0' → logprob: -19.12747573852539
    6. '=False' → logprob: -20.25247573852539
    7. '   ' → logprob: -20.25247573852539
    8. 'F' → logprob: -20.62747573852539
    9. '[]' → logprob: -21.75247573852539
    10. '[' → logprob: -22.37747573852539

Token 284: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08697900921106339
    2. '       ' → logprob: -2.7119789123535156
    3. '        
' → logprob: -5.586978912353516
    4. '<|end|>' → logprob: -5.586978912353516
    5. '\n' → logprob: -5.961978912353516
    6. ' 
' → logprob: -6.086978912353516
    7. '  
' → logprob: -6.836978912353516
    8. '    
' → logprob: -7.086978912353516
    9. ',' → logprob: -7.336978912353516
    10. ':' → logprob: -7.836978912353516

Token 285: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04468320310115814
    2. '       ' → logprob: -3.1696832180023193
    3. '        
' → logprob: -7.29468297958374
    4. ' 
' → logprob: -8.294683456420898
    5. '<|end|>' → logprob: -8.794683456420898
    6. '
' → logprob: -8.919683456420898
    7. '\n' → logprob: -9.044683456420898
    8. '  
' → logprob: -9.544683456420898
    9. '```' → logprob: -9.669683456420898
    10. '    
' → logprob: -9.794683456420898

Token 286: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.048963505774736404
    2. ' while' → logprob: -3.0489635467529297
    3. '       ' → logprob: -7.92396354675293
    4. '	while' → logprob: -11.42396354675293
    5. '   ' → logprob: -13.29896354675293
    6. 'dire' → logprob: -14.42396354675293
    7. '```' → logprob: -15.29896354675293
    8. 'While' → logprob: -15.54896354675293
    9. 'dx' → logprob: -16.04896354675293
    10. 'wh' → logprob: -16.54896354675293

Token 287: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.42957162857055664
    2. ' q' → logprob: -1.0545716285705566
    3. ' len' → logprob: -7.679571628570557
    4. 'len' → logprob: -8.804571151733398
    5. ' not' → logprob: -9.554571151733398
    6. ' True' → logprob: -9.679571151733398
    7. 'True' → logprob: -9.929571151733398
    8. '	q' → logprob: -10.304571151733398
    9. ' ' → logprob: -11.554571151733398
    10. '   ' → logprob: -11.929571151733398

Token 288: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005353979649953544
    2. '.' → logprob: -8.250535011291504
    3. ':
' → logprob: -8.250535011291504
    4. '.pop' → logprob: -12.625535011291504
    5. '):' → logprob: -12.750535011291504
    6. '.append' → logprob: -13.250535011291504
    7. '.:' → logprob: -13.500535011291504
    8. '.p' → logprob: -14.375535011291504
    9. '```' → logprob: -14.750535011291504
    10. '   ' → logprob: -15.125535011291504

Token 289: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034486785531044006
    2. ' (' → logprob: -4.284486770629883
    3. '(x' → logprob: -4.409486770629883
    4. '(' → logprob: -6.409486770629883
    5. ' 
' → logprob: -6.909486770629883
    6. '       ' → logprob: -7.159486770629883
    7. '            
' → logprob: -7.284486770629883
    8. ' x' → logprob: -7.284486770629883
    9. '```' → logprob: -7.784486770629883
    10. '(n' → logprob: -8.284486770629883

Token 290: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0007410150719806552
    2. ' x' → logprob: -7.250741004943848
    3. '(x' → logprob: -11.375741004943848
    4. 'cx' → logprob: -12.000741004943848
    5. '           ' → logprob: -12.125741004943848
    6. '   ' → logprob: -12.625741004943848
    7. '```' → logprob: -13.000741004943848
    8. '               ' → logprob: -14.500741004943848
    9. 'qx' → logprob: -14.500741004943848
    10. '	x' → logprob: -14.875741004943848

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001046743243932724
    2. ',y' → logprob: -6.876046657562256
    3. ' ,' → logprob: -11.751047134399414
    4. '_,' → logprob: -12.376047134399414
    5. 'y' → logprob: -13.626047134399414
    6. ',x' → logprob: -15.001047134399414
    7. ',
' → logprob: -15.501047134399414
    8. ',q' → logprob: -17.001047134399414
    9. '‌,' → logprob: -17.501047134399414
    10. '```' → logprob: -17.751047134399414

Token 292: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00861456897109747
    2. ' y' → logprob: -4.758614540100098
    3. '	y' → logprob: -17.008615493774414
    4. '
' → logprob: -18.133615493774414
    5. ',y' → logprob: -18.633615493774414
    6. '   ' → logprob: -19.133615493774414
    7. ' ' → logprob: -19.383615493774414
    8. '    ' → logprob: -20.008615493774414
    9. '    
' → logprob: -20.008615493774414
    10. ' 
' → logprob: -20.258615493774414

Token 293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519680857658386
    2. '=' → logprob: -1.5019681453704834
    3. '=q' → logprob: -10.251968383789062
    4. ',' → logprob: -13.126968383789062
    5. ')' → logprob: -14.376968383789062
    6. ' =
' → logprob: -15.501968383789062
    7. ')=' → logprob: -15.626968383789062
    8. '=query' → logprob: -15.876968383789062
    9. ' ' → logprob: -16.126968383789062
    10. '=
' → logprob: -16.251968383789062

Token 294: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.003178071230649948
    2. ' q' → logprob: -5.753178119659424
    3. '	q' → logprob: -15.253177642822266
    4. '*q' → logprob: -17.253177642822266
    5. 'qx' → logprob: -17.253177642822266
    6. 'queue' → logprob: -17.628177642822266
    7. 'ql' → logprob: -18.378177642822266
    8. 'deque' → logprob: -18.878177642822266
    9. '_q' → logprob: -19.003177642822266
    10. '   ' → logprob: -19.003177642822266

Token 295: '.p' (ID: 1201)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1474287211894989
    2. ' =' → logprob: -2.0224287509918213
    3. ')' → logprob: -5.897428512573242
    4. '.pop' → logprob: -6.522428512573242
    5. '       ' → logprob: -8.897428512573242
    6. '=
' → logprob: -9.272428512573242
    7. '   ' → logprob: -9.397428512573242
    8. ' ' → logprob: -10.272428512573242
    9. ' =
' → logprob: -10.397428512573242
    10. '[' → logprob: -10.647428512573242

Token 296: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.029791342094540596
    2. 'op' → logprob: -3.5297913551330566
    3. 'ople' → logprob: -10.779790878295898
    4. 'opl' → logprob: -10.904790878295898
    5. 'opup' → logprob: -14.904790878295898
    6. 'opt' → logprob: -15.404790878295898
    7. 'opf' → logprob: -15.529790878295898
    8. 'opped' → logprob: -15.654790878295898
    9. '```' → logprob: -15.779790878295898
    10. 'o' → logprob: -16.0297908782959

Token 297: '()
' (ID: 1234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40900638699531555
    2. '<|end|>' → logprob: -1.1590063571929932
    3. '       ' → logprob: -4.909006595611572
    4. '<|end|>' → logprob: -5.159006595611572
    5. '           ' → logprob: -5.909006595611572
    6. ',' → logprob: -6.159006595611572
    7. ':' → logprob: -7.159006595611572
    8. '
' → logprob: -7.534006595611572
    9. '()' → logprob: -7.659006595611572
    10. '  
' → logprob: -8.534006118774414

Token 298: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 299: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.538718581199646
    2. ' if' → logprob: -1.163718581199646
    3. '           ' → logprob: -2.2887187004089355
    4. 'for' → logprob: -6.6637187004089355
    5. ' for' → logprob: -7.1637187004089355
    6. '       ' → logprob: -8.538718223571777
    7. '            
' → logprob: -8.913718223571777
    8. '            ' → logprob: -8.913718223571777
    9. '
' → logprob: -10.038718223571777
    10. '               ' → logprob: -10.163718223571777

Token 300: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3899385333061218
    2. 'x' → logprob: -1.1399385929107666
    3. '(x' → logprob: -6.0149383544921875
    4. ' (' → logprob: -7.3899383544921875
    5. '(' → logprob: -12.639938354492188
    6. '	x' → logprob: -16.389938354492188
    7. ' ' → logprob: -17.639938354492188
    8. ')' → logprob: -18.639938354492188
    9. ')x' → logprob: -18.764938354492188
    10. '<|end|>' → logprob: -18.764938354492188

Token 301: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02059818245470524
    2. '==' → logprob: -3.8955981731414795
    3. ',' → logprob: -10.270598411560059
    4. '=' → logprob: -11.895598411560059
    5. ' ' → logprob: -12.145598411560059
    6. ')' → logprob: -12.520598411560059
    7. ' ,' → logprob: -13.645598411560059
    8. ' =' → logprob: -13.770598411560059
    9. ')==' → logprob: -13.770598411560059
    10. '<|end|>' → logprob: -14.270598411560059

Token 302: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.061967913061380386
    2. ' x' → logprob: -2.8119678497314453
    3. ' ' → logprob: -16.436967849731445
    4. '	x' → logprob: -16.811967849731445
    5. '<|end|>' → logprob: -17.436967849731445
    6. '_x' → logprob: -17.936967849731445
    7. '
' → logprob: -18.186967849731445
    8. ')x' → logprob: -18.561967849731445
    9. '(x' → logprob: -18.561967849731445
    10. ' 
' → logprob: -18.686967849731445

Token 303: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -2.1888679839321412e-05
    2. '_g' → logprob: -10.750021934509277
    3. ' g' → logprob: -14.875021934509277
    4. '_goal' → logprob: -17.25002098083496
    5. '	g' → logprob: -17.62502098083496
    6. '[g' → logprob: -17.75002098083496
    7. ',' → logprob: -18.00002098083496
    8. ' ' → logprob: -18.50002098083496
    9. '_' → logprob: -18.75002098083496
    10. 'x' → logprob: -19.00002098083496

Token 304: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03804229199886322
    2. 'and' → logprob: -3.2880423069000244
    3. ' ' → logprob: -14.788042068481445
    4. '           ' → logprob: -15.663042068481445
    5. ' и' → logprob: -16.538042068481445
    6. '        ' → logprob: -16.788042068481445
    7. ',' → logprob: -16.788042068481445
    8. '       ' → logprob: -17.538042068481445
    9. '   ' → logprob: -17.538042068481445
    10. '	and' → logprob: -17.538042068481445

Token 305: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0052377874962985516
    2. 'y' → logprob: -5.255237579345703
    3. '<|end|>' → logprob: -12.630237579345703
    4. ' ' → logprob: -15.380237579345703
    5. '	y' → logprob: -16.255237579345703
    6. ' ' → logprob: -16.630237579345703
    7. ' yg' → logprob: -16.755237579345703
    8. '‘y' → logprob: -16.755237579345703
    9. ' ys' → logprob: -17.255237579345703
    10. ',y' → logprob: -17.255237579345703

Token 306: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.020580431446433067
    2. '==' → logprob: -3.895580530166626
    3. '<|end|>' → logprob: -10.270580291748047
    4. ')==' → logprob: -13.270580291748047
    5. ')' → logprob: -14.520580291748047
    6. ' ==
' → logprob: -14.645580291748047
    7. ' ' → logprob: -15.270580291748047
    8. '<|end|>' → logprob: -15.520580291748047
    9. ' =' → logprob: -15.770580291748047
    10. ' ' → logprob: -16.145580291748047

Token 307: ' yg' (ID: 74175)
  Prédit: 'yg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yg' → logprob: -5.836499985889532e-05
    2. ' yg' → logprob: -9.7500581741333
    3. 'ysg' → logprob: -17.250059127807617
    4. 'ygy' → logprob: -18.875059127807617
    5. 'og' → logprob: -20.250059127807617
    6. 'y' → logprob: -20.250059127807617
    7. 'YG' → logprob: -20.500059127807617
    8. ' ' → logprob: -20.500059127807617
    9. ' ' → logprob: -20.625059127807617
    10. 'ygon' → logprob: -20.750059127807617

Token 308: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13629989326000214
    2. ' and' → logprob: -2.5112998485565186
    3. ':
' → logprob: -3.1362998485565186
    4. 'and' → logprob: -5.886300086975098
    5. ':return' → logprob: -11.136300086975098
    6. ':
' → logprob: -12.636300086975098
    7. '           ' → logprob: -12.636300086975098
    8. ' :' → logprob: -12.886300086975098
    9. '<|end|>' → logprob: -13.136300086975098
    10. ':

' → logprob: -13.136300086975098

Token 309: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013184542767703533
    2. '
' → logprob: -7.251318454742432
    3. '           ' → logprob: -8.001317977905273
    4. '\n' → logprob: -9.876317977905273
    5. '                
' → logprob: -9.876317977905273
    6. ' found' → logprob: -10.376317977905273
    7. '                   ' → logprob: -11.251317977905273
    8. ' if' → logprob: -11.501317977905273
    9. ' Found' → logprob: -11.626317977905273
    10. ' print' → logprob: -11.751317977905273

Token 310: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.34049373865127563
    2. '               ' → logprob: -2.090493679046631
    3. '
' → logprob: -2.215493679046631
    4. ' found' → logprob: -2.965493679046631
    5. 'print' → logprob: -6.090493679046631
    6. '           ' → logprob: -6.840493679046631
    7. 'Found' → logprob: -7.965493679046631
    8. '	found' → logprob: -8.590494155883789
    9. '                   ' → logprob: -8.840494155883789
    10. '```' → logprob: -9.090494155883789

Token 311: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16024503111839294
    2. ' =' → logprob: -1.9102450609207153
    3. '=True' → logprob: -10.785244941711426
    4. ' ' → logprob: -16.660245895385742
    5. 's' → logprob: -17.785245895385742
    6. '=true' → logprob: -17.910245895385742
    7. '=False' → logprob: -18.535245895385742
    8. '＝' → logprob: -18.660245895385742
    9. '   ' → logprob: -19.035245895385742
    10. '=
' → logprob: -19.410245895385742

Token 312: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.2014133334159851
    2. ' True' → logprob: -1.7014133930206299
    3. '(True' → logprob: -19.201414108276367
    4. '=True' → logprob: -19.701414108276367
    5. 'true' → logprob: -22.326414108276367
    6. ' Tru' → logprob: -22.576414108276367
    7. 'Tr' → logprob: -22.826414108276367
    8. 'TRUE' → logprob: -23.826414108276367
    9. '.True' → logprob: -23.951414108276367
    10. '1' → logprob: -24.451414108276367

Token 313: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00022892709239386022
    2. '           ' → logprob: -8.875228881835938
    3. '                ' → logprob: -10.750228881835938
    4. '                   ' → logprob: -10.875228881835938
    5. '<|end|>' → logprob: -11.500228881835938
    6. '			' → logprob: -11.750228881835938
    7. '              ' → logprob: -11.875228881835938
    8. '
' → logprob: -12.250228881835938
    9. '       ' → logprob: -12.375228881835938
    10. '                
' → logprob: -12.500228881835938

Token 314: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.024604277219623e-05
    2. '           ' → logprob: -10.750040054321289
    3. '			' → logprob: -12.250040054321289
    4. '                ' → logprob: -12.375040054321289
    5. '              ' → logprob: -12.375040054321289
    6. '                   ' → logprob: -13.125040054321289
    7. '       ' → logprob: -13.875040054321289
    8. '             ' → logprob: -14.250040054321289
    9. '	           ' → logprob: -14.625040054321289
    10. '                
' → logprob: -15.125040054321289

Token 315: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26694202423095703
    2. 'break' (adapté à ' break') → logprob: -1.516942024230957
    3. ' break' → logprob: -4.516942024230957
    4. '           ' → logprob: -5.766942024230957
    5. '			' → logprob: -7.516942024230957
    6. '	break' → logprob: -8.516942024230957
    7. '		' → logprob: -10.766942024230957
    8. '
' → logprob: -10.891942024230957
    9. '	           ' → logprob: -10.891942024230957
    10. 'print' → logprob: -12.016942024230957

Token 316: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11603210866451263
    2. '           ' → logprob: -2.241032123565674
    3. '            
' → logprob: -5.991032123565674
    4. '    
' → logprob: -8.241031646728516
    5. '
' → logprob: -8.741031646728516
    6. ' 
' → logprob: -9.866031646728516
    7. '  
' → logprob: -9.991031646728516
    8. '       ' → logprob: -10.366031646728516
    9. '\n' → logprob: -10.366031646728516
    10. '        
' → logprob: -10.491031646728516

Token 317: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20748379826545715
    2. '
' → logprob: -1.7074837684631348
    3. '            
' → logprob: -5.832483768463135
    4. '       ' → logprob: -6.707483768463135
    5. ' 
' → logprob: -7.582483768463135
    6. '   ' → logprob: -7.707483768463135
    7. '    
' → logprob: -8.332484245300293
    8. '```' → logprob: -8.582484245300293
    9. '        
' → logprob: -9.582484245300293
    10. '
' → logprob: -9.707484245300293

Token 318: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.26116079092025757
    2. 'for' (adapté à ' for') → logprob: -2.1361608505249023
    3. '
' → logprob: -2.5111608505249023
    4. '           ' → logprob: -4.386160850524902
    5. ' directions' → logprob: -4.386160850524902
    6. 'dire' → logprob: -6.011160850524902
    7. '            
' → logprob: -6.136160850524902
    8. '       ' → logprob: -7.511160850524902
    9. '
' → logprob: -9.386160850524902
    10. 'dirs' → logprob: -9.386160850524902

Token 319: ' nx' (ID: 50118)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.10580024123191833
    2. 'nx' → logprob: -2.605800151824951
    3. ' dx' → logprob: -3.855800151824951
    4. ' nx' → logprob: -5.230800151824951
    5. '(nx' → logprob: -10.60580062866211
    6. '_dx' → logprob: -11.73080062866211
    7. '(dx' → logprob: -12.10580062866211
    8. '```' → logprob: -12.73080062866211
    9. 'tx' → logprob: -13.85580062866211
    10. '   ' → logprob: -14.35580062866211

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09392072260379791
    2. ' in' → logprob: -2.4689207077026367
    3. ' ,' → logprob: -6.093920707702637
    4. 'dx' → logprob: -7.218920707702637
    5. '<|end|>' → logprob: -7.468920707702637
    6. 'x' → logprob: -7.593920707702637
    7. ',x' → logprob: -7.718920707702637
    8. '(nx' → logprob: -9.218920707702637
    9. ',n' → logprob: -9.343920707702637
    10. '_,' → logprob: -10.093920707702637

Token 321: ' ny' (ID: 4423)
  Prédit: ' ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.365607351064682
    2. 'ny' → logprob: -1.2406073808670044
    3. 'y' → logprob: -4.115607261657715
    4. 'x' → logprob: -7.615607261657715
    5. ' y' → logprob: -9.490607261657715
    6. ',' → logprob: -9.990607261657715
    7. 'dy' → logprob: -11.115607261657715
    8. ' (' → logprob: -11.240607261657715
    9. ' dy' → logprob: -11.615607261657715
    10. ' x' → logprob: -11.615607261657715

Token 322: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2260500192642212
    2. 'in' → logprob: -1.6010500192642212
    3. ',' → logprob: -7.476049900054932
    4. ' ,' → logprob: -10.72605037689209
    5. ' ' → logprob: -11.22605037689209
    6. ')' → logprob: -11.47605037689209
    7. 'In' → logprob: -12.10105037689209
    8. '	in' → logprob: -12.72605037689209
    9. '<|end|>' → logprob: -12.72605037689209
    10. 'n' → logprob: -13.35105037689209

Token 323: ' ((' (ID: 3536)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.003611355321481824
    2. '((' → logprob: -5.7536115646362305
    3. ' [(' → logprob: -7.8786115646362305
    4. '[
' → logprob: -10.25361156463623
    5. '[((' → logprob: -11.62861156463623
    6. ' ((' → logprob: -12.12861156463623
    7. '[' → logprob: -12.50361156463623
    8. '([(' → logprob: -14.12861156463623
    9. '(x' → logprob: -15.00361156463623
    10. '[x' → logprob: -15.50361156463623

Token 324: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.27099974633893e-05
    2. ' x' → logprob: -11.500012397766113
    3. ')x' → logprob: -13.750012397766113
    4. '(x' → logprob: -14.250012397766113
    5. '1' → logprob: -15.250012397766113
    6. '0' → logprob: -15.250012397766113
    7. ',x' → logprob: -15.875012397766113
    8. ',' → logprob: -16.00001335144043
    9. ')' → logprob: -17.50001335144043
    10. '
' → logprob: -17.75001335144043

Token 325: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.238037109375
    2. '-' → logprob: -1.613037109375
    3. ' +' → logprob: -4.738037109375
    4. ' -' → logprob: -5.613037109375
    5. ',' → logprob: -9.113037109375
    6. '   ' → logprob: -11.113037109375
    7. '1' → logprob: -12.488037109375
    8. ' ' → logprob: -12.738037109375
    9. '+,' → logprob: -12.988037109375
    10. ' ,' → logprob: -13.363037109375

Token 326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007518553175032139
    2. '0' → logprob: -7.375751972198486
    3. '-' → logprob: -9.250751495361328
    4. ' ' → logprob: -10.875751495361328
    5. ',' → logprob: -12.500751495361328
    6. '   ' → logprob: -12.875751495361328
    7. ' -' → logprob: -14.000751495361328
    8. ')' → logprob: -14.188251495361328
    9. '```' → logprob: -14.688251495361328
    10. 'dx' → logprob: -15.000751495361328

Token 327: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.448370838072151e-05
    2. ' ,' → logprob: -9.750094413757324
    3. ',y' → logprob: -10.250094413757324
    4. ',n' → logprob: -15.250094413757324
    5. ',x' → logprob: -15.875094413757324
    6. '<|end|>' → logprob: -16.12509536743164
    7. ',
' → logprob: -16.62509536743164
    8. '),' → logprob: -16.62509536743164
    9. '```' → logprob: -17.00009536743164
    10. ',),' → logprob: -17.75009536743164

Token 328: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.04389404132962227
    2. '),(' → logprob: -3.168894052505493
    3. ' ),' → logprob: -7.418893814086914
    4. '),
' → logprob: -8.168893814086914
    5. ',' → logprob: -12.168893814086914
    6. '),

' → logprob: -13.168893814086914
    7. ')' → logprob: -13.543893814086914
    8. '(x' → logprob: -14.168893814086914
    9. ' ),
' → logprob: -14.918893814086914
    10. ',),' → logprob: -15.043893814086914

Token 329: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.578184497309849e-05
    2. ' x' → logprob: -9.375085830688477
    3. ' ' → logprob: -14.875085830688477
    4. '   ' → logprob: -15.500085830688477
    5. '(x' → logprob: -15.750085830688477
    6. ')x' → logprob: -16.500085830688477
    7. ',' → logprob: -17.000085830688477
    8. '	x' → logprob: -17.125085830688477
    9. '0' → logprob: -17.500085830688477
    10. '-' → logprob: -17.750085830688477

Token 330: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0025235803332179785
    2. ',y' → logprob: -6.002523422241211
    3. ',' → logprob: -10.502523422241211
    4. ',x' → logprob: -11.502523422241211
    5. '+' → logprob: -12.252523422241211
    6. ' -' → logprob: -12.502523422241211
    7. ' ' → logprob: -14.752523422241211
    8. ',n' → logprob: -15.377523422241211
    9. '−' → logprob: -15.377523422241211
    10. '1' → logprob: -15.502523422241211

Token 331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12706775963306427
    2. 'y' → logprob: -2.127067804336548
    3. ' y' → logprob: -9.377067565917969
    4. ',y' → logprob: -10.377067565917969
    5. ',' → logprob: -11.377067565917969
    6. '0' → logprob: -11.627067565917969
    7. ' ' → logprob: -12.752067565917969
    8. 'x' → logprob: -16.00206756591797
    9. '```' → logprob: -16.00206756591797
    10. '+' → logprob: -16.37706756591797

Token 332: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.00016241880075540394
    2. ',' → logprob: -8.750162124633789
    3. ' ,' → logprob: -12.500162124633789
    4. 'y' → logprob: -15.375162124633789
    5. ',n' → logprob: -18.00016212463379
    6. ',x' → logprob: -19.00016212463379
    7. '),(' → logprob: -19.75016212463379
    8. ',user' → logprob: -20.37516212463379
    9. ',
' → logprob: -20.62516212463379
    10. ' y' → logprob: -20.75016212463379

Token 333: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0018036997644230723
    2. ',(' → logprob: -6.376803874969482
    3. '),' → logprob: -9.376803398132324
    4. ',y' → logprob: -11.501803398132324
    5. ',' → logprob: -12.251803398132324
    6. '),
' → logprob: -14.376803398132324
    7. ',n' → logprob: -14.501803398132324
    8. ' ),' → logprob: -14.876803398132324
    9. '(y' → logprob: -15.626803398132324
    10. '(x' → logprob: -16.25180435180664

Token 334: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001242772996192798
    2. ' x' → logprob: -9.000123977661133
    3. '(x' → logprob: -14.875123977661133
    4. ')x' → logprob: -15.625123977661133
    5. ',' → logprob: -16.375123977661133
    6. '	x' → logprob: -17.250123977661133
    7. ',x' → logprob: -17.375123977661133
    8. ' ' → logprob: -17.625123977661133
    9. '   ' → logprob: -17.875123977661133
    10. '0' → logprob: -18.000123977661133

Token 335: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.00357833388261497
    2. '+' → logprob: -5.878578186035156
    3. ',' → logprob: -7.378578186035156
    4. ',n' → logprob: -9.128578186035156
    5. ',x' → logprob: -10.378578186035156
    6. ' ,' → logprob: -12.253578186035156
    7. ',(' → logprob: -13.628578186035156
    8. '+y' → logprob: -14.753578186035156
    9. '),(' → logprob: -14.753578186035156
    10. '+,' → logprob: -15.128578186035156

Token 336: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001584850688232109
    2. '-' → logprob: -8.750158309936523
    3. '1' → logprob: -18.000158309936523
    4. ' +' → logprob: -18.000158309936523
    5. '+
' → logprob: -18.125158309936523
    6. '+[' → logprob: -22.125158309936523
    7. '+)' → logprob: -22.250158309936523
    8. '+-' → logprob: -22.625158309936523
    9. '＋' → logprob: -23.000158309936523
    10. '+n' → logprob: -23.250158309936523

Token 337: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9504606825648807e-05
    2. '-' → logprob: -10.875019073486328
    3. ' ' → logprob: -15.125019073486328
    4. '+' → logprob: -15.500019073486328
    5. '   ' → logprob: -18.750019073486328
    6. ' -' → logprob: -19.375019073486328
    7. '```' → logprob: -19.500019073486328
    8. ')' → logprob: -20.000019073486328
    9. '
' → logprob: -20.125019073486328
    10. '  ' → logprob: -21.812519073486328

Token 338: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.00023500648967456073
    2. '),' → logprob: -8.375234603881836
    3. '))' → logprob: -13.500234603881836
    4. ',(' → logprob: -13.625234603881836
    5. ')' → logprob: -14.250234603881836
    6. ')(' → logprob: -15.000234603881836
    7. '):(' → logprob: -15.000234603881836
    8. ' ),' → logprob: -15.625234603881836
    9. '),
' → logprob: -16.125234603881836
    10. ',' → logprob: -16.250234603881836

Token 339: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00031520487391389906
    2. ' y' → logprob: -8.12531566619873
    3. 'x' → logprob: -11.00031566619873
    4. ')y' → logprob: -14.50031566619873
    5. '(y' → logprob: -14.62531566619873
    6. ' ' → logprob: -15.00031566619873
    7. ',y' → logprob: -15.37531566619873
    8. '   ' → logprob: -15.50031566619873
    9. ')' → logprob: -15.75031566619873
    10. ',' → logprob: -15.87531566619873

Token 340: ',y' (ID: 16103)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.080963092041202e-06
    2. ' -' → logprob: -12.500004768371582
    3. '1' → logprob: -13.750004768371582
    4. '-
' → logprob: -16.1250057220459
    5. '−' → logprob: -16.6250057220459
    6. '```' → logprob: -18.0000057220459
    7. '+' → logprob: -18.2500057220459
    8. ',y' → logprob: -18.5000057220459
    9. 'y' → logprob: -18.8750057220459
    10. ',' → logprob: -18.8750057220459

Token 341: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.066919301403686e-05
    2. '+' → logprob: -9.375090599060059
    3. ' -' → logprob: -12.250090599060059
    4. '))' → logprob: -15.125090599060059
    5. ')))' → logprob: -16.250091552734375
    6. '−' → logprob: -16.375091552734375
    7. ')' → logprob: -17.000091552734375
    8. '1' → logprob: -17.062591552734375
    9. '))(' → logprob: -17.250091552734375
    10. '),(' → logprob: -17.250091552734375

Token 342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -13.00000286102295
    3. '-' → logprob: -14.12500286102295
    4. '```' → logprob: -16.375003814697266
    5. '+' → logprob: -17.000003814697266
    6. ')' → logprob: -17.062503814697266
    7. '<|end|>' → logprob: -17.750003814697266
    8. '   ' → logprob: -17.875003814697266
    9. '
' → logprob: -18.250003814697266
    10. '))' → logprob: -18.312503814697266

Token 343: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7154989838600159
    2. ')):' → logprob: -0.7154989838600159
    3. ')):
' → logprob: -4.090498924255371
    4. '):
' → logprob: -5.340498924255371
    5. '))' → logprob: -7.715498924255371
    6. ')' → logprob: -9.715498924255371
    7. ')):
' → logprob: -10.090498924255371
    8. ' ):' → logprob: -11.340498924255371
    9. '>):' → logprob: -11.840498924255371
    10. '):

' → logprob: -12.715498924255371

Token 344: '               ' (ID: 506)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5226255059242249
    2. '<|end|>' → logprob: -1.39762544631958
    3. '           ' → logprob: -2.14762544631958
    4. '               ' → logprob: -4.52262544631958
    5. ' if' → logprob: -4.89762544631958
    6. ' 
' → logprob: -5.02262544631958
    7. '            ' → logprob: -5.14762544631958
    8. '        ' → logprob: -5.77262544631958
    9. '            
' → logprob: -6.02262544631958
    10. '       ' → logprob: -6.27262544631958

Token 345: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.785102367401123
    2. 'if' (adapté à ' if') → logprob: -1.285102367401123
    3. '0' → logprob: -2.160102367401123
    4. '                ' → logprob: -2.910102367401123
    5. ' ' → logprob: -3.160102367401123
    6. '<|end|>' → logprob: -3.910102367401123
    7. '               ' → logprob: -4.035102367401123
    8. ' (' → logprob: -4.535102367401123
    9. '                
' → logprob: -6.660102367401123
    10. ' 
' → logprob: -6.785102367401123

Token 346: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031857939902693033
    2. ' ' → logprob: -5.753185749053955
    3. '   ' → logprob: -12.503186225891113
    4. 'nx' → logprob: -13.628186225891113
    5. ' not' → logprob: -13.878186225891113
    6. 'not' → logprob: -14.003186225891113
    7. '(nx' → logprob: -14.628186225891113
    8. ' nx' → logprob: -15.503186225891113
    9. '1' → logprob: -16.003185272216797
    10. '  ' → logprob: -16.128185272216797

Token 347: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.375004768371582
    3. 'not' → logprob: -15.625004768371582
    4. 'nx' → logprob: -15.750004768371582
    5. '1' → logprob: -17.250003814697266
    6. '-' → logprob: -18.000003814697266
    7. '(nx' → logprob: -18.125003814697266
    8. '(' → logprob: -18.375003814697266
    9. '   ' → logprob: -18.500003814697266
    10. ' not' → logprob: -19.062503814697266

Token 348: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.25193965435028076
    2. '<=' → logprob: -1.5019396543502808
    3. '0' → logprob: -11.62693977355957
    4. '<' → logprob: -14.00193977355957
    5. ' ' → logprob: -15.50193977355957
    6. ')<=' → logprob: -16.25193977355957
    7. '1' → logprob: -16.50193977355957
    8. ' <' → logprob: -16.62693977355957
    9. '```' → logprob: -16.62693977355957
    10. ')' → logprob: -16.87693977355957

Token 349: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.003229756373912096
    2. ' nx' → logprob: -5.75322961807251
    3. 'ny' → logprob: -10.128230094909668
    4. '(nx' → logprob: -11.378230094909668
    5. 'n' → logprob: -15.503230094909668
    6. ' ny' → logprob: -16.12822914123535
    7. '```' → logprob: -16.12822914123535
    8. '   ' → logprob: -16.62822914123535
    9. '=' → logprob: -16.62822914123535
    10. '
' → logprob: -17.62822914123535

Token 350: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0032011198345571756
    2. ' <=' → logprob: -6.003201007843018
    3. '<' → logprob: -7.253201007843018
    4. 'and' → logprob: -11.628201484680176
    5. '<n' → logprob: -12.628201484680176
    6. ' and' → logprob: -13.128201484680176
    7. 'x' → logprob: -14.128201484680176
    8. 'w' → logprob: -14.628201484680176
    9. '≤' → logprob: -14.628201484680176
    10. 'nx' → logprob: -15.503201484680176

Token 351: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0001234428636962548
    2. ' w' → logprob: -9.000123023986816
    3. '	w' → logprob: -18.625123977661133
    4. '   ' → logprob: -19.375123977661133
    5. '_w' → logprob: -22.000123977661133
    6. ' ' → logprob: -22.250123977661133
    7. 'width' → logprob: -23.125123977661133
    8. '[w' → logprob: -23.500123977661133
    9. ''w' → logprob: -23.750123977661133
    10. '>w' → logprob: -24.000123977661133

Token 352: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03805044665932655
    2. 'and' → logprob: -3.288050413131714
    3. '               ' → logprob: -11.913050651550293
    4. ',' → logprob: -13.663050651550293
    5. '                ' → logprob: -14.538050651550293
    6. '                   ' → logprob: -15.288050651550293
    7. '           ' → logprob: -15.663050651550293
    8. ' ' → logprob: -15.913050651550293
    9. ')' → logprob: -16.163049697875977
    10. '	and' → logprob: -17.538049697875977

Token 353: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014462932012975216
    2. ' ' → logprob: -4.264462947845459
    3. '0' → logprob: -8.1394624710083
    4. '               ' → logprob: -12.6394624710083
    5. '   ' → logprob: -13.1394624710083
    6. '                   ' → logprob: -14.1394624710083
    7. '                ' → logprob: -14.3894624710083
    8. '  ' → logprob: -15.2644624710083
    9. '    ' → logprob: -15.6394624710083
    10. '                 ' → logprob: -16.014463424682617

Token 354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022523177904076874
    2. '0' → logprob: -8.625225067138672
    3. ' ' → logprob: -10.000225067138672
    4. '   ' → logprob: -15.750225067138672
    5. '  ' → logprob: -17.875225067138672
    6. '
' → logprob: -18.625225067138672
    7. '    ' → logprob: -19.000225067138672
    8. '```' → logprob: -19.000225067138672
    9. '               ' → logprob: -19.125225067138672
    10. '(' → logprob: -19.375225067138672

Token 355: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.12692883610725403
    2. ' <=' → logprob: -2.1269288063049316
    3. '   ' → logprob: -15.50192928314209
    4. '+' → logprob: -15.62692928314209
    5. ' ' → logprob: -16.251928329467773
    6. '```' → logprob: -16.626928329467773
    7. '≤' → logprob: -16.876928329467773
    8. '0' → logprob: -17.126928329467773
    9. '               ' → logprob: -17.126928329467773
    10. '           ' → logprob: -17.251928329467773

Token 356: ' ny' (ID: 4423)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.016320450231432915
    2. ' h' → logprob: -4.14132022857666
    3. ' ny' → logprob: -8.76632022857666
    4. 'ny' → logprob: -9.01632022857666
    5. 'nh' → logprob: -13.01632022857666
    6. 'nx' → logprob: -13.51632022857666
    7. '	h' → logprob: -14.01632022857666
    8. ' ' → logprob: -14.14132022857666
    9. 'n' → logprob: -14.26632022857666
    10. 'y' → logprob: -15.14132022857666

Token 357: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.25193724036216736
    2. '<=' → logprob: -1.5019372701644897
    3. 'w' → logprob: -12.751936912536621
    4. '<|end|>' → logprob: -13.251936912536621
    5. ' ' → logprob: -14.251936912536621
    6. ']<=' → logprob: -14.376936912536621
    7. ')<=' → logprob: -14.501936912536621
    8. 'h' → logprob: -14.751936912536621
    9. ' ≤' → logprob: -14.751936912536621
    10. '<|end|>' → logprob: -15.876936912536621

Token 358: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0015023599844425917
    2. ' h' → logprob: -6.501502513885498
    3. 'w' → logprob: -17.751502990722656
    4. '	h' → logprob: -18.626502990722656
    5. ' ' → logprob: -19.126502990722656
    6. '_h' → logprob: -20.001502990722656
    7. '[h' → logprob: -20.501502990722656
    8. '<|end|>' → logprob: -20.501502990722656
    9. '(h' → logprob: -21.126502990722656
    10. '   ' → logprob: -21.501502990722656

Token 359: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014268108643591404
    2. 'and' → logprob: -4.264267921447754
    3. '               ' → logprob: -9.764267921447754
    4. '                   ' → logprob: -10.514267921447754
    5. ',' → logprob: -11.514267921447754
    6. '                       ' → logprob: -12.514267921447754
    7. '                ' → logprob: -13.139267921447754
    8. '           ' → logprob: -13.514267921447754
    9. ' ' → logprob: -14.639267921447754
    10. '                    ' → logprob: -14.639267921447754

Token 360: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6025444865226746
    2. '               ' → logprob: -1.4775445461273193
    3. ' and' → logprob: -1.7275445461273193
    4. ' if' → logprob: -3.2275445461273193
    5. '                       ' → logprob: -6.47754430770874
    6. '                ' → logprob: -6.47754430770874
    7. '                    
' → logprob: -6.85254430770874
    8. '           ' → logprob: -7.72754430770874
    9. '<|end|>' → logprob: -7.85254430770874
    10. '                
' → logprob: -7.97754430770874

Token 361: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16284184157848358
    2. ' if' → logprob: -1.912841796875
    3. '                       ' → logprob: -7.287841796875
    4. ' and' → logprob: -7.412841796875
    5. 'and' → logprob: -7.662841796875
    6. ' not' → logprob: -8.037841796875
    7. 'not' → logprob: -8.037841796875
    8. '                   ' → logprob: -8.662841796875
    9. '   ' → logprob: -10.787841796875
    10. '                           ' → logprob: -12.287841796875

Token 362: ' not' (ID: 625)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.5253357291221619
    2. 'not' → logprob: -0.9003357291221619
    3. ' not' → logprob: -6.275335788726807
    4. ' board' → logprob: -8.400335311889648
    5. '(not' → logprob: -10.025335311889648
    6. '   ' → logprob: -10.400335311889648
    7. '(board' → logprob: -11.150335311889648
    8. 'visited' → logprob: -12.775335311889648
    9. '	board' → logprob: -13.525335311889648
    10. 'bord' → logprob: -13.775335311889648

Token 363: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.12692831456661224
    2. ' visited' → logprob: -2.1269283294677734
    3. 'Visited' → logprob: -16.126928329467773
    4. '
' → logprob: -16.751928329467773
    5. '   ' → logprob: -17.251928329467773
    6. ' ' → logprob: -17.251928329467773
    7. 'vis' → logprob: -17.751928329467773
    8. 'visit' → logprob: -17.876928329467773
    9. ' ' → logprob: -18.626928329467773
    10. 'visible' → logprob: -19.501928329467773

Token 364: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -15.625
    3. '[n' → logprob: -17.5
    4. '[y' → logprob: -18.375
    5. 'ny' → logprob: -18.625
    6. '[now' → logprob: -19.75
    7. '   ' → logprob: -20.125
    8. '       ' → logprob: -20.125
    9. '[next' → logprob: -20.25
    10. '][' → logprob: -20.25

Token 365: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.01419841032475233
    2. '[' → logprob: -4.264198303222656
    3. ' ny' → logprob: -10.389198303222656
    4. '][' → logprob: -13.639198303222656
    5. '   ' → logprob: -14.639198303222656
    6. 'nyi' → logprob: -14.639198303222656
    7. 'n' → logprob: -15.014198303222656
    8. 'ni' → logprob: -15.139198303222656
    9. '```' → logprob: -15.264198303222656
    10. '[n' → logprob: -16.014198303222656

Token 366: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1828630119562149
    2. '[n' → logprob: -1.8078629970550537
    3. '[' → logprob: -5.807863235473633
    4. ' ][' → logprob: -10.057863235473633
    5. ']' → logprob: -10.682863235473633
    6. '(nx' → logprob: -11.432863235473633
    7. '"][' → logprob: -11.807863235473633
    8. '   ' → logprob: -12.182863235473633
    9. ''][' → logprob: -12.307863235473633
    10. ' [' → logprob: -12.557863235473633

Token 367: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -2.3915141355246305e-05
    2. ' nx' → logprob: -11.00002384185791
    3. '(nx' → logprob: -12.00002384185791
    4. 'n' → logprob: -14.75002384185791
    5. '[n' → logprob: -16.000024795532227
    6. 'ns' → logprob: -16.125024795532227
    7. 'ny' → logprob: -16.500024795532227
    8. 'nz' → logprob: -16.625024795532227
    9. 'x' → logprob: -17.000024795532227
    10. '[' → logprob: -17.750024795532227

Token 368: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.058198194950819016
    2. 'and' → logprob: -3.3081982135772705
    3. ']' → logprob: -4.058197975158691
    4. ')' → logprob: -5.933197975158691
    5. ' ]' → logprob: -12.308197975158691
    6. ' )' → logprob: -12.558197975158691
    7. '           ' → logprob: -12.683197975158691
    8. '               ' → logprob: -12.683197975158691
    9. ' ' → logprob: -12.808197975158691
    10. '                   ' → logprob: -12.933197975158691

Token 369: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6931578516960144
    2. 'and' → logprob: -0.6931578516960144
    3. '               ' → logprob: -12.818158149719238
    4. '                   ' → logprob: -12.943158149719238
    5. '           ' → logprob: -13.068158149719238
    6. '                       ' → logprob: -13.318158149719238
    7. '   ' → logprob: -14.443158149719238
    8. ' ' → logprob: -14.818158149719238
    9. '	and' → logprob: -15.318158149719238
    10. '       ' → logprob: -15.568158149719238

Token 370: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.018150994554162025
    2. ' board' → logprob: -4.018150806427002
    3. '	board' → logprob: -14.76815128326416
    4. '(board' → logprob: -15.14315128326416
    5. '                   ' → logprob: -15.51815128326416
    6. '   ' → logprob: -16.143150329589844
    7. '                       ' → logprob: -17.268150329589844
    8. '                           ' → logprob: -17.893150329589844
    9. ' ' → logprob: -18.018150329589844
    10. '.board' → logprob: -18.268150329589844

Token 371: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.583550642360933e-05
    2. '[y' → logprob: -10.250036239624023
    3. ' [' → logprob: -15.375036239624023
    4. 'ny' → logprob: -16.125036239624023
    5. 'y' → logprob: -17.375036239624023
    6. '```' → logprob: -17.500036239624023
    7. '[now' → logprob: -17.750036239624023
    8. '[n' → logprob: -17.750036239624023
    9. '][' → logprob: -18.375036239624023
    10. '=' → logprob: -18.500036239624023

Token 372: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.002552592661231756
    2. 'y' → logprob: -6.002552509307861
    3. ' ny' → logprob: -10.12755298614502
    4. '[' → logprob: -10.62755298614502
    5. 'yn' → logprob: -12.12755298614502
    6. '[y' → logprob: -12.12755298614502
    7. 'n' → logprob: -14.75255298614502
    8. ' y' → logprob: -15.00255298614502
    9. 'nyi' → logprob: -15.25255298614502
    10. 'yny' → logprob: -15.37755298614502

Token 373: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2256179302930832
    2. '[' → logprob: -1.6006178855895996
    3. ']' → logprob: -8.975618362426758
    4. '[n' → logprob: -10.600618362426758
    5. ' ][' → logprob: -10.850618362426758
    6. '```' → logprob: -12.225618362426758
    7. '[y' → logprob: -12.475618362426758
    8. ')[' → logprob: -12.475618362426758
    9. '"][' → logprob: -12.475618362426758
    10. ''][' → logprob: -12.600618362426758

Token 374: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0001434690784662962
    2. ' nx' → logprob: -9.125143051147461
    3. '(nx' → logprob: -10.625143051147461
    4. 'x' → logprob: -12.000143051147461
    5. '[n' → logprob: -12.750143051147461
    6. 'n' → logprob: -14.375143051147461
    7. '][' → logprob: -15.125143051147461
    8. '[' → logprob: -16.00014305114746
    9. 'Nx' → logprob: -16.00014305114746
    10. '```' → logprob: -17.37514305114746

Token 375: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.038200657814741135
    2. ']==' → logprob: -3.288200616836548
    3. ' ]' → logprob: -9.163200378417969
    4. '==' → logprob: -10.163200378417969
    5. ' ==' → logprob: -11.413200378417969
    6. '[' → logprob: -12.788200378417969
    7. ')==' → logprob: -14.538200378417969
    8. ')' → logprob: -14.663200378417969
    9. '']==' → logprob: -15.538200378417969
    10. '][' → logprob: -15.663200378417969

Token 376: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16110101342201233
    2. ' ==' → logprob: -1.91110098361969
    3. ']==' → logprob: -7.1611008644104
    4. ')==' → logprob: -9.411101341247559
    5. '[' → logprob: -12.036101341247559
    6. '==
' → logprob: -12.786101341247559
    7. '()==' → logprob: -13.286101341247559
    8. ']' → logprob: -13.286101341247559
    9. '=' → logprob: -13.411101341247559
    10. '===' → logprob: -13.661101341247559

Token 377: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0010366219794377685
    2. ' start' → logprob: -6.876036643981934
    3. 'board' → logprob: -12.626036643981934
    4. 'star' → logprob: -15.626036643981934
    5. '[start' → logprob: -16.251035690307617
    6. ' ' → logprob: -16.501035690307617
    7. '   ' → logprob: -16.501035690307617
    8. '	start' → logprob: -19.001035690307617
    9. ' board' → logprob: -19.001035690307617
    10. 'end' → logprob: -19.376035690307617

Token 378: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -1.5048530030981055e-06
    2. 'color' → logprob: -13.750001907348633
    3. '_' → logprob: -15.625001907348633
    4. '_c' → logprob: -16.500001907348633
    5. '_token' → logprob: -17.000001907348633
    6. '_code' → logprob: -17.375001907348633
    7. 'olor' → logprob: -17.750001907348633
    8. '_COLOR' → logprob: -18.000001907348633
    9. '_col' → logprob: -18.000001907348633
    10. ' _' → logprob: -18.125001907348633

Token 379: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5293846130371094
    2. ':' → logprob: -0.9043846130371094
    3. '                       ' → logprob: -5.529384613037109
    4. '):
' → logprob: -6.654384613037109
    5. '                   ' → logprob: -7.904384613037109
    6. '):' → logprob: -8.27938461303711
    7. '                           ' → logprob: -9.40438461303711
    8. ' and' → logprob: -9.52938461303711
    9. '<|end|>' → logprob: -10.15438461303711
    10. '       ' → logprob: -10.52938461303711

Token 380: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.068853959441185
    2. '                   ' → logprob: -3.6938538551330566
    3. '                           ' → logprob: -4.068853855133057
    4. '                        
' → logprob: -4.818853855133057
    5. ' visited' → logprob: -4.818853855133057
    6. '                               ' → logprob: -6.318853855133057
    7. ' 
' → logprob: -6.318853855133057
    8. 'visited' → logprob: -6.943853855133057
    9. '                    
' → logprob: -7.443853855133057
    10. '<|end|>' → logprob: -7.443853855133057

Token 381: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.2732621133327484
    2. ' visited' → logprob: -1.5232621431350708
    3. '                           ' → logprob: -4.648262023925781
    4. ' q' → logprob: -5.023262023925781
    5. '                               ' → logprob: -6.148262023925781
    6. '                       ' → logprob: -6.398262023925781
    7. 'q' → logprob: -7.148262023925781
    8. '                        
' → logprob: -9.523262023925781
    9. '                            ' → logprob: -9.773262023925781
    10. '                        ' → logprob: -10.273262023925781

Token 382: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. ' [' → logprob: -14.375000953674316
    3. '```' → logprob: -15.125000953674316
    4. '   ' → logprob: -16.125001907348633
    5. '       ' → logprob: -16.500001907348633
    6. '           ' → logprob: -17.000001907348633
    7. '                   ' → logprob: -17.625001907348633
    8. '               ' → logprob: -18.000001907348633
    9. '
' → logprob: -18.750001907348633
    10. '    ' → logprob: -18.812501907348633

Token 383: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.004674572963267565
    2. '[' → logprob: -5.379674434661865
    3. ' ny' → logprob: -9.879674911499023
    4. '   ' → logprob: -13.254674911499023
    5. '       ' → logprob: -15.879674911499023
    6. 'ni' → logprob: -16.004674911499023
    7. '           ' → logprob: -16.004674911499023
    8. 'yn' → logprob: -16.129674911499023
    9. '               ' → logprob: -16.254674911499023
    10. 'n' → logprob: -16.504674911499023

Token 384: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10029897093772888
    2. '[' → logprob: -2.3502988815307617
    3. ' ][' → logprob: -9.725298881530762
    4. '   ' → logprob: -11.725298881530762
    5. ']' → logprob: -11.725298881530762
    6. ' [' → logprob: -12.725298881530762
    7. '       ' → logprob: -12.850298881530762
    8. ''][' → logprob: -13.725298881530762
    9. '         ' → logprob: -13.725298881530762
    10. '     ' → logprob: -13.725298881530762

Token 385: 'nx' (ID: 45103)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00012415809032972902
    2. 'nx' → logprob: -9.125123977661133
    3. ' ny' → logprob: -11.125123977661133
    4. '[' → logprob: -15.125123977661133
    5. 'True' → logprob: -16.375123977661133
    6. 'ni' → logprob: -16.750123977661133
    7. 'n' → logprob: -17.250123977661133
    8. 'y' → logprob: -17.625123977661133
    9. 'nyi' → logprob: -17.625123977661133
    10. '   ' → logprob: -18.250123977661133

Token 386: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.047532569617033005
    2. '=' → logprob: -3.297532558441162
    3. ']=' → logprob: -5.297532558441162
    4. ' =' → logprob: -5.422532558441162
    5. '[' → logprob: -12.04753303527832
    6. ')' → logprob: -12.17253303527832
    7. ' ]' → logprob: -12.29753303527832
    8. '=True' → logprob: -12.29753303527832
    9. '                   ' → logprob: -13.42253303527832
    10. '           ' → logprob: -13.42253303527832

Token 387: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234121344983578
    2. ' =' → logprob: -5.255234241485596
    3. '=True' → logprob: -15.255233764648438
    4. ']=' → logprob: -17.755233764648438
    5. ']' → logprob: -18.130233764648438
    6. '[' → logprob: -18.880233764648438
    7. '.=' → logprob: -18.880233764648438
    8. '＝' → logprob: -20.005233764648438
    9. ')=' → logprob: -20.380233764648438
    10. ')' → logprob: -20.630233764648438

Token 388: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0004306692280806601
    2. ' True' → logprob: -7.750430583953857
    3. '(True' → logprob: -20.500431060791016
    4. '=True' → logprob: -21.625431060791016
    5. '.True' → logprob: -24.000431060791016
    6. 'true' → logprob: -24.375431060791016
    7. '   ' → logprob: -24.625431060791016
    8. 'False' → logprob: -25.250431060791016
    9. 'Tr' → logprob: -25.250431060791016
    10. '_true' → logprob: -25.500431060791016

Token 389: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0018021537689492106
    2. '
' → logprob: -7.25180196762085
    3. ',' → logprob: -8.126802444458008
    4. '					' → logprob: -8.376802444458008
    5. '                        
' → logprob: -8.876802444458008
    6. ',q' → logprob: -9.376802444458008
    7. 'q' → logprob: -9.626802444458008
    8. '               ' → logprob: -9.751802444458008
    9. ' q' → logprob: -10.001802444458008
    10. '<|end|>' → logprob: -10.251802444458008

Token 390: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.025448685511946678
    2. '                        
' → logprob: -4.400448799133301
    3. ',' → logprob: -5.400448799133301
    4. '
' → logprob: -5.775448799133301
    5. '<|end|>' → logprob: -5.900448799133301
    6. ' q' → logprob: -7.400448799133301
    7. '```' → logprob: -7.650448799133301
    8. ',q' → logprob: -8.1504487991333
    9. '                        ' → logprob: -8.9004487991333
    10. ' 
' → logprob: -9.0254487991333

Token 391: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -5.836499985889532e-05
    2. ' q' → logprob: -9.7500581741333
    3. '                       ' → logprob: -17.875059127807617
    4. '	q' → logprob: -17.875059127807617
    5. '
' → logprob: -18.000059127807617
    6. '                           ' → logprob: -18.375059127807617
    7. '.q' → logprob: -20.000059127807617
    8. '(q' → logprob: -20.000059127807617
    9. 'qx' → logprob: -20.250059127807617
    10. '```' → logprob: -20.250059127807617

Token 392: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.3782830137643032e-05
    2. '.app' → logprob: -12.00001335144043
    3. '.' → logprob: -12.12501335144043
    4. '.p' → logprob: -13.87501335144043
    5. '.extend' → logprob: -14.50001335144043
    6. '.add' → logprob: -15.50001335144043
    7. '.enqueue' → logprob: -15.50001335144043
    8. 'append' → logprob: -16.12501335144043
    9. '.put' → logprob: -16.75001335144043
    10. '.Append' → logprob: -17.37501335144043

Token 393: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.00000286102295
    3. '(((' → logprob: -15.00000286102295
    4. ' ((' → logprob: -17.250001907348633
    5. '(
' → logprob: -19.250001907348633
    6. ' ' → logprob: -21.375001907348633
    7. '```' → logprob: -21.500001907348633
    8. ')((' → logprob: -21.625001907348633
    9. '(({' → logprob: -21.750001907348633
    10. '(n' → logprob: -21.750001907348633

Token 394: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0009174126898869872
    2. '(nx' → logprob: -7.000917434692383
    3. ' nx' → logprob: -12.125917434692383
    4. 'n' → logprob: -15.500917434692383
    5. '(n' → logprob: -15.875917434692383
    6. '   ' → logprob: -16.500917434692383
    7. '```' → logprob: -17.500917434692383
    8. '(' → logprob: -17.625917434692383
    9. '
' → logprob: -19.000917434692383
    10. 'ny' → logprob: -19.500917434692383

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2842308680992573e-05
    2. ' ,' → logprob: -11.125022888183594
    3. '<|end|>' → logprob: -12.750022888183594
    4. ',
' → logprob: -12.875022888183594
    5. ',y' → logprob: -13.375022888183594
    6. ',n' → logprob: -14.500022888183594
    7. '‌,' → logprob: -15.250022888183594
    8. '),' → logprob: -15.375022888183594
    9. ',

' → logprob: -17.250022888183594
    10. '```' → logprob: -17.500022888183594

Token 396: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00023083435371518135
    2. ' ny' → logprob: -8.37523078918457
    3. 'nyi' → logprob: -16.00023078918457
    4. '
' → logprob: -16.75023078918457
    5. 'nyt' → logprob: -17.50023078918457
    6. 'Ny' → logprob: -18.12523078918457
    7. 'n' → logprob: -18.37523078918457
    8. ''ny' → logprob: -18.87523078918457
    9. 'nym' → logprob: -18.87523078918457
    10. '   ' → logprob: -18.87523078918457

Token 397: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00015705463010817766
    2. '))
' → logprob: -8.875157356262207
    3. ')' → logprob: -11.000157356262207
    4. ')))' → logprob: -15.250157356262207
    5. '                       ' → logprob: -17.00015640258789
    6. ' ))' → logprob: -17.00015640258789
    7. '       ' → logprob: -17.50015640258789
    8. '))

' → logprob: -17.75015640258789
    9. ')
' → logprob: -18.12515640258789
    10. '()))' → logprob: -18.37515640258789

Token 398: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07907694578170776
    2. '       ' → logprob: -2.5790770053863525
    3. '```' → logprob: -9.329076766967773
    4. 'print' → logprob: -9.954076766967773
    5. '
' → logprob: -11.079076766967773
    6. 'if' → logprob: -11.329076766967773
    7. '<|end|>' → logprob: -11.454076766967773
    8. '    
' → logprob: -12.579076766967773
    9. '           ' → logprob: -12.954076766967773
    10. '        
' → logprob: -13.079076766967773

Token 399: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021057340200059116
    2. 'if' → logprob: -9.375210762023926
    3. 'print' (adapté à ' print') → logprob: -9.750210762023926
    4. ' if' → logprob: -10.000210762023926
    5. '   ' → logprob: -11.625210762023926
    6. '<|end|>' → logprob: -11.750210762023926
    7. '```' → logprob: -13.000210762023926
    8. '        
' → logprob: -13.500210762023926
    9. '
' → logprob: -14.750210762023926
    10. ' print' → logprob: -15.000210762023926

Token 400: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0019757419358938932
    2. '(' → logprob: -6.2519755363464355
    3. '(("' → logprob: -10.501976013183594
    4. '('' → logprob: -11.751976013183594
    5. '("("' → logprob: -12.251976013183594
    6. '((' → logprob: -13.376976013183594
    7. '(""' → logprob: -13.501976013183594
    8. '(found' → logprob: -13.501976013183594
    9. '(True' → logprob: -13.626976013183594
    10. '()' → logprob: -15.001976013183594

Token 401: 'OK' (ID: 5175)
  Prédit: 'OK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OK' → logprob: -4.060365608893335e-05
    2. '"' → logprob: -11.125041007995605
    3. 'NG' → logprob: -11.375041007995605
    4. 'ok' → logprob: -11.875041007995605
    5. ' OK' → logprob: -12.625041007995605
    6. 'AG' → logprob: -14.375041007995605
    7. 'Ok' → logprob: -14.500041007995605
    8. 'O' → logprob: -14.750041007995605
    9. 'PG' → logprob: -15.125041007995605
    10. '.OK' → logprob: -15.375041007995605

Token 402: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03808384761214256
    2. '")' → logprob: -3.288083791732788
    3. '")
' → logprob: -11.038084030151367
    4. ')"' → logprob: -11.163084030151367
    5. ')' → logprob: -12.163084030151367
    6. 'if' → logprob: -12.538084030151367
    7. '```' → logprob: -13.163084030151367
    8. '()' → logprob: -14.913084030151367
    9. ' if' → logprob: -15.038084030151367
    10. '()"' → logprob: -15.413084030151367

Token 403: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16531182825565338
    2. ' if' → logprob: -1.9153118133544922
    3. 'if' → logprob: -5.290311813354492
    4. '")' → logprob: -11.165311813354492
    5. '"' → logprob: -11.290311813354492
    6. '()' → logprob: -12.290311813354492
    7. ' ' → logprob: -14.290311813354492
    8. ')"' → logprob: -14.540311813354492
    9. '	if' → logprob: -14.790311813354492
    10. '   ' → logprob: -14.915311813354492

Token 404: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.3868734836578369
    2. 'found' → logprob: -1.136873483657837
    3. '(found' → logprob: -13.261873245239258
    4. '	found' → logprob: -14.386873245239258
    5. 'Found' → logprob: -15.886873245239258
    6. ' ' → logprob: -17.886873245239258
    7. ' ' → logprob: -18.636873245239258
    8. '   ' → logprob: -18.761873245239258
    9. 'find' → logprob: -19.761873245239258
    10. '_found' → logprob: -19.886873245239258

Token 405: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.575946569442749
    2. ' else' → logprob: -0.825946569442749
    3. ')' → logprob: -12.575946807861328
    4. '	else' → logprob: -13.200946807861328
    5. ' ' → logprob: -14.450946807861328
    6. '
' → logprob: -14.700946807861328
    7. ' )' → logprob: -15.200946807861328
    8. '<|end|>' → logprob: -15.825946807861328
    9. '```' → logprob: -16.200946807861328
    10. '   ' → logprob: -16.325946807861328

Token 406: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014169861562550068
    2. ' "' → logprob: -4.264169692993164
    3. ' ' → logprob: -13.264169692993164
    4. ''' → logprob: -13.514169692993164
    5. '("' → logprob: -13.639169692993164
    6. '   ' → logprob: -13.889169692993164
    7. '	' → logprob: -15.139169692993164
    8. ')' → logprob: -15.514169692993164
    9. '
' → logprob: -15.889169692993164
    10. '"No' → logprob: -16.139169692993164

Token 407: 'NG' (ID: 19236)
  Prédit: 'NG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NG' → logprob: -2.7968066206085496e-05
    2. '"' → logprob: -10.500027656555176
    3. ' NG' → logprob: -15.500027656555176
    4. 'ng' → logprob: -16.125028610229492
    5. 'NO' → logprob: -17.750028610229492
    6. 'N' → logprob: -20.125028610229492
    7. '"N' → logprob: -20.875028610229492
    8. '"No' → logprob: -21.500028610229492
    9. 'NK' → logprob: -21.750028610229492
    10. 'NA' → logprob: -22.000028610229492

Token 408: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00013333676906768233
    2. ')' → logprob: -9.500133514404297
    3. ')")' → logprob: -9.750133514404297
    4. '")
' → logprob: -16.750133514404297
    5. '}")' → logprob: -17.500133514404297
    6. '')' → logprob: -18.000133514404297
    7. '")}' → logprob: -18.625133514404297
    8. '");' → logprob: -19.625133514404297
    9. '"))' → logprob: -19.875133514404297
    10. '”)' → logprob: -20.125133514404297

Token 409: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 410: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 408
Tokens correctement prédits (1ère position, stricte): 218
Tokens correctement prédits (1ère position, avec adaptation): 231
Tokens correctement prédits (top 10): 370
Précision stricte (1ère position): 53.43%
Précision adaptée (1ère position): 56.62%
Précision (top 10): 90.69%
================================================================================
