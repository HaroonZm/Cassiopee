================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

def roll(dice, direction):
    top, south, east = dice
    north = 7 - south
    west = 7 - east
    bottom = 7 - top
    if direction == 'N':
        # Roll north:
        # top becomes south
        # south becomes bottom
        # bottom becomes north
        # north becomes top
        return (south, bottom, east)
    elif direction == 'S':
        # Roll south
        # top becomes north
        # north becomes bottom
        # bottom becomes south
        # south becomes top
        return (north, top, east)
    elif direction == 'E':
        # Roll east
        # top becomes west
        # west becomes bottom
        # bottom becomes east
        # east becomes top
        return (west, south, top)
    elif direction == 'W':
        # Roll west
        # top becomes east
        # east becomes bottom
        # bottom becomes west
        # west becomes top
        return (east, south, bottom)

def main():
    input_lines = sys.stdin.read().splitlines()
    i = 0
    while True:
        if i >= len(input_lines):
            break
        line = input_lines[i].strip()
        if not line:
            i += 1
            continue
        h, w = map(int, line.split())
        if h == 0 and w == 0:
            break
        i += 1
        grid = []
        for _ in range(h):
            row = list(map(int, input_lines[i].split()))
            i += 1
            grid.append(row)
        sr, sc = map(int, input_lines[i].split())
        i += 1
        gr, gc = map(int, input_lines[i].split())
        i += 1

        # dice state: (top, south, east)
        # Initially top=1, south=2, east=3 as in problem statement
        start_state = (sr, sc, 1, 2, 3)

        # distance dictionary: key = (r, c, top, south, east), value = cost
        dist = {}

        # priority queue: (cost, r, c, top, south, east)
        pq = []
        heapq.heappush(pq, (0, sr, sc, 1, 2, 3))
        dist[(sr, sc, 1, 2, 3)] = 0

        directions = [('N', -1, 0), ('S', 1, 0), ('E', 0, 1), ('W', 0, -1)]

        while pq:
            cost, r, c, top, south, east = heapq.heappop(pq)
            if (r, c) == (gr, gc):
                print(cost)
                break
            if dist.get((r, c, top, south, east), 10**9) < cost:
                continue
            for d, dr, dc in directions:
                nr, nc = r + dr, c + dc
                if 0 <= nr < h and 0 <= nc < w:
                    new_top, new_south, new_east = roll((top, south, east), d)
                    bottom = 7 - new_top
                    penalty = grid[nr][nc] * bottom
                    new_cost = cost + penalty
                    state = (nr, nc, new_top, new_south, new_east)
                    if dist.get(state, 10**9) > new_cost:
                        dist[state] = new_cost
                        heapq.heappush(pq, (new_cost, nr, nc, new_top, new_south, new_east))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.580929347255733e-05
    2. '#' → logprob: -11.625016212463379
    3. '.' → logprob: -12.750016212463379
    4. '_' → logprob: -14.125016212463379
    5. '=' → logprob: -14.500016212463379
    6. 'ify' → logprob: -14.750016212463379
    7. ')' → logprob: -15.125016212463379
    8. 'i' → logprob: -15.250016212463379
    9. 'u' → logprob: -15.500016212463379
    10. 'p' → logprob: -15.750016212463379

Token 6: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8219172954559326
    2. '

' → logprob: -1.9469172954559326
    3. '\n' → logprob: -1.9469172954559326
    4. '\' → logprob: -2.9469172954559326
    5. 'import' → logprob: -2.9469172954559326
    6. '.' → logprob: -3.0719172954559326
    7. '<|end|>' → logprob: -3.0719172954559326
    8. '' → logprob: -3.6969172954559326
    9. '```' → logprob: -3.8219172954559326
    10. '<|end|>' → logprob: -4.571917533874512

Token 7: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9195020794868469
    2. 'def' → logprob: -1.2945020198822021
    3. '\' → logprob: -2.419502019882202
    4. '
' → logprob: -3.169502019882202
    5. 'from' → logprob: -3.294502019882202
    6. 'import' → logprob: -3.419502019882202
    7. '' → logprob: -3.419502019882202
    8. 'class' → logprob: -3.669502019882202
    9. '```' → logprob: -3.794502019882202
    10. '\n' → logprob: -3.794502019882202

Token 8: ' roll' (ID: 8465)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0006970656104385853
    2. ' find' → logprob: -8.750697135925293
    3. ' a' → logprob: -8.875697135925293
    4. ' space' → logprob: -9.875697135925293
    5. ' shortest' → logprob: -10.000697135925293
    6. ' heap' → logprob: -10.125697135925293
    7. ' merge' → logprob: -10.500697135925293
    8. '_' → logprob: -10.875697135925293
    9. ' process' → logprob: -10.875697135925293
    10. ' dfs' → logprob: -11.000697135925293

Token 9: '(d' (ID: 2572)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7505044937133789
    2. '(' → logprob: -1.375504493713379
    3. 'er' → logprob: -2.000504493713379
    4. 'ing' → logprob: -2.500504493713379
    5. '():' → logprob: -3.875504493713379
    6. 's' → logprob: -4.750504493713379
    7. 'out' → logprob: -5.375504493713379
    8. '_out' → logprob: -5.375504493713379
    9. '(s' → logprob: -5.500504493713379
    10. '()' → logprob: -5.500504493713379

Token 10: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.17397041618824005
    2. ')' → logprob: -1.9239704608917236
    3. '6' → logprob: -5.0489702224731445
    4. 'ices' → logprob: -5.7989702224731445
    5. 'ie' → logprob: -6.7989702224731445
    6. '=' → logprob: -7.1739702224731445
    7. ',' → logprob: -7.6739702224731445
    8. '):' → logprob: -7.9239702224731445
    9. 'dice' → logprob: -8.298970222473145
    10. 'i' → logprob: -8.548970222473145

Token 11: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.044086478650569916
    2. ')' → logprob: -3.294086456298828
    3. ',' → logprob: -5.419086456298828
    4. ':' → logprob: -7.169086456298828
    5. 's' → logprob: -8.044086456298828
    6. '):
' → logprob: -8.669086456298828
    7. '_' → logprob: -9.669086456298828
    8. '[' → logprob: -9.919086456298828
    9. ' ):' → logprob: -9.919086456298828
    10. '.' → logprob: -10.544086456298828

Token 12: ' direction' (ID: 9262)
  Prédit: ' sides'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sides' → logprob: -0.02535477839410305
    2. ' n' → logprob: -4.775354862213135
    3. ' faces' → logprob: -4.775354862213135
    4. ' num' → logprob: -5.775354862213135
    5. ' rolls' → logprob: -6.400354862213135
    6. ' times' → logprob: -7.400354862213135
    7. ' k' → logprob: -7.525354862213135
    8. ' target' → logprob: -7.650354862213135
    9. ' ' → logprob: -8.400354385375977
    10. 's' → logprob: -9.025354385375977

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002993155037984252
    2. ')' → logprob: -5.877993106842041
    3. ',' → logprob: -9.3779935836792
    4. '=' → logprob: -10.0029935836792
    5. ':' → logprob: -10.3779935836792
    6. '):
' → logprob: -11.5029935836792
    7. 's' → logprob: -12.1279935836792
    8. ' ):' → logprob: -12.5029935836792
    9. '_' → logprob: -13.2529935836792
    10. '   ' → logprob: -13.6279935836792

Token 14: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09444236010313034
    2. '   ' → logprob: -2.844442367553711
    3. '):' → logprob: -3.719442367553711
    4. ' :' → logprob: -5.594442367553711
    5. ',' → logprob: -6.844442367553711
    6. ' ' → logprob: -7.469442367553711
    7. ')' → logprob: -7.594442367553711
    8. '.' → logprob: -7.969442367553711
    9. '    ' → logprob: -8.344442367553711
    10. ''' → logprob: -8.469442367553711

Token 15: ' top' (ID: 2344)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035272266715765
    2. ':' → logprob: -3.6602723598480225
    3. ' ' → logprob: -6.160272121429443
    4. '```' → logprob: -6.160272121429443
    5. ' :' → logprob: -7.035272121429443
    6. '    ' → logprob: -7.535272121429443
    7. ' if' → logprob: -7.660272121429443
    8. '[' → logprob: -7.660272121429443
    9. '(' → logprob: -7.785272121429443
    10. '.' → logprob: -8.035272598266602

Token 16: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28710392117500305
    2. '=' → logprob: -1.6621038913726807
    3. ',' → logprob: -2.9121038913726807
    4. ')' → logprob: -6.03710412979126
    5. '.' → logprob: -6.78710412979126
    6. ' ' → logprob: -6.91210412979126
    7. '[' → logprob: -8.537103652954102
    8. '_' → logprob: -8.787103652954102
    9. ']' → logprob: -9.537103652954102
    10. ' ==' → logprob: -9.537103652954102

Token 17: ' south' (ID: 15019)
  Prédit: ' bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.23125556111335754
    2. 'bottom' → logprob: -2.106255531311035
    3. ' front' → logprob: -3.231255531311035
    4. ' north' → logprob: -3.856255531311035
    5. 'north' → logprob: -4.481255531311035
    6. 'front' → logprob: -4.606255531311035
    7. ' south' → logprob: -6.731255531311035
    8. 'bot' → logprob: -7.856255531311035
    9. 'south' → logprob: -8.106255531311035
    10. ' left' → logprob: -8.606255531311035

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04341418668627739
    2. ' =' → logprob: -3.4184141159057617
    3. '=' → logprob: -4.668414115905762
    4. ' ,' → logprob: -8.043414115905762
    5. '```' → logprob: -12.793414115905762
    6. ')' → logprob: -13.168414115905762
    7. ' ' → logprob: -13.918414115905762
    8. '<|end|>' → logprob: -14.168414115905762
    9. '=None' → logprob: -14.293414115905762
    10. 'e' → logprob: -14.605914115905762

Token 19: ' east' (ID: 23557)
  Prédit: ' north'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' north' → logprob: -0.6168825030326843
    2. 'north' → logprob: -0.9918825030326843
    3. ' east' → logprob: -2.741882562637329
    4. 'east' → logprob: -4.11688232421875
    5. ' west' → logprob: -5.86688232421875
    6. ' bottom' → logprob: -6.11688232421875
    7. 'west' → logprob: -6.11688232421875
    8. 'bottom' → logprob: -7.11688232421875
    9. 'n' → logprob: -8.24188232421875
    10. ' ' → logprob: -8.99188232421875

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4253388047218323
    2. ',' → logprob: -1.1753387451171875
    3. '=' → logprob: -3.3003387451171875
    4. ' ,' → logprob: -7.1753387451171875
    5. ' ' → logprob: -9.300338745117188
    6. ')' → logprob: -13.175338745117188
    7. '  ' → logprob: -13.300338745117188
    8. '```' → logprob: -13.300338745117188
    9. '   ' → logprob: -13.800338745117188
    10. '1' → logprob: -14.987838745117188

Token 21: ' dice' (ID: 22078)
  Prédit: ' dice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dice' → logprob: -0.11452727019786835
    2. 'dice' → logprob: -2.2395272254943848
    3. '0' → logprob: -6.739527225494385
    4. '1' → logprob: -8.489527702331543
    5. ' dices' → logprob: -8.989527702331543
    6. ' ' → logprob: -9.239527702331543
    7. 'd' → logprob: -10.114527702331543
    8. '   ' → logprob: -10.989527702331543
    9. '3' → logprob: -12.114527702331543
    10. ' (' → logprob: -13.114527702331543

Token 22: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05855599045753479
    2. '<|end|>' → logprob: -3.058556079864502
    3. '[:]' → logprob: -5.433556079864502
    4. '.' → logprob: -6.558556079864502
    5. '<|end|>' → logprob: -6.683556079864502
    6. '[:' → logprob: -6.808556079864502
    7. '```' → logprob: -8.558555603027344
    8. 'def' → logprob: -8.808555603027344
    9. '[]' → logprob: -8.933555603027344
    10. '.split' → logprob: -9.058555603027344

Token 23: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9485371112823486
    2. '   ' → logprob: -1.6985371112823486
    3. ' =' → logprob: -1.8235371112823486
    4. ',' → logprob: -2.4485371112823486
    5. '    
' → logprob: -3.6985371112823486
    6. '
' → logprob: -3.8235371112823486
    7. '[
' → logprob: -3.9485371112823486
    8. '=' → logprob: -4.1985368728637695
    9. ',
' → logprob: -4.4485368728637695
    10. ' 
' → logprob: -4.5735368728637695

Token 24: ' north' (ID: 16173)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7742902636528015
    2. '   ' → logprob: -0.8992902636528015
    3. 'if' → logprob: -2.8992903232574463
    4. ' new' → logprob: -2.8992903232574463
    5. ' return' → logprob: -4.899290084838867
    6. 'new' → logprob: -5.399290084838867
    7. 'return' → logprob: -5.649290084838867
    8. ' ' → logprob: -6.149290084838867
    9. '  ' → logprob: -7.149290084838867
    10. ',' → logprob: -7.399290084838867

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07088503986597061
    2. ',' → logprob: -3.070884943008423
    3. '=' → logprob: -3.820884943008423
    4. ' ,' → logprob: -8.945884704589844
    5. ' ' → logprob: -12.195884704589844
    6. '   ' → logprob: -12.195884704589844
    7. ')' → logprob: -15.195884704589844
    8. '  ' → logprob: -15.320884704589844
    9. '```' → logprob: -15.445884704589844
    10. '    ' → logprob: -15.633384704589844

Token 26: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.016975920647382736
    2. ' ' → logprob: -4.1419758796691895
    3. '   ' → logprob: -7.6419758796691895
    4. 'op' → logprob: -8.891976356506348
    5. '3' → logprob: -9.391976356506348
    6. ' opposite' → logprob: -9.891976356506348
    7. '0' → logprob: -10.641976356506348
    8. 'south' → logprob: -10.704476356506348
    9. '```' → logprob: -10.829476356506348
    10. ' opp' → logprob: -11.016976356506348

Token 27: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.5396121740341187
    2. 'south' → logprob: -0.9146121740341187
    3. ' south' → logprob: -4.914612293243408
    4. 'north' → logprob: -5.539612293243408
    5. 'op' → logprob: -6.664612293243408
    6. 'top' → logprob: -6.914612293243408
    7. ' ' → logprob: -7.039612293243408
    8. '6' → logprob: -7.789612293243408
    9. 'east' → logprob: -8.03961181640625
    10. '   ' → logprob: -8.28961181640625

Token 28: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6932502388954163
    2. ' -' → logprob: -0.6932502388954163
    3. '-s' → logprob: -9.94325065612793
    4. '-top' → logprob: -10.06825065612793
    5. 'south' → logprob: -12.44325065612793
    6. ' south' → logprob: -12.69325065612793
    7. ' ' → logprob: -12.81825065612793
    8. '-t' → logprob: -14.19325065612793
    9. '-n' → logprob: -14.44325065612793
    10. 'top' → logprob: -15.44325065612793

Token 29: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.008101969957351685
    2. ' south' → logprob: -4.883101940155029
    3. 's' → logprob: -7.758101940155029
    4. 'sou' → logprob: -10.133102416992188
    5. ' ' → logprob: -11.508102416992188
    6. ' ' → logprob: -12.758102416992188
    7. '   ' → logprob: -13.258102416992188
    8. 'north' → logprob: -13.258102416992188
    9. 'side' → logprob: -13.383102416992188
    10. '  ' → logprob: -13.383102416992188

Token 30: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3111443519592285
    2. '   ' → logprob: -2.4361443519592285
    3. '<|end|>' → logprob: -2.6861443519592285
    4. ' if' → logprob: -3.8111443519592285
    5. 'new' → logprob: -4.6861443519592285
    6. '    
' → logprob: -4.6861443519592285
    7. ',' → logprob: -4.9361443519592285
    8. ' ' → logprob: -5.0611443519592285
    9. ' 
' → logprob: -5.0611443519592285
    10. 'if' → logprob: -5.1861443519592285

Token 31: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01814712956547737
    2. '<|end|>' → logprob: -5.268146991729736
    3. '    
' → logprob: -5.768146991729736
    4. ' 
' → logprob: -6.393146991729736
    5. '   ' → logprob: -6.518146991729736
    6. ' if' → logprob: -6.768146991729736
    7. ',' → logprob: -7.018146991729736
    8. 'new' → logprob: -7.268146991729736
    9. '
' → logprob: -7.643146991729736
    10. ' ' → logprob: -7.768146991729736

Token 32: ' west' (ID: 14078)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7076073884963989
    2. '   ' → logprob: -1.332607388496399
    3. 'if' → logprob: -1.957607388496399
    4. ',' → logprob: -3.5826072692871094
    5. ' west' → logprob: -4.707607269287109
    6. 'west' (adapté à ' west') → logprob: -4.707607269287109
    7. ' east' → logprob: -4.957607269287109
    8. 'new' → logprob: -5.082607269287109
    9. 'south' → logprob: -5.082607269287109
    10. ' new' → logprob: -5.207607269287109

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04369527846574783
    2. '=' → logprob: -3.1686952114105225
    3. ',' → logprob: -7.293695449829102
    4. ' ' → logprob: -11.793695449829102
    5. ' ,' → logprob: -11.793695449829102
    6. ')' → logprob: -15.293695449829102
    7. '＝' → logprob: -16.0436954498291
    8. '<|end|>' → logprob: -16.5436954498291
    9. ' =",' → logprob: -16.6061954498291
    10. '	' → logprob: -16.6061954498291

Token 34: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.10020763427019119
    2. ' ' → logprob: -2.350207567214966
    3. '   ' → logprob: -14.475207328796387
    4. '  ' → logprob: -15.537707328796387
    5. '14' → logprob: -16.912708282470703
    6. '<|end|>' → logprob: -17.162708282470703
    7. '۷' → logprob: -17.537708282470703
    8. '    ' → logprob: -17.600208282470703
    9. ' seven' → logprob: -17.725208282470703
    10. '6' → logprob: -17.787708282470703

Token 35: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.004078878089785576
    2. ' ' → logprob: -5.5040788650512695
    3. '14' → logprob: -16.254079818725586
    4. 'east' → logprob: -16.504079818725586
    5. '   ' → logprob: -16.754079818725586
    6. '6' → logprob: -16.879079818725586
    7. '17' → logprob: -17.379079818725586
    8. '  ' → logprob: -17.816579818725586
    9. '13' → logprob: -17.879079818725586
    10. '27' → logprob: -18.129079818725586

Token 36: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22549225389957428
    2. '-' → logprob: -1.600492238998413
    3. 'east' → logprob: -10.225492477416992
    4. '-east' → logprob: -10.850492477416992
    5. '-e' → logprob: -11.600492477416992
    6. 'west' → logprob: -12.350492477416992
    7. ' east' → logprob: -12.600492477416992
    8. ' ' → logprob: -12.725492477416992
    9. '<|end|>' → logprob: -13.975492477416992
    10. 'e' → logprob: -14.850492477416992

Token 37: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.030050603672862053
    2. ' east' → logprob: -3.53005051612854
    3. 'e' → logprob: -8.280050277709961
    4. ' ' → logprob: -10.905050277709961
    5. 'west' → logprob: -11.655050277709961
    6. 'ea' → logprob: -12.530050277709961
    7. '   ' → logprob: -13.155050277709961
    8. '  ' → logprob: -13.280050277709961
    9. '```' → logprob: -13.530050277709961
    10. ' e' → logprob: -13.592550277709961

Token 38: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5967084765434265
    2. '
' → logprob: -0.9717084765434265
    3. '    
' → logprob: -3.3467085361480713
    4. ' if' → logprob: -4.346708297729492
    5. 'if' → logprob: -4.721708297729492
    6. ' 
' → logprob: -5.721708297729492
    7. '  
' → logprob: -6.346708297729492
    8. ' ' → logprob: -6.471708297729492
    9. '
' → logprob: -6.471708297729492
    10. '

' → logprob: -7.221708297729492

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013871431583538651
    2. ' if' → logprob: -7.251387119293213
    3. 'if' → logprob: -7.876387119293213
    4. '    
' → logprob: -8.376387596130371
    5. '
' → logprob: -10.126387596130371
    6. '```' → logprob: -12.126387596130371
    7. '	if' → logprob: -12.251387596130371
    8. '   
' → logprob: -12.876387596130371
    9. ' 
' → logprob: -12.876387596130371
    10. '    ' → logprob: -12.876387596130371

Token 40: ' bottom' (ID: 8725)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09124074131250381
    2. 'if' → logprob: -2.966240644454956
    3. ' if' → logprob: -3.341240644454956
    4. 'new' → logprob: -9.091240882873535
    5. '    
' → logprob: -10.216240882873535
    6. '  ' → logprob: -10.216240882873535
    7. ' new' → logprob: -10.466240882873535
    8. '	if' → logprob: -10.841240882873535
    9. '    ' → logprob: -11.091240882873535
    10. ')' → logprob: -11.466240882873535

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0026389146223664284
    2. '=' → logprob: -6.002638816833496
    3. ',' → logprob: -8.752638816833496
    4. ' ,' → logprob: -12.877638816833496
    5. ' ' → logprob: -13.127638816833496
    6. '  ' → logprob: -15.252638816833496
    7. ')' → logprob: -16.002639770507812
    8. ' =
' → logprob: -16.627639770507812
    9. '<|end|>' → logprob: -16.877639770507812
    10. ' =)' → logprob: -17.002639770507812

Token 42: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0036013787612318993
    2. ' ' → logprob: -5.628601551055908
    3. '   ' → logprob: -14.37860107421875
    4. 'top' → logprob: -15.00360107421875
    5. '    ' → logprob: -15.50360107421875
    6. '  ' → logprob: -16.25360107421875
    7. ' top' → logprob: -16.37860107421875
    8. '21' → logprob: -17.19110107421875
    9. '```' → logprob: -17.25360107421875
    10. '(' → logprob: -17.62860107421875

Token 43: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00012558852904476225
    2. ' ' → logprob: -9.000125885009766
    3. 'top' → logprob: -13.250125885009766
    4. '   ' → logprob: -15.750125885009766
    5. ' top' → logprob: -16.625125885009766
    6. '    ' → logprob: -16.625125885009766
    7. '  ' → logprob: -17.500125885009766
    8. '```' → logprob: -17.625125885009766
    9. '(' → logprob: -18.000125885009766
    10. '0' → logprob: -18.187625885009766

Token 44: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2520751953125
    2. '-' → logprob: -1.5020751953125
    3. ' ' → logprob: -10.0020751953125
    4. ' top' → logprob: -10.1270751953125
    5. '-top' → logprob: -10.3770751953125
    6. 'top' → logprob: -10.7520751953125
    7. '[top' → logprob: -12.7520751953125
    8. '   ' → logprob: -14.3770751953125
    9. '  ' → logprob: -14.6270751953125
    10. ' minus' → logprob: -14.6270751953125

Token 45: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -1.9266199160483666e-05
    2. ' top' → logprob: -10.875019073486328
    3. ' ' → logprob: -16.250019073486328
    4. '   ' → logprob: -16.250019073486328
    5. '  ' → logprob: -16.625019073486328
    6. '(top' → logprob: -16.750019073486328
    7. '	top' → logprob: -17.125019073486328
    8. '[top' → logprob: -17.500019073486328
    9. '    ' → logprob: -19.125019073486328
    10. 't' → logprob: -19.250019073486328

Token 46: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07549458742141724
    2. '
' → logprob: -3.0754945278167725
    3. ' if' → logprob: -4.450494766235352
    4. '    
' → logprob: -4.825494766235352
    5. 'if' → logprob: -5.575494766235352
    6. ' 
' → logprob: -7.075494766235352
    7. '  
' → logprob: -7.325494766235352
    8. ' ' → logprob: -7.825494766235352
    9. '   
' → logprob: -8.450494766235352
    10. '  ' → logprob: -8.700494766235352

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14919710159301758
    2. '
' → logprob: -2.1491971015930176
    3. '    
' → logprob: -4.399197101593018
    4. ' if' → logprob: -5.399197101593018
    5. 'if' → logprob: -5.649197101593018
    6. '  
' → logprob: -7.524197101593018
    7. ' 
' → logprob: -7.649197101593018
    8. '   
' → logprob: -8.27419662475586
    9. '```' → logprob: -9.02419662475586
    10. ' ' → logprob: -9.52419662475586

Token 48: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4357036054134369
    2. ' if' → logprob: -1.3107036352157593
    3. 'if' (adapté à ' if') → logprob: -2.5607035160064697
    4. '    
' → logprob: -5.935703754425049
    5. '
' → logprob: -6.185703754425049
    6. ' new' → logprob: -7.435703754425049
    7. 'new' → logprob: -7.560703754425049
    8. '	if' → logprob: -9.31070327758789
    9. '```' → logprob: -9.43570327758789
    10. ' 
' → logprob: -9.81070327758789

Token 49: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.00022427814838010818
    2. 'direction' → logprob: -8.500224113464355
    3. ' ' → logprob: -11.250224113464355
    4. ' ' → logprob: -12.500224113464355
    5. '(direction' → logprob: -12.500224113464355
    6. ' direct' → logprob: -16.125225067138672
    7. ' dirección' → logprob: -16.875225067138672
    8. ' directions' → logprob: -17.250225067138672
    9. '.direction' → logprob: -17.625225067138672
    10. '方向' → logprob: -17.750225067138672

Token 50: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17988453805446625
    2. '==' → logprob: -1.8048845529556274
    3. '=='' → logprob: -9.554884910583496
    4. '=="' → logprob: -10.429884910583496
    5. ' ' → logprob: -11.679884910583496
    6. '[' → logprob: -12.054884910583496
    7. '=' → logprob: -12.429884910583496
    8. '===' → logprob: -12.429884910583496
    9. ' =='' → logprob: -12.679884910583496
    10. '  ' → logprob: -12.804884910583496

Token 51: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.23877590894699097
    2. ' '' → logprob: -2.2387759685516357
    3. ''n' → logprob: -2.8637759685516357
    4. '"' → logprob: -3.4887759685516357
    5. ''s' → logprob: -4.613775730133057
    6. ' "' → logprob: -5.738775730133057
    7. ''e' → logprob: -5.738775730133057
    8. ' ' → logprob: -7.613775730133057
    9. ''S' → logprob: -7.988775730133057
    10. ''N' → logprob: -8.488776206970215

Token 52: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6700642108917236
    2. 'N' → logprob: -1.9200642108917236
    3. 's' → logprob: -2.1700642108917236
    4. 'e' → logprob: -2.4200642108917236
    5. 'north' → logprob: -2.4200642108917236
    6. 'south' → logprob: -4.0450639724731445
    7. 'E' → logprob: -4.5450639724731445
    8. 'w' → logprob: -5.2950639724731445
    9. 'east' → logprob: -5.2950639724731445
    10. 'S' → logprob: -5.5450639724731445

Token 53: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.040024079382419586
    2. ''' → logprob: -3.4150240421295166
    3. 'orth' → logprob: -6.040024280548096
    4. '':
' → logprob: -6.290024280548096
    5. '':
' → logprob: -6.290024280548096
    6. ''):' → logprob: -9.165023803710938
    7. '':'' → logprob: -9.915023803710938
    8. ''):
' → logprob: -10.290023803710938
    9. ' '' → logprob: -10.790023803710938
    10. 'ORTH' → logprob: -11.540023803710938

Token 54: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.628108561038971
    2. ':
' → logprob: -1.8781085014343262
    3. ' top' → logprob: -2.378108501434326
    4. '   ' → logprob: -2.378108501434326
    5. '
' → logprob: -3.253108501434326
    6. ' new' → logprob: -3.628108501434326
    7. ' :
' → logprob: -4.128108501434326
    8. ',' → logprob: -4.628108501434326
    9. ' :' → logprob: -5.003108501434326
    10. ' 
' → logprob: -5.378108501434326

Token 55: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.26415854692459106
    2. 'return' → logprob: -1.8891584873199463
    3. '   ' → logprob: -2.7641584873199463
    4. ' top' → logprob: -5.264158725738525
    5. ' new' → logprob: -5.264158725738525
    6. ' south' → logprob: -6.139158725738525
    7. 'top' → logprob: -6.889158725738525
    8. 'south' → logprob: -7.139158725738525
    9. 'dice' → logprob: -7.389158725738525
    10. ' (' → logprob: -7.389158725738525

Token 56: ' Roll' (ID: 18548)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8317448496818542
    2. 'return' → logprob: -0.8317448496818542
    3. '   ' → logprob: -2.706744909286499
    4. 'top' → logprob: -3.581744909286499
    5. ' top' → logprob: -3.956744909286499
    6. ' south' → logprob: -4.95674467086792
    7. 'south' → logprob: -5.33174467086792
    8. ' new' → logprob: -7.20674467086792
    9. ' bottom' → logprob: -7.58174467086792
    10. 'dice' → logprob: -7.83174467086792

Token 57: ' north' (ID: 16173)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7276130318641663
    2. ' top' → logprob: -2.7276129722595215
    3. ' south' → logprob: -2.8526129722595215
    4. '   ' → logprob: -2.8526129722595215
    5. 'top' → logprob: -2.8526129722595215
    6. ',' → logprob: -2.9776129722595215
    7. 'dice' → logprob: -2.9776129722595215
    8. 'south' → logprob: -3.4776129722595215
    9. 'the' → logprob: -4.1026129722595215
    10. ' ' → logprob: -4.1026129722595215

Token 58: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9254468679428101
    2. ' =' → logprob: -1.30044686794281
    3. '   ' → logprob: -1.67544686794281
    4. ':' → logprob: -2.8004469871520996
    5. ',' → logprob: -3.0504469871520996
    6. 'return' → logprob: -3.9254469871520996
    7. ' return' → logprob: -4.8004469871521
    8. 'top' → logprob: -6.3004469871521
    9. '       ' → logprob: -7.0504469871521
    10. ':
' → logprob: -7.4254469871521

Token 59: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7771693468093872
    2. '   ' → logprob: -0.9021693468093872
    3. 'return' → logprob: -2.9021692276000977
    4. ' top' → logprob: -3.0271692276000977
    5. ' new' → logprob: -4.027169227600098
    6. 'top' → logprob: -4.902169227600098
    7. 'new' → logprob: -6.527169227600098
    8. ' south' → logprob: -7.402169227600098
    9. ' dice' → logprob: -7.652169227600098
    10. '       ' → logprob: -7.652169227600098

Token 60: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.693623960018158
    2. ' return' → logprob: -1.4436240196228027
    3. '   ' → logprob: -2.0686240196228027
    4. '(s' → logprob: -3.8186240196228027
    5. 'top' → logprob: -4.068624019622803
    6. 'south' → logprob: -4.068624019622803
    7. '(' → logprob: -4.318624019622803
    8. ' (' → logprob: -4.568624019622803
    9. '(top' → logprob: -4.568624019622803
    10. 'new' → logprob: -4.818624019622803

Token 61: ' top' (ID: 2344)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7928525805473328
    2. 'return' → logprob: -1.0428526401519775
    3. ' top' → logprob: -2.7928526401519775
    4. 'top' → logprob: -2.9178526401519775
    5. '   ' → logprob: -3.5428526401519775
    6. ' new' → logprob: -4.167852401733398
    7. ' south' → logprob: -4.542852401733398
    8. ' bottom' → logprob: -4.792852401733398
    9. 'new' → logprob: -5.417852401733398
    10. 'bottom' → logprob: -5.792852401733398

Token 62: ' becomes' (ID: 14081)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32206395268440247
    2. '=' → logprob: -1.57206392288208
    3. ',' → logprob: -2.69706392288208
    4. ' ,' → logprob: -8.322064399719238
    5. ' ' → logprob: -10.447064399719238
    6. '=

' → logprob: -11.197064399719238
    7. '   ' → logprob: -11.572064399719238
    8. ' =
' → logprob: -11.947064399719238
    9. '=
' → logprob: -13.009564399719238
    10. 'new' → logprob: -13.259564399719238

Token 63: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.20698235929012299
    2. ' south' → logprob: -1.7069823741912842
    3. 'north' → logprob: -5.956982135772705
    4. 's' → logprob: -6.081982135772705
    5. ' north' → logprob: -7.956982135772705
    6. '	s' → logprob: -9.831982612609863
    7. '   ' → logprob: -9.956982612609863
    8. ''s' → logprob: -9.956982612609863
    9. '`s' → logprob: -10.206982612609863
    10. '```' → logprob: -10.206982612609863

Token 64: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0282337237149477
    2. ',
' → logprob: -3.653233766555786
    3. ' ,' → logprob: -7.153233528137207
    4. '   ' → logprob: -7.528233528137207
    5. '       ' → logprob: -8.528233528137207
    6. '
' → logprob: -9.403233528137207
    7. ',
' → logprob: -9.903233528137207
    8. '=' → logprob: -10.403233528137207
    9. 'south' → logprob: -10.653233528137207
    10. 'new' → logprob: -10.778233528137207

Token 65: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02991744875907898
    2. ',
' → logprob: -3.9049174785614014
    3. '   ' → logprob: -5.404917240142822
    4. ' ,' → logprob: -7.154917240142822
    5. ',s' → logprob: -7.154917240142822
    6. 'south' → logprob: -7.154917240142822
    7. 's' → logprob: -7.529917240142822
    8. ' south' → logprob: -8.15491771697998
    9. '`,' → logprob: -8.15491771697998
    10. '       ' → logprob: -8.65491771697998

Token 66: ' #' (ID: 1069)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.6248910427093506
    2. ' south' → logprob: -1.4998910427093506
    3. ',' → logprob: -1.9998910427093506
    4. 'north' → logprob: -3.9998910427093506
    5. 's' → logprob: -4.12489128112793
    6. 'bottom' → logprob: -4.24989128112793
    7. '   ' → logprob: -4.37489128112793
    8. ' bottom' → logprob: -4.49989128112793
    9. ' north' → logprob: -5.49989128112793
    10. '       ' → logprob: -5.99989128112793

Token 67: ' south' (ID: 15019)
  Prédit: ' south'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' south' → logprob: -1.301845669746399
    2. ' bottom' → logprob: -1.926845669746399
    3. 'south' → logprob: -2.0518455505371094
    4. '       ' → logprob: -2.1768455505371094
    5. 'bottom' → logprob: -2.9268455505371094
    6. '   ' → logprob: -2.9268455505371094
    7. ' return' → logprob: -3.0518455505371094
    8. 'return' → logprob: -3.1768455505371094
    9. 'north' → logprob: -3.3018455505371094
    10. ' north' → logprob: -3.5518455505371094

Token 68: ' becomes' (ID: 14081)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14488033950328827
    2. ' =' → logprob: -2.3948802947998047
    3. ' becomes' → logprob: -3.5198802947998047
    4. ',' → logprob: -4.269880294799805
    5. ' ,' → logprob: -10.769880294799805
    6. ' become' → logprob: -11.019880294799805
    7. 'be' → logprob: -11.394880294799805
    8. '<|end|>' → logprob: -11.894880294799805
    9. ' became' → logprob: -12.019880294799805
    10. ' is' → logprob: -12.144880294799805

Token 69: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.033992018550634384
    2. ' bottom' → logprob: -3.408992052078247
    3. '7' → logprob: -8.408991813659668
    4. 'top' → logprob: -9.408991813659668
    5. '6' → logprob: -11.033991813659668
    6. 'bot' → logprob: -12.033991813659668
    7. ' ' → logprob: -12.283991813659668
    8. '```' → logprob: -12.283991813659668
    9. 'b' → logprob: -12.783991813659668
    10. ' top' → logprob: -13.783991813659668

Token 70: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6355371475219727
    2. ',' → logprob: -1.1355371475219727
    3. '\n' → logprob: -3.2605371475219727
    4. ',
' → logprob: -3.6355371475219727
    5. '   ' → logprob: -3.8855371475219727
    6. '       ' → logprob: -3.8855371475219727
    7. '
' → logprob: -4.010537147521973
    8. '    
' → logprob: -5.510537147521973
    9. '\' → logprob: -5.760537147521973
    10. '```' → logprob: -6.010537147521973

Token 71: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7180049419403076
    2. ',' → logprob: -1.4680049419403076
    3. '   ' → logprob: -2.5930049419403076
    4. ',
' → logprob: -3.0930049419403076
    5. '       ' → logprob: -3.0930049419403076
    6. '\n' → logprob: -3.8430049419403076
    7. ' top' → logprob: -3.8430049419403076
    8. 'top' → logprob: -4.093005180358887
    9. '
' → logprob: -4.343005180358887
    10. '    
' → logprob: -5.093005180358887

Token 72: ' #' (ID: 1069)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' top' → logprob: -1.1712732315063477
    2. '       ' → logprob: -1.2962732315063477
    3. 'top' → logprob: -1.4212732315063477
    4. ' bottom' → logprob: -2.9212732315063477
    5. 'bottom' → logprob: -3.1712732315063477
    6. '   ' → logprob: -3.1712732315063477
    7. ' south' → logprob: -5.046273231506348
    8. ',' → logprob: -5.296273231506348
    9. 'south' → logprob: -5.296273231506348
    10. '```' → logprob: -5.921273231506348

Token 73: ' bottom' (ID: 8725)
  Prédit: ' bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.7079935073852539
    2. 'bottom' → logprob: -1.332993507385254
    3. '       ' → logprob: -2.707993507385254
    4. 'top' → logprob: -2.957993507385254
    5. ' top' → logprob: -2.957993507385254
    6. '   ' → logprob: -3.957993507385254
    7. ' south' → logprob: -4.207993507385254
    8. ' east' → logprob: -4.582993507385254
    9. '```' → logprob: -5.082993507385254
    10. 'south' → logprob: -5.207993507385254

Token 74: ' becomes' (ID: 14081)
  Prédit: ' becomes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' becomes' → logprob: -0.22353440523147583
    2. '=' → logprob: -2.348534345626831
    3. ' =' → logprob: -2.348534345626831
    4. 'be' → logprob: -4.72353458404541
    5. ',' → logprob: -8.97353458404541
    6. ' be' → logprob: -9.72353458404541
    7. '    ' → logprob: -9.84853458404541
    8. ' become' → logprob: -9.97353458404541
    9. '        ' → logprob: -10.59853458404541
    10. ' ' → logprob: -10.72353458404541

Token 75: ' north' (ID: 16173)
  Prédit: 'north'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'north' → logprob: -0.0036574339028447866
    2. ' north' → logprob: -5.628657341003418
    3. '7' → logprob: -10.503657341003418
    4. '#' → logprob: -11.628657341003418
    5. 'n' → logprob: -12.003657341003418
    6. 'top' → logprob: -12.253657341003418
    7. '```' → logprob: -12.878657341003418
    8. '   ' → logprob: -13.253657341003418
    9. '`' → logprob: -13.378657341003418
    10. '6' → logprob: -14.378657341003418

Token 76: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.551227867603302
    2. ',' → logprob: -1.9262278079986572
    3. '   ' → logprob: -2.1762278079986572
    4. '
' → logprob: -2.4262278079986572
    5. '\n' → logprob: -4.551228046417236
    6. '
' → logprob: -4.551228046417236
    7. '        
' → logprob: -4.926228046417236
    8. ',
' → logprob: -5.051228046417236
    9. 'new' → logprob: -5.176228046417236
    10. 'dice' → logprob: -5.426228046417236

Token 77: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12288976460695267
    2. '\n' → logprob: -3.372889757156372
    3. '```' → logprob: -4.372889995574951
    4. '       ' → logprob: -4.497889995574951
    5. ',' → logprob: -4.622889995574951
    6. '
' → logprob: -5.122889995574951
    7. 'top' → logprob: -5.247889995574951
    8. '    
' → logprob: -5.372889995574951
    9. 'new' → logprob: -5.497889995574951
    10. ':' → logprob: -5.872889995574951

Token 78: ' #' (ID: 1069)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -1.1524611711502075
    2. 'south' → logprob: -1.1524611711502075
    3. '   ' → logprob: -2.277461051940918
    4. ' top' → logprob: -2.902461051940918
    5. ' south' → logprob: -2.902461051940918
    6. 'bottom' → logprob: -3.152461051940918
    7. 'return' → logprob: -3.652461051940918
    8. 'dice' → logprob: -3.652461051940918
    9. ' bottom' → logprob: -4.777461051940918
    10. ' return' → logprob: -4.902461051940918

Token 79: ' north' (ID: 16173)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.6572552919387817
    2. 'north' → logprob: -1.1572552919387817
    3. 'south' → logprob: -2.657255172729492
    4. '   ' → logprob: -3.407255172729492
    5. ' north' → logprob: -4.157255172729492
    6. ' top' → logprob: -4.157255172729492
    7. 'bottom' → logprob: -4.532255172729492
    8. 'east' → logprob: -4.782255172729492
    9. ' south' → logprob: -5.407255172729492
    10. '```' → logprob: -6.532255172729492

Token 80: ' becomes' (ID: 14081)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6449944376945496
    2. '=' → logprob: -0.8949944376945496
    3. ' becomes' → logprob: -2.7699944972991943
    4. 'be' → logprob: -6.269994258880615
    5. ',' → logprob: -6.269994258880615
    6. ' ' → logprob: -9.269994735717773
    7. '    ' → logprob: -10.394994735717773
    8. ':' → logprob: -10.644994735717773
    9. ' became' → logprob: -11.144994735717773
    10. ' be' → logprob: -11.269994735717773

Token 81: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.04302111268043518
    2. ' top' → logprob: -3.1680212020874023
    3. '	top' → logprob: -12.168021202087402
    4. 'bottom' → logprob: -12.293021202087402
    5. ' ' → logprob: -12.793021202087402
    6. '   ' → logprob: -13.043021202087402
    7. '[top' → logprob: -13.793021202087402
    8. '`' → logprob: -13.918021202087402
    9. '7' → logprob: -14.043021202087402
    10. 'to' → logprob: -14.168021202087402

Token 82: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4341076910495758
    2. '   ' → logprob: -1.4341076612472534
    3. '       ' → logprob: -3.309107780456543
    4. ',' → logprob: -3.434107780456543
    5. '\n' → logprob: -4.309107780456543
    6. '    
' → logprob: -5.059107780456543
    7. 'n' → logprob: -5.684107780456543
    8. 'new' → logprob: -5.809107780456543
    9. '
' → logprob: -6.059107780456543
    10. ')' → logprob: -6.184107780456543

Token 83: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1944182813167572
    2. 'south' → logprob: -3.06941819190979
    3. 'dice' → logprob: -3.56941819190979
    4. '```' → logprob: -4.194418430328369
    5. 's' → logprob: -4.319418430328369
    6. ',' → logprob: -4.319418430328369
    7. 'new' → logprob: -4.444418430328369
    8. ' south' → logprob: -5.194418430328369
    9. 'top' → logprob: -5.194418430328369
    10. ' new' → logprob: -5.319418430328369

Token 84: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6065870523452759
    2. 'return' (adapté à ' return') → logprob: -2.6065869331359863
    3. 'south' → logprob: -2.7315869331359863
    4. 'top' → logprob: -2.8565869331359863
    5. 'dice' → logprob: -2.8565869331359863
    6. ' return' → logprob: -3.2315869331359863
    7. 'new' → logprob: -3.3565869331359863
    8. ' new' → logprob: -3.4815869331359863
    9. ' south' → logprob: -3.6065869331359863
    10. ' top' → logprob: -3.6065869331359863

Token 85: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.07089293003082275
    2. '(' → logprob: -3.570892810821533
    3. ' (' → logprob: -4.320892810821533
    4. 'south' → logprob: -4.445892810821533
    5. '(bottom' → logprob: -4.695892810821533
    6. 'bottom' → logprob: -6.320892810821533
    7. ' south' → logprob: -6.320892810821533
    8. ' bottom' → logprob: -7.445892810821533
    9. '[s' → logprob: -7.945892810821533
    10. '(e' → logprob: -7.945892810821533

Token 86: 'south' (ID: 145118)
  Prédit: 'south'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.001891149440780282
    2. ' south' → logprob: -6.626891136169434
    3. 'bottom' → logprob: -8.126891136169434
    4. 'sou' → logprob: -9.001891136169434
    5. 's' → logprob: -9.626891136169434
    6. '   ' → logprob: -10.126891136169434
    7. ' ' → logprob: -11.751891136169434
    8. 'north' → logprob: -12.001891136169434
    9. '7' → logprob: -12.501891136169434
    10. '(s' → logprob: -12.876891136169434

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001825642102630809
    2. ' ,' → logprob: -8.875182151794434
    3. ',
' → logprob: -11.000182151794434
    4. ',)' → logprob: -11.375182151794434
    5. ')' → logprob: -11.875182151794434
    6. ',

' → logprob: -12.125182151794434
    7. '),' → logprob: -14.250182151794434
    8. ',b' → logprob: -14.625182151794434
    9. ' ' → logprob: -15.250182151794434
    10. ',),' → logprob: -15.500182151794434

Token 88: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0032187069300562143
    2. ' bottom' → logprob: -5.753218650817871
    3. '7' → logprob: -10.128218650817871
    4. '6' → logprob: -14.503218650817871
    5. 'bot' → logprob: -15.378218650817871
    6. 'b' → logprob: -16.378219604492188
    7. '   ' → logprob: -16.753219604492188
    8. '```' → logprob: -16.878219604492188
    9. '.bottom' → logprob: -17.128219604492188
    10. 'BOTTOM' → logprob: -17.253219604492188

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033308175625279546
    2. ')' → logprob: -8.125332832336426
    3. ' ,' → logprob: -10.625332832336426
    4. '<|end|>' → logprob: -12.375332832336426
    5. ',)' → logprob: -13.500332832336426
    6. ',
' → logprob: -13.500332832336426
    7. ',

' → logprob: -13.625332832336426
    8. '),' → logprob: -13.875332832336426
    9. 'e' → logprob: -14.375332832336426
    10. ' ' → logprob: -14.750332832336426

Token 90: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.16047118604183197
    2. ' east' → logprob: -1.9104712009429932
    3. 'west' → logprob: -9.035470962524414
    4. 'e' → logprob: -9.285470962524414
    5. ' west' → logprob: -11.160470962524414
    6. ' ' → logprob: -12.410470962524414
    7. '7' → logprob: -12.535470962524414
    8. ')' → logprob: -12.535470962524414
    9. '```' → logprob: -12.910470962524414
    10. 'top' → logprob: -13.410470962524414

Token 91: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001975802006199956
    2. ')
' → logprob: -9.125197410583496
    3. ' )' → logprob: -9.500197410583496
    4. '   ' → logprob: -11.750197410583496
    5. ',' → logprob: -13.000197410583496
    6. ')

' → logprob: -13.625197410583496
    7. ')n' → logprob: -14.250197410583496
    8. ' ' → logprob: -15.375197410583496
    9. '),' → logprob: -15.500197410583496
    10. ')
' → logprob: -15.750197410583496

Token 92: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.8296257853507996
    2. ')' → logprob: -1.3296258449554443
    3. '<|end|>' → logprob: -1.7046258449554443
    4. 'n' → logprob: -3.5796258449554443
    5. ' ' → logprob: -3.7046258449554443
    6. 'e' → logprob: -4.329625606536865
    7. ' elif' → logprob: -4.454625606536865
    8. '\n' → logprob: -4.704625606536865
    9. '
' → logprob: -4.829625606536865
    10. '   ' → logprob: -5.079625606536865

Token 94: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.022174885496497154
    2. 'direction' → logprob: -3.897174835205078
    3. ''' → logprob: -6.897174835205078
    4. ' '' → logprob: -7.772174835205078
    5. ' ' → logprob: -9.647174835205078
    6. ' ' → logprob: -10.522174835205078
    7. '    ' → logprob: -10.522174835205078
    8. '(direction' → logprob: -10.522174835205078
    9. '"' → logprob: -11.147174835205078
    10. ''d' → logprob: -11.397174835205078

Token 95: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.003915849607437849
    2. '==' → logprob: -5.628915786743164
    3. '<|end|>' → logprob: -9.003915786743164
    4. ' =' → logprob: -9.378915786743164
    5. ' ' → logprob: -10.003915786743164
    6. ' ===' → logprob: -10.753915786743164
    7. ')' → logprob: -11.503915786743164
    8. '=='' → logprob: -12.128915786743164
    9. ' =='' → logprob: -12.253915786743164
    10. ' ' → logprob: -12.503915786743164

Token 96: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002076386474072933
    2. ' '' → logprob: -6.252076148986816
    3. '"' → logprob: -9.002076148986816
    4. ''s' → logprob: -11.877076148986816
    5. ' ' → logprob: -12.002076148986816
    6. '<|end|>' → logprob: -13.002076148986816
    7. ')' → logprob: -13.377076148986816
    8. ' ' → logprob: -13.877076148986816
    9. '[' → logprob: -14.252076148986816
    10. ''S' → logprob: -14.314576148986816

Token 97: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.007369980216026306
    2. 'E' → logprob: -5.0073699951171875
    3. ''S' → logprob: -7.6323699951171875
    4. ''' → logprob: -9.132369995117188
    5. ''E' → logprob: -10.632369995117188
    6. ''s' → logprob: -10.882369995117188
    7. ' S' → logprob: -11.757369995117188
    8. 'W' → logprob: -13.257369995117188
    9. '"S' → logprob: -13.257369995117188
    10. '```' → logprob: -13.882369995117188

Token 98: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02498813159763813
    2. ':
' → logprob: -3.8999881744384766
    3. '):' → logprob: -6.149988174438477
    4. '):
' → logprob: -7.274988174438477
    5. '<|end|>' → logprob: -7.399988174438477
    6. ')' → logprob: -8.024988174438477
    7. '   ' → logprob: -8.399988174438477
    8. '       ' → logprob: -8.649988174438477
    9. ' :' → logprob: -9.274988174438477
    10. '':' → logprob: -9.649988174438477

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4973374903202057
    2. '(' → logprob: -1.8723374605178833
    3. '(top' → logprob: -2.622337579727173
    4. ' (' → logprob: -2.747337579727173
    5. '   ' → logprob: -2.872337579727173
    6. ':' → logprob: -4.122337341308594
    7. ':
' → logprob: -4.622337341308594
    8. '(bottom' → logprob: -4.872337341308594
    9. '<|end|>' → logprob: -5.747337341308594
    10. 'return' → logprob: -6.247337341308594

Token 100: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0093379020690918
    2. ' (' → logprob: -1.2593379020690918
    3. '(' → logprob: -1.7593379020690918
    4. '(bottom' → logprob: -2.259337902069092
    5. '(top' → logprob: -3.134337902069092
    6. 'return' → logprob: -4.884337902069092
    7. '   ' → logprob: -4.884337902069092
    8. ' return' → logprob: -5.509337902069092
    9. 'top' → logprob: -5.634337902069092
    10. 'bottom' → logprob: -6.009337902069092

Token 101: ' Roll' (ID: 18548)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.824474036693573
    2. 'return' → logprob: -0.949474036693573
    3. '   ' → logprob: -2.3244740962982178
    4. ' bottom' → logprob: -3.8244740962982178
    5. '       ' → logprob: -4.199473857879639
    6. 'top' → logprob: -4.449473857879639
    7. 'bottom' → logprob: -4.574473857879639
    8. ' top' → logprob: -5.074473857879639
    9. ' north' → logprob: -5.699473857879639
    10. '```' → logprob: -6.324473857879639

Token 102: ' south' (ID: 15019)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.014173267409205437
    2. '(n' → logprob: -5.1391730308532715
    3. '(' → logprob: -5.5141730308532715
    4. '   ' → logprob: -6.2641730308532715
    5. '(bottom' → logprob: -6.3891730308532715
    6. '(s' → logprob: -7.8891730308532715
    7. ' bottom' → logprob: -9.88917350769043
    8. ' ' → logprob: -10.01417350769043
    9. '(top' → logprob: -10.01417350769043
    10. 'north' → logprob: -11.13917350769043

Token 103: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015299256891012192
    2. ':
' → logprob: -4.765299320220947
    3. '<|end|>' → logprob: -5.765299320220947
    4. '   ' → logprob: -6.640299320220947
    5. '       ' → logprob: -6.765299320220947
    6. ' :' → logprob: -7.515299320220947
    7. '<|end|>' → logprob: -8.515298843383789
    8. ',' → logprob: -9.140298843383789
    9. ':return' → logprob: -9.390298843383789
    10. ' :
' → logprob: -10.640298843383789

Token 104: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5834324359893799
    2. ':' → logprob: -1.2084324359893799
    3. '       ' → logprob: -2.70843243598938
    4. ':
' → logprob: -2.83343243598938
    5. '(' → logprob: -5.458432197570801
    6. ' (' → logprob: -5.833432197570801
    7. '(top' → logprob: -5.833432197570801
    8. 'top' → logprob: -6.208432197570801
    9. ',' → logprob: -6.583432197570801
    10. ' =' → logprob: -7.083432197570801

Token 105: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8992798328399658
    2. ' (' → logprob: -1.5242798328399658
    3. '(' → logprob: -1.6492798328399658
    4. '(bottom' → logprob: -1.8992798328399658
    5. '(top' → logprob: -3.774279832839966
    6. '       ' → logprob: -5.399279594421387
    7. '(n' → logprob: -5.649279594421387
    8. 'return' → logprob: -7.399279594421387
    9. 'bottom' → logprob: -7.774279594421387
    10. ' return' → logprob: -7.774279594421387

Token 106: ' top' (ID: 2344)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46772098541259766
    2. ' return' → logprob: -2.5927209854125977
    3. 'return' → logprob: -2.7177209854125977
    4. '(' → logprob: -3.0927209854125977
    5. 'north' → logprob: -3.0927209854125977
    6. 'bottom' → logprob: -3.4677209854125977
    7. ' bottom' → logprob: -3.7177209854125977
    8. 'top' → logprob: -3.9677209854125977
    9. '(bottom' → logprob: -3.9677209854125977
    10. ' (' → logprob: -4.467720985412598

Token 107: ' becomes' (ID: 14081)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4898739457130432
    2. ',' → logprob: -1.4898738861083984
    3. ' =' → logprob: -1.8648738861083984
    4. ' ,' → logprob: -5.114873886108398
    5. '<|end|>' → logprob: -7.739873886108398
    6. ' becomes' → logprob: -8.114873886108398
    7. ')' → logprob: -9.364873886108398
    8. ' is' → logprob: -10.989873886108398
    9. '   ' → logprob: -10.989873886108398
    10. ' ' → logprob: -11.489873886108398

Token 108: ' north' (ID: 16173)
  Prédit: 'north'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'north' → logprob: -0.005969557911157608
    2. ' north' → logprob: -5.130969524383545
    3. '   ' → logprob: -10.755970001220703
    4. 'n' → logprob: -11.755970001220703
    5. '7' → logprob: -11.880970001220703
    6. '```' → logprob: -13.630970001220703
    7. 'bottom' → logprob: -13.880970001220703
    8. '`' → logprob: -14.130970001220703
    9. '	n' → logprob: -14.755970001220703
    10. 'nor' → logprob: -15.630970001220703

Token 109: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16624407470226288
    2. '<|end|>' → logprob: -2.5412440299987793
    3. '   ' → logprob: -3.7912440299987793
    4. '       ' → logprob: -4.416244029998779
    5. ',
' → logprob: -4.666244029998779
    6. ':' → logprob: -4.791244029998779
    7. ')' → logprob: -5.541244029998779
    8. ' ,' → logprob: -5.541244029998779
    9. '=' → logprob: -5.791244029998779
    10. ' ' → logprob: -6.416244029998779

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08475197106599808
    2. ',' → logprob: -2.959752082824707
    3. ' (' → logprob: -4.459752082824707
    4. '(' → logprob: -5.209752082824707
    5. '   ' → logprob: -5.834752082824707
    6. ' return' → logprob: -6.459752082824707
    7. 'return' → logprob: -6.459752082824707
    8. '(top' → logprob: -7.084752082824707
    9. ' ,' → logprob: -7.209752082824707
    10. ',
' → logprob: -7.334752082824707

Token 111: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.7444180250167847
    2. '(top' → logprob: -1.8694180250167847
    3. 'north' → logprob: -2.119418144226074
    4. '(' → logprob: -2.119418144226074
    5. 'top' → logprob: -2.244418144226074
    6. '(bottom' → logprob: -2.494418144226074
    7. ' (' → logprob: -2.869418144226074
    8. '   ' → logprob: -3.119418144226074
    9. 'bottom' → logprob: -3.369418144226074
    10. '(n' → logprob: -3.369418144226074

Token 112: ' north' (ID: 16173)
  Prédit: 'north'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'north' → logprob: -0.212522953748703
    2. ' north' → logprob: -1.7125229835510254
    3. '   ' → logprob: -5.337522983551025
    4. 'top' → logprob: -5.712522983551025
    5. 'bottom' → logprob: -7.087522983551025
    6. ' top' → logprob: -7.337522983551025
    7. ' bottom' → logprob: -7.837522983551025
    8. '7' → logprob: -8.087522506713867
    9. '```' → logprob: -8.837522506713867
    10. 'return' → logprob: -9.212522506713867

Token 113: ' becomes' (ID: 14081)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8585503101348877
    2. ' becomes' → logprob: -0.8585503101348877
    3. '=' → logprob: -2.4835503101348877
    4. ' =' → logprob: -2.7335503101348877
    5. ' ,' → logprob: -5.983550071716309
    6. '<|end|>' → logprob: -7.983550071716309
    7. ')' → logprob: -8.483550071716309
    8. 'be' → logprob: -8.858550071716309
    9. 'bec' → logprob: -8.858550071716309
    10. ' become' → logprob: -9.233550071716309

Token 114: ' bottom' (ID: 8725)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.023160463199019432
    2. ' top' → logprob: -3.898160457611084
    3. 'bottom' → logprob: -6.648160457611084
    4. '   ' → logprob: -7.273160457611084
    5. '7' → logprob: -8.148160934448242
    6. ' bottom' → logprob: -8.773160934448242
    7. ' ' → logprob: -10.148160934448242
    8. 'north' → logprob: -10.148160934448242
    9. '(top' → logprob: -10.273160934448242
    10. 'east' → logprob: -11.273160934448242

Token 115: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008365754038095474
    2. ',' → logprob: -5.258365631103516
    3. 'return' → logprob: -6.883365631103516
    4. ' return' → logprob: -7.758365631103516
    5. '   ' → logprob: -7.883365631103516
    6. '<|end|>' → logprob: -8.008365631103516
    7. '(' → logprob: -8.133365631103516
    8. ' (' → logprob: -9.133365631103516
    9. ')' → logprob: -9.383365631103516
    10. ':' → logprob: -9.383365631103516

Token 116: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8527055978775024
    2. '       ' → logprob: -0.8527055978775024
    3. 'return' → logprob: -2.477705478668213
    4. '(' → logprob: -3.477705478668213
    5. '(n' → logprob: -4.352705478668213
    6. '(top' → logprob: -4.727705478668213
    7. ' return' → logprob: -5.977705478668213
    8. 'north' → logprob: -6.102705478668213
    9. 'top' → logprob: -6.352705478668213
    10. ' (' → logprob: -7.227705478668213

Token 117: ' #' (ID: 1069)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.30530333518981934
    2. '(top' → logprob: -2.0553033351898193
    3. '(' → logprob: -2.9303033351898193
    4. 'north' → logprob: -3.3053033351898193
    5. 'top' → logprob: -3.8053033351898193
    6. 'return' → logprob: -4.930303573608398
    7. '   ' → logprob: -5.055303573608398
    8. '(e' → logprob: -5.805303573608398
    9. '(s' → logprob: -6.305303573608398
    10. '(bottom' → logprob: -6.430303573608398

Token 118: ' bottom' (ID: 8725)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.8614955544471741
    2. '(top' → logprob: -1.6114954948425293
    3. '(bottom' → logprob: -2.3614954948425293
    4. 'bottom' → logprob: -2.6114954948425293
    5. '(' → logprob: -2.8614954948425293
    6. '(n' → logprob: -2.9864954948425293
    7. 'north' → logprob: -2.9864954948425293
    8. '(s' → logprob: -4.361495494842529
    9. '   ' → logprob: -4.486495494842529
    10. '(e' → logprob: -5.111495494842529

Token 119: ' becomes' (ID: 14081)
  Prédit: ' becomes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' becomes' → logprob: -0.41573426127433777
    2. ',' → logprob: -1.9157342910766602
    3. ' =' → logprob: -2.04073429107666
    4. '=' → logprob: -3.16573429107666
    5. 'be' → logprob: -3.91573429107666
    6. ' ,' → logprob: -8.16573429107666
    7. '<|end|>' → logprob: -8.29073429107666
    8. 'bec' → logprob: -9.16573429107666
    9. '7' → logprob: -9.66573429107666
    10. '   ' → logprob: -10.29073429107666

Token 120: ' south' (ID: 15019)
  Prédit: 'north'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'north' → logprob: -0.23828774690628052
    2. 'south' → logprob: -1.6132876873016357
    3. ' north' → logprob: -4.988287925720215
    4. ' south' → logprob: -5.363287925720215
    5. 'top' → logprob: -7.238287925720215
    6. '7' → logprob: -7.613287925720215
    7. ' ' → logprob: -10.738287925720215
    8. 'east' → logprob: -11.113287925720215
    9. '```' → logprob: -11.613287925720215
    10. '   ' → logprob: -11.613287925720215

Token 121: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007785600610077381
    2. 'return' → logprob: -5.007785797119141
    3. ' return' → logprob: -7.007785797119141
    4. '(' → logprob: -9.63278579711914
    5. '   ' → logprob: -10.38278579711914
    6. ',' → logprob: -10.50778579711914
    7. ' (' → logprob: -11.50778579711914
    8. '```' → logprob: -12.13278579711914
    9. '        
' → logprob: -12.25778579711914
    10. '<|end|>' → logprob: -13.13278579711914

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1060728132724762
    2. 'return' → logprob: -2.8560729026794434
    3. '(' → logprob: -3.4810729026794434
    4. ' return' → logprob: -5.356072902679443
    5. ',' → logprob: -5.481072902679443
    6. '   ' → logprob: -6.356072902679443
    7. ' (' → logprob: -7.106072902679443
    8. '(top' → logprob: -7.856072902679443
    9. '```' → logprob: -8.981072425842285
    10. 'top' → logprob: -9.356072425842285

Token 123: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.277773916721344
    2. 'return' → logprob: -1.5277738571166992
    3. ' return' → logprob: -4.277773857116699
    4. '(' → logprob: -5.027773857116699
    5. '   ' → logprob: -5.652773857116699
    6. '(n' → logprob: -7.652773857116699
    7. ' (' → logprob: -8.0277738571167
    8. '(top' → logprob: -8.5277738571167
    9. 'north' → logprob: -8.7777738571167
    10. 'n' → logprob: -9.5277738571167

Token 124: ' south' (ID: 15019)
  Prédit: 'north'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'north' → logprob: -0.002709415275603533
    2. '(' → logprob: -7.12770938873291
    3. '(n' → logprob: -7.12770938873291
    4. ' north' → logprob: -7.50270938873291
    5. 'top' → logprob: -7.87770938873291
    6. 'south' → logprob: -9.87770938873291
    7. 'return' → logprob: -10.25270938873291
    8. '(top' → logprob: -10.75270938873291
    9. 'n' → logprob: -11.00270938873291
    10. '   ' → logprob: -11.37770938873291

Token 125: ' becomes' (ID: 14081)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3972075581550598
    2. 'be' → logprob: -1.647207498550415
    3. ' becomes' → logprob: -2.022207498550415
    4. ' =' → logprob: -6.147207736968994
    5. ',' → logprob: -7.772207736968994
    6. '==' → logprob: -9.272207260131836
    7. ')' → logprob: -9.772207260131836
    8. 'bec' → logprob: -10.647207260131836
    9. '=
' → logprob: -11.272207260131836
    10. 'Be' → logprob: -11.522207260131836

Token 126: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.020802639424800873
    2. ' top' → logprob: -3.8958027362823486
    3. '7' → logprob: -9.02080249786377
    4. 'north' → logprob: -9.27080249786377
    5. ' north' → logprob: -11.39580249786377
    6. '   ' → logprob: -11.39580249786377
    7. ' ' → logprob: -11.64580249786377
    8. '(top' → logprob: -11.77080249786377
    9. '	top' → logprob: -12.77080249786377
    10. '[top' → logprob: -13.64580249786377

Token 127: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05080493167042732
    2. 'return' → logprob: -3.550804853439331
    3. ' return' → logprob: -3.925804853439331
    4. ':' → logprob: -7.67580509185791
    5. ':
' → logprob: -8.55080509185791
    6. ':return' → logprob: -8.67580509185791
    7. '(' → logprob: -9.42580509185791
    8. '	return' → logprob: -10.17580509185791
    9. '   ' → logprob: -10.42580509185791
    10. '
' → logprob: -10.92580509185791

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15382765233516693
    2. ' return' → logprob: -2.528827667236328
    3. 'return' → logprob: -2.778827667236328
    4. '   ' → logprob: -7.528827667236328
    5. '(' → logprob: -10.028827667236328
    6. '	return' → logprob: -10.403827667236328
    7. '```' → logprob: -10.778827667236328
    8. ':return' → logprob: -11.153827667236328
    9. ':' → logprob: -11.278827667236328
    10. '        
' → logprob: -11.653827667236328

Token 129: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5373944044113159
    2. 'return' (adapté à ' return') → logprob: -0.9123944044113159
    3. '       ' → logprob: -5.0373945236206055
    4. '   ' → logprob: -5.2873945236206055
    5. ' (' → logprob: -6.9123945236206055
    6. '(' → logprob: -7.1623945236206055
    7. '(top' → logprob: -7.5373945236206055
    8. '(bottom' → logprob: -9.412394523620605
    9. '(return' → logprob: -9.787394523620605
    10. '	return' → logprob: -10.162394523620605

Token 130: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.010525152087211609
    2. ' (' → logprob: -4.760525226593018
    3. '(' → logprob: -6.385525226593018
    4. '(bottom' → logprob: -9.01052474975586
    5. '(s' → logprob: -10.01052474975586
    6. ' ' → logprob: -10.88552474975586
    7. '((' → logprob: -11.63552474975586
    8. '(top' → logprob: -11.76052474975586
    9. 'north' → logprob: -12.13552474975586
    10. '7' → logprob: -12.26052474975586

Token 131: 'north' (ID: 132211)
  Prédit: 'north'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'north' → logprob: -0.0019534912426024675
    2. '(n' → logprob: -6.751953601837158
    3. ' north' → logprob: -7.501953601837158
    4. '7' → logprob: -9.001953125
    5. 'n' → logprob: -9.626953125
    6. '(' → logprob: -10.501953125
    7. '   ' → logprob: -12.001953125
    8. '6' → logprob: -13.001953125
    9. ')' → logprob: -13.501953125
    10. 'bottom' → logprob: -13.876953125

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000250491953920573
    2. ' ,' → logprob: -8.500250816345215
    3. ')' → logprob: -11.125250816345215
    4. ',b' → logprob: -11.250250816345215
    5. ',
' → logprob: -11.500250816345215
    6. '),' → logprob: -13.250250816345215
    7. 'bottom' → logprob: -13.750250816345215
    8. ' bottom' → logprob: -13.875250816345215
    9. ',)' → logprob: -14.125250816345215
    10. ',

' → logprob: -14.625250816345215

Token 133: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -2.3557529857498594e-05
    2. ' top' → logprob: -10.75002384185791
    3. '7' → logprob: -13.75002384185791
    4. '   ' → logprob: -14.37502384185791
    5. 'bottom' → logprob: -15.12502384185791
    6. '[top' → logprob: -16.625022888183594
    7. '	top' → logprob: -17.125022888183594
    8. ')' → logprob: -17.250022888183594
    9. 't' → logprob: -17.375022888183594
    10. ' ' → logprob: -18.125022888183594

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000727325037587434
    2. ' ,' → logprob: -7.25072717666626
    3. ',e' → logprob: -11.375727653503418
    4. ')' → logprob: -13.000727653503418
    5. 's' → logprob: -14.500727653503418
    6. '),' → logprob: -14.500727653503418
    7. 'e' → logprob: -14.500727653503418
    8. ',
' → logprob: -14.500727653503418
    9. '<|end|>' → logprob: -14.750727653503418
    10. '<|end|>' → logprob: -15.500727653503418

Token 135: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.054912641644477844
    2. ' east' → logprob: -2.929912567138672
    3. 'e' → logprob: -10.929912567138672
    4. '<|end|>' → logprob: -11.554912567138672
    5. '-east' → logprob: -14.304912567138672
    6. ' ' → logprob: -14.554912567138672
    7. '7' → logprob: -15.304912567138672
    8. '   ' → logprob: -15.429912567138672
    9. '  ' → logprob: -15.554912567138672
    10. '```' → logprob: -15.679912567138672

Token 136: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00031091354321688414
    2. '   ' → logprob: -8.625310897827148
    3. ')
' → logprob: -9.125310897827148
    4. ' )' → logprob: -10.750310897827148
    5. ')

' → logprob: -15.000310897827148
    6. ')
' → logprob: -15.500310897827148
    7. ' ' → logprob: -15.750310897827148
    8. '       ' → logprob: -16.87531089782715
    9. '  ' → logprob: -17.00031089782715
    10. ')}' → logprob: -17.25031089782715

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5808219909667969
    2. 'elif' → logprob: -1.7058219909667969
    3. ' elif' → logprob: -2.080821990966797
    4. '<|end|>' → logprob: -2.455821990966797
    5. ')' → logprob: -3.580821990966797
    6. '	elif' → logprob: -4.705821990966797
    7. ' ' → logprob: -4.830821990966797
    8. '  ' → logprob: -6.955821990966797
    9. ',' → logprob: -7.330821990966797
    10. ' )' → logprob: -7.580821990966797

Token 138: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.009399980306625366
    2. '   ' → logprob: -5.259399890899658
    3. ' elif' → logprob: -5.759399890899658
    4. ')' → logprob: -8.009400367736816
    5. '<|end|>' → logprob: -8.134400367736816
    6. '	elif' → logprob: -8.384400367736816
    7. ',' → logprob: -10.009400367736816
    8. 'else' → logprob: -10.259400367736816
    9. '.' → logprob: -10.259400367736816
    10. '...' → logprob: -12.134400367736816

Token 139: ' direction' (ID: 9262)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5278530716896057
    2. ''' → logprob: -0.9028530716896057
    3. ''S' → logprob: -5.527853012084961
    4. ''E' → logprob: -7.902853012084961
    5. ' ' → logprob: -8.777853012084961
    6. '    ' → logprob: -9.902853012084961
    7. '   ' → logprob: -10.027853012084961
    8. ''D' → logprob: -10.652853012084961
    9. ''I' → logprob: -11.027853012084961
    10. '('' → logprob: -11.152853012084961

Token 140: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.038092438131570816
    2. '==' → logprob: -3.2880923748016357
    3. '=='' → logprob: -10.788092613220215
    4. ' ' → logprob: -11.663092613220215
    5. '=' → logprob: -12.038092613220215
    6. ' =' → logprob: -12.663092613220215
    7. ' =='' → logprob: -12.788092613220215
    8. '[' → logprob: -13.163092613220215
    9. ' ' → logprob: -13.413092613220215
    10. '===' → logprob: -14.100592613220215

Token 141: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.23911863565444946
    2. ' '' → logprob: -1.8641185760498047
    3. ''S' → logprob: -2.8641185760498047
    4. ' ' → logprob: -8.489118576049805
    5. ''E' → logprob: -8.489118576049805
    6. ''A' → logprob: -9.239118576049805
    7. ''I' → logprob: -10.489118576049805
    8. ''U' → logprob: -11.114118576049805
    9. ''O' → logprob: -11.364118576049805
    10. ' ' → logprob: -11.864118576049805

Token 142: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.01521166879683733
    2. 'W' → logprob: -4.265211582183838
    3. ''E' → logprob: -7.390211582183838
    4. ''' → logprob: -8.015212059020996
    5. ' E' → logprob: -9.515212059020996
    6. ' W' → logprob: -12.015212059020996
    7. ' ' → logprob: -12.015212059020996
    8. ' '' → logprob: -12.765212059020996
    9. '   ' → logprob: -13.640212059020996
    10. '`' → logprob: -13.765212059020996

Token 143: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13178081810474396
    2. ':
' → logprob: -2.2567808628082275
    3. '   ' → logprob: -4.631780624389648
    4. '       ' → logprob: -5.131780624389648
    5. '):
' → logprob: -6.381780624389648
    6. '':
' → logprob: -8.131780624389648
    7. ' :' → logprob: -8.381780624389648
    8. '):' → logprob: -8.506780624389648
    9. ' :
' → logprob: -8.756780624389648
    10. ':

' → logprob: -9.006780624389648

Token 144: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.69187992811203
    2. '   ' → logprob: -1.4418799877166748
    3. ' #' → logprob: -1.8168799877166748
    4. '       ' → logprob: -2.316879987716675
    5. ' return' → logprob: -7.691879749298096
    6. 'return' → logprob: -7.816879749298096
    7. ' (' → logprob: -8.566880226135254
    8. '(' → logprob: -8.941880226135254
    9. ' ' → logprob: -9.191880226135254
    10. '  ' → logprob: -9.566880226135254

Token 145: ' #' (ID: 1069)
  Prédit: '(bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bottom' → logprob: -0.6218386888504028
    2. '(' → logprob: -1.1218386888504028
    3. '(top' → logprob: -2.1218385696411133
    4. ' (' → logprob: -4.621838569641113
    5. '   ' → logprob: -5.621838569641113
    6. '#' (adapté à ' #') → logprob: -6.246838569641113
    7. 'bottom' → logprob: -7.371838569641113
    8. '(w' → logprob: -8.371838569641113
    9. '(n' → logprob: -8.746838569641113
    10. '(right' → logprob: -9.121838569641113

Token 146: ' Roll' (ID: 18548)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0424669981002808
    2. ' (' → logprob: -1.7924669981002808
    3. 'bottom' → logprob: -2.1674671173095703
    4. '(bottom' → logprob: -2.2924671173095703
    5. '(top' → logprob: -2.2924671173095703
    6. 'top' → logprob: -2.5424671173095703
    7. ' bottom' → logprob: -3.4174671173095703
    8. 'return' → logprob: -4.16746711730957
    9. ' top' → logprob: -4.66746711730957
    10. ' return' → logprob: -4.91746711730957

Token 147: ' east' (ID: 23557)
  Prédit: '(top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(top' → logprob: -0.0020799553021788597
    2. '(' → logprob: -7.252079963684082
    3. '(e' → logprob: -7.752079963684082
    4. ' (' → logprob: -8.127079963684082
    5. '(bottom' → logprob: -8.127079963684082
    6. 'top' → logprob: -8.877079963684082
    7. '(w' → logprob: -9.377079963684082
    8. '(t' → logprob: -10.252079963684082
    9. '(n' → logprob: -10.252079963684082
    10. '(s' → logprob: -10.752079963684082

Token 148: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.431308776140213
    2. '       ' → logprob: -1.8063087463378906
    3. '(' → logprob: -2.5563087463378906
    4. ':' → logprob: -3.8063087463378906
    5. ' (' → logprob: -3.8063087463378906
    6. 'return' → logprob: -3.8063087463378906
    7. '(top' → logprob: -4.181308746337891
    8. ':
' → logprob: -4.806308746337891
    9. ' return' → logprob: -5.681308746337891
    10. '=' → logprob: -5.806308746337891

Token 149: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2862887978553772
    2. '(' → logprob: -2.6612887382507324
    3. ' (' → logprob: -2.9112887382507324
    4. 'return' → logprob: -3.6612887382507324
    5. '       ' → logprob: -3.9112887382507324
    6. '(top' → logprob: -3.9112887382507324
    7. ':' → logprob: -4.286288738250732
    8. ':
' → logprob: -4.286288738250732
    9. ',' → logprob: -4.661288738250732
    10. '(
' → logprob: -4.911288738250732

Token 150: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7965637445449829
    2. ' (' → logprob: -1.421563744544983
    3. '(bottom' → logprob: -1.546563744544983
    4. '   ' → logprob: -3.5465636253356934
    5. '       ' → logprob: -3.6715636253356934
    6. '(top' → logprob: -4.296563625335693
    7. 'return' → logprob: -4.546563625335693
    8. 'bottom' → logprob: -5.671563625335693
    9. '(w' → logprob: -6.046563625335693
    10. ' return' → logprob: -6.671563625335693

Token 151: ' top' (ID: 2344)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4674970209598541
    2. '(bottom' → logprob: -2.3424971103668213
    3. ' (' → logprob: -2.4674971103668213
    4. 'west' → logprob: -2.8424971103668213
    5. 'bottom' → logprob: -2.9674971103668213
    6. ' west' → logprob: -3.4674971103668213
    7. ' bottom' → logprob: -4.092496871948242
    8. '7' → logprob: -4.217496871948242
    9. 'return' → logprob: -5.592496871948242
    10. '(w' → logprob: -5.592496871948242

Token 152: ' becomes' (ID: 14081)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01116207055747509
    2. '=' → logprob: -4.636162281036377
    3. ' becomes' → logprob: -7.636162281036377
    4. ' ,' → logprob: -7.761162281036377
    5. ' =' → logprob: -8.261161804199219
    6. ',
' → logprob: -10.386161804199219
    7. ')' → logprob: -10.511161804199219
    8. 'be' → logprob: -10.636161804199219
    9. 'e' → logprob: -11.136161804199219
    10. ',e' → logprob: -11.136161804199219

Token 153: ' west' (ID: 14078)
  Prédit: 'west'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'west' → logprob: -0.0007247024914249778
    2. '7' → logprob: -7.625724792480469
    3. ' west' → logprob: -8.750724792480469
    4. '   ' → logprob: -10.375724792480469
    5. '(' → logprob: -10.750724792480469
    6. ' ' → logprob: -11.500724792480469
    7. '```' → logprob: -11.875724792480469
    8. '6' → logprob: -13.125724792480469
    9. 'bottom' → logprob: -13.875724792480469
    10. '(w' → logprob: -14.125724792480469

Token 154: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0676687955856323
    2. '(bottom' → logprob: -1.3176687955856323
    3. 'bottom' → logprob: -1.5676687955856323
    4. '(' → logprob: -2.317668914794922
    5. 'east' → logprob: -3.442668914794922
    6. 'west' → logprob: -4.067668914794922
    7. '(e' → logprob: -4.692668914794922
    8. '   ' → logprob: -5.067668914794922
    9. ' bottom' → logprob: -5.317668914794922
    10. ' (' → logprob: -5.817668914794922

Token 155: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40869376063346863
    2. 'bottom' → logprob: -2.158693790435791
    3. 'west' → logprob: -2.408693790435791
    4. '(bottom' → logprob: -3.408693790435791
    5. 'east' → logprob: -3.533693790435791
    6. '7' → logprob: -3.908693790435791
    7. '   ' → logprob: -3.908693790435791
    8. '(' → logprob: -4.908693790435791
    9. ' bottom' → logprob: -5.033693790435791
    10. ' (' → logprob: -5.783693790435791

Token 156: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6759294271469116
    2. ',' → logprob: -1.9259294271469116
    3. 'return' → logprob: -2.175929546356201
    4. '(bottom' → logprob: -2.425929546356201
    5. '(top' → logprob: -2.925929546356201
    6. 'bottom' → logprob: -3.675929546356201
    7. ' (' → logprob: -3.675929546356201
    8. '7' → logprob: -4.925929546356201
    9. 'top' → logprob: -5.050929546356201
    10. 'west' → logprob: -5.425929546356201

Token 157: ' west' (ID: 14078)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.04949108511209488
    2. 'west' → logprob: -3.1744911670684814
    3. '(bottom' → logprob: -5.924490928649902
    4. ' bottom' → logprob: -6.424490928649902
    5. '7' → logprob: -7.299490928649902
    6. 'top' → logprob: -7.549490928649902
    7. 'east' → logprob: -7.674490928649902
    8. ' west' → logprob: -8.549490928649902
    9. 'north' → logprob: -8.924490928649902
    10. '(' → logprob: -9.299490928649902

Token 158: ' becomes' (ID: 14081)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.873022198677063
    2. 'be' → logprob: -1.123022198677063
    3. ' becomes' → logprob: -1.373022198677063
    4. 'top' → logprob: -7.248022079467773
    5. 'bec' → logprob: -7.498022079467773
    6. '=' → logprob: -7.873022079467773
    7. '7' → logprob: -8.373022079467773
    8. ',
' → logprob: -8.373022079467773
    9. ' ,' → logprob: -8.748022079467773
    10. 'bottom' → logprob: -9.248022079467773

Token 159: ' bottom' (ID: 8725)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.00046177039621397853
    2. ' top' → logprob: -7.750461578369141
    3. 'bottom' → logprob: -10.75046157836914
    4. '7' → logprob: -11.62546157836914
    5. '	top' → logprob: -15.37546157836914
    6. ' ' → logprob: -16.12546157836914
    7. 'north' → logprob: -16.12546157836914
    8. '   ' → logprob: -16.25046157836914
    9. ' bottom' → logprob: -16.37546157836914
    10. 'east' → logprob: -17.00046157836914

Token 160: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8182465434074402
    2. '       ' → logprob: -1.318246603012085
    3. ',' → logprob: -2.193246603012085
    4. '   ' → logprob: -3.068246603012085
    5. '(' → logprob: -3.068246603012085
    6. ' (' → logprob: -3.943246603012085
    7. ' return' → logprob: -4.068246364593506
    8. '(bottom' → logprob: -4.318246364593506
    9. '(top' → logprob: -4.443246364593506
    10. ')' → logprob: -4.693246364593506

Token 161: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09665481746196747
    2. '(' → logprob: -3.8466548919677734
    3. '(top' → logprob: -3.8466548919677734
    4. 'return' → logprob: -3.9716548919677734
    5. '   ' → logprob: -4.221654891967773
    6. ',
' → logprob: -5.471654891967773
    7. ' (' → logprob: -5.971654891967773
    8. 'top' → logprob: -6.221654891967773
    9. '(bottom' → logprob: -6.471654891967773
    10. '       ' → logprob: -6.596654891967773

Token 162: ' #' (ID: 1069)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.041362300515174866
    2. ' top' → logprob: -3.2913622856140137
    3. 'bottom' → logprob: -6.666362285614014
    4. '   ' → logprob: -6.791362285614014
    5. '7' → logprob: -7.916362285614014
    6. ' bottom' → logprob: -8.166362762451172
    7. '	top' → logprob: -9.416362762451172
    8. '       ' → logprob: -9.541362762451172
    9. '(top' → logprob: -10.291362762451172
    10. ' ' → logprob: -10.916362762451172

Token 163: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.08916454762220383
    2. 'top' → logprob: -3.4641644954681396
    3. ' bottom' → logprob: -3.5891644954681396
    4. 'east' → logprob: -4.964164733886719
    5. '(bottom' → logprob: -5.089164733886719
    6. 'north' → logprob: -5.464164733886719
    7. 'south' → logprob: -5.714164733886719
    8. '7' → logprob: -6.339164733886719
    9. ' east' → logprob: -6.964164733886719
    10. 'west' → logprob: -7.339164733886719

Token 164: ' becomes' (ID: 14081)
  Prédit: ' becomes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' becomes' → logprob: -0.14072729647159576
    2. ',' → logprob: -2.5157272815704346
    3. '=' → logprob: -3.6407272815704346
    4. 'be' → logprob: -3.7657272815704346
    5. ' =' → logprob: -7.390727519989014
    6. 'bec' → logprob: -8.515727043151855
    7. ' ,' → logprob: -10.140727043151855
    8. ')' → logprob: -10.390727043151855
    9. 'top' → logprob: -10.390727043151855
    10. 'comes' → logprob: -10.765727043151855

Token 165: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.47432661056518555
    2. ' east' → logprob: -0.9743266105651855
    3. 'e' → logprob: -8.349327087402344
    4. ' ' → logprob: -12.599327087402344
    5. '	e' → logprob: -13.599327087402344
    6. '   ' → logprob: -13.724327087402344
    7. '```' → logprob: -13.849327087402344
    8. '_e' → logprob: -13.849327087402344
    9. '(e' → logprob: -14.099327087402344
    10. '7' → logprob: -14.099327087402344

Token 166: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.569071352481842
    2. '       ' → logprob: -1.1940712928771973
    3. ',' → logprob: -2.5690712928771973
    4. ' return' → logprob: -3.3190712928771973
    5. '   ' → logprob: -4.569071292877197
    6. '(' → logprob: -5.694071292877197
    7. ' (' → logprob: -6.444071292877197
    8. ')' → logprob: -7.069071292877197
    9. 'eturn' → logprob: -7.694071292877197
    10. ' ,' → logprob: -8.194071769714355

Token 167: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6582162976264954
    2. '(' → logprob: -1.2832162380218506
    3. ' return' → logprob: -2.5332162380218506
    4. '   ' → logprob: -2.9082162380218506
    5. ' (' → logprob: -3.6582162380218506
    6. ',' → logprob: -3.9082162380218506
    7. ')' → logprob: -4.28321647644043
    8. '(n' → logprob: -5.90821647644043
    9. '(top' → logprob: -6.28321647644043
    10. '(e' → logprob: -6.40821647644043

Token 168: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12685732543468475
    2. ' return' → logprob: -2.876857280731201
    3. '       ' → logprob: -3.501857280731201
    4. '   ' → logprob: -4.376857280731201
    5. '(' → logprob: -4.501857280731201
    6. ' (' → logprob: -5.251857280731201
    7. ',' → logprob: -6.376857280731201
    8. 'eturn' → logprob: -7.251857280731201
    9. ')' → logprob: -8.12685775756836
    10. '(top' → logprob: -8.50185775756836

Token 169: ' east' (ID: 23557)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.2546915113925934
    2. 'return' → logprob: -1.879691481590271
    3. 'bottom' → logprob: -3.6296916007995605
    4. ' top' → logprob: -4.3796916007995605
    5. 'west' → logprob: -4.5046916007995605
    6. ' return' → logprob: -5.1296916007995605
    7. 'east' → logprob: -5.1296916007995605
    8. '(top' → logprob: -5.3796916007995605
    9. ' west' → logprob: -6.6296916007995605
    10. ' bottom' → logprob: -6.8796916007995605

Token 170: ' becomes' (ID: 14081)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10015642642974854
    2. ' becomes' → logprob: -2.725156307220459
    3. ' =' → logprob: -4.600156307220459
    4. 'be' → logprob: -4.850156307220459
    5. ')' → logprob: -5.225156307220459
    6. ',' → logprob: -5.350156307220459
    7. '),' → logprob: -6.475156307220459
    8. ')=' → logprob: -9.725156784057617
    9. 'bec' → logprob: -10.100156784057617
    10. ' ,' → logprob: -10.475156784057617

Token 171: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0031153298914432526
    2. 'bottom' → logprob: -6.253115177154541
    3. ' top' → logprob: -6.753115177154541
    4. ' bottom' → logprob: -11.3781156539917
    5. '7' → logprob: -12.6281156539917
    6. ' ' → logprob: -13.6281156539917
    7. '   ' → logprob: -13.6281156539917
    8. '	top' → logprob: -14.0031156539917
    9. '```' → logprob: -15.5031156539917
    10. '(top' → logprob: -15.5031156539917

Token 172: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5594440698623657
    2. 'return' → logprob: -1.0594440698623657
    3. ' return' → logprob: -3.559443950653076
    4. ')' → logprob: -4.434443950653076
    5. '   ' → logprob: -4.434443950653076
    6. ' (' → logprob: -4.434443950653076
    7. '(bottom' → logprob: -4.559443950653076
    8. '(n' → logprob: -5.809443950653076
    9. '(return' → logprob: -6.309443950653076
    10. '(e' → logprob: -6.934443950653076

Token 173: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9113010764122009
    2. '(bottom' → logprob: -1.0363011360168457
    3. '(e' → logprob: -1.7863011360168457
    4. '(w' → logprob: -3.0363011360168457
    5. 'return' → logprob: -4.411301136016846
    6. '(b' → logprob: -5.036301136016846
    7. ' (' → logprob: -5.661301136016846
    8. '   ' → logprob: -6.286301136016846
    9. '(return' → logprob: -6.286301136016846
    10. ' return' → logprob: -7.786301136016846

Token 174: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.801659882068634
    2. '(' → logprob: -1.0516598224639893
    3. '(w' → logprob: -1.8016598224639893
    4. '(bottom' → logprob: -3.8016598224639893
    5. ' return' → logprob: -4.926660060882568
    6. ' (' → logprob: -6.176660060882568
    7. '(return' → logprob: -6.176660060882568
    8. '   ' → logprob: -6.551660060882568
    9. '(b' → logprob: -7.051660060882568
    10. '(e' → logprob: -7.426660060882568

Token 175: ' (' (ID: 350)
  Prédit: '(bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bottom' → logprob: -0.05073830485343933
    2. '(w' → logprob: -3.6757383346557617
    3. ' (' → logprob: -4.300738334655762
    4. '(' → logprob: -4.800738334655762
    5. '(e' → logprob: -6.175738334655762
    6. '(s' → logprob: -8.925738334655762
    7. '(bot' → logprob: -9.925738334655762
    8. '(b' → logprob: -10.800738334655762
    9. '((' → logprob: -10.800738334655762
    10. '(left' → logprob: -11.675738334655762

Token 176: 'west' (ID: 14914)
  Prédit: 'west'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'west' → logprob: -0.28614822030067444
    2. 'bottom' → logprob: -1.411148190498352
    3. '7' → logprob: -5.9111480712890625
    4. ' bottom' → logprob: -7.0361480712890625
    5. ' west' → logprob: -7.1611480712890625
    6. 'east' → logprob: -8.536148071289062
    7. ' ' → logprob: -9.286148071289062
    8. '(bottom' → logprob: -9.411148071289062
    9. '   ' → logprob: -9.536148071289062
    10. '6' → logprob: -10.286148071289062

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.587483221665025e-05
    2. ' ,' → logprob: -10.375065803527832
    3. ',
' → logprob: -11.375065803527832
    4. ')' → logprob: -12.125065803527832
    5. ',b' → logprob: -12.375065803527832
    6. ',

' → logprob: -12.500065803527832
    7. ',)' → logprob: -13.625065803527832
    8. '),' → logprob: -14.000065803527832
    9. 'bottom' → logprob: -14.250065803527832
    10. ',s' → logprob: -14.562565803527832

Token 178: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.07014150172472
    2. ' south' → logprob: -2.695141553878784
    3. 's' → logprob: -9.070141792297363
    4. '   ' → logprob: -9.945141792297363
    5. ' ' → logprob: -10.570141792297363
    6. 'sou' → logprob: -12.320141792297363
    7. 'north' → logprob: -12.820141792297363
    8. '  ' → logprob: -12.945141792297363
    9. '```' → logprob: -14.195141792297363
    10. '	s' → logprob: -14.195141792297363

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001487140398239717
    2. ' ,' → logprob: -9.00014877319336
    3. ')' → logprob: -11.25014877319336
    4. '7' → logprob: -12.75014877319336
    5. ',
' → logprob: -12.75014877319336
    6. 'top' → logprob: -13.00014877319336
    7. '),' → logprob: -13.25014877319336
    8. ',

' → logprob: -14.50014877319336
    9. '[top' → logprob: -14.50014877319336
    10. '<|end|>' → logprob: -15.50014877319336

Token 180: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0007250601192936301
    2. ' top' → logprob: -7.250725269317627
    3. 'bottom' → logprob: -11.125724792480469
    4. ' bottom' → logprob: -16.00072479248047
    5. '	top' → logprob: -16.25072479248047
    6. ' ' → logprob: -16.87572479248047
    7. '7' → logprob: -17.25072479248047
    8. '   ' → logprob: -18.12572479248047
    9. '[top' → logprob: -19.12572479248047
    10. 't' → logprob: -19.37572479248047

Token 181: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.755678961984813e-05
    2. ')
' → logprob: -9.875077247619629
    3. ' )' → logprob: -10.625077247619629
    4. '   ' → logprob: -13.500077247619629
    5. ')

' → logprob: -15.375077247619629
    6. ' ' → logprob: -16.250078201293945
    7. ')
' → logprob: -17.125078201293945
    8. ')}' → logprob: -17.625078201293945
    9. ')`' → logprob: -18.125078201293945
    10. '}' → logprob: -18.250078201293945

Token 182: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11516407132148743
    2. 'elif' → logprob: -2.365164041519165
    3. '   ' → logprob: -4.990164279937744
    4. 'else' → logprob: -5.490164279937744
    5. '(' → logprob: -6.740164279937744
    6. ',' → logprob: -7.115164279937744
    7. ' elif' → logprob: -7.740164279937744
    8. '_' → logprob: -7.865164279937744
    9. '<|end|>' → logprob: -8.240163803100586
    10. ')
' → logprob: -9.240163803100586

Token 183: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.056956443935632706
    2. ')' → logprob: -3.6819565296173096
    3. '   ' → logprob: -4.1819562911987305
    4. ' elif' → logprob: -4.3069562911987305
    5. 'else' → logprob: -6.6819562911987305
    6. ' else' → logprob: -9.68195629119873
    7. ')
' → logprob: -10.43195629119873
    8. '	elif' → logprob: -10.68195629119873
    9. ',' → logprob: -10.93195629119873
    10. '(' → logprob: -11.30695629119873

Token 184: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.2550698220729828
    2. 'direction' → logprob: -1.5050698518753052
    3. '(direction' → logprob: -6.505069732666016
    4. ''' → logprob: -6.755069732666016
    5. ' '' → logprob: -8.255069732666016
    6. ''d' → logprob: -8.755069732666016
    7. ' ' → logprob: -11.005069732666016
    8. '   ' → logprob: -11.880069732666016
    9. '(' → logprob: -11.880069732666016
    10. ' (' → logprob: -12.130069732666016

Token 185: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03834795951843262
    2. '==' → logprob: -3.2883479595184326
    3. '=='' → logprob: -8.413348197937012
    4. ' =='' → logprob: -9.913348197937012
    5. '[' → logprob: -11.288348197937012
    6. ''' → logprob: -12.663348197937012
    7. ' =' → logprob: -12.788348197937012
    8. ' ' → logprob: -12.788348197937012
    9. '('' → logprob: -13.038348197937012
    10. '=' → logprob: -13.038348197937012

Token 186: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.017943887040019035
    2. ' '' → logprob: -4.392943859100342
    3. ''S' → logprob: -5.267943859100342
    4. ''O' → logprob: -9.3929443359375
    5. ' W' → logprob: -9.7679443359375
    6. ''E' → logprob: -10.3929443359375
    7. ''w' → logprob: -10.6429443359375
    8. 'W' → logprob: -11.0179443359375
    9. ''A' → logprob: -11.2679443359375
    10. ' ' → logprob: -11.7679443359375

Token 187: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0013741609873250127
    2. ''' → logprob: -6.626374244689941
    3. ' W' → logprob: -10.126374244689941
    4. ''w' → logprob: -12.876374244689941
    5. '"W' → logprob: -13.251374244689941
    6. '```' → logprob: -14.251374244689941
    7. '   ' → logprob: -14.376374244689941
    8. '	W' → logprob: -15.001374244689941
    9. '`' → logprob: -15.126374244689941
    10. '['' → logprob: -15.126374244689941

Token 188: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08802566677331924
    2. ')' → logprob: -3.0880255699157715
    3. '):' → logprob: -3.7130255699157715
    4. '):
' → logprob: -5.7130255699157715
    5. ':
' → logprob: -5.9630255699157715
    6. '':' → logprob: -5.9630255699157715
    7. ''' → logprob: -6.2130255699157715
    8. '   ' → logprob: -6.5880255699157715
    9. '')' → logprob: -6.5880255699157715
    10. ''):' → logprob: -7.9630255699157715

Token 189: '       ' (ID: 309)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.02173987403512001
    2. '(' → logprob: -4.521739959716797
    3. ' return' → logprob: -5.896739959716797
    4. '   ' → logprob: -6.146739959716797
    5. '(top' → logprob: -6.271739959716797
    6. '(bottom' → logprob: -6.396739959716797
    7. '(w' → logprob: -6.521739959716797
    8. '(return' → logprob: -8.396739959716797
    9. 'return' → logprob: -8.771739959716797
    10. '(e' → logprob: -8.896739959716797

Token 190: ' #' (ID: 1069)
  Prédit: '(bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bottom' → logprob: -0.06320255994796753
    2. '(e' → logprob: -3.6882026195526123
    3. '(top' → logprob: -3.9382026195526123
    4. ' (' → logprob: -4.813202381134033
    5. '(' → logprob: -5.563202381134033
    6. '(w' → logprob: -5.938202381134033
    7. '(s' → logprob: -6.563202381134033
    8. '(b' → logprob: -8.438202857971191
    9. '(bot' → logprob: -8.938202857971191
    10. '(n' → logprob: -9.188202857971191

Token 191: ' Roll' (ID: 18548)
  Prédit: '(bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bottom' → logprob: -0.9596937894821167
    2. 'return' → logprob: -1.0846937894821167
    3. ' (' → logprob: -2.5846939086914062
    4. ' return' → logprob: -2.7096939086914062
    5. '(' → logprob: -2.7096939086914062
    6. '(top' → logprob: -3.3346939086914062
    7. 'bottom' → logprob: -4.459693908691406
    8. '(w' → logprob: -4.584693908691406
    9. ' bottom' → logprob: -5.209693908691406
    10. '(e' → logprob: -5.459693908691406

Token 192: ' west' (ID: 14078)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.24829119443893433
    2. '(bottom' → logprob: -1.998291254043579
    3. '(n' → logprob: -3.373291254043579
    4. ' (' → logprob: -3.623291254043579
    5. '(top' → logprob: -4.373291015625
    6. '(w' → logprob: -5.248291015625
    7. '(s' → logprob: -5.498291015625
    8. '(' → logprob: -6.748291015625
    9. 'bottom' → logprob: -9.498291015625
    10. '(t' → logprob: -9.998291015625

Token 193: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7667217254638672
    2. '   ' → logprob: -1.1417217254638672
    3. ' return' → logprob: -1.7667217254638672
    4. '(' → logprob: -3.766721725463867
    5. ' (' → logprob: -4.141721725463867
    6. '(top' → logprob: -6.016721725463867
    7. '(bottom' → logprob: -6.766721725463867
    8. ')' → logprob: -7.516721725463867
    9. '(return' → logprob: -7.516721725463867
    10. '       ' → logprob: -7.766721725463867

Token 194: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5346649885177612
    2. 'return' → logprob: -1.2846649885177612
    3. ' return' → logprob: -2.409665107727051
    4. '(' → logprob: -4.159665107727051
    5. ' (' → logprob: -4.534665107727051
    6. '(bottom' → logprob: -4.534665107727051
    7. '(top' → logprob: -4.909665107727051
    8. '       ' → logprob: -6.159665107727051
    9. '(return' → logprob: -7.659665107727051
    10. 'bottom' → logprob: -9.15966510772705

Token 195: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07728327065706253
    2. '(top' → logprob: -3.3272833824157715
    3. '(bottom' → logprob: -4.0772833824157715
    4. ' return' → logprob: -4.7022833824157715
    5. '(' → logprob: -5.0772833824157715
    6. '(e' → logprob: -6.2022833824157715
    7. 'bottom' → logprob: -6.5772833824157715
    8. '   ' → logprob: -6.8272833824157715
    9. '(return' → logprob: -7.3272833824157715
    10. 'top' → logprob: -7.3272833824157715

Token 196: ' top' (ID: 2344)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.3534015119075775
    2. 'east' → logprob: -1.7284015417099
    3. 'return' → logprob: -2.7284014225006104
    4. ' east' → logprob: -3.8534014225006104
    5. 'top' → logprob: -4.3534016609191895
    6. '(top' → logprob: -4.9784016609191895
    7. 'bottom' → logprob: -5.7284016609191895
    8. '(' → logprob: -5.9784016609191895
    9. '(bottom' → logprob: -6.2284016609191895
    10. ' return' → logprob: -6.2284016609191895

Token 197: ' becomes' (ID: 14081)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.057657405734062195
    2. ' becomes' → logprob: -3.682657480239868
    3. '=' → logprob: -3.807657480239868
    4. 'be' → logprob: -4.807657241821289
    5. ' ,' → logprob: -8.307657241821289
    6. '<|end|>' → logprob: -9.307657241821289
    7. ' =' → logprob: -9.807657241821289
    8. 'bec' → logprob: -9.932657241821289
    9. ')' → logprob: -11.057657241821289
    10. ',
' → logprob: -11.557657241821289

Token 198: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.014409232884645462
    2. ' east' → logprob: -4.264409065246582
    3. 'bottom' → logprob: -9.014409065246582
    4. 'e' → logprob: -9.639409065246582
    5. '   ' → logprob: -10.514409065246582
    6. '7' → logprob: -11.139409065246582
    7. ' bottom' → logprob: -12.139409065246582
    8. ' ' → logprob: -13.264409065246582
    9. 'seven' → logprob: -13.764409065246582
    10. 'ea' → logprob: -13.764409065246582

Token 199: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06712296605110168
    2. 'return' → logprob: -3.4421229362487793
    3. '       ' → logprob: -4.317122936248779
    4. '   ' → logprob: -4.942122936248779
    5. ',
' → logprob: -4.942122936248779
    6. ' return' → logprob: -5.942122936248779
    7. '(' → logprob: -7.317122936248779
    8. ')' → logprob: -7.817122936248779
    9. '
' → logprob: -8.317123413085938
    10. ' (' → logprob: -8.567123413085938

Token 200: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.685916006565094
    2. '   ' → logprob: -1.5609159469604492
    3. ' return' → logprob: -1.8109159469604492
    4. ',' → logprob: -2.935915946960449
    5. '(' → logprob: -3.185915946960449
    6. ' (' → logprob: -4.435915946960449
    7. '       ' → logprob: -4.810915946960449
    8. ')' → logprob: -5.185915946960449
    9. '(e' → logprob: -7.310915946960449
    10. ',
' → logprob: -8.43591594696045

Token 201: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.13072024285793304
    2. ' return' → logprob: -2.7557201385498047
    3. 'bottom' → logprob: -4.005720138549805
    4. 'east' → logprob: -4.130720138549805
    5. ' east' → logprob: -4.255720138549805
    6. ' bottom' → logprob: -5.505720138549805
    7. '       ' → logprob: -6.380720138549805
    8. '   ' → logprob: -6.380720138549805
    9. 'top' → logprob: -7.255720138549805
    10. '(' → logprob: -7.255720138549805

Token 202: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.16335012018680573
    2. 'bottom' → logprob: -2.2883501052856445
    3. 'top' → logprob: -3.4133501052856445
    4. ' east' → logprob: -4.7883501052856445
    5. '(e' → logprob: -6.0383501052856445
    6. '(bottom' → logprob: -6.2883501052856445
    7. 'return' → logprob: -6.4133501052856445
    8. ' bottom' → logprob: -7.1633501052856445
    9. '(top' → logprob: -7.9133501052856445
    10. '(' → logprob: -8.038350105285645

Token 203: ' becomes' (ID: 14081)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001835141738411039
    2. ' ,' → logprob: -8.75018310546875
    3. ')' → logprob: -11.75018310546875
    4. ',s' → logprob: -11.87518310546875
    5. ',
' → logprob: -13.12518310546875
    6. 's' → logprob: -13.37518310546875
    7. '<|end|>' → logprob: -13.75018310546875
    8. ' becomes' → logprob: -13.87518310546875
    9. ''s' → logprob: -14.75018310546875
    10. 'return' → logprob: -14.75018310546875

Token 204: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0009395699598826468
    2. ' bottom' → logprob: -7.00093936920166
    3. '7' → logprob: -11.25093936920166
    4. 'top' → logprob: -11.62593936920166
    5. '(bottom' → logprob: -12.87593936920166
    6. 'north' → logprob: -13.25093936920166
    7. '   ' → logprob: -14.75093936920166
    8. 'west' → logprob: -15.12593936920166
    9. 'south' → logprob: -15.12593936920166
    10. ' ' → logprob: -15.37593936920166

Token 205: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.43965011835098267
    2. '(' → logprob: -2.314650058746338
    3. ' return' → logprob: -2.439650058746338
    4. ',' → logprob: -2.689650058746338
    5. '   ' → logprob: -3.064650058746338
    6. '       ' → logprob: -3.564650058746338
    7. ' (' → logprob: -3.939650058746338
    8. ')' → logprob: -5.439650058746338
    9. '```' → logprob: -7.314650058746338
    10. '(bottom' → logprob: -7.439650058746338

Token 206: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.1489940881729126
    2. 'return' → logprob: -1.1489940881729126
    3. '   ' → logprob: -1.3989940881729126
    4. '       ' → logprob: -2.523993968963623
    5. '(' → logprob: -4.148993968963623
    6. ' (' → logprob: -4.523993968963623
    7. ',' → logprob: -4.773993968963623
    8. ' bottom' → logprob: -6.023993968963623
    9. 'bottom' → logprob: -7.648993968963623
    10. '(bottom' → logprob: -7.648993968963623

Token 207: ' #' (ID: 1069)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.01668030396103859
    2. '(bottom' → logprob: -5.0166802406311035
    3. ' bottom' → logprob: -5.2666802406311035
    4. 'return' → logprob: -5.5166802406311035
    5. '(' → logprob: -7.7666802406311035
    6. 'top' → logprob: -9.391680717468262
    7. ',' → logprob: -9.516680717468262
    8. ' return' → logprob: -9.766680717468262
    9. '   ' → logprob: -10.766680717468262
    10. '7' → logprob: -10.891680717468262

Token 208: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.07263997942209244
    2. ' bottom' → logprob: -2.6976399421691895
    3. '(bottom' → logprob: -6.1976399421691895
    4. 'top' → logprob: -8.322640419006348
    5. '   ' → logprob: -8.572640419006348
    6. 'return' → logprob: -9.322640419006348
    7. 'east' → logprob: -9.822640419006348
    8. ' (' → logprob: -11.072640419006348
    9. ' east' → logprob: -11.072640419006348
    10. '(' → logprob: -11.197640419006348

Token 209: ' becomes' (ID: 14081)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19616876542568207
    2. '=' → logprob: -1.9461687803268433
    3. ' becomes' → logprob: -3.5711686611175537
    4. ' =' → logprob: -5.071168899536133
    5. ' ,' → logprob: -7.196168899536133
    6. 'be' → logprob: -10.071168899536133
    7. ')' → logprob: -10.071168899536133
    8. ' became' → logprob: -11.196168899536133
    9. '<|end|>' → logprob: -11.321168899536133
    10. ' become' → logprob: -12.071168899536133

Token 210: ' west' (ID: 14078)
  Prédit: 'west'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'west' → logprob: -0.0005862758844159544
    2. 'north' → logprob: -8.00058650970459
    3. 'bottom' → logprob: -8.50058650970459
    4. ' west' → logprob: -10.37558650970459
    5. 'south' → logprob: -11.62558650970459
    6. '7' → logprob: -11.87558650970459
    7. 'top' → logprob: -16.625585556030273
    8. 'down' → logprob: -16.625585556030273
    9. '```' → logprob: -16.875585556030273
    10. 'east' → logprob: -17.000585556030273

Token 211: '
' (ID: 198)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4231041669845581
    2. 'return' → logprob: -1.173104166984558
    3. '   ' → logprob: -3.6731042861938477
    4. '       ' → logprob: -4.923104286193848
    5. '(' → logprob: -6.548104286193848
    6. ' (' → logprob: -7.298104286193848
    7. ')' → logprob: -7.673104286193848
    8. ',' → logprob: -9.798104286193848
    9. '	return' → logprob: -9.798104286193848
    10. ' =' → logprob: -9.798104286193848

Token 212: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3438910245895386
    2. ' return' → logprob: -1.8438910245895386
    3. 'return' → logprob: -2.093891143798828
    4. '       ' → logprob: -4.718891143798828
    5. ')' → logprob: -8.718891143798828
    6. ' =' → logprob: -8.968891143798828
    7. '(' → logprob: -9.093891143798828
    8. '=' → logprob: -9.343891143798828
    9. ' (' → logprob: -10.343891143798828
    10. '```' → logprob: -10.343891143798828

Token 213: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04369950667023659
    2. ' return' → logprob: -3.1686995029449463
    3. '   ' → logprob: -7.543699741363525
    4. 'bottom' → logprob: -9.043699264526367
    5. ' bottom' → logprob: -11.168699264526367
    6. 'top' → logprob: -11.543699264526367
    7. 'east' → logprob: -11.668699264526367
    8. ' east' → logprob: -12.668699264526367
    9. '       ' → logprob: -12.668699264526367
    10. 'eturn' → logprob: -13.043699264526367

Token 214: ' west' (ID: 14078)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.04207850247621536
    2. ' bottom' → logprob: -3.6670784950256348
    3. 'top' → logprob: -4.417078495025635
    4. 'south' → logprob: -6.167078495025635
    5. 'north' → logprob: -7.792078495025635
    6. 'west' → logprob: -7.917078495025635
    7. '(bottom' → logprob: -8.292078971862793
    8. ' south' → logprob: -8.542078971862793
    9. ' west' → logprob: -9.542078971862793
    10. ' top' → logprob: -9.667078971862793

Token 215: ' becomes' (ID: 14081)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2774959206581116
    2. ' becomes' → logprob: -1.9024958610534668
    3. ',' → logprob: -3.277495861053467
    4. ' =' → logprob: -3.527495861053467
    5. ')' → logprob: -4.152495861053467
    6. 'be' → logprob: -4.652495861053467
    7. ' ' → logprob: -8.902496337890625
    8. '),' → logprob: -9.152496337890625
    9. ' ,' → logprob: -9.152496337890625
    10. '```' → logprob: -9.527496337890625

Token 216: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0021451469510793686
    2. 'bottom' → logprob: -6.627145290374756
    3. ' top' → logprob: -7.127145290374756
    4. ' bottom' → logprob: -11.877144813537598
    5. '7' → logprob: -12.127144813537598
    6. 'north' → logprob: -13.252144813537598
    7. '(top' → logprob: -13.877144813537598
    8. '   ' → logprob: -14.877144813537598
    9. '	top' → logprob: -15.377144813537598
    10. ' ' → logprob: -15.877144813537598

Token 217: '
' (ID: 198)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.43495678901672363
    2. 'return' → logprob: -1.4349567890167236
    3. '   ' → logprob: -2.1849567890167236
    4. '       ' → logprob: -6.3099565505981445
    5. '(' → logprob: -9.559956550598145
    6. '	return' → logprob: -9.559956550598145
    7. ')' → logprob: -9.809956550598145
    8. '```' → logprob: -10.559956550598145
    9. ' (' → logprob: -10.684956550598145
    10. '(return' → logprob: -11.559956550598145

Token 218: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2046709954738617
    2. ' return' → logprob: -1.704671025276184
    3. '   ' → logprob: -6.2046709060668945
    4. ')' → logprob: -7.2046709060668945
    5. '(' → logprob: -7.9546709060668945
    6. ' (' → logprob: -10.329670906066895
    7. '(return' → logprob: -10.329670906066895
    8. '	return' → logprob: -10.829670906066895
    9. '```' → logprob: -11.329670906066895
    10. 'eturn' → logprob: -11.329670906066895

Token 219: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07898430526256561
    2. ' return' → logprob: -2.578984260559082
    3. '   ' → logprob: -9.328984260559082
    4. 'eturn' → logprob: -13.203984260559082
    5. '	return' → logprob: -13.328984260559082
    6. ')' → logprob: -13.703984260559082
    7. '       ' → logprob: -14.328984260559082
    8. ')return' → logprob: -15.703984260559082
    9. '(' → logprob: -16.3289852142334
    10. ' (' → logprob: -16.4539852142334

Token 220: ' (' (ID: 350)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0003364158037584275
    2. '(top' → logprob: -8.250336647033691
    3. '(bottom' → logprob: -10.500336647033691
    4. '(' → logprob: -10.625336647033691
    5. ' (' → logprob: -10.750336647033691
    6. '(s' → logprob: -14.000336647033691
    7. '(n' → logprob: -15.250336647033691
    8. '(E' → logprob: -15.625336647033691
    9. '((' → logprob: -15.875336647033691
    10. '```' → logprob: -16.750335693359375

Token 221: 'east' (ID: 157488)
  Prédit: 'east'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.0009151478880085051
    2. ' east' → logprob: -7.000915050506592
    3. '7' → logprob: -13.62591552734375
    4. '   ' → logprob: -14.00091552734375
    5. 'e' → logprob: -14.50091552734375
    6. ' ' → logprob: -14.50091552734375
    7. 'ea' → logprob: -15.00091552734375
    8. 'eat' → logprob: -16.87591552734375
    9. '6' → logprob: -17.25091552734375
    10. '  ' → logprob: -17.62591552734375

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.057743949990254e-05
    2. ',s' → logprob: -11.375020980834961
    3. ' ,' → logprob: -12.000020980834961
    4. ',
' → logprob: -13.375020980834961
    5. 's' → logprob: -15.125020980834961
    6. ')' → logprob: -15.625020980834961
    7. '`,' → logprob: -16.25002098083496
    8. ',

' → logprob: -16.37502098083496
    9. ',)' → logprob: -16.37502098083496
    10. '),' → logprob: -16.56252098083496

Token 223: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.04862699285149574
    2. ' south' → logprob: -3.0486268997192383
    3. 's' → logprob: -10.173626899719238
    4. 'sou' → logprob: -14.673626899719238
    5. '<|end|>' → logprob: -14.923626899719238
    6. '   ' → logprob: -15.423626899719238
    7. ' ' → logprob: -15.923626899719238
    8. '	s' → logprob: -16.798627853393555
    9. '
' → logprob: -16.798627853393555
    10. ',' → logprob: -17.048627853393555

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.35706390615087e-05
    2. ' ,' → logprob: -11.000033378601074
    3. ')' → logprob: -12.125033378601074
    4. 'top' → logprob: -12.375033378601074
    5. ' top' → logprob: -12.875033378601074
    6. '),' → logprob: -13.625033378601074
    7. 'bottom' → logprob: -13.875033378601074
    8. ' bottom' → logprob: -14.375033378601074
    9. ',
' → logprob: -14.500033378601074
    10. '[top' → logprob: -14.500033378601074

Token 225: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0001427538663847372
    2. ' bottom' → logprob: -8.875143051147461
    3. '7' → logprob: -13.000143051147461
    4. 'bot' → logprob: -15.000143051147461
    5. '(bottom' → logprob: -16.50014305114746
    6. 'top' → logprob: -16.62514305114746
    7. 'west' → logprob: -17.62514305114746
    8. '6' → logprob: -18.25014305114746
    9. '.bottom' → logprob: -18.37514305114746
    10. ' ' → logprob: -18.37514305114746

Token 226: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9743012671824545e-05
    2. ')
' → logprob: -11.000020027160645
    3. '   ' → logprob: -13.500020027160645
    4. '}' → logprob: -14.000020027160645
    5. ' )' → logprob: -14.375020027160645
    6. ')}' → logprob: -16.500019073486328
    7. ')

' → logprob: -18.125019073486328
    8. ')
' → logprob: -19.250019073486328
    9. ' ' → logprob: -19.500019073486328
    10. ')`' → logprob: -19.750019073486328

Token 227: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.039256419986486435
    2. '<|end|>' → logprob: -4.039256572723389
    3. ' ' → logprob: -4.914256572723389
    4. ':' → logprob: -5.664256572723389
    5. 'n' → logprob: -6.414256572723389
    6. '\n' → logprob: -6.789256572723389
    7. '   ' → logprob: -7.289256572723389
    8. 'e' → logprob: -7.414256572723389
    9. '\' → logprob: -7.539256572723389
    10. 'b' → logprob: -7.539256572723389

Token 228: ' main' (ID: 2758)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2751207649707794
    2. ' main' → logprob: -2.025120735168457
    3. 'd' → logprob: -2.775120735168457
    4. 'main' → logprob: -4.025120735168457
    5. ' solve' → logprob: -4.400120735168457
    6. 'solve' → logprob: -5.525120735168457
    7. ' shortest' → logprob: -6.150120735168457
    8. ' a' → logprob: -6.400120735168457
    9. 'a' → logprob: -6.525120735168457
    10. ' ast' → logprob: -6.900120735168457

Token 229: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03429801017045975
    2. '(' → logprob: -3.4092979431152344
    3. '(:' → logprob: -7.659297943115234
    4. ':' → logprob: -9.784297943115234
    5. '(":' → logprob: -9.909297943115234
    6. '()' → logprob: -10.159297943115234
    7. ' ():' → logprob: -11.659297943115234
    8. '(':' → logprob: -12.034297943115234
    9. '():
' → logprob: -12.034297943115234
    10. '_' → logprob: -12.534297943115234

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03824792057275772
    2. '    ' → logprob: -3.66324782371521
    3. ' import' → logprob: -5.413248062133789
    4. ' input' → logprob: -6.038248062133789
    5. 'n' → logprob: -7.038248062133789
    6. 'import' → logprob: -7.413248062133789
    7. ' n' → logprob: -7.663248062133789
    8. ' readline' → logprob: -7.663248062133789
    9. ' line' → logprob: -7.913248062133789
    10. ' code' → logprob: -7.913248062133789

Token 231: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.3213176727294922
    2. 'n' → logprob: -1.5713176727294922
    3. 'input' (adapté à ' input') → logprob: -1.5713176727294922
    4. '   ' → logprob: -1.9463176727294922
    5. ' n' → logprob: -2.196317672729492
    6. 'import' → logprob: -3.196317672729492
    7. ' import' → logprob: -3.946317672729492
    8. ' sys' → logprob: -7.196317672729492
    9. '#' → logprob: -7.571317672729492
    10. 'N' → logprob: -7.821317672729492

Token 232: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05265893042087555
    2. '_data' → logprob: -3.302659034729004
    3. '_lines' → logprob: -4.802659034729004
    4. '_line' → logprob: -5.552659034729004
    5. '().' → logprob: -6.552659034729004
    6. '_' → logprob: -8.177659034729004
    7. ' =' → logprob: -8.552659034729004
    8. 'data' → logprob: -8.677659034729004
    9. 's' → logprob: -9.802659034729004
    10. '_text' → logprob: -10.052659034729004

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7050605416297913
    2. '=' → logprob: -1.2050604820251465
    3. '()' → logprob: -1.5800604820251465
    4. '   ' → logprob: -9.830060958862305
    5. '=[]' → logprob: -9.955060958862305
    6. '[]' → logprob: -10.330060958862305
    7. '(' → logprob: -10.455060958862305
    8. '[:]' → logprob: -10.580060958862305
    9. '[' → logprob: -10.830060958862305
    10. '=sys' → logprob: -11.455060958862305

Token 234: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.38688141107559204
    2. ' sys' → logprob: -1.1368813514709473
    3. '[' → logprob: -12.136881828308105
    4. ' [' → logprob: -12.636881828308105
    5. '(sys' → logprob: -14.386881828308105
    6. '	sys' → logprob: -14.386881828308105
    7. '=sys' → logprob: -14.761881828308105
    8. 'list' → logprob: -16.01188087463379
    9. '   ' → logprob: -17.13688087463379
    10. ' ' → logprob: -17.26188087463379

Token 235: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.014293377287685871
    2. '.' → logprob: -4.264293193817139
    3. '.argv' → logprob: -9.514293670654297
    4. ' .' → logprob: -10.389293670654297
    5. '.stdout' → logprob: -10.889293670654297
    6. '.std' → logprob: -12.889293670654297
    7. '.readline' → logprob: -13.139293670654297
    8. ' stdin' → logprob: -14.764293670654297
    9. '.input' → logprob: -14.764293670654297
    10. 'stdin' → logprob: -14.889293670654297

Token 236: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.4480687081813812
    2. '.readlines' → logprob: -1.1980687379837036
    3. '.read' → logprob: -2.948068618774414
    4. '.' → logprob: -5.448068618774414
    5. 'read' → logprob: -5.948068618774414
    6. '_read' → logprob: -13.323068618774414
    7. ' .' → logprob: -13.573068618774414
    8. ' readline' → logprob: -14.073068618774414
    9. '```' → logprob: -14.323068618774414
    10. '.Read' → logprob: -14.698068618774414

Token 237: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10025477409362793
    2. '().' → logprob: -2.350254774093628
    3. '(' → logprob: -10.225255012512207
    4. ' ()' → logprob: -12.850255012512207
    5. '()`' → logprob: -13.225255012512207
    6. '()
' → logprob: -13.475255012512207
    7. '())' → logprob: -13.850255012512207
    8. '（）' → logprob: -13.975255012512207
    9. '()]' → logprob: -14.225255012512207
    10. '()\' → logprob: -14.225255012512207

Token 238: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.07889033854007721
    2. 'split' → logprob: -2.578890323638916
    3. 'rstrip' → logprob: -14.578890800476074
    4. ' strip' → logprob: -17.703889846801758
    5. 'decode' → logprob: -17.828889846801758
    6. ' split' → logprob: -17.953889846801758
    7. '(split' → logprob: -18.578889846801758
    8. '(strip' → logprob: -19.453889846801758
    9. 'replace' → logprob: -19.953889846801758
    10. 'str' → logprob: -20.203889846801758

Token 239: 'lines' (ID: 10105)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47579824924468994
    2. 'lines' → logprob: -0.9757982492446899
    3. '('\' → logprob: -6.4757981300354
    4. '()\' → logprob: -9.100798606872559
    5. '()[' → logprob: -10.600798606872559
    6. '()
' → logprob: -10.725798606872559
    7. '(' → logprob: -11.975798606872559
    8. 'line' → logprob: -12.350798606872559
    9. '('' → logprob: -12.350798606872559
    10. '()

' → logprob: -13.350798606872559

Token 240: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1637164789135568e-05
    2. '()
' → logprob: -11.500011444091797
    3. '())' → logprob: -14.750011444091797
    4. '(' → logprob: -15.000011444091797
    5. ' ()' → logprob: -15.000011444091797
    6. '()]' → logprob: -15.875011444091797
    7. '()

' → logprob: -16.625011444091797
    8. '()`' → logprob: -16.750011444091797
    9. '()[' → logprob: -17.250011444091797
    10. '（）' → logprob: -17.875011444091797

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012543438002467155
    2. ' n' → logprob: -5.012543201446533
    3. 'n' → logprob: -5.512543201446533
    4. 'index' → logprob: -7.387543201446533
    5. 'idx' → logprob: -8.012543678283691
    6. ' idx' → logprob: -8.262543678283691
    7. ' index' → logprob: -8.762543678283691
    8. '    
' → logprob: -9.762543678283691
    9. '    ' → logprob: -9.762543678283691
    10. 'i' → logprob: -10.262543678283691

Token 242: ' i' (ID: 575)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2078005075454712
    2. ' n' → logprob: -1.9578005075454712
    3. '   ' → logprob: -3.7078003883361816
    4. 'grid' → logprob: -4.957800388336182
    5. 'idx' → logprob: -6.207800388336182
    6. 'h' → logprob: -6.332800388336182
    7. ' grid' → logprob: -6.457800388336182
    8. 'q' → logprob: -6.582800388336182
    9. 'N' → logprob: -6.582800388336182
    10. 't' → logprob: -6.832800388336182

Token 243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5810865759849548
    2. ' =' → logprob: -0.8310865759849548
    3. 'nd' → logprob: -5.5810866355896
    4. 'n' → logprob: -6.9560866355896
    5. 'f' → logprob: -8.081086158752441
    6. 'dx' → logprob: -9.831086158752441
    7. 'ndice' → logprob: -11.456086158752441
    8. 'x' → logprob: -11.831086158752441
    9. 'nt' → logprob: -12.206086158752441
    10. 'd' → logprob: -12.331086158752441

Token 244: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022034284193068743
    2. '1' → logprob: -6.752203464508057
    3. ' ' → logprob: -6.877203464508057
    4. '2' → logprob: -13.627202987670898
    5. '   ' → logprob: -14.877202987670898
    6. '```' → logprob: -17.1272029876709
    7. '  ' → logprob: -17.5022029876709
    8. 'int' → logprob: -17.6897029876709
    9. '3' → logprob: -18.0022029876709
    10. '=' → logprob: -18.6897029876709

Token 245: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020019153598695993
    2. '1' → logprob: -6.252001762390137
    3. ' ' → logprob: -9.752001762390137
    4. '2' → logprob: -11.127001762390137
    5. '3' → logprob: -15.814501762390137
    6. '   ' → logprob: -16.502002716064453
    7. 'int' → logprob: -16.814502716064453
    8. '```' → logprob: -17.252002716064453
    9. '-' → logprob: -17.377002716064453
    10. 'len' → logprob: -17.502002716064453

Token 246: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2749683856964111
    2. '   ' → logprob: -1.2749683856964111
    3. 'while' → logprob: -1.3999683856964111
    4. ' while' → logprob: -2.149968385696411
    5. '	while' → logprob: -3.149968385696411
    6. '<|end|>' → logprob: -4.524968147277832
    7. '    ' → logprob: -4.649968147277832
    8. '    
' → logprob: -5.024968147277832
    9. ' 
' → logprob: -6.524968147277832
    10. ' ' → logprob: -6.649968147277832

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07321392744779587
    2. ' while' → logprob: -3.698213815689087
    3. '
' → logprob: -3.823213815689087
    4. 'while' → logprob: -4.073214054107666
    5. '    
' → logprob: -5.573214054107666
    6. '	while' → logprob: -6.698214054107666
    7. 'n' → logprob: -7.698214054107666
    8. '```' → logprob: -8.448213577270508
    9. ' 
' → logprob: -8.698213577270508
    10. '    ' → logprob: -8.698213577270508

Token 248: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.1454855501651764
    2. '   ' → logprob: -2.6454856395721436
    3. ' while' → logprob: -2.7704856395721436
    4. 'n' → logprob: -7.1454854011535645
    5. '	while' → logprob: -7.5204854011535645
    6. '```' → logprob: -8.270485877990723
    7. '
' → logprob: -9.395485877990723
    8. 'While' → logprob: -10.520485877990723
    9. '    
' → logprob: -11.020485877990723
    10. ' ' → logprob: -11.145485877990723

Token 249: ' True' (ID: 6432)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.003446349408477545
    2. 'i' → logprob: -5.753446578979492
    3. ' True' → logprob: -8.378446578979492
    4. 'True' → logprob: -10.753446578979492
    5. ' ' → logprob: -11.128446578979492
    6. '   ' → logprob: -13.378446578979492
    7. '    ' → logprob: -14.753446578979492
    8. '  ' → logprob: -15.128446578979492
    9. '	i' → logprob: -15.253446578979492
    10. ' ' → logprob: -15.628446578979492

Token 250: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003933425527065992
    2. ':
' → logprob: -5.628933429718018
    3. '   ' → logprob: -8.75393295288086
    4. '       ' → logprob: -9.12893295288086
    5. ' and' → logprob: -10.75393295288086
    6. ',' → logprob: -10.75393295288086
    7. '):' → logprob: -12.25393295288086
    8. ' :' → logprob: -12.50393295288086
    9. '.' → logprob: -12.87893295288086
    10. '<|end|>' → logprob: -13.00393295288086

Token 251: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5765163898468018
    2. '       ' → logprob: -0.9515163898468018
    3. ' if' → logprob: -3.0765163898468018
    4. '    ' → logprob: -5.951516151428223
    5. 'if' → logprob: -5.951516151428223
    6. ' ' → logprob: -8.326516151428223
    7. '    
' → logprob: -9.076516151428223
    8. '  ' → logprob: -9.701516151428223
    9. '<|end|>' → logprob: -10.201516151428223
    10. 'n' → logprob: -10.576516151428223

Token 252: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2962736487388611
    2. ' line' → logprob: -2.046273708343506
    3. 'if' (adapté à ' if') → logprob: -2.796273708343506
    4. ' n' → logprob: -3.671273708343506
    5. '   ' → logprob: -3.921273708343506
    6. 'line' → logprob: -4.671273708343506
    7. 'n' → logprob: -4.671273708343506
    8. '       ' → logprob: -6.546273708343506
    9. ' l' → logprob: -8.546273231506348
    10. ' try' → logprob: -8.796273231506348

Token 253: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0031871015671640635
    2. 'i' → logprob: -5.75318717956543
    3. ' ' → logprob: -11.75318717956543
    4. ' ' → logprob: -14.37818717956543
    5. ' not' → logprob: -14.87818717956543
    6. '	i' → logprob: -15.12818717956543
    7. '   ' → logprob: -15.25318717956543
    8. '(i' → logprob: -17.12818717956543
    9. '  ' → logprob: -17.25318717956543
    10. 'not' → logprob: -17.87818717956543

Token 254: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.048665374517440796
    2. '>=' → logprob: -3.0486652851104736
    3. ' ==' → logprob: -10.048665046691895
    4. ' <' → logprob: -11.173665046691895
    5. '==' → logprob: -11.298665046691895
    6. ')>=' → logprob: -12.798665046691895
    7. ']>=' → logprob: -13.423665046691895
    8. ' ' → logprob: -13.423665046691895
    9. '   ' → logprob: -14.423665046691895
    10. '<' → logprob: -14.548665046691895

Token 255: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0001234428636962548
    2. ' len' → logprob: -9.000123023986816
    3. '(len' → logprob: -19.375123977661133
    4. '=len' → logprob: -19.750123977661133
    5. '	len' → logprob: -19.750123977661133
    6. '<len' → logprob: -19.875123977661133
    7. 'length' → logprob: -20.625123977661133
    8. '[len' → logprob: -20.625123977661133
    9. ',len' → logprob: -20.750123977661133
    10. '   ' → logprob: -22.125123977661133

Token 256: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005300519522279501
    2. 'input' → logprob: -5.255300521850586
    3. ' input' → logprob: -9.630300521850586
    4. '(' → logprob: -14.255300521850586
    5. '=input' → logprob: -15.880300521850586
    6. ' (' → logprob: -16.130300521850586
    7. '_input' → logprob: -17.130300521850586
    8. ',input' → logprob: -17.630300521850586
    9. '<input' → logprob: -17.755300521850586
    10. 'Input' → logprob: -18.505300521850586

Token 257: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.875
    3. 'lines' → logprob: -16.25
    4. ')' → logprob: -17.0
    5. '```' → logprob: -18.0
    6. '_LINES' → logprob: -18.125
    7. '_tokens' → logprob: -18.25
    8. '_)' → logprob: -19.125
    9. ')_' → logprob: -19.25
    10. 'Lines' → logprob: -19.25

Token 258: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.08835494518280029
    2. ':' → logprob: -3.21335506439209
    3. '):
' → logprob: -4.08835506439209
    4. ':
' → logprob: -4.46335506439209
    5. '):' → logprob: -4.83835506439209
    6. ')' → logprob: -5.08835506439209
    7. '   ' → logprob: -6.58835506439209
    8. '       ' → logprob: -8.33835506439209
    9. 'or' → logprob: -9.08835506439209
    10. ' and' → logprob: -9.58835506439209

Token 259: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2534363865852356
    2. '       ' → logprob: -1.5034363269805908
    3. '   ' → logprob: -6.75343656539917
    4. ' ' → logprob: -9.253436088562012
    5. ' break' → logprob: -9.753436088562012
    6. '     ' → logprob: -10.378436088562012
    7. ':' → logprob: -10.378436088562012
    8. '          ' → logprob: -11.253436088562012
    9. 'break' → logprob: -11.378436088562012
    10. '
' → logprob: -11.628436088562012

Token 260: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6986222863197327
    2. 'break' (adapté à ' break') → logprob: -1.198622226715088
    3. ' break' → logprob: -2.198622226715088
    4. '       ' → logprob: -2.823622226715088
    5. 'return' → logprob: -3.573622226715088
    6. ' return' → logprob: -6.573622226715088
    7. '   ' → logprob: -7.448622226715088
    8. '	break' → logprob: -7.448622226715088
    9. '
' → logprob: -9.948622703552246
    10. '               ' → logprob: -10.323622703552246

Token 261: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016440769657492638
    2. '        
' → logprob: -4.6414408683776855
    3. '  
' → logprob: -6.3914408683776855
    4. '    
' → logprob: -6.6414408683776855
    5. '   ' → logprob: -6.8914408683776855
    6. '\n' → logprob: -7.2664408683776855
    7. '<|end|>' → logprob: -7.2664408683776855
    8. '
' → logprob: -7.6414408683776855
    9. ' 
' → logprob: -8.766440391540527
    10. '```' → logprob: -9.141440391540527

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06491239368915558
    2. '
' → logprob: -3.0649123191833496
    3. '        
' → logprob: -4.56491231918335
    4. '  
' → logprob: -6.56491231918335
    5. '<|end|>' → logprob: -6.56491231918335
    6. '   ' → logprob: -7.31491231918335
    7. '    
' → logprob: -7.31491231918335
    8. '\n' → logprob: -7.56491231918335
    9. ' 
' → logprob: -7.93991231918335
    10. ' ' → logprob: -8.189912796020508

Token 263: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.1576400995254517
    2. ' n' → logprob: -1.2826400995254517
    3. '       ' → logprob: -1.2826400995254517
    4. 'n' → logprob: -2.657639980316162
    5. 'line' (adapté à ' line') → logprob: -3.157639980316162
    6. '   ' → logprob: -4.532639980316162
    7. '        
' → logprob: -6.282639980316162
    8. ' 
' → logprob: -7.032639980316162
    9. ' num' → logprob: -7.407639980316162
    10. ' try' → logprob: -7.532639980316162

Token 264: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024775585625320673
    2. '=' → logprob: -6.002477645874023
    3. '=line' → logprob: -14.002477645874023
    4. 's' → logprob: -14.877477645874023
    5. ' =
' → logprob: -15.252477645874023
    6. '   ' → logprob: -15.252477645874023
    7. ' ' → logprob: -16.002477645874023
    8. '    ' → logprob: -17.252477645874023
    9. '_tokens' → logprob: -17.377477645874023
    10. ')' → logprob: -17.752477645874023

Token 265: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10020667314529419
    2. ' input' → logprob: -2.3502066135406494
    3. 'line' → logprob: -17.47520637512207
    4. ' ' → logprob: -17.85020637512207
    5. '(input' → logprob: -19.10020637512207
    6. 'import' → logprob: -20.10020637512207
    7. '=input' → logprob: -20.10020637512207
    8. '<input' → logprob: -20.47520637512207
    9. 'output' → logprob: -20.47520637512207
    10. ' line' → logprob: -21.22520637512207

Token 266: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.8789383830153383e-05
    2. '_line' → logprob: -11.000019073486328
    3. '_' → logprob: -14.125019073486328
    4. 'lines' → logprob: -14.250019073486328
    5. 'Lines' → logprob: -15.125019073486328
    6. '_tokens' → logprob: -15.875019073486328
    7. '()' → logprob: -16.250019073486328
    8. '("_' → logprob: -17.250019073486328
    9. '(_' → logprob: -17.250019073486328
    10. '_LINES' → logprob: -17.500019073486328

Token 267: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.3120038501219824e-05
    2. '[' → logprob: -9.875053405761719
    3. ' [' → logprob: -14.750053405761719
    4. '\[' → logprob: -15.125053405761719
    5. '```' → logprob: -15.625053405761719
    6. '   ' → logprob: -15.750053405761719
    7. '[
' → logprob: -16.12505340576172
    8. '[s' → logprob: -16.25005340576172
    9. 's' → logprob: -16.37505340576172
    10. '.strip' → logprob: -16.87505340576172

Token 268: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.3897772431373596
    2. ']' → logprob: -1.1397771835327148
    3. ']
' → logprob: -5.889777183532715
    4. '.strip' → logprob: -9.514777183532715
    5. ' ].' → logprob: -10.889777183532715
    6. ').' → logprob: -11.639777183532715
    7. ')' → logprob: -12.014777183532715
    8. '.split' → logprob: -12.514777183532715
    9. ' ]' → logprob: -12.514777183532715
    10. '];' → logprob: -12.764777183532715

Token 269: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -9.627176768844947e-05
    2. 'split' → logprob: -9.250096321105957
    3. 'rstrip' → logprob: -15.750096321105957
    4. ' strip' → logprob: -19.12509536743164
    5. '.strip' → logprob: -21.62509536743164
    6. '_strip' → logprob: -21.87509536743164
    7. 'startswith' → logprob: -22.00009536743164
    8. '(strip' → logprob: -23.25009536743164
    9. '-strip' → logprob: -23.75009536743164
    10. 'replace' → logprob: -24.25009536743164

Token 270: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014170442707836628
    2. '()
' → logprob: -4.2641706466674805
    3. '       ' → logprob: -13.26417064666748
    4. '()

' → logprob: -13.26417064666748
    5. '()\' → logprob: -13.63917064666748
    6. '())' → logprob: -14.38917064666748
    7. '()`' → logprob: -15.01417064666748
    8. ')' → logprob: -15.01417064666748
    9. '();' → logprob: -15.13917064666748
    10. '():
' → logprob: -15.38917064666748

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020244387909770012
    2. '<|end|>' → logprob: -4.270244598388672
    3. 'if' → logprob: -6.395244598388672
    4. '        
' → logprob: -6.645244598388672
    5. '<|end|>' → logprob: -6.895244598388672
    6. ' if' → logprob: -6.895244598388672
    7. '\' → logprob: -8.395244598388672
    8. '
' → logprob: -9.020244598388672
    9. '   ' → logprob: -9.270244598388672
    10. 'i' → logprob: -9.270244598388672

Token 272: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2575540840625763
    2. 'i' → logprob: -1.507554054260254
    3. ' if' → logprob: -5.507554054260254
    4. '       ' → logprob: -6.507554054260254
    5. '   ' → logprob: -10.382554054260254
    6. ' i' → logprob: -10.507554054260254
    7. '        
' → logprob: -14.007554054260254
    8. '	if' → logprob: -14.007554054260254
    9. '[i' → logprob: -15.132554054260254
    10. '[' → logprob: -16.25755500793457

Token 273: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.26362740993499756
    2. ' line' → logprob: -1.5136274099349976
    3. 'line' → logprob: -4.888627529144287
    4. 'not' → logprob: -5.513627529144287
    5. ' ' → logprob: -9.763627052307129
    6. '#line' → logprob: -12.888627052307129
    7. '(line' → logprob: -13.263627052307129
    8. '	line' → logprob: -13.388627052307129
    9. ' ' → logprob: -13.513627052307129
    10. '[line' → logprob: -14.388627052307129

Token 274: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.693148672580719
    2. ' line' → logprob: -0.693148672580719
    3. '	line' → logprob: -13.943148612976074
    4. '(line' → logprob: -15.068148612976074
    5. ' ' → logprob: -16.44314956665039
    6. 'ine' → logprob: -16.69314956665039
    7. 'Line' → logprob: -16.94314956665039
    8. 'i' → logprob: -17.44314956665039
    9. '#line' → logprob: -17.44314956665039
    10. '[line' → logprob: -17.69314956665039

Token 275: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01328128669410944
    2. ':
' → logprob: -4.388281345367432
    3. ' or' → logprob: -7.263281345367432
    4. 'or' → logprob: -10.763280868530273
    5. ' :' → logprob: -11.263280868530273
    6. ':return' → logprob: -11.888280868530273
    7. '):' → logprob: -12.013280868530273
    8. '==' → logprob: -12.138280868530273
    9. '.' → logprob: -12.263280868530273
    10. '():
' → logprob: -13.263280868530273

Token 276: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005377591587603092
    2. ':' → logprob: -5.380377769470215
    3. ':
' → logprob: -7.380377769470215
    4. ',' → logprob: -9.630377769470215
    5. ' or' → logprob: -10.755377769470215
    6. '          ' → logprob: -11.630377769470215
    7. '       ' → logprob: -11.880377769470215
    8. ' break' → logprob: -12.630377769470215
    9. '               ' → logprob: -12.630377769470215
    10. ' and' → logprob: -12.755377769470215

Token 277: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48526275157928467
    2. 'i' (adapté à ' i') → logprob: -1.2352627515792847
    3. ' i' → logprob: -2.985262870788574
    4. ' break' → logprob: -3.735262870788574
    5. 'break' → logprob: -3.985262870788574
    6. '       ' → logprob: -7.985262870788574
    7. '
' → logprob: -8.610262870788574
    8. '   ' → logprob: -9.235262870788574
    9. '               ' → logprob: -9.735262870788574
    10. ' ' → logprob: -11.110262870788574

Token 278: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0015121236210688949
    2. ' +=' → logprob: -6.501512050628662
    3. '+' → logprob: -11.75151252746582
    4. '=' → logprob: -13.25151252746582
    5. ']+=' → logprob: -16.12651252746582
    6. '++' → logprob: -17.87651252746582
    7. '+="' → logprob: -18.25151252746582
    8. '+='' → logprob: -18.50151252746582
    9. '```' → logprob: -19.00151252746582
    10. '   ' → logprob: -19.12651252746582

Token 279: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013259568950161338
    2. ' ' → logprob: -6.626326084136963
    3. '```' → logprob: -19.376325607299805
    4. '   ' → logprob: -19.501325607299805
    5. '2' → logprob: -20.376325607299805
    6. '
' → logprob: -21.126325607299805
    7. '１' → logprob: -21.376325607299805
    8. '۱' → logprob: -21.438825607299805
    9. '0' → logprob: -21.563825607299805
    10. '  ' → logprob: -21.751325607299805

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -19.87500762939453
    4. '   ' → logprob: -20.12500762939453
    5. '2' → logprob: -21.81250762939453
    6. '１' → logprob: -22.00000762939453
    7. '  ' → logprob: -22.25000762939453
    8. '۱' → logprob: -22.43750762939453
    9. '१' → logprob: -23.06250762939453
    10. '
' → logprob: -23.06250762939453

Token 281: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.629921436891891e-05
    2. '
' → logprob: -11.87502670288086
    3. 'continue' → logprob: -12.00002670288086
    4. '<|end|>' → logprob: -12.75002670288086
    5. '		' → logprob: -13.25002670288086
    6. '<|end|>' → logprob: -13.37502670288086
    7. '            
' → logprob: -13.75002670288086
    8. '       ' → logprob: -14.00002670288086
    9. '               ' → logprob: -14.00002670288086
    10. ' continue' → logprob: -14.25002670288086

Token 282: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.274932143744081e-05
    2. 'continue' → logprob: -11.375042915344238
    3. '       ' → logprob: -11.750042915344238
    4. '<|end|>' → logprob: -11.875042915344238
    5. '```' → logprob: -12.250042915344238
    6. ' continue' → logprob: -12.375042915344238
    7. '   ' → logprob: -13.250042915344238
    8. '
' → logprob: -13.750042915344238
    9. '               ' → logprob: -14.125042915344238
    10. '<|end|>' → logprob: -14.375042915344238

Token 283: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.03007812798023224
    2. ' continue' → logprob: -3.530078172683716
    3. '           ' → logprob: -8.030077934265137
    4. 'contin' → logprob: -14.030077934265137
    5. 'break' → logprob: -14.655077934265137
    6. 'continu' → logprob: -14.780077934265137
    7. '       ' → logprob: -15.280077934265137
    8. '```' → logprob: -16.030078887939453
    9. '	continue' → logprob: -16.155078887939453
    10. '   ' → logprob: -17.405078887939453

Token 284: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004041952546685934
    2. '<|end|>' → logprob: -5.754042148590088
    3. '        
' → logprob: -7.879042148590088
    4. '
' → logprob: -9.00404167175293
    5. '   ' → logprob: -9.62904167175293
    6. '```' → logprob: -9.75404167175293
    7. ')' → logprob: -10.50404167175293
    8. ',' → logprob: -10.50404167175293
    9. 'i' → logprob: -10.62904167175293
    10. '<|end|>' → logprob: -11.00404167175293

Token 285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021711974404752254
    2. '<|end|>' → logprob: -6.252171039581299
    3. '        
' → logprob: -9.377171516418457
    4. '   ' → logprob: -10.127171516418457
    5. '```' → logprob: -10.252171516418457
    6. '<|end|>' → logprob: -11.002171516418457
    7. '
' → logprob: -11.127171516418457
    8. 'i' → logprob: -11.627171516418457
    9. ')' → logprob: -11.877171516418457
    10. ',' → logprob: -12.002171516418457

Token 286: ' h' (ID: 312)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4741167724132538
    2. ' n' → logprob: -1.5991168022155762
    3. 'N' → logprob: -3.099116802215576
    4. 'h' (adapté à ' h') → logprob: -3.849116802215576
    5. 'R' → logprob: -4.224116802215576
    6. 'r' → logprob: -4.349116802215576
    7. ' H' → logprob: -4.474116802215576
    8. 'H' → logprob: -4.724116802215576
    9. ' parts' → logprob: -4.724116802215576
    10. ' h' → logprob: -4.849116802215576

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001201658509671688
    2. ',w' → logprob: -6.876201629638672
    3. ' ,' → logprob: -8.876201629638672
    4. 'w' → logprob: -11.251201629638672
    5. 'eight' → logprob: -12.876201629638672
    6. ',m' → logprob: -13.001201629638672
    7. ' =' → logprob: -13.001201629638672
    8. '=' → logprob: -13.251201629638672
    9. ',r' → logprob: -13.751201629638672
    10. '   ' → logprob: -14.126201629638672

Token 288: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.1797945201396942
    2. ' w' → logprob: -1.8047945499420166
    3. 'm' → logprob: -11.679794311523438
    4. 'r' → logprob: -12.179794311523438
    5. 'n' → logprob: -12.429794311523438
    6. 's' → logprob: -12.804794311523438
    7. 'l' → logprob: -12.804794311523438
    8. ',' → logprob: -12.804794311523438
    9. ' ' → logprob: -12.929794311523438
    10. 't' → logprob: -12.929794311523438

Token 289: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12730854749679565
    2. ' =' → logprob: -2.1273086071014404
    3. ',' → logprob: -7.877308368682861
    4. ')' → logprob: -14.75230884552002
    5. ' ' → logprob: -16.002307891845703
    6. '=int' → logprob: -16.252307891845703
    7. ' ,' → logprob: -16.252307891845703
    8. '=line' → logprob: -16.377307891845703
    9. '=

' → logprob: -16.377307891845703
    10. ')=' → logprob: -16.502307891845703

Token 290: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.38692352175712585
    2. 'map' → logprob: -1.1369235515594482
    3. ' line' → logprob: -10.511923789978027
    4. 'line' → logprob: -10.636923789978027
    5. '	map' → logprob: -14.636923789978027
    6. ' ' → logprob: -14.886923789978027
    7. '(map' → logprob: -15.636923789978027
    8. 'list' → logprob: -16.01192283630371
    9. '   ' → logprob: -16.51192283630371
    10. '
' → logprob: -17.01192283630371

Token 291: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002506111632101238
    2. '(' → logprob: -8.750250816345215
    3. '(str' → logprob: -9.375250816345215
    4. 'int' → logprob: -12.250250816345215
    5. '(lambda' → logprob: -13.125250816345215
    6. '[int' → logprob: -15.500250816345215
    7. ' (' → logprob: -16.0002498626709
    8. '=int' → logprob: -16.6252498626709
    9. '<int' → logprob: -17.2502498626709
    10. 'str' → logprob: -17.3752498626709

Token 292: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.06529361009597778
    2. '(input' → logprob: -3.065293550491333
    3. ',line' → logprob: -4.940293788909912
    4. ',input' → logprob: -5.565293788909912
    5. ')' → logprob: -5.815293788909912
    6. ',' → logprob: -6.440293788909912
    7. 'line' → logprob: -7.315293788909912
    8. 'input' → logprob: -8.940293312072754
    9. '(' → logprob: -9.190293312072754
    10. ' line' → logprob: -9.815293312072754

Token 293: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.07889077812433243
    2. ' line' → logprob: -2.578890800476074
    3. '(line' → logprob: -14.078890800476074
    4. '[line' → logprob: -15.953890800476074
    5. '	line' → logprob: -16.078889846801758
    6. '=line' → logprob: -17.203889846801758
    7. ' ' → logprob: -17.953889846801758
    8. '#line' → logprob: -18.078889846801758
    9. '_line' → logprob: -18.203889846801758
    10. ',line' → logprob: -19.078889846801758

Token 294: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.008462571538984776
    2. '().' → logprob: -5.008462429046631
    3. '.' → logprob: -7.008462429046631
    4. '.strip' → logprob: -7.133462429046631
    5. ' .' → logprob: -10.133462905883789
    6. '.readline' → logprob: -13.508462905883789
    7. '   ' → logprob: -13.758462905883789
    8. 'split' → logprob: -14.133462905883789
    9. ')' → logprob: -14.758462905883789
    10. '.rstrip' → logprob: -16.13346290588379

Token 295: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008966827765107155
    2. '()' → logprob: -4.88396692276001
    3. '('' → logprob: -6.75896692276001
    4. ')' → logprob: -9.508966445922852
    5. '())
' → logprob: -9.758966445922852
    6. '(' → logprob: -10.008966445922852
    7. '(','' → logprob: -11.133966445922852
    8. ' ())' → logprob: -13.258966445922852
    9. '()))' → logprob: -13.383966445922852
    10. '())

' → logprob: -13.383966445922852

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.536724328994751
    2. '<|end|>' → logprob: -1.036724328994751
    3. '   ' → logprob: -3.911724328994751
    4. ' if' → logprob: -4.536724090576172
    5. ')' → logprob: -5.036724090576172
    6. 'i' → logprob: -5.161724090576172
    7. '<|end|>' → logprob: -5.661724090576172
    8. 'if' → logprob: -5.911724090576172
    9. '  
' → logprob: -6.411724090576172
    10. '```' → logprob: -6.411724090576172

Token 297: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.15436075627803802
    2. 'i' → logprob: -2.154360771179199
    3. ' if' → logprob: -4.154360771179199
    4. '       ' → logprob: -4.529360771179199
    5. '   ' → logprob: -7.904360771179199
    6. ' i' → logprob: -8.5293607711792
    7. 'd' → logprob: -13.0293607711792
    8. '	if' → logprob: -13.1543607711792
    9. '        
' → logprob: -13.5293607711792
    10. ' ' → logprob: -13.7793607711792

Token 298: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.16022443771362305
    2. ' h' → logprob: -1.910224437713623
    3. '(' → logprob: -15.785224914550781
    4. '(h' → logprob: -16.03522491455078
    5. ' ' → logprob: -17.16022491455078
    6. ' (' → logprob: -17.78522491455078
    7. '   ' → logprob: -18.03522491455078
    8. '	h' → logprob: -19.41022491455078
    9. ' ' → logprob: -19.78522491455078
    10. ' not' → logprob: -21.16022491455078

Token 299: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0701386108994484
    2. '==' → logprob: -2.695138692855835
    3. '=' → logprob: -8.820138931274414
    4. ' =' → logprob: -10.820138931274414
    5. ' <=' → logprob: -11.070138931274414
    6. ' ' → logprob: -12.070138931274414
    7. '```' → logprob: -12.320138931274414
    8. '==
' → logprob: -13.320138931274414
    9. '<=' → logprob: -13.445138931274414
    10. '[' → logprob: -13.695138931274414

Token 300: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '۰' → logprob: -17.062835693359375
    4. '  ' → logprob: -17.625335693359375
    5. '```' → logprob: -18.062835693359375
    6. ' ' → logprob: -18.312835693359375
    7. 'w' → logprob: -18.312835693359375
    8. '=' → logprob: -18.312835693359375
    9. '   ' → logprob: -18.687835693359375
    10. '<|end|>' → logprob: -19.062835693359375

Token 301: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.2855416066013277e-05
    2. ' ' → logprob: -10.375032424926758
    3. 'w' → logprob: -14.000032424926758
    4. '-' → logprob: -15.937532424926758
    5. '```' → logprob: -16.062532424926758
    6. '
' → logprob: -16.562532424926758
    7. '

' → logprob: -16.687532424926758
    8. '۰' → logprob: -16.875032424926758
    9. '=' → logprob: -17.625032424926758
    10. 'o' → logprob: -17.812532424926758

Token 302: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04859157279133797
    2. 'and' → logprob: -3.0485916137695312
    3. ' ' → logprob: -12.923591613769531
    4. '	and' → logprob: -13.923591613769531
    5. '<|end|>' → logprob: -15.048591613769531
    6. ' or' → logprob: -15.423591613769531
    7. ' и' → logprob: -16.42359161376953
    8. ':' → logprob: -16.42359161376953
    9. '  ' → logprob: -17.42359161376953
    10. ',' → logprob: -17.42359161376953

Token 303: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.06196802109479904
    2. 'w' → logprob: -2.8119680881500244
    3. '	w' → logprob: -15.311967849731445
    4. '   ' → logprob: -16.561967849731445
    5. '    ' → logprob: -16.811967849731445
    6. ' ' → logprob: -17.061967849731445
    7. ' ' → logprob: -17.436967849731445
    8. '  ' → logprob: -19.186967849731445
    9. '<w' → logprob: -19.561967849731445
    10. '_w' → logprob: -20.936967849731445

Token 304: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759557485580444
    2. ' ==' → logprob: -0.8259557485580444
    3. ')==' → logprob: -12.200955390930176
    4. '<|end|>' → logprob: -12.700955390930176
    5. '==
' → logprob: -13.075955390930176
    6. ']==' → logprob: -13.200955390930176
    7. ' ' → logprob: -13.575955390930176
    8. '=' → logprob: -13.825955390930176
    9. ')' → logprob: -14.700955390930176
    10. '()==' → logprob: -14.950955390930176

Token 305: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00360019039362669
    2. ' ' → logprob: -5.628600120544434
    3. '<|end|>' → logprob: -15.753600120544434
    4. '  ' → logprob: -18.50360107421875
    5. ' ' → logprob: -18.56610107421875
    6. '<|end|>' → logprob: -18.87860107421875
    7. '۰' → logprob: -19.94110107421875
    8. '   ' → logprob: -19.94110107421875
    9. '```' → logprob: -20.12860107421875
    10. '1' → logprob: -21.56610107421875

Token 306: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '۰' → logprob: -19.187515258789062
    4. '```' → logprob: -19.687515258789062
    5. '<|end|>' → logprob: -19.875015258789062
    6. '০' → logprob: -20.437515258789062
    7. '<|end|>' → logprob: -20.500015258789062
    8. '  ' → logprob: -20.562515258789062
    9. '०' → logprob: -20.687515258789062
    10. '   ' → logprob: -20.937515258789062

Token 307: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5762213468551636
    2. ':
' → logprob: -0.8262213468551636
    3. '       ' → logprob: -8.701221466064453
    4. ':return' → logprob: -9.826221466064453
    5. '           ' → logprob: -10.076221466064453
    6. '):
' → logprob: -12.201221466064453
    7. ',' → logprob: -12.451221466064453
    8. '   ' → logprob: -12.701221466064453
    9. ' :
' → logprob: -13.201221466064453
    10. ':
' → logprob: -13.201221466064453

Token 308: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3902033970225602e-05
    2. '       ' → logprob: -12.000014305114746
    3. ' break' → logprob: -13.125014305114746
    4. '		' → logprob: -13.250014305114746
    5. '          ' → logprob: -13.625014305114746
    6. '   ' → logprob: -13.625014305114746
    7. '               ' → logprob: -14.625014305114746
    8. '	       ' → logprob: -15.375014305114746
    9. '         ' → logprob: -15.625014305114746
    10. 'break' → logprob: -15.750014305114746

Token 309: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2825402021408081
    2. '           ' → logprob: -2.0325403213500977
    3. 'break' (adapté à ' break') → logprob: -2.2825403213500977
    4. 'return' → logprob: -4.782540321350098
    5. ' return' → logprob: -5.532540321350098
    6. '       ' → logprob: -7.282540321350098
    7. '	break' → logprob: -10.032540321350098
    8. '               ' → logprob: -10.407540321350098
    9. '
' → logprob: -12.157540321350098
    10. '   ' → logprob: -12.282540321350098

Token 310: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013780910521745682
    2. '
' → logprob: -7.376378059387207
    3. '<|end|>' → logprob: -7.626378059387207
    4. '        
' → logprob: -9.251378059387207
    5. '   ' → logprob: -9.376378059387207
    6. 'i' → logprob: -10.501378059387207
    7. '<|end|>' → logprob: -11.376378059387207
    8. '  
' → logprob: -11.376378059387207
    9. ',' → logprob: -12.251378059387207
    10. '#' → logprob: -12.251378059387207

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016927925171330571
    2. '<|end|>' → logprob: -7.251692771911621
    3. '
' → logprob: -8.501692771911621
    4. 'i' → logprob: -8.501692771911621
    5. '   ' → logprob: -8.501692771911621
    6. '        
' → logprob: -8.876692771911621
    7. ' i' → logprob: -8.876692771911621
    8. '  
' → logprob: -10.501692771911621
    9. ',' → logprob: -10.876692771911621
    10. '<|end|>' → logprob: -11.251692771911621

Token 312: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0272563695907593
    2. 'i' (adapté à ' i') → logprob: -1.4022563695907593
    3. '       ' → logprob: -1.5272563695907593
    4. '   ' → logprob: -2.277256488800049
    5. 'grid' → logprob: -3.527256488800049
    6. ' grid' → logprob: -3.652256488800049
    7. 'dice' → logprob: -5.527256488800049
    8. '        
' → logprob: -5.777256488800049
    9. ' dice' → logprob: -5.777256488800049
    10. '
' → logprob: -6.277256488800049

Token 313: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10023988783359528
    2. '+=' → logprob: -2.3502399921417236
    3. '+' → logprob: -10.350239753723145
    4. ' ' → logprob: -14.850239753723145
    5. ' =' → logprob: -14.975239753723145
    6. '=' → logprob: -15.475239753723145
    7. ' +' → logprob: -15.600239753723145
    8. '   ' → logprob: -16.47524070739746
    9. ']+=' → logprob: -16.47524070739746
    10. ')' → logprob: -16.47524070739746

Token 314: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '2' → logprob: -17.126171112060547
    4. '
' → logprob: -17.688671112060547
    5. '```' → logprob: -18.188671112060547
    6. 'w' → logprob: -18.313671112060547
    7. '   ' → logprob: -18.438671112060547
    8. '0' → logprob: -18.688671112060547
    9. '3' → logprob: -19.188671112060547
    10. '+' → logprob: -19.188671112060547

Token 315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '2' → logprob: -19.375003814697266
    4. '0' → logprob: -19.750003814697266
    5. '
' → logprob: -19.750003814697266
    6. 'w' → logprob: -19.937503814697266
    7. 'h' → logprob: -20.062503814697266
    8. '-' → logprob: -20.125003814697266
    9. '   ' → logprob: -20.125003814697266
    10. '１' → logprob: -20.812503814697266

Token 316: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009753492660820484
    2. 'grid' → logprob: -5.634753704071045
    3. '   ' → logprob: -6.134753704071045
    4. ' grid' → logprob: -6.634753704071045
    5. '        
' → logprob: -7.009753704071045
    6. '
' → logprob: -7.384753704071045
    7. ',' → logprob: -8.134753227233887
    8. '	grid' → logprob: -8.634753227233887
    9. ' board' → logprob: -9.509753227233887
    10. '<|end|>' → logprob: -10.009753227233887

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8434062600135803
    2. 'grid' → logprob: -0.8434062600135803
    3. ' grid' → logprob: -2.2184062004089355
    4. 'board' → logprob: -4.3434062004089355
    5. ' board' → logprob: -5.4684062004089355
    6. 'map' → logprob: -5.7184062004089355
    7. 'field' → logprob: -5.9684062004089355
    8. '```' → logprob: -6.8434062004089355
    9. 'dice' → logprob: -7.3434062004089355
    10. 'm' → logprob: -7.4684062004089355

Token 318: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.09898125380277634
    2. 'board' → logprob: -2.5989811420440674
    3. 'maze' → logprob: -4.7239813804626465
    4. 'field' → logprob: -5.4739813804626465
    5. '   ' → logprob: -6.2239813804626465
    6. 'map' → logprob: -6.5989813804626465
    7. '       ' → logprob: -6.7239813804626465
    8. ' grid' → logprob: -7.0989813804626465
    9. 'graph' → logprob: -7.4739813804626465
    10. 'm' → logprob: -9.223980903625488

Token 319: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931565403938293
    2. ' =' → logprob: -0.6931565403938293
    3. '=[]' → logprob: -11.693156242370605
    4. '   ' → logprob: -14.818156242370605
    5. ',' → logprob: -16.068157196044922
    6. ' =
' → logprob: -16.193157196044922
    7. '=
' → logprob: -16.443157196044922
    8. ' ' → logprob: -16.568157196044922
    9. '=[]
' → logprob: -16.818157196044922
    10. '    ' → logprob: -17.568157196044922

Token 320: ' []
' (ID: 8911)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.0011479563545435667
    2. '[' → logprob: -7.751147747039795
    3. '[]
' → logprob: -8.001148223876953
    4. ' [' → logprob: -8.001148223876953
    5. '[]' → logprob: -10.251148223876953
    6. '[line' → logprob: -12.251148223876953
    7. ' []
' → logprob: -13.751148223876953
    8. ' []' → logprob: -13.876148223876953
    9. '[array' → logprob: -14.126148223876953
    10. '[data' → logprob: -14.251148223876953

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025890331715345383
    2. ' for' → logprob: -4.150890350341797
    3. 'for' → logprob: -4.900890350341797
    4. '	for' → logprob: -6.400890350341797
    5. '	' → logprob: -7.775890350341797
    6. '	   ' → logprob: -9.025890350341797
    7. '   ' → logprob: -9.400890350341797
    8. '<|end|>' → logprob: -10.025890350341797
    9. '	       ' → logprob: -11.400890350341797
    10. 'while' → logprob: -12.400890350341797

Token 322: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00874587893486023
    2. ' for' → logprob: -4.7587456703186035
    3. '       ' → logprob: -9.008746147155762
    4. '   ' → logprob: -12.258746147155762
    5. '	for' → logprob: -12.633746147155762
    6. '
' → logprob: -14.883746147155762
    7. 'while' → logprob: -15.133746147155762
    8. '```' → logprob: -15.383746147155762
    9. ' ' → logprob: -17.258745193481445
    10. ' ' → logprob: -17.633745193481445

Token 323: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.252008318901062
    2. ' _' → logprob: -1.502008318901062
    3. '_j' → logprob: -9.877008438110352
    4. ' ' → logprob: -12.002008438110352
    5. ' j' → logprob: -12.127008438110352
    6. '_h' → logprob: -12.877008438110352
    7. '_row' → logprob: -13.127008438110352
    8. 'j' → logprob: -13.252008438110352
    9. '_r' → logprob: -13.627008438110352
    10. '_i' → logprob: -13.752008438110352

Token 324: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19865936040878296
    2. 'range' → logprob: -2.3236594200134277
    3. '_' → logprob: -2.8236594200134277
    4. 'in' → logprob: -3.9486594200134277
    5. ' range' → logprob: -5.698659420013428
    6. ' ' → logprob: -9.19865894317627
    7. ' _' → logprob: -9.44865894317627
    8. '_range' → logprob: -11.07365894317627
    9. '   ' → logprob: -11.94865894317627
    10. 'n' → logprob: -11.94865894317627

Token 325: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -8.518582762917504e-05
    2. ' range' → logprob: -9.37508487701416
    3. 'grid' → logprob: -15.87508487701416
    4. '(range' → logprob: -17.375085830688477
    5. '	range' → logprob: -17.375085830688477
    6. ')' → logprob: -18.375085830688477
    7. 'input' → logprob: -18.625085830688477
    8. 'row' → logprob: -18.750085830688477
    9. ' ' → logprob: -19.500085830688477
    10. '   ' → logprob: -19.500085830688477

Token 326: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -9.253090865968261e-06
    2. 'h' → logprob: -11.875009536743164
    3. ' (' → logprob: -13.750009536743164
    4. '(' → logprob: -14.125009536743164
    5. ' h' → logprob: -14.875009536743164
    6. '(H' → logprob: -17.625009536743164
    7. '	h' → logprob: -18.375009536743164
    8. '(i' → logprob: -18.625009536743164
    9. '(range' → logprob: -19.000009536743164
    10. 'range' → logprob: -19.375009536743164

Token 327: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31351301074028015
    2. '):' → logprob: -1.3135130405426025
    3. '):
' → logprob: -9.438512802124023
    4. '       ' → logprob: -9.813512802124023
    5. ')' → logprob: -10.188512802124023
    6. '   ' → logprob: -10.188512802124023
    7. 'w' → logprob: -11.563512802124023
    8. ':' → logprob: -11.688512802124023
    9. ':
' → logprob: -12.063512802124023
    10. ' ):
' → logprob: -12.063512802124023

Token 328: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1451579332351685
    2. '           ' → logprob: -1.1451579332351685
    3. '       ' → logprob: -1.3951579332351685
    4. '	   ' → logprob: -2.395157814025879
    5. '	       ' → logprob: -4.145157814025879
    6. '
' → logprob: -6.145157814025879
    7. '    	   ' → logprob: -6.645157814025879
    8. '		   ' → logprob: -6.645157814025879
    9. ' line' → logprob: -7.020157814025879
    10. '```' → logprob: -7.895157814025879

Token 329: ' row' (ID: 5225)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.254798024892807
    2. ' grid' → logprob: -1.5047980546951294
    3. '           ' → logprob: -6.25479793548584
    4. 'line' → logprob: -7.62979793548584
    5. '   ' → logprob: -8.87979793548584
    6. ' line' → logprob: -9.00479793548584
    7. 'row' (adapté à ' row') → logprob: -9.37979793548584
    8. '	grid' → logprob: -9.87979793548584
    9. 'input' → logprob: -10.87979793548584
    10. ' row' → logprob: -11.25479793548584

Token 330: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012587466277182102
    2. '=' → logprob: -4.387587547302246
    3. '           ' → logprob: -9.887587547302246
    4. '.append' → logprob: -11.512587547302246
    5. '=line' → logprob: -12.012587547302246
    6. '   ' → logprob: -12.887587547302246
    7. '       ' → logprob: -13.512587547302246
    8. ' ' → logprob: -13.637587547302246
    9. '            ' → logprob: -13.762587547302246
    10. ',' → logprob: -13.762587547302246

Token 331: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.029877064749598503
    2. ' list' → logprob: -3.529876947402954
    3. 'input' → logprob: -9.029876708984375
    4. ' input' → logprob: -11.904876708984375
    5. '[' → logprob: -17.404876708984375
    6. '	list' → logprob: -17.529876708984375
    7. 'tuple' → logprob: -17.529876708984375
    8. '   ' → logprob: -17.904876708984375
    9. '[list' → logprob: -18.029876708984375
    10. 'map' → logprob: -18.529876708984375

Token 332: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -5.080963092041202e-06
    2. 'map' → logprob: -12.250004768371582
    3. '(' → logprob: -16.5000057220459
    4. ' map' → logprob: -17.0000057220459
    5. '()' → logprob: -17.1250057220459
    6. ',map' → logprob: -17.8750057220459
    7. '(input' → logprob: -18.3750057220459
    8. '.map' → logprob: -18.6250057220459
    9. '	map' → logprob: -19.0000057220459
    10. '
' → logprob: -19.6250057220459

Token 333: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00028660334646701813
    2. '(' → logprob: -8.875287055969238
    3. 'int' → logprob: -9.000287055969238
    4. ',int' → logprob: -11.625287055969238
    5. '=int' → logprob: -12.500287055969238
    6. ')' → logprob: -12.750287055969238
    7. '(
' → logprob: -12.875287055969238
    8. '<int' → logprob: -13.500287055969238
    9. ']int' → logprob: -13.500287055969238
    10. '[int' → logprob: -13.750287055969238

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9343644380569458
    2. '(input' → logprob: -0.9343644380569458
    3. ',input' → logprob: -1.5593644380569458
    4. '=input' → logprob: -6.684364318847656
    5. '           ' → logprob: -7.434364318847656
    6. '(' → logprob: -7.559364318847656
    7. 'input' → logprob: -7.809364318847656
    8. '(
' → logprob: -8.184364318847656
    9. '[input' → logprob: -8.184364318847656
    10. ' ,' → logprob: -8.809364318847656

Token 335: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018150877207517624
    2. ' input' → logprob: -4.018150806427002
    3. 'line' → logprob: -14.64315128326416
    4. '   ' → logprob: -15.39315128326416
    5. '           ' → logprob: -16.393150329589844
    6. ' ' → logprob: -16.518150329589844
    7. '	input' → logprob: -16.768150329589844
    8. '(input' → logprob: -17.143150329589844
    9. '_input' → logprob: -17.768150329589844
    10. ' line' → logprob: -17.893150329589844

Token 336: '_lines' (ID: 42980)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6881762742996216
    2. '.readline' → logprob: -1.3131762742996216
    3. '_lines' → logprob: -1.8131762742996216
    4. '[i' → logprob: -3.188176155090332
    5. '(i' → logprob: -4.563176155090332
    6. '()' → logprob: -5.813176155090332
    7. '   ' → logprob: -6.313176155090332
    8. '()[' → logprob: -6.313176155090332
    9. '.split' → logprob: -6.438176155090332
    10. '       ' → logprob: -7.313176155090332

Token 337: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.00000286102295
    3. '[
' → logprob: -15.87500286102295
    4. '   ' → logprob: -16.875001907348633
    5. ' [' → logprob: -17.000001907348633
    6. '[j' → logprob: -17.500001907348633
    7. '[++' → logprob: -18.125001907348633
    8. '
' → logprob: -18.375001907348633
    9. 'i' → logprob: -18.500001907348633
    10. '```' → logprob: -18.750001907348633

Token 338: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00023059594968799502
    2. '][' → logprob: -9.25023078918457
    3. '[i' → logprob: -9.25023078918457
    4. ']' → logprob: -11.25023078918457
    5. 'i' → logprob: -11.50023078918457
    6. ' ].' → logprob: -11.50023078918457
    7. '(i' → logprob: -13.12523078918457
    8. '   ' → logprob: -14.50023078918457
    9. ']
' → logprob: -14.62523078918457
    10. ']))' → logprob: -14.62523078918457

Token 339: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.2519330680370331
    2. 'split' → logprob: -1.5019330978393555
    3. ' strip' → logprob: -12.751933097839355
    4. ' split' → logprob: -14.126933097839355
    5. 'rstrip' → logprob: -14.751933097839355
    6. '.strip' → logprob: -18.12693214416504
    7. '(split' → logprob: -20.25193214416504
    8. '   ' → logprob: -20.37693214416504
    9. ' ' → logprob: -20.50193214416504
    10. '.split' → logprob: -20.62693214416504

Token 340: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04185812175273895
    2. '()))
' → logprob: -3.541858196258545
    3. '()' → logprob: -4.541858196258545
    4. '))' → logprob: -6.666858196258545
    5. '(' → logprob: -10.041857719421387
    6. '()
' → logprob: -10.791857719421387
    7. '()))

' → logprob: -11.166857719421387
    8. '())' → logprob: -11.541857719421387
    9. '))
' → logprob: -11.916857719421387
    10. '()));' → logprob: -12.291857719421387

Token 341: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6681106686592102
    2. 'i' → logprob: -1.0431106090545654
    3. '           ' → logprob: -2.1681106090545654
    4. ' i' → logprob: -5.4181108474731445
    5. '   ' → logprob: -5.5431108474731445
    6. '
' → logprob: -5.9181108474731445
    7. ')' → logprob: -6.1681108474731445
    8. '	i' → logprob: -6.4181108474731445
    9. ',' → logprob: -7.0431108474731445
    10. '<|end|>' → logprob: -7.2931108474731445

Token 342: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.051505137234926224
    2. '           ' → logprob: -3.4265050888061523
    3. ' i' → logprob: -4.676505088806152
    4. '       ' → logprob: -5.551505088806152
    5. 'grid' → logprob: -5.551505088806152
    6. '   ' → logprob: -7.801505088806152
    7. ' grid' → logprob: -8.551505088806152
    8. ' ' → logprob: -11.926505088806152
    9. '	i' → logprob: -12.426505088806152
    10. '  ' → logprob: -13.176505088806152

Token 343: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04861665889620781
    2. ' +=' → logprob: -3.048616647720337
    3. '+' → logprob: -11.048616409301758
    4. ']+=' → logprob: -11.673616409301758
    5. ')' → logprob: -13.298616409301758
    6. '   ' → logprob: -14.173616409301758
    7. '```' → logprob: -14.298616409301758
    8. '           ' → logprob: -14.673616409301758
    9. '.append' → logprob: -14.798616409301758
    10. '++' → logprob: -15.173616409301758

Token 344: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '           ' → logprob: -19.125001907348633
    4. '   ' → logprob: -19.125001907348633
    5. '```' → logprob: -19.625001907348633
    6. '0' → logprob: -20.875001907348633
    7. '(' → logprob: -21.250001907348633
    8. '>' → logprob: -21.250001907348633
    9. '１' → logprob: -21.437501907348633
    10. '
' → logprob: -21.562501907348633

Token 345: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '
' → logprob: -19.3125
    4. '```' → logprob: -19.6875
    5. '   ' → logprob: -20.1875
    6. '0' → logprob: -20.375
    7. '１' → logprob: -20.4375
    8. '(' → logprob: -20.5625
    9. '۱' → logprob: -21.25
    10. '=' → logprob: -21.5625

Token 346: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004831072874367237
    2. '       ' → logprob: -5.379830837249756
    3. '	       ' → logprob: -9.754831314086914
    4. '		' → logprob: -10.254831314086914
    5. '<|end|>' → logprob: -10.504831314086914
    6. '   ' → logprob: -10.754831314086914
    7. '	   ' → logprob: -11.254831314086914
    8. '          ' → logprob: -11.504831314086914
    9. 'grid' → logprob: -11.629831314086914
    10. ',' → logprob: -12.129831314086914

Token 347: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38794654607772827
    2. '       ' → logprob: -1.137946605682373
    3. 'grid' → logprob: -7.762946605682373
    4. '   ' → logprob: -7.887946605682373
    5. '	   ' → logprob: -9.762946128845215
    6. ' grid' → logprob: -9.762946128845215
    7. '	       ' → logprob: -10.137946128845215
    8. '	grid' → logprob: -10.387946128845215
    9. '<|end|>' → logprob: -10.762946128845215
    10. '		' → logprob: -11.512946128845215

Token 348: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.014677336439490318
    2. ' grid' → logprob: -4.26467752456665
    3. '           ' → logprob: -8.139677047729492
    4. '       ' → logprob: -8.514677047729492
    5. '	grid' → logprob: -11.514677047729492
    6. '   ' → logprob: -11.889677047729492
    7. '.grid' → logprob: -13.639677047729492
    8. 'row' → logprob: -13.889677047729492
    9. ' ' → logprob: -14.139677047729492
    10. '(grid' → logprob: -14.889677047729492

Token 349: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001933277933858335
    2. '.' → logprob: -6.2519330978393555
    3. '.extend' → logprob: -12.876933097839355
    4. ' .' → logprob: -13.876933097839355
    5. '.app' → logprob: -14.126933097839355
    6. '.Append' → logprob: -15.751933097839355
    7. '.ap' → logprob: -16.251934051513672
    8. ').' → logprob: -16.626934051513672
    9. 'append' → logprob: -16.626934051513672
    10. '.setdefault' → logprob: -17.126934051513672

Token 350: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -9.841743303695694e-05
    2. 'row' → logprob: -9.25009822845459
    3. '(' → logprob: -13.12509822845459
    4. ' row' → logprob: -15.75009822845459
    5. ' (' → logprob: -17.125099182128906
    6. '(list' → logprob: -17.500099182128906
    7. ',row' → logprob: -17.625099182128906
    8. '=row' → logprob: -18.125099182128906
    9. '(
' → logprob: -19.500099182128906
    10. '[row' → logprob: -19.625099182128906

Token 351: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013893934374209493
    2. ')
' → logprob: -9.000139236450195
    3. '       ' → logprob: -11.125139236450195
    4. '   ' → logprob: -15.750139236450195
    5. '))' → logprob: -15.750139236450195
    6. ' )' → logprob: -15.750139236450195
    7. ')`' → logprob: -16.000139236450195
    8. ')

' → logprob: -17.250139236450195
    9. ')}' → logprob: -17.375139236450195
    10. ')
' → logprob: -17.500139236450195

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012315735220909119
    2. '<|end|>' → logprob: -6.01231575012207
    3. ' directions' → logprob: -6.51231575012207
    4. '```' → logprob: -6.51231575012207
    5. '        
' → logprob: -6.88731575012207
    6. 's' → logprob: -6.88731575012207
    7. ' start' → logprob: -6.88731575012207
    8. 'start' → logprob: -7.13731575012207
    9. ',' → logprob: -7.51231575012207
    10. '
' → logprob: -7.88731575012207

Token 353: ' sr' (ID: 29405)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1550416201353073
    2. 's' → logprob: -3.4050416946411133
    3. '       ' → logprob: -3.9050416946411133
    4. ' start' → logprob: -3.9050416946411133
    5. 'goal' → logprob: -4.280041694641113
    6. 'moves' → logprob: -4.905041694641113
    7. '   ' → logprob: -5.155041694641113
    8. 'dice' → logprob: -5.405041694641113
    9. 'r' → logprob: -5.530041694641113
    10. 'sx' → logprob: -5.905041694641113

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014736657962203026
    2. 'c' → logprob: -4.264736652374268
    3. ' ,' → logprob: -7.889736652374268
    4. '=' → logprob: -9.389737129211426
    5. ' =' → logprob: -10.389737129211426
    6. ',c' → logprob: -10.514737129211426
    7. 'ow' → logprob: -10.764737129211426
    8. '_,' → logprob: -11.389737129211426
    9. 'cr' → logprob: -11.639737129211426
    10. ',s' → logprob: -12.514737129211426

Token 355: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.3136475086212158
    2. ' sc' → logprob: -1.3136475086212158
    3. '0' → logprob: -7.938647270202637
    4. ' ' → logprob: -10.563647270202637
    5. '	sc' → logprob: -14.063647270202637
    6. '(sc' → logprob: -14.188647270202637
    7. 'sw' → logprob: -14.688647270202637
    8. '_sc' → logprob: -14.813647270202637
    9. 'SC' → logprob: -15.313647270202637
    10. 'Sc' → logprob: -15.438647270202637

Token 356: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15651512145996094
    2. '=' → logprob: -2.406515121459961
    3. ',' → logprob: -2.906515121459961
    4. ' ,' → logprob: -9.531515121459961
    5. ' ' → logprob: -11.531515121459961
    6. ' =
' → logprob: -13.156515121459961
    7. ')' → logprob: -13.781515121459961
    8. '<|end|>' → logprob: -14.531515121459961
    9. ' =)' → logprob: -15.406515121459961
    10. ' =
' → logprob: -16.28151512145996

Token 357: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16407953202724457
    2. ' map' → logprob: -2.164079427719116
    3. 'map' → logprob: -3.539079427719116
    4. ' ' → logprob: -4.914079666137695
    5. '       ' → logprob: -10.289079666137695
    6. 'int' → logprob: -11.039079666137695
    7. '   ' → logprob: -11.664079666137695
    8. ' int' → logprob: -11.789079666137695
    9. '        ' → logprob: -12.164079666137695
    10. '    ' → logprob: -13.039079666137695

Token 358: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00036894375807605684
    2. 'int' → logprob: -8.12536907196045
    3. '(lambda' → logprob: -10.25036907196045
    4. '(' → logprob: -11.75036907196045
    5. '[int' → logprob: -11.75036907196045
    6. '(tuple' → logprob: -11.87536907196045
    7. '(str' → logprob: -12.12536907196045
    8. ' (' → logprob: -12.25036907196045
    9. '=int' → logprob: -13.37536907196045
    10. '<int' → logprob: -13.62536907196045

Token 359: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3347591757774353
    2. ',' → logprob: -1.45975923538208
    3. ',input' → logprob: -4.08475923538208
    4. ')' → logprob: -4.33475923538208
    5. '(' → logprob: -4.45975923538208
    6. 'input' → logprob: -5.33475923538208
    7. ' (' → logprob: -6.33475923538208
    8. '(),' → logprob: -6.70975923538208
    9. ' input' → logprob: -7.20975923538208
    10. ' ,' → logprob: -8.084758758544922

Token 360: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07891324907541275
    2. ' input' → logprob: -2.5789132118225098
    3. '(input' → logprob: -10.703913688659668
    4. ')' → logprob: -15.078913688659668
    5. ',input' → logprob: -15.703913688659668
    6. '[input' → logprob: -15.828913688659668
    7. 'grid' → logprob: -16.32891273498535
    8. '	input' → logprob: -16.70391273498535
    9. '_input' → logprob: -16.82891273498535
    10. ' ' → logprob: -17.07891273498535

Token 361: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0011628384236246347
    2. '[i' → logprob: -8.0011625289917
    3. 'lines' → logprob: -8.6261625289917
    4. '(i' → logprob: -8.6261625289917
    5. ')' → logprob: -9.2511625289917
    6. '(input' → logprob: -9.6261625289917
    7. '   ' → logprob: -9.6261625289917
    8. '().' → logprob: -9.8761625289917
    9. '.readline' → logprob: -9.8761625289917
    10. '(lines' → logprob: -10.1261625289917

Token 362: '[i' (ID: 1768)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.28116530179977417
    2. 'input' → logprob: -1.906165361404419
    3. '(i' → logprob: -2.656165361404419
    4. '[i' → logprob: -3.781165361404419
    5. '[input' → logprob: -6.53116512298584
    6. '(lines' → logprob: -7.90616512298584
    7. ')' → logprob: -8.15616512298584
    8. 'lines' → logprob: -8.28116512298584
    9. 'i' → logprob: -8.28116512298584
    10. '_lines' → logprob: -8.65616512298584

Token 363: '].' (ID: 1651)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.15212924778461456
    2. '].' → logprob: -2.1521291732788086
    3. '.split' → logprob: -3.9021291732788086
    4. ').' → logprob: -5.652129173278809
    5. '.readline' → logprob: -7.402129173278809
    6. '()].' → logprob: -8.527129173278809
    7. '>().' → logprob: -8.902129173278809
    8. ''].' → logprob: -10.527129173278809
    9. '.' → logprob: -10.652129173278809
    10. '()' → logprob: -10.777129173278809

Token 364: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005532711511477828
    2. 'strip' → logprob: -7.500553131103516
    3. ' split' → logprob: -15.375553131103516
    4. '.split' → logprob: -17.375553131103516
    5. 'rstrip' → logprob: -19.375553131103516
    6. '(split' → logprob: -20.625553131103516
    7. ' strip' → logprob: -21.750553131103516
    8. '```' → logprob: -21.875553131103516
    9. 'skip' → logprob: -22.000553131103516
    10. '.strip' → logprob: -22.625553131103516

Token 365: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05437706783413887
    2. '())
' → logprob: -3.1793770790100098
    3. ')' → logprob: -4.67937707901001
    4. '()' → logprob: -6.30437707901001
    5. ')
' → logprob: -8.804376602172852
    6. '()
' → logprob: -10.679376602172852
    7. ' ())' → logprob: -11.804376602172852
    8. '())

' → logprob: -12.054376602172852
    9. '());' → logprob: -12.304376602172852
    10. '(' → logprob: -12.929376602172852

Token 366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6457481384277344
    2. 'i' → logprob: -1.8957481384277344
    3. '   ' → logprob: -2.1457481384277344
    4. '<|end|>' → logprob: -2.3957481384277344
    5. ' i' → logprob: -3.1457481384277344
    6. ' 
' → logprob: -3.7707481384277344
    7. '```' → logprob: -4.020748138427734
    8. '        
' → logprob: -5.020748138427734
    9. ' ' → logprob: -5.520748138427734
    10. '\n' → logprob: -5.895748138427734

Token 367: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.01859387755393982
    2. ' i' → logprob: -4.268593788146973
    3. '   ' → logprob: -6.018593788146973
    4. '       ' → logprob: -6.268593788146973
    5. ' ' → logprob: -10.143593788146973
    6. '	i' → logprob: -11.143593788146973
    7. 's' → logprob: -11.393593788146973
    8. '  ' → logprob: -11.768593788146973
    9. ' 
' → logprob: -11.893593788146973
    10. '```' → logprob: -12.643593788146973

Token 368: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3871365785598755
    2. ' +=' → logprob: -1.1371365785598755
    3. '+' → logprob: -8.262136459350586
    4. '```' → logprob: -12.762136459350586
    5. ']+=' → logprob: -13.387136459350586
    6. '=' → logprob: -13.512136459350586
    7. ')' → logprob: -14.387136459350586
    8. '+='' → logprob: -15.012136459350586
    9. ' +' → logprob: -15.262136459350586
    10. '+="' → logprob: -15.762136459350586

Token 369: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -20.25004005432129
    4. '   ' → logprob: -20.50004005432129
    5. '１' → logprob: -20.62504005432129
    6. '+' → logprob: -20.87504005432129
    7. '0' → logprob: -21.25004005432129
    8. '
' → logprob: -21.25004005432129
    9. ' ' → logprob: -21.87504005432129
    10. '2' → logprob: -21.93754005432129

Token 370: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -20.4375
    4. '   ' → logprob: -20.8125
    5. '１' → logprob: -21.0
    6. '0' → logprob: -21.1875
    7. '2' → logprob: -21.375
    8. '
' → logprob: -21.5625
    9. 'i' → logprob: -21.75
    10. '+' → logprob: -21.875

Token 371: '
' (ID: 198)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dr' → logprob: -0.6594972610473633
    2. '       ' → logprob: -1.1594972610473633
    3. '   ' → logprob: -2.7844972610473633
    4. 'er' → logprob: -2.7844972610473633
    5. 'dc' → logprob: -3.6594972610473633
    6. 'tr' → logprob: -5.034497261047363
    7. ',' → logprob: -5.784497261047363
    8. ' dr' → logprob: -5.909497261047363
    9. ' er' → logprob: -7.159497261047363
    10. 'fr' → logprob: -7.284497261047363

Token 372: '       ' (ID: 309)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -0.5130085349082947
    2. 'er' → logprob: -1.8880085945129395
    3. '   ' → logprob: -2.2630085945129395
    4. '       ' → logprob: -2.6380085945129395
    5. 'tr' → logprob: -3.0130085945129395
    6. 'gr' → logprob: -4.8880085945129395
    7. 'fr' → logprob: -5.1380085945129395
    8. 'goal' → logprob: -6.5130085945129395
    9. 'dc' → logprob: -6.7630085945129395
    10. ' dr' → logprob: -6.7630085945129395

Token 373: ' gr' (ID: 984)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.8310323357582092
    2. 'dr' → logprob: -0.8310323357582092
    3. 'tr' → logprob: -2.3310322761535645
    4. 'gr' (adapté à ' gr') → logprob: -3.5810322761535645
    5. 'fr' → logprob: -6.9560322761535645
    6. '   ' → logprob: -7.2060322761535645
    7. ' er' → logprob: -7.2060322761535645
    8. 'sc' → logprob: -7.3310322761535645
    9. 'sg' → logprob: -8.706032752990723
    10. 'sd' → logprob: -8.956032752990723

Token 374: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008776354603469372
    2. 'r' → logprob: -4.7587761878967285
    3. ',r' → logprob: -9.133776664733887
    4. ' ,' → logprob: -10.258776664733887
    5. 'w' → logprob: -11.633776664733887
    6. '       ' → logprob: -12.633776664733887
    7. 'ow' → logprob: -13.133776664733887
    8. ',
' → logprob: -13.758776664733887
    9. 'c' → logprob: -13.758776664733887
    10. '   ' → logprob: -14.133776664733887

Token 375: ' gc' (ID: 30765)
  Prédit: 'gc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gc' → logprob: -0.01698225550353527
    2. 'sc' → logprob: -4.391982078552246
    3. ' gc' → logprob: -5.516982078552246
    4. ' sc' → logprob: -8.266982078552246
    5. 'gs' → logprob: -10.016982078552246
    6. ' ' → logprob: -10.266982078552246
    7. '   ' → logprob: -10.766982078552246
    8. 'int' → logprob: -11.141982078552246
    9. 'gt' → logprob: -11.391982078552246
    10. '  ' → logprob: -11.641982078552246

Token 376: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132626414299011
    2. ' =' → logprob: -1.313262701034546
    3. ' ' → logprob: -14.688262939453125
    4. ',' → logprob: -14.688262939453125
    5. ')' → logprob: -18.063262939453125
    6. '   ' → logprob: -18.063262939453125
    7. '=line' → logprob: -18.688262939453125
    8. '＝' → logprob: -18.813262939453125
    9. ' ' → logprob: -19.188262939453125
    10. '  ' → logprob: -19.438262939453125

Token 377: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3868715465068817
    2. 'map' → logprob: -1.136871576309204
    3. '	map' → logprob: -15.136871337890625
    4. '    ' → logprob: -15.636871337890625
    5. '(map' → logprob: -17.386871337890625
    6. ' ' → logprob: -17.511871337890625
    7. '        ' → logprob: -18.386871337890625
    8. '   ' → logprob: -18.386871337890625
    9. 'list' → logprob: -19.636871337890625
    10. 'm' → logprob: -19.761871337890625

Token 378: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0020092912018299103
    2. 'int' → logprob: -6.377009391784668
    3. '[int' → logprob: -8.502009391784668
    4. '=int' → logprob: -9.627009391784668
    5. ',int' → logprob: -11.127009391784668
    6. '<int' → logprob: -11.127009391784668
    7. ']int' → logprob: -12.002009391784668
    8. ':int' → logprob: -13.252009391784668
    9. ' int' → logprob: -14.627009391784668
    10. '	int' → logprob: -16.00200843811035

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008647306822240353
    2. ',input' → logprob: -5.383647441864014
    3. ',int' → logprob: -6.508647441864014
    4. '[i' → logprob: -7.258647441864014
    5. ')' → logprob: -7.633647441864014
    6. '(input' → logprob: -8.383646965026855
    7. '[int' → logprob: -8.508646965026855
    8. '(i' → logprob: -8.508646965026855
    9. ',i' → logprob: -8.758646965026855
    10. 'int' → logprob: -8.758646965026855

Token 380: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.016305672004818916
    2. ' input' → logprob: -4.516305446624756
    3. 'int' → logprob: -5.266305446624756
    4. 'map' → logprob: -9.766305923461914
    5. '(input' → logprob: -11.016305923461914
    6. '<input' → logprob: -13.516305923461914
    7. ' map' → logprob: -13.641305923461914
    8. '[input' → logprob: -14.141305923461914
    9. 'import' → logprob: -14.516305923461914
    10. ' ' → logprob: -14.641305923461914

Token 381: '_lines' (ID: 42980)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.5358694731257856e-05
    2. '(i' → logprob: -10.500035285949707
    3. '```' → logprob: -12.750035285949707
    4. 'i' → logprob: -12.875035285949707
    5. '   ' → logprob: -14.875035285949707
    6. '{i' → logprob: -15.000035285949707
    7. ')' → logprob: -15.625035285949707
    8. '           ' → logprob: -15.625035285949707
    9. '[' → logprob: -15.875035285949707
    10. '.readline' → logprob: -16.125036239624023

Token 382: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.200166469876422e-06
    2. '.split' → logprob: -13.000004768371582
    3. '```' → logprob: -13.625004768371582
    4. '.readline' → logprob: -14.000004768371582
    5. 'i' → logprob: -15.625004768371582
    6. '{i' → logprob: -15.750004768371582
    7. '   ' → logprob: -15.750004768371582
    8. ')' → logprob: -16.5000057220459
    9. 'split' → logprob: -16.8750057220459
    10. '(i' → logprob: -17.0000057220459

Token 383: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -7.135819760151207e-05
    2. '.split' → logprob: -9.75007152557373
    3. ').' → logprob: -12.12507152557373
    4. ' ].' → logprob: -12.50007152557373
    5. ''].' → logprob: -13.75007152557373
    6. ']' → logprob: -14.00007152557373
    7. '.' → logprob: -14.62507152557373
    8. '"].' → logprob: -15.25007152557373
    9. ']+' → logprob: -15.50007152557373
    10. '}.' → logprob: -15.62507152557373

Token 384: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000553151941858232
    2. 'strip' → logprob: -7.500553131103516
    3. ' split' → logprob: -15.875553131103516
    4. 'skip' → logprob: -19.375553131103516
    5. 'rstrip' → logprob: -19.375553131103516
    6. '.split' → logprob: -21.125553131103516
    7. '_split' → logprob: -21.500553131103516
    8. 'read' → logprob: -22.250553131103516
    9. 'spl' → logprob: -22.250553131103516
    10. ' strip' → logprob: -22.625553131103516

Token 385: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49246615171432495
    2. ')
' → logprob: -0.992466151714325
    3. '())
' → logprob: -4.617465972900391
    4. '()' → logprob: -5.367465972900391
    5. '())' → logprob: -5.742465972900391
    6. '()
' → logprob: -7.742465972900391
    7. '   ' → logprob: -11.49246597290039
    8. '```' → logprob: -12.11746597290039
    9. ' )
' → logprob: -12.24246597290039
    10. ')
' → logprob: -12.86746597290039

Token 386: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5943885445594788
    2. 'i' → logprob: -1.469388484954834
    3. '   ' → logprob: -1.719388484954834
    4. '<|end|>' → logprob: -4.344388484954834
    5. '```' → logprob: -4.344388484954834
    6. ' i' → logprob: -4.969388484954834
    7. '
' → logprob: -6.844388484954834
    8. ' ' → logprob: -7.094388484954834
    9. ' 
' → logprob: -7.594388484954834
    10. '``' → logprob: -7.719388484954834

Token 387: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.021693913266062737
    2. '       ' → logprob: -4.021693706512451
    3. ' i' → logprob: -5.771693706512451
    4. '   ' → logprob: -7.896693706512451
    5. '	i' → logprob: -10.64669418334961
    6. ' ' → logprob: -12.52169418334961
    7. ' 
' → logprob: -12.64669418334961
    8. '
' → logprob: -12.64669418334961
    9. '      ' → logprob: -13.02169418334961
    10. '<|end|>' → logprob: -13.27169418334961

Token 388: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.025710953399538994
    2. ' +=' → logprob: -3.7757110595703125
    3. '+' → logprob: -6.0257110595703125
    4. ']+=' → logprob: -10.900711059570312
    5. '=' → logprob: -11.275711059570312
    6. '```' → logprob: -11.775711059570312
    7. '   ' → logprob: -12.400711059570312
    8. '++' → logprob: -13.775711059570312
    9. ' +' → logprob: -14.525711059570312
    10. '+='' → logprob: -14.525711059570312

Token 389: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -18.625158309936523
    4. '```' → logprob: -19.500158309936523
    5. '0' → logprob: -19.625158309936523
    6. '       ' → logprob: -20.562658309936523
    7. '１' → logprob: -20.687658309936523
    8. '2' → logprob: -21.000158309936523
    9. '`' → logprob: -21.125158309936523
    10. 'int' → logprob: -21.187658309936523

Token 390: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.2500057220459
    4. '```' → logprob: -17.5000057220459
    5. '0' → logprob: -18.6250057220459
    6. '2' → logprob: -18.6875057220459
    7. '１' → logprob: -19.1250057220459
    8. '
' → logprob: -19.1875057220459
    9. '       ' → logprob: -20.4375057220459
    10. '``' → logprob: -20.5000057220459

Token 391: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2270561307668686
    2. '   ' → logprob: -1.6020561456680298
    3. '        
' → logprob: -7.72705602645874
    4. 'dice' → logprob: -8.227056503295898
    5. 'import' → logprob: -8.727056503295898
    6. 'start' → logprob: -9.352056503295898
    7. 'distance' → logprob: -9.352056503295898
    8. '
' → logprob: -9.477056503295898
    9. '    
' → logprob: -9.477056503295898
    10. 'd' → logprob: -9.727056503295898

Token 393: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8278377056121826
    2. 'dice' → logprob: -1.7028377056121826
    3. '       ' → logprob: -1.8278377056121826
    4. 'start' → logprob: -2.0778377056121826
    5. 'distance' → logprob: -3.9528377056121826
    6. 'dp' → logprob: -4.202837944030762
    7. 'visited' → logprob: -4.202837944030762
    8. '#' (adapté à ' #') → logprob: -4.577837944030762
    9. 'import' → logprob: -4.827837944030762
    10. 'queue' → logprob: -5.077837944030762

Token 394: ' dice' (ID: 22078)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6152917146682739
    2. 'dist' → logprob: -1.740291714668274
    3. '#' → logprob: -1.990291714668274
    4. 'dice' → logprob: -2.9902915954589844
    5. 'visited' → logprob: -3.6152915954589844
    6. 'initial' → logprob: -3.6152915954589844
    7. 'dp' → logprob: -4.615291595458984
    8. 'import' → logprob: -4.990291595458984
    9. 'INF' → logprob: -5.365291595458984
    10. 'top' → logprob: -5.490291595458984

Token 395: ' state' (ID: 2608)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008220217190682888
    2. '=' → logprob: -5.508220195770264
    3. '_top' → logprob: -6.008220195770264
    4. 's' → logprob: -7.633220195770264
    5. '_state' → logprob: -8.133220672607422
    6. 'top' → logprob: -8.258220672607422
    7. '_faces' → logprob: -9.008220672607422
    8. '_start' → logprob: -9.133220672607422
    9. '_states' → logprob: -9.508220672607422
    10. '_initial' → logprob: -9.758220672607422

Token 396: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016130324453115463
    2. '=' → logprob: -4.141130447387695
    3. '       ' → logprob: -10.266130447387695
    4. ',' → logprob: -10.641130447387695
    5. '   ' → logprob: -11.766130447387695
    6. '=(' → logprob: -12.016130447387695
    7. 'state' → logprob: -12.516130447387695
    8. 's' → logprob: -12.766130447387695
    9. 'initial' → logprob: -12.891130447387695
    10. ')' → logprob: -13.016130447387695

Token 397: ' (' (ID: 350)
  Prédit: '(top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(top' → logprob: -0.336985319852829
    2. '(' → logprob: -1.3369853496551514
    3. 'top' → logprob: -3.8369853496551514
    4. '#' → logprob: -7.461985111236572
    5. ' (' → logprob: -7.711985111236572
    6. ' top' → logprob: -7.836985111236572
    7. '(d' → logprob: -8.08698558807373
    8. '   ' → logprob: -10.46198558807373
    9. '[top' → logprob: -10.58698558807373
    10. '(start' → logprob: -10.71198558807373

Token 398: 'top' (ID: 8169)
  Prédit: 'top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.04355069249868393
    2. '1' → logprob: -3.168550729751587
    3. '(top' → logprob: -8.043550491333008
    4. '6' → logprob: -9.293550491333008
    5. ' top' → logprob: -9.918550491333008
    6. '(' → logprob: -10.793550491333008
    7. '0' → logprob: -11.418550491333008
    8. '7' → logprob: -11.668550491333008
    9. ' ' → logprob: -12.043550491333008
    10. 'Top' → logprob: -12.293550491333008

Token 399: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.963691804325208e-05
    2. ' ,' → logprob: -10.625029563903809
    3. ',
' → logprob: -12.875029563903809
    4. ')' → logprob: -14.375029563903809
    5. ',s' → logprob: -14.500029563903809
    6. 's' → logprob: -15.500029563903809
    7. '<|end|>' → logprob: -15.500029563903809
    8. '),' → logprob: -15.750029563903809
    9. '```' → logprob: -16.375030517578125
    10. ',d' → logprob: -16.625030517578125

Token 400: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.02353079617023468
    2. ' south' → logprob: -3.7735307216644287
    3. 'bottom' → logprob: -8.523530960083008
    4. '6' → logprob: -9.898530960083008
    5. ' ' → logprob: -12.023530960083008
    6. '7' → logprob: -12.273530960083008
    7. '1' → logprob: -12.523530960083008
    8. 'north' → logprob: -12.648530960083008
    9. '```' → logprob: -12.773530960083008
    10. '0' → logprob: -13.023530960083008

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.780830830801278e-05
    2. ')' → logprob: -9.62508773803711
    3. ' ,' → logprob: -11.12508773803711
    4. ',
' → logprob: -12.25008773803711
    5. '       ' → logprob: -14.75008773803711
    6. '<|end|>' → logprob: -14.87508773803711
    7. ',e' → logprob: -15.37508773803711
    8. ')
' → logprob: -15.37508773803711
    9. '),' → logprob: -15.50008773803711
    10. 's' → logprob: -16.37508773803711

Token 402: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.0041363416239619255
    2. ' east' → logprob: -5.504136562347412
    3. 'bottom' → logprob: -11.129136085510254
    4. '7' → logprob: -11.129136085510254
    5. 'north' → logprob: -11.254136085510254
    6. 'west' → logprob: -12.129136085510254
    7. '6' → logprob: -13.004136085510254
    8. '1' → logprob: -13.129136085510254
    9. '   ' → logprob: -13.504136085510254
    10. '0' → logprob: -13.754136085510254

Token 403: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00746003445237875
    2. ')
' → logprob: -5.132460117340088
    3. ',' → logprob: -6.507460117340088
    4. '),' → logprob: -11.50745964050293
    5. ')

' → logprob: -11.63245964050293
    6. ' )' → logprob: -12.13245964050293
    7. '       ' → logprob: -12.50745964050293
    8. ')
' → logprob: -12.63245964050293
    9. ')=' → logprob: -13.63245964050293
    10. ')`' → logprob: -14.13245964050293

Token 404: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036291345953941345
    2. ',' → logprob: -4.036291122436523
    3. ')' → logprob: -4.411291122436523
    4. '<|end|>' → logprob: -6.161291122436523
    5. ' ,' → logprob: -6.911291122436523
    6. '        
' → logprob: -7.536291122436523
    7. ' ' → logprob: -7.661291122436523
    8. ' =' → logprob: -8.161291122436523
    9. ' (' → logprob: -8.911291122436523
    10. ' )' → logprob: -9.036291122436523

Token 405: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1406942754983902
    2. 'dice' → logprob: -2.2656943798065186
    3. ' dice' → logprob: -4.0156941413879395
    4. ',' → logprob: -6.0156941413879395
    5. 'state' → logprob: -6.2656941413879395
    6. 'start' → logprob: -6.3906941413879395
    7. 'd' → logprob: -7.3906941413879395
    8. 'top' → logprob: -7.7656941413879395
    9. ',d' → logprob: -8.015694618225098
    10. 'queue' → logprob: -8.265694618225098

Token 406: ' Initially' (ID: 96924)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dice' → logprob: -0.08301419019699097
    2. 'start' → logprob: -2.7080142498016357
    3. 'top' → logprob: -5.708014011383057
    4. 'state' → logprob: -5.833014011383057
    5. '   ' → logprob: -6.333014011383057
    6. 'initial' → logprob: -6.458014011383057
    7. ' dice' → logprob: -6.583014011383057
    8. 'import' → logprob: -8.083014488220215
    9. 'queue' → logprob: -8.208014488220215
    10. 'from' → logprob: -8.458014488220215

Token 407: ' top' (ID: 2344)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41350337862968445
    2. '=' → logprob: -1.1635034084320068
    3. '(' → logprob: -4.538503170013428
    4. '       ' → logprob: -5.163503170013428
    5. '=(' → logprob: -5.163503170013428
    6. 'dice' → logprob: -6.038503170013428
    7. ' (' → logprob: -6.788503170013428
    8. ',' → logprob: -8.288503646850586
    9. 'd' → logprob: -9.538503646850586
    10. ' dice' → logprob: -9.913503646850586

Token 408: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09585047513246536
    2. ' =' → logprob: -2.5958504676818848
    3. ',' → logprob: -4.095850467681885
    4. ' ,' → logprob: -9.220850944519043
    5. '=(' → logprob: -9.845850944519043
    6. ')' → logprob: -11.595850944519043
    7. '=
' → logprob: -12.345850944519043
    8. ' ' → logprob: -13.095850944519043
    9. ',
' → logprob: -13.720850944519043
    10. '   ' → logprob: -13.970850944519043

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. '(' → logprob: -11.875012397766113
    3. '6' → logprob: -12.750012397766113
    4. ' ' → logprob: -13.000012397766113
    5. '```' → logprob: -16.50001335144043
    6. 'dice' → logprob: -16.93751335144043
    7. '4' → logprob: -17.25001335144043
    8. '_' → logprob: -17.68751335144043
    9. '１' → logprob: -17.81251335144043
    10. ' (' → logprob: -18.00001335144043

Token 410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002679225755855441
    2. ' ,' → logprob: -6.002679347991943
    3. ',
' → logprob: -8.752678871154785
    4. ',s' → logprob: -11.502678871154785
    5. '   ' → logprob: -12.127678871154785
    6. '
' → logprob: -12.627678871154785
    7. '<|end|>' → logprob: -12.752678871154785
    8. ')' → logprob: -12.877678871154785
    9. ' ' → logprob: -13.002678871154785
    10. '       ' → logprob: -13.002678871154785

Token 411: ' south' (ID: 15019)
  Prédit: ' south'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' south' → logprob: -0.3874465227127075
    2. 'south' → logprob: -1.1374465227127075
    3. 'north' → logprob: -8.887446403503418
    4. 'bottom' → logprob: -8.887446403503418
    5. ' east' → logprob: -9.512446403503418
    6. ' north' → logprob: -9.637446403503418
    7. ' bottom' → logprob: -10.137446403503418
    8. 'east' → logprob: -10.387446403503418
    9. ' ' → logprob: -11.262446403503418
    10. '   ' → logprob: -11.512446403503418

Token 412: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020827624946832657
    2. ',' → logprob: -4.520827770233154
    3. ' =' → logprob: -4.645827770233154
    4. ' ,' → logprob: -9.645827293395996
    5. '1' → logprob: -10.020827293395996
    6. ' ' → logprob: -11.645827293395996
    7. '<|end|>' → logprob: -12.270827293395996
    8. ')' → logprob: -12.520827293395996
    9. '   ' → logprob: -13.020827293395996
    10. '```' → logprob: -14.895827293395996

Token 413: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0038596971426159143
    2. '6' → logprob: -5.878859519958496
    3. '5' → logprob: -6.878859519958496
    4. '3' → logprob: -10.628859519958496
    5. ' ' → logprob: -15.128859519958496
    6. '```' → logprob: -15.753859519958496
    7. '4' → logprob: -16.253860473632812
    8. '1' → logprob: -16.628860473632812
    9. '0' → logprob: -17.378860473632812
    10. '

' → logprob: -17.753860473632812

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004994890186935663
    2. '       ' → logprob: -5.504994869232178
    3. ' ,' → logprob: -7.754994869232178
    4. '<|end|>' → logprob: -8.129995346069336
    5. ',e' → logprob: -10.254995346069336
    6. '   ' → logprob: -10.254995346069336
    7. '<|end|>' → logprob: -10.379995346069336
    8. ',d' → logprob: -10.629995346069336
    9. '```' → logprob: -11.504995346069336
    10. ',s' → logprob: -11.504995346069336

Token 415: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.5759556293487549
    2. ' east' → logprob: -0.8259556293487549
    3. 'e' → logprob: -12.325955390930176
    4. 'west' → logprob: -13.075955390930176
    5. '2' → logprob: -13.200955390930176
    6. ' ' → logprob: -13.700955390930176
    7. '1' → logprob: -13.825955390930176
    8. '   ' → logprob: -14.200955390930176
    9. '3' → logprob: -14.200955390930176
    10. 'and' → logprob: -14.575955390930176

Token 416: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00017243190086446702
    2. '3' → logprob: -8.75017261505127
    3. '1' → logprob: -11.87517261505127
    4. '(' → logprob: -12.37517261505127
    5. ' =' → logprob: -12.87517261505127
    6. ' ' → logprob: -17.250171661376953
    7. '=
' → logprob: -17.625171661376953
    8. '=(' → logprob: -17.875171661376953
    9. '```' → logprob: -17.875171661376953
    10. ',' → logprob: -18.125171661376953

Token 417: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.125000953674316
    3. '4' → logprob: -16.250001907348633
    4. '```' → logprob: -16.500001907348633
    5. '۳' → logprob: -17.687501907348633
    6. '5' → logprob: -18.125001907348633
    7. '３' → logprob: -18.250001907348633
    8. '>' → logprob: -18.687501907348633
    9. 'east' → logprob: -18.750001907348633
    10. '1' → logprob: -18.875001907348633

Token 418: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09797798842191696
    2. 'dice' → logprob: -2.597977876663208
    3. ',' → logprob: -5.097978115081787
    4. 'd' → logprob: -5.347978115081787
    5. ',d' → logprob: -5.722978115081787
    6. ' dice' → logprob: -6.472978115081787
    7. 'state' → logprob: -6.972978115081787
    8. '        
' → logprob: -7.222978115081787
    9. 'current' → logprob: -8.097977638244629
    10. '
' → logprob: -8.847977638244629

Token 419: ' in' (ID: 306)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.3159853219985962
    2. '(' → logprob: -1.9409853219985962
    3. ' the' → logprob: -2.4409852027893066
    4. '       ' → logprob: -2.8159852027893066
    5. 'dice' → logprob: -2.8159852027893066
    6. 'default' → logprob: -2.9409852027893066
    7. ' given' → logprob: -2.9409852027893066
    8. ' a' → logprob: -3.0659852027893066
    9. ' stated' → logprob: -3.9409852027893066
    10. '        ' → logprob: -4.065985202789307

Token 420: ' problem' (ID: 4792)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.22255286574363708
    2. 'standard' → logprob: -1.8475528955459595
    3. 'a' → logprob: -3.34755277633667
    4. ' the' → logprob: -5.97255277633667
    5. 'problem' → logprob: -6.59755277633667
    6. ' standard' → logprob: -7.09755277633667
    7. 'most' → logprob: -7.47255277633667
    8. 'classic' → logprob: -7.84755277633667
    9. 'usual' → logprob: -8.847553253173828
    10. 'many' → logprob: -8.847553253173828

Token 421: ' statement' (ID: 9710)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005751936114393175
    2. '<|end|>' → logprob: -8.375575065612793
    3. '        
' → logprob: -9.000575065612793
    4. 'd' → logprob: -9.750575065612793
    5. ',d' → logprob: -10.000575065612793
    6. ',' → logprob: -10.625575065612793
    7. ')' → logprob: -10.875575065612793
    8. 'state' → logprob: -11.125575065612793
    9. '<|end|>' → logprob: -11.375575065612793
    10. 'dice' → logprob: -11.875575065612793

Token 422: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006367174442857504
    2. 'dice' → logprob: -5.631367206573486
    3. 'd' → logprob: -7.131367206573486
    4. '<|end|>' → logprob: -7.506367206573486
    5. ' dice' → logprob: -7.756367206573486
    6. '        
' → logprob: -8.006366729736328
    7. ',d' → logprob: -9.006366729736328
    8. '
' → logprob: -9.131366729736328
    9. 'state' → logprob: -9.506366729736328
    10. ',' → logprob: -9.756366729736328

Token 423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014202340971678495
    2. '        
' → logprob: -7.501420021057129
    3. ',' → logprob: -8.251420021057129
    4. 'dice' → logprob: -8.376420021057129
    5. ',d' → logprob: -9.251420021057129
    6. ' dice' → logprob: -9.501420021057129
    7. '
' → logprob: -9.876420021057129
    8. 'state' → logprob: -9.876420021057129
    9. 'd' → logprob: -10.751420021057129
    10. '```' → logprob: -11.251420021057129

Token 424: ' start' (ID: 1604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018212106078863144
    2. 'dice' → logprob: -4.26821231842041
    3. ' dice' → logprob: -5.76821231842041
    4. 'top' → logprob: -8.39321231842041
    5. 'state' → logprob: -8.39321231842041
    6. 'd' → logprob: -8.76821231842041
    7. '   ' → logprob: -9.89321231842041
    8. '
' → logprob: -10.26821231842041
    9. 'start' (adapté à ' start') → logprob: -10.39321231842041
    10. '        
' → logprob: -10.51821231842041

Token 425: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.24796676635742188
    2. ' =' → logprob: -1.7479667663574219
    3. '_d' → logprob: -3.747966766357422
    4. '=' → logprob: -3.872966766357422
    5. 'state' → logprob: -7.622966766357422
    6. '_states' → logprob: -8.122966766357422
    7. 'dice' → logprob: -8.747966766357422
    8. '_' → logprob: -9.247966766357422
    9. '_token' → logprob: -10.872966766357422
    10. '_pos' → logprob: -11.122966766357422

Token 426: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804321587085724
    2. '=' → logprob: -3.288043260574341
    3. ',' → logprob: -14.038043022155762
    4. ')' → logprob: -15.038043022155762
    5. '   ' → logprob: -15.038043022155762
    6. ' =(' → logprob: -15.663043022155762
    7. ' =
' → logprob: -16.663043975830078
    8. ' ' → logprob: -17.038043975830078
    9. '    ' → logprob: -17.038043975830078
    10. '<|end|>' → logprob: -17.538043975830078

Token 427: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007105246186256409
    2. ' (' → logprob: -7.250710487365723
    3. '   ' → logprob: -14.875710487365723
    4. '((' → logprob: -15.125710487365723
    5. '  ' → logprob: -18.00071144104004
    6. ' ' → logprob: -20.00071144104004
    7. '(None' → logprob: -20.00071144104004
    8. '1' → logprob: -20.50071144104004
    9. '('' → logprob: -20.62571144104004
    10. '（' → logprob: -20.87571144104004

Token 428: 'sr' (ID: 25616)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002032611286267638
    2. '(' → logprob: -6.37703275680542
    3. '0' → logprob: -8.377032279968262
    4. ' ' → logprob: -9.627032279968262
    5. ' (' → logprob: -11.252032279968262
    6. '(sr' → logprob: -12.502032279968262
    7. 'sr' → logprob: -12.627032279968262
    8. '   ' → logprob: -12.752032279968262
    9. ')' → logprob: -13.502032279968262
    10. 'grid' → logprob: -13.502032279968262

Token 429: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007513784803450108
    2. ' ,' → logprob: -7.250751495361328
    3. ',
' → logprob: -10.500751495361328
    4. '),' → logprob: -12.625751495361328
    5. ')' → logprob: -12.750751495361328
    6. ',s' → logprob: -13.000751495361328
    7. ' ' → logprob: -13.750751495361328
    8. '<|end|>' → logprob: -14.250751495361328
    9. '‌,' → logprob: -14.625751495361328
    10. '   ' → logprob: -14.625751495361328

Token 430: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.011054305359721184
    2. ' sc' → logprob: -4.511054515838623
    3. ' ' → logprob: -13.136054039001465
    4. 'SC' → logprob: -14.011054039001465
    5. '(sc' → logprob: -14.136054039001465
    6. '
' → logprob: -14.261054039001465
    7. 'Sc' → logprob: -14.636054039001465
    8. ' ' → logprob: -14.886054039001465
    9. ' 
' → logprob: -15.136054039001465
    10. 'scp' → logprob: -15.136054039001465

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001450187264708802
    2. ' ,' → logprob: -9.000144958496094
    3. ',
' → logprob: -11.375144958496094
    4. '1' → logprob: -12.250144958496094
    5. ')' → logprob: -13.000144958496094
    6. '),' → logprob: -13.375144958496094
    7. '(' → logprob: -13.875144958496094
    8. '   ' → logprob: -15.500144958496094
    9. ',(' → logprob: -16.625144958496094
    10. ')
' → logprob: -17.000144958496094

Token 432: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05512542277574539
    2. '(' → logprob: -2.9301254749298096
    3. ' (' → logprob: -8.93012523651123
    4. ' ' → logprob: -9.18012523651123
    5. '   ' → logprob: -12.18012523651123
    6. '((' → logprob: -14.55512523651123
    7. '  ' → logprob: -14.68012523651123
    8. ')' → logprob: -14.93012523651123
    9. '0' → logprob: -15.74262523651123
    10. '```' → logprob: -15.80512523651123

Token 433: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016043636947870255
    2. '(' → logprob: -4.141043663024902
    3. ' (' → logprob: -12.141043663024902
    4. ' ' → logprob: -12.516043663024902
    5. '((' → logprob: -16.266042709350586
    6. '   ' → logprob: -16.641042709350586
    7. '```' → logprob: -17.016042709350586
    8. ')' → logprob: -17.266042709350586
    9. '('' → logprob: -18.141042709350586
    10. '[' → logprob: -18.453542709350586

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005018008523620665
    2. ' ,' → logprob: -7.75050163269043
    3. ')' → logprob: -9.87550163269043
    4. '2' → logprob: -11.12550163269043
    5. ',
' → logprob: -12.87550163269043
    6. '   ' → logprob: -13.87550163269043
    7. ' ' → logprob: -14.50050163269043
    8. '    ' → logprob: -15.62550163269043
    9. '  ' → logprob: -16.12550163269043
    10. '<|end|>' → logprob: -16.37550163269043

Token 435: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00029637437546625733
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.937796592712402
    4. '۲' → logprob: -16.562795639038086
    5. '  ' → logprob: -16.875295639038086
    6. '1' → logprob: -17.750295639038086
    7. '২' → logprob: -18.062795639038086
    8. '２' → logprob: -18.187795639038086
    9. '```' → logprob: -18.250295639038086
    10. '२' → logprob: -18.375295639038086

Token 436: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.75001335144043
    4. '  ' → logprob: -17.37501335144043
    5. '۲' → logprob: -17.87501335144043
    6. '```' → logprob: -18.37501335144043
    7. '1' → logprob: -18.87501335144043
    8. '     ' → logprob: -19.06251335144043
    9. '    ' → logprob: -19.06251335144043
    10. '২' → logprob: -19.18751335144043

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000945876759942621
    2. ' ,' → logprob: -7.125946044921875
    3. '3' → logprob: -8.875946044921875
    4. ')' → logprob: -13.750946044921875
    5. ' ' → logprob: -15.125946044921875
    6. ',
' → logprob: -15.750946044921875
    7. '   ' → logprob: -16.875946044921875
    8. '<|end|>' → logprob: -16.875946044921875
    9. '2' → logprob: -17.375946044921875
    10. '4' → logprob: -17.750946044921875

Token 438: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '<|end|>' → logprob: -18.000045776367188
    4. '  ' → logprob: -18.750045776367188
    5. '۳' → logprob: -18.875045776367188
    6. '   ' → logprob: -19.250045776367188
    7. '３' → logprob: -20.375045776367188
    8. '    ' → logprob: -20.625045776367188
    9. ')' → logprob: -20.875045776367188
    10. '৩' → logprob: -21.125045776367188

Token 439: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '۳' → logprob: -19.375
    4. '<|end|>' → logprob: -20.125
    5. ')' → logprob: -20.75
    6. '   ' → logprob: -21.0
    7. '３' → logprob: -21.125
    8. '৩' → logprob: -21.25
    9. '  ' → logprob: -21.5
    10. '३' → logprob: -21.75

Token 440: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006427380722016096
    2. '       ' → logprob: -8.000642776489258
    3. ',' → logprob: -8.250642776489258
    4. ')
' → logprob: -10.375642776489258
    5. '<|end|>' → logprob: -12.000642776489258
    6. ' )' → logprob: -12.250642776489258
    7. '   ' → logprob: -13.000642776489258
    8. '),' → logprob: -15.125642776489258
    9. '<|end|>' → logprob: -15.875642776489258
    10. ')#' → logprob: -16.375642776489258

Token 441: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001353806466795504
    2. 'queue' → logprob: -7.751353740692139
    3. '<|end|>' → logprob: -7.876353740692139
    4. '   ' → logprob: -8.001354217529297
    5. '        
' → logprob: -9.876354217529297
    6. 'import' → logprob: -10.251354217529297
    7. ' queue' → logprob: -10.751354217529297
    8. '```' → logprob: -11.376354217529297
    9. ',' → logprob: -11.876354217529297
    10. 'stack' → logprob: -11.876354217529297

Token 442: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.5247131586074829
    2. '       ' → logprob: -1.774713158607483
    3. 'dist' → logprob: -2.1497130393981934
    4. 'visited' → logprob: -3.0247130393981934
    5. 'heap' → logprob: -3.1497130393981934
    6. 'pq' → logprob: -3.8997130393981934
    7. '        
' → logprob: -6.149713039398193
    8. 'q' → logprob: -6.274713039398193
    9. '   ' → logprob: -6.399713039398193
    10. 'import' → logprob: -6.649713039398193

Token 443: ' distance' (ID: 9324)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.4641260802745819
    2. 'visited' → logprob: -1.9641261100769043
    3. 'dist' → logprob: -2.3391261100769043
    4. 'queue' → logprob: -2.5891261100769043
    5. 'pq' → logprob: -3.0891261100769043
    6. 'q' → logprob: -5.964126110076904
    7. 'import' → logprob: -5.964126110076904
    8. '#' → logprob: -6.464126110076904
    9. 'dire' → logprob: -6.714126110076904
    10. 'hq' → logprob: -6.714126110076904

Token 444: ' dictionary' (ID: 22131)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22625482082366943
    2. '=' → logprob: -1.6012548208236694
    3. 's' → logprob: -7.726254940032959
    4. ',' → logprob: -8.7262544631958
    5. '_map' → logprob: -8.7262544631958
    6. '   ' → logprob: -10.7262544631958
    7. ' ' → logprob: -10.8512544631958
    8. '_states' → logprob: -12.7262544631958
    9. '  ' → logprob: -12.8512544631958
    10. '_' → logprob: -12.9762544631958

Token 445: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004690710920840502
    2. '=' → logprob: -5.379690647125244
    3. 'dist' → logprob: -10.004691123962402
    4. 'distance' → logprob: -11.754691123962402
    5. ',' → logprob: -11.879691123962402
    6. '   ' → logprob: -13.129691123962402
    7. ' dist' → logprob: -13.129691123962402
    8. 'import' → logprob: -13.879691123962402
    9. '{' → logprob: -14.129691123962402
    10. ' =
' → logprob: -14.379691123962402

Token 446: ' key' (ID: 2140)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.030037999153137207
    2. ' dist' → logprob: -3.5300378799438477
    3. 'import' → logprob: -9.405037879943848
    4. 'distance' → logprob: -9.405037879943848
    5. '       ' → logprob: -9.655037879943848
    6. ' distances' → logprob: -10.030037879943848
    7. '   ' → logprob: -12.530037879943848
    8. 'from' → logprob: -12.655037879943848
    9. '{' → logprob: -13.530037879943848
    10. 'd' → logprob: -14.030037879943848

Token 447: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0549142099916935
    2. '=' → logprob: -2.9299142360687256
    3. ' =(' → logprob: -11.929914474487305
    4. '=(' → logprob: -12.304914474487305
    5. 'import' → logprob: -12.429914474487305
    6. '=
' → logprob: -12.679914474487305
    7. ' =
' → logprob: -12.804914474487305
    8. 's' → logprob: -12.929914474487305
    9. ',' → logprob: -13.054914474487305
    10. ')' → logprob: -13.179914474487305

Token 448: ' (' (ID: 350)
  Prédit: '(sr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sr' → logprob: -0.3277120590209961
    2. '(r' → logprob: -1.827712059020996
    3. '(s' → logprob: -2.827712059020996
    4. ' (' → logprob: -2.827712059020996
    5. '(state' → logprob: -8.202712059020996
    6. '(rs' → logprob: -10.702712059020996
    7. '(lambda' → logprob: -11.077712059020996
    8. '   ' → logprob: -11.827712059020996
    9. '(rc' → logprob: -11.952712059020996
    10. '(si' → logprob: -12.077712059020996

Token 449: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06900995224714279
    2. 'row' → logprob: -3.069010019302368
    3. 'sr' → logprob: -3.944010019302368
    4. '(sr' → logprob: -7.569009780883789
    5. '(r' → logprob: -9.194009780883789
    6. ' row' → logprob: -9.944009780883789
    7. ' (' → logprob: -10.319009780883789
    8. ' r' → logprob: -10.444009780883789
    9. '(row' → logprob: -10.569009780883789
    10. '   ' → logprob: -10.694009780883789

Token 450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009300446254201233
    2. ',c' → logprob: -7.375929832458496
    3. ',s' → logprob: -8.250929832458496
    4. ' ,' → logprob: -10.750929832458496
    5. ',
' → logprob: -12.125929832458496
    6. 'c' → logprob: -12.125929832458496
    7. 's' → logprob: -12.875929832458496
    8. ')' → logprob: -14.000929832458496
    9. ',col' → logprob: -14.000929832458496
    10. '<|end|>' → logprob: -14.375929832458496

Token 451: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002613358374219388
    2. ' c' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.000261306762695
    4. '	c' → logprob: -17.625261306762695
    5. 's' → logprob: -17.750261306762695
    6. 'sc' → logprob: -18.625261306762695
    7. ' ' → logprob: -19.250261306762695
    8. ')c' → logprob: -19.250261306762695
    9. '    ' → logprob: -19.875261306762695
    10. '  ' → logprob: -20.250261306762695

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013715129171032459
    2. ' ,' → logprob: -9.750137329101562
    3. ')' → logprob: -10.500137329101562
    4. ',d' → logprob: -10.500137329101562
    5. ',
' → logprob: -11.500137329101562
    6. ',r' → logprob: -12.375137329101562
    7. '),' → logprob: -13.250137329101562
    8. ',t' → logprob: -13.500137329101562
    9. ',s' → logprob: -13.750137329101562
    10. '   ' → logprob: -13.750137329101562

Token 453: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.004168272018432617
    2. ' top' → logprob: -6.129168510437012
    3. 't' → logprob: -6.254168510437012
    4. '   ' → logprob: -10.754168510437012
    5. ' ' → logprob: -11.754168510437012
    6. 'd' → logprob: -11.879168510437012
    7. '(top' → logprob: -11.879168510437012
    8. ' t' → logprob: -12.629168510437012
    9. '
' → logprob: -13.004168510437012
    10. '(' → logprob: -13.504168510437012

Token 454: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006199848721735179
    2. ')' → logprob: -7.625619888305664
    3. ',s' → logprob: -9.750619888305664
    4. ' ,' → logprob: -10.375619888305664
    5. '),' → logprob: -11.000619888305664
    6. ',
' → logprob: -11.625619888305664
    7. 's' → logprob: -11.750619888305664
    8. 'south' → logprob: -12.875619888305664
    9. ',state' → logprob: -13.125619888305664
    10. 'state' → logprob: -14.500619888305664

Token 455: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.07009927183389664
    2. ' south' → logprob: -2.695099353790283
    3. ' ' → logprob: -9.945098876953125
    4. 's' → logprob: -10.320098876953125
    5. 'east' → logprob: -10.320098876953125
    6. 'sou' → logprob: -11.445098876953125
    7. '   ' → logprob: -11.445098876953125
    8. 'north' → logprob: -11.695098876953125
    9. ')' → logprob: -12.445098876953125
    10. ' east' → logprob: -12.945098876953125

Token 456: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005890139145776629
    2. ')' → logprob: -7.625588893890381
    3. ' ,' → logprob: -9.750589370727539
    4. ',e' → logprob: -10.875589370727539
    5. '),' → logprob: -11.250589370727539
    6. ',
' → logprob: -11.875589370727539
    7. '<|end|>' → logprob: -14.250589370727539
    8. ',)' → logprob: -14.375589370727539
    9. '_,' → logprob: -15.250589370727539
    10. '   ' → logprob: -15.250589370727539

Token 457: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.11306529492139816
    2. ' east' → logprob: -2.238065242767334
    3. 'e' → logprob: -8.363065719604492
    4. ' ' → logprob: -12.863065719604492
    5. 'ea' → logprob: -12.988065719604492
    6. '   ' → logprob: -13.738065719604492
    7. ' ' → logprob: -14.488065719604492
    8. '  ' → logprob: -15.113065719604492
    9. '-east' → logprob: -15.238065719604492
    10. 'ec' → logprob: -15.488065719604492

Token 458: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2572510838508606
    2. '),' → logprob: -1.5072510242462158
    3. ')
' → logprob: -5.257251262664795
    4. ',' → logprob: -9.507250785827637
    5. ' )' → logprob: -12.007250785827637
    6. ')

' → logprob: -12.382250785827637
    7. ' ),' → logprob: -12.757250785827637
    8. '):
' → logprob: -12.882250785827637
    9. ')
' → logprob: -13.507250785827637
    10. '):' → logprob: -13.507250785827637

Token 459: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.1605231761932373
    2. ' value' → logprob: -1.9105231761932373
    3. 'values' → logprob: -9.410523414611816
    4. ')' → logprob: -9.910523414611816
    5. ''value' → logprob: -10.160523414611816
    6. 'distance' → logprob: -10.410523414611816
    7. '0' → logprob: -10.785523414611816
    8. ',' → logprob: -10.910523414611816
    9. ' ' → logprob: -10.910523414611816
    10. 'val' → logprob: -11.660523414611816

Token 460: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08900915831327438
    2. '=' → logprob: -2.4640090465545654
    3. ')' → logprob: -9.714009284973145
    4. ' ' → logprob: -13.464009284973145
    5. ' cost' → logprob: -13.464009284973145
    6. 'cost' → logprob: -13.839009284973145
    7. ')=' → logprob: -14.089009284973145
    8. ' =
' → logprob: -14.214009284973145
    9. ',' → logprob: -14.589009284973145
    10. 'distance' → logprob: -14.839009284973145

Token 461: ' cost' (ID: 3097)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.35551562905311584
    2. '0' → logprob: -1.2305155992507935
    3. 'sys' → logprob: -5.230515480041504
    4. 'int' → logprob: -6.855515480041504
    5. 'heap' → logprob: -8.480515480041504
    6. ' float' → logprob: -8.855515480041504
    7. 'inf' → logprob: -8.855515480041504
    8. 'None' → logprob: -10.230515480041504
    9. ' ' → logprob: -10.355515480041504
    10. 'cost' → logprob: -10.605515480041504

Token 462: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058521367609500885
    2. ' =' → logprob: -2.933521270751953
    3. '=' → logprob: -6.558521270751953
    4. 'dist' → logprob: -7.308521270751953
    5. ',' → logprob: -7.433521270751953
    6. 'distance' → logprob: -7.808521270751953
    7. '   ' → logprob: -8.933521270751953
    8. '        
' → logprob: -9.558521270751953
    9. '
' → logprob: -10.058521270751953
    10. ' dist' → logprob: -10.058521270751953

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03822612762451172
    2. '
' → logprob: -4.913226127624512
    3. '        
' → logprob: -4.913226127624512
    4. 'distance' → logprob: -5.163226127624512
    5. ' =' → logprob: -5.413226127624512
    6. '<|end|>' → logprob: -6.038226127624512
    7. ',' → logprob: -6.413226127624512
    8. ' distances' → logprob: -6.413226127624512
    9. ' 
' → logprob: -6.663226127624512
    10. ')' → logprob: -6.788226127624512

Token 464: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0202967319637537
    2. '       ' → logprob: -4.020296573638916
    3. 'import' → logprob: -6.645296573638916
    4. 'distance' → logprob: -7.520296573638916
    5. ' dist' → logprob: -8.145297050476074
    6. ' distances' → logprob: -12.520297050476074
    7. 'from' → logprob: -13.020297050476074
    8. 'd' → logprob: -13.270297050476074
    9. '   ' → logprob: -13.395297050476074
    10. ' import' → logprob: -13.770297050476074

Token 465: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759472250938416
    2. ' =' → logprob: -0.8259472250938416
    3. ')' → logprob: -12.575946807861328
    4. ',' → logprob: -13.450946807861328
    5. '[' → logprob: -14.075946807861328
    6. '={}' → logprob: -14.450946807861328
    7. 's' → logprob: -15.200946807861328
    8. '   ' → logprob: -15.325946807861328
    9. ' ' → logprob: -15.700946807861328
    10. '＝' → logprob: -15.825946807861328

Token 466: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0003820524725597352
    2. '{' → logprob: -8.000382423400879
    3. 'dict' → logprob: -10.250382423400879
    4. ' {}' → logprob: -12.000382423400879
    5. '{}
' → logprob: -12.500382423400879
    6. '{})' → logprob: -14.000382423400879
    7. '{}

' → logprob: -15.000382423400879
    8. 'default' → logprob: -16.500381469726562
    9. '{}\' → logprob: -16.625381469726562
    10. '={}' → logprob: -17.125381469726562

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010013706050813198
    2. 'queue' → logprob: -7.626001358032227
    3. 'import' → logprob: -8.001001358032227
    4. '   ' → logprob: -9.626001358032227
    5. 'from' → logprob: -10.251001358032227
    6. 'pq' → logprob: -10.501001358032227
    7. ' queue' → logprob: -11.126001358032227
    8. 'heap' → logprob: -11.126001358032227
    9. ' from' → logprob: -12.126001358032227
    10. ' import' → logprob: -12.626001358032227

Token 468: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6719041466712952
    2. '       ' → logprob: -1.7969040870666504
    3. 'queue' → logprob: -1.9219040870666504
    4. 'pq' → logprob: -2.0469040870666504
    5. 'start' → logprob: -3.4219040870666504
    6. 'import' → logprob: -5.29690408706665
    7. 'q' → logprob: -5.42190408706665
    8. 'dist' → logprob: -5.79690408706665
    9. 'hq' → logprob: -6.29690408706665
    10. '   ' → logprob: -8.421904563903809

Token 469: ' priority' (ID: 17621)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5995073914527893
    2. 'pq' → logprob: -1.0995073318481445
    3. 'hq' → logprob: -2.7245073318481445
    4. 'queue' → logprob: -3.2245073318481445
    5. 'q' → logprob: -5.2245073318481445
    6. 'start' → logprob: -5.8495073318481445
    7. 'import' → logprob: -6.4745073318481445
    8. 'h' → logprob: -6.5995073318481445
    9. 'que' → logprob: -8.224507331848145
    10. '   ' → logprob: -8.474507331848145

Token 470: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.13117273151874542
    2. 'q' → logprob: -2.1311726570129395
    3. '_queue' → logprob: -5.7561726570129395
    4. 'que' → logprob: -7.3811726570129395
    5. ' queue' → logprob: -7.7561726570129395
    6. 'heap' → logprob: -11.881173133850098
    7. ' =' → logprob: -12.256173133850098
    8. '=' → logprob: -13.006173133850098
    9. 'pq' → logprob: -13.256173133850098
    10. '   ' → logprob: -13.631173133850098

Token 471: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008395071141421795
    2. '=' → logprob: -5.383395195007324
    3. '       ' → logprob: -6.008395195007324
    4. 'pq' → logprob: -7.508395195007324
    5. 'q' → logprob: -8.508395195007324
    6. 'queue' → logprob: -8.883395195007324
    7. ' queue' → logprob: -9.008395195007324
    8. 'heap' → logprob: -9.133395195007324
    9. ' pq' → logprob: -9.633395195007324
    10. ' heap' → logprob: -9.758395195007324

Token 472: ' (' (ID: 350)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.9062612056732178
    2. 'pq' → logprob: -0.9062612056732178
    3. '[]' → logprob: -2.1562612056732178
    4. '[]
' → logprob: -3.4062612056732178
    5. '[(' → logprob: -4.406261444091797
    6. 'q' → logprob: -4.406261444091797
    7. ' heap' → logprob: -4.781261444091797
    8. 'queue' → logprob: -5.406261444091797
    9. 'hq' → logprob: -5.531261444091797
    10. ' pq' → logprob: -7.156261444091797

Token 473: 'cost' (ID: 33457)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006388849578797817
    2. 'cost' → logprob: -5.1313886642456055
    3. 'dist' → logprob: -8.256388664245605
    4. 'heap' → logprob: -9.131388664245605
    5. ')' → logprob: -9.756388664245605
    6. '(cost' → logprob: -12.131388664245605
    7. ' ' → logprob: -12.506388664245605
    8. 'priority' → logprob: -12.631388664245605
    9. ' cost' → logprob: -12.756388664245605
    10. '```' → logprob: -12.756388664245605

Token 474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031866179779171944
    2. ')' → logprob: -8.87531852722168
    3. ' ,' → logprob: -9.25031852722168
    4. ',
' → logprob: -9.87531852722168
    5. '<|end|>' → logprob: -11.00031852722168
    6. '   ' → logprob: -12.62531852722168
    7. ',)' → logprob: -13.37531852722168
    8. 'import' → logprob: -13.62531852722168
    9. '...' → logprob: -13.87531852722168
    10. ',(' → logprob: -14.12531852722168

Token 475: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006084630265831947
    2. ' r' → logprob: -5.256084442138672
    3. ')' → logprob: -7.506084442138672
    4. 'sr' → logprob: -8.256084442138672
    5. ' sr' → logprob: -12.006084442138672
    6. '(sr' → logprob: -12.006084442138672
    7. '(r' → logprob: -12.006084442138672
    8. '   ' → logprob: -12.381084442138672
    9. ')
' → logprob: -12.506084442138672
    10. ' (' → logprob: -13.131084442138672

Token 476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8087270038668066e-05
    2. ')' → logprob: -11.500027656555176
    3. ' ,' → logprob: -12.125027656555176
    4. ',
' → logprob: -12.375027656555176
    5. '<|end|>' → logprob: -12.375027656555176
    6. 'c' → logprob: -13.125027656555176
    7. ',c' → logprob: -13.750027656555176
    8. '),' → logprob: -15.750027656555176
    9. '‌,' → logprob: -16.125028610229492
    10. '   ' → logprob: -16.250028610229492

Token 477: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0040818434208631516
    2. ' c' → logprob: -5.504081726074219
    3. '   ' → logprob: -13.629081726074219
    4. '	c' → logprob: -14.379081726074219
    5. ',c' → logprob: -14.629081726074219
    6. ')c' → logprob: -14.629081726074219
    7. ' ' → logprob: -15.254081726074219
    8. ',' → logprob: -15.879081726074219
    9. '```' → logprob: -16.37908172607422
    10. '    ' → logprob: -16.62908172607422

Token 478: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002613358374219388
    2. ')' → logprob: -8.625261306762695
    3. ' ,' → logprob: -9.625261306762695
    4. ',d' → logprob: -12.125261306762695
    5. '   ' → logprob: -12.625261306762695
    6. ',
' → logprob: -13.125261306762695
    7. '       ' → logprob: -13.625261306762695
    8. '),' → logprob: -14.250261306762695
    9. 'd' → logprob: -15.250261306762695
    10. ',t' → logprob: -15.250261306762695

Token 479: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.007619399111717939
    2. ' top' → logprob: -4.882619380950928
    3. '   ' → logprob: -12.257619857788086
    4. ')' → logprob: -12.632619857788086
    5. ' ' → logprob: -13.257619857788086
    6. '	top' → logprob: -14.007619857788086
    7. '(top' → logprob: -14.507619857788086
    8. '```' → logprob: -14.882619857788086
    9. '  ' → logprob: -15.257619857788086
    10. '
' → logprob: -15.507619857788086

Token 480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.171581091824919e-05
    2. ' ,' → logprob: -10.00007152557373
    3. ')' → logprob: -11.00007152557373
    4. ',s' → logprob: -12.37507152557373
    5. ',
' → logprob: -13.00007152557373
    6. '<|end|>' → logprob: -13.37507152557373
    7. ',state' → logprob: -15.37507152557373
    8. '   ' → logprob: -15.37507152557373
    9. ',d' → logprob: -15.50007152557373
    10. ',e' → logprob: -15.75007152557373

Token 481: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.006740827579051256
    2. ' south' → logprob: -5.006741046905518
    3. 's' → logprob: -11.75674057006836
    4. 'sou' → logprob: -12.25674057006836
    5. '   ' → logprob: -12.50674057006836
    6. 'north' → logprob: -12.75674057006836
    7. '```' → logprob: -13.63174057006836
    8. ')' → logprob: -13.75674057006836
    9. ' ' → logprob: -13.88174057006836
    10. '
' → logprob: -15.13174057006836

Token 482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.7994282795116305e-05
    2. ' ,' → logprob: -10.25004768371582
    3. ',e' → logprob: -11.50004768371582
    4. ')' → logprob: -13.50004768371582
    5. ',
' → logprob: -15.00004768371582
    6. '<|end|>' → logprob: -15.00004768371582
    7. 'e' → logprob: -15.62504768371582
    8. '_,' → logprob: -16.12504768371582
    9. ',s' → logprob: -17.25004768371582
    10. '   ' → logprob: -17.25004768371582

Token 483: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.001529024913907051
    2. ' east' → logprob: -6.501529216766357
    3. 'e' → logprob: -10.7515287399292
    4. 'ea' → logprob: -13.1265287399292
    5. '   ' → logprob: -13.5015287399292
    6. ' ' → logprob: -15.1265287399292
    7. '-east' → logprob: -15.3765287399292
    8. 'eat' → logprob: -15.5015287399292
    9. 'East' → logprob: -15.8765287399292
    10. '  ' → logprob: -15.8765287399292

Token 484: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022072356659919024
    2. ')
' → logprob: -6.127207279205322
    3. ',' → logprob: -11.502206802368164
    4. '       ' → logprob: -12.002206802368164
    5. '   ' → logprob: -13.127206802368164
    6. ' )' → logprob: -13.627206802368164
    7. ')
' → logprob: -14.127206802368164
    8. '),' → logprob: -14.377206802368164
    9. ')`' → logprob: -14.627206802368164
    10. '))' → logprob: -15.252206802368164

Token 485: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8391599655151367
    2. ')' → logprob: -1.5891599655151367
    3. '       ' → logprob: -1.9641599655151367
    4. 'heap' → logprob: -2.0891599655151367
    5. ',
' → logprob: -3.8391599655151367
    6. 'queue' → logprob: -3.9641599655151367
    7. '
' → logprob: -4.464159965515137
    8. ')
' → logprob: -4.839159965515137
    9. '   ' → logprob: -4.964159965515137
    10. 'pq' → logprob: -5.214159965515137

Token 486: ' pq' (ID: 65424)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.07787652313709259
    2. 'pq' (adapté à ' pq') → logprob: -2.827876567840576
    3. 'queue' → logprob: -4.827876567840576
    4. ' heap' → logprob: -5.202876567840576
    5. '   ' → logprob: -7.452876567840576
    6. 'q' → logprob: -7.452876567840576
    7. 'import' → logprob: -7.577876567840576
    8. 'hq' → logprob: -7.952876567840576
    9. '       ' → logprob: -9.077876091003418
    10. ' pq' → logprob: -9.952876091003418

Token 487: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31338658928871155
    2. '=' → logprob: -1.3133865594863892
    3. '=[]' → logprob: -9.063386917114258
    4. '   ' → logprob: -13.438386917114258
    5. ' =[' → logprob: -13.688386917114258
    6. '.append' → logprob: -13.688386917114258
    7. ' ' → logprob: -13.938386917114258
    8. ')' → logprob: -13.938386917114258
    9. '=[]
' → logprob: -13.938386917114258
    10. '=[' → logprob: -14.438386917114258

Token 488: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0010804448975250125
    2. '[]' → logprob: -7.001080513000488
    3. ' [(' → logprob: -8.751080513000488
    4. '[]
' → logprob: -11.501080513000488
    5. ' []' → logprob: -14.501080513000488
    6. '[]

' → logprob: -17.251079559326172
    7. '[' → logprob: -17.751079559326172
    8. '[((' → logprob: -18.626079559326172
    9. ' []
' → logprob: -19.126079559326172
    10. '[],' → logprob: -19.501079559326172

Token 489: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044044386595487595
    2. 'heap' → logprob: -4.044044494628906
    3. '(heap' → logprob: -4.919044494628906
    4. ' (' → logprob: -5.169044494628906
    5. ' heap' → logprob: -5.419044494628906
    6. ' 
' → logprob: -6.544044494628906
    7. '        
' → logprob: -6.669044494628906
    8. '<|end|>' → logprob: -7.169044494628906
    9. 'import' → logprob: -7.294044494628906
    10. '  
' → logprob: -7.419044494628906

Token 490: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.3966403007507324
    2. '       ' → logprob: -1.6466403007507324
    3. 'heap' (adapté à ' heap') → logprob: -2.0216403007507324
    4. 'import' → logprob: -6.771640300750732
    5. '(heap' → logprob: -8.52164077758789
    6. '        
' → logprob: -9.02164077758789
    7. ' 
' → logprob: -9.02164077758789
    8. '   ' → logprob: -9.27164077758789
    9. ' import' → logprob: -9.27164077758789
    10. ',' → logprob: -9.39664077758789

Token 491: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1398757123970427e-05
    2. '.he' → logprob: -12.375011444091797
    3. '.push' → logprob: -13.125011444091797
    4. '.' → logprob: -13.375011444091797
    5. '.q' → logprob: -13.875011444091797
    6. '.append' → logprob: -14.500011444091797
    7. ' .' → logprob: -14.500011444091797
    8. 'p' → logprob: -14.625011444091797
    9. '```' → logprob: -14.625011444091797
    10. '.heap' → logprob: -14.875011444091797

Token 492: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0007885443628765643
    2. '.heap' → logprob: -7.500788688659668
    3. '.' → logprob: -8.375788688659668
    4. '.push' → logprob: -12.625788688659668
    5. ').' → logprob: -13.750788688659668
    6. '.put' → logprob: -16.00078773498535
    7. '}.' → logprob: -16.12578773498535
    8. ' .' → logprob: -16.62578773498535
    9. '.He' → logprob: -16.62578773498535
    10. '>.' → logprob: -16.62578773498535

Token 493: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00043102685594931245
    2. 'pp' → logprob: -7.750431060791016
    3. 'push' → logprob: -15.375431060791016
    4. 'ap' → logprob: -16.375431060791016
    5. 'append' → logprob: -17.750431060791016
    6. 'p' → logprob: -18.125431060791016
    7. 'q' → logprob: -18.375431060791016
    8. 'appen' → logprob: -19.125431060791016
    9. '```' → logprob: -20.500431060791016
    10. 'qp' → logprob: -20.875431060791016

Token 494: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00021176543668843806
    2. 'op' → logprob: -8.625211715698242
    3. 'p' → logprob: -11.125211715698242
    4. 'push' → logprob: -12.000211715698242
    5. 'q' → logprob: -12.375211715698242
    6. 'sh' → logprob: -12.500211715698242
    7. 'pp' → logprob: -13.000211715698242
    8. '```' → logprob: -14.500211715698242
    9. 'u' → logprob: -15.875211715698242
    10. '[' → logprob: -16.750211715698242

Token 495: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -7.226628895296017e-06
    2. '(' → logprob: -12.000007629394531
    3. ' (' → logprob: -14.000007629394531
    4. '((' → logprob: -16.25000762939453
    5. '(q' → logprob: -16.75000762939453
    6. 'pq' → logprob: -17.62500762939453
    7. '(
' → logprob: -17.62500762939453
    8. '   ' → logprob: -18.12500762939453
    9. '```' → logprob: -18.62500762939453
    10. ',' → logprob: -20.25000762939453

Token 496: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0003977800370194018
    2. '(p' → logprob: -9.000397682189941
    3. 'pq' → logprob: -9.125397682189941
    4. ' pq' → logprob: -9.375397682189941
    5. '(q' → logprob: -10.625397682189941
    6. ',q' → logprob: -11.000397682189941
    7. 'Q' → logprob: -12.000397682189941
    8. ',' → logprob: -12.250397682189941
    9. '[q' → logprob: -12.250397682189941
    10. '[p' → logprob: -12.500397682189941

Token 497: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028412528336048126
    2. '((' → logprob: -6.502841472625732
    3. ' (' → logprob: -7.002841472625732
    4. ',' → logprob: -8.377840995788574
    5. ')' → logprob: -9.002840995788574
    6. ',(' → logprob: -10.002840995788574
    7. ')(' → logprob: -10.752840995788574
    8. '(p' → logprob: -12.127840995788574
    9. '),' → logprob: -13.752840995788574
    10. ' ' → logprob: -14.377840995788574

Token 498: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3306015716807451e-05
    2. ' (' → logprob: -11.75001335144043
    3. '0' → logprob: -12.12501335144043
    4. '   ' → logprob: -17.75001335144043
    5. ')' → logprob: -17.87501335144043
    6. ' ' → logprob: -18.25001335144043
    7. '(
' → logprob: -19.62501335144043
    8. ')(' → logprob: -20.37501335144043
    9. '
' → logprob: -21.00001335144043
    10. '       ' → logprob: -21.25001335144043

Token 499: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07011804729700089
    2. 'grid' → logprob: -2.695117950439453
    3. '(' → logprob: -9.820117950439453
    4. ' grid' → logprob: -9.945117950439453
    5. ' ' → logprob: -10.945117950439453
    6. '(grid' → logprob: -11.070117950439453
    7. '1' → logprob: -11.820117950439453
    8. '-' → logprob: -12.007617950439453
    9. '   ' → logprob: -12.257617950439453
    10. '-grid' → logprob: -12.445117950439453

Token 500: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2855416066013277e-05
    2. ' ,' → logprob: -10.875032424926758
    3. ',s' → logprob: -11.500032424926758
    4. '(sr' → logprob: -13.500032424926758
    5. ',
' → logprob: -14.000032424926758
    6. ')' → logprob: -14.125032424926758
    7. ',r' → logprob: -15.625032424926758
    8. '))' → logprob: -16.250032424926758
    9. '),' → logprob: -16.250032424926758
    10. '```' → logprob: -16.750032424926758

Token 501: ' sr' (ID: 29405)
  Prédit: 'sr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sr' → logprob: -8.2994620242971e-06
    2. ' sr' → logprob: -11.750008583068848
    3. '(sr' → logprob: -14.875008583068848
    4. '_sr' → logprob: -17.25000762939453
    5. 'SR' → logprob: -17.62500762939453
    6. 'start' → logprob: -20.25000762939453
    7. ')' → logprob: -20.62500762939453
    8. '   ' → logprob: -20.87500762939453
    9. 'Sr' → logprob: -21.12500762939453
    10. 'str' → logprob: -22.25000762939453

Token 502: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.630610641877865e-06
    2. ' ,' → logprob: -12.125006675720215
    3. '<|end|>' → logprob: -14.625006675720215
    4. ',
' → logprob: -15.125006675720215
    5. ',c' → logprob: -15.750006675720215
    6. ')' → logprob: -15.750006675720215
    7. ',s' → logprob: -17.0000057220459
    8. '   ' → logprob: -17.8750057220459
    9. '‌,' → logprob: -18.1250057220459
    10. ' ' → logprob: -18.1250057220459

Token 503: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -1.9504606825648807e-05
    2. ' sc' → logprob: -10.875019073486328
    3. '(sc' → logprob: -15.125019073486328
    4. 'Sc' → logprob: -16.875019073486328
    5. 'scape' → logprob: -16.875019073486328
    6. '_sc' → logprob: -17.125019073486328
    7. 'scss' → logprob: -17.375019073486328
    8. '	sc' → logprob: -17.500019073486328
    9. 'scp' → logprob: -17.875019073486328
    10. '
' → logprob: -18.250019073486328

Token 504: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.1318875446449965e-05
    2. ' ,' → logprob: -10.250041007995605
    3. '1' → logprob: -12.125041007995605
    4. '```' → logprob: -16.125041961669922
    5. '))' → logprob: -16.250041961669922
    6. ',
' → logprob: -16.375041961669922
    7. '   ' → logprob: -16.500041961669922
    8. ' ' → logprob: -17.250041961669922
    9. ')' → logprob: -17.375041961669922
    10. '3' → logprob: -18.250041961669922

Token 505: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.750001907348633
    4. '```' → logprob: -20.500001907348633
    5. '(' → logprob: -20.750001907348633
    6. '  ' → logprob: -21.500001907348633
    7. ')' → logprob: -22.250001907348633
    8. '۱' → logprob: -22.437501907348633
    9. '`' → logprob: -22.812501907348633
    10. '১' → logprob: -22.812501907348633

Token 506: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.250003814697266
    4. '  ' → logprob: -18.875003814697266
    5. '(' → logprob: -19.625003814697266
    6. '```' → logprob: -20.125003814697266
    7. '     ' → logprob: -20.312503814697266
    8. '    ' → logprob: -20.750003814697266
    9. 'start' → logprob: -20.750003814697266
    10. '
' → logprob: -21.437503814697266

Token 507: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008295211009681225
    2. ' ,' → logprob: -7.125829696655273
    3. '2' → logprob: -10.625829696655273
    4. ',
' → logprob: -15.125829696655273
    5. ')' → logprob: -16.000829696655273
    6. '   ' → logprob: -16.000829696655273
    7. ' ' → logprob: -16.250829696655273
    8. '))' → logprob: -17.000829696655273
    9. '```' → logprob: -17.000829696655273
    10. '),' → logprob: -17.750829696655273

Token 508: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.125011444091797
    4. '  ' → logprob: -17.750011444091797
    5. '۲' → logprob: -19.000011444091797
    6. '    ' → logprob: -20.312511444091797
    7. '```' → logprob: -20.562511444091797
    8. '     ' → logprob: -20.562511444091797
    9. '２' → logprob: -20.625011444091797
    10. '২' → logprob: -20.812511444091797

Token 509: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '  ' → logprob: -17.81250762939453
    4. '   ' → logprob: -18.00000762939453
    5. '3' → logprob: -18.18750762939453
    6. '۲' → logprob: -18.37500762939453
    7. '
' → logprob: -18.68750762939453
    8. '```' → logprob: -19.06250762939453
    9. '  
' → logprob: -19.18750762939453
    10. '২' → logprob: -19.43750762939453

Token 510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001454955490771681
    2. ' ,' → logprob: -8.87514591217041
    3. '3' → logprob: -12.37514591217041
    4. ',
' → logprob: -14.62514591217041
    5. ' ' → logprob: -15.37514591217041
    6. '<|end|>' → logprob: -15.50014591217041
    7. '```' → logprob: -16.000144958496094
    8. ')' → logprob: -16.250144958496094
    9. '   ' → logprob: -17.125144958496094
    10. '  ' → logprob: -17.375144958496094

Token 511: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -20.125001907348633
    4. '۳' → logprob: -20.125001907348633
    5. '  ' → logprob: -21.000001907348633
    6. ')' → logprob: -21.875001907348633
    7. '৩' → logprob: -22.000001907348633
    8. '<|end|>' → logprob: -22.125001907348633
    9. '```' → logprob: -22.250001907348633
    10. '３' → logprob: -22.375001907348633

Token 512: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '۳' → logprob: -18.625
    4. ')' → logprob: -19.875
    5. '৩' → logprob: -19.875
    6. '   ' → logprob: -20.5
    7. '<|end|>' → logprob: -21.125
    8. '३' → logprob: -21.25
    9. '  ' → logprob: -21.5
    10. '```' → logprob: -21.75

Token 513: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -7.862962229410186e-05
    2. ')' → logprob: -9.750078201293945
    3. '))
' → logprob: -10.875078201293945
    4. ' ))' → logprob: -14.250078201293945
    5. '))

' → logprob: -15.000078201293945
    6. ')))' → logprob: -15.500078201293945
    7. '))
' → logprob: -16.500078201293945
    8. '   ' → logprob: -16.625078201293945
    9. '));' → logprob: -16.625078201293945
    10. '       ' → logprob: -17.375078201293945

Token 514: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5909175872802734
    2. 'while' → logprob: -1.3409175872802734
    3. ' while' → logprob: -2.3409175872802734
    4. '```' → logprob: -2.9659175872802734
    5. '   ' → logprob: -3.5909175872802734
    6. '<|end|>' → logprob: -5.340917587280273
    7. ')' → logprob: -6.340917587280273
    8. '	while' → logprob: -6.465917587280273
    9. '        
' → logprob: -8.340917587280273
    10. 'While' → logprob: -8.465917587280273

Token 515: ' dist' (ID: 3601)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.030732756480574608
    2. '       ' → logprob: -4.03073263168335
    3. ' while' → logprob: -4.40573263168335
    4. '	while' → logprob: -8.655733108520508
    5. '   ' → logprob: -9.655733108520508
    6. '```' → logprob: -9.905733108520508
    7. 'While' → logprob: -12.280733108520508
    8. 'dist' (adapté à ' dist') → logprob: -14.155733108520508
    9. '        
' → logprob: -14.280733108520508
    10. '<|end|>' → logprob: -14.405733108520508

Token 516: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -4.453737710718997e-05
    2. '[' → logprob: -10.250044822692871
    3. '[((' → logprob: -12.000044822692871
    4. '```' → logprob: -13.750044822692871
    5. '[start' → logprob: -14.250044822692871
    6. ' [(' → logprob: -14.375044822692871
    7. '.setdefault' → logprob: -16.625043869018555
    8. '   ' → logprob: -16.750043869018555
    9. '[
' → logprob: -16.750043869018555
    10. ',' → logprob: -16.750043869018555

Token 517: 'sr' (ID: 25616)
  Prédit: 'sr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sr' → logprob: -8.77627644513268e-06
    2. '(sr' → logprob: -11.750008583068848
    3. ' sr' → logprob: -14.000008583068848
    4. '_sr' → logprob: -18.750009536743164
    5. ' ' → logprob: -19.125009536743164
    6. '   ' → logprob: -19.750009536743164
    7. '  ' → logprob: -20.375009536743164
    8. ')' → logprob: -20.625009536743164
    9. '(' → logprob: -20.875009536743164
    10. 'SR' → logprob: -21.375009536743164

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1875571544806007e-05
    2. ' ,' → logprob: -11.750011444091797
    3. ',
' → logprob: -13.000011444091797
    4. '<|end|>' → logprob: -14.625011444091797
    5. ',s' → logprob: -15.000011444091797
    6. '‌,' → logprob: -15.000011444091797
    7. ',c' → logprob: -15.125011444091797
    8. ')' → logprob: -16.875011444091797
    9. ',

' → logprob: -17.000011444091797
    10. ' ' → logprob: -17.875011444091797

Token 519: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -2.4868770196917467e-05
    2. ' sc' → logprob: -10.625024795532227
    3. '(sc' → logprob: -15.375024795532227
    4. ' ' → logprob: -16.750024795532227
    5. '   ' → logprob: -16.750024795532227
    6. '  ' → logprob: -17.875024795532227
    7. '    ' → logprob: -18.250024795532227
    8. '
' → logprob: -18.375024795532227
    9. ')' → logprob: -19.125024795532227
    10. '	sc' → logprob: -19.125024795532227

Token 520: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018375257786829025
    2. '1' → logprob: -8.750184059143066
    3. ' ,' → logprob: -10.625184059143066
    4. ',
' → logprob: -15.125184059143066
    5. '   ' → logprob: -15.375184059143066
    6. '```' → logprob: -16.37518310546875
    7. '0' → logprob: -16.62518310546875
    8. ' ' → logprob: -17.00018310546875
    9. '(' → logprob: -17.12518310546875
    10. '100' → logprob: -17.25018310546875

Token 521: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.250001907348633
    4. '  ' → logprob: -18.625001907348633
    5. '```' → logprob: -19.500001907348633
    6. '    ' → logprob: -20.625001907348633
    7. '     ' → logprob: -20.875001907348633
    8. ',' → logprob: -21.437501907348633
    9. '       ' → logprob: -21.687501907348633
    10. '`' → logprob: -21.750001907348633

Token 522: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -18.25
    4. '  ' → logprob: -19.875
    5. '```' → logprob: -19.875
    6. '(' → logprob: -20.6875
    7. '
' → logprob: -20.875
    8. ',' → logprob: -21.0625
    9. '    ' → logprob: -21.375
    10. '     ' → logprob: -21.375

Token 523: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.266944157890975e-05
    2. ' ,' → logprob: -9.625072479248047
    3. '2' → logprob: -12.125072479248047
    4. ',
' → logprob: -14.375072479248047
    5. '   ' → logprob: -15.250072479248047
    6. ' ' → logprob: -15.750072479248047
    7. ')' → logprob: -17.625072479248047
    8. ',,' → logprob: -17.875072479248047
    9. '```' → logprob: -18.000072479248047
    10. '  ' → logprob: -18.625072479248047

Token 524: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.000032424926758
    4. '  ' → logprob: -16.750032424926758
    5. '    ' → logprob: -18.750032424926758
    6. ',' → logprob: -18.875032424926758
    7. '۲' → logprob: -18.875032424926758
    8. '```' → logprob: -19.125032424926758
    9. '     ' → logprob: -19.250032424926758
    10. '...' → logprob: -19.875032424926758

Token 525: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. ',' → logprob: -15.750040054321289
    4. '   ' → logprob: -16.50004005432129
    5. '  ' → logprob: -16.87504005432129
    6. '<|end|>' → logprob: -18.50004005432129
    7. '```' → logprob: -18.75004005432129
    8. ')' → logprob: -18.75004005432129
    9. '
' → logprob: -19.00004005432129
    10. '-' → logprob: -19.12504005432129

Token 526: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011331788846291602
    2. ' ,' → logprob: -9.250113487243652
    3. '3' → logprob: -11.000113487243652
    4. ',
' → logprob: -15.375113487243652
    5. ' ' → logprob: -16.250112533569336
    6. '```' → logprob: -17.500112533569336
    7. ')' → logprob: -17.875112533569336
    8. '   ' → logprob: -17.875112533569336
    9. '<|end|>' → logprob: -18.375112533569336
    10. ')]' → logprob: -18.875112533569336

Token 527: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.7500057220459
    4. '۳' → logprob: -19.5000057220459
    5. '  ' → logprob: -21.0000057220459
    6. ')' → logprob: -21.8750057220459
    7. '    ' → logprob: -21.8750057220459
    8. '３' → logprob: -22.0000057220459
    9. '৩' → logprob: -22.0000057220459
    10. '```' → logprob: -22.3750057220459

Token 528: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.0000057220459
    4. ')' → logprob: -18.1250057220459
    5. '۳' → logprob: -18.3750057220459
    6. '  ' → logprob: -18.8125057220459
    7. '    ' → logprob: -19.7500057220459
    8. '```' → logprob: -19.8125057220459
    9. '৩' → logprob: -19.8750057220459
    10. '３' → logprob: -20.4375057220459

Token 529: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.7689099018462e-05
    2. ']' → logprob: -9.37508773803711
    3. ')' → logprob: -13.25008773803711
    4. '])' → logprob: -14.37508773803711
    5. ' )' → logprob: -15.25008773803711
    6. ']]' → logprob: -16.00008773803711
    7. '0' → logprob: -17.12508773803711
    8. ']=' → logprob: -17.75008773803711
    9. '])]' → logprob: -18.00008773803711
    10. ' ]' → logprob: -18.25008773803711

Token 530: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01816890574991703
    2. ' =' → logprob: -4.018168926239014
    3. ']' → logprob: -11.018168449401855
    4. ']=' → logprob: -13.018168449401855
    5. ')' → logprob: -15.393168449401855
    6. ')=' → logprob: -16.143169403076172
    7. '0' → logprob: -17.143169403076172
    8. ' ' → logprob: -19.143169403076172
    9. '=

' → logprob: -19.768169403076172
    10. '   ' → logprob: -20.518169403076172

Token 531: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -20.2500057220459
    4. '۰' → logprob: -20.3750057220459
    5. '00' → logprob: -20.6250057220459
    6. '000' → logprob: -21.2500057220459
    7. ' ' → logprob: -21.5000057220459
    8. '=' → logprob: -22.2500057220459
    9. '０' → logprob: -22.9375057220459
    10. '  ' → logprob: -23.0625057220459

Token 532: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -18.625
    4. '00' → logprob: -19.1875
    5. '000' → logprob: -19.3125
    6. '1' → logprob: -19.75
    7. '۰' → logprob: -19.9375
    8. '[' → logprob: -20.3125
    9. '(' → logprob: -20.4375
    10. '{' → logprob: -20.8125

Token 533: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20281007885932922
    2. 'while' → logprob: -2.077810049057007
    3. '   ' → logprob: -3.202810049057007
    4. ' while' → logprob: -4.077810287475586
    5. '	while' → logprob: -8.077810287475586
    6. '<|end|>' → logprob: -8.202810287475586
    7. '```' → logprob: -9.452810287475586
    8. '        
' → logprob: -10.202810287475586
    9. 'While' → logprob: -10.827810287475586
    10. '
' → logprob: -10.952810287475586

Token 534: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7779532074928284
    2. '       ' → logprob: -0.9029532074928284
    3. ' while' → logprob: -2.5279531478881836
    4. '   ' → logprob: -3.1529531478881836
    5. '	while' → logprob: -5.277953147888184
    6. '```' → logprob: -5.277953147888184
    7. '<|end|>' → logprob: -6.152953147888184
    8. 'While' → logprob: -8.652953147888184
    9. '        
' → logprob: -9.652953147888184
    10. '    ' → logprob: -10.027953147888184

Token 535: ' directions' (ID: 24921)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0012890440411865711
    2. '       ' → logprob: -7.126288890838623
    3. ' while' → logprob: -7.751288890838623
    4. 'dire' → logprob: -10.126289367675781
    5. '	while' → logprob: -12.126289367675781
    6. 'moves' → logprob: -12.751289367675781
    7. '```' → logprob: -12.876289367675781
    8. '   ' → logprob: -13.126289367675781
    9. ' directions' → logprob: -14.126289367675781
    10. 'dirs' → logprob: -15.376289367675781

Token 536: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0007157695363275707
    2. '=' → logprob: -7.250715732574463
    3. 's' → logprob: -12.875716209411621
    4. ',' → logprob: -13.375716209411621
    5. ' ' → logprob: -14.375716209411621
    6. ' ,' → logprob: -14.750716209411621
    7. '=['' → logprob: -15.000716209411621
    8. '   ' → logprob: -15.875716209411621
    9. ')' → logprob: -16.125715255737305
    10. ' =
' → logprob: -16.375715255737305

Token 537: ' [('' (ID: 147218)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.6679711937904358
    2. ' ['' → logprob: -0.9179711937904358
    3. '[' → logprob: -2.917971134185791
    4. ' [('' → logprob: -3.417971134185791
    5. ' [' → logprob: -7.167971134185791
    6. '[(' → logprob: -9.16797161102295
    7. ' {'' → logprob: -9.91797161102295
    8. '["' → logprob: -9.91797161102295
    9. '[
' → logprob: -10.04297161102295
    10. '{'' → logprob: -10.54297161102295

Token 538: 'N' (ID: 45)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25859397649765015
    2. 'N' → logprob: -1.758594036102295
    3. '0' → logprob: -4.258594036102295
    4. ''N' → logprob: -4.258594036102295
    5. '(-' → logprob: -4.883594036102295
    6. '1' → logprob: -4.883594036102295
    7. 'S' → logprob: -5.633594036102295
    8. ''' → logprob: -5.883594036102295
    9. '-N' → logprob: -6.258594036102295
    10. ' -' → logprob: -7.008594036102295

Token 539: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.008655465207993984
    2. ',' → logprob: -5.008655548095703
    3. ''),' → logprob: -7.008655548095703
    4. '','' → logprob: -7.258655548095703
    5. ''' → logprob: -8.383655548095703
    6. '')' → logprob: -10.508655548095703
    7. '',(' → logprob: -10.508655548095703
    8. ','' → logprob: -11.008655548095703
    9. '',
' → logprob: -11.758655548095703
    10. '),' → logprob: -12.258655548095703

Token 540: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.097458615899086
    2. ' -' → logprob: -2.847458600997925
    3. '(-' → logprob: -3.597458600997925
    4. '0' → logprob: -5.097458839416504
    5. ' (-' → logprob: -7.097458839416504
    6. '(' → logprob: -8.597458839416504
    7. ' ' → logprob: -9.097458839416504
    8. '1' → logprob: -9.222458839416504
    9. ' (' → logprob: -10.347458839416504
    10. '   ' → logprob: -10.472458839416504

Token 541: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. ')' → logprob: -19.875
    4. '
' → logprob: -21.125
    5. '-' → logprob: -21.1875
    6. '১' → logprob: -21.375
    7. '１' → logprob: -21.375
    8. '0' → logprob: -21.5625
    9. ',' → logprob: -21.5625
    10. '   ' → logprob: -21.5625

Token 542: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014740281039848924
    2. '),' → logprob: -9.125147819519043
    3. ' ,' → logprob: -10.250147819519043
    4. ')],' → logprob: -13.500147819519043
    5. ')' → logprob: -13.750147819519043
    6. '),(' → logprob: -16.250146865844727
    7. ',),' → logprob: -16.375146865844727
    8. '```' → logprob: -16.375146865844727
    9. '<|end|>' → logprob: -16.875146865844727
    10. ',
' → logprob: -17.000146865844727

Token 543: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010336418636143208
    2. ' ' → logprob: -6.876033782958984
    3. ',' → logprob: -15.126033782958984
    4. '  ' → logprob: -15.376033782958984
    5. ')' → logprob: -15.751033782958984
    6. '   ' → logprob: -15.751033782958984
    7. '    ' → logprob: -17.688533782958984
    8. '<|end|>' → logprob: -17.813533782958984
    9. '```' → logprob: -18.376033782958984
    10. '۰' → logprob: -18.813533782958984

Token 544: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '  ' → logprob: -16.875335693359375
    4. ',' → logprob: -17.250335693359375
    5. '   ' → logprob: -17.875335693359375
    6. '
' → logprob: -18.125335693359375
    7. ')' → logprob: -18.375335693359375
    8. '۰' → logprob: -19.437835693359375
    9. '00' → logprob: -19.625335693359375
    10. '

' → logprob: -19.750335693359375

Token 545: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0005301565979607403
    2. '),
' → logprob: -7.625530242919922
    3. ' ),' → logprob: -10.500530242919922
    4. '),(' → logprob: -11.875530242919922
    5. ')' → logprob: -12.750530242919922
    6. ')]' → logprob: -12.875530242919922
    7. ''),' → logprob: -14.125530242919922
    8. '),

' → logprob: -14.125530242919922
    9. ',' → logprob: -15.875530242919922
    10. '],' → logprob: -16.250530242919922

Token 546: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.2195613831281662
    2. ' ('' → logprob: -1.7195613384246826
    3. '       ' → logprob: -4.219561576843262
    4. '           ' → logprob: -6.219561576843262
    5. '               ' → logprob: -7.594561576843262
    6. '   ' → logprob: -8.344561576843262
    7. '        ' → logprob: -8.594561576843262
    8. '              ' → logprob: -9.594561576843262
    9. '                   ' → logprob: -9.844561576843262
    10. '      ' → logprob: -9.969561576843262

Token 547: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.37250667810440063
    2. ''S' → logprob: -1.2475066184997559
    3. ''E' → logprob: -3.872506618499756
    4. 'E' → logprob: -6.247506618499756
    5. ''' → logprob: -7.122506618499756
    6. ' '' → logprob: -10.122507095336914
    7. '"S' → logprob: -10.372507095336914
    8. ' S' → logprob: -10.372507095336914
    9. ''N' → logprob: -10.622507095336914
    10. ''s' → logprob: -10.747507095336914

Token 548: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004125061444938183
    2. '',' → logprob: -5.754125118255615
    3. ' ,' → logprob: -7.254125118255615
    4. '),' → logprob: -8.629124641418457
    5. ','' → logprob: -10.129124641418457
    6. ''),' → logprob: -11.879124641418457
    7. ')' → logprob: -12.629124641418457
    8. ')],' → logprob: -13.004124641418457
    9. '   ' → logprob: -13.254124641418457
    10. ')]' → logprob: -13.879124641418457

Token 549: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013277375837787986
    2. ' ' → logprob: -6.6263275146484375
    3. '+' → logprob: -13.751327514648438
    4. '(' → logprob: -14.876327514648438
    5. '0' → logprob: -15.751327514648438
    6. '   ' → logprob: -16.626327514648438
    7. ',' → logprob: -17.126327514648438
    8. ')' → logprob: -17.501327514648438
    9. '
' → logprob: -17.501327514648438
    10. ' +' → logprob: -17.501327514648438

Token 550: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0063299755565822124
    2. ''' → logprob: -5.5063300132751465
    3. ' ' → logprob: -6.6313300132751465
    4. ''E' → logprob: -7.1313300132751465
    5. ''N' → logprob: -10.131329536437988
    6. '('' → logprob: -10.506329536437988
    7. '+' → logprob: -10.631329536437988
    8. ''S' → logprob: -10.881329536437988
    9. ' '' → logprob: -12.006329536437988
    10. '(' → logprob: -12.131329536437988

Token 551: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.991464786347933e-05
    2. ' ,' → logprob: -9.875060081481934
    3. '),' → logprob: -12.500060081481934
    4. '<|end|>' → logprob: -12.625060081481934
    5. ')' → logprob: -14.875060081481934
    6. '```' → logprob: -15.250060081481934
    7. ')]' → logprob: -15.875060081481934
    8. ')],' → logprob: -15.875060081481934
    9. '   ' → logprob: -16.000059127807617
    10. '0' → logprob: -16.250059127807617

Token 552: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029751179739832878
    2. ' ' → logprob: -3.5297510623931885
    3. ',' → logprob: -15.77975082397461
    4. '1' → logprob: -16.02975082397461
    5. ')' → logprob: -16.15475082397461
    6. '  ' → logprob: -16.21725082397461
    7. '   ' → logprob: -16.27975082397461
    8. '```' → logprob: -16.46725082397461
    9. '),' → logprob: -16.65475082397461
    10. '۰' → logprob: -17.09225082397461

Token 553: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019287518225610256
    2. ' ' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.251928329467773
    4. '```' → logprob: -17.501928329467773
    5. '  ' → logprob: -17.751928329467773
    6. '1' → logprob: -17.876928329467773
    7. ')' → logprob: -17.876928329467773
    8. '),' → logprob: -18.126928329467773
    9. '۰' → logprob: -18.251928329467773
    10. ',' → logprob: -19.626928329467773

Token 554: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -4.668304245569743e-05
    2. ' ),' → logprob: -10.875046730041504
    3. ')]' → logprob: -11.125046730041504
    4. ')' → logprob: -12.000046730041504
    5. ',' → logprob: -13.000046730041504
    6. ''),' → logprob: -13.125046730041504
    7. '],' → logprob: -13.750046730041504
    8. ')],' → logprob: -14.750046730041504
    9. '),
' → logprob: -15.000046730041504
    10. '   ' → logprob: -15.500046730041504

Token 555: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.1870078295469284
    2. ' ('' → logprob: -1.8120077848434448
    3. '       ' → logprob: -5.062007904052734
    4. '        ' → logprob: -8.062007904052734
    5. '           ' → logprob: -8.437007904052734
    6. '               ' → logprob: -8.812007904052734
    7. '   ' → logprob: -9.312007904052734
    8. '                   ' → logprob: -10.437007904052734
    9. '      ' → logprob: -11.187007904052734
    10. '            ' → logprob: -11.437007904052734

Token 556: 'E' (ID: 36)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.00918006245046854
    2. ''' → logprob: -5.384180068969727
    3. 'W' → logprob: -6.384180068969727
    4. 'E' → logprob: -6.634180068969727
    5. ' '' → logprob: -7.509180068969727
    6. ''N' → logprob: -8.259180068969727
    7. '`' → logprob: -8.634180068969727
    8. '   ' → logprob: -8.759180068969727
    9. '('' → logprob: -9.134180068969727
    10. ' ' → logprob: -9.884180068969727

Token 557: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03986440226435661
    2. '),' → logprob: -3.4148643016815186
    3. '',' → logprob: -5.289864540100098
    4. ' ,' → logprob: -7.039864540100098
    5. ''),' → logprob: -9.039864540100098
    6. '   ' → logprob: -10.664864540100098
    7. '],' → logprob: -10.789864540100098
    8. ')]' → logprob: -10.789864540100098
    9. ')],' → logprob: -10.914864540100098
    10. ''',' → logprob: -11.164864540100098

Token 558: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006025373004376888
    2. ' ' → logprob: -5.131025314331055
    3. ''' → logprob: -9.506025314331055
    4. ',' → logprob: -11.381025314331055
    5. ' '' → logprob: -12.256025314331055
    6. '(' → logprob: -13.756025314331055
    7. '```' → logprob: -13.756025314331055
    8. ')' → logprob: -14.131025314331055
    9. '',' → logprob: -14.881025314331055
    10. '('' → logprob: -15.006025314331055

Token 559: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0799054503440857
    2. ''' → logprob: -2.8299055099487305
    3. ' ' → logprob: -4.3299055099487305
    4. ''E' → logprob: -5.9549055099487305
    5. ''',' → logprob: -7.0799055099487305
    6. ''S' → logprob: -7.8299055099487305
    7. ' '' → logprob: -8.07990550994873
    8. ''e' → logprob: -9.32990550994873
    9. ',' → logprob: -9.70490550994873
    10. ' '',' → logprob: -9.82990550994873

Token 560: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008355968166142702
    2. '1' → logprob: -7.250835418701172
    3. ' ,' → logprob: -9.000835418701172
    4. ' ' → logprob: -13.875835418701172
    5. ')' → logprob: -14.875835418701172
    6. '),' → logprob: -15.375835418701172
    7. '2' → logprob: -15.375835418701172
    8. '```' → logprob: -15.938335418701172
    9. '3' → logprob: -16.000835418701172
    10. ',
' → logprob: -16.250835418701172

Token 561: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '-' → logprob: -17.00006675720215
    4. '```' → logprob: -17.00006675720215
    5. '  ' → logprob: -17.87506675720215
    6. '   ' → logprob: -17.87506675720215
    7. ',' → logprob: -19.25006675720215
    8. '
' → logprob: -19.25006675720215
    9. ')' → logprob: -19.25006675720215
    10. '+' → logprob: -19.37506675720215

Token 562: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3544423381972592e-05
    2. ' ' → logprob: -11.25001335144043
    3. '-' → logprob: -14.87501335144043
    4. '```' → logprob: -16.75001335144043
    5. '   ' → logprob: -18.12501335144043
    6. '+' → logprob: -18.12501335144043
    7. '  ' → logprob: -18.87501335144043
    8. '
' → logprob: -19.12501335144043
    9. ',' → logprob: -20.56251335144043
    10. ')' → logprob: -20.81251335144043

Token 563: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00016563729150220752
    2. ')]' → logprob: -9.250165939331055
    3. ' ),' → logprob: -9.875165939331055
    4. ')' → logprob: -11.250165939331055
    5. '],' → logprob: -13.125165939331055
    6. ''),' → logprob: -13.625165939331055
    7. '),
' → logprob: -15.000165939331055
    8. ')],' → logprob: -15.000165939331055
    9. ',' → logprob: -15.125165939331055
    10. '),(' → logprob: -15.250165939331055

Token 564: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.47408732771873474
    2. ' ('' → logprob: -0.9740873575210571
    3. ']' → logprob: -11.849087715148926
    4. '   ' → logprob: -14.099087715148926
    5. '(('' → logprob: -14.599087715148926
    6. ' ' → logprob: -14.849087715148926
    7. '(' → logprob: -15.224087715148926
    8. ')' → logprob: -15.474087715148926
    9. '=('' → logprob: -15.974087715148926
    10. ')]' → logprob: -16.09908676147461

Token 565: 'W' (ID: 54)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002509904792532325
    2. 'W' → logprob: -6.002510070800781
    3. '"W' → logprob: -11.002510070800781
    4. '   ' → logprob: -12.127510070800781
    5. '('' → logprob: -12.502510070800781
    6. '
' → logprob: -13.377510070800781
    7. ' '' → logprob: -13.627510070800781
    8. '`' → logprob: -13.877510070800781
    9. '```' → logprob: -13.877510070800781
    10. ''w' → logprob: -14.252510070800781

Token 566: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009149204124696553
    2. ' ,' → logprob: -7.375915050506592
    3. '',' → logprob: -8.500914573669434
    4. ')]' → logprob: -9.875914573669434
    5. ')' → logprob: -11.625914573669434
    6. '0' → logprob: -12.375914573669434
    7. '   ' → logprob: -12.375914573669434
    8. '')]' → logprob: -12.500914573669434
    9. '),' → logprob: -13.375914573669434
    10. ','' → logprob: -13.375914573669434

Token 567: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002492779865860939
    2. ' ' → logprob: -6.002492904663086
    3. '(' → logprob: -11.877492904663086
    4. ',' → logprob: -12.377492904663086
    5. ')' → logprob: -13.502492904663086
    6. '   ' → logprob: -13.689992904663086
    7. ' (' → logprob: -14.377492904663086
    8. '```' → logprob: -15.002492904663086
    9. '  ' → logprob: -15.064992904663086
    10. '),' → logprob: -15.502492904663086

Token 568: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010536498157307506
    2. ' ' → logprob: -6.876053810119629
    3. ',' → logprob: -11.501053810119629
    4. '(' → logprob: -11.876053810119629
    5. ')' → logprob: -14.001053810119629
    6. ' (' → logprob: -14.313553810119629
    7. '   ' → logprob: -15.001053810119629
    8. '```' → logprob: -15.251053810119629
    9. '۰' → logprob: -15.251053810119629
    10. '...' → logprob: -15.501053810119629

Token 569: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033200893085449934
    2. ' ,' → logprob: -8.12533187866211
    3. '0' → logprob: -10.87533187866211
    4. ' -' → logprob: -12.50033187866211
    5. ',-' → logprob: -12.50033187866211
    6. '-' → logprob: -12.75033187866211
    7. '```' → logprob: -13.37533187866211
    8. ',
' → logprob: -13.75033187866211
    9. ')' → logprob: -13.87533187866211
    10. ' ' → logprob: -14.06283187866211

Token 570: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.1888679839321412e-05
    2. ' -' → logprob: -10.750021934509277
    3. '0' → logprob: -15.375021934509277
    4. '```' → logprob: -16.50002098083496
    5. '−' → logprob: -19.62502098083496
    6. '   ' → logprob: -19.62502098083496
    7. ')' → logprob: -20.50002098083496
    8. '  ' → logprob: -21.00002098083496
    9. ' ' → logprob: -21.37502098083496
    10. '‑' → logprob: -21.50002098083496

Token 571: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -15.375000953674316
    3. ')]' → logprob: -15.375000953674316
    4. ')' → logprob: -15.625000953674316
    5. '0' → logprob: -16.0
    6. '```' → logprob: -16.75
    7. '-' → logprob: -17.625
    8. '))' → logprob: -18.3125
    9. '
' → logprob: -18.3125
    10. '

' → logprob: -18.5

Token 572: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.6934557505883276e-05
    2. ')' → logprob: -11.000057220458984
    3. ')])' → logprob: -11.250057220458984
    4. ')]
' → logprob: -11.500057220458984
    5. ' )' → logprob: -11.875057220458984
    6. '')]' → logprob: -12.250057220458984
    7. '),' → logprob: -12.625057220458984
    8. '))' → logprob: -13.875057220458984
    9. ')]

' → logprob: -15.500057220458984
    10. ']' → logprob: -15.625057220458984

Token 573: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3697420060634613
    2. '       ' → logprob: -1.4947420358657837
    3. ' while' → logprob: -2.619741916656494
    4. '   ' → logprob: -4.494741916656494
    5. '```' → logprob: -7.744741916656494
    6. '	while' → logprob: -8.494742393493652
    7. '<|end|>' → logprob: -9.119742393493652
    8. 'While' → logprob: -10.744742393493652
    9. ' ' → logprob: -11.744742393493652
    10. '
' → logprob: -12.369742393493652

Token 574: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.014199706725776196
    2. ' while' → logprob: -4.514199733734131
    3. '       ' → logprob: -5.764199733734131
    4. '```' → logprob: -12.389199256896973
    5. '   ' → logprob: -12.889199256896973
    6. '	while' → logprob: -13.889199256896973
    7. '
' → logprob: -14.389199256896973
    8. 'While' → logprob: -14.514199256896973
    9. '        
' → logprob: -16.01420021057129
    10. 'for' → logprob: -16.38920021057129

Token 575: ' pq' (ID: 65424)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.00872117094695568
    2. ' pq' → logprob: -4.758721351623535
    3. 'len' → logprob: -9.633721351623535
    4. 'True' → logprob: -10.758721351623535
    5. 'p' → logprob: -11.133721351623535
    6. ' len' → logprob: -13.383721351623535
    7. '   ' → logprob: -14.008721351623535
    8. ' True' → logprob: -14.133721351623535
    9. '	p' → logprob: -14.258721351623535
    10. 'q' → logprob: -14.633721351623535

Token 576: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14838482439517975
    2. ':
' → logprob: -2.1483848094940186
    3. '[' → logprob: -3.8983848094940186
    4. '):
' → logprob: -8.148385047912598
    5. ' and' → logprob: -8.648385047912598
    6. 'and' → logprob: -8.648385047912598
    7. '):' → logprob: -9.273385047912598
    8. ',' → logprob: -9.273385047912598
    9. '=' → logprob: -10.148385047912598
    10. '```' → logprob: -10.398385047912598

Token 577: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00552781205624342
    2. ',' → logprob: -5.755527973175049
    3. ' ,' → logprob: -6.380527973175049
    4. '       ' → logprob: -8.13052749633789
    5. '               ' → logprob: -9.25552749633789
    6. ' (' → logprob: -9.38052749633789
    7. '        ' → logprob: -10.00552749633789
    8. '	       ' → logprob: -10.50552749633789
    9. '         ' → logprob: -10.75552749633789
    10. '_,' → logprob: -11.63052749633789

Token 578: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.005860293284058571
    2. '(cost' → logprob: -5.380860328674316
    3. '           ' → logprob: -7.255860328674316
    4. ' cost' → logprob: -7.755860328674316
    5. '               ' → logprob: -9.880860328674316
    6. 'cur' → logprob: -11.005860328674316
    7. '_cost' → logprob: -11.630860328674316
    8. '(' → logprob: -11.880860328674316
    9. 'c' → logprob: -11.880860328674316
    10. '(c' → logprob: -12.130860328674316

Token 579: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.226628895296017e-06
    2. ' ,' → logprob: -12.125007629394531
    3. ',
' → logprob: -13.625007629394531
    4. '_,' → logprob: -15.875007629394531
    5. '           ' → logprob: -16.12500762939453
    6. '[' → logprob: -16.75000762939453
    7. '=' → logprob: -16.75000762939453
    8. ',next' → logprob: -17.25000762939453
    9. '‌,' → logprob: -17.50000762939453
    10. ',\
' → logprob: -17.87500762939453

Token 580: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0040785204619169235
    2. ' r' → logprob: -5.504078388214111
    3. '	r' → logprob: -18.379077911376953
    4. '   ' → logprob: -19.129077911376953
    5. 'rr' → logprob: -19.379077911376953
    6. '```' → logprob: -21.129077911376953
    7. '_r' → logprob: -21.254077911376953
    8. '(r' → logprob: -21.254077911376953
    9. 'cr' → logprob: -21.629077911376953
    10. ' ' → logprob: -22.004077911376953

Token 581: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.7159857786027715e-05
    2. ' ,' → logprob: -10.250046730041504
    3. '           ' → logprob: -12.375046730041504
    4. '=' → logprob: -12.375046730041504
    5. ',
' → logprob: -14.375046730041504
    6. '<|end|>' → logprob: -14.375046730041504
    7. '+' → logprob: -15.000046730041504
    8. '_,' → logprob: -15.000046730041504
    9. '+,' → logprob: -15.500046730041504
    10. '```' → logprob: -15.750046730041504

Token 582: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00033546582562848926
    2. ' c' → logprob: -8.000335693359375
    3. '	c' → logprob: -17.750335693359375
    4. '   ' → logprob: -17.750335693359375
    5. ' ' → logprob: -18.500335693359375
    6. 'sc' → logprob: -18.875335693359375
    7. '
' → logprob: -19.250335693359375
    8. '<|end|>' → logprob: -19.250335693359375
    9. '```' → logprob: -19.250335693359375
    10. ',c' → logprob: -19.500335693359375

Token 583: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.77627644513268e-06
    2. '=' → logprob: -12.375008583068848
    3. ' =' → logprob: -13.125008583068848
    4. ' ,' → logprob: -13.250008583068848
    5. ',
' → logprob: -16.000009536743164
    6. '_,' → logprob: -16.375009536743164
    7. ')' → logprob: -16.625009536743164
    8. '   ' → logprob: -16.750009536743164
    9. ',user' → logprob: -16.875009536743164
    10. ',\
' → logprob: -17.125009536743164

Token 584: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.000111768240458332
    2. ' top' → logprob: -9.12511157989502
    3. 't' → logprob: -12.87511157989502
    4. '   ' → logprob: -16.875112533569336
    5. '	top' → logprob: -16.875112533569336
    6. ' ' → logprob: -17.500112533569336
    7. '(top' → logprob: -18.250112533569336
    8. '  ' → logprob: -18.625112533569336
    9. '[top' → logprob: -18.750112533569336
    10. 'Top' → logprob: -18.750112533569336

Token 585: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.113290095934644e-05
    2. ' ,' → logprob: -10.500081062316895
    3. '=' → logprob: -10.875081062316895
    4. '<|end|>' → logprob: -11.000081062316895
    5. ',s' → logprob: -12.250081062316895
    6. ',
' → logprob: -12.500081062316895
    7. ',d' → logprob: -13.000081062316895
    8. ' =' → logprob: -13.875081062316895
    9. '_,' → logprob: -14.375081062316895
    10. ',\
' → logprob: -14.375081062316895

Token 586: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.003608505241572857
    2. ' south' → logprob: -5.628608703613281
    3. 's' → logprob: -12.128608703613281
    4. 'sou' → logprob: -13.378608703613281
    5. 'north' → logprob: -13.628608703613281
    6. ' ' → logprob: -16.25360870361328
    7. 'east' → logprob: -17.25360870361328
    8. '```' → logprob: -17.25360870361328
    9. 'side' → logprob: -17.62860870361328
    10. 'sr' → logprob: -17.75360870361328

Token 587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1160349458805285e-05
    2. ' ,' → logprob: -11.625011444091797
    3. '=' → logprob: -14.750011444091797
    4. ',next' → logprob: -14.875011444091797
    5. ',d' → logprob: -15.375011444091797
    6. '           ' → logprob: -15.375011444091797
    7. '_,' → logprob: -15.625011444091797
    8. ',
' → logprob: -15.750011444091797
    9. ',p' → logprob: -16.250011444091797
    10. ',c' → logprob: -16.375011444091797

Token 588: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.011052886955440044
    2. ' east' → logprob: -4.511053085327148
    3. 'e' → logprob: -12.261053085327148
    4. 'ea' → logprob: -16.13605308532715
    5. ' ' → logprob: -16.63605308532715
    6. '   ' → logprob: -16.88605308532715
    7. '-east' → logprob: -17.63605308532715
    8. 'earth' → logprob: -18.13605308532715
    9. '  ' → logprob: -18.26105308532715
    10. '
' → logprob: -18.38605308532715

Token 589: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012918313033878803
    2. '=' → logprob: -4.387918472290039
    3. ')' → logprob: -8.012918472290039
    4. ',' → logprob: -10.137918472290039
    5. ' ' → logprob: -11.262918472290039
    6. '   ' → logprob: -11.637918472290039
    7. '           ' → logprob: -11.637918472290039
    8. '       ' → logprob: -13.387918472290039
    9. '            ' → logprob: -13.762918472290039
    10. '    ' → logprob: -14.262918472290039

Token 590: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.004080301150679588
    2. ' heap' → logprob: -5.504080295562744
    3. 'he' → logprob: -13.379080772399902
    4. '   ' → logprob: -15.004080772399902
    5. '(heap' → logprob: -17.254079818725586
    6. ' he' → logprob: -17.879079818725586
    7. '.heap' → logprob: -18.504079818725586
    8. '_heap' → logprob: -19.004079818725586
    9. 'queue' → logprob: -19.254079818725586
    10. ' ' → logprob: -20.004079818725586

Token 591: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.088346359931165e-07
    2. 'pop' → logprob: -14.875000953674316
    3. '.pop' → logprob: -15.750000953674316
    4. '[' → logprob: -16.125
    5. '.he' → logprob: -16.5
    6. 'qe' → logprob: -17.125
    7. 'op' → logprob: -17.5
    8. 'p' → logprob: -17.5
    9. '```' → logprob: -17.5
    10. 'replace' → logprob: -18.0

Token 592: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0005991425714455545
    2. 'q' → logprob: -7.500598907470703
    3. 'he' → logprob: -10.125598907470703
    4. ' he' → logprob: -12.500598907470703
    5. '.' → logprob: -15.125598907470703
    6. '.pop' → logprob: -15.250598907470703
    7. ').' → logprob: -15.250598907470703
    8. '.heap' → logprob: -15.250598907470703
    9. ' .' → logprob: -15.375598907470703
    10. 'op' → logprob: -15.500598907470703

Token 593: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.531315314830863e-06
    2. 'pp' → logprob: -12.750003814697266
    3. 'appe' → logprob: -15.750003814697266
    4. 'ap' → logprob: -16.250003814697266
    5. '```' → logprob: -16.375003814697266
    6. 'q' → logprob: -16.625003814697266
    7. 'appen' → logprob: -17.500003814697266
    8. '[' → logprob: -17.750003814697266
    9. 'op' → logprob: -18.500003814697266
    10. '...' → logprob: -18.750003814697266

Token 594: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.4668802320957184
    2. 'app' → logprob: -1.466880202293396
    3. 'ush' → logprob: -1.966880202293396
    4. 'pp' → logprob: -6.4668803215026855
    5. 'pop' → logprob: -7.0918803215026855
    6. 'he' → logprob: -9.966879844665527
    7. 'q' → logprob: -10.341879844665527
    8. 'p' → logprob: -11.091879844665527
    9. 'push' → logprob: -11.591879844665527
    10. 'ap' → logprob: -12.091879844665527

Token 595: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00019603055261541158
    2. '(' → logprob: -8.62519645690918
    3. '(
' → logprob: -11.50019645690918
    4. '(q' → logprob: -12.62519645690918
    5. 'pq' → logprob: -13.25019645690918
    6. ' (' → logprob: -14.62519645690918
    7. '(pr' → logprob: -15.37519645690918
    8. '(queue' → logprob: -15.62519645690918
    9. ' pq' → logprob: -16.12519645690918
    10. '(

' → logprob: -16.62519645690918

Token 596: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.465036105713807e-06
    2. ')' → logprob: -12.875007629394531
    3. ',' → logprob: -13.625007629394531
    4. 'Q' → logprob: -14.625007629394531
    5. ']' → logprob: -15.250007629394531
    6. '(' → logprob: -15.250007629394531
    7. '(q' → logprob: -15.250007629394531
    8. '[' → logprob: -15.500007629394531
    9. '	q' → logprob: -15.500007629394531
    10. ' q' → logprob: -15.625007629394531

Token 597: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01646878942847252
    2. '           ' → logprob: -4.7664690017700195
    3. ')
' → logprob: -4.8914690017700195
    4. '<|end|>' → logprob: -9.01646900177002
    5. '       ' → logprob: -9.39146900177002
    6. '
' → logprob: -10.26646900177002
    7. '):
' → logprob: -10.89146900177002
    8. '<|end|>' → logprob: -11.39146900177002
    9. '            
' → logprob: -11.76646900177002
    10. '   ' → logprob: -11.89146900177002

Token 598: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.040871258825063705
    2. '       ' → logprob: -3.2908711433410645
    3. '<|end|>' → logprob: -6.2908711433410645
    4. ' if' → logprob: -8.040871620178223
    5. '            
' → logprob: -8.290871620178223
    6. 'if' → logprob: -8.915871620178223
    7. '        
' → logprob: -9.290871620178223
    8. '   ' → logprob: -9.915871620178223
    9. '
' → logprob: -10.665871620178223
    10. '               ' → logprob: -10.915871620178223

Token 599: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5500274896621704
    2. '           ' → logprob: -1.4250274896621704
    3. ' if' → logprob: -2.050027370452881
    4. '       ' → logprob: -2.925027370452881
    5. '<|end|>' → logprob: -9.925027847290039
    6. '            
' → logprob: -10.425027847290039
    7. '   ' → logprob: -10.800027847290039
    8. '```' → logprob: -10.925027847290039
    9. '	if' → logprob: -11.175027847290039
    10. '#' → logprob: -11.550027847290039

Token 600: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.020082110539078712
    2. 'r' → logprob: -4.020081996917725
    3. ' (' → logprob: -6.270081996917725
    4. ' r' → logprob: -10.395082473754883
    5. '(' → logprob: -12.020082473754883
    6. '   ' → logprob: -14.145082473754883
    7. '_r' → logprob: -15.395082473754883
    8. ' ' → logprob: -15.520082473754883
    9. '```' → logprob: -16.645082473754883
    10. '[r' → logprob: -16.895082473754883

Token 601: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00034273360506631434
    2. '(r' → logprob: -8.00034236907959
    3. ' r' → logprob: -11.87534236907959
    4. ' (' → logprob: -15.00034236907959
    5. '(' → logprob: -17.250343322753906
    6. '   ' → logprob: -18.625343322753906
    7. '_r' → logprob: -19.000343322753906
    8. '	r' → logprob: -19.125343322753906
    9. ')' → logprob: -19.875343322753906
    10. ' ' → logprob: -19.875343322753906

Token 602: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0049333274364471436
    2. ' ==' → logprob: -5.3799333572387695
    3. '==' → logprob: -8.25493335723877
    4. ' ,' → logprob: -9.87993335723877
    5. ')==' → logprob: -14.62993335723877
    6. ',
' → logprob: -14.75493335723877
    7. ')' → logprob: -14.75493335723877
    8. ',c' → logprob: -14.87993335723877
    9. '```' → logprob: -16.504932403564453
    10. '=' → logprob: -17.129932403564453

Token 603: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.56102097814437e-05
    2. ' c' → logprob: -10.000045776367188
    3. ')c' → logprob: -16.750045776367188
    4. ' ' → logprob: -17.375045776367188
    5. ')' → logprob: -17.375045776367188
    6. '   ' → logprob: -17.625045776367188
    7. '
' → logprob: -17.875045776367188
    8. '	c' → logprob: -18.250045776367188
    9. '```' → logprob: -18.375045776367188
    10. '    ' → logprob: -18.750045776367188

Token 604: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007563557010143995
    2. ' ==' → logprob: -5.882563591003418
    3. ')==' → logprob: -6.007563591003418
    4. '==' → logprob: -6.132563591003418
    5. ',' → logprob: -9.257563591003418
    6. ' )' → logprob: -11.007563591003418
    7. ',)' → logprob: -13.257563591003418
    8. ']==' → logprob: -13.632563591003418
    9. ']' → logprob: -15.132563591003418
    10. '),' → logprob: -15.507563591003418

Token 605: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04988684505224228
    2. '==' → logprob: -3.04988694190979
    3. ')' → logprob: -7.174886703491211
    4. ')==' → logprob: -7.549886703491211
    5. ']==' → logprob: -12.299886703491211
    6. ',' → logprob: -14.299886703491211
    7. ' ' → logprob: -14.799886703491211
    8. ' )' → logprob: -15.424886703491211
    9. '==(' → logprob: -15.424886703491211
    10. '```' → logprob: -15.424886703491211

Token 606: ' (' (ID: 350)
  Prédit: '(gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(gr' → logprob: -0.08055390417575836
    2. ' (' → logprob: -2.5805540084838867
    3. '(go' → logprob: -6.580554008483887
    4. '   ' → logprob: -8.830554008483887
    5. '(gt' → logprob: -9.580554008483887
    6. '(goal' → logprob: -11.205554008483887
    7. '(grid' → logprob: -11.580554008483887
    8. '  ' → logprob: -11.955554008483887
    9. '(g' → logprob: -11.955554008483887
    10. '(gc' → logprob: -11.955554008483887

Token 607: 'gr' (ID: 896)
  Prédit: 'gr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.00013727048644796014
    2. '(gr' → logprob: -9.125137329101562
    3. ' gr' → logprob: -10.500137329101562
    4. '   ' → logprob: -15.500137329101562
    5. '	gr' → logprob: -15.750137329101562
    6. '(' → logprob: -16.000137329101562
    7. ' (' → logprob: -16.500137329101562
    8. ')' → logprob: -16.500137329101562
    9. '           ' → logprob: -18.125137329101562
    10. '_gr' → logprob: -18.125137329101562

Token 608: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.190178904333152e-05
    2. ' ,' → logprob: -10.375031471252441
    3. ',
' → logprob: -14.750031471252441
    4. ')' → logprob: -16.625032424926758
    5. ',c' → logprob: -17.125032424926758
    6. '<|end|>' → logprob: -17.625032424926758
    7. '‌,' → logprob: -18.125032424926758
    8. ',

' → logprob: -18.375032424926758
    9. '           ' → logprob: -18.375032424926758
    10. '       ' → logprob: -18.375032424926758

Token 609: ' gc' (ID: 30765)
  Prédit: 'gc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gc' → logprob: -0.0004309076175559312
    2. ' gc' → logprob: -7.750431060791016
    3. '(gc' → logprob: -15.500431060791016
    4. '_gc' → logprob: -17.625431060791016
    5. 'gcc' → logprob: -20.750431060791016
    6. '.gc' → logprob: -21.500431060791016
    7. ' ' → logprob: -21.500431060791016
    8. '   ' → logprob: -21.750431060791016
    9. 'GC' → logprob: -22.250431060791016
    10. '    ' → logprob: -22.500431060791016

Token 610: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34430938959121704
    2. ' and' → logprob: -1.3443093299865723
    3. '):' → logprob: -4.219309329986572
    4. '):
' → logprob: -4.594309329986572
    5. 'and' → logprob: -5.594309329986572
    6. '           ' → logprob: -7.219309329986572
    7. ':' → logprob: -7.469309329986572
    8. ',' → logprob: -8.09430980682373
    9. '               ' → logprob: -8.46930980682373
    10. ' )' → logprob: -9.34430980682373

Token 611: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03560928255319595
    2. ' and' → logprob: -3.410609245300293
    3. '           ' → logprob: -6.660609245300293
    4. ' if' → logprob: -8.035609245300293
    5. ':' → logprob: -9.285609245300293
    6. '<|end|>' → logprob: -9.785609245300293
    7. ',' → logprob: -10.160609245300293
    8. ':
' → logprob: -10.285609245300293
    9. 'and' → logprob: -10.410609245300293
    10. '   ' → logprob: -11.035609245300293

Token 612: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.30889663100242615
    2. '               ' → logprob: -1.5588966608047485
    3. 'return' → logprob: -2.933896541595459
    4. ' print' → logprob: -7.058896541595459
    5. ' return' → logprob: -7.308896541595459
    6. '           ' → logprob: -7.808896541595459
    7. '                   ' → logprob: -9.183897018432617
    8. '```' → logprob: -9.683897018432617
    9. 'break' → logprob: -10.308897018432617
    10. '
' → logprob: -10.933897018432617

Token 613: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.0011735594598576427
    2. 'cost' → logprob: -6.751173496246338
    3. ' cost' → logprob: -12.626173973083496
    4. '(' → logprob: -16.62617301940918
    5. 'Cost' → logprob: -19.12617301940918
    6. '_cost' → logprob: -19.87617301940918
    7. '(c' → logprob: -20.25117301940918
    8. ' (' → logprob: -20.87617301940918
    9. '(code' → logprob: -21.00117301940918
    10. '.cost' → logprob: -21.12617301940918

Token 614: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3870208263397217
    2. ')' → logprob: -1.1370208263397217
    3. ')
' → logprob: -9.1370210647583
    4. '               ' → logprob: -10.2620210647583
    5. ')`
' → logprob: -12.7620210647583
    6. ')return' → logprob: -13.8870210647583
    7. '           ' → logprob: -14.1370210647583
    8. '                   ' → logprob: -14.3870210647583
    9. '+' → logprob: -14.6370210647583
    10. ')

' → logprob: -15.3870210647583

Token 615: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00018125296628568321
    2. '           ' → logprob: -8.875181198120117
    3. '<|end|>' → logprob: -11.500181198120117
    4. '       ' → logprob: -11.625181198120117
    5. '                   ' → logprob: -11.625181198120117
    6. '                
' → logprob: -12.500181198120117
    7. 'continue' → logprob: -13.250181198120117
    8. ' continue' → logprob: -13.375181198120117
    9. '              ' → logprob: -13.625181198120117
    10. 'return' → logprob: -14.000181198120117

Token 616: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15374036133289337
    2. 'return' → logprob: -2.153740406036377
    3. 'break' (adapté à ' break') → logprob: -3.778740406036377
    4. ' return' → logprob: -6.028740406036377
    5. ' break' → logprob: -6.778740406036377
    6. 'continue' → logprob: -9.903739929199219
    7. '           ' → logprob: -12.528739929199219
    8. ' continue' → logprob: -13.903739929199219
    9. '```' → logprob: -13.903739929199219
    10. '	break' → logprob: -14.028739929199219

Token 617: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030333271250128746
    2. '       ' → logprob: -3.6553332805633545
    3. '   ' → logprob: -6.155333042144775
    4. '<|end|>' → logprob: -7.155333042144775
    5. '            
' → logprob: -8.530333518981934
    6. '    
' → logprob: -8.655333518981934
    7. '  
' → logprob: -8.780333518981934
    8. '        
' → logprob: -8.905333518981934
    9. 'else' → logprob: -9.405333518981934
    10. ' ' → logprob: -9.655333518981934

Token 618: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008719881996512413
    2. '       ' → logprob: -4.8837199211120605
    3. '   ' → logprob: -7.5087199211120605
    4. '<|end|>' → logprob: -8.258719444274902
    5. 'else' → logprob: -9.258719444274902
    6. '  
' → logprob: -10.133719444274902
    7. '            
' → logprob: -10.508719444274902
    8. ' ' → logprob: -10.508719444274902
    9. '		' → logprob: -11.383719444274902
    10. '```' → logprob: -11.383719444274902

Token 619: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3370250463485718
    2. 'for' → logprob: -1.4620250463485718
    3. ' for' → logprob: -3.5870251655578613
    4. '       ' → logprob: -3.7120251655578613
    5. 'if' (adapté à ' if') → logprob: -6.337025165557861
    6. '   ' → logprob: -8.587024688720703
    7. ' if' → logprob: -8.962024688720703
    8. 'next' → logprob: -9.962024688720703
    9. 'continue' → logprob: -10.087024688720703
    10. '            
' → logprob: -10.462024688720703

Token 620: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02305176667869091
    2. 'cost' → logprob: -4.773051738739014
    3. '(cost' → logprob: -4.898051738739014
    4. '(dist' → logprob: -5.023051738739014
    5. ' dist' → logprob: -8.273052215576172
    6. '(' → logprob: -11.523052215576172
    7. '(c' → logprob: -11.648052215576172
    8. ' (' → logprob: -11.898052215576172
    9. '((' → logprob: -12.523052215576172
    10. ' cost' → logprob: -13.773052215576172

Token 621: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0699983462691307
    2. '[(' → logprob: -2.694998264312744
    3. 'get' → logprob: -10.569998741149902
    4. '.setdefault' → logprob: -11.569998741149902
    5. '.' → logprob: -11.694998741149902
    6. '   ' → logprob: -12.069998741149902
    7. ' .' → logprob: -12.194998741149902
    8. ' (' → logprob: -13.069998741149902
    9. '[' → logprob: -13.444998741149902
    10. '```' → logprob: -13.694998741149902

Token 622: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.9385402993066236e-05
    2. '(' → logprob: -10.875019073486328
    3. ' ((' → logprob: -15.125019073486328
    4. '(((' → logprob: -17.125019073486328
    5. ' ' → logprob: -17.625019073486328
    6. '   ' → logprob: -19.000019073486328
    7. '(
' → logprob: -19.250019073486328
    8. ' (' → logprob: -19.875019073486328
    9. '```' → logprob: -20.250019073486328
    10. '
' → logprob: -20.875019073486328

Token 623: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0010007746750488877
    2. '(r' → logprob: -7.001000881195068
    3. ' r' → logprob: -9.37600040435791
    4. '   ' → logprob: -13.75100040435791
    5. ')' → logprob: -14.00100040435791
    6. ' (' → logprob: -14.12600040435791
    7. '	r' → logprob: -14.37600040435791
    8. '
' → logprob: -14.87600040435791
    9. ' ' → logprob: -15.87600040435791
    10. ',r' → logprob: -15.87600040435791

Token 624: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001718019717372954
    2. ',c' → logprob: -6.376718044281006
    3. ' ,' → logprob: -11.251717567443848
    4. 'c' → logprob: -13.126717567443848
    5. ',
' → logprob: -14.376717567443848
    6. ',r' → logprob: -16.001718521118164
    7. ',t' → logprob: -17.751718521118164
    8. ' c' → logprob: -18.501718521118164
    9. ',k' → logprob: -18.501718521118164
    10. ',w' → logprob: -18.751718521118164

Token 625: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005542247672565281
    2. ' c' → logprob: -7.500554084777832
    3. '   ' → logprob: -15.250554084777832
    4. ',c' → logprob: -15.250554084777832
    5. ' ' → logprob: -15.375554084777832
    6. ',' → logprob: -15.500554084777832
    7. '	c' → logprob: -16.25055503845215
    8. '  ' → logprob: -16.50055503845215
    9. ')c' → logprob: -17.00055503845215
    10. '    ' → logprob: -17.62555503845215

Token 626: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.251091377227567e-05
    2. ' ,' → logprob: -10.125042915344238
    3. ',t' → logprob: -14.250042915344238
    4. ',
' → logprob: -14.625042915344238
    5. '[top' → logprob: -15.250042915344238
    6. '   ' → logprob: -16.125041961669922
    7. '(top' → logprob: -16.250041961669922
    8. '           ' → logprob: -16.375041961669922
    9. ',last' → logprob: -16.750041961669922
    10. ',current' → logprob: -16.750041961669922

Token 627: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0024758970830589533
    2. ' top' → logprob: -6.002475738525391
    3. '   ' → logprob: -15.87747573852539
    4. '	top' → logprob: -17.00247573852539
    5. ' ' → logprob: -17.75247573852539
    6. '(top' → logprob: -18.25247573852539
    7. '  ' → logprob: -18.50247573852539
    8. '    ' → logprob: -18.87747573852539
    9. '           ' → logprob: -19.12747573852539
    10. '[top' → logprob: -19.25247573852539

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022827142849564552
    2. ',s' → logprob: -3.8978271484375
    3. '),' → logprob: -6.5228271484375
    4. ')' → logprob: -8.3978271484375
    5. ',None' → logprob: -8.7728271484375
    6. '))' → logprob: -9.3978271484375
    7. ',),' → logprob: -9.7728271484375
    8. ',)' → logprob: -10.0228271484375
    9. ',
' → logprob: -10.3978271484375
    10. ' ,' → logprob: -10.3978271484375

Token 629: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.0036427148152142763
    2. ' south' → logprob: -5.628642559051514
    3. 'east' → logprob: -10.128643035888672
    4. 'sou' → logprob: -14.003643035888672
    5. 'north' → logprob: -14.253643035888672
    6. ' east' → logprob: -15.128643035888672
    7. 's' → logprob: -15.378643035888672
    8. '
' → logprob: -15.753643035888672
    9. ' ' → logprob: -15.878643035888672
    10. '   ' → logprob: -16.128643035888672

Token 630: ',' (ID: 11)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0017675277777016163
    2. ',' → logprob: -6.501767635345459
    3. '))' → logprob: -8.3767671585083
    4. ')' → logprob: -10.7517671585083
    5. ',),' → logprob: -12.2517671585083
    6. ' ),' → logprob: -12.7517671585083
    7. '),(' → logprob: -13.0017671585083
    8. '],' → logprob: -14.2517671585083
    9. ''),' → logprob: -14.3767671585083
    10. '```' → logprob: -15.1267671585083

Token 631: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.05495822802186012
    2. ' east' → logprob: -2.9299583435058594
    3. 'e' → logprob: -9.55495834350586
    4. '
' → logprob: -13.55495834350586
    5. ' ' → logprob: -13.92995834350586
    6. '   ' → logprob: -14.67995834350586
    7. '-east' → logprob: -14.80495834350586
    8. 'ea' → logprob: -15.30495834350586
    9. ' e' → logprob: -15.42995834350586
    10. ')' → logprob: -15.67995834350586

Token 632: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07020584493875504
    2. ')' → logprob: -2.6952059268951416
    3. ',None' → logprob: -9.195205688476562
    4. ' ,' → logprob: -9.320205688476562
    5. ',)' → logprob: -10.570205688476562
    6. ')!=' → logprob: -10.945205688476562
    7. '',' → logprob: -12.195205688476562
    8. '   ' → logprob: -12.320205688476562
    9. ')>' → logprob: -12.570205688476562
    10. '')' → logprob: -12.695205688476562

Token 633: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.13352695107460022
    2. '0' → logprob: -2.1335270404815674
    3. '1' → logprob: -5.383526802062988
    4. '<float' → logprob: -7.383526802062988
    5. ')' → logprob: -7.508526802062988
    6. 'sys' → logprob: -8.008526802062988
    7. ' float' → logprob: -8.758526802062988
    8. '100' → logprob: -9.258526802062988
    9. '>' → logprob: -10.258526802062988
    10. '10' → logprob: -10.258526802062988

Token 634: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.16803990304470062
    2. '0' → logprob: -1.9180399179458618
    3. '<float' → logprob: -6.043039798736572
    4. 'None' → logprob: -6.293039798736572
    5. '1' → logprob: -6.543039798736572
    6. ')' → logprob: -6.668039798736572
    7. '100' → logprob: -8.54304027557373
    8. 'sys' → logprob: -8.91804027557373
    9. ')>' → logprob: -9.16804027557373
    10. ' float' → logprob: -9.29304027557373

Token 635: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2582096457481384
    2. '000' → logprob: -1.5082097053527832
    3. '9' → logprob: -5.633209705352783
    4. '0' → logprob: -7.133209705352783
    5. '10' → logprob: -7.258209705352783
    6. '00' → logprob: -7.883209705352783
    7. '100' → logprob: -8.133209228515625
    8. '7' → logprob: -8.383209228515625
    9. '999' → logprob: -9.758209228515625
    10. ')' → logprob: -9.883209228515625

Token 636: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.002579940017312765
    2. '10' → logprob: -6.502580165863037
    3. '7' → logprob: -7.002580165863037
    4. '15' → logprob: -9.127579689025879
    5. '8' → logprob: -10.002579689025879
    6. '12' → logprob: -12.002579689025879
    7. '18' → logprob: -12.502579689025879
    8. '6' → logprob: -12.752579689025879
    9. '20' → logprob: -15.127579689025879
    10. '13' → logprob: -16.002580642700195

Token 637: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001783594605512917
    2. ')>' → logprob: -6.50178337097168
    3. ' )' → logprob: -8.37678337097168
    4. ')<' → logprob: -10.75178337097168
    5. '>' → logprob: -11.25178337097168
    6. '>)' → logprob: -11.50178337097168
    7. ' >' → logprob: -13.12678337097168
    8. ')<=' → logprob: -13.87678337097168
    9. '`)' → logprob: -14.37678337097168
    10. ',' → logprob: -14.37678337097168

Token 638: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.02693641558289528
    2. ' <' → logprob: -3.9019365310668945
    3. '>' → logprob: -5.1519365310668945
    4. '<=' → logprob: -7.7769365310668945
    5. ' >' → logprob: -9.401936531066895
    6. '<int' → logprob: -11.026936531066895
    7. ' <=' → logprob: -11.651936531066895
    8. '!=' → logprob: -11.901936531066895
    9. '<ll' → logprob: -12.026936531066895
    10. ' ' → logprob: -12.151936531066895

Token 639: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00861468818038702
    2. ' cost' → logprob: -4.758614540100098
    3. '(cost' → logprob: -16.883615493774414
    4. '_cost' → logprob: -19.383615493774414
    5. '   ' → logprob: -19.883615493774414
    6. ' ' → logprob: -20.008615493774414
    7. '```' → logprob: -20.258615493774414
    8. '=' → logprob: -20.258615493774414
    9. '0' → logprob: -20.383615493774414
    10. '.cost' → logprob: -20.383615493774414

Token 640: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23942427337169647
    2. ':
' → logprob: -1.989424228668213
    3. '           ' → logprob: -2.614424228668213
    4. ' continue' → logprob: -6.614424228668213
    5. '               ' → logprob: -6.989424228668213
    6. 'continue' → logprob: -7.989424228668213
    7. '       ' → logprob: -9.114424705505371
    8. '   ' → logprob: -9.364424705505371
    9. '	continue' → logprob: -9.989424705505371
    10. '):
' → logprob: -10.489424705505371

Token 641: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2820326089859009
    2. '           ' → logprob: -1.5320326089859009
    3. '       ' → logprob: -4.282032489776611
    4. ' continue' → logprob: -4.657032489776611
    5. 'continue' → logprob: -5.157032489776611
    6. '   ' → logprob: -7.907032489776611
    7. '	continue' → logprob: -9.15703296661377
    8. '_continue' → logprob: -10.53203296661377
    9. '	       ' → logprob: -11.03203296661377
    10. '```' → logprob: -11.28203296661377

Token 642: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.14757128059864044
    2. ' continue' → logprob: -2.147571325302124
    3. '           ' → logprob: -4.147571086883545
    4. '               ' → logprob: -5.397571086883545
    5. '	continue' → logprob: -9.522571563720703
    6. '   ' → logprob: -10.897571563720703
    7. '_continue' → logprob: -12.272571563720703
    8. '		' → logprob: -13.022571563720703
    9. '                   ' → logprob: -13.647571563720703
    10. '       ' → logprob: -14.397571563720703

Token 643: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015136175788939
    2. '       ' → logprob: -4.890136241912842
    3. '
' → logprob: -5.765136241912842
    4. '   ' → logprob: -6.390136241912842
    5. '    
' → logprob: -7.265136241912842
    6. '            
' → logprob: -7.640136241912842
    7. '<|end|>' → logprob: -7.640136241912842
    8. ' 
' → logprob: -7.765136241912842
    9. '        
' → logprob: -8.890135765075684
    10. '  
' → logprob: -9.390135765075684

Token 644: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3728409707546234
    2. '       ' → logprob: -1.6228410005569458
    3. '   ' → logprob: -2.3728408813476562
    4. ' for' → logprob: -5.122840881347656
    5. '<|end|>' → logprob: -5.372840881347656
    6. '```' → logprob: -5.622840881347656
    7. '	       ' → logprob: -6.372840881347656
    8. ' ' → logprob: -6.997840881347656
    9. '	   ' → logprob: -7.122840881347656
    10. '	for' → logprob: -8.247840881347656

Token 645: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.17503198981285095
    2. '           ' → logprob: -2.675031900405884
    3. ' for' → logprob: -2.925031900405884
    4. '       ' → logprob: -3.300031900405884
    5. '	for' → logprob: -6.925032138824463
    6. '   ' → logprob: -9.050031661987305
    7. '```' → logprob: -12.175031661987305
    8. '	   ' → logprob: -12.300031661987305
    9. '	       ' → logprob: -12.300031661987305
    10. '
' → logprob: -12.925031661987305

Token 646: ' d' (ID: 272)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.48413392901420593
    2. 'd' → logprob: -1.1091339588165283
    3. 'direction' → logprob: -3.6091339588165283
    4. ' dir' → logprob: -4.359133720397949
    5. ' d' → logprob: -4.484133720397949
    6. ' direction' → logprob: -6.109133720397949
    7. '(d' → logprob: -8.85913372039795
    8. '(dir' → logprob: -9.10913372039795
    9. 'dire' → logprob: -9.48413372039795
    10. '(direction' → logprob: -10.23413372039795

Token 647: ',' (ID: 11)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.017589986324310303
    2. 'irection' → logprob: -4.267590045928955
    3. ',' → logprob: -5.892590045928955
    4. '_,' → logprob: -8.142589569091797
    5. '_char' → logprob: -9.517589569091797
    6. '_direction' → logprob: -9.642589569091797
    7. '_' → logprob: -10.017589569091797
    8. ' in' → logprob: -10.142589569091797
    9. '_ir' → logprob: -10.392589569091797
    10. '_name' → logprob: -10.517589569091797

Token 648: ' dr' (ID: 1498)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -3.750436007976532e-05
    2. ' dr' → logprob: -10.25003719329834
    3. 'dx' → logprob: -13.25003719329834
    4. '   ' → logprob: -15.62503719329834
    5. '	dr' → logprob: -16.250038146972656
    6. 'dy' → logprob: -16.625038146972656
    7. 'dh' → logprob: -17.375038146972656
    8. '```' → logprob: -17.750038146972656
    9. 'd' → logprob: -18.625038146972656
    10. '  ' → logprob: -19.625038146972656

Token 649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.315936429426074e-05
    2. ' ,' → logprob: -9.500082969665527
    3. ',d' → logprob: -12.000082969665527
    4. '_,' → logprob: -13.750082969665527
    5. 'd' → logprob: -14.500082969665527
    6. '```' → logprob: -16.375083923339844
    7. ',n' → logprob: -16.875083923339844
    8. '‌,' → logprob: -16.875083923339844
    9. ',w' → logprob: -17.500083923339844
    10. ',b' → logprob: -17.500083923339844

Token 650: ' dc' (ID: 37843)
  Prédit: 'dc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.00020354038861114532
    2. ' dc' → logprob: -8.500203132629395
    3. '(dc' → logprob: -18.00020408630371
    4. '   ' → logprob: -18.12520408630371
    5. '.dc' → logprob: -18.12520408630371
    6. '_dc' → logprob: -18.50020408630371
    7. 'dcc' → logprob: -19.00020408630371
    8. ' ' → logprob: -20.50020408630371
    9. '  ' → logprob: -20.62520408630371
    10. '
' → logprob: -21.25020408630371

Token 651: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004079112783074379
    2. 'in' → logprob: -5.504079341888428
    3. ',' → logprob: -15.37907886505127
    4. ' ' → logprob: -15.50407886505127
    5. '<|end|>' → logprob: -16.004079818725586
    6. ')' → logprob: -16.129079818725586
    7. 's' → logprob: -16.754079818725586
    8. '	in' → logprob: -17.004079818725586
    9. 'n' → logprob: -18.004079818725586
    10. 'next' → logprob: -18.879079818725586

Token 652: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.10020774602890015
    2. ' directions' → logprob: -2.350207805633545
    3. 'direction' → logprob: -14.225207328796387
    4. 'd' → logprob: -15.725207328796387
    5. '[' → logprob: -16.100208282470703
    6. '   ' → logprob: -16.350208282470703
    7. ' ' → logprob: -17.100208282470703
    8. 'Directions' → logprob: -17.475208282470703
    9. 'direct' → logprob: -17.975208282470703
    10. '[(' → logprob: -18.225208282470703

Token 653: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.031993184238672256
    2. ':
' → logprob: -3.5319931507110596
    3. ',' → logprob: -6.406993389129639
    4. '           ' → logprob: -8.53199291229248
    5. '<|end|>' → logprob: -9.28199291229248
    6. '):
' → logprob: -9.40699291229248
    7. '               ' → logprob: -9.78199291229248
    8. '       ' → logprob: -10.15699291229248
    9. '):' → logprob: -10.15699291229248
    10. '   ' → logprob: -11.28199291229248

Token 654: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016522101359441876
    2. '                
' → logprob: -7.126652240753174
    3. '```' → logprob: -8.376651763916016
    4. ' new' → logprob: -9.126651763916016
    5. '<|end|>' → logprob: -9.251651763916016
    6. '	           ' → logprob: -9.501651763916016
    7. '                ' → logprob: -9.626651763916016
    8. ',' → logprob: -10.001651763916016
    9. '              ' → logprob: -10.251651763916016
    10. ' next' → logprob: -10.251651763916016

Token 655: ' nr' (ID: 24055)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' (adapté à ' nr') → logprob: -0.02329089865088463
    2. ' nr' → logprob: -3.7732908725738525
    3. '               ' → logprob: -11.023290634155273
    4. 'new' → logprob: -11.273290634155273
    5. ' if' → logprob: -12.398290634155273
    6. '                   ' → logprob: -12.523290634155273
    7. 'if' → logprob: -12.648290634155273
    8. '```' → logprob: -13.273290634155273
    9. ' new' → logprob: -13.398290634155273
    10. '                ' → logprob: -14.648290634155273

Token 656: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12810498476028442
    2. ' =' → logprob: -2.1281049251556396
    3. ',' → logprob: -6.753105163574219
    4. '=n' → logprob: -12.628105163574219
    5. ' ,' → logprob: -12.628105163574219
    6. '=int' → logprob: -14.753105163574219
    7. ')' → logprob: -15.003105163574219
    8. '=r' → logprob: -15.378105163574219
    9. ' ' → logprob: -15.503105163574219
    10. '=
' → logprob: -15.753105163574219

Token 657: ' nc' (ID: 39841)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5760254263877869
    2. ' c' → logprob: -0.8260254263877869
    3. 'r' → logprob: -9.826025009155273
    4. ' r' → logprob: -10.576025009155273
    5. ' ' → logprob: -12.826025009155273
    6. '	c' → logprob: -13.826025009155273
    7. 'n' → logprob: -14.201025009155273
    8. '   ' → logprob: -14.576025009155273
    9. ' n' → logprob: -14.826025009155273
    10. ' =' → logprob: -14.951025009155273

Token 658: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324652671813965
    2. ' =' → logprob: -3.7732465267181396
    3. '=n' → logprob: -14.398246765136719
    4. '=r' → logprob: -14.898246765136719
    5. ',' → logprob: -15.648246765136719
    6. '=
' → logprob: -17.02324676513672
    7. ')' → logprob: -17.89824676513672
    8. '＝' → logprob: -19.14824676513672
    9. '=}' → logprob: -19.14824676513672
    10. '.=' → logprob: -19.39824676513672

Token 659: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0019286326132714748
    2. ' r' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.876928329467773
    4. ' ' → logprob: -19.251928329467773
    5. '(r' → logprob: -19.251928329467773
    6. '	r' → logprob: -19.501928329467773
    7. '_r' → logprob: -20.751928329467773
    8. '  ' → logprob: -21.751928329467773
    9. '```' → logprob: -22.126928329467773
    10. '    ' → logprob: -22.251928329467773

Token 660: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20143437385559082
    2. ' +' → logprob: -1.7014343738555908
    3. '+r' → logprob: -11.576434135437012
    4. '+d' → logprob: -12.201434135437012
    5. '+,' → logprob: -13.201434135437012
    6. '+
' → logprob: -13.576434135437012
    7. ',' → logprob: -13.951434135437012
    8. '+c' → logprob: -14.451434135437012
    9. '=' → logprob: -14.701434135437012
    10. '＋' → logprob: -14.826434135437012

Token 661: ' dr' (ID: 1498)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -1.0206720617134124e-05
    2. ' dr' → logprob: -11.50001049041748
    3. '	dr' → logprob: -18.500009536743164
    4. '(dr' → logprob: -20.125009536743164
    5. '   ' → logprob: -20.875009536743164
    6. '_dr' → logprob: -21.125009536743164
    7. 'd' → logprob: -21.375009536743164
    8. '
' → logprob: -23.375009536743164
    9. '-dr' → logprob: -23.750009536743164
    10. 'Dr' → logprob: -24.375009536743164

Token 662: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010691315401345491
    2. ',n' → logprob: -6.876069068908691
    3. ' ,' → logprob: -10.251069068908691
    4. ',next' → logprob: -15.501069068908691
    5. ',d' → logprob: -15.501069068908691
    6. '               ' → logprob: -15.626069068908691
    7. ',
' → logprob: -15.751069068908691
    8. ',c' → logprob: -16.376070022583008
    9. ',new' → logprob: -16.876070022583008
    10. '```' → logprob: -17.001070022583008

Token 663: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.47407710552215576
    2. ' c' → logprob: -0.9740771055221558
    3. '   ' → logprob: -16.224077224731445
    4. '	c' → logprob: -17.849077224731445
    5. ' ' → logprob: -18.099077224731445
    6. '    ' → logprob: -19.974077224731445
    7. '  ' → logprob: -20.099077224731445
    8. '```' → logprob: -22.224077224731445
    9. '       ' → logprob: -22.349077224731445
    10. ' ' → logprob: -22.474077224731445

Token 664: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2257649004459381
    2. ' +' → logprob: -1.6007648706436157
    3. '<|end|>' → logprob: -8.600765228271484
    4. ',' → logprob: -8.850765228271484
    5. '[' → logprob: -11.725765228271484
    6. ' ' → logprob: -12.350765228271484
    7. '+,' → logprob: -13.100765228271484
    8. '+c' → logprob: -13.225765228271484
    9. '<|end|>' → logprob: -13.725765228271484
    10. '```' → logprob: -13.975765228271484

Token 665: ' dc' (ID: 37843)
  Prédit: 'dc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.0014516636729240417
    2. ' dc' → logprob: -6.62645149230957
    3. '1' → logprob: -9.37645149230957
    4. '0' → logprob: -10.87645149230957
    5. 'cc' → logprob: -11.37645149230957
    6. ' ' → logprob: -12.12645149230957
    7. 'c' → logprob: -12.62645149230957
    8. '(dc' → logprob: -14.12645149230957
    9. 'cd' → logprob: -15.50145149230957
    10. 'col' → logprob: -15.62645149230957

Token 666: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.49078360199928284
    2. '<|end|>' → logprob: -0.9907835721969604
    3. '<|end|>' → logprob: -5.61578369140625
    4. '                ' → logprob: -6.24078369140625
    5. ' if' → logprob: -6.36578369140625
    6. '                
' → logprob: -6.36578369140625
    7. ',' → logprob: -6.49078369140625
    8. '           ' → logprob: -6.74078369140625
    9. '       ' → logprob: -6.86578369140625
    10. ')' → logprob: -7.11578369140625

Token 667: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09956976026296616
    2. '                
' → logprob: -2.974569797515869
    3. '<|end|>' → logprob: -3.974569797515869
    4. '```' → logprob: -4.724569797515869
    5. ' if' → logprob: -5.224569797515869
    6. '                ' → logprob: -5.849569797515869
    7. 'if' → logprob: -6.849569797515869
    8. '       ' → logprob: -6.849569797515869
    9. '               
' → logprob: -7.099569797515869
    10. '           ' → logprob: -7.349569797515869

Token 668: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2758362293243408
    2. 'if' (adapté à ' if') → logprob: -1.5258362293243408
    3. '               ' → logprob: -3.775836229324341
    4. '                
' → logprob: -8.025835990905762
    5. '                ' → logprob: -8.150835990905762
    6. ' 
' → logprob: -10.025835990905762
    7. '	if' → logprob: -11.900835990905762
    8. ' ' → logprob: -12.025835990905762
    9. '```' → logprob: -12.275835990905762
    10. '              ' → logprob: -12.400835990905762

Token 669: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10225225239992142
    2. ' ' → logprob: -2.352252244949341
    3. ' not' → logprob: -6.85225248336792
    4. ' nr' → logprob: -7.72725248336792
    5. 'nr' → logprob: -7.72725248336792
    6. 'not' → logprob: -9.727252006530762
    7. '   ' → logprob: -10.977252006530762
    8. ' ' → logprob: -12.227252006530762
    9. ' (' → logprob: -12.352252006530762
    10. '(' → logprob: -12.352252006530762

Token 670: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007032568100839853
    2. 'not' → logprob: -7.62570333480835
    3. 'nr' → logprob: -8.500702857971191
    4. ' ' → logprob: -12.125702857971191
    5. ' not' → logprob: -12.375702857971191
    6. '(' → logprob: -14.500702857971191
    7. '   ' → logprob: -15.125702857971191
    8. '```' → logprob: -15.438202857971191
    9. '
' → logprob: -15.813202857971191
    10. '(not' → logprob: -16.313203811645508

Token 671: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.09589574486017227
    2. ' <=' → logprob: -2.470895767211914
    3. '<' → logprob: -5.345895767211914
    4. '<n' → logprob: -6.470895767211914
    5. ' <' → logprob: -8.345895767211914
    6. '>=' → logprob: -8.470895767211914
    7. '<len' → logprob: -9.720895767211914
    8. '<num' → logprob: -10.095895767211914
    9. ' >=' → logprob: -11.345895767211914
    10. '<size' → logprob: -11.970895767211914

Token 672: ' nr' (ID: 24055)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -1.0206720617134124e-05
    2. ' nr' → logprob: -11.50001049041748
    3. 'nm' → logprob: -19.125009536743164
    4. 'nc' → logprob: -19.250009536743164
    5. '.nr' → logprob: -19.250009536743164
    6. 'n' → logprob: -19.375009536743164
    7. '_nr' → logprob: -19.500009536743164
    8. '
' → logprob: -20.125009536743164
    9. 'nl' → logprob: -20.250009536743164
    10. 'nt' → logprob: -20.375009536743164

Token 673: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.02336287684738636
    2. ' <' → logprob: -4.02336311340332
    3. '<n' → logprob: -5.39836311340332
    4. '<w' → logprob: -8.02336311340332
    5. '<len' → logprob: -8.77336311340332
    6. ' and' → logprob: -10.14836311340332
    7. '<size' → logprob: -10.14836311340332
    8. '<h' → logprob: -10.64836311340332
    9. '<N' → logprob: -10.77336311340332
    10. 'and' → logprob: -10.77336311340332

Token 674: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.9027791495318525e-05
    2. ' h' → logprob: -10.875019073486328
    3. '	h' → logprob: -19.750019073486328
    4. '<h' → logprob: -19.750019073486328
    5. '   ' → logprob: -21.625019073486328
    6. '
' → logprob: -21.625019073486328
    7. 'len' → logprob: -21.875019073486328
    8. '=h' → logprob: -21.875019073486328
    9. '```' → logprob: -22.250019073486328
    10. '(h' → logprob: -22.250019073486328

Token 675: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014163863845169544
    2. 'and' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.514163970947266
    4. ',' → logprob: -16.764163970947266
    5. '       ' → logprob: -16.889163970947266
    6. '           ' → logprob: -17.389163970947266
    7. '               ' → logprob: -18.014163970947266
    8. '        ' → logprob: -18.139163970947266
    9. '	and' → logprob: -18.389163970947266
    10. '0' → logprob: -19.014163970947266

Token 676: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.061214908957481384
    2. ' ' → logprob: -3.3112149238586426
    3. 'w' → logprob: -4.061214923858643
    4. ' w' → logprob: -5.186214923858643
    5. 'grid' → logprob: -10.811214447021484
    6. 'nc' → logprob: -11.561214447021484
    7. '   ' → logprob: -11.686214447021484
    8. ' grid' → logprob: -11.936214447021484
    9. ' ' → logprob: -12.061214447021484
    10. 'wc' → logprob: -12.061214447021484

Token 677: '0' (ID: 15)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.8325677703833207e-05
    2. ' w' → logprob: -10.875028610229492
    3. 'nc' → logprob: -12.375028610229492
    4. '0' → logprob: -12.750028610229492
    5. 'wc' → logprob: -13.125028610229492
    6. 'nr' → logprob: -16.500028610229492
    7. '	w' → logprob: -16.625028610229492
    8. ' ' → logprob: -16.875028610229492
    9. '   ' → logprob: -17.000028610229492
    10. '<w' → logprob: -18.000028610229492

Token 678: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.42441052198410034
    2. 'w' → logprob: -2.174410581588745
    3. ' and' → logprob: -2.424410581588745
    4. '<' → logprob: -2.924410581588745
    5. ' <=' → logprob: -3.049410581588745
    6. ' w' → logprob: -3.799410581588745
    7. 'and' → logprob: -4.674410343170166
    8. '<=' → logprob: -5.299410343170166
    9. ' ' → logprob: -5.424410343170166
    10. 'nc' → logprob: -8.049410820007324

Token 679: ' nc' (ID: 39841)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0036045825108885765
    2. ' w' → logprob: -5.628604412078857
    3. ' ' → logprob: -13.253604888916016
    4. '   ' → logprob: -13.628604888916016
    5. '	w' → logprob: -15.003604888916016
    6. '=' → logprob: -15.628604888916016
    7. '
' → logprob: -15.628604888916016
    8. '0' → logprob: -15.753604888916016
    9. '  ' → logprob: -15.878604888916016
    10. 'wc' → logprob: -16.003604888916016

Token 680: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0441369004547596
    2. '<' → logprob: -3.1691370010375977
    3. '<w' → logprob: -8.169137001037598
    4. ' and' → logprob: -8.669137001037598
    5. '<n' → logprob: -8.669137001037598
    6. '<|end|>' → logprob: -8.669137001037598
    7. 'w' → logprob: -8.919137001037598
    8. 'and' → logprob: -9.544137001037598
    9. '<size' → logprob: -10.044137001037598
    10. '<len' → logprob: -10.669137001037598

Token 681: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0008051026379689574
    2. ' w' → logprob: -7.125804901123047
    3. ' ' → logprob: -15.500804901123047
    4. '   ' → logprob: -15.625804901123047
    5. '	w' → logprob: -16.750804901123047
    6. ' ' → logprob: -17.000804901123047
    7. '```' → logprob: -17.500804901123047
    8. '  ' → logprob: -18.125804901123047
    9. '    ' → logprob: -18.250804901123047
    10. 'h' → logprob: -18.250804901123047

Token 682: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04878368601202965
    2. 'and' → logprob: -3.048783779144287
    3. '               ' → logprob: -9.423783302307129
    4. '           ' → logprob: -10.173783302307129
    5. '                   ' → logprob: -10.798783302307129
    6. ':
' → logprob: -10.798783302307129
    7. '<|end|>' → logprob: -10.923783302307129
    8. '                       ' → logprob: -12.548783302307129
    9. ':' → logprob: -12.548783302307129
    10. ',' → logprob: -13.048783302307129

Token 683: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.016110029071569443
    2. '                       ' → logprob: -5.141109943389893
    3. ' if' → logprob: -6.266109943389893
    4. '               ' → logprob: -6.516109943389893
    5. '                    ' → logprob: -6.766109943389893
    6. '                    
' → logprob: -6.766109943389893
    7. ' new' → logprob: -7.516109943389893
    8. '                ' → logprob: -7.766109943389893
    9. 'token' → logprob: -7.766109943389893
    10. ' next' → logprob: -7.891109943389893

Token 684: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.0828164592385292
    2. 'nd' → logprob: -3.4578163623809814
    3. ' new' → logprob: -4.0828166007995605
    4. 'nt' → logprob: -4.2078166007995605
    5. 'bottom' → logprob: -4.9578166007995605
    6. 'dice' → logprob: -5.8328166007995605
    7. 'next' → logprob: -6.0828166007995605
    8. '                   ' → logprob: -6.2078166007995605
    9. ' nd' → logprob: -7.4578166007995605
    10. 'd' → logprob: -8.082816123962402

Token 685: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.1500692516565323
    2. '_cost' → logprob: -2.150069236755371
    3. '_d' → logprob: -4.150069236755371
    4. '_state' → logprob: -5.400069236755371
    5. 'top' → logprob: -6.650069236755371
    6. 'dice' → logprob: -7.525069236755371
    7. '_' → logprob: -8.025069236755371
    8. 'cost' → logprob: -8.150069236755371
    9. 'state' → logprob: -9.525069236755371
    10. '_t' → logprob: -11.400069236755371

Token 686: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004128503613173962
    2. ',new' → logprob: -5.504128456115723
    3. ' ,' → logprob: -10.504128456115723
    4. 'new' → logprob: -11.504128456115723
    5. '=' → logprob: -11.879128456115723
    6. ' new' → logprob: -13.629128456115723
    7. '<|end|>' → logprob: -13.754128456115723
    8. ' =' → logprob: -14.629128456115723
    9. ',next' → logprob: -14.879128456115723
    10. '‌,' → logprob: -14.879128456115723

Token 687: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00813224446028471
    2. 'south' → logprob: -5.508132457733154
    3. ' new' → logprob: -5.758132457733154
    4. 'north' → logprob: -7.508132457733154
    5. 'bottom' → logprob: -8.758131980895996
    6. ' south' → logprob: -9.008131980895996
    7. '_new' → logprob: -11.383131980895996
    8. ',new' → logprob: -11.508131980895996
    9. '*' → logprob: -11.508131980895996
    10. '>>>' → logprob: -12.633131980895996

Token 688: '_s' (ID: 1278)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.001296073431149125
    2. ' south' → logprob: -7.251296043395996
    3. ',' → logprob: -7.876296043395996
    4. 'new' → logprob: -9.501296043395996
    5. ',s' → logprob: -10.001296043395996
    6. 'bottom' → logprob: -10.876296043395996
    7. 'north' → logprob: -10.876296043395996
    8. '_s' → logprob: -11.001296043395996
    9. '```' → logprob: -12.126296043395996
    10. ',new' → logprob: -12.376296043395996

Token 689: 'outh' (ID: 4656)
  Prédit: 'outh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outh' → logprob: -0.005470905918627977
    2. 'south' → logprob: -5.2554707527160645
    3. 'orth' → logprob: -9.005471229553223
    4. 'out' → logprob: -9.755471229553223
    5. 'north' → logprob: -10.630471229553223
    6. 'east' → logprob: -10.630471229553223
    7. ' south' → logprob: -13.630471229553223
    8. 'bottom' → logprob: -13.880471229553223
    9. 'west' → logprob: -13.880471229553223
    10. '```' → logprob: -14.005471229553223

Token 690: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.1080467781284824e-05
    2. ',new' → logprob: -10.375041007995605
    3. ' ,' → logprob: -12.125041007995605
    4. 'new' → logprob: -12.875041007995605
    5. '=' → logprob: -14.125041007995605
    6. '<|end|>' → logprob: -15.250041007995605
    7. ',e' → logprob: -16.000041961669922
    8. ' new' → logprob: -16.375041961669922
    9. ',next' → logprob: -16.500041961669922
    10. '<|end|>' → logprob: -16.750041961669922

Token 691: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.3868778347969055
    2. 'new' → logprob: -1.1368777751922607
    3. '_new' → logprob: -12.01187801361084
    4. 'space' → logprob: -15.38687801361084
    5. ',new' → logprob: -15.88687801361084
    6. 'New' → logprob: -16.136877059936523
    7. ')new' → logprob: -17.136877059936523
    8. ',' → logprob: -17.386877059936523
    9. '$new' → logprob: -17.761877059936523
    10. '	new' → logprob: -17.761877059936523

Token 692: '_e' (ID: 4618)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.0012788071762770414
    2. '=' → logprob: -7.001278877258301
    3. '_e' → logprob: -8.2512788772583
    4. 'e' → logprob: -10.0012788772583
    5. ' east' → logprob: -10.3762788772583
    6. '=e' → logprob: -11.3762788772583
    7. ' =' → logprob: -11.6262788772583
    8. ',' → logprob: -13.1262788772583
    9. '-east' → logprob: -13.6262788772583
    10. '```' → logprob: -13.7512788772583

Token 693: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.001073419232852757
    2. 'east' → logprob: -6.876073360443115
    3. 'asts' → logprob: -11.001073837280273
    4. 'st' → logprob: -12.001073837280273
    5. '=' → logprob: -12.126073837280273
    6. 'as' → logprob: -12.501073837280273
    7. 'a' → logprob: -12.626073837280273
    8. ' east' → logprob: -13.876073837280273
    9. '```' → logprob: -13.876073837280273
    10. '(ast' → logprob: -14.251073837280273

Token 694: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975141443312168
    2. ' =' → logprob: -3.5297513008117676
    3. ')' → logprob: -14.654751777648926
    4. ',' → logprob: -15.404751777648926
    5. ')=' → logprob: -16.40475082397461
    6. '<|end|>' → logprob: -16.52975082397461
    7. '=
' → logprob: -17.27975082397461
    8. '=}' → logprob: -18.27975082397461
    9. '=

' → logprob: -18.40475082397461
    10. ' ' → logprob: -18.40475082397461

Token 695: ' roll' (ID: 8465)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.20141372084617615
    2. ' roll' → logprob: -1.7014137506484985
    3. '.roll' → logprob: -15.326414108276367
    4. '_roll' → logprob: -16.201414108276367
    5. 'rollback' → logprob: -17.576414108276367
    6. 'rollable' → logprob: -17.826414108276367
    7. ' ' → logprob: -18.076414108276367
    8. '   ' → logprob: -18.326414108276367
    9. '`' → logprob: -18.326414108276367
    10. 'roller' → logprob: -18.451414108276367

Token 696: '((' (ID: 2054)
  Prédit: '(top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(top' → logprob: -0.5768424272537231
    2. '((' → logprob: -0.8268424272537231
    3. '(' → logprob: -7.076842308044434
    4. ' (' → logprob: -9.951842308044434
    5. '   ' → logprob: -12.451842308044434
    6. '(d' → logprob: -13.326842308044434
    7. '(t' → logprob: -13.951842308044434
    8. '([' → logprob: -14.326842308044434
    9. '(bottom' → logprob: -14.701842308044434
    10. '  ' → logprob: -14.951842308044434

Token 697: 'top' (ID: 8169)
  Prédit: 'top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0015128388768061996
    2. '(top' → logprob: -6.5015130043029785
    3. ' top' → logprob: -11.75151252746582
    4. '[top' → logprob: -13.00151252746582
    5. '	top' → logprob: -15.50151252746582
    6. '   ' → logprob: -16.87651252746582
    7. ' (' → logprob: -17.00151252746582
    8. '/top' → logprob: -18.75151252746582
    9. ' ' → logprob: -19.37651252746582
    10. '(' → logprob: -19.75151252746582

Token 698: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005141906440258026
    2. ',s' → logprob: -7.625514030456543
    3. ',n' → logprob: -11.500514030456543
    4. ',new' → logprob: -12.000514030456543
    5. ' ,' → logprob: -12.500514030456543
    6. ',
' → logprob: -12.750514030456543
    7. ',c' → logprob: -13.500514030456543
    8. ',d' → logprob: -15.000514030456543
    9. ',current' → logprob: -15.125514030456543
    10. 's' → logprob: -15.375514030456543

Token 699: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.0001422770437784493
    2. ' south' → logprob: -8.875142097473145
    3. 'east' → logprob: -14.000142097473145
    4. 'new' → logprob: -14.500142097473145
    5. 'north' → logprob: -14.625142097473145
    6. 's' → logprob: -14.875142097473145
    7. '   ' → logprob: -16.37514305114746
    8. 'sou' → logprob: -16.62514305114746
    9. '
' → logprob: -17.25014305114746
    10. ')' → logprob: -17.87514305114746

Token 700: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06204880028963089
    2. ',e' → logprob: -2.81204891204834
    3. ' ,' → logprob: -10.18704891204834
    4. 'e' → logprob: -10.43704891204834
    5. '),' → logprob: -11.93704891204834
    6. 'east' → logprob: -12.18704891204834
    7. ',
' → logprob: -13.43704891204834
    8. '```' → logprob: -15.06204891204834
    9. ')' → logprob: -15.68704891204834
    10. '   ' → logprob: -15.93704891204834

Token 701: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.0001801801408873871
    2. ' east' → logprob: -8.6251802444458
    3. 'e' → logprob: -14.7501802444458
    4. '   ' → logprob: -16.375179290771484
    5. 'ea' → logprob: -17.750179290771484
    6. ' ' → logprob: -17.875179290771484
    7. 'earth' → logprob: -18.000179290771484
    8. '-east' → logprob: -18.000179290771484
    9. ')' → logprob: -18.375179290771484
    10. 'eat' → logprob: -18.625179290771484

Token 702: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.08909028768539429
    2. ',' → logprob: -2.464090347290039
    3. ',d' → logprob: -9.089090347290039
    4. ',),' → logprob: -11.339090347290039
    5. ')' → logprob: -11.839090347290039
    6. ' ,' → logprob: -12.089090347290039
    7. ' ),' → logprob: -12.214090347290039
    8. ',n' → logprob: -12.964090347290039
    9. 'd' → logprob: -13.089090347290039
    10. '},' → logprob: -13.589090347290039

Token 703: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002475777640938759
    2. ' d' → logprob: -6.002475738525391
    3. ')d' → logprob: -16.87747573852539
    4. ''d' → logprob: -18.00247573852539
    5. '   ' → logprob: -19.50247573852539
    6. '	d' → logprob: -20.37747573852539
    7. ')' → logprob: -20.62747573852539
    8. '                   ' → logprob: -20.75247573852539
    9. '           ' → logprob: -21.75247573852539
    10. '                           ' → logprob: -22.12747573852539

Token 704: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019329203059896827
    2. ')
' → logprob: -6.2519330978393555
    3. '                   ' → logprob: -12.876933097839355
    4. ')
' → logprob: -13.876933097839355
    5. ' )' → logprob: -15.626933097839355
    6. '                       ' → logprob: -16.00193214416504
    7. '                           ' → logprob: -16.12693214416504
    8. ')`' → logprob: -16.25193214416504
    9. ')

' → logprob: -16.75193214416504
    10. ')`
' → logprob: -16.87693214416504

Token 705: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.024149129167199135
    2. '                    
' → logprob: -4.524148941040039
    3. '<|end|>' → logprob: -6.024148941040039
    4. '                    ' → logprob: -6.149148941040039
    5. ' 
' → logprob: -6.399148941040039
    6. ' new' → logprob: -6.524148941040039
    7. '                        
' → logprob: -7.274148941040039
    8. 'new' → logprob: -7.524148941040039
    9. '                       ' → logprob: -7.649148941040039
    10. ' next' → logprob: -7.774148941040039

Token 706: ' bottom' (ID: 8725)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0034653563052415848
    2. 'n' → logprob: -7.003465175628662
    3. 'if' → logprob: -7.503465175628662
    4. 'nc' → logprob: -7.628465175628662
    5. 'cell' → logprob: -7.878465175628662
    6. 'nd' → logprob: -8.00346565246582
    7. ' new' → logprob: -8.25346565246582
    8. '                   ' → logprob: -8.50346565246582
    9. 'next' → logprob: -8.75346565246582
    10. 'cost' → logprob: -9.87846565246582

Token 707: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023251652717590332
    2. '=' → logprob: -3.773251533508301
    3. ',' → logprob: -12.5232515335083
    4. ' ' → logprob: -13.6482515335083
    5. ')' → logprob: -14.1482515335083
    6. '<|end|>' → logprob: -15.5232515335083
    7. ' ' → logprob: -16.148252487182617
    8. '```' → logprob: -16.648252487182617
    9. 'space' → logprob: -17.398252487182617
    10. ' =
' → logprob: -17.398252487182617

Token 708: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. 'seven' → logprob: -17.37504005432129
    4. '```' → logprob: -17.75004005432129
    5. '   ' → logprob: -17.87504005432129
    6. '6' → logprob: -18.12504005432129
    7. '`' → logprob: -18.25004005432129
    8. ' seven' → logprob: -18.50004005432129
    9. '(' → logprob: -18.62504005432129
    10. '    ' → logprob: -19.37504005432129

Token 709: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '```' → logprob: -17.625009536743164
    4. '(' → logprob: -17.875009536743164
    5. 'seven' → logprob: -18.000009536743164
    6. 'new' → logprob: -18.625009536743164
    7. '   ' → logprob: -19.000009536743164
    8. '`' → logprob: -19.000009536743164
    9. '6' → logprob: -19.750009536743164
    10. '14' → logprob: -19.750009536743164

Token 710: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5760402083396912
    2. ' -' → logprob: -0.8260402083396912
    3. '-new' → logprob: -9.951040267944336
    4. ' new' → logprob: -10.451040267944336
    5. 'new' → logprob: -10.826040267944336
    6. ' ' → logprob: -13.826040267944336
    7. '   ' → logprob: -14.076040267944336
    8. '```' → logprob: -14.451040267944336
    9. ')' → logprob: -14.826040267944336
    10. '[new' → logprob: -15.326040267944336

Token 711: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00038038729690015316
    2. ' new' → logprob: -7.875380516052246
    3. '```' → logprob: -16.12537956237793
    4. '	new' → logprob: -16.37537956237793
    5. '   ' → logprob: -17.00037956237793
    6. ')new' → logprob: -18.25037956237793
    7. ' ' → logprob: -18.37537956237793
    8. '                   ' → logprob: -18.62537956237793
    9. '_new' → logprob: -18.62537956237793
    10. '(new' → logprob: -19.37537956237793

Token 712: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.018156031146645546
    2. 'top' → logprob: -4.018156051635742
    3. '_s' → logprob: -12.393156051635742
    4. '_bottom' → logprob: -13.393156051635742
    5. ' top' → logprob: -15.518156051635742
    6. 'bottom' → logprob: -15.643156051635742
    7. '_' → logprob: -17.393156051635742
    8. '[top' → logprob: -17.643156051635742
    9. '	top' → logprob: -18.018156051635742
    10. '_TOP' → logprob: -18.268156051635742

Token 713: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.824966311454773
    2. '
' → logprob: -0.949966311454773
    3. '                    
' → logprob: -2.5749664306640625
    4. 'new' → logprob: -3.5749664306640625
    5. ' 
' → logprob: -3.6999664306640625
    6. '<|end|>' → logprob: -3.9499664306640625
    7. 'cost' → logprob: -5.1999664306640625
    8. ' new' → logprob: -5.5749664306640625
    9. ',' → logprob: -5.9499664306640625
    10. '					
' → logprob: -6.6999664306640625

Token 714: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2444765865802765
    2. 'new' → logprob: -2.619476556777954
    3. '```' → logprob: -3.244476556777954
    4. ' new' → logprob: -3.619476556777954
    5. ' if' → logprob: -3.619476556777954
    6. '                    
' → logprob: -4.494476795196533
    7. 'if' → logprob: -4.994476795196533
    8. '                    ' → logprob: -5.369476795196533
    9. ' 
' → logprob: -5.619476795196533
    10. 'next' → logprob: -5.744476795196533

Token 715: ' penalty' (ID: 34689)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.02047578990459442
    2. 'if' → logprob: -4.1454758644104
    3. 'n' → logprob: -6.1454758644104
    4. 'next' → logprob: -7.2704758644104
    5. 'nc' → logprob: -7.6454758644104
    6. '                   ' → logprob: -8.145475387573242
    7. 'nd' → logprob: -8.520475387573242
    8. 'cell' → logprob: -8.645475387573242
    9. 'move' → logprob: -8.770475387573242
    10. 'cost' → logprob: -9.520475387573242

Token 716: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06995688378810883
    2. '=' → logprob: -2.6949567794799805
    3. ' ' → logprob: -11.81995677947998
    4. ' +=' → logprob: -12.19495677947998
    5. '+' → logprob: -13.31995677947998
    6. ' +' → logprob: -13.44495677947998
    7. ',' → logprob: -14.19495677947998
    8. 'if' → logprob: -14.44495677947998
    9. '_' → logprob: -14.69495677947998
    10. ' if' → logprob: -15.06995677947998

Token 717: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.04537389054894447
    2. '0' → logprob: -4.170373916625977
    3. ' grid' → logprob: -4.170373916625977
    4. 'abs' → logprob: -5.295373916625977
    5. 'bottom' → logprob: -5.670373916625977
    6. '1' → logprob: -6.420373916625977
    7. 'pen' → logprob: -7.670373916625977
    8. 'max' → logprob: -7.795373916625977
    9. 'new' → logprob: -7.920373916625977
    10. '(grid' → logprob: -8.170373916625977

Token 718: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.015305552864447e-05
    2. 'nr' → logprob: -10.750060081481934
    3. 'new' → logprob: -11.750060081481934
    4. '[new' → logprob: -11.750060081481934
    5. '[
' → logprob: -12.500060081481934
    6. '[' → logprob: -12.625060081481934
    7. '```' → logprob: -12.875060081481934
    8. '

' → logprob: -13.125060081481934
    9. '
' → logprob: -13.750060081481934
    10. 'n' → logprob: -13.875060081481934

Token 719: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005684884265065193
    2. 'nr' → logprob: -5.630684852600098
    3. '[r' → logprob: -7.005684852600098
    4. '[' → logprob: -7.755684852600098
    5. '[n' → logprob: -8.130684852600098
    6. 'R' → logprob: -8.380684852600098
    7. '```' → logprob: -9.755684852600098
    8. '][' → logprob: -10.505684852600098
    9. '_nr' → logprob: -11.005684852600098
    10. ' nr' → logprob: -11.005684852600098

Token 720: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02443244680762291
    2. '[n' → logprob: -3.774432420730591
    3. '[' → logprob: -6.77443265914917
    4. ')[' → logprob: -11.274432182312012
    5. ']' → logprob: -12.024432182312012
    6. '"][' → logprob: -12.149432182312012
    7. 'n' → logprob: -12.899432182312012
    8. ' ][' → logprob: -12.899432182312012
    9. '(n' → logprob: -13.024432182312012
    10. ''][' → logprob: -13.149432182312012

Token 721: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -1.981667537620524e-06
    2. ' nc' → logprob: -14.000001907348633
    3. '_nc' → logprob: -14.125001907348633
    4. '.nc' → logprob: -15.125001907348633
    5. '   ' → logprob: -18.750001907348633
    6. '
' → logprob: -19.125001907348633
    7. 'Nc' → logprob: -19.750001907348633
    8. '```' → logprob: -19.875001907348633
    9. ',' → logprob: -20.500001907348633
    10. 'mc' → logprob: -20.500001907348633

Token 722: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6948139071464539
    2. ' if' → logprob: -1.3198139667510986
    3. ' +' → logprob: -2.1948139667510986
    4. '+' → logprob: -3.0698139667510986
    5. '*' → logprob: -3.1948139667510986
    6. ')' → logprob: -4.0698137283325195
    7. 'if' → logprob: -4.9448137283325195
    8. ']' → logprob: -5.8198137283325195
    9. ' -' → logprob: -6.0698137283325195
    10. '
' → logprob: -7.3198137283325195

Token 723: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08499343693256378
    2. '+' → logprob: -2.584993362426758
    3. ' if' → logprob: -5.959993362426758
    4. '                   ' → logprob: -6.709993362426758
    5. ' +
' → logprob: -7.334993362426758
    6. '
' → logprob: -7.584993362426758
    7. '+
' → logprob: -7.834993362426758
    8. ' *' → logprob: -7.959993362426758
    9. 'if' → logprob: -9.084993362426758
    10. '*' → logprob: -9.459993362426758

Token 724: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.5432489514350891
    2. ' bottom' → logprob: -0.9182489514350891
    3. ' new' → logprob: -4.418249130249023
    4. 'new' → logprob: -5.043249130249023
    5. '(bottom' → logprob: -7.668249130249023
    6. '7' → logprob: -7.793249130249023
    7. ' (' → logprob: -8.918249130249023
    8. '(' → logprob: -9.043249130249023
    9. ' penalty' → logprob: -9.793249130249023
    10. 'pen' → logprob: -9.918249130249023

Token 725: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.34103766083717346
    2. '
' → logprob: -2.3410377502441406
    3. '+' → logprob: -2.7160377502441406
    4. ')' → logprob: -3.3410377502441406
    5. ' +' → logprob: -3.3410377502441406
    6. '                    
' → logprob: -4.841037750244141
    7. '                       ' → logprob: -4.841037750244141
    8. '               ' → logprob: -4.966037750244141
    9. '<|end|>' → logprob: -4.966037750244141
    10. ' 
' → logprob: -5.216037750244141

Token 726: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05928109586238861
    2. '
' → logprob: -3.80928111076355
    3. '                    
' → logprob: -3.80928111076355
    4. '               ' → logprob: -5.434280872344971
    5. '                        
' → logprob: -6.059280872344971
    6. ')' → logprob: -6.684280872344971
    7. '                       ' → logprob: -7.059280872344971
    8. 'new' → logprob: -7.059280872344971
    9. '<|end|>' → logprob: -7.059280872344971
    10. ' 
' → logprob: -7.434280872344971

Token 727: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.008921576663851738
    2. ' new' → logprob: -4.7589216232299805
    3. 'next' → logprob: -8.38392162322998
    4. '                   ' → logprob: -10.00892162322998
    5. '               ' → logprob: -11.25892162322998
    6. 'if' → logprob: -11.88392162322998
    7. 'n' → logprob: -12.25892162322998
    8. '```' → logprob: -12.50892162322998
    9. ' next' → logprob: -12.88392162322998
    10. 'nd' → logprob: -13.88392162322998

Token 728: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -9.829823102336377e-05
    2. 'cost' → logprob: -9.37509822845459
    3. '_' → logprob: -11.25009822845459
    4. '_c' → logprob: -15.87509822845459
    5. ' _' → logprob: -16.750099182128906
    6. '_
' → logprob: -17.250099182128906
    7. '_pen' → logprob: -17.375099182128906
    8. ' cost' → logprob: -17.500099182128906
    9. '_cos' → logprob: -17.750099182128906
    10. '_dist' → logprob: -17.750099182128906

Token 729: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868711292743683
    2. '=' → logprob: -1.136871099472046
    3. '＝' → logprob: -16.136871337890625
    4. ' ' → logprob: -17.511871337890625
    5. ' =
' → logprob: -18.011871337890625
    6. '=
' → logprob: -18.136871337890625
    7. ',' → logprob: -19.761871337890625
    8. ')' → logprob: -20.136871337890625
    9. '.=' → logprob: -20.636871337890625
    10. '.' → logprob: -20.636871337890625

Token 730: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.061967913061380386
    2. ' cost' → logprob: -2.8119678497314453
    3. '(cost' → logprob: -15.936967849731445
    4. '   ' → logprob: -17.311967849731445
    5. ' ' → logprob: -17.686967849731445
    6. '_cost' → logprob: -18.061967849731445
    7. '10' → logprob: -18.061967849731445
    8. 'Cost' → logprob: -18.561967849731445
    9. '```' → logprob: -19.061967849731445
    10. 'code' → logprob: -19.561967849731445

Token 731: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12692904472351074
    2. '+' → logprob: -2.1269290447235107
    3. ' +
' → logprob: -14.75192928314209
    4. '＋' → logprob: -15.75192928314209
    5. '+
' → logprob: -15.75192928314209
    6. '+p' → logprob: -16.126928329467773
    7. ' ' → logprob: -16.626928329467773
    8. ' ' → logprob: -16.751928329467773
    9. '+c' → logprob: -17.251928329467773
    10. ' plus' → logprob: -17.251928329467773

Token 732: ' penalty' (ID: 34689)
  Prédit: 'pen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pen' → logprob: -0.0700765922665596
    2. ' penalty' → logprob: -2.6950767040252686
    3. '1' → logprob: -9.070076942443848
    4. 'penetr' → logprob: -11.070076942443848
    5. '_pen' → logprob: -12.570076942443848
    6. 'grid' → logprob: -13.570076942443848
    7. ' pen' → logprob: -13.945076942443848
    8. '```' → logprob: -14.070076942443848
    9. ' ' → logprob: -14.445076942443848
    10. 'Penalty' → logprob: -14.820076942443848

Token 733: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0017317025922238827
    2. ')' → logprob: -7.501731872558594
    3. '
' → logprob: -8.001731872558594
    4. '                    
' → logprob: -8.251731872558594
    5. '               ' → logprob: -8.626731872558594
    6. ',' → logprob: -8.876731872558594
    7. ' if' → logprob: -9.626731872558594
    8. '                       ' → logprob: -10.251731872558594
    9. '<|end|>' → logprob: -10.376731872558594
    10. 'if' → logprob: -10.876731872558594

Token 734: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005178258754312992
    2. '               ' → logprob: -6.630178451538086
    3. ')' → logprob: -7.130178451538086
    4. '                    
' → logprob: -7.130178451538086
    5. ' if' → logprob: -7.505178451538086
    6. 'if' → logprob: -7.755178451538086
    7. '<|end|>' → logprob: -8.005178451538086
    8. '```' → logprob: -8.130178451538086
    9. '                       ' → logprob: -9.255178451538086
    10. ',' → logprob: -9.380178451538086

Token 735: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' (adapté à ' state') → logprob: -0.21774373948574066
    2. 'if' → logprob: -1.9677437543869019
    3. 'key' → logprob: -2.9677436351776123
    4. ' state' → logprob: -6.342743873596191
    5. ' if' → logprob: -6.592743873596191
    6. ' key' → logprob: -7.092743873596191
    7. '                   ' → logprob: -7.592743873596191
    8. '_state' → logprob: -12.967743873596191
    9. '                       ' → logprob: -13.092743873596191
    10. 'next' → logprob: -13.342743873596191

Token 736: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16372373700141907
    2. '=' → logprob: -1.9137237071990967
    3. '_key' → logprob: -5.663723945617676
    4. 'key' → logprob: -11.163723945617676
    5. ')' → logprob: -12.788723945617676
    6. '_tuple' → logprob: -12.913723945617676
    7. ' key' → logprob: -13.538723945617676
    8. '_' → logprob: -13.788723945617676
    9. '   ' → logprob: -14.788723945617676
    10. 's' → logprob: -14.913723945617676

Token 737: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004079112783074379
    2. ' (' → logprob: -5.504079341888428
    3. '   ' → logprob: -15.25407886505127
    4. '(' → logprob: -15.50407886505127
    5. '(nx' → logprob: -16.254079818725586
    6. '(nb' → logprob: -16.754079818725586
    7. '(nd' → logprob: -17.004079818725586
    8. '(new' → logprob: -17.254079818725586
    9. '((' → logprob: -17.254079818725586
    10. '(N' → logprob: -17.504079818725586

Token 738: 'nr' (ID: 33357)
  Prédit: 'nr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -2.1008713702030946e-06
    2. ' nr' → logprob: -13.500001907348633
    3. '(n' → logprob: -14.250001907348633
    4. '   ' → logprob: -18.000001907348633
    5. 'n' → logprob: -18.625001907348633
    6. '_nr' → logprob: -18.750001907348633
    7. '(' → logprob: -19.000001907348633
    8. '
' → logprob: -19.000001907348633
    9. 'nor' → logprob: -20.250001907348633
    10. ' (' → logprob: -20.500001907348633

Token 739: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.482821431243792e-05
    2. ',n' → logprob: -9.87508487701416
    3. ',c' → logprob: -11.00008487701416
    4. ' ,' → logprob: -11.75008487701416
    5. ',
' → logprob: -12.87508487701416
    6. '‌,' → logprob: -13.37508487701416
    7. '',' → logprob: -13.87508487701416
    8. '`,' → logprob: -14.00008487701416
    9. '<|end|>' → logprob: -14.12508487701416
    10. ',num' → logprob: -15.37508487701416

Token 740: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.00010652327910065651
    2. ' nc' → logprob: -9.250106811523438
    3. '_nc' → logprob: -11.500106811523438
    4. '.nc' → logprob: -15.375106811523438
    5. 'Nc' → logprob: -17.000106811523438
    6. 'n' → logprob: -19.375106811523438
    7. '
' → logprob: -19.875106811523438
    8. 'NC' → logprob: -20.125106811523438
    9. '```' → logprob: -20.250106811523438
    10. 'mc' → logprob: -20.750106811523438

Token 741: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021307668066583574
    2. ',new' → logprob: -8.500212669372559
    3. ' ,' → logprob: -12.375212669372559
    4. 'new' → logprob: -13.250212669372559
    5. ',
' → logprob: -13.750212669372559
    6. '`,' → logprob: -14.000212669372559
    7. '',' → logprob: -15.000212669372559
    8. ',n' → logprob: -15.250212669372559
    9. ',state' → logprob: -15.625212669372559
    10. ')' → logprob: -15.750212669372559

Token 742: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -3.547789674485102e-05
    2. ' new' → logprob: -10.250035285949707
    3. '```' → logprob: -18.500036239624023
    4. '   ' → logprob: -20.250036239624023
    5. '	new' → logprob: -20.750036239624023
    6. 'New' → logprob: -21.500036239624023
    7. ')new' → logprob: -21.500036239624023
    8. ' ' → logprob: -22.125036239624023
    9. '``' → logprob: -22.375036239624023
    10. '_new' → logprob: -22.375036239624023

Token 743: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.00408053956925869
    2. 'top' → logprob: -5.504080772399902
    3. '_s' → logprob: -13.879080772399902
    4. '(top' → logprob: -15.004080772399902
    5. ' top' → logprob: -15.129080772399902
    6. '_cost' → logprob: -15.379080772399902
    7. '[top' → logprob: -15.754080772399902
    8. '_new' → logprob: -16.004079818725586
    9. '	top' → logprob: -17.004079818725586
    10. '_t' → logprob: -17.129079818725586

Token 744: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007212492637336254
    2. ',new' → logprob: -7.250721454620361
    3. ' ,' → logprob: -12.000720977783203
    4. 'new' → logprob: -12.250720977783203
    5. ',
' → logprob: -15.875720977783203
    6. ' new' → logprob: -16.125720977783203
    7. ',n' → logprob: -16.125720977783203
    8. ')' → logprob: -19.500720977783203
    9. '```' → logprob: -19.500720977783203
    10. '_new' → logprob: -20.125720977783203

Token 745: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0006268949946388602
    2. ' new' → logprob: -7.375627040863037
    3. '   ' → logprob: -16.250627517700195
    4. '	new' → logprob: -17.250627517700195
    5. '_new' → logprob: -17.375627517700195
    6. ' ' → logprob: -17.375627517700195
    7. 'New' → logprob: -17.500627517700195
    8. '```' → logprob: -17.875627517700195
    9. 'n' → logprob: -18.125627517700195
    10. '    ' → logprob: -18.625627517700195

Token 746: '_s' (ID: 1278)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.04991984739899635
    2. '_s' → logprob: -3.049919843673706
    3. 's' → logprob: -7.174920082092285
    4. 'new' → logprob: -7.549920082092285
    5. ' south' → logprob: -11.049920082092285
    6. 'north' → logprob: -11.924920082092285
    7. 'sou' → logprob: -12.549920082092285
    8. 'east' → logprob: -12.549920082092285
    9. '_new' → logprob: -12.799920082092285
    10. '```' → logprob: -13.049920082092285

Token 747: 'outh' (ID: 4656)
  Prédit: 'outh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outh' → logprob: -0.0019862097688019276
    2. 'south' → logprob: -6.376986026763916
    3. 'out' → logprob: -8.626986503601074
    4. 'orth' → logprob: -9.751986503601074
    5. 'uth' → logprob: -11.501986503601074
    6. '_' → logprob: -11.876986503601074
    7. 'oth' → logprob: -12.001986503601074
    8. 'ou' → logprob: -12.626986503601074
    9. '```' → logprob: -12.876986503601074
    10. 'north' → logprob: -13.126986503601074

Token 748: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001512004528194666
    2. ',new' → logprob: -6.501512050628662
    3. ' ,' → logprob: -11.751511573791504
    4. 'new' → logprob: -13.376511573791504
    5. ' new' → logprob: -16.00151252746582
    6. ',
' → logprob: -17.00151252746582
    7. ',n' → logprob: -19.12651252746582
    8. '```' → logprob: -19.12651252746582
    9. '`,' → logprob: -19.75151252746582
    10. ')' → logprob: -19.75151252746582

Token 749: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0004306692280806601
    2. ' new' → logprob: -7.750430583953857
    3. 'New' → logprob: -20.125431060791016
    4. '_new' → logprob: -20.500431060791016
    5. ')new' → logprob: -21.500431060791016
    6. '	new' → logprob: -21.625431060791016
    7. '$new' → logprob: -22.000431060791016
    8. 'newline' → logprob: -22.625431060791016
    9. '[new' → logprob: -22.750431060791016
    10. ' ' → logprob: -23.000431060791016

Token 750: '_e' (ID: 4618)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.00039385363925248384
    2. 'e' → logprob: -8.125393867492676
    3. '_e' → logprob: -9.625393867492676
    4. 'ast' → logprob: -10.375393867492676
    5. 'East' → logprob: -15.500393867492676
    6. ' east' → logprob: -16.00039291381836
    7. 'est' → logprob: -16.12539291381836
    8. '-east' → logprob: -17.00039291381836
    9. 'west' → logprob: -17.37539291381836
    10. 'ea' → logprob: -17.50039291381836

Token 751: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.0013790446100756526
    2. 'st' → logprob: -6.626379013061523
    3. '7' → logprob: -10.501379013061523
    4. 'east' → logprob: -11.251379013061523
    5. 'asts' → logprob: -12.376379013061523
    6. 'as' → logprob: -12.876379013061523
    7. 'a' → logprob: -13.001379013061523
    8. '6' → logprob: -14.751379013061523
    9. 's' → logprob: -15.001379013061523
    10. 't' → logprob: -15.251379013061523

Token 752: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5760120749473572
    2. ')' → logprob: -0.8260120749473572
    3. ')
' → logprob: -9.951011657714844
    4. '                   ' → logprob: -10.951011657714844
    5. ' )
' → logprob: -13.451011657714844
    6. ')

' → logprob: -13.451011657714844
    7. ')`
' → logprob: -13.451011657714844
    8. '   ' → logprob: -14.451011657714844
    9. ')`' → logprob: -14.451011657714844
    10. ' )' → logprob: -14.826011657714844

Token 753: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.015549411997199059
    2. '```' → logprob: -4.640549182891846
    3. ' if' → logprob: -6.515549182891846
    4. 'if' → logprob: -6.640549182891846
    5. '
' → logprob: -7.015549182891846
    6. '               ' → logprob: -7.265549182891846
    7. '<|end|>' → logprob: -7.515549182891846
    8. '                    
' → logprob: -8.265549659729004
    9. '           ' → logprob: -9.015549659729004
    10. '       ' → logprob: -9.515549659729004

Token 754: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4755406975746155
    2. 'if' (adapté à ' if') → logprob: -1.1005406379699707
    3. ' if' → logprob: -3.1005406379699707
    4. '               ' → logprob: -8.350541114807129
    5. '           ' → logprob: -9.100541114807129
    6. '       ' → logprob: -9.600541114807129
    7. '```' → logprob: -9.600541114807129
    8. '                    ' → logprob: -9.725541114807129
    9. '<|end|>' → logprob: -9.725541114807129
    10. '   ' → logprob: -10.475541114807129

Token 755: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.5821911692619324
    2. ' state' → logprob: -1.5821912288665771
    3. 'dist' → logprob: -2.082191228866577
    4. 'state' → logprob: -2.207191228866577
    5. ' new' → logprob: -7.582190990447998
    6. 'new' → logprob: -8.707191467285156
    7. '   ' → logprob: -8.707191467285156
    8. '(dist' → logprob: -9.582191467285156
    9. '(state' → logprob: -9.957191467285156
    10. '                   ' → logprob: -9.957191467285156

Token 756: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0008546437602490187
    2. '[state' → logprob: -7.1258544921875
    3. '.setdefault' → logprob: -10.2508544921875
    4. 'get' → logprob: -12.1258544921875
    5. '.' → logprob: -12.3758544921875
    6. ' .' → logprob: -12.7508544921875
    7. '```' → logprob: -14.1258544921875
    8. 'state' → logprob: -14.2508544921875
    9. '[' → logprob: -14.7508544921875
    10. '.state' → logprob: -15.8758544921875

Token 757: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -7.896309739408025e-07
    2. ' (' → logprob: -14.875000953674316
    3. 'state' → logprob: -15.000000953674316
    4. '[state' → logprob: -18.0
    5. ',state' → logprob: -18.125
    6. '((' → logprob: -19.25
    7. '(states' → logprob: -19.5
    8. '(stat' → logprob: -19.875
    9. '(
' → logprob: -20.5
    10. '(' → logprob: -20.75

Token 758: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033605366945266724
    2. ' is' → logprob: -3.6586053371429443
    3. ')' → logprob: -5.908605575561523
    4. '(state' → logprob: -6.783605575561523
    5. ',state' → logprob: -6.783605575561523
    6. '>' → logprob: -7.408605575561523
    7. ',None' → logprob: -7.908605575561523
    8. ' ,' → logprob: -8.408605575561523
    9. '```' → logprob: -8.408605575561523
    10. 'is' → logprob: -8.658605575561523

Token 759: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.8908587662735954e-05
    2. ' ' → logprob: -11.375019073486328
    3. 'float' → logprob: -12.875019073486328
    4. '1' → logprob: -13.000019073486328
    5. '100' → logprob: -13.125019073486328
    6. '   ' → logprob: -15.375019073486328
    7. '999' → logprob: -16.000019073486328
    8. '```' → logprob: -17.125019073486328
    9. ')' → logprob: -17.875019073486328
    10. '>' → logprob: -18.125019073486328

Token 760: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.1041145626222715e-05
    2. '1' → logprob: -11.750011444091797
    3. 'float' → logprob: -13.625011444091797
    4. '100' → logprob: -14.000011444091797
    5. 'new' → logprob: -15.000011444091797
    6. ' ' → logprob: -15.125011444091797
    7. '   ' → logprob: -16.000011444091797
    8. '999' → logprob: -16.125011444091797
    9. '```' → logprob: -16.125011444091797
    10. '(' → logprob: -17.875011444091797

Token 761: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.1002415120601654
    2. '**' → logprob: -2.3502414226531982
    3. '```' → logprob: -11.100241661071777
    4. '^' → logprob: -11.475241661071777
    5. '\xe2\x81' → logprob: -12.350241661071777
    6. '*' → logprob: -12.850241661071777
    7. '``' → logprob: -14.225241661071777
    8. '999' → logprob: -14.350241661071777
    9. '+' → logprob: -15.100241661071777
    10. ' ' → logprob: -16.22524070739746

Token 762: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '8' → logprob: -16.125
    3. '```' → logprob: -16.875
    4. '7' → logprob: -17.25
    5. '6' → logprob: -17.375
    6. '10' → logprob: -18.0
    7. '999' → logprob: -18.3125
    8. '99' → logprob: -19.1875
    9. '09' → logprob: -19.375
    10. '``' → logprob: -19.5625

Token 763: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005536287208087742
    2. ')>' → logprob: -7.750553607940674
    3. '>' → logprob: -9.625554084777832
    4. ' )' → logprob: -9.875554084777832
    5. ' >' → logprob: -12.500554084777832
    6. '>)' → logprob: -14.500554084777832
    7. '`)' → logprob: -14.500554084777832
    8. '）' → logprob: -15.125554084777832
    9. ']' → logprob: -16.000553131103516
    10. '   ' → logprob: -16.125553131103516

Token 764: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.002813313389196992
    2. ' >' → logprob: -5.877813339233398
    3. '   ' → logprob: -12.252813339233398
    4. '```' → logprob: -13.502813339233398
    5. '>
' → logprob: -14.002813339233398
    6. ' ' → logprob: -15.127813339233398
    7. 'new' → logprob: -15.627813339233398
    8. ')>' → logprob: -15.752813339233398
    9. '()>' → logprob: -15.877813339233398
    10. '  ' → logprob: -16.0028133392334

Token 765: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.01416350994259119
    2. ' new' → logprob: -4.264163494110107
    3. 'New' → logprob: -17.889163970947266
    4. '                   ' → logprob: -18.139163970947266
    5. '	new' → logprob: -18.389163970947266
    6. '_new' → logprob: -18.514163970947266
    7. '[new' → logprob: -18.764163970947266
    8. '```' → logprob: -19.389163970947266
    9. '(new' → logprob: -19.514163970947266
    10. '$new' → logprob: -19.889163970947266

Token 766: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -5.438573680294212e-06
    2. 'cost' → logprob: -12.750005722045898
    3. '_new' → logprob: -13.000005722045898
    4. 'Cost' → logprob: -17.5000057220459
    5. 'new' → logprob: -17.6250057220459
    6. '_code' → logprob: -17.7500057220459
    7. '```' → logprob: -18.0000057220459
    8. '_c' → logprob: -18.2500057220459
    9. ' cost' → logprob: -18.5000057220459
    10. '_COST' → logprob: -18.8750057220459

Token 767: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07572691142559052
    2. ':
' → logprob: -2.7007269859313965
    3. '                       ' → logprob: -6.3257269859313965
    4. '=' → logprob: -6.3257269859313965
    5. '                   ' → logprob: -6.9507269859313965
    6. '):
' → logprob: -7.8257269859313965
    7. '<|end|>' → logprob: -8.575726509094238
    8. '):' → logprob: -8.700726509094238
    9. ')' → logprob: -9.325726509094238
    10. ' :' → logprob: -9.825726509094238

Token 768: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.005016597919166088
    2. '                   ' → logprob: -5.755016803741455
    3. '                        
' → logprob: -7.630016803741455
    4. '```' → logprob: -7.630016803741455
    5. '                           ' → logprob: -8.130016326904297
    6. '               ' → logprob: -9.255016326904297
    7. '       ' → logprob: -9.380016326904297
    8. ' heap' → logprob: -9.505016326904297
    9. '                    ' → logprob: -9.880016326904297
    10. 'heap' → logprob: -10.255016326904297

Token 769: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.3204304575920105
    2. 'dist' (adapté à ' dist') → logprob: -1.6954305171966553
    3. '                       ' → logprob: -2.4454305171966553
    4. '```' → logprob: -5.695430278778076
    5. '                           ' → logprob: -8.320430755615234
    6. 'heap' → logprob: -9.320430755615234
    7. ' heap' → logprob: -9.445430755615234
    8. '                   ' → logprob: -9.570430755615234
    9. '               ' → logprob: -10.445430755615234
    10. '	dist' → logprob: -10.570430755615234

Token 770: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.125
    3. '[token' → logprob: -15.875
    4. 'state' → logprob: -18.375
    5. '```' → logprob: -18.375
    6. '(state' → logprob: -19.25
    7. '[user' → logprob: -20.25
    8. '[action' → logprob: -20.375
    9. ',state' → logprob: -20.5
    10. '[type' → logprob: -20.5

Token 771: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143702626228333
    2. ' =' → logprob: -1.701436996459961
    3. ']' → logprob: -11.201436996459961
    4. ']=' → logprob: -11.701436996459961
    5. ')' → logprob: -14.326436996459961
    6. '=new' → logprob: -14.451436996459961
    7. ')=' → logprob: -14.951436996459961
    8. '<|end|>' → logprob: -15.951436996459961
    9. '=
' → logprob: -16.82643699645996
    10. '＝' → logprob: -17.20143699645996

Token 772: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0619683600962162
    2. ' =' → logprob: -2.8119683265686035
    3. '=new' → logprob: -15.811968803405762
    4. ']=' → logprob: -15.811968803405762
    5. '=
' → logprob: -15.811968803405762
    6. ')=' → logprob: -16.186967849731445
    7. '＝' → logprob: -16.436967849731445
    8. ')' → logprob: -16.686967849731445
    9. '=

' → logprob: -17.311967849731445
    10. ']' → logprob: -17.311967849731445

Token 773: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0024756586644798517
    2. ' new' → logprob: -6.002475738525391
    3. '_new' → logprob: -21.12747573852539
    4. 'New' → logprob: -21.75247573852539
    5. '	new' → logprob: -22.25247573852539
    6. '$new' → logprob: -22.50247573852539
    7. '[new' → logprob: -23.00247573852539
    8. '新' → logprob: -23.00247573852539
    9. '```' → logprob: -23.87747573852539
    10. '(new' → logprob: -24.50247573852539

Token 774: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0009117019944824278
    2. 'cost' → logprob: -7.000911712646484
    3. 'Cost' → logprob: -16.125911712646484
    4. ' cost' → logprob: -16.625911712646484
    5. '-cost' → logprob: -18.750911712646484
    6. '_COST' → logprob: -19.250911712646484
    7. '_code' → logprob: -19.500911712646484
    8. 'new' → logprob: -20.625911712646484
    9. '_c' → logprob: -21.250911712646484
    10. 'ost' → logprob: -21.625911712646484

Token 775: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.08004114031791687
    2. '```' → logprob: -2.7050411701202393
    3. ',' → logprob: -5.33004093170166
    4. '                           ' → logprob: -6.45504093170166
    5. '``' → logprob: -6.95504093170166
    6. '                   ' → logprob: -7.45504093170166
    7. '               ' → logprob: -7.95504093170166
    8. '                        
' → logprob: -8.20504093170166
    9. 'heap' → logprob: -8.20504093170166
    10. '           ' → logprob: -8.45504093170166

Token 776: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7192042469978333
    2. '```' → logprob: -0.7192042469978333
    3. '                        
' → logprob: -4.219204425811768
    4. '``' → logprob: -5.594204425811768
    5. 'heap' → logprob: -6.344204425811768
    6. '<|end|>' → logprob: -6.844204425811768
    7. '                           ' → logprob: -6.969204425811768
    8. '                        ' → logprob: -7.219204425811768
    9. ',' → logprob: -7.469204425811768
    10. ' heap' → logprob: -7.594204425811768

Token 777: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.011133065447211266
    2. ' heap' → logprob: -4.511133193969727
    3. '                       ' → logprob: -9.761133193969727
    4. 'he' → logprob: -10.761133193969727
    5. 'pq' → logprob: -13.136133193969727
    6. '```' → logprob: -13.261133193969727
    7. '                           ' → logprob: -13.886133193969727
    8. '(heap' → logprob: -14.261133193969727
    9. 'push' → logprob: -14.761133193969727
    10. '                   ' → logprob: -14.886133193969727

Token 778: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.125000953674316
    3. 'p' → logprob: -16.0
    4. 'push' → logprob: -16.5
    5. '[' → logprob: -17.375
    6. 'app' → logprob: -17.375
    7. 'qx' → logprob: -17.75
    8. 'he' → logprob: -18.25
    9. '.push' → logprob: -18.25
    10. 'queue' → logprob: -18.25

Token 779: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -2.8206473871250637e-05
    2. 'he' → logprob: -10.500028610229492
    3. '.heap' → logprob: -14.750028610229492
    4. '.push' → logprob: -16.375028610229492
    5. '.' → logprob: -16.500028610229492
    6. '```' → logprob: -17.500028610229492
    7. 'push' → logprob: -18.000028610229492
    8. '.p' → logprob: -18.375028610229492
    9. ' he' → logprob: -18.500028610229492
    10. 'q' → logprob: -18.875028610229492

Token 780: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0022205570712685585
    2. 'pp' → logprob: -6.502220630645752
    3. 'push' → logprob: -7.252220630645752
    4. 'ush' → logprob: -11.752220153808594
    5. 'p' → logprob: -14.377220153808594
    6. '```' → logprob: -14.752220153808594
    7. 'appen' → logprob: -15.502220153808594
    8. 'append' → logprob: -16.502220153808594
    9. 'he' → logprob: -16.502220153808594
    10. 'ap' → logprob: -17.752220153808594

Token 781: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -2.8087270038668066e-05
    2. 'push' → logprob: -10.500027656555176
    3. 'sh' → logprob: -15.250027656555176
    4. 'op' → logprob: -15.625027656555176
    5. 'pp' → logprob: -17.125028610229492
    6. 'p' → logprob: -17.375028610229492
    7. 'app' → logprob: -18.000028610229492
    8. '```' → logprob: -18.250028610229492
    9. '.push' → logprob: -18.875028610229492
    10. 'Push' → logprob: -19.500028610229492

Token 782: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -8.895480277715251e-06
    2. '(' → logprob: -11.875008583068848
    3. '(q' → logprob: -13.500008583068848
    4. '(
' → logprob: -15.500008583068848
    5. ' (' → logprob: -15.750008583068848
    6. 'pq' → logprob: -16.375009536743164
    7. ' pq' → logprob: -18.375009536743164
    8. '```' → logprob: -19.250009536743164
    9. ',p' → logprob: -19.875009536743164
    10. '   ' → logprob: -20.125009536743164

Token 783: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2948405128554441e-05
    2. '(p' → logprob: -11.75001335144043
    3. '(q' → logprob: -12.62501335144043
    4. 'pq' → logprob: -13.50001335144043
    5. 'vq' → logprob: -16.87501335144043
    6. '	q' → logprob: -17.12501335144043
    7. 'p' → logprob: -17.12501335144043
    8. 'Q' → logprob: -17.25001335144043
    9. 'aq' → logprob: -18.00001335144043
    10. '[q' → logprob: -18.12501335144043

Token 784: ',' (ID: 11)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.06110389530658722
    2. ',' → logprob: -2.9361038208007812
    3. '(' → logprob: -5.686103820800781
    4. ',p' → logprob: -6.811103820800781
    5. ' (' → logprob: -7.436103820800781
    6. ',(' → logprob: -7.686103820800781
    7. ')' → logprob: -7.686103820800781
    8. ')(' → logprob: -9.686103820800781
    9. '```' → logprob: -10.186103820800781
    10. ' ,' → logprob: -10.936103820800781

Token 785: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.005243598949164152
    2. ' (' → logprob: -5.25524377822876
    3. '(' → logprob: -11.755243301391602
    4. '(cost' → logprob: -14.005243301391602
    5. '(next' → logprob: -14.005243301391602
    6. '(New' → logprob: -15.380243301391602
    7. '[new' → logprob: -17.0052433013916
    8. '   ' → logprob: -17.1302433013916
    9. '(current' → logprob: -17.6302433013916
    10. '(n' → logprob: -18.0052433013916

Token 786: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0001234428636962548
    2. ' new' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.000123977661133
    4. ')new' → logprob: -18.875123977661133
    5. '(new' → logprob: -19.000123977661133
    6. '	new' → logprob: -19.500123977661133
    7. '_new' → logprob: -20.000123977661133
    8. '```' → logprob: -20.500123977661133
    9. '                   ' → logprob: -20.750123977661133
    10. '[new' → logprob: -21.250123977661133

Token 787: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -2.7610454708337784e-05
    2. 'cost' → logprob: -10.500027656555176
    3. 'Cost' → logprob: -17.25002670288086
    4. '_token' → logprob: -17.87502670288086
    5. '_COST' → logprob: -18.12502670288086
    6. '_code' → logprob: -18.50002670288086
    7. '_' → logprob: -18.62502670288086
    8. ' cost' → logprob: -19.50002670288086
    9. 'new' → logprob: -19.62502670288086
    10. '_new' → logprob: -20.12502670288086

Token 788: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.141186450899113e-05
    2. ',n' → logprob: -11.375020980834961
    3. ',state' → logprob: -12.250020980834961
    4. ' ,' → logprob: -12.750020980834961
    5. '<|end|>' → logprob: -14.000020980834961
    6. ',
' → logprob: -15.000020980834961
    7. '`,' → logprob: -15.000020980834961
    8. '```' → logprob: -15.500020980834961
    9. '‌,' → logprob: -15.500020980834961
    10. ')' → logprob: -17.00002098083496

Token 789: ' nr' (ID: 24055)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -0.01104935072362423
    2. ' nr' → logprob: -4.511049270629883
    3. '_nr' → logprob: -13.761049270629883
    4. '.nr' → logprob: -15.011049270629883
    5. '
' → logprob: -17.761049270629883
    6. 'n' → logprob: -17.761049270629883
    7. '```' → logprob: -17.886049270629883
    8. ' ' → logprob: -18.636049270629883
    9. '
' → logprob: -18.761049270629883
    10. 'NR' → logprob: -18.761049270629883

Token 790: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011248346709180623
    2. ',n' → logprob: -9.250112533569336
    3. ' ,' → logprob: -11.250112533569336
    4. '<|end|>' → logprob: -13.375112533569336
    5. ',c' → logprob: -14.125112533569336
    6. '_nc' → logprob: -14.375112533569336
    7. ',
' → logprob: -16.000112533569336
    8. 'nc' → logprob: -16.125112533569336
    9. '_,' → logprob: -17.750112533569336
    10. '```' → logprob: -17.875112533569336

Token 791: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -3.166338137816638e-05
    2. ' nc' → logprob: -10.500031471252441
    3. '_nc' → logprob: -12.625031471252441
    4. '.nc' → logprob: -14.125031471252441
    5. 'n' → logprob: -16.875032424926758
    6. 'Nc' → logprob: -18.375032424926758
    7. 'NC' → logprob: -20.375032424926758
    8. '-n' → logprob: -20.875032424926758
    9. ' ' → logprob: -21.625032424926758
    10. 'nr' → logprob: -21.750032424926758

Token 792: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010640407708706334
    2. ',new' → logprob: -9.250106811523438
    3. ' ,' → logprob: -11.625106811523438
    4. 'new' → logprob: -13.625106811523438
    5. ' new' → logprob: -16.000106811523438
    6. ',n' → logprob: -17.000106811523438
    7. ',
' → logprob: -18.125106811523438
    8. 'n' → logprob: -18.500106811523438
    9. 's' → logprob: -20.250106811523438
    10. '),' → logprob: -20.500106811523438

Token 793: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0004882152716163546
    2. ' new' → logprob: -7.62548828125
    3. '   ' → logprob: -16.75048828125
    4. '```' → logprob: -17.12548828125
    5. ' ' → logprob: -17.37548828125
    6. ')new' → logprob: -18.25048828125
    7. '	new' → logprob: -18.50048828125
    8. '  ' → logprob: -19.25048828125
    9. '    ' → logprob: -19.75048828125
    10. 'state' → logprob: -19.87548828125

Token 794: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.1038123071193695
    2. '_s' → logprob: -2.3538122177124023
    3. 'top' → logprob: -5.853812217712402
    4. '_bottom' → logprob: -7.478812217712402
    5. 's' → logprob: -8.978812217712402
    6. 'bottom' → logprob: -10.353812217712402
    7. 'state' → logprob: -12.603812217712402
    8. '_state' → logprob: -13.603812217712402
    9. '_new' → logprob: -13.603812217712402
    10. 'new' → logprob: -13.978812217712402

Token 795: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005031120381318033
    2. ',new' → logprob: -7.625503063201904
    3. ' ,' → logprob: -11.750503540039062
    4. 'new' → logprob: -11.875503540039062
    5. ' new' → logprob: -16.250503540039062
    6. '`,' → logprob: -16.500503540039062
    7. ',n' → logprob: -16.750503540039062
    8. '_new' → logprob: -16.875503540039062
    9. ',
' → logprob: -17.250503540039062
    10. '_,' → logprob: -17.250503540039062

Token 796: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00012403888104017824
    2. ' new' → logprob: -9.000123977661133
    3. 'news' → logprob: -14.625123977661133
    4. '   ' → logprob: -17.000123977661133
    5. '_new' → logprob: -17.375123977661133
    6. 'New' → logprob: -17.875123977661133
    7. '	new' → logprob: -18.000123977661133
    8. ' ' → logprob: -18.125123977661133
    9. 'n' → logprob: -18.750123977661133
    10. ')new' → logprob: -19.125123977661133

Token 797: '_s' (ID: 1278)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.11938270181417465
    2. '_s' → logprob: -2.244382619857788
    3. 'east' → logprob: -5.744382858276367
    4. 's' → logprob: -5.994382858276367
    5. 'new' → logprob: -7.119382858276367
    6. '_e' → logprob: -11.619382858276367
    7. ' south' → logprob: -11.994382858276367
    8. 'north' → logprob: -12.119382858276367
    9. 'e' → logprob: -12.119382858276367
    10. '_new' → logprob: -12.494382858276367

Token 798: 'outh' (ID: 4656)
  Prédit: 'ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.21444901823997498
    2. 'outh' → logprob: -1.7144490480422974
    3. 'east' → logprob: -4.839448928833008
    4. 'out' → logprob: -6.339448928833008
    5. 'orth' → logprob: -7.089448928833008
    6. 'ath' → logprob: -7.589448928833008
    7. 'w' → logprob: -7.714448928833008
    8. 'a' → logprob: -7.964448928833008
    9. 'south' → logprob: -8.089448928833008
    10. 'new' → logprob: -8.089448928833008

Token 799: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009540736675262451
    2. 'new' → logprob: -5.259540557861328
    3. ',new' → logprob: -5.509540557861328
    4. ' new' → logprob: -8.384540557861328
    5. ' ,' → logprob: -10.759540557861328
    6. ',n' → logprob: -18.134540557861328
    7. '_new' → logprob: -18.134540557861328
    8. ',
' → logprob: -18.259540557861328
    9. 'New' → logprob: -18.259540557861328
    10. '[new' → logprob: -18.384540557861328

Token 800: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00010914575977949426
    2. ' new' → logprob: -9.12510871887207
    3. 'New' → logprob: -16.75010871887207
    4. '	new' → logprob: -17.37510871887207
    5. '   ' → logprob: -17.75010871887207
    6. '_new' → logprob: -18.00010871887207
    7. ')new' → logprob: -18.25010871887207
    8. '[new' → logprob: -18.37510871887207
    9. '```' → logprob: -18.50010871887207
    10. ' ' → logprob: -18.50010871887207

Token 801: '_e' (ID: 4618)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.018982168287038803
    2. 'new' → logprob: -4.26898193359375
    3. '_e' → logprob: -6.14398193359375
    4. 'e' → logprob: -6.39398193359375
    5. 'ast' → logprob: -7.14398193359375
    6. 'est' → logprob: -9.89398193359375
    7. 's' → logprob: -10.26898193359375
    8. 'East' → logprob: -10.51898193359375
    9. '_new' → logprob: -11.01898193359375
    10. 'ea' → logprob: -11.64398193359375

Token 802: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.0074019343592226505
    2. 'st' → logprob: -5.007401943206787
    3. 'asts' → logprob: -8.382401466369629
    4. 'q' → logprob: -8.632401466369629
    5. 'c' → logprob: -9.882401466369629
    6. 't' → logprob: -10.132401466369629
    7. 'th' → logprob: -10.382401466369629
    8. 'e' → logprob: -10.757401466369629
    9. 'ac' → logprob: -11.132401466369629
    10. '_ast' → logprob: -11.257401466369629

Token 803: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008280907059088349
    2. ')' → logprob: -7.125828266143799
    3. '))
' → logprob: -11.00082778930664
    4. ')))' → logprob: -12.12582778930664
    5. ' ))' → logprob: -13.62582778930664
    6. ',' → logprob: -16.00082778930664
    7. '   ' → logprob: -16.25082778930664
    8. '))

' → logprob: -17.37582778930664
    9. '       ' → logprob: -17.87582778930664
    10. '))
' → logprob: -18.12582778930664

Token 804: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 805: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2521950900554657
    2. ' __' → logprob: -1.502195119857788
    3. ''' → logprob: -9.002195358276367
    4. 'if' → logprob: -10.502195358276367
    5. ' ' → logprob: -10.502195358276367
    6. 'name' → logprob: -10.752195358276367
    7. '`' → logprob: -11.252195358276367
    8. '_' → logprob: -11.377195358276367
    9. '"' → logprob: -11.502195358276367
    10. '_name' → logprob: -12.127195358276367

Token 806: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0028168857097625732
    2. '==' → logprob: -6.752816677093506
    3. 'if' → logprob: -7.127816677093506
    4. ' ==' → logprob: -7.377816677093506
    5. 'name' → logprob: -9.502817153930664
    6. ' __' → logprob: -9.752817153930664
    7. '.__' → logprob: -11.002817153930664
    8. '__[' → logprob: -11.377817153930664
    9. '__.__' → logprob: -11.502817153930664
    10. '[' → logprob: -11.752817153930664

Token 807: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.0445127372804563e-05
    2. '__.__' → logprob: -11.62501049041748
    3. '==' → logprob: -13.87501049041748
    4. '__.' → logprob: -15.75001049041748
    5. '```' → logprob: -16.000009536743164
    6. '____' → logprob: -16.500009536743164
    7. '__('' → logprob: -17.250009536743164
    8. '___' → logprob: -17.250009536743164
    9. '__
' → logprob: -18.000009536743164
    10. ' ==' → logprob: -18.875009536743164

Token 808: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.024984991177916527
    2. '==' → logprob: -3.7749850749969482
    3. ' ==' → logprob: -6.399984836578369
    4. '=="' → logprob: -9.899985313415527
    5. '__.__' → logprob: -11.024985313415527
    6. '=='' → logprob: -12.149985313415527
    7. '```' → logprob: -13.774985313415527
    8. '===' → logprob: -13.899985313415527
    9. '__.' → logprob: -14.649985313415527
    10. '=' → logprob: -14.899985313415527

Token 809: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5759478807449341
    2. ''' → logprob: -0.8259478807449341
    3. ' "__' → logprob: -12.450947761535645
    4. '__' → logprob: -12.700947761535645
    5. ' '__' → logprob: -13.950947761535645
    6. ''"' → logprob: -14.700947761535645
    7. '"'' → logprob: -16.32594871520996
    8. '('__' → logprob: -17.57594871520996
    9. '"user' → logprob: -18.20094871520996
    10. '("__' → logprob: -18.32594871520996

Token 810: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.001044243574142456
    2. '__' → logprob: -6.876044273376465
    3. '"' → logprob: -11.751044273376465
    4. '__":
' → logprob: -14.376044273376465
    5. 'python' → logprob: -14.626044273376465
    6. '_main' → logprob: -14.626044273376465
    7. 'name' → logprob: -14.626044273376465
    8. 'py' → logprob: -15.126044273376465
    9. '```' → logprob: -15.251044273376465
    10. '___' → logprob: -15.376044273376465

Token 811: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.008798335678875446
    2. '__' → logprob: -4.758798122406006
    3. '__':
' → logprob: -8.633798599243164
    4. '__.' → logprob: -12.508798599243164
    5. '__["' → logprob: -13.508798599243164
    6. '__.__' → logprob: -14.508798599243164
    7. '__:' → logprob: -15.883798599243164
    8. '__",' → logprob: -17.258798599243164
    9. '__("' → logprob: -17.633798599243164
    10. '_' → logprob: -18.008798599243164

Token 812: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04413381218910217
    2. 'main' → logprob: -3.2941339015960693
    3. '	main' → logprob: -5.29413366317749
    4. ' main' → logprob: -6.91913366317749
    5. '
' → logprob: -11.169134140014648
    6. '```' → logprob: -11.169134140014648
    7. '    
' → logprob: -11.669134140014648
    8. '_main' → logprob: -11.669134140014648
    9. '   ' → logprob: -12.044134140014648
    10. '__' → logprob: -12.169134140014648

Token 813: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.25
    3. '	main' → logprob: -19.125
    4. '   ' → logprob: -20.125
    5. 'import' → logprob: -23.125
    6. '(main' → logprob: -23.875
    7. '.main' → logprob: -24.125
    8. '_main' → logprob: -24.25
    9. 'Main' → logprob: -26.25
    10. '```' → logprob: -26.5

Token 814: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 812
Tokens correctement prédits (1ère position, stricte): 327
Tokens correctement prédits (1ère position, avec adaptation): 355
Tokens correctement prédits (top 10): 704
Précision stricte (1ère position): 40.27%
Précision adaptée (1ère position): 43.72%
Précision (top 10): 86.70%
================================================================================
