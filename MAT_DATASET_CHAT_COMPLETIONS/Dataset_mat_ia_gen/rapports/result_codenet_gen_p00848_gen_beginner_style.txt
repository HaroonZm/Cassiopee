================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def is_prime(num):
    if num < 2:
        return False
    for i in range(2, int(num**0.5) + 1):
        if num % i == 0:
            return False
    return True

def generate_primes(limit):
    primes = []
    for i in range(2, limit + 1):
        if is_prime(i):
            primes.append(i)
    return primes

def count_ways(n, k, primes, start):
    if k == 0:
        if n == 0:
            return 1
        else:
            return 0
    if n < 0:
        return 0
    ways = 0
    for i in range(start, len(primes)):
        if primes[i] > n:
            break
        ways += count_ways(n - primes[i], k - 1, primes, i + 1)
    return ways

def main():
    primes = generate_primes(1120)
    while True:
        line = input()
        if line == '0 0':
            break
        n, k = map(int, line.split())
        print(count_ways(n, k, primes, 0))

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' is' (ID: 382)
  → Token d'amorce (pas de prédiction)

Token 2: '_prime' (ID: 98616)
  → Token d'amorce (pas de prédiction)

Token 3: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002266113180667162
    2. '_' → logprob: -6.377265930175781
    3. '(_:' → logprob: -8.627265930175781
    4. '(_' → logprob: -9.252265930175781
    5. '(:' → logprob: -9.252265930175781
    6. '_(' → logprob: -9.627265930175781
    7. '```' → logprob: -10.627265930175781
    8. ' (' → logprob: -11.002265930175781
    9. '(a' → logprob: -11.127265930175781
    10. '(x' → logprob: -11.252265930175781

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04317742958664894
    2. ')' → logprob: -3.168177366256714
    3. ':' → logprob: -9.043177604675293
    4. '):
' → logprob: -10.418177604675293
    5. '```' → logprob: -11.168177604675293
    6. '(' → logprob: -13.168177604675293
    7. ')：' → logprob: -13.543177604675293
    8. '   ' → logprob: -13.793177604675293
    9. '():' → logprob: -13.793177604675293
    10. ''):' → logprob: -14.043177604675293

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006705189123749733
    2. '```' → logprob: -6.131705284118652
    3. '   ' → logprob: -6.256705284118652
    4. ':
' → logprob: -6.631705284118652
    5. '():' → logprob: -6.881705284118652
    6. '':' → logprob: -9.756705284118652
    7. '":' → logprob: -10.381705284118652
    8. '):' → logprob: -10.381705284118652
    9. '`:' → logprob: -11.006705284118652
    10. ':\' → logprob: -11.381705284118652

Token 6: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4373704195022583
    2. '```' → logprob: -1.8123704195022583
    3. ' if' → logprob: -2.6873703002929688
    4. ' 
' → logprob: -2.9373703002929688
    5. ':' → logprob: -4.187370300292969
    6. ' ' → logprob: -4.312370300292969
    7. '\' → logprob: -4.562370300292969
    8. '    
' → logprob: -4.812370300292969
    9. '    ' → logprob: -5.187370300292969
    10. '\n' → logprob: -5.937370300292969

Token 7: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.0011732018319889903
    2. ' ' → logprob: -7.62617301940918
    3. 'num' → logprob: -7.62617301940918
    4. ' not' → logprob: -8.62617301940918
    5. ' ' → logprob: -12.00117301940918
    6. ' n' → logprob: -12.50117301940918
    7. '(num' → logprob: -13.12617301940918
    8. '<num' → logprob: -13.12617301940918
    9. '	num' → logprob: -13.62617301940918
    10. ',num' → logprob: -14.37617301940918

Token 8: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5019553303718567
    2. ' <=' → logprob: -1.001955270767212
    3. ' ' → logprob: -3.876955270767212
    4. '<' → logprob: -5.376955509185791
    5. '<=' → logprob: -6.251955509185791
    6. ' %' → logprob: -9.376955032348633
    7. ' ==' → logprob: -9.626955032348633
    8. '   ' → logprob: -11.001955032348633
    9. '%' → logprob: -11.251955032348633
    10. '  ' → logprob: -11.751955032348633

Token 9: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3132714629173279
    2. '2' → logprob: -1.3132715225219727
    3. '```' → logprob: -12.188271522521973
    4. ' ' → logprob: -12.938271522521973
    5. '=' → logprob: -14.188271522521973
    6. '3' → logprob: -14.938271522521973
    7. '   ' → logprob: -15.438271522521973
    8. '_' → logprob: -15.688271522521973
    9. '`' → logprob: -15.688271522521973
    10. '(' → logprob: -15.688271522521973

Token 10: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.727905979962088e-05
    2. ' ' → logprob: -10.00004768371582
    3. '```' → logprob: -13.37504768371582
    4. '   ' → logprob: -16.75004768371582
    5. '3' → logprob: -17.62504768371582
    6. '２' → logprob: -17.75004768371582
    7. '۲' → logprob: -17.75004768371582
    8. '(' → logprob: -18.00004768371582
    9. '``' → logprob: -18.12504768371582
    10. '"' → logprob: -18.25004768371582

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015512866666540504
    2. ':
' → logprob: -7.001551151275635
    3. ':return' → logprob: -7.751551151275635
    4. ' :' → logprob: -8.876551628112793
    5. '   ' → logprob: -10.251551628112793
    6. '       ' → logprob: -11.376551628112793
    7. '):' → logprob: -12.126551628112793
    8. '    ' → logprob: -12.376551628112793
    9. ':\' → logprob: -12.501551628112793
    10. ' :
' → logprob: -12.751551628112793

Token 12: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9310505390167236
    2. '       ' → logprob: -1.5560505390167236
    3. '   ' → logprob: -1.6810505390167236
    4. '    ' → logprob: -2.8060505390167236
    5. '\n' → logprob: -3.0560505390167236
    6. ':
' → logprob: -3.8060505390167236
    7. 'return' → logprob: -3.8060505390167236
    8. ':return' → logprob: -3.8060505390167236
    9. '
' → logprob: -4.6810503005981445
    10. ':' → logprob: -4.6810503005981445

Token 13: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.741797685623169
    2. 'return' (adapté à ' return') → logprob: -1.116797685623169
    3. '   ' → logprob: -1.741797685623169
    4. '       ' → logprob: -3.991797685623169
    5. '    ' → logprob: -6.11679744720459
    6. ':return' → logprob: -8.24179744720459
    7. '```' → logprob: -9.24179744720459
    8. ' 
' → logprob: -9.86679744720459
    9. ' ' → logprob: -10.86679744720459
    10. '  ' → logprob: -10.99179744720459

Token 14: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.01105159055441618
    2. 'False' → logprob: -4.511051654815674
    3. ' True' → logprob: -12.511051177978516
    4. ' ' → logprob: -15.761051177978516
    5. 'True' → logprob: -18.261051177978516
    6. '(False' → logprob: -18.511051177978516
    7. ' false' → logprob: -19.011051177978516
    8. ' None' → logprob: -19.011051177978516
    9. ' ' → logprob: -19.261051177978516
    10. '=False' → logprob: -20.636051177978516

Token 15: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41578665375709534
    2. '
' → logprob: -1.415786623954773
    3. '\n' → logprob: -3.2907867431640625
    4. '    
' → logprob: -3.2907867431640625
    5. ':
' → logprob: -4.7907867431640625
    6. ':' → logprob: -5.4157867431640625
    7. '  
' → logprob: -5.4157867431640625
    8. '```' → logprob: -6.6657867431640625
    9. '   
' → logprob: -7.0407867431640625
    10. ' 
' → logprob: -7.0407867431640625

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03634250536561012
    2. '    
' → logprob: -4.161342620849609
    3. ':
' → logprob: -4.411342620849609
    4. ':' → logprob: -5.536342620849609
    5. '
' → logprob: -6.286342620849609
    6. '```' → logprob: -7.036342620849609
    7. '  
' → logprob: -7.911342620849609
    8. '\n' → logprob: -8.03634262084961
    9. '   
' → logprob: -8.53634262084961
    10. ':\' → logprob: -8.91134262084961

Token 17: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7506721615791321
    2. '\n' → logprob: -1.6256721019744873
    3. '   ' → logprob: -1.8756721019744873
    4. 'for' (adapté à ' for') → logprob: -2.8756721019744873
    5. ':' → logprob: -3.5006721019744873
    6. ':
' → logprob: -3.6256721019744873
    7. '```' → logprob: -3.6256721019744873
    8. '\' → logprob: -4.000672340393066
    9. '    
' → logprob: -5.000672340393066
    10. '
' → logprob: -5.625672340393066

Token 18: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0030572116374969482
    2. ' ' → logprob: -5.87805700302124
    3. 'i' → logprob: -8.503057479858398
    4. ' in' → logprob: -10.628057479858398
    5. ' n' → logprob: -11.128057479858398
    6. 'n' → logprob: -12.378057479858398
    7. ' _' → logprob: -13.503057479858398
    8. '_' → logprob: -13.628057479858398
    9. ' range' → logprob: -13.753057479858398
    10. ' I' → logprob: -14.503057479858398

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009962485637515783
    2. ' ' → logprob: -7.125996112823486
    3. 'in' → logprob: -8.625996589660645
    4. ' i' → logprob: -12.125996589660645
    5. '  ' → logprob: -12.625996589660645
    6. '   ' → logprob: -13.750996589660645
    7. ' range' → logprob: -15.125996589660645
    8. '    ' → logprob: -15.125996589660645
    9. '1' → logprob: -15.250996589660645
    10. 'range' → logprob: -15.375996589660645

Token 20: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07055417448282242
    2. ' ' → logprob: -2.695554256439209
    3. 'range' → logprob: -7.445554256439209
    4. ' space' → logprob: -11.19555377960205
    5. ' in' → logprob: -11.94555377960205
    6. ' xrange' → logprob: -12.44555377960205
    7. '	range' → logprob: -12.57055377960205
    8. '2' → logprob: -13.32055377960205
    9. ' ' → logprob: -13.69555377960205
    10. '  ' → logprob: -13.94555377960205

Token 21: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.165027217415627e-05
    2. ' (' → logprob: -10.750021934509277
    3. '2' → logprob: -16.00002098083496
    4. ' ' → logprob: -17.50002098083496
    5. '(i' → logprob: -18.12502098083496
    6. '(
' → logprob: -18.25002098083496
    7. '1' → logprob: -18.75002098083496
    8. '((' → logprob: -19.12502098083496
    9. '<|end|>' → logprob: -19.12502098083496
    10. '(int' → logprob: -19.37502098083496

Token 22: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016039233014453202
    2. ' ' → logprob: -8.750160217285156
    3. '(' → logprob: -13.750160217285156
    4. '   ' → logprob: -14.250160217285156
    5. ')' → logprob: -16.250160217285156
    6. '    ' → logprob: -18.125160217285156
    7. '```' → logprob: -18.375160217285156
    8. '  ' → logprob: -19.500160217285156
    9. '۲' → logprob: -21.000160217285156
    10. '       ' → logprob: -21.000160217285156

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02638261578977108
    2. ' ,' → logprob: -3.7763826847076416
    3. ',num' → logprob: -5.7763824462890625
    4. ' ' → logprob: -11.151382446289062
    5. ',int' → logprob: -11.776382446289062
    6. ',
' → logprob: -12.526382446289062
    7. ',i' → logprob: -13.526382446289062
    8. '   ' → logprob: -13.901382446289062
    9. '*num' → logprob: -14.151382446289062
    10. ',n' → logprob: -14.151382446289062

Token 24: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5211305022239685
    2. 'int' → logprob: -1.3961305618286133
    3. ' num' → logprob: -2.2711305618286133
    4. 'num' → logprob: -2.8961305618286133
    5. '   ' → logprob: -9.146130561828613
    6. '    ' → logprob: -10.271130561828613
    7. ' ' → logprob: -11.646130561828613
    8. '  ' → logprob: -12.771130561828613
    9. ' )' → logprob: -13.021130561828613
    10. ')' → logprob: -13.146130561828613

Token 25: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.2522498369216919
    2. '(' → logprob: -1.502249836921692
    3. ' (' → logprob: -8.752249717712402
    4. '(s' → logprob: -9.377249717712402
    5. 'num' → logprob: -10.252249717712402
    6. '(
' → logprob: -11.252249717712402
    7. ' ' → logprob: -12.127249717712402
    8. ')' → logprob: -12.377249717712402
    9. '(n' → logprob: -12.502249717712402
    10. '(math' → logprob: -12.627249717712402

Token 26: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.04866582900285721
    2. ' **' → logprob: -3.048665761947632
    3. ''s' → logprob: -10.923666000366211
    4. ' ' → logprob: -11.298666000366211
    5. ')**' → logprob: -11.798666000366211
    6. '.sqrt' → logprob: -11.923666000366211
    7. '(' → logprob: -12.048666000366211
    8. ')' → logprob: -12.173666000366211
    9. '(num' → logprob: -12.298666000366211
    10. '```' → logprob: -12.548666000366211

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002334568416699767
    2. ' ' → logprob: -8.37523365020752
    3. '.' → logprob: -12.75023365020752
    4. '(' → logprob: -18.125232696533203
    5. '   ' → logprob: -20.000232696533203
    6. ')' → logprob: -20.250232696533203
    7. '  ' → logprob: -20.625232696533203
    8. ' ' → logprob: -20.625232696533203
    9. ' .' → logprob: -21.125232696533203
    10. '2' → logprob: -21.250232696533203

Token 28: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.45848218582978e-06
    2. '5' → logprob: -13.50000286102295
    3. '0' → logprob: -14.50000286102295
    4. '2' → logprob: -16.250001907348633
    5. ' .' → logprob: -16.250001907348633
    6. '1' → logprob: -16.500001907348633
    7. '```' → logprob: -16.500001907348633
    8. '​.' → logprob: -17.375001907348633
    9. '3' → logprob: -17.625001907348633
    10. '.​' → logprob: -17.625001907348633

Token 29: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.796184723294573e-06
    2. '.' → logprob: -13.125005722045898
    3. '   ' → logprob: -13.500005722045898
    4. '```' → logprob: -13.750005722045898
    5. ')' → logprob: -15.437505722045898
    6. ' ' → logprob: -16.5000057220459
    7. '  ' → logprob: -16.7500057220459
    8. '**' → logprob: -16.8125057220459
    9. 'five' → logprob: -16.9375057220459
    10. '    ' → logprob: -16.9375057220459

Token 30: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1275569647550583
    2. ')+' → logprob: -2.1275570392608643
    3. '+' → logprob: -7.877556800842285
    4. ' )' → logprob: -8.627556800842285
    5. '()' → logprob: -10.752556800842285
    6. ' +' → logprob: -10.877556800842285
    7. '()+' → logprob: -11.252556800842285
    8. '(' → logprob: -12.377556800842285
    9. '```' → logprob: -12.752556800842285
    10. ')+(' → logprob: -12.877556800842285

Token 31: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07014426589012146
    2. ' +' → logprob: -2.6951441764831543
    3. ')+' → logprob: -8.695144653320312
    4. ')' → logprob: -10.570144653320312
    5. '+)' → logprob: -12.570144653320312
    6. '+
' → logprob: -12.695144653320312
    7. '   ' → logprob: -13.195144653320312
    8. ' +
' → logprob: -13.320144653320312
    9. '+i' → logprob: -13.695144653320312
    10. ' ' → logprob: -13.695144653320312

Token 32: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25192973017692566
    2. ' ' → logprob: -1.501929759979248
    3. '```' → logprob: -15.25192928314209
    4. ' ' → logprob: -15.87692928314209
    5. '  ' → logprob: -16.126930236816406
    6. '   ' → logprob: -16.251930236816406
    7. '2' → logprob: -16.501930236816406
    8. ')' → logprob: -18.126930236816406
    9. '۱' → logprob: -19.126930236816406
    10. '﻿' → logprob: -19.251930236816406

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '```' → logprob: -16.125059127807617
    4. '   ' → logprob: -17.250059127807617
    5. ')' → logprob: -17.875059127807617
    6. '  ' → logprob: -18.000059127807617
    7. '2' → logprob: -18.125059127807617
    8. '۱' → logprob: -18.875059127807617
    9. '    ' → logprob: -19.500059127807617
    10. '' → logprob: -20.187559127807617

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011425498872995377
    2. ':' → logprob: -4.511425495147705
    3. ')' → logprob: -8.011425971984863
    4. ' ):' → logprob: -10.511425971984863
    5. ':)' → logprob: -12.136425971984863
    6. '):
' → logprob: -12.136425971984863
    7. '   ' → logprob: -12.511425971984863
    8. '}:' → logprob: -14.011425971984863
    9. ' :' → logprob: -14.386425971984863
    10. ':return' → logprob: -14.386425971984863

Token 35: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03194654360413551
    2. ' :' → logprob: -3.5319466590881348
    3. '):' → logprob: -7.406946659088135
    4. '   ' → logprob: -7.406946659088135
    5. '    ' → logprob: -7.906946659088135
    6. '       ' → logprob: -8.281946182250977
    7. ':
' → logprob: -8.656946182250977
    8. ' :
' → logprob: -10.031946182250977
    9. ':**' → logprob: -10.656946182250977
    10. ' ' → logprob: -10.781946182250977

Token 36: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3647291660308838
    2. 'if' (adapté à ' if') → logprob: -1.4897291660308838
    3. ' ' → logprob: -3.864729166030884
    4. '   ' → logprob: -3.989729166030884
    5. '       ' → logprob: -4.364728927612305
    6. '    ' → logprob: -4.614728927612305
    7. ':' → logprob: -4.739728927612305
    8. ' :' → logprob: -5.239728927612305
    9. '<|end|>' → logprob: -6.364728927612305
    10. '  ' → logprob: -8.364728927612305

Token 37: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.00015169414109550416
    2. 'num' → logprob: -9.250151634216309
    3. ' ' → logprob: -9.875151634216309
    4. ' ' → logprob: -13.250151634216309
    5. '	num' → logprob: -13.875151634216309
    6. '(num' → logprob: -14.625151634216309
    7. ' n' → logprob: -15.375151634216309
    8. ' (' → logprob: -15.375151634216309
    9. '<num' → logprob: -15.500151634216309
    10. '<|end|>' → logprob: -17.125152587890625

Token 38: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.006771618966013193
    2. '%' → logprob: -5.006771564483643
    3. ' ' → logprob: -9.8817720413208
    4. '%i' → logprob: -12.3817720413208
    5. ' ' → logprob: -15.2567720413208
    6. ' %)' → logprob: -16.006771087646484
    7. ' %#' → logprob: -16.256771087646484
    8. ' %=' → logprob: -16.256771087646484
    9. '<|end|>' → logprob: -16.506771087646484
    10. '%s' → logprob: -16.631771087646484

Token 39: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16042904555797577
    2. 'i' → logprob: -1.9104290008544922
    3. ' ' → logprob: -8.660429000854492
    4. '	i' → logprob: -10.660429000854492
    5. '<|end|>' → logprob: -12.285429000854492
    6. '  ' → logprob: -13.785429000854492
    7. '2' → logprob: -14.410429000854492
    8. '   ' → logprob: -15.035429000854492
    9. ' ' → logprob: -15.160429000854492
    10. ' ‌' → logprob: -15.285429000854492

Token 40: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0019608670845627785
    2. '==' → logprob: -6.251960754394531
    3. ' ' → logprob: -10.626960754394531
    4. ' =' → logprob: -12.376960754394531
    5. '=' → logprob: -12.626960754394531
    6. ' ===' → logprob: -15.501960754394531
    7. ')==' → logprob: -16.12696075439453
    8. ')' → logprob: -16.25196075439453
    9. ' !=' → logprob: -16.50196075439453
    10. ' ' → logprob: -17.00196075439453

Token 41: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25192955136299133
    2. '0' → logprob: -1.501929521560669
    3. ' ' → logprob: -14.75192928314209
    4. '<|end|>' → logprob: -17.376930236816406
    5. '```' → logprob: -18.376930236816406
    6. '  ' → logprob: -19.001930236816406
    7. '۰' → logprob: -19.251930236816406
    8. '   ' → logprob: -19.626930236816406
    9. ' 
' → logprob: -20.001930236816406
    10. ' ' → logprob: -20.376930236816406

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '۰' → logprob: -19.875015258789062
    4. '```' → logprob: -21.000015258789062
    5. '٠' → logprob: -21.625015258789062
    6. '   ' → logprob: -21.875015258789062
    7. '  ' → logprob: -22.000015258789062
    8. '०' → logprob: -22.000015258789062
    9. '０' → logprob: -22.125015258789062
    10. '00' → logprob: -22.375015258789062

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.006006828509271e-05
    2. ':return' → logprob: -9.750080108642578
    3. ':
' → logprob: -11.125080108642578
    4. '):' → logprob: -12.250080108642578
    5. '       ' → logprob: -14.000080108642578
    6. ' :' → logprob: -14.250080108642578
    7. '           ' → logprob: -15.000080108642578
    8. ':**' → logprob: -15.125080108642578
    9. '<|end|>' → logprob: -17.125080108642578
    10. ':`' → logprob: -17.625080108642578

Token 44: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004992871079593897
    2. ' return' → logprob: -5.504992961883545
    3. '       ' → logprob: -7.504992961883545
    4. 'return' → logprob: -8.754992485046387
    5. ' 
' → logprob: -9.754992485046387
    6. '   ' → logprob: -10.504992485046387
    7. ' ' → logprob: -10.629992485046387
    8. '               ' → logprob: -11.129992485046387
    9. '            
' → logprob: -11.254992485046387
    10. ' ' → logprob: -11.254992485046387

Token 45: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.41656923294067383
    2. 'return' (adapté à ' return') → logprob: -1.2915692329406738
    3. '           ' → logprob: -3.666569232940674
    4. '               ' → logprob: -3.666569232940674
    5. ' 
' → logprob: -4.416569232940674
    6. '       ' → logprob: -6.541569232940674
    7. '   ' → logprob: -7.541569232940674
    8. ' ' → logprob: -8.666568756103516
    9. ' ' → logprob: -8.916568756103516
    10. '
' → logprob: -9.291568756103516

Token 46: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.07892162352800369
    2. ' False' → logprob: -2.5789215564727783
    3. 'True' → logprob: -10.5789213180542
    4. ' True' → logprob: -11.9539213180542
    5. 'F' → logprob: -18.953922271728516
    6. '(False' → logprob: -19.703922271728516
    7. ' ' → logprob: -20.328922271728516
    8. '   ' → logprob: -21.828922271728516
    9. 'false' → logprob: -22.078922271728516
    10. 'None' → logprob: -22.328922271728516

Token 47: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23619917035102844
    2. '
' → logprob: -1.611199140548706
    3. '\n' → logprob: -4.986199378967285
    4. '    
' → logprob: -5.986199378967285
    5. '  
' → logprob: -7.611199378967285
    6. ' 
' → logprob: -8.111199378967285
    7. '   
' → logprob: -8.736199378967285
    8. '       ' → logprob: -9.736199378967285
    9. '' → logprob: -9.736199378967285
    10. '```' → logprob: -9.861199378967285

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015259294304996729
    2. '
' → logprob: -7.00152587890625
    3. '    
' → logprob: -8.12652587890625
    4. 'return' → logprob: -8.62652587890625
    5. ' return' → logprob: -9.87652587890625
    6. '```' → logprob: -10.50152587890625
    7. ' 
' → logprob: -10.75152587890625
    8. '       ' → logprob: -11.12652587890625
    9. '  
' → logprob: -11.50152587890625
    10. '   
' → logprob: -12.37652587890625

Token 49: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5867922306060791
    2. 'return' (adapté à ' return') → logprob: -0.8367922306060791
    3. ' return' → logprob: -4.5867919921875
    4. '    
' → logprob: -8.5867919921875
    5. '```' → logprob: -8.5867919921875
    6. ' ' → logprob: -9.3367919921875
    7. ' 
' → logprob: -10.7117919921875
    8. '  ' → logprob: -10.8367919921875
    9. ':return' → logprob: -10.8367919921875
    10. '
' → logprob: -10.9617919921875

Token 50: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.575939416885376
    2. 'True' → logprob: -0.825939416885376
    3. '(True' → logprob: -18.825939178466797
    4. ' Tru' → logprob: -19.575939178466797
    5. '=True' → logprob: -20.200939178466797
    6. ' ' → logprob: -20.450939178466797
    7. ' ' → logprob: -21.075939178466797
    8. 'Tr' → logprob: -21.950939178466797
    9. '   ' → logprob: -21.950939178466797
    10. 'T' → logprob: -22.450939178466797

Token 51: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7273686528205872
    2. '\' → logprob: -2.2273685932159424
    3. ':' → logprob: -2.3523685932159424
    4. ')' → logprob: -2.6023685932159424
    5. '\n' → logprob: -2.7273685932159424
    6. '
' → logprob: -3.2273685932159424
    7. '```' → logprob: -3.4773685932159424
    8. '<|end|>' → logprob: -4.1023688316345215
    9. 'n' → logprob: -4.2273688316345215
    10. ' ' → logprob: -4.3523688316345215

Token 53: ' generate' (ID: 10419)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07741478830575943
    2. ' is' → logprob: -3.0774147510528564
    3. ' space' → logprob: -3.7024147510528564
    4. ' check' → logprob: -6.7024149894714355
    5. ' prime' → logprob: -7.3274149894714355
    6. ' i' → logprob: -8.327414512634277
    7. ' factorial' → logprob: -8.327414512634277
    8. ' test' → logprob: -8.577414512634277
    9. ' spaced' → logprob: -8.827414512634277
    10. ' find' → logprob: -9.202414512634277

Token 54: '_pr' (ID: 18177)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01875849813222885
    2. '_prime' → logprob: -4.268758296966553
    3. '_numbers' → logprob: -6.643758296966553
    4. '_pr' → logprob: -7.018758296966553
    5. ' _' → logprob: -7.268758296966553
    6. '_pal' → logprob: -7.893758296966553
    7. '_p' → logprob: -8.018758773803711
    8. '_factor' → logprob: -8.018758773803711
    9. '_n' → logprob: -8.893758773803711
    10. '_number' → logprob: -9.018758773803711

Token 55: 'imes' (ID: 2332)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.1370621770620346
    2. 'imes' → logprob: -2.1370620727539062
    3. 'i' → logprob: -5.012062072753906
    4. '_' → logprob: -6.387062072753906
    5. '_i' → logprob: -7.762062072753906
    6. 'im' → logprob: -8.387062072753906
    7. '_prime' → logprob: -8.762062072753906
    8. 'int' → logprob: -8.762062072753906
    9. '```' → logprob: -9.012062072753906
    10. 'o' → logprob: -9.387062072753906

Token 56: '(limit' (ID: 112473)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007454255828633904
    2. '(n' → logprob: -7.2507452964782715
    3. '_' → logprob: -11.75074577331543
    4. '(num' → logprob: -11.87574577331543
    5. '("("' → logprob: -12.37574577331543
    6. '_(' → logprob: -13.12574577331543
    7. '_list' → logprob: -13.37574577331543
    8. '(_' → logprob: -13.37574577331543
    9. ' (' → logprob: -13.62574577331543
    10. '(size' → logprob: -14.12574577331543

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07355775684118271
    2. ')' → logprob: -2.6985578536987305
    3. '(' → logprob: -5.8235578536987305
    4. ':' → logprob: -8.19855785369873
    5. '():' → logprob: -9.32355785369873
    6. '(n' → logprob: -9.32355785369873
    7. ' ):' → logprob: -9.57355785369873
    8. ',' → logprob: -10.19855785369873
    9. '_' → logprob: -10.44855785369873
    10. '(limit' → logprob: -11.32355785369873

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03253982588648796
    2. ':' → logprob: -4.1575398445129395
    3. ' ' → logprob: -5.2825398445129395
    4. '\' → logprob: -5.6575398445129395
    5. '    ' → logprob: -6.4075398445129395
    6. '\n' → logprob: -6.6575398445129395
    7. '    
' → logprob: -6.6575398445129395
    8. '  ' → logprob: -7.4075398445129395
    9. ':
' → logprob: -7.9075398445129395
    10. ' 
' → logprob: -7.9075398445129395

Token 59: ' primes' (ID: 104042)
  Prédit: ' primes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.4332439601421356
    2. 'pr' → logprob: -1.183243989944458
    3. '   ' → logprob: -3.808243989944458
    4. ' 
' → logprob: -4.808243751525879
    5. '    
' → logprob: -5.433243751525879
    6. '
' → logprob: -5.558243751525879
    7. '    ' → logprob: -6.433243751525879
    8. '```' → logprob: -6.933243751525879
    9. '\' → logprob: -7.308243751525879
    10. '     
' → logprob: -7.308243751525879

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0046249874867498875
    2. '=' → logprob: -5.379624843597412
    3. '=[]' → logprob: -13.50462532043457
    4. ' ' → logprob: -13.75462532043457
    5. '  ' → logprob: -14.25462532043457
    6. 's' → logprob: -14.50462532043457
    7. '_list' → logprob: -14.75462532043457
    8. '   ' → logprob: -15.25462532043457
    9. '_' → logprob: -15.75462532043457
    10. ',' → logprob: -16.62962532043457

Token 61: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6933461427688599
    2. ' []' → logprob: -0.6933461427688599
    3. '[' → logprob: -8.81834602355957
    4. ' [' → logprob: -9.94334602355957
    5. '[]
' → logprob: -14.06834602355957
    6. ' []
' → logprob: -14.56834602355957
    7. ' ' → logprob: -14.69334602355957
    8. '[]>' → logprob: -14.94334602355957
    9. '[]}' → logprob: -15.06834602355957
    10. '[],' → logprob: -15.94334602355957

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7582425475120544
    2. ' for' → logprob: -1.5082426071166992
    3. ' 
' → logprob: -2.008242607116699
    4. ' ' → logprob: -2.758242607116699
    5. 'for' → logprob: -3.008242607116699
    6. '
' → logprob: -3.133242607116699
    7. '    
' → logprob: -4.383242607116699
    8. '    ' → logprob: -5.883242607116699
    9. '' → logprob: -6.508242607116699
    10. '  
' → logprob: -7.258242607116699

Token 63: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12878906726837158
    2. ' for' → logprob: -2.128788948059082
    3. '   ' → logprob: -6.753788948059082
    4. 'n' → logprob: -8.003788948059082
    5. 'i' → logprob: -9.128788948059082
    6. 'num' → logprob: -10.128788948059082
    7. 'current' → logprob: -10.128788948059082
    8. ' ' → logprob: -10.253788948059082
    9. ' i' → logprob: -10.378788948059082
    10. '    
' → logprob: -10.503788948059082

Token 64: ' i' (ID: 575)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.3583452105522156
    2. ' n' → logprob: -1.8583452701568604
    3. ' i' → logprob: -1.9833452701568604
    4. ' number' → logprob: -5.358345031738281
    5. 'n' → logprob: -6.608345031738281
    6. 'num' → logprob: -6.983345031738281
    7. 'i' → logprob: -7.983345031738281
    8. ' ' → logprob: -8.483345031738281
    9. ' x' → logprob: -10.358345031738281
    10. ' _' → logprob: -10.983345031738281

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005631301086395979
    2. 'in' → logprob: -5.255631446838379
    3. ' ' → logprob: -7.880631446838379
    4. '  ' → logprob: -12.255631446838379
    5. '   ' → logprob: -12.255631446838379
    6. 'n' → logprob: -12.755631446838379
    7. '	in' → logprob: -13.255631446838379
    8. ' i' → logprob: -13.630631446838379
    9. ',' → logprob: -13.755631446838379
    10. '    ' → logprob: -14.255631446838379

Token 66: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0003819332632701844
    2. 'range' → logprob: -7.875381946563721
    3. ' ' → logprob: -13.500381469726562
    4. '	range' → logprob: -15.000381469726562
    5. '(range' → logprob: -16.750381469726562
    6. ' xrange' → logprob: -16.875381469726562
    7. ' ran' → logprob: -18.375381469726562
    8. '   ' → logprob: -18.625381469726562
    9. '2' → logprob: -18.625381469726562
    10. '```' → logprob: -18.750381469726562

Token 67: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020103710994590074
    2. '(limit' → logprob: -8.875201225280762
    3. ' (' → logprob: -10.125201225280762
    4. '1' → logprob: -11.375201225280762
    5. '(
' → logprob: -12.125201225280762
    6. ' ' → logprob: -12.875201225280762
    7. ',' → logprob: -14.250201225280762
    8. ')' → logprob: -15.500201225280762
    9. ' ,' → logprob: -16.000200271606445
    10. '<|end|>' → logprob: -16.125200271606445

Token 68: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.558399319241289e-05
    2. ' ' → logprob: -10.625025749206543
    3. '1' → logprob: -14.375025749206543
    4. '   ' → logprob: -15.125025749206543
    5. 'limit' → logprob: -16.375024795532227
    6. ')' → logprob: -16.500024795532227
    7. '```' → logprob: -16.750024795532227
    8. '0' → logprob: -17.125024795532227
    9. '    ' → logprob: -18.875024795532227
    10. '3' → logprob: -19.000024795532227

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000488110730657354
    2. ' ,' → logprob: -7.62548828125
    3. ',int' → logprob: -17.75048828125
    4. ',
' → logprob: -17.87548828125
    5. 'limit' → logprob: -18.12548828125
    6. '(limit' → logprob: -18.37548828125
    7. '‌,' → logprob: -18.50048828125
    8. ' to' → logprob: -19.00048828125
    9. ' ' → logprob: -19.00048828125
    10. '```' → logprob: -19.00048828125

Token 70: ' limit' (ID: 5967)
  Prédit: ' limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.20143333077430725
    2. 'limit' → logprob: -1.7014333009719849
    3. '(limit' → logprob: -10.951433181762695
    4. '_limit' → logprob: -13.701433181762695
    5. '.limit' → logprob: -14.576433181762695
    6. '```' → logprob: -15.451433181762695
    7. ' ' → logprob: -15.826433181762695
    8. '   ' → logprob: -15.951433181762695
    9. '    ' → logprob: -16.076433181762695
    10. '-limit' → logprob: -16.201433181762695

Token 71: ' +' (ID: 659)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021044649183750153
    2. '+' → logprob: -3.8960447311401367
    3. ')' → logprob: -8.021044731140137
    4. ' +' → logprob: -9.021044731140137
    5. '):
' → logprob: -10.521044731140137
    6. ' ):' → logprob: -10.896044731140137
    7. ':' → logprob: -12.646044731140137
    8. '+:' → logprob: -13.521044731140137
    9. ' ' → logprob: -13.896044731140137
    10. '   ' → logprob: -14.271044731140137

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023246178403496742
    2. ' ' → logprob: -3.7732462882995605
    3. ')' → logprob: -14.648245811462402
    4. '```' → logprob: -15.648245811462402
    5. '   ' → logprob: -16.27324676513672
    6. '  ' → logprob: -17.52324676513672
    7. ' ' → logprob: -17.89824676513672
    8. ' )' → logprob: -18.02324676513672
    9. '2' → logprob: -19.39824676513672
    10. '):
' → logprob: -19.77324676513672

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. ')' → logprob: -17.25001335144043
    4. '   ' → logprob: -18.87501335144043
    5. '  ' → logprob: -19.87501335144043
    6. '```' → logprob: -20.12501335144043
    7. '    ' → logprob: -21.37501335144043
    8. '0' → logprob: -22.50001335144043
    9. '

' → logprob: -22.50001335144043
    10. '2' → logprob: -22.62501335144043

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10382658988237381
    2. ':' → logprob: -2.4788265228271484
    3. ')' → logprob: -4.228826522827148
    4. '):
' → logprob: -9.478826522827148
    5. ':)' → logprob: -9.728826522827148
    6. ' ):' → logprob: -10.103826522827148
    7. '   ' → logprob: -11.603826522827148
    8. ':**' → logprob: -11.853826522827148
    9. ',' → logprob: -12.353826522827148
    10. ' :' → logprob: -12.978826522827148

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9057527780532837
    2. '   ' → logprob: -1.0307527780532837
    3. ' ' → logprob: -2.030752658843994
    4. '    ' → logprob: -3.155752658843994
    5. ' 
' → logprob: -3.405752658843994
    6. '<|end|>' → logprob: -4.280752658843994
    7. ' if' → logprob: -4.780752658843994
    8. '    
' → logprob: -5.530752658843994
    9. '        
' → logprob: -6.405752658843994
    10. '     
' → logprob: -7.030752658843994

Token 76: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6936562061309814
    2. ' if' → logprob: -0.6936562061309814
    3. '       ' → logprob: -8.443655967712402
    4. '   ' → logprob: -8.568655967712402
    5. ' 
' → logprob: -10.443655967712402
    6. '```' → logprob: -10.568655967712402
    7. ' ' → logprob: -10.818655967712402
    8. '    ' → logprob: -11.068655967712402
    9. '
' → logprob: -12.568655967712402
    10. '           ' → logprob: -13.193655967712402

Token 77: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0001446611131541431
    2. 'is' → logprob: -8.875144958496094
    3. ' ' → logprob: -12.500144958496094
    4. ' ' → logprob: -13.875144958496094
    5. '	is' → logprob: -17.250144958496094
    6. '<|end|>' → logprob: -17.625144958496094
    7. '```' → logprob: -17.875144958496094
    8. 'space' → logprob: -18.625144958496094
    9. '`' → logprob: -19.250144958496094
    10. ' 
' → logprob: -19.250144958496094

Token 78: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.011483371257781982
    2. '_' → logprob: -4.511483192443848
    3. '_pr' → logprob: -7.886483192443848
    4. '_p' → logprob: -10.011483192443848
    5. ' _' → logprob: -11.761483192443848
    6. '__' → logprob: -13.761483192443848
    7. '_Pr' → logprob: -13.761483192443848
    8. '_pi' → logprob: -13.886483192443848
    9. ''_' → logprob: -14.261483192443848
    10. '_primary' → logprob: -14.386483192443848

Token 79: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0011703446507453918
    2. '(' → logprob: -6.7511701583862305
    3. '(
' → logprob: -16.376171112060547
    4. ' (' → logprob: -16.876171112060547
    5. '(

' → logprob: -17.501171112060547
    6. '(I' → logprob: -18.501171112060547
    7. '(ii' → logprob: -19.001171112060547
    8. ')' → logprob: -19.376171112060547
    9. ' ' → logprob: -20.376171112060547
    10. '(iv' → logprob: -21.251171112060547

Token 80: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00029029499273747206
    2. ')' → logprob: -8.875289916992188
    3. ' ):' → logprob: -9.625289916992188
    4. ':' → logprob: -9.750289916992188
    5. '):
' → logprob: -10.625289916992188
    6. '():' → logprob: -14.000289916992188
    7. '   ' → logprob: -15.125289916992188
    8. ':)' → logprob: -15.625289916992188
    9. '       ' → logprob: -16.125289916992188
    10. '}:' → logprob: -16.375289916992188

Token 81: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011796683247666806
    2. '            
' → logprob: -9.750118255615234
    3. '          ' → logprob: -10.500118255615234
    4. '```' → logprob: -12.000118255615234
    5. '<|end|>' → logprob: -12.125118255615234
    6. ' primes' → logprob: -12.750118255615234
    7. '            ' → logprob: -13.250118255615234
    8. '       ' → logprob: -13.375118255615234
    9. '	       ' → logprob: -13.500118255615234
    10. ')' → logprob: -13.625118255615234

Token 82: ' primes' (ID: 104042)
  Prédit: ' primes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.004547608084976673
    2. '           ' → logprob: -6.129547595977783
    3. 'pr' → logprob: -6.129547595977783
    4. '               ' → logprob: -9.504548072814941
    5. '       ' → logprob: -10.254548072814941
    6. ' pr' → logprob: -10.879548072814941
    7. '	pr' → logprob: -11.254548072814941
    8. '   ' → logprob: -11.379548072814941
    9. ' ' → logprob: -12.254548072814941
    10. '            ' → logprob: -12.629548072814941

Token 83: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0486273355782032
    2. '.' → logprob: -3.0486273765563965
    3. '.app' → logprob: -11.048626899719238
    4. '.add' → logprob: -11.298626899719238
    5. ' .' → logprob: -12.548626899719238
    6. '.ap' → logprob: -12.923626899719238
    7. '.extend' → logprob: -13.923626899719238
    8. '.Append' → logprob: -13.923626899719238
    9. 'append' → logprob: -14.298626899719238
    10. '.py' → logprob: -14.673626899719238

Token 84: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0024758970830589533
    2. '(' → logprob: -6.002475738525391
    3. '(
' → logprob: -15.25247573852539
    4. '(

' → logprob: -17.87747573852539
    5. '(ii' → logprob: -19.00247573852539
    6. ' (' → logprob: -19.75247573852539
    7. '()' → logprob: -20.12747573852539
    8. '(`' → logprob: -20.75247573852539
    9. '((' → logprob: -20.75247573852539
    10. '('' → logprob: -21.12747573852539

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001242772996192798
    2. ')
' → logprob: -9.000123977661133
    3. ')return' → logprob: -15.000123977661133
    4. ' )' → logprob: -15.375123977661133
    5. '   ' → logprob: -16.000123977661133
    6. ')i' → logprob: -17.000123977661133
    7. ')

' → logprob: -17.250123977661133
    8. '       ' → logprob: -17.625123977661133
    9. ')`' → logprob: -18.375123977661133
    10. ')
' → logprob: -18.500123977661133

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1381181925535202
    2. 'return' → logprob: -2.263118267059326
    3. '
' → logprob: -4.263118267059326
    4. ' return' → logprob: -4.888118267059326
    5. '    
' → logprob: -6.263118267059326
    6. ' 
' → logprob: -7.513118267059326
    7. 'r' → logprob: -7.888118267059326
    8. '```' → logprob: -8.388117790222168
    9. ':return' → logprob: -9.263117790222168
    10. '	return' → logprob: -9.388117790222168

Token 87: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006077395286411047
    2. '   ' → logprob: -5.256077289581299
    3. ' return' → logprob: -7.506077289581299
    4. 'r' → logprob: -8.381077766418457
    5. '```' → logprob: -10.381077766418457
    6. '       ' → logprob: -11.256077766418457
    7. ' ' → logprob: -11.881077766418457
    8. 'ret' → logprob: -12.006077766418457
    9. '	return' → logprob: -12.881077766418457
    10. '    
' → logprob: -13.381077766418457

Token 88: ' primes' (ID: 104042)
  Prédit: ' primes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.014169861562550068
    2. 'pr' → logprob: -4.264169692993164
    3. '	pr' → logprob: -13.014169692993164
    4. ' pr' → logprob: -13.014169692993164
    5. ' ' → logprob: -13.764169692993164
    6. '(pr' → logprob: -15.889169692993164
    7. ' pris' → logprob: -16.014169692993164
    8. ' ' → logprob: -16.139169692993164
    9. 'prime' → logprob: -16.389169692993164
    10. ' prime' → logprob: -16.639169692993164

Token 89: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9988088607788086
    2. '#' → logprob: -1.4988088607788086
    3. '<|end|>' → logprob: -1.4988088607788086
    4. '[' → logprob: -2.7488088607788086
    5. '```' → logprob: -2.9988088607788086
    6. 'def' → logprob: -4.248808860778809
    7. 'n' → logprob: -4.373808860778809
    8. '\' → logprob: -4.498808860778809
    9. '

' → logprob: -4.998808860778809
    10. 'd' → logprob: -5.123808860778809

Token 90: 'def' (ID: 1314)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.13316422700881958
    2. '#' → logprob: -2.383164167404175
    3. 'd' → logprob: -4.383164405822754
    4. 'n' → logprob: -4.508164405822754
    5. 'def' → logprob: -5.258164405822754
    6. 'print' → logprob: -6.383164405822754
    7. '```' → logprob: -7.508164405822754
    8. 'l' → logprob: -8.008164405822754
    9. 'pr' → logprob: -8.133164405822754
    10. '\' → logprob: -8.883164405822754

Token 91: ' count' (ID: 3605)
  Prédit: ' fibonacci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fibonacci' → logprob: -0.8405239582061768
    2. ' sum' → logprob: -1.8405239582061768
    3. ' generate' → logprob: -1.9655239582061768
    4. ' main' → logprob: -2.3405239582061768
    5. ' factorial' → logprob: -3.2155239582061768
    6. ' calculate' → logprob: -3.3405239582061768
    7. ' find' → logprob: -3.8405239582061768
    8. ' sieve' → logprob: -3.8405239582061768
    9. ' get' → logprob: -4.090523719787598
    10. ' ' → logprob: -4.715523719787598

Token 92: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5409603714942932
    2. '_pr' → logprob: -0.9159603714942932
    3. '_prime' → logprob: -5.165960311889648
    4. '_occ' → logprob: -5.665960311889648
    5. '_div' → logprob: -6.290960311889648
    6. '_words' → logprob: -7.040960311889648
    7. '_unique' → logprob: -7.290960311889648
    8. '_numbers' → logprob: -7.665960311889648
    9. '_s' → logprob: -7.790960311889648
    10. '_elements' → logprob: -7.790960311889648

Token 93: 'ways' (ID: 2771)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.005389091558754444
    2. 'div' → logprob: -6.005389213562012
    3. 'v' → logprob: -6.380389213562012
    4. 'prime' → logprob: -7.380389213562012
    5. 'unique' → logprob: -9.130389213562012
    6. 'occ' → logprob: -9.255389213562012
    7. 'digits' → logprob: -9.380389213562012
    8. 'distinct' → logprob: -9.755389213562012
    9. 'pairs' → logprob: -10.005389213562012
    10. 'words' → logprob: -10.130389213562012

Token 94: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016239990945905447
    2. '(n' → logprob: -7.00162410736084
    3. ' (' → logprob: -7.50162410736084
    4. '_to' → logprob: -9.12662410736084
    5. '(num' → logprob: -11.00162410736084
    6. '(to' → logprob: -12.00162410736084
    7. '(count' → logprob: -12.62662410736084
    8. 'to' → logprob: -13.00162410736084
    9. '(number' → logprob: -13.37662410736084
    10. ' to' → logprob: -13.62662410736084

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04707913473248482
    2. '):' → logprob: -3.172079086303711
    3. ',n' → logprob: -6.672079086303711
    4. ' ,' → logprob: -7.047079086303711
    5. ' ):' → logprob: -7.047079086303711
    6. ')' → logprob: -7.172079086303711
    7. ',k' → logprob: -9.172079086303711
    8. ' )' → logprob: -9.922079086303711
    9. ',num' → logprob: -9.922079086303711
    10. '   ' → logprob: -10.172079086303711

Token 96: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5851062536239624
    2. 'k' → logprob: -1.5851062536239624
    3. ' m' → logprob: -2.335106372833252
    4. ' primes' → logprob: -3.335106372833252
    5. ' coins' → logprob: -3.460106372833252
    6. 'm' → logprob: -3.710106372833252
    7. 'pr' → logprob: -3.960106372833252
    8. 'coins' → logprob: -4.210106372833252
    9. ' target' → logprob: -4.460106372833252
    10. 'target' → logprob: -6.335106372833252

Token 97: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018852073117159307
    2. ',' → logprob: -9.250188827514648
    3. ' ):' → logprob: -9.625188827514648
    4. ')' → logprob: -10.875188827514648
    5. ':' → logprob: -12.125188827514648
    6. '):
' → logprob: -13.625188827514648
    7. '   ' → logprob: -15.875188827514648
    8. ']:' → logprob: -16.12518882751465
    9. '=' → logprob: -16.50018882751465
    10. '():' → logprob: -16.62518882751465

Token 98: ' primes' (ID: 104042)
  Prédit: ' memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.7640409469604492
    2. ' primes' → logprob: -1.8890409469604492
    3. ' dp' → logprob: -2.264040946960449
    4. ' target' → logprob: -2.764040946960449
    5. ' max' → logprob: -3.139040946960449
    6. ' m' → logprob: -3.264040946960449
    7. ' current' → logprob: -3.389040946960449
    8. ' ways' → logprob: -3.514040946960449
    9. ' coins' → logprob: -4.389040946960449
    10. ' cache' → logprob: -5.264040946960449

Token 99: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0033006970770657063
    2. ',' → logprob: -5.753300666809082
    3. ' ):' → logprob: -9.503300666809082
    4. ')' → logprob: -10.628300666809082
    5. '[]):' → logprob: -11.503300666809082
    6. '):
' → logprob: -12.378300666809082
    7. ':' → logprob: -12.503300666809082
    8. '   ' → logprob: -12.753300666809082
    9. ']:' → logprob: -14.753300666809082
    10. '  ' → logprob: -14.753300666809082

Token 100: ' start' (ID: 1604)
  Prédit: ' memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.5541887879371643
    2. ' target' → logprob: -1.4291887283325195
    3. ' index' → logprob: -3.0541887283325195
    4. ' m' → logprob: -3.5541887283325195
    5. ' start' → logprob: -3.8041887283325195
    6. ' idx' → logprob: -3.9291887283325195
    7. ' dp' → logprob: -4.0541887283325195
    8. ' current' → logprob: -4.5541887283325195
    9. ' ways' → logprob: -5.3041887283325195
    10. 'memo' → logprob: -5.3041887283325195

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010178875178098679
    2. ',' → logprob: -5.385179042816162
    3. '=' → logprob: -5.510179042816162
    4. ' ):' → logprob: -6.635179042816162
    5. ')' → logprob: -9.135178565979004
    6. '_index' → logprob: -10.885178565979004
    7. '):
' → logprob: -11.135178565979004
    8. ' ,' → logprob: -11.510178565979004
    9. ' =' → logprob: -11.635178565979004
    10. '_idx' → logprob: -12.135178565979004

Token 102: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002287045121192932
    2. '(' → logprob: -7.002286911010742
    3. ' :' → logprob: -7.377286911010742
    4. '():' → logprob: -7.502286911010742
    5. '):' → logprob: -9.502286911010742
    6. '(:' → logprob: -10.127286911010742
    7. ':**' → logprob: -10.502286911010742
    8. '   ' → logprob: -11.127286911010742
    9. ':return' → logprob: -11.502286911010742
    10. ':
' → logprob: -12.252286911010742

Token 103: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06573217362165451
    2. ':' → logprob: -3.44073224067688
    3. ' if' → logprob: -3.94073224067688
    4. ' ' → logprob: -5.565732002258301
    5. ' 
' → logprob: -5.815732002258301
    6. '    ' → logprob: -6.190732002258301
    7. '  ' → logprob: -7.440732002258301
    8. ' :' → logprob: -7.815732002258301
    9. ':
' → logprob: -8.0657320022583
    10. '   
' → logprob: -8.0657320022583

Token 104: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.31666257977485657
    2. ' n' → logprob: -1.6916625499725342
    3. 'k' → logprob: -2.566662549972534
    4. 'n' → logprob: -4.566662788391113
    5. ' ' → logprob: -11.566662788391113
    6. '   ' → logprob: -12.316662788391113
    7. '(k' → logprob: -13.066662788391113
    8. ' start' → logprob: -13.316662788391113
    9. '	k' → logprob: -13.691662788391113
    10. ' (' → logprob: -13.691662788391113

Token 105: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.004088135901838541
    2. '==' → logprob: -5.504087924957275
    3. ' ' → logprob: -11.879088401794434
    4. '0' → logprob: -14.004088401794434
    5. ' <=' → logprob: -14.379088401794434
    6. ' =' → logprob: -14.379088401794434
    7. '=' → logprob: -15.379088401794434
    8. '1' → logprob: -16.254087448120117
    9. ' ' → logprob: -16.254087448120117
    10. '```' → logprob: -16.504087448120117

Token 106: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.048596687614917755
    2. '0' → logprob: -3.0485966205596924
    3. '1' → logprob: -11.923596382141113
    4. '<|end|>' → logprob: -13.423596382141113
    5. ' ' → logprob: -14.173596382141113
    6. '  ' → logprob: -16.11109733581543
    7. '```' → logprob: -16.48609733581543
    8. ' 
' → logprob: -16.86109733581543
    9. '<|end|>' → logprob: -17.29859733581543
    10. '   ' → logprob: -17.42359733581543

Token 107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002993544621858746
    2. ' ' → logprob: -8.125299453735352
    3. '1' → logprob: -12.750299453735352
    4. '۰' → logprob: -16.00029945373535
    5. '<|end|>' → logprob: -16.62529945373535
    6. '  ' → logprob: -17.43779945373535
    7. '```' → logprob: -17.50029945373535
    8. '   ' → logprob: -17.50029945373535
    9. ' ' → logprob: -17.68779945373535
    10. '

' → logprob: -17.68779945373535

Token 108: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16393990814685822
    2. ' and' → logprob: -1.9139399528503418
    3. ':
' → logprob: -6.663939952850342
    4. 'and' → logprob: -6.913939952850342
    5. ':return' → logprob: -6.913939952850342
    6. ' or' → logprob: -8.163939476013184
    7. '   ' → logprob: -9.163939476013184
    8. '<|end|>' → logprob: -10.538939476013184
    9. ' :' → logprob: -11.163939476013184
    10. '       ' → logprob: -12.538939476013184

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0713053941726685
    2. ' and' → logprob: -1.1963053941726685
    3. '   ' → logprob: -1.6963053941726685
    4. ':' → logprob: -1.8213053941726685
    5. '<|end|>' → logprob: -5.821305274963379
    6. ' ' → logprob: -6.071305274963379
    7. ':return' → logprob: -6.071305274963379
    8. 'and' → logprob: -7.321305274963379
    9. '    ' → logprob: -7.446305274963379
    10. ':
' → logprob: -7.946305274963379

Token 110: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.13329923152923584
    2. 'return' → logprob: -2.3832993507385254
    3. '   ' → logprob: -3.7582993507385254
    4. '       ' → logprob: -5.383299350738525
    5. '    ' → logprob: -6.008299350738525
    6. ' if' → logprob: -6.758299350738525
    7. ':return' → logprob: -7.383299350738525
    8. ' ' → logprob: -8.883298873901367
    9. 'if' (adapté à ' if') → logprob: -9.633298873901367
    10. '{return' → logprob: -10.633298873901367

Token 111: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.029752103611826897
    2. 'n' → logprob: -3.529752016067505
    3. ' ' → logprob: -14.279751777648926
    4. '	n' → logprob: -14.904751777648926
    5. '(n' → logprob: -15.404751777648926
    6. '_n' → logprob: -15.779751777648926
    7. ' (' → logprob: -16.029752731323242
    8. '   ' → logprob: -16.654752731323242
    9. ' ' → logprob: -16.654752731323242
    10. ')n' → logprob: -17.904752731323242

Token 112: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.026368457823991776
    2. '==' → logprob: -3.6513683795928955
    3. ' ' → logprob: -10.151368141174316
    4. '=' → logprob: -10.776368141174316
    5. ' =' → logprob: -12.151368141174316
    6. '0' → logprob: -13.901368141174316
    7. '   ' → logprob: -14.651368141174316
    8. ' ' → logprob: -14.776368141174316
    9. ')==' → logprob: -15.151368141174316
    10. '<|end|>' → logprob: -15.651368141174316

Token 113: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47407931089401245
    2. ' ' → logprob: -0.9740793108940125
    3. '<|end|>' → logprob: -13.724079132080078
    4. ' ' → logprob: -14.724079132080078
    5. '  ' → logprob: -14.849079132080078
    6. '   ' → logprob: -15.974079132080078
    7. '```' → logprob: -16.536579132080078
    8. ')' → logprob: -16.849079132080078
    9. ' 

' → logprob: -17.224079132080078
    10. '۰' → logprob: -17.599079132080078

Token 114: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '<|end|>' → logprob: -17.125123977661133
    4. '```' → logprob: -18.250123977661133
    5. '  ' → logprob: -18.375123977661133
    6. '   ' → logprob: -18.437623977661133
    7. ')' → logprob: -18.812623977661133
    8. '۰' → logprob: -18.875123977661133
    9. '    ' → logprob: -19.250123977661133
    10. '1' → logprob: -20.000123977661133

Token 115: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025485413148999214
    2. ':
' → logprob: -4.400485515594482
    3. '       ' → logprob: -4.775485515594482
    4. ':return' → logprob: -5.775485515594482
    5. '           ' → logprob: -6.650485515594482
    6. '   ' → logprob: -10.650485038757324
    7. ' and' → logprob: -11.025485038757324
    8. ',' → logprob: -12.150485038757324
    9. '               ' → logprob: -12.775485038757324
    10. ':
' → logprob: -13.275485038757324

Token 116: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4877369701862335
    2. '       ' → logprob: -0.9877369403839111
    3. '<|end|>' → logprob: -5.23773717880249
    4. ':return' → logprob: -5.61273717880249
    5. ':' → logprob: -6.11273717880249
    6. '\n' → logprob: -6.98773717880249
    7. ' return' → logprob: -7.61273717880249
    8. '   ' → logprob: -7.86273717880249
    9. '               ' → logprob: -9.112736701965332
    10. 'return' → logprob: -9.487736701965332

Token 117: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0628265142440796
    2. '               ' → logprob: -1.6878265142440796
    3. '           ' → logprob: -1.6878265142440796
    4. ' return' → logprob: -1.6878265142440796
    5. 'return' (adapté à ' return') → logprob: -2.312826633453369
    6. '   ' → logprob: -7.687826633453369
    7. ':return' → logprob: -8.937826156616211
    8. '	return' → logprob: -9.312826156616211
    9. '	       ' → logprob: -11.187826156616211
    10. '```' → logprob: -11.812826156616211

Token 118: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017048174049705267
    2. ' ' → logprob: -6.376704692840576
    3. '   ' → logprob: -13.001705169677734
    4. 'True' → logprob: -16.001705169677734
    5. '       ' → logprob: -16.126705169677734
    6. ' True' → logprob: -16.501705169677734
    7. '  ' → logprob: -17.751705169677734
    8. '0' → logprob: -17.876705169677734
    9. '           ' → logprob: -18.126705169677734
    10. '    ' → logprob: -19.001705169677734

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.625001907348633
    4. 'True' → logprob: -19.000001907348633
    5. '۱' → logprob: -20.125001907348633
    6. '  ' → logprob: -20.375001907348633
    7. '{' → logprob: -20.500001907348633
    8. '[' → logprob: -21.250001907348633
    9. '
' → logprob: -21.312501907348633
    10. '(' → logprob: -21.437501907348633

Token 120: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.614482045173645
    2. '       ' → logprob: -1.114482045173645
    3. '   ' → logprob: -2.4894819259643555
    4. '\n' → logprob: -3.6144819259643555
    5. '<|end|>' → logprob: -3.9894819259643555
    6. '           ' → logprob: -7.9894819259643555
    7. '    
' → logprob: -8.239481925964355
    8. ' else' → logprob: -8.364481925964355
    9. '	' → logprob: -8.489481925964355
    10. '' → logprob: -8.489481925964355

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5661855340003967
    2. '
' → logprob: -1.691185474395752
    3. '   ' → logprob: -1.816185474395752
    4. '<|end|>' → logprob: -2.566185474395752
    5. '\n' → logprob: -5.816185474395752
    6. '    
' → logprob: -6.441185474395752
    7. '    ' → logprob: -7.691185474395752
    8. ' else' → logprob: -7.691185474395752
    9. '<|end|>' → logprob: -7.941185474395752
    10. '	' → logprob: -8.06618595123291

Token 122: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.092180997133255
    2. '   ' → logprob: -2.5921809673309326
    3. '
' → logprob: -5.342181205749512
    4. ' else' → logprob: -6.342181205749512
    5. '	' → logprob: -6.592181205749512
    6. '    
' → logprob: -6.717181205749512
    7. '     ' → logprob: -6.967181205749512
    8. '    ' → logprob: -7.092181205749512
    9. '           ' → logprob: -7.592181205749512
    10. 'else' (adapté à ' else') → logprob: -8.092181205749512

Token 123: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06435678154230118
    2. ':' → logprob: -3.814356803894043
    3. '       ' → logprob: -3.939356803894043
    4. ':return' → logprob: -4.689356803894043
    5. ' return' → logprob: -5.564356803894043
    6. '   ' → logprob: -5.814356803894043
    7. '<|end|>' → logprob: -6.564356803894043
    8. '0' → logprob: -6.689356803894043
    9. 'return' → logprob: -7.689356803894043
    10. ':
' → logprob: -7.689356803894043

Token 124: '           ' (ID: 352)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09894239902496338
    2. '           ' → logprob: -2.598942279815674
    3. '       ' → logprob: -4.098942279815674
    4. ' ' → logprob: -5.973942279815674
    5. ' return' → logprob: -7.973942279815674
    6. 'return' → logprob: -8.473942756652832
    7. '   ' → logprob: -8.848942756652832
    8. '               ' → logprob: -11.473942756652832
    9. '     ' → logprob: -13.223942756652832
    10. '	       ' → logprob: -13.598942756652832

Token 125: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015047440538182855
    2. ' ' → logprob: -6.626504898071289
    3. 'return' (adapté à ' return') → logprob: -9.126504898071289
    4. '           ' → logprob: -10.001504898071289
    5. ' return' → logprob: -11.001504898071289
    6. '       ' → logprob: -12.376504898071289
    7. '   ' → logprob: -12.626504898071289
    8. '               ' → logprob: -15.251504898071289
    9. '     ' → logprob: -17.00150489807129
    10. '  ' → logprob: -17.50150489807129

Token 126: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005233763717114925
    2. ' ' → logprob: -5.2552337646484375
    3. ' ' → logprob: -18.005233764648438
    4. '   ' → logprob: -18.255233764648438
    5. '	' → logprob: -19.755233764648438
    6. '  ' → logprob: -20.255233764648438
    7. '۰' → logprob: -20.255233764648438
    8. '    ' → logprob: -21.380233764648438
    9. ' 
' → logprob: -21.880233764648438
    10. ' ' → logprob: -22.255233764648438

Token 127: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -17.500003814697266
    4. '۰' → logprob: -19.750003814697266
    5. ' ' → logprob: -20.125003814697266
    6. '  ' → logprob: -20.125003814697266
    7. '```' → logprob: -20.375003814697266
    8. '	' → logprob: -20.937503814697266
    9. '    ' → logprob: -21.000003814697266
    10. '       ' → logprob: -21.437503814697266

Token 128: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04340653866529465
    2. '
' → logprob: -3.2934064865112305
    3. '    
' → logprob: -5.5434064865112305
    4. '<|end|>' → logprob: -7.5434064865112305
    5. '       ' → logprob: -7.9184064865112305
    6. '   
' → logprob: -9.29340648651123
    7. '  ' → logprob: -9.66840648651123
    8. '\n' → logprob: -9.66840648651123
    9. '  
' → logprob: -10.16840648651123
    10. '    ' → logprob: -10.29340648651123

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07096654921770096
    2. '
' → logprob: -2.6959664821624756
    3. '    
' → logprob: -7.070966720581055
    4. '```' → logprob: -9.945966720581055
    5. '<|end|>' → logprob: -10.195966720581055
    6. '  
' → logprob: -10.445966720581055
    7. '\n' → logprob: -10.820966720581055
    8. ' if' → logprob: -11.820966720581055
    9. '   
' → logprob: -11.945966720581055
    10. '       ' → logprob: -12.195966720581055

Token 130: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.446448415517807
    2. 'count' → logprob: -1.4464484453201294
    3. 'ways' → logprob: -2.44644832611084
    4. 'total' → logprob: -3.69644832611084
    5. ' if' → logprob: -5.19644832611084
    6. ' ways' → logprob: -5.44644832611084
    7. '   ' → logprob: -6.57144832611084
    8. 'result' → logprob: -7.07144832611084
    9. ' count' → logprob: -7.44644832611084
    10. 'ans' → logprob: -8.69644832611084

Token 131: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.49690011143684387
    2. 'n' → logprob: -0.9969000816345215
    3. 'start' → logprob: -4.3719000816345215
    4. ' start' → logprob: -4.6219000816345215
    5. ' ' → logprob: -9.37190055847168
    6. '	n' → logprob: -12.24690055847168
    7. '   ' → logprob: -12.24690055847168
    8. '(n' → logprob: -13.49690055847168
    9. ' ' → logprob: -13.55940055847168
    10. '(start' → logprob: -13.87190055847168

Token 132: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0430021695792675
    2. '<' → logprob: -3.168002128601074
    3. ' ' → logprob: -13.418002128601074
    4. '<|end|>' → logprob: -13.918002128601074
    5. ' <=' → logprob: -15.543002128601074
    6. ' ' → logprob: -16.79300308227539
    7. '<int' → logprob: -16.91800308227539
    8. ' <
' → logprob: -17.04300308227539
    9. '[' → logprob: -17.41800308227539
    10. '<num' → logprob: -17.54300308227539

Token 133: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014167269691824913
    2. ' ' → logprob: -4.264167308807373
    3. 'pr' → logprob: -13.639166831970215
    4. 'k' → logprob: -14.389166831970215
    5. '   ' → logprob: -14.639166831970215
    6. 'start' → logprob: -15.014166831970215
    7. '2' → logprob: -15.264166831970215
    8. '1' → logprob: -15.639166831970215
    9. '  ' → logprob: -15.951666831970215
    10. ' primes' → logprob: -16.07666778564453

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. 'pr' → logprob: -16.50000762939453
    4. 'k' → logprob: -17.12500762939453
    5. '   ' → logprob: -17.12500762939453
    6. '```' → logprob: -18.00000762939453
    7. '  ' → logprob: -18.37500762939453
    8. 'start' → logprob: -18.81250762939453
    9. '۰' → logprob: -19.00000762939453
    10. 'or' → logprob: -19.06250762939453

Token 135: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.02867853082716465
    2. ':' → logprob: -3.6536784172058105
    3. '<|end|>' → logprob: -7.1536784172058105
    4. '   ' → logprob: -7.6536784172058105
    5. '       ' → logprob: -8.028678894042969
    6. ' and' → logprob: -8.528678894042969
    7. 'or' → logprob: -8.903678894042969
    8. ' ' → logprob: -9.153678894042969
    9. '	or' → logprob: -9.153678894042969
    10. ':
' → logprob: -9.153678894042969

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2702871859073639
    2. '   ' → logprob: -1.5202871561050415
    3. ' or' → logprob: -4.020287036895752
    4. '    ' → logprob: -9.89528751373291
    5. ' ' → logprob: -10.02028751373291
    6. ' return' → logprob: -10.27028751373291
    7. '	return' → logprob: -10.64528751373291
    8. '<|end|>' → logprob: -11.27028751373291
    9. '     ' → logprob: -11.39528751373291
    10. '	   ' → logprob: -11.52028751373291

Token 137: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9839140772819519
    2. '0' → logprob: -1.4839141368865967
    3. '       ' → logprob: -1.4839141368865967
    4. 'return' (adapté à ' return') → logprob: -1.8589141368865967
    5. ' return' → logprob: -4.233913898468018
    6. '	return' → logprob: -6.733913898468018
    7. ' ' → logprob: -7.358913898468018
    8. '1' → logprob: -8.358914375305176
    9. '           ' → logprob: -9.358914375305176
    10. '	' → logprob: -10.358914375305176

Token 138: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.061967913061380386
    2. ' ' → logprob: -2.8119678497314453
    3. ' ' → logprob: -15.686967849731445
    4. '   ' → logprob: -17.186967849731445
    5. '<|end|>' → logprob: -17.936967849731445
    6. '  ' → logprob: -18.061967849731445
    7. '۰' → logprob: -18.436967849731445
    8. '	' → logprob: -18.936967849731445
    9. '```' → logprob: -20.186967849731445
    10. '00' → logprob: -20.249467849731445

Token 139: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '۰' → logprob: -18.750001907348633
    4. '   ' → logprob: -19.250001907348633
    5. '00' → logprob: -20.375001907348633
    6. ' ' → logprob: -20.437501907348633
    7. '```' → logprob: -20.625001907348633
    8. '000' → logprob: -20.687501907348633
    9. '  ' → logprob: -21.187501907348633
    10. '０' → logprob: -21.562501907348633

Token 140: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0323457196354866
    2. '   ' → logprob: -3.532345771789551
    3. '    
' → logprob: -6.032345771789551
    4. ' 
' → logprob: -9.40734577178955
    5. '
' → logprob: -10.53234577178955
    6. '<|end|>' → logprob: -10.65734577178955
    7. '  
' → logprob: -10.90734577178955
    8. '

' → logprob: -11.78234577178955
    9. '   
' → logprob: -11.90734577178955
    10. ' for' → logprob: -12.28234577178955

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2200879454612732
    2. '
' → logprob: -1.720088005065918
    3. '    
' → logprob: -4.095088005065918
    4. ' for' → logprob: -7.470088005065918
    5. ' 
' → logprob: -7.720088005065918
    6. 'for' → logprob: -7.720088005065918
    7. '  
' → logprob: -9.220088005065918
    8. '   
' → logprob: -9.470088005065918
    9. '<|end|>' → logprob: -9.720088005065918
    10. 'n' → logprob: -10.470088005065918

Token 142: ' ways' (ID: 6984)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6461557149887085
    2. ' for' → logprob: -1.2711557149887085
    3. 'for' → logprob: -2.271155834197998
    4. ' if' → logprob: -3.271155834197998
    5. ' result' → logprob: -3.771155834197998
    6. 'if' → logprob: -4.521155834197998
    7. 'result' → logprob: -5.146155834197998
    8. '
' → logprob: -5.271155834197998
    9. '    
' → logprob: -5.896155834197998
    10. ' ' → logprob: -6.146155834197998

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005604511592537165
    2. '=' → logprob: -5.2556047439575195
    3. ' ' → logprob: -8.00560474395752
    4. ' +=' → logprob: -10.75560474395752
    5. ' =
' → logprob: -12.38060474395752
    6. '_' → logprob: -13.75560474395752
    7. ',' → logprob: -13.75560474395752
    8. ')' → logprob: -13.88060474395752
    9. '	' → logprob: -14.00560474395752
    10. ' =)' → logprob: -14.25560474395752

Token 144: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01603436842560768
    2. ' ' → logprob: -4.1410346031188965
    3. 'count' → logprob: -16.516035079956055
    4. '   ' → logprob: -17.516035079956055
    5. ' ' → logprob: -18.391035079956055
    6. '۰' → logprob: -18.766035079956055
    7. '  ' → logprob: -20.203535079956055
    8. 'sum' → logprob: -20.266035079956055
    9. '```' → logprob: -20.266035079956055
    10. ' count' → logprob: -20.391035079956055

Token 145: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. 'count' → logprob: -16.37500762939453
    4. '   ' → logprob: -17.62500762939453
    5. '```' → logprob: -18.43750762939453
    6. '{}' → logprob: -18.87500762939453
    7. '۰' → logprob: -18.87500762939453
    8. '  ' → logprob: -19.12500762939453
    9. '[]' → logprob: -19.25000762939453
    10. 'sum' → logprob: -19.50000762939453

Token 146: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00463945372030139
    2. '
' → logprob: -6.254639625549316
    3. ' for' → logprob: -6.254639625549316
    4. '	for' → logprob: -7.754639625549316
    5. 'for' → logprob: -8.254639625549316
    6. '<|end|>' → logprob: -9.879639625549316
    7. '    
' → logprob: -10.504639625549316
    8. ' ' → logprob: -12.754639625549316
    9. '       ' → logprob: -12.754639625549316
    10. '  ' → logprob: -13.129639625549316

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013016687706112862
    2. ' for' → logprob: -4.388016700744629
    3. 'for' → logprob: -7.888016700744629
    4. '<|end|>' → logprob: -9.388016700744629
    5. '	for' → logprob: -10.263016700744629
    6. '
' → logprob: -12.513016700744629
    7. '    
' → logprob: -12.513016700744629
    8. ' ' → logprob: -13.263016700744629
    9. '  ' → logprob: -13.763016700744629
    10. '       ' → logprob: -14.263016700744629

Token 148: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.9292415749514475e-05
    2. ' for' → logprob: -10.250039100646973
    3. '   ' → logprob: -12.500039100646973
    4. '	for' → logprob: -16.50004005432129
    5. 'fo' → logprob: -18.87504005432129
    6. 'i' → logprob: -20.12504005432129
    7. '
' → logprob: -21.00004005432129
    8. '```' → logprob: -21.00004005432129
    9. '  ' → logprob: -21.37504005432129
    10. ' ' → logprob: -21.37504005432129

Token 149: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3067173361778259
    2. ' i' → logprob: -1.5567173957824707
    3. 'j' → logprob: -3.5567173957824707
    4. 'index' → logprob: -4.556717395782471
    5. ' j' → logprob: -5.056717395782471
    6. 'idx' → logprob: -5.431717395782471
    7. ' idx' → logprob: -5.931717395782471
    8. ' index' → logprob: -7.056717395782471
    9. '   ' → logprob: -11.306716918945312
    10. ' ' → logprob: -12.056716918945312

Token 150: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005259372293949127
    2. 'in' → logprob: -5.3802595138549805
    3. ' ' → logprob: -7.5052595138549805
    4. '  ' → logprob: -9.88025951385498
    5. ',' → logprob: -11.38025951385498
    6. '   ' → logprob: -12.00525951385498
    7. 'range' → logprob: -12.13025951385498
    8. ' range' → logprob: -12.25525951385498
    9. '<|end|>' → logprob: -12.75525951385498
    10. '    ' → logprob: -13.38025951385498

Token 151: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234713666141033
    2. ' range' → logprob: -5.255234718322754
    3. ' ' → logprob: -15.380234718322754
    4. 'ange' → logprob: -15.380234718322754
    5. '   ' → logprob: -15.630234718322754
    6. '(range' → logprob: -16.005233764648438
    7. '	range' → logprob: -16.380233764648438
    8. '  ' → logprob: -17.755233764648438
    9. 'r' → logprob: -18.005233764648438
    10. 'rang' → logprob: -18.130233764648438

Token 152: '(start' (ID: 20008)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.20692981779575348
    2. '(start' → logprob: -1.7069298028945923
    3. ' start' → logprob: -5.206929683685303
    4. '	start' → logprob: -12.081930160522461
    5. ',start' → logprob: -12.331930160522461
    6. '=start' → logprob: -12.331930160522461
    7. '[start' → logprob: -12.456930160522461
    8. '(' → logprob: -12.956930160522461
    9. ':start' → logprob: -13.706930160522461
    10. 'star' → logprob: -14.831930160522461

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012192860012874007
    2. ',len' → logprob: -6.751219272613525
    3. ' ,' → logprob: -10.001219749450684
    4. '(len' → logprob: -12.751219749450684
    5. '‌,' → logprob: -15.376219749450684
    6. 'len' → logprob: -15.501219749450684
    7. ',length' → logprob: -16.126218795776367
    8. ' len' → logprob: -16.376218795776367
    9. '(),' → logprob: -17.001218795776367
    10. '=len' → logprob: -17.251218795776367

Token 154: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0011708177626132965
    2. ' len' → logprob: -6.751170635223389
    3. '(len' → logprob: -15.001171112060547
    4. '   ' → logprob: -16.751171112060547
    5. ',len' → logprob: -16.876171112060547
    6. '[len' → logprob: -17.126171112060547
    7. '<len' → logprob: -17.501171112060547
    8. '=len' → logprob: -18.126171112060547
    9. '	len' → logprob: -18.251171112060547
    10. 'length' → logprob: -18.251171112060547

Token 155: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.12500286102295
    3. 'pr' → logprob: -14.12500286102295
    4. ')' → logprob: -17.875001907348633
    5. '	pr' → logprob: -18.125001907348633
    6. '(pl' → logprob: -19.625001907348633
    7. ' (' → logprob: -20.625001907348633
    8. '(
' → logprob: -20.750001907348633
    9. '/pr' → logprob: -21.250001907348633
    10. ' primes' → logprob: -21.500001907348633

Token 156: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.0002286886883666739
    2. 'im' → logprob: -9.500228881835938
    3. 'mes' → logprob: -10.125228881835938
    4. 'pr' → logprob: -10.875228881835938
    5. 'ime' → logprob: -11.375228881835938
    6. '   ' → logprob: -11.375228881835938
    7. 'r' → logprob: -11.937728881835938
    8. 'omes' → logprob: -12.125228881835938
    9. '```' → logprob: -12.562728881835938
    10. ')' → logprob: -12.687728881835938

Token 157: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.48139023780822754
    2. '):' → logprob: -0.9813902378082275
    3. ')):
' → logprob: -5.356389999389648
    4. '))' → logprob: -6.856389999389648
    5. ')' → logprob: -6.981389999389648
    6. '):
' → logprob: -7.731389999389648
    7. '   ' → logprob: -10.106389999389648
    8. ' ):' → logprob: -10.231389999389648
    9. ')):
' → logprob: -10.856389999389648
    10. '>):' → logprob: -11.356389999389648

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001252134912647307
    2. '   ' → logprob: -7.001252174377441
    3. ' ways' → logprob: -8.876252174377441
    4. '    ' → logprob: -9.376252174377441
    5. 'ways' → logprob: -10.376252174377441
    6. '      ' → logprob: -10.626252174377441
    7. '     ' → logprob: -11.126252174377441
    8. ' ' → logprob: -11.501252174377441
    9. ',' → logprob: -11.751252174377441
    10. ')' → logprob: -12.126252174377441

Token 159: ' if' (ID: 538)
  Prédit: ' ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.8094680905342102
    2. ' if' → logprob: -0.9344680905342102
    3. 'ways' → logprob: -2.6844680309295654
    4. 'if' (adapté à ' if') → logprob: -2.8094680309295654
    5. '       ' → logprob: -3.4344680309295654
    6. '   ' → logprob: -7.3094682693481445
    7. 'way' → logprob: -8.684468269348145
    8. ' p' → logprob: -9.434468269348145
    9. 'p' → logprob: -9.684468269348145
    10. 'pr' → logprob: -9.809468269348145

Token 160: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.39798757433891296
    2. ' primes' → logprob: -1.1479876041412354
    3. 'n' → logprob: -4.897987365722656
    4. ' n' → logprob: -5.772987365722656
    5. ' pr' → logprob: -8.522987365722656
    6. '   ' → logprob: -8.772987365722656
    7. '	pr' → logprob: -9.522987365722656
    8. ' ' → logprob: -11.522987365722656
    9. '(pr' → logprob: -11.772987365722656
    10. 'prime' → logprob: -12.147987365722656

Token 161: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -13.12500286102295
    3. '[I' → logprob: -14.12500286102295
    4. 'i' → logprob: -16.000003814697266
    5. ' [' → logprob: -16.625003814697266
    6. '[
' → logprob: -17.000003814697266
    7. '\[' → logprob: -17.000003814697266
    8. ')[' → logprob: -17.250003814697266
    9. '```' → logprob: -17.375003814697266
    10. ')' → logprob: -17.500003814697266

Token 162: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4899093508720398
    2. ' <=' → logprob: -1.1149094104766846
    3. '>' → logprob: -2.9899094104766846
    4. '<=' → logprob: -4.7399091720581055
    5. ')' → logprob: -9.614909172058105
    6. '">' → logprob: -9.739909172058105
    7. ' ' → logprob: -9.739909172058105
    8. '}' → logprob: -10.739909172058105
    9. ']' → logprob: -10.864909172058105
    10. ' ' → logprob: -10.864909172058105

Token 163: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4649061858654022
    2. ' <=' → logprob: -1.0899062156677246
    3. '>' → logprob: -3.5899062156677246
    4. '<=' → logprob: -4.839906215667725
    5. '">' → logprob: -11.214905738830566
    6. 'le' → logprob: -11.964905738830566
    7. ' ' → logprob: -12.464905738830566
    8. '*' → logprob: -12.464905738830566
    9. '```' → logprob: -12.589905738830566
    10. ' ' → logprob: -12.714905738830566

Token 164: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009764472022652626
    2. ' n' → logprob: -4.634764671325684
    3. '	n' → logprob: -11.759764671325684
    4. 'num' → logprob: -15.384764671325684
    5. '_n' → logprob: -16.134763717651367
    6. ')n' → logprob: -16.509763717651367
    7. '0' → logprob: -16.634763717651367
    8. '=n' → logprob: -16.884763717651367
    9. '(n' → logprob: -17.134763717651367
    10. '   ' → logprob: -17.259763717651367

Token 165: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4765958786010742
    2. ':' → logprob: -0.9765958786010742
    3. '       ' → logprob: -6.226595878601074
    4. '           ' → logprob: -7.851595878601074
    5. '):
' → logprob: -9.851595878601074
    6. ':return' → logprob: -10.101595878601074
    7. ':
' → logprob: -10.601595878601074
    8. '   ' → logprob: -11.476595878601074
    9. ' :
' → logprob: -12.351595878601074
    10. '):' → logprob: -12.851595878601074

Token 166: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6481783390045166
    2. ':' → logprob: -1.0231783390045166
    3. ':
' → logprob: -2.1481783390045166
    4. '       ' → logprob: -7.2731781005859375
    5. ' break' → logprob: -9.773178100585938
    6. 'break' → logprob: -10.648178100585938
    7. '          ' → logprob: -10.898178100585938
    8. '               ' → logprob: -11.898178100585938
    9. '):
' → logprob: -12.023178100585938
    10. '		' → logprob: -12.023178100585938

Token 167: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.614737868309021
    2. '           ' → logprob: -1.364737868309021
    3. ' break' → logprob: -1.614737868309021
    4. '       ' → logprob: -5.9897379875183105
    5. '	break' → logprob: -6.4897379875183105
    6. '               ' → logprob: -7.3647379875183105
    7. '   ' → logprob: -9.114737510681152
    8. '_break' → logprob: -10.614737510681152
    9. '```' → logprob: -11.614737510681152
    10. '
' → logprob: -12.239737510681152

Token 168: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03002156689763069
    2. '
' → logprob: -3.5300216674804688
    3. '        
' → logprob: -9.030021667480469
    4. '<|end|>' → logprob: -10.280021667480469
    5. '
' → logprob: -10.905021667480469
    6. 'ways' → logprob: -11.280021667480469
    7. ',' → logprob: -11.280021667480469
    8. '\n' → logprob: -11.280021667480469
    9. '' → logprob: -11.655021667480469
    10. ' ways' → logprob: -11.905021667480469

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010209545493125916
    2. '
' → logprob: -4.635209560394287
    3. 'ways' → logprob: -8.510209083557129
    4. ' ways' → logprob: -9.010209083557129
    5. '        
' → logprob: -9.635209083557129
    6. '   ' → logprob: -10.260209083557129
    7. '           ' → logprob: -12.510209083557129
    8. '
' → logprob: -12.510209083557129
    9. '<|end|>' → logprob: -12.760209083557129
    10. ',' → logprob: -12.885209083557129

Token 170: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' (adapté à ' ways') → logprob: -0.09786795824766159
    2. ' ways' → logprob: -2.847867965698242
    3. '       ' → logprob: -3.347867965698242
    4. '   ' → logprob: -10.597867965698242
    5. '
' → logprob: -10.597867965698242
    6. 'way' → logprob: -11.222867965698242
    7. '           ' → logprob: -11.222867965698242
    8. '        
' → logprob: -11.847867965698242
    9. 'WAYS' → logprob: -12.472867965698242
    10. 'if' → logprob: -13.097867965698242

Token 171: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03367370739579201
    2. '+=' → logprob: -3.4086737632751465
    3. ']+=' → logprob: -11.658673286437988
    4. '+' → logprob: -11.908673286437988
    5. '   ' → logprob: -12.408673286437988
    6. '	' → logprob: -12.783673286437988
    7. '+=(' → logprob: -13.033673286437988
    8. ' ' → logprob: -13.783673286437988
    9. '```' → logprob: -14.033673286437988
    10. ' ' → logprob: -14.658673286437988

Token 172: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00861456897109747
    2. ' count' → logprob: -4.758614540100098
    3. '   ' → logprob: -17.508615493774414
    4. '(count' → logprob: -18.508615493774414
    5. '	count' → logprob: -19.508615493774414
    6. ' ' → logprob: -19.508615493774414
    7. '    ' → logprob: -21.758615493774414
    8. '$count' → logprob: -21.883615493774414
    9. '_count' → logprob: -22.133615493774414
    10. '```' → logprob: -22.258615493774414

Token 173: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '(n' → logprob: -16.875
    3. '```' → logprob: -20.125
    4. '_way' → logprob: -20.375
    5. 'Ways' → logprob: -21.125
    6. '_(' → logprob: -21.5
    7. ' ways' → logprob: -22.625
    8. '(' → logprob: -22.875
    9. ' _' → logprob: -23.375
    10. '\' → logprob: -23.375

Token 174: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.012653034180402756
    2. '_' → logprob: -4.38765287399292
    3. '(n' → logprob: -9.262653350830078
    4. ' ways' → logprob: -10.762653350830078
    5. 'way' → logprob: -11.387653350830078
    6. 'Ways' → logprob: -12.262653350830078
    7. 'n' → logprob: -12.387653350830078
    8. 'WAYS' → logprob: -13.137653350830078
    9. '```' → logprob: -14.012653350830078
    10. '_way' → logprob: -14.262653350830078

Token 175: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005252372473478317
    2. '(' → logprob: -5.255252361297607
    3. '(
' → logprob: -11.130252838134766
    4. '(num' → logprob: -13.005252838134766
    5. ' (' → logprob: -13.505252838134766
    6. '(

' → logprob: -15.755252838134766
    7. '(
' → logprob: -17.255252838134766
    8. '```' → logprob: -17.255252838134766
    9. '((' → logprob: -18.380252838134766
    10. '(i' → logprob: -18.630252838134766

Token 176: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07805824279785156
    2. '-' → logprob: -2.7030582427978516
    3. '-pr' → logprob: -4.828058242797852
    4. ',' → logprob: -10.328058242797852
    5. '-k' → logprob: -11.453058242797852
    6. '   ' → logprob: -11.703058242797852
    7. '(pr' → logprob: -11.828058242797852
    8. '-p' → logprob: -12.078058242797852
    9. 'pr' → logprob: -12.578058242797852
    10. ' ' → logprob: -12.703058242797852

Token 177: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.06200153008103371
    2. ' primes' → logprob: -2.8120014667510986
    3. ' pr' → logprob: -11.31200122833252
    4. 'prime' → logprob: -11.56200122833252
    5. '(pr' → logprob: -12.31200122833252
    6. '   ' → logprob: -12.68700122833252
    7. '	pr' → logprob: -13.81200122833252
    8. '       ' → logprob: -14.18700122833252
    9. ' ' → logprob: -14.18700122833252
    10. ' prime' → logprob: -14.81200122833252

Token 178: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0564331205387134e-05
    2. '[' → logprob: -11.50001049041748
    3. 'i' → logprob: -15.87501049041748
    4. 's' → logprob: -16.500011444091797
    5. '[j' → logprob: -17.125011444091797
    6. ' [' → logprob: -17.125011444091797
    7. '```' → logprob: -17.500011444091797
    8. '   ' → logprob: -18.250011444091797
    9. '[I' → logprob: -18.250011444091797
    10. '[start' → logprob: -18.375011444091797

Token 179: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037740718107670546
    2. ' ,' → logprob: -8.125377655029297
    3. '   ' → logprob: -10.625377655029297
    4. ',i' → logprob: -11.125377655029297
    5. '[i' → logprob: -11.125377655029297
    6. ',k' → logprob: -11.500377655029297
    7. '`,' → logprob: -12.375377655029297
    8. '],' → logprob: -12.625377655029297
    9. '‌,' → logprob: -13.250377655029297
    10. 's' → logprob: -13.625377655029297

Token 180: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4740808606147766
    2. ' k' → logprob: -0.9740808606147766
    3. '   ' → logprob: -13.474081039428711
    4. '    ' → logprob: -14.224081039428711
    5. '	k' → logprob: -14.224081039428711
    6. '```' → logprob: -15.474081039428711
    7. 'def' → logprob: -15.599081039428711
    8. ',' → logprob: -15.724081039428711
    9. ' ' → logprob: -15.724081039428711
    10. '(k' → logprob: -15.974081039428711

Token 181: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12767522037029266
    2. '-' → logprob: -2.1276752948760986
    3. ',' → logprob: -7.2526750564575195
    4. ' ,' → logprob: -10.75267505645752
    5. ' ' → logprob: -11.37767505645752
    6. '   ' → logprob: -12.87767505645752
    7. '-,' → logprob: -13.87767505645752
    8. ' -,' → logprob: -14.50267505645752
    9. '1' → logprob: -14.75267505645752
    10. '  ' → logprob: -15.12767505645752

Token 182: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005536287208087742
    2. ' ' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.750554084777832
    4. '```' → logprob: -16.125553131103516
    5. '<|end|>' → logprob: -16.875553131103516
    6. '       ' → logprob: -17.750553131103516
    7. '    ' → logprob: -17.875553131103516
    8. '  ' → logprob: -18.125553131103516
    9. ')' → logprob: -18.250553131103516
    10. '           ' → logprob: -18.250553131103516

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '<|end|>' → logprob: -16.750001907348633
    4. '   ' → logprob: -17.625001907348633
    5. '```' → logprob: -17.625001907348633
    6. '...' → logprob: -19.562501907348633
    7. ')' → logprob: -19.687501907348633
    8. '  ' → logprob: -20.187501907348633
    9. '           ' → logprob: -20.375001907348633
    10. '۱' → logprob: -20.437501907348633

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001342903997283429
    2. '(pr' → logprob: -9.375134468078613
    3. ' ,' → logprob: -10.000134468078613
    4. 'pr' → logprob: -13.875134468078613
    5. '   ' → logprob: -14.000134468078613
    6. ',i' → logprob: -14.500134468078613
    7. ',
' → logprob: -14.625134468078613
    8. '`,' → logprob: -15.125134468078613
    9. ')' → logprob: -15.375134468078613
    10. '',' → logprob: -15.750134468078613

Token 185: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.06199020519852638
    2. ' primes' → logprob: -2.811990261077881
    3. ' pr' → logprob: -11.936989784240723
    4. '(pr' → logprob: -11.936989784240723
    5. '   ' → logprob: -12.936989784240723
    6. 'prime' → logprob: -13.061989784240723
    7. '	pr' → logprob: -13.186989784240723
    8. ',' → logprob: -14.436989784240723
    9. '_pr' → logprob: -14.561989784240723
    10. ' ' → logprob: -14.936989784240723

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.051066520740278e-05
    2. ',i' → logprob: -10.125060081481934
    3. ' ,' → logprob: -10.875060081481934
    4. '   ' → logprob: -14.500060081481934
    5. '[i' → logprob: -14.750060081481934
    6. '‌,' → logprob: -15.875060081481934
    7. 'i' → logprob: -16.37506103515625
    8. '(i' → logprob: -17.25006103515625
    9. ')' → logprob: -17.25006103515625
    10. '),' → logprob: -17.37506103515625

Token 187: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16022716462612152
    2. ' i' → logprob: -1.9102271795272827
    3. '	i' → logprob: -13.660226821899414
    4. '   ' → logprob: -14.035226821899414
    5. '(i' → logprob: -14.910226821899414
    6. '{i' → logprob: -15.910226821899414
    7. ')' → logprob: -16.035226821899414
    8. ' ' → logprob: -16.035226821899414
    9. ')i' → logprob: -16.035226821899414
    10. '[i' → logprob: -16.410226821899414

Token 188: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07229006290435791
    2. ' +' → logprob: -2.9472899436950684
    3. ')' → logprob: -4.072289943695068
    4. '+)' → logprob: -8.697290420532227
    5. ' )' → logprob: -10.447290420532227
    6. '   ' → logprob: -11.822290420532227
    7. ')
' → logprob: -12.322290420532227
    8. '+
' → logprob: -12.822290420532227
    9. '1' → logprob: -13.447290420532227
    10. '+i' → logprob: -13.947290420532227

Token 189: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ')' → logprob: -12.750005722045898
    3. ' ' → logprob: -13.125005722045898
    4. '0' → logprob: -15.875005722045898
    5. '```' → logprob: -16.0000057220459
    6. '   ' → logprob: -16.8750057220459
    7. '`)' → logprob: -18.8750057220459
    8. '  ' → logprob: -18.8750057220459
    9. ')
' → logprob: -19.4375057220459
    10. '``' → logprob: -19.4375057220459

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.849109119386412e-06
    2. '0' → logprob: -11.875009536743164
    3. ' ' → logprob: -13.000009536743164
    4. ')' → logprob: -15.375009536743164
    5. '```' → logprob: -15.375009536743164
    6. '   ' → logprob: -17.750009536743164
    7. ')
' → logprob: -18.187509536743164
    8. '``' → logprob: -18.437509536743164
    9. '`' → logprob: -18.750009536743164
    10. '１' → logprob: -19.062509536743164

Token 191: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0067190444096922874
    2. ')
' → logprob: -5.00671911239624
    3. '   ' → logprob: -12.756718635559082
    4. ')return' → logprob: -15.006718635559082
    5. ' )' → logprob: -15.256718635559082
    6. ')
' → logprob: -15.631718635559082
    7. ')

' → logprob: -16.2567195892334
    8. ' ' → logprob: -17.7567195892334
    9. '       ' → logprob: -18.0067195892334
    10. ' )
' → logprob: -18.2567195892334

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011975488450843841
    2. '
' → logprob: -9.875120162963867
    3. 'return' → logprob: -9.875120162963867
    4. ' return' → logprob: -11.125120162963867
    5. '	return' → logprob: -13.750120162963867
    6. '    
' → logprob: -14.000120162963867
    7. '       ' → logprob: -16.000120162963867
    8. '```' → logprob: -17.250120162963867
    9. ' ' → logprob: -17.375120162963867
    10. '  ' → logprob: -17.500120162963867

Token 193: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12773501873016357
    2. 'return' (adapté à ' return') → logprob: -2.127735137939453
    3. ' return' → logprob: -7.127735137939453
    4. ' ' → logprob: -13.252735137939453
    5. '	return' → logprob: -14.127735137939453
    6. '  ' → logprob: -14.377735137939453
    7. '```' → logprob: -14.627735137939453
    8. '
' → logprob: -15.252735137939453
    9. '       ' → logprob: -15.502735137939453
    10. '    
' → logprob: -16.002735137939453

Token 194: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.1002294272184372
    2. ' ways' → logprob: -2.350229501724243
    3. 'way' → logprob: -10.725229263305664
    4. ' way' → logprob: -14.725229263305664
    5. 'Ways' → logprob: -15.350229263305664
    6. ' ' → logprob: -16.100229263305664
    7. 'WAYS' → logprob: -16.350229263305664
    8. '0' → logprob: -18.225229263305664
    9. ' ' → logprob: -18.600229263305664
    10. 'w' → logprob: -18.850229263305664

Token 195: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03923807293176651
    2. '

' → logprob: -3.7892379760742188
    3. '
' → logprob: -4.664237976074219
    4. '<|end|>' → logprob: -5.164237976074219
    5. 'n' → logprob: -8.289237976074219
    6. '```' → logprob: -9.164237976074219
    7. '  
' → logprob: -9.664237976074219
    8. '(n' → logprob: -9.664237976074219
    9. '(def' → logprob: -10.289237976074219
    10. '<|end|>' → logprob: -10.539237976074219

Token 196: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011920140823349357
    2. 'n' → logprob: -6.751192092895508
    3. 'limit' → logprob: -11.251192092895508
    4. 't' → logprob: -12.126192092895508
    5. 'num' → logprob: -13.501192092895508
    6. 'print' → logprob: -13.626192092895508
    7. 'if' → logprob: -14.751192092895508
    8. '```' → logprob: -16.126192092895508
    9. 'ndef' → logprob: -16.626192092895508
    10. ' def' → logprob: -17.001192092895508

Token 197: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8937012553215027
    2. 'count' → logprob: -1.3937013149261475
    3. 'main' → logprob: -1.5187013149261475
    4. ' count' → logprob: -2.2687013149261475
    5. 'num' → logprob: -5.143701076507568
    6. ' number' → logprob: -5.268701076507568
    7. 'number' → logprob: -5.393701076507568
    8. 'ways' → logprob: -6.768701076507568
    9. ' num' → logprob: -6.768701076507568
    10. ' prime' → logprob: -7.518701076507568

Token 198: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0004713066737167537
    2. '(' → logprob: -7.750471115112305
    3. ' ():' → logprob: -10.625471115112305
    4. '()' → logprob: -12.125471115112305
    5. '():
' → logprob: -12.500471115112305
    6. '(:' → logprob: -12.750471115112305
    7. '_' → logprob: -13.375471115112305
    8. ':' → logprob: -13.625471115112305
    9. '(":' → logprob: -14.250471115112305
    10. '()>' → logprob: -15.375471115112305

Token 199: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05133663862943649
    2. '   ' → logprob: -3.5513365268707275
    3. ' limit' → logprob: -4.426336765289307
    4. 'n' → logprob: -4.801336765289307
    5. ' import' → logprob: -6.926336765289307
    6. ' try' → logprob: -9.426336288452148
    7. 'limit' → logprob: -9.926336288452148
    8. 'import' → logprob: -10.051336288452148
    9. ' input' → logprob: -11.801336288452148
    10. '	n' → logprob: -12.426336288452148

Token 200: ' primes' (ID: 104042)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2624681293964386
    2. 'n' → logprob: -1.8874680995941162
    3. ' limit' → logprob: -2.762468099594116
    4. 'limit' → logprob: -5.012468338012695
    5. ' t' → logprob: -5.387468338012695
    6. 't' → logprob: -6.262468338012695
    7. ' import' → logprob: -6.262468338012695
    8. ' T' → logprob: -7.762468338012695
    9. '   ' → logprob: -7.762468338012695
    10. 'import' → logprob: -8.262468338012695

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009311101748608053
    2. '=' → logprob: -7.000931262969971
    3. ',' → logprob: -11.375930786132812
    4. '_limit' → logprob: -12.375930786132812
    5. ' ' → logprob: -14.000930786132812
    6. 'limit' → logprob: -14.500930786132812
    7. '   ' → logprob: -14.875930786132812
    8. '_' → logprob: -15.250930786132812
    9. ' ,' → logprob: -15.250930786132812
    10. ' =)' → logprob: -15.375930786132812

Token 202: ' generate' (ID: 10419)
  Prédit: ' generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' generate' → logprob: -0.575940728187561
    2. 'generate' → logprob: -0.825940728187561
    3. '(generate' → logprob: -14.07594108581543
    4. ' ' → logprob: -15.07594108581543
    5. '[]' → logprob: -16.32594108581543
    6. '_generate' → logprob: -16.70094108581543
    7. '.generate' → logprob: -16.95094108581543
    8. '  ' → logprob: -17.57594108581543
    9. ' generates' → logprob: -18.20094108581543
    10. '   ' → logprob: -18.82594108581543

Token 203: '_pr' (ID: 18177)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0008818074711598456
    2. '_pr' → logprob: -7.125881671905518
    3. '(' → logprob: -10.000882148742676
    4. 'pr' → logprob: -10.500882148742676
    5. '_(' → logprob: -13.125882148742676
    6. '```' → logprob: -14.125882148742676
    7. '(_' → logprob: -14.250882148742676
    8. 's' → logprob: -15.125882148742676
    9. ' _' → logprob: -15.375882148742676
    10. '\' → logprob: -15.500882148742676

Token 204: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.00020354038861114532
    2. '   ' → logprob: -9.875203132629395
    3. '```' → logprob: -10.875203132629395
    4. 'ime' → logprob: -10.875203132629395
    5. '[' → logprob: -11.250203132629395
    6. 'omes' → logprob: -11.625203132629395
    7. 'ines' → logprob: -11.750203132629395
    8. 'im' → logprob: -12.125203132629395
    9. '_' → logprob: -12.312703132629395
    10. '#' → logprob: -12.312703132629395

Token 205: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.534558552724775e-05
    2. '100' → logprob: -10.625025749206543
    3. ' (' → logprob: -14.875025749206543
    4. '(int' → logprob: -15.250025749206543
    5. '50' → logprob: -15.500025749206543
    6. '(
' → logprob: -16.000024795532227
    7. '(n' → logprob: -16.750024795532227
    8. '((' → logprob: -17.375024795532227
    9. '(limit' → logprob: -17.875024795532227
    10. ' ' → logprob: -18.125024795532227

Token 206: '112' (ID: 12307)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.2736288905143738
    2. '50' → logprob: -1.5236289501190186
    3. '30' → logprob: -4.5236287117004395
    4. '20' → logprob: -5.3986287117004395
    5. ' ' → logprob: -5.6486287117004395
    6. '200' → logprob: -7.3986287117004395
    7. '25' → logprob: -7.6486287117004395
    8. '500' → logprob: -7.8986287117004395
    9. '300' → logprob: -8.148629188537598
    10. 'n' → logprob: -8.523629188537598

Token 207: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014276175061240792
    2. '0' → logprob: -6.87642765045166
    3. '6' → logprob: -8.62642765045166
    4. '3' → logprob: -9.75142765045166
    5. '5' → logprob: -9.75142765045166
    6. ')
' → logprob: -11.12642765045166
    7. '7' → logprob: -11.25142765045166
    8. '2' → logprob: -11.37642765045166
    9. '9' → logprob: -11.87642765045166
    10. ')#' → logprob: -12.25142765045166

Token 208: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004958406207151711
    2. ')
' → logprob: -7.625495910644531
    3. ' )' → logprob: -12.125495910644531
    4. ')

' → logprob: -13.625495910644531
    5. ')
' → logprob: -14.000495910644531
    6. ',' → logprob: -16.37549591064453
    7. '   ' → logprob: -16.62549591064453
    8. '))' → logprob: -16.87549591064453
    9. '),' → logprob: -17.75049591064453
    10. ' )
' → logprob: -18.12549591064453

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19918511807918549
    2. 'k' → logprob: -2.8241851329803467
    3. ' k' → logprob: -3.3241851329803467
    4. ' n' → logprob: -3.9491851329803467
    5. 'n' → logprob: -4.074184894561768
    6. 'import' → logprob: -4.199184894561768
    7. 'for' → logprob: -4.449184894561768
    8. ' while' → logprob: -4.824184894561768
    9. ' for' → logprob: -5.199184894561768
    10. 'while' → logprob: -5.199184894561768

Token 210: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.6643997430801392
    2. ' while' → logprob: -1.1643997430801392
    3. 'n' → logprob: -2.6643996238708496
    4. 'import' → logprob: -3.1643996238708496
    5. ' n' → logprob: -4.03939962387085
    6. 'k' → logprob: -4.16439962387085
    7. ' import' → logprob: -4.66439962387085
    8. 't' → logprob: -5.16439962387085
    9. '   ' → logprob: -5.53939962387085
    10. ' t' → logprob: -5.66439962387085

Token 211: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.1269380897283554
    2. 'True' → logprob: -2.1269381046295166
    3. '(True' → logprob: -11.626937866210938
    4. ' Tru' → logprob: -14.501937866210938
    5. '=True' → logprob: -15.001937866210938
    6. '1' → logprob: -16.126937866210938
    7. 'Tr' → logprob: -16.751937866210938
    8. ' ' → logprob: -17.501937866210938
    9. '   ' → logprob: -18.126937866210938
    10. ' ' → logprob: -18.876937866210938

Token 212: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0039872159250080585
    2. ':
' → logprob: -5.6289873123168945
    3. ',' → logprob: -8.753987312316895
    4. '       ' → logprob: -9.003987312316895
    5. '   ' → logprob: -9.378987312316895
    6. ' :' → logprob: -12.003987312316895
    7. '():' → logprob: -12.253987312316895
    8. '.' → logprob: -13.128987312316895
    9. '():
' → logprob: -13.503987312316895
    10. '):' → logprob: -13.628987312316895

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007140501867979765
    2. ' try' → logprob: -5.132140636444092
    3. '   ' → logprob: -7.007140636444092
    4. 'try' → logprob: -8.632140159606934
    5. ' line' → logprob: -9.882140159606934
    6. '    ' → logprob: -11.132140159606934
    7. '      ' → logprob: -11.632140159606934
    8. ' n' → logprob: -11.632140159606934
    9. ' input' → logprob: -11.757140159606934
    10. 'n' → logprob: -12.007140159606934

Token 214: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.42860373854637146
    2. 'line' (adapté à ' line') → logprob: -1.8036037683486938
    3. 'try' → logprob: -2.4286036491394043
    4. ' try' → logprob: -2.5536036491394043
    5. '   ' → logprob: -4.428603649139404
    6. 'n' → logprob: -5.928603649139404
    7. 's' → logprob: -6.803603649139404
    8. ' n' → logprob: -6.928603649139404
    9. 'input' → logprob: -8.178604125976562
    10. ' inp' → logprob: -8.303604125976562

Token 215: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008615754544734955
    2. '=' → logprob: -4.758615970611572
    3. ' ' → logprob: -14.008615493774414
    4. 's' → logprob: -15.883615493774414
    5. '_' → logprob: -16.633615493774414
    6. ' =
' → logprob: -16.758615493774414
    7. '   ' → logprob: -17.258615493774414
    8. ':' → logprob: -17.383615493774414
    9. '.' → logprob: -17.508615493774414
    10. ' ' → logprob: -17.633615493774414

Token 216: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931471824645996
    2. ' input' → logprob: -0.6931471824645996
    3. '=input' → logprob: -17.568147659301758
    4. '(input' → logprob: -19.193147659301758
    5. '	input' → logprob: -19.568147659301758
    6. ' ' → logprob: -19.818147659301758
    7. '_input' → logprob: -20.443147659301758
    8. '   ' → logprob: -20.943147659301758
    9. '```' → logprob: -21.568147659301758
    10. '<input' → logprob: -21.818147659301758

Token 217: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00032163821742869914
    2. '().' → logprob: -8.125321388244629
    3. '(' → logprob: -10.875321388244629
    4. '()
' → logprob: -13.125321388244629
    5. '()

' → logprob: -13.750321388244629
    6. '()>' → logprob: -14.125321388244629
    7. ' ()' → logprob: -14.500321388244629
    8. '()</' → logprob: -14.875321388244629
    9. '()">' → logprob: -15.000321388244629
    10. '("")' → logprob: -15.125321388244629

Token 218: '       ' (ID: 309)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -1.1428444385528564
    2. '   ' → logprob: -1.6428444385528564
    3. ' ' → logprob: -1.7678444385528564
    4. '<|end|>' → logprob: -2.1428444385528564
    5. '()' → logprob: -2.2678444385528564
    6. '       ' → logprob: -4.017844200134277
    7. '.rstrip' → logprob: -4.392844200134277
    8. '()
' → logprob: -4.392844200134277
    9. ' =' → logprob: -4.892844200134277
    10. '
' → logprob: -5.142844200134277

Token 219: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0041134231723845005
    2. 'if' (adapté à ' if') → logprob: -5.50411319732666
    3. ' ' → logprob: -11.12911319732666
    4. ' i' → logprob: -11.87911319732666
    5. '    ' → logprob: -12.75411319732666
    6. '	if' → logprob: -13.25411319732666
    7. ' 
' → logprob: -13.25411319732666
    8. ' n' → logprob: -13.75411319732666
    9. '.strip' → logprob: -13.87911319732666
    10. 'n' → logprob: -14.25411319732666

Token 220: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.25793492794036865
    2. ' line' → logprob: -1.5079349279403687
    3. 'line' → logprob: -5.507935047149658
    4. 'not' → logprob: -6.257935047149658
    5. ' ' → logprob: -11.2579345703125
    6. '#line' → logprob: -12.7579345703125
    7. '	line' → logprob: -13.7579345703125
    8. '=line' → logprob: -14.3829345703125
    9. '(line' → logprob: -15.2579345703125
    10. '[line' → logprob: -15.3829345703125

Token 221: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31783583760261536
    2. '==' → logprob: -1.317835807800293
    3. '.strip' → logprob: -5.442835807800293
    4. '()==' → logprob: -8.817835807800293
    5. '=' → logprob: -9.817835807800293
    6. '.' → logprob: -11.317835807800293
    7. '.startswith' → logprob: -11.442835807800293
    8. ')==' → logprob: -12.942835807800293
    9. '()' → logprob: -13.192835807800293
    10. ' =' → logprob: -13.192835807800293

Token 222: ' '' (ID: 461)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.6287009119987488
    2. '''' → logprob: -1.1287009716033936
    3. '"' → logprob: -2.5037009716033936
    4. ''' → logprob: -3.8787009716033936
    5. '"":' → logprob: -4.0037007331848145
    6. ' ""' → logprob: -4.3787007331848145
    7. ' ''' → logprob: -4.8787007331848145
    8. ' '':
' → logprob: -7.1287007331848145
    9. ' '' → logprob: -7.2537007331848145
    10. ' "":
' → logprob: -7.7537007331848145

Token 223: '0' (ID: 15)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -1.0245397090911865
    2. ''' → logprob: -1.1495397090911865
    3. '0' → logprob: -1.3995397090911865
    4. '':' → logprob: -3.3995397090911865
    5. ''\' → logprob: -4.399539947509766
    6. '\n' → logprob: -4.524539947509766
    7. '""' → logprob: -4.649539947509766
    8. ' ' → logprob: -6.024539947509766
    9. '':
' → logprob: -6.274539947509766
    10. '"":' → logprob: -6.399539947509766

Token 224: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0006298751104623079
    2. '0' → logprob: -7.375629901885986
    3. '':' → logprob: -13.500629425048828
    4. ' '' → logprob: -14.250629425048828
    5. '  ' → logprob: -14.500629425048828
    6. ''' → logprob: -15.125629425048828
    7. ' ' → logprob: -15.750629425048828
    8. '   ' → logprob: -16.938129425048828
    9. ',' → logprob: -17.125629425048828
    10. ':' → logprob: -17.188129425048828

Token 225: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '```' → logprob: -17.125036239624023
    4. '
' → logprob: -19.500036239624023
    5. '  ' → logprob: -19.500036239624023
    6. '   ' → logprob: -19.625036239624023
    7. '00' → logprob: -20.375036239624023
    8. ',' → logprob: -20.375036239624023
    9. ''' → logprob: -20.500036239624023
    10. '``' → logprob: -20.625036239624023

Token 226: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.576863169670105
    2. '':' → logprob: -0.826863169670105
    3. '':
' → logprob: -8.076863288879395
    4. ''' → logprob: -8.201863288879395
    5. '\n' → logprob: -8.201863288879395
    6. ':' → logprob: -10.326863288879395
    7. ':
' → logprob: -11.451863288879395
    8. ''):
' → logprob: -11.701863288879395
    9. '':

' → logprob: -11.951863288879395
    10. '":
' → logprob: -13.451863288879395

Token 227: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16619974374771118
    2. ':' → logprob: -2.1661996841430664
    3. '       ' → logprob: -3.5411996841430664
    4. ':
' → logprob: -4.666199684143066
    5. '		' → logprob: -10.541199684143066
    6. '
' → logprob: -10.791199684143066
    7. '   ' → logprob: -11.166199684143066
    8. '          ' → logprob: -11.166199684143066
    9. ',' → logprob: -11.541199684143066
    10. '	       ' → logprob: -12.416199684143066

Token 228: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21708565950393677
    2. '       ' → logprob: -2.217085599899292
    3. 'break' (adapté à ' break') → logprob: -2.842085599899292
    4. ' break' → logprob: -3.592085599899292
    5. '               ' → logprob: -8.592085838317871
    6. '	break' → logprob: -8.967085838317871
    7. '   ' → logprob: -11.217085838317871
    8. '
' → logprob: -11.342085838317871
    9. '		' → logprob: -11.717085838317871
    10. '	       ' → logprob: -11.842085838317871

Token 229: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14750544726848602
    2. '
' → logprob: -2.522505521774292
    3. '        
' → logprob: -3.772505521774292
    4. '  
' → logprob: -4.272505283355713
    5. '   ' → logprob: -4.897505283355713
    6. '    
' → logprob: -5.022505283355713
    7. '<|end|>' → logprob: -6.022505283355713
    8. '```' → logprob: -6.647505283355713
    9. ' 
' → logprob: -7.897505283355713
    10. '       
' → logprob: -8.022505760192871

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028422025963664055
    2. '   ' → logprob: -3.9034221172332764
    3. '
' → logprob: -5.403421878814697
    4. '        
' → logprob: -6.278421878814697
    5. '  
' → logprob: -7.528421878814697
    6. '    
' → logprob: -8.028422355651855
    7. '  ' → logprob: -8.653422355651855
    8. '<|end|>' → logprob: -9.153422355651855
    9. '    ' → logprob: -9.528422355651855
    10. '      ' → logprob: -10.153422355651855

Token 231: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.4741326868534088
    2. ' n' → logprob: -0.9741326570510864
    3. '       ' → logprob: -10.349132537841797
    4. ' parts' → logprob: -11.474132537841797
    5. '	n' → logprob: -11.974132537841797
    6. 'parts' → logprob: -12.849132537841797
    7. 'x' → logprob: -13.724132537841797
    8. '   ' → logprob: -14.099132537841797
    9. ',n' → logprob: -14.099132537841797
    10. 'a' → logprob: -14.599132537841797

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023274161503650248
    2. ',k' → logprob: -9.000232696533203
    3. ' ,' → logprob: -9.125232696533203
    4. ',n' → logprob: -16.375232696533203
    5. 'k' → logprob: -16.500232696533203
    6. '‌,' → logprob: -16.875232696533203
    7. '_,' → logprob: -17.375232696533203
    8. ' k' → logprob: -17.500232696533203
    9. 's' → logprob: -17.625232696533203
    10. ',s' → logprob: -17.750232696533203

Token 233: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.03386744484305382
    2. 'k' → logprob: -3.408867359161377
    3. ' ' → logprob: -8.533867835998535
    4. '<|end|>' → logprob: -12.033867835998535
    5. '    ' → logprob: -12.658867835998535
    6. 'space' → logprob: -12.783867835998535
    7. '  ' → logprob: -12.908867835998535
    8. '	k' → logprob: -13.033867835998535
    9. ' ' → logprob: -13.533867835998535
    10. ' space' → logprob: -13.908867835998535

Token 234: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141363143920898
    2. '=' → logprob: -1.701413631439209
    3. ')' → logprob: -15.951414108276367
    4. ' ' → logprob: -16.201414108276367
    5. '    ' → logprob: -16.701414108276367
    6. ',' → logprob: -17.201414108276367
    7. '   ' → logprob: -17.451414108276367
    8. '=line' → logprob: -17.701414108276367
    9. '=int' → logprob: -18.326414108276367
    10. '```' → logprob: -18.701414108276367

Token 235: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0004452083958312869
    2. 'map' → logprob: -7.750445365905762
    3. ' line' → logprob: -11.250445365905762
    4. ' ' → logprob: -14.375445365905762
    5. ' list' → logprob: -14.375445365905762
    6. '	map' → logprob: -15.875445365905762
    7. ' ' → logprob: -16.375444412231445
    8. 'line' → logprob: -16.500444412231445
    9. ' [' → logprob: -16.625444412231445
    10. ' m' → logprob: -17.250444412231445

Token 236: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.006276432890444994
    2. '(' → logprob: -5.506276607513428
    3. '(str' → logprob: -6.256276607513428
    4. '(lambda' → logprob: -8.25627613067627
    5. 'int' → logprob: -12.00627613067627
    6. '(line' → logprob: -12.50627613067627
    7. '(input' → logprob: -12.63127613067627
    8. '(float' → logprob: -13.88127613067627
    9. '(eval' → logprob: -13.88127613067627
    10. ' (' → logprob: -14.25627613067627

Token 237: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00021093101531732827
    2. '(' → logprob: -8.750210762023926
    3. ')' → logprob: -10.125210762023926
    4. ',line' → logprob: -11.750210762023926
    5. '=line' → logprob: -13.375210762023926
    6. ' line' → logprob: -13.750210762023926
    7. 'line' → logprob: -14.625210762023926
    8. '[line' → logprob: -14.750210762023926
    9. '(
' → logprob: -15.375210762023926
    10. '#line' → logprob: -15.750210762023926

Token 238: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.16023853421211243
    2. ' line' → logprob: -1.91023850440979
    3. '(line' → logprob: -11.535238265991211
    4. '	line' → logprob: -13.410238265991211
    5. ')' → logprob: -13.535238265991211
    6. '[line' → logprob: -14.035238265991211
    7. '=line' → logprob: -14.785238265991211
    8. '#line' → logprob: -15.285238265991211
    9. '   ' → logprob: -16.03523826599121
    10. ' ' → logprob: -16.16023826599121

Token 239: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03959311172366142
    2. '.split' → logprob: -3.28959321975708
    3. '.strip' → logprob: -6.78959321975708
    4. '.' → logprob: -7.91459321975708
    5. ' .' → logprob: -9.914592742919922
    6. 'split' → logprob: -12.164592742919922
    7. '()' → logprob: -12.289592742919922
    8. 'strip' → logprob: -15.539592742919922
    9. '   ' → logprob: -17.164592742919922
    10. ' split' → logprob: -17.164592742919922

Token 240: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01540831383317709
    2. '('' → logprob: -4.890408515930176
    3. '()' → logprob: -5.015408515930176
    4. ')' → logprob: -7.015408515930176
    5. '(' → logprob: -8.640408515930176
    6. '(','' → logprob: -10.390408515930176
    7. '())
' → logprob: -10.765408515930176
    8. '()))' → logprob: -12.515408515930176
    9. '(',' → logprob: -13.265408515930176
    10. '')' → logprob: -13.390408515930176

Token 241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005303950165398419
    2. '<|end|>' → logprob: -8.125530242919922
    3. '
' → logprob: -9.500530242919922
    4. '   ' → logprob: -9.875530242919922
    5. '        
' → logprob: -10.500530242919922
    6. ' ways' → logprob: -10.625530242919922
    7. ',' → logprob: -10.875530242919922
    8. 'ways' → logprob: -11.125530242919922
    9. '```' → logprob: -12.500530242919922
    10. '<|end|>' → logprob: -12.625530242919922

Token 242: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07222108542919159
    2. ' print' → logprob: -2.822221040725708
    3. '       ' → logprob: -5.322221279144287
    4. 'result' → logprob: -5.572221279144287
    5. ' result' → logprob: -6.822221279144287
    6. 'count' → logprob: -8.697220802307129
    7. 'ways' → logprob: -8.822220802307129
    8. ' ways' → logprob: -9.322220802307129
    9. ' count' → logprob: -12.072220802307129
    10. 'answer' → logprob: -12.197220802307129

Token 243: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.005234356038272381
    2. '(' → logprob: -5.255234241485596
    3. 'count' → logprob: -15.255234718322754
    4. '(
' → logprob: -15.880234718322754
    5. ' count' → logprob: -16.630233764648438
    6. '(c' → logprob: -16.630233764648438
    7. '=count' → logprob: -18.130233764648438
    8. ' (' → logprob: -18.255233764648438
    9. '<count' → logprob: -19.255233764648438
    10. '[count' → logprob: -19.755233764648438

Token 244: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '```' → logprob: -19.5
    3. ' _' → logprob: -20.125
    4. '_way' → logprob: -20.375
    5. ')_' → logprob: -21.0
    6. '   ' → logprob: -21.0
    7. '_
' → logprob: -21.125
    8. 'Ways' → logprob: -21.125
    9. ')' → logprob: -21.375
    10. ' ways' → logprob: -21.5

Token 245: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.00044556602369993925
    2. '_' → logprob: -7.750445365905762
    3. ' ways' → logprob: -11.375445365905762
    4. 'Ways' → logprob: -13.375445365905762
    5. 'way' → logprob: -13.500445365905762
    6. 'WAYS' → logprob: -14.750445365905762
    7. '_way' → logprob: -17.250446319580078
    8. '```' → logprob: -18.000446319580078
    9. 'count' → logprob: -18.500446319580078
    10. ' ' → logprob: -19.125446319580078

Token 246: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0008184424950741231
    2. '(' → logprob: -7.125818252563477
    3. ' (' → logprob: -12.000818252563477
    4. ')' → logprob: -12.250818252563477
    5. '(
' → logprob: -13.000818252563477
    6. ')(' → logprob: -14.375818252563477
    7. '(

' → logprob: -17.000818252563477
    8. ',' → logprob: -17.250818252563477
    9. ')n' → logprob: -17.500818252563477
    10. '```' → logprob: -18.000818252563477

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023667283821851015
    2. ',k' → logprob: -6.127366542816162
    3. ' ,' → logprob: -8.62736701965332
    4. ',
' → logprob: -13.50236701965332
    5. '   ' → logprob: -14.25236701965332
    6. ',n' → logprob: -16.25236701965332
    7. '`,' → logprob: -16.37736701965332
    8. '       ' → logprob: -17.00236701965332
    9. '',' → logprob: -17.12736701965332
    10. 'k' → logprob: -17.75236701965332

Token 248: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02975071594119072
    2. ' k' → logprob: -3.5297508239746094
    3. '   ' → logprob: -15.52975082397461
    4. '	k' → logprob: -16.90475082397461
    5. '    ' → logprob: -17.15475082397461
    6. ')' → logprob: -18.40475082397461
    7. ' ' → logprob: -19.02975082397461
    8. '       ' → logprob: -19.02975082397461
    9. '{k' → logprob: -19.65475082397461
    10. '```' → logprob: -20.27975082397461

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016671013145241886
    2. '(pr' → logprob: -8.750166893005371
    3. ' ,' → logprob: -12.000166893005371
    4. ',
' → logprob: -14.000166893005371
    5. '   ' → logprob: -15.000166893005371
    6. 'pr' → logprob: -15.250166893005371
    7. '(' → logprob: -15.625166893005371
    8. ',p' → logprob: -15.875166893005371
    9. ')' → logprob: -16.125165939331055
    10. '`,' → logprob: -17.000165939331055

Token 250: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.07889143377542496
    2. ' primes' → logprob: -2.5788915157318115
    3. '(pr' → logprob: -14.32889175415039
    4. ' pr' → logprob: -14.32889175415039
    5. 'prime' → logprob: -15.57889175415039
    6. '	pr' → logprob: -15.95389175415039
    7. '   ' → logprob: -16.70389175415039
    8. ')' → logprob: -17.20389175415039
    9. 'p' → logprob: -17.45389175415039
    10. ' ' → logprob: -17.95389175415039

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.943783253314905e-05
    2. '))' → logprob: -10.000059127807617
    3. ' ,' → logprob: -11.500059127807617
    4. ')' → logprob: -12.750059127807617
    5. '   ' → logprob: -15.000059127807617
    6. ',
' → logprob: -15.375059127807617
    7. ',start' → logprob: -15.500059127807617
    8. ',None' → logprob: -16.875059127807617
    9. '```' → logprob: -17.000059127807617
    10. '),' → logprob: -17.250059127807617

Token 252: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.625009536743164
    4. ')' → logprob: -19.125009536743164
    5. '۰' → logprob: -20.000009536743164
    6. '```' → logprob: -20.000009536743164
    7. '  ' → logprob: -20.625009536743164
    8. '    ' → logprob: -20.625009536743164
    9. '       ' → logprob: -20.750009536743164
    10. '00' → logprob: -21.062509536743164

Token 253: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. ')' → logprob: -17.625001907348633
    4. '   ' → logprob: -17.875001907348633
    5. '۰' → logprob: -19.000001907348633
    6. '00' → logprob: -19.375001907348633
    7. '```' → logprob: -19.875001907348633
    8. '０' → logprob: -19.937501907348633
    9. '    ' → logprob: -20.062501907348633
    10. '  ' → logprob: -20.125001907348633

Token 254: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0485946387052536
    2. ')' → logprob: -3.0485947132110596
    3. '))
' → logprob: -12.54859447479248
    4. ')
' → logprob: -12.92359447479248
    5. ')))' → logprob: -13.92359447479248
    6. '   ' → logprob: -15.79859447479248
    7. ' ))' → logprob: -16.423595428466797
    8. '),' → logprob: -16.798595428466797
    9. ' )' → logprob: -17.173595428466797
    10. ')}' → logprob: -17.423595428466797

Token 255: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.215593621134758
    2. 'main' → logprob: -1.7155935764312744
    3. '
' → logprob: -4.9655938148498535
    4. '```' → logprob: -5.4655938148498535
    5. '<|end|>' → logprob: -6.0905938148498535
    6. '#' → logprob: -8.090593338012695
    7. '\n' → logprob: -9.340593338012695
    8. ' if' → logprob: -9.465593338012695
    9. ' main' → logprob: -10.215593338012695
    10. '(main' → logprob: -10.590593338012695

Token 256: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03572028502821922
    2. '(' → logprob: -4.035720348358154
    3. '<|end|>' → logprob: -4.160720348358154
    4. '```' → logprob: -7.160720348358154
    5. '#' → logprob: -8.160719871520996
    6. ')' → logprob: -8.410719871520996
    7. '()
' → logprob: -8.910719871520996
    8. '
' → logprob: -8.910719871520996
    9. '(
' → logprob: -9.285719871520996
    10. '();' → logprob: -10.285719871520996


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 254
Tokens correctement prédits (1ère position, stricte): 136
Tokens correctement prédits (1ère position, avec adaptation): 146
Tokens correctement prédits (top 10): 241
Précision stricte (1ère position): 53.54%
Précision adaptée (1ère position): 57.48%
Précision (top 10): 94.88%
================================================================================
