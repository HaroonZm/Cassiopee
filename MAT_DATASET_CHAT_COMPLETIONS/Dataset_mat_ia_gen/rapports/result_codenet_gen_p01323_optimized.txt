================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque

def solve(field):
    h, w = 12, 6
    dirs = [(1,0),(-1,0),(0,1),(0,-1)]
    chain = 0

    while True:
        visited = [[False]*w for _ in range(h)]
        to_erase = [[False]*w for _ in range(h)]
        erased_any = False

        # 1) Find connected blocks >=4 of same color (except 'O')
        for i in range(h):
            for j in range(w):
                if field[i][j] not in ['.', 'O'] and not visited[i][j]:
                    q = deque()
                    q.append((i,j))
                    visited[i][j] = True
                    comp = [(i,j)]
                    c = field[i][j]
                    while q:
                        x,y = q.popleft()
                        for dx,dy in dirs:
                            nx, ny = x+dx, y+dy
                            if 0<=nx<h and 0<=ny<w and not visited[nx][ny] and field[nx][ny]==c:
                                visited[nx][ny] = True
                                q.append((nx,ny))
                                comp.append((nx,ny))
                    if len(comp) >=4:
                        erased_any = True
                        for x,y in comp:
                            to_erase[x][y] = True

        if not erased_any:
            return chain
        chain += 1

        # 2) Remove all connected basic blocks found above
        for i in range(h):
            for j in range(w):
                if to_erase[i][j]:
                    field[i][j] = '.'

        # 3) Remove 'O' blocks adjacent to removed basic blocks
        # First find O positions adjacent to erased basic blocks
        O_to_erase = set()
        for i in range(h):
            for j in range(w):
                if to_erase[i][j]:
                    for dx,dy in dirs:
                        nx, ny = i+dx, j+dy
                        if 0<=nx<h and 0<=ny<w and field[nx][ny]=='O':
                            O_to_erase.add((nx,ny))
        if O_to_erase:
            erased_any = True
            for x,y in O_to_erase:
                field[x][y] = '.'

        # 4) Gravity - let blocks fall down
        for col in range(w):
            stack = []
            for row in range(h-1,-1,-1):
                if field[row][col] != '.':
                    stack.append(field[row][col])
            for row in range(h-1,-1,-1):
                field[row][col] = stack[h-1 - row] if h-1 - row < len(stack) else '.'

# Read input and process datasets
input = sys.stdin.readline
T = int(input())
for _ in range(T):
    field = [list(input().rstrip('\n')) for _ in range(12)]
    print(solve(field))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.006907186936587095
    2. 'os' → logprob: -5.756906986236572
    3. ' math' → logprob: -6.881906986236572
    4. ' collections' → logprob: -7.256906986236572
    5. ' pathlib' → logprob: -7.756906986236572
    6. ' ' → logprob: -8.13190746307373
    7. ' typing' → logprob: -8.13190746307373
    8. ' datetime' → logprob: -9.00690746307373
    9. 'collections' → logprob: -9.13190746307373
    10. ' Py' → logprob: -9.25690746307373

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6514273285865784
    2. 'import' → logprob: -0.7764273285865784
    3. '.' → logprob: -4.026427268981934
    4. '```' → logprob: -7.901427268981934
    5. ' ' → logprob: -8.526427268981934
    6. '.import' → logprob: -9.651427268981934
    7. '_' → logprob: -10.026427268981934
    8. '<|end|>' → logprob: -10.276427268981934
    9. '	import' → logprob: -10.401427268981934
    10. '_import' → logprob: -11.026427268981934

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.58138507604599
    2. ' deque' → logprob: -0.95638507604599
    3. 'deque' → logprob: -2.9563851356506348
    4. ' abc' → logprob: -5.706385135650635
    5. ' named' → logprob: -7.706385135650635
    6. 'abc' → logprob: -7.956385135650635
    7. ' Counter' → logprob: -8.831384658813477
    8. 'named' → logprob: -8.831384658813477
    9. 'default' → logprob: -9.081384658813477
    10. 'Counter' → logprob: -10.706384658813477

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8485479950904846
    2. '

' → logprob: -0.9735479950904846
    3. '
' → logprob: -2.34854793548584
    4. '```' → logprob: -3.47354793548584
    5. 'import' → logprob: -3.59854793548584
    6. '\' → logprob: -3.72354793548584
    7. '<|end|>' → logprob: -4.84854793548584
    8. '<|end|>' → logprob: -6.22354793548584
    9. 'newline' → logprob: -6.47354793548584
    10. '' → logprob: -7.09854793548584

Token 8: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2291362285614014
    2. 'd' → logprob: -1.4791362285614014
    3. '`' → logprob: -2.2291362285614014
    4. 'b' → logprob: -2.3541362285614014
    5. '```' → logprob: -2.3541362285614014
    6. '\' → logprob: -3.3541362285614014
    7. 'import' → logprob: -3.3541362285614014
    8. 'a' → logprob: -3.8541362285614014
    9. ',' → logprob: -4.6041364669799805
    10. 'q' → logprob: -4.8541364669799805

Token 9: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03002307377755642
    2. ' bfs' → logprob: -3.9050230979919434
    3. ' process' → logprob: -5.280023097991943
    4. ' ' → logprob: -7.280023097991943
    5. ' dfs' → logprob: -7.280023097991943
    6. ' main' → logprob: -7.405023097991943
    7. ' BFS' → logprob: -8.030022621154785
    8. ' breadth' → logprob: -8.155022621154785
    9. ' a' → logprob: -8.905022621154785
    10. ' deque' → logprob: -9.030022621154785

Token 10: '(field' (ID: 29655)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008595072664320469
    2. '_' → logprob: -5.133594989776611
    3. '():' → logprob: -6.383594989776611
    4. ':' → logprob: -8.00859546661377
    5. '(:' → logprob: -8.75859546661377
    6. '```' → logprob: -8.88359546661377
    7. ' (' → logprob: -9.50859546661377
    8. '(line' → logprob: -10.88359546661377
    9. '(`' → logprob: -11.38359546661377
    10. '):' → logprob: -11.38359546661377

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09609523415565491
    2. ')' → logprob: -2.721095323562622
    3. '[' → logprob: -3.721095323562622
    4. ',' → logprob: -7.221095085144043
    5. '_' → logprob: -8.221095085144043
    6. ':' → logprob: -8.721095085144043
    7. '):
' → logprob: -8.971095085144043
    8. '(' → logprob: -9.221095085144043
    9. '_field' → logprob: -10.596095085144043
    10. '[]):' → logprob: -10.596095085144043

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06680846959352493
    2. '\' → logprob: -3.8168084621429443
    3. '    ' → logprob: -3.8168084621429443
    4. '    
' → logprob: -5.191808700561523
    5. '```' → logprob: -5.191808700561523
    6. '
' → logprob: -6.316808700561523
    7. ':' → logprob: -6.566808700561523
    8. '' → logprob: -6.691808700561523
    9. ' ' → logprob: -6.691808700561523
    10. '\n' → logprob: -6.816808700561523

Token 13: ' h' (ID: 312)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.8718401193618774
    2. ' n' → logprob: -1.4968401193618774
    3. ' q' → logprob: -2.246840000152588
    4. ' rows' → logprob: -2.496840000152588
    5. ' max' → logprob: -3.246840000152588
    6. '   ' → logprob: -3.246840000152588
    7. ' if' → logprob: -3.871840000152588
    8. 'n' → logprob: -4.621840000152588
    9. 'queue' → logprob: -5.371840000152588
    10. ' stack' → logprob: -5.496840000152588

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.233843594789505
    2. 'eight' → logprob: -1.9838435649871826
    3. ' =' → logprob: -2.8588435649871826
    4. '=' → logprob: -4.608843803405762
    5. ' ,' → logprob: -6.608843803405762
    6. 'ight' → logprob: -6.733843803405762
    7. '   ' → logprob: -7.233843803405762
    8. ' eight' → logprob: -8.733843803405762
    9. ' ' → logprob: -10.108843803405762
    10. '=int' → logprob: -10.233843803405762

Token 15: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.004634707234799862
    2. 'w' → logprob: -5.379634857177734
    3. ' len' → logprob: -12.129634857177734
    4. 'len' → logprob: -13.254634857177734
    5. '=len' → logprob: -14.004634857177734
    6. ' =' → logprob: -14.129634857177734
    7. ' ' → logprob: -14.129634857177734
    8. ' s' → logprob: -14.379634857177734
    9. ' l' → logprob: -14.379634857177734
    10. ' ,' → logprob: -14.754634857177734

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011050059460103512
    2. '=' → logprob: -4.511050224304199
    3. ',' → logprob: -13.6360502243042
    4. ' ' → logprob: -14.5110502243042
    5. '=int' → logprob: -15.5110502243042
    6. ')' → logprob: -16.386049270629883
    7. ' =
' → logprob: -16.386049270629883
    8. '   ' → logprob: -17.136049270629883
    9. ' =
' → logprob: -17.136049270629883
    10. ' =",' → logprob: -17.261049270629883

Token 17: ' ' (ID: 220)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.6434658765792847
    2. ' field' → logprob: -0.7684658765792847
    3. 'field' → logprob: -4.893465995788574
    4. 'len' → logprob: -5.768465995788574
    5. ' ' → logprob: -9.143465995788574
    6. ' map' → logprob: -10.518465995788574
    7. '   ' → logprob: -11.143465995788574
    8. '	field' → logprob: -11.268465995788574
    9. '[len' → logprob: -12.643465995788574
    10. ' ' → logprob: -12.643465995788574

Token 18: '12' (ID: 899)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1008361428976059
    2. ' len' → logprob: -2.6008360385894775
    3. 'field' → logprob: -3.8508360385894775
    4. ' field' → logprob: -7.725836277008057
    5. 'map' → logprob: -12.975835800170898
    6. '[len' → logprob: -14.350835800170898
    7. '(len' → logprob: -14.850835800170898
    8. '   ' → logprob: -14.975835800170898
    9. '=len' → logprob: -15.725835800170898
    10. ' ' → logprob: -16.3508358001709

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021484391763806343
    2. ' ,' → logprob: -3.896484375
    3. ' ' → logprob: -8.021484375
    4. '<|end|>' → logprob: -8.896484375
    5. ')' → logprob: -9.021484375
    6. ',
' → logprob: -9.521484375
    7. '*' → logprob: -9.521484375
    8. ' *' → logprob: -9.646484375
    9. '0' → logprob: -10.896484375
    10. 'import' → logprob: -11.271484375

Token 20: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18730224668979645
    2. '24' → logprob: -2.937302350997925
    3. '12' → logprob: -3.312302350997925
    4. '10' → logprob: -3.312302350997925
    5. '16' → logprob: -4.812302112579346
    6. '17' → logprob: -4.937302112579346
    7. '18' → logprob: -5.437302112579346
    8. '14' → logprob: -5.562302112579346
    9. '20' → logprob: -5.687302112579346
    10. '19' → logprob: -5.937302112579346

Token 21: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.06059163436293602
    2. '10' → logprob: -3.060591697692871
    3. ' ' → logprob: -4.560591697692871
    4. '12' → logprob: -6.935591697692871
    5. '```' → logprob: -8.685591697692871
    6. '   ' → logprob: -9.248091697692871
    7. '1' → logprob: -10.560591697692871
    8. '7' → logprob: -10.623091697692871
    9. '16' → logprob: -10.685591697692871
    10. '15' → logprob: -11.123091697692871

Token 22: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01846596971154213
    2. '<|end|>' → logprob: -5.018465995788574
    3. '    
' → logprob: -5.768465995788574
    4. '\n' → logprob: -6.018465995788574
    5. '   ' → logprob: -6.018465995788574
    6. '' → logprob: -6.393465995788574
    7. '  
' → logprob: -7.518465995788574
    8. '
' → logprob: -8.268465995788574
    9. '\' → logprob: -8.268465995788574
    10. '<|end|>' → logprob: -8.518465995788574

Token 23: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009814999997615814
    2. '    
' → logprob: -5.259815216064453
    3. '   ' → logprob: -5.634815216064453
    4. '<|end|>' → logprob: -8.509815216064453
    5. '  
' → logprob: -8.634815216064453
    6. '   
' → logprob: -9.009815216064453
    7. '```' → logprob: -9.009815216064453
    8. '
' → logprob: -9.134815216064453
    9. '' → logprob: -9.509815216064453
    10. ' 
' → logprob: -9.509815216064453

Token 24: ' dirs' (ID: 99999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7719866037368774
    2. ' visited' → logprob: -2.021986484527588
    3. 'visited' → logprob: -2.021986484527588
    4. 'queue' → logprob: -2.146986484527588
    5. ' queue' → logprob: -2.521986484527588
    6. 'dist' → logprob: -4.271986484527588
    7. 'field' → logprob: -4.771986484527588
    8. 'dp' → logprob: -5.021986484527588
    9. ' for' → logprob: -5.271986484527588
    10. '
' → logprob: -5.396986484527588

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -4.620622712536715e-05
    2. '=' → logprob: -10.000045776367188
    3. ' =[' → logprob: -15.000045776367188
    4. ' ' → logprob: -15.250045776367188
    5. 's' → logprob: -17.375045776367188
    6. ' =)' → logprob: -17.625045776367188
    7. ' =
' → logprob: -17.875045776367188
    8. '[:]' → logprob: -17.875045776367188
    9. '   ' → logprob: -18.000045776367188
    10. '[]' → logprob: -18.250045776367188

Token 26: ' [(' (ID: 43900)
  Prédit: ' [('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.015725448727607727
    2. '[(' → logprob: -4.265725612640381
    3. ' [' → logprob: -6.515725612640381
    4. '[' → logprob: -10.140725135803223
    5. ' [[' → logprob: -10.765725135803223
    6. ' ' → logprob: -11.015725135803223
    7. ' ((' → logprob: -13.265725135803223
    8. '[[' → logprob: -14.265725135803223
    9. '[((' → logprob: -14.765725135803223
    10. ' [
' → logprob: -14.890725135803223

Token 27: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09817435592412949
    2. '0' → logprob: -2.8481743335723877
    3. '1' → logprob: -3.3481743335723877
    4. '(-' → logprob: -8.473174095153809
    5. '(' → logprob: -9.098174095153809
    6. ' -' → logprob: -9.723174095153809
    7. ' ' → logprob: -10.473174095153809
    8. '   ' → logprob: -14.473174095153809
    9. '−' → logprob: -15.098174095153809
    10. ' (' → logprob: -15.348174095153809

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002482553943991661
    2. '0' → logprob: -6.1274824142456055
    3. ' ,' → logprob: -8.127482414245605
    4. ' ' → logprob: -13.627482414245605
    5. ',),' → logprob: -14.752482414245605
    6. '),' → logprob: -14.877482414245605
    7. '```' → logprob: -15.877482414245605
    8. ' ),' → logprob: -16.627483367919922
    9. ',)' → logprob: -17.377483367919922
    10. ')' → logprob: -17.752483367919922

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20141440629959106
    2. ' ' → logprob: -1.7014143466949463
    3. '  ' → logprob: -14.826414108276367
    4. '   ' → logprob: -15.451414108276367
    5. '	' → logprob: -16.326414108276367
    6. '-' → logprob: -16.451414108276367
    7. '1' → logprob: -16.576414108276367
    8. ' ' → logprob: -16.576414108276367
    9. ' -' → logprob: -16.888914108276367
    10. ')' → logprob: -17.263914108276367

Token 30: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0021344369743019342
    2. '),(' → logprob: -6.377134323120117
    3. ' ),' → logprob: -7.752134323120117
    4. ')' → logprob: -13.377134323120117
    5. '),
' → logprob: -14.877134323120117
    6. ',),' → logprob: -15.502134323120117
    7. ' ' → logprob: -16.377134323120117
    8. '   ' → logprob: -16.627134323120117
    9. ''),' → logprob: -16.627134323120117
    10. '],' → logprob: -17.502134323120117

Token 31: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -1.1003403663635254
    2. '0' → logprob: -1.2253403663635254
    3. '(' → logprob: -1.7253403663635254
    4. '-' → logprob: -1.8503403663635254
    5. ' (-' → logprob: -4.100340366363525
    6. ' ' → logprob: -4.600340366363525
    7. ' -' → logprob: -4.975340366363525
    8. ' (' → logprob: -5.350340366363525
    9. '   ' → logprob: -11.975339889526367
    10. '  ' → logprob: -12.600339889526367

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '１' → logprob: -17.25
    4. '```' → logprob: -18.25
    5. '१' → logprob: -18.3125
    6. '۱' → logprob: -18.375
    7. '১' → logprob: -18.375
    8. '

' → logprob: -18.5625
    9. '0' → logprob: -19.0
    10. '-' → logprob: -19.25

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000157293034135364
    2. '0' → logprob: -8.875157356262207
    3. ' ,' → logprob: -11.000157356262207
    4. ' ' → logprob: -15.375157356262207
    5. '<|end|>' → logprob: -15.375157356262207
    6. '),(' → logprob: -17.12515640258789
    7. ')' → logprob: -17.12515640258789
    8. '‌,' → logprob: -17.25015640258789
    9. '```' → logprob: -17.25015640258789
    10. '   ' → logprob: -17.62515640258789

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -18.625003814697266
    4. '０' → logprob: -19.375003814697266
    5. '```' → logprob: -20.562503814697266
    6. '1' → logprob: -20.687503814697266
    7. '

' → logprob: -21.687503814697266
    8. '٠' → logprob: -21.750003814697266
    9. '   ' → logprob: -21.875003814697266
    10. '  ' → logprob: -22.000003814697266

Token 35: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.038086358457803726
    2. '),' → logprob: -3.288086414337158
    3. ')' → logprob: -10.6630859375
    4. ' ),' → logprob: -11.1630859375
    5. ')]' → logprob: -12.0380859375
    6. '),
' → logprob: -15.2880859375
    7. ' ' → logprob: -15.4130859375
    8. ',' → logprob: -15.5380859375
    9. ')],' → logprob: -15.7880859375
    10. '(' → logprob: -16.0380859375

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.2378600735682994e-05
    2. ' ' → logprob: -10.375032424926758
    3. '1' → logprob: -14.125032424926758
    4. '```' → logprob: -16.437532424926758
    5. '   ' → logprob: -16.625032424926758
    6. '۰' → logprob: -16.937532424926758
    7. ')' → logprob: -17.812532424926758
    8. '  ' → logprob: -18.375032424926758
    9. '    ' → logprob: -18.500032424926758
    10. '０' → logprob: -18.562532424926758

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7372048862162046e-05
    2. '1' → logprob: -10.750027656555176
    3. ' ,' → logprob: -12.125027656555176
    4. ',-' → logprob: -15.000027656555176
    5. '<|end|>' → logprob: -17.25002670288086
    6. ',
' → logprob: -17.37502670288086
    7. ' ' → logprob: -17.37502670288086
    8. '```' → logprob: -18.25002670288086
    9. '،' → logprob: -18.75002670288086
    10. '-' → logprob: -19.00002670288086

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023596010578330606
    2. ' ' → logprob: -8.500235557556152
    3. '-' → logprob: -10.375235557556152
    4. ' -' → logprob: -13.875235557556152
    5. '```' → logprob: -16.12523651123047
    6. '0' → logprob: -16.50023651123047
    7. ')' → logprob: -17.12523651123047
    8. '  ' → logprob: -17.87523651123047
    9. '   ' → logprob: -18.00023651123047
    10. '۱' → logprob: -18.62523651123047

Token 39: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.07920360565185547
    2. '),' → logprob: -2.5792036056518555
    3. ')]' → logprob: -8.329203605651855
    4. ')' → logprob: -9.579203605651855
    5. ' ),' → logprob: -13.204203605651855
    6. '),
' → logprob: -14.704203605651855
    7. ')],' → logprob: -15.579203605651855
    8. ')])' → logprob: -15.579203605651855
    9. ',' → logprob: -15.954203605651855
    10. ')(' → logprob: -16.454204559326172

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.860340752406046e-05
    2. '-' → logprob: -9.7500581741333
    3. ' ' → logprob: -15.3750581741333
    4. ',' → logprob: -18.375059127807617
    5. '۰' → logprob: -18.375059127807617
    6. '00' → logprob: -18.625059127807617
    7. '```' → logprob: -19.250059127807617
    8. '
' → logprob: -19.625059127807617
    9. ' ' → logprob: -19.937559127807617
    10. ')' → logprob: -20.000059127807617

Token 41: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04300491139292717
    2. ',-' → logprob: -3.1680049896240234
    3. ',(' → logprob: -13.543004989624023
    4. '0' → logprob: -14.043004989624023
    5. ')]' → logprob: -14.043004989624023
    6. ' ,' → logprob: -14.293004989624023
    7. '-' → logprob: -14.668004989624023
    8. ',)' → logprob: -14.793004989624023
    9. ' ,-' → logprob: -15.168004989624023
    10. ')' → logprob: -15.293004989624023

Token 42: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42877230048179626
    2. '1' → logprob: -1.0537723302841187
    3. ' ' → logprob: -10.17877197265625
    4. '```' → logprob: -10.80377197265625
    5. ')' → logprob: -11.80377197265625
    6. ')]' → logprob: -13.17877197265625
    7. '   ' → logprob: -14.92877197265625
    8. '2' → logprob: -14.92877197265625
    9. '  ' → logprob: -15.11627197265625
    10. ']' → logprob: -15.24127197265625

Token 43: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.01842126064002514
    2. ')' → logprob: -4.018421173095703
    3. ']' → logprob: -8.643421173095703
    4. ')])' → logprob: -10.018421173095703
    5. '),' → logprob: -10.643421173095703
    6. ' )' → logprob: -11.518421173095703
    7. '   ' → logprob: -11.643421173095703
    8. ')],' → logprob: -13.143421173095703
    9. '])]' → logprob: -13.518421173095703
    10. '))' → logprob: -13.643421173095703

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3910415768623352
    2. '
' → logprob: -1.8910415172576904
    3. '    
' → logprob: -2.0160415172576904
    4. '  
' → logprob: -4.8910417556762695
    5. '<|end|>' → logprob: -5.0160417556762695
    6. '   
' → logprob: -5.1410417556762695
    7. ' 
' → logprob: -5.5160417556762695
    8. '```' → logprob: -5.5160417556762695
    9. ',' → logprob: -6.2660417556762695
    10. '\n' → logprob: -6.5160417556762695

Token 45: ' chain' (ID: 13464)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14810484647750854
    2. '
' → logprob: -3.3981049060821533
    3. '    
' → logprob: -3.6481049060821533
    4. 'visited' → logprob: -3.7731049060821533
    5. ' visited' → logprob: -4.273104667663574
    6. 'for' → logprob: -4.273104667663574
    7. 'result' → logprob: -5.148104667663574
    8. ' for' → logprob: -5.273104667663574
    9. '```' → logprob: -5.273104667663574
    10. 'queue' → logprob: -5.523104667663574

Token 46: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8747227787971497
    2. ' =' → logprob: -1.2497227191925049
    3. '=[]' → logprob: -1.8747227191925049
    4. '_re' → logprob: -2.249722719192505
    5. 's' → logprob: -3.624722719192505
    6. '_length' → logprob: -5.249722957611084
    7. 'length' → logprob: -7.124722957611084
    8. '_' → logprob: -7.249722957611084
    9. '_count' → logprob: -7.499722957611084
    10. 're' → logprob: -7.624722957611084

Token 47: ' ' (ID: 220)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.36500757932662964
    2. '[]' → logprob: -1.2400076389312744
    3. 'deque' → logprob: -4.615007400512695
    4. 'set' → logprob: -5.865007400512695
    5. ' set' → logprob: -6.490007400512695
    6. ' deque' → logprob: -6.740007400512695
    7. ' ' → logprob: -7.490007400512695
    8. '0' → logprob: -8.615007400512695
    9. '[][]' → logprob: -9.615007400512695
    10. ' [' → logprob: -10.365007400512695

Token 48: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07208776473999023
    2. 'deque' → logprob: -2.6970877647399902
    3. 'set' → logprob: -6.57208776473999
    4. '[' → logprob: -8.447088241577148
    5. '{}' → logprob: -8.697088241577148
    6. 'default' → logprob: -8.822088241577148
    7. '[][]' → logprob: -9.947088241577148
    8. '0' → logprob: -10.322088241577148
    9. '[]}' → logprob: -10.322088241577148
    10. 'de' → logprob: -10.572088241577148

Token 49: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12387131154537201
    2. '   ' → logprob: -2.248871326446533
    3. '    
' → logprob: -5.248871326446533
    4. '\n' → logprob: -6.748871326446533
    5. '   
' → logprob: -6.998871326446533
    6. '' → logprob: -7.123871326446533
    7. '  
' → logprob: -7.373871326446533
    8. '```' → logprob: -7.748871326446533
    9. ' 
' → logprob: -8.123870849609375
    10. ',' → logprob: -8.373870849609375

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00371029251255095
    2. ' while' → logprob: -6.2537102699279785
    3. '    
' → logprob: -7.2537102699279785
    4. 'while' → logprob: -7.5037102699279785
    5. 'def' → logprob: -8.628710746765137
    6. 'visited' → logprob: -9.503710746765137
    7. ' visited' → logprob: -10.003710746765137
    8. '
' → logprob: -10.003710746765137
    9. '  ' → logprob: -10.753710746765137
    10. '   
' → logprob: -11.128710746765137

Token 51: ' while' (ID: 2049)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5863425135612488
    2. 'while' (adapté à ' while') → logprob: -0.9613425135612488
    3. 'for' → logprob: -3.8363425731658936
    4. 'queue' → logprob: -4.4613423347473145
    5. 'changed' → logprob: -4.9613423347473145
    6. '   ' → logprob: -4.9613423347473145
    7. 'result' → logprob: -5.3363423347473145
    8. 'q' → logprob: -6.2113423347473145
    9. ' while' → logprob: -6.2113423347473145
    10. ' visited' → logprob: -6.3363423347473145

Token 52: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.002566979732364416
    2. 'True' → logprob: -6.002566814422607
    3. '(True' → logprob: -10.627567291259766
    4. ' len' → logprob: -10.877567291259766
    5. ' ' → logprob: -11.002567291259766
    6. ' field' → logprob: -11.127567291259766
    7. ' chain' → logprob: -11.877567291259766
    8. ' Tru' → logprob: -12.877567291259766
    9. ' not' → logprob: -13.127567291259766
    10. ' any' → logprob: -13.377567291259766

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5570885807392187e-05
    2. '):' → logprob: -12.250015258789062
    3. ':
' → logprob: -12.500015258789062
    4. ' :' → logprob: -13.000015258789062
    5. ':**' → logprob: -13.375015258789062
    6. '<|end|>' → logprob: -13.750015258789062
    7. '   ' → logprob: -14.375015258789062
    8. ',' → logprob: -14.875015258789062
    9. '():' → logprob: -15.250015258789062
    10. ':def' → logprob: -15.500015258789062

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014040566980838776
    2. '    ' → logprob: -5.264040470123291
    3. '        
' → logprob: -6.264040470123291
    4. '   ' → logprob: -6.264040470123291
    5. '
' → logprob: -6.764040470123291
    6. '<|end|>' → logprob: -6.764040470123291
    7. '    
' → logprob: -7.264040470123291
    8. ' ' → logprob: -8.13904094696045
    9. '\n' → logprob: -8.51404094696045
    10. ' 
' → logprob: -8.63904094696045

Token 55: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.25890663266181946
    2. ' visited' → logprob: -1.758906602859497
    3. '       ' → logprob: -3.633906602859497
    4. '   ' → logprob: -4.133906841278076
    5. 'queue' → logprob: -6.008906841278076
    6. 'found' → logprob: -6.258906841278076
    7. 'visit' → logprob: -6.633906841278076
    8. ' found' → logprob: -6.758906841278076
    9. ' queue' → logprob: -7.258906841278076
    10. 'vis' → logprob: -7.258906841278076

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015275981277227402
    2. '=' → logprob: -6.501527786254883
    3. '[' → logprob: -11.001527786254883
    4. ' ' → logprob: -12.376527786254883
    5. ' =[' → logprob: -13.501527786254883
    6. ' =
' → logprob: -14.126527786254883
    7. ' ,' → logprob: -14.751527786254883
    8. ',' → logprob: -15.126527786254883
    9. ' ={' → logprob: -15.626527786254883
    10. '  ' → logprob: -15.751527786254883

Token 57: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.6760472655296326
    2. ' [[' → logprob: -0.9260472655296326
    3. 'set' → logprob: -2.6760473251342773
    4. ' set' → logprob: -3.6760473251342773
    5. '[' → logprob: -7.176047325134277
    6. ' [' → logprob: -8.051047325134277
    7. ' ' → logprob: -12.051047325134277
    8. '[
' → logprob: -12.051047325134277
    9. '[]' → logprob: -13.301047325134277
    10. '{' → logprob: -13.301047325134277

Token 58: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00026765360962599516
    2. ' False' → logprob: -8.25026798248291
    3. '0' → logprob: -12.00026798248291
    4. '(False' → logprob: -16.000267028808594
    5. 'F' → logprob: -18.250267028808594
    6. '=False' → logprob: -19.750267028808594
    7. '   ' → logprob: -19.875267028808594
    8. 'True' → logprob: -20.000267028808594
    9. '.False' → logprob: -20.625267028808594
    10. '[' → logprob: -21.625267028808594

Token 59: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02007545344531536
    2. ']' → logprob: -4.39507532119751
    3. ']*' → logprob: -5.52007532119751
    4. 'for' → logprob: -5.77007532119751
    5. ')' → logprob: -9.270075798034668
    6. '	for' → logprob: -9.895075798034668
    7. '[' → logprob: -9.895075798034668
    8. '           ' → logprob: -10.020075798034668
    9. ']*(' → logprob: -10.270075798034668
    10. ' ]' → logprob: -10.270075798034668

Token 60: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.011928259395062923
    2. ' w' → logprob: -5.011928081512451
    3. '6' → logprob: -5.261928081512451
    4. '(w' → logprob: -12.26192855834961
    5. ' ' → logprob: -12.51192855834961
    6. '   ' → logprob: -13.26192855834961
    7. '	w' → logprob: -13.63692855834961
    8. '```' → logprob: -13.76192855834961
    9. '(' → logprob: -14.88692855834961
    10. '7' → logprob: -15.51192855834961

Token 61: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.016103938221931458
    2. 'for' → logprob: -4.141103744506836
    3. ')' → logprob: -11.266103744506836
    4. '   ' → logprob: -11.516103744506836
    5. '	for' → logprob: -11.516103744506836
    6. ']' → logprob: -11.641103744506836
    7. ' ' → logprob: -11.641103744506836
    8. '       ' → logprob: -12.766103744506836
    9. '<|end|>' → logprob: -12.891103744506836
    10. '           ' → logprob: -13.141103744506836

Token 62: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39332783222198486
    2. ' _' → logprob: -1.3933278322219849
    3. ' range' → logprob: -2.8933277130126953
    4. '<|end|>' → logprob: -4.393327713012695
    5. '_range' → logprob: -5.018327713012695
    6. 'range' → logprob: -6.393327713012695
    7. '<|end|>' → logprob: -7.893327713012695
    8. '(range' → logprob: -8.893327713012695
    9. ' ' → logprob: -9.518327713012695
    10. ' i' → logprob: -9.893327713012695

Token 63: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.027375418692827225
    2. ' range' → logprob: -3.6523754596710205
    3. '(range' → logprob: -7.152375221252441
    4. '[' → logprob: -8.402375221252441
    5. '	range' → logprob: -10.902375221252441
    6. ' ' → logprob: -12.152375221252441
    7. 'row' → logprob: -12.277375221252441
    8. ' xrange' → logprob: -12.277375221252441
    9. ' in' → logprob: -12.402375221252441
    10. 'ange' → logprob: -12.652375221252441

Token 64: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10024808347225189
    2. ' range' → logprob: -2.350248098373413
    3. ' ' → logprob: -11.225248336791992
    4. '[' → logprob: -11.975248336791992
    5. '   ' → logprob: -12.475248336791992
    6. '```' → logprob: -12.475248336791992
    7. '(range' → logprob: -12.600248336791992
    8. 'r' → logprob: -13.225248336791992
    9. '	range' → logprob: -13.350248336791992
    10. 'ran' → logprob: -13.725248336791992

Token 65: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.8444881536415778e-05
    2. ' (' → logprob: -11.125028610229492
    3. '(' → logprob: -11.250028610229492
    4. 'h' → logprob: -15.000028610229492
    5. ' h' → logprob: -16.125028610229492
    6. '(H' → logprob: -16.250028610229492
    7. '	h' → logprob: -16.375028610229492
    8. '   ' → logprob: -17.875028610229492
    9. '(
' → logprob: -18.000028610229492
    10. ' ' → logprob: -18.375028610229492

Token 66: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00011975488450843841
    2. ')' → logprob: -9.625120162963867
    3. ']' → logprob: -10.750120162963867
    4. ')])' → logprob: -11.250120162963867
    5. ')]
' → logprob: -11.625120162963867
    6. ')],' → logprob: -12.625120162963867
    7. ' )' → logprob: -13.375120162963867
    8. '))' → logprob: -13.625120162963867
    9. '   ' → logprob: -13.875120162963867
    10. '])]' → logprob: -14.125120162963867

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09063424915075302
    2. '
' → logprob: -3.715634346008301
    3. '        
' → logprob: -3.840634346008301
    4. '   ' → logprob: -4.715634346008301
    5. '  
' → logprob: -4.840634346008301
    6. '    
' → logprob: -4.965634346008301
    7. '<|end|>' → logprob: -4.965634346008301
    8. ' ' → logprob: -5.965634346008301
    9. ' 
' → logprob: -5.965634346008301
    10. '    ' → logprob: -6.965634346008301

Token 68: ' to' (ID: 316)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.6561742424964905
    2. 'pop' → logprob: -1.7811741828918457
    3. '       ' → logprob: -2.2811741828918457
    4. 'queue' → logprob: -3.1561741828918457
    5. 'clusters' → logprob: -3.7811741828918457
    6. 'break' → logprob: -4.156174182891846
    7. 'removed' → logprob: -4.156174182891846
    8. 'cluster' → logprob: -4.406174182891846
    9. 'to' (adapté à ' to') → logprob: -4.406174182891846
    10. 'p' → logprob: -4.656174182891846

Token 69: '_' (ID: 62)
  Prédit: '_pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pop' → logprob: -0.6422171592712402
    2. '_remove' → logprob: -2.2672171592712402
    3. '_' → logprob: -2.3922171592712402
    4. '_el' → logprob: -2.5172171592712402
    5. 'pop' → logprob: -2.8922171592712402
    6. '_cr' → logprob: -3.0172171592712402
    7. '_break' → logprob: -3.6422171592712402
    8. '_delete' → logprob: -3.6422171592712402
    9. '_clear' → logprob: -4.01721715927124
    10. '_visit' → logprob: -4.64221715927124

Token 70: 'erase' (ID: 91229)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.3262004554271698
    2. 'remove' → logprob: -1.5762004852294922
    3. 'el' → logprob: -3.326200485229492
    4. 'delete' → logprob: -4.076200485229492
    5. 'visit' → logprob: -5.201200485229492
    6. 'break' → logprob: -5.576200485229492
    7. 'erase' → logprob: -5.701200485229492
    8. 'clear' → logprob: -6.076200485229492
    9. 'check' → logprob: -7.076200485229492
    10. 'destroy' → logprob: -7.451200485229492

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4287806451320648
    2. '=' → logprob: -1.0537806749343872
    3. '=[]' → logprob: -10.303780555725098
    4. 's' → logprob: -10.803780555725098
    5. ' ' → logprob: -11.553780555725098
    6. ',' → logprob: -11.553780555725098
    7. '  ' → logprob: -13.928780555725098
    8. '=[]
' → logprob: -14.428780555725098
    9. '>' → logprob: -14.678780555725098
    10. '    ' → logprob: -14.803780555725098

Token 72: ' [[' (ID: 9237)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3896157443523407
    2. ' []' → logprob: -1.139615774154663
    3. 'set' → logprob: -6.264615535736084
    4. 'deque' → logprob: -7.639615535736084
    5. ' set' → logprob: -8.139616012573242
    6. ' ' → logprob: -10.639616012573242
    7. '[' → logprob: -11.639616012573242
    8. '[]>' → logprob: -11.639616012573242
    9. ' deque' → logprob: -11.889616012573242
    10. '   ' → logprob: -12.014616012573242

Token 73: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -6.635164754698053e-05
    2. ' False' → logprob: -9.625066757202148
    3. '(False' → logprob: -16.00006675720215
    4. 'True' → logprob: -16.75006675720215
    5. '[]' → logprob: -17.12506675720215
    6. '   ' → logprob: -17.37506675720215
    7. '0' → logprob: -17.62506675720215
    8. '=False' → logprob: -17.75006675720215
    9. '.False' → logprob: -18.12506675720215
    10. ']' → logprob: -18.50006675720215

Token 74: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.0006569160032086074
    2. ']' → logprob: -7.500657081604004
    3. ')*' → logprob: -9.375657081604004
    4. '   ' → logprob: -11.375657081604004
    5. ')]' → logprob: -12.875657081604004
    6. ' ]' → logprob: -13.375657081604004
    7. ']*(' → logprob: -13.750657081604004
    8. ')' → logprob: -14.625657081604004
    9. '       ' → logprob: -14.750657081604004
    10. 'False' → logprob: -15.500657081604004

Token 75: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -5.2762428822461516e-05
    2. ' w' → logprob: -10.000052452087402
    3. '6' → logprob: -13.000052452087402
    4. '<|end|>' → logprob: -14.375052452087402
    5. '```' → logprob: -14.375052452087402
    6. '	w' → logprob: -14.625052452087402
    7. '(w' → logprob: -14.750052452087402
    8. '   ' → logprob: -14.875052452087402
    9. '<w' → logprob: -15.125052452087402
    10. '>w' → logprob: -15.750052452087402

Token 76: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2832116186618805
    2. 'for' → logprob: -1.408211588859558
    3. ')' → logprob: -6.533211708068848
    4. '       ' → logprob: -8.533211708068848
    5. '   ' → logprob: -9.033211708068848
    6. ']' → logprob: -9.033211708068848
    7. '	for' → logprob: -9.283211708068848
    8. ' ' → logprob: -11.158211708068848
    9. '```' → logprob: -11.158211708068848
    10. '           ' → logprob: -11.283211708068848

Token 77: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6170763373374939
    2. ' in' → logprob: -0.8670763373374939
    3. ' _' → logprob: -3.2420763969421387
    4. '_in' → logprob: -7.367076396942139
    5. ' range' → logprob: -8.74207592010498
    6. ' to' → logprob: -8.86707592010498
    7. ' on' → logprob: -8.99207592010498
    8. 'in' → logprob: -10.11707592010498
    9. '_range' → logprob: -10.11707592010498
    10. ' ' → logprob: -10.99207592010498

Token 78: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.501550555229187
    2. 'in' → logprob: -1.501550555229187
    3. ' in' → logprob: -1.876550555229187
    4. ' range' → logprob: -4.001550674438477
    5. '_range' → logprob: -9.126550674438477
    6. '(range' → logprob: -10.126550674438477
    7. ' ' → logprob: -10.751550674438477
    8. '	range' → logprob: -11.126550674438477
    9. 'import' → logprob: -12.501550674438477
    10. 'row' → logprob: -12.501550674438477

Token 79: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0021882106084376574
    2. ' range' → logprob: -6.127188205718994
    3. '(range' → logprob: -13.377188682556152
    4. '	range' → logprob: -14.002188682556152
    5. '_range' → logprob: -14.502188682556152
    6. ' ' → logprob: -16.377187728881836
    7. '```' → logprob: -16.752187728881836
    8. '[' → logprob: -16.877187728881836
    9. '   ' → logprob: -17.127187728881836
    10. '.range' → logprob: -18.252187728881836

Token 80: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.017349615693092346
    2. 'range' → logprob: -4.767349720001221
    3. 'h' → logprob: -5.517349720001221
    4. ' range' → logprob: -5.892349720001221
    5. ' (' → logprob: -7.017349720001221
    6. ' h' → logprob: -7.642349720001221
    7. '[h' → logprob: -8.517349243164062
    8. '(' → logprob: -8.642349243164062
    9. '(w' → logprob: -10.017349243164062
    10. ')' → logprob: -10.517349243164062

Token 81: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.810037742368877e-05
    2. '       ' → logprob: -10.625038146972656
    3. ')]
' → logprob: -12.500038146972656
    4. '   ' → logprob: -12.625038146972656
    5. ')' → logprob: -12.875038146972656
    6. ' )' → logprob: -13.875038146972656
    7. '           ' → logprob: -14.125038146972656
    8. ']' → logprob: -14.750038146972656
    9. ')])' → logprob: -14.750038146972656
    10. ')]
' → logprob: -15.250038146972656

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29795652627944946
    2. '
' → logprob: -1.5479564666748047
    3. '        
' → logprob: -3.5479564666748047
    4. '<|end|>' → logprob: -4.422956466674805
    5. '<|end|>' → logprob: -6.797956466674805
    6. '    
' → logprob: -6.797956466674805
    7. '  
' → logprob: -7.547956466674805
    8. '
' → logprob: -8.172956466674805
    9. '   ' → logprob: -8.422956466674805
    10. '\n' → logprob: -8.922956466674805

Token 83: ' erased' (ID: 139842)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0388081073760986
    2. 'found' → logprob: -1.1638081073760986
    3. 'pop' → logprob: -2.2888081073760986
    4. 'changed' → logprob: -2.2888081073760986
    5. 'chain' → logprob: -3.4138081073760986
    6. 'change' → logprob: -3.9138081073760986
    7. 'b' → logprob: -4.2888078689575195
    8. 'removed' → logprob: -4.6638078689575195
    9. 'break' → logprob: -4.9138078689575195
    10. 'any' → logprob: -5.0388078689575195

Token 84: '_any' (ID: 95226)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6333274841308594
    2. '=' → logprob: -0.7583274841308594
    3. '_any' → logprob: -8.25832748413086
    4. '_count' → logprob: -8.75832748413086
    5. '_this' → logprob: -9.00832748413086
    6. ' ' → logprob: -10.38332748413086
    7. '=False' → logprob: -10.38332748413086
    8. '_' → logprob: -10.75832748413086
    9. 's' → logprob: -11.25832748413086
    10. '  ' → logprob: -11.50832748413086

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10025713592767715
    2. '=' → logprob: -2.350257158279419
    3. ' ' → logprob: -10.22525691986084
    4. '_' → logprob: -12.72525691986084
    5. '=False' → logprob: -12.85025691986084
    6. '=True' → logprob: -13.10025691986084
    7. ' |=' → logprob: -13.60025691986084
    8. ',' → logprob: -13.85025691986084
    9. '  ' → logprob: -13.97525691986084
    10. '<|end|>' → logprob: -13.97525691986084

Token 86: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.06196948140859604
    2. 'False' → logprob: -2.811969518661499
    3. ' ' → logprob: -13.436969757080078
    4. ' True' → logprob: -15.686969757080078
    5. ' ' → logprob: -16.811969757080078
    6. '0' → logprob: -17.186969757080078
    7. ' false' → logprob: -17.311969757080078
    8. ' F' → logprob: -17.436969757080078
    9. '(False' → logprob: -17.436969757080078
    10. '=False' → logprob: -17.686969757080078

Token 87: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09888429939746857
    2. '       ' → logprob: -3.223884344100952
    3. '<|end|>' → logprob: -3.723884344100952
    4. 'for' → logprob: -4.348884105682373
    5. ' for' → logprob: -4.723884105682373
    6. '<|end|>' → logprob: -5.973884105682373
    7. '        
' → logprob: -6.723884105682373
    8. '
' → logprob: -6.848884105682373
    9. '   ' → logprob: -7.223884105682373
    10. '```' → logprob: -7.598884105682373

Token 88: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04749448597431183
    2. '       ' → logprob: -3.172494411468506
    3. '        
' → logprob: -6.547494411468506
    4. '<|end|>' → logprob: -6.547494411468506
    5. '
' → logprob: -7.547494411468506
    6. '    
' → logprob: -8.672494888305664
    7. '

' → logprob: -8.797494888305664
    8. 'for' → logprob: -8.922494888305664
    9. ' for' → logprob: -8.922494888305664
    10. '\n' → logprob: -9.297494888305664

Token 89: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0420578233897686
    2. ' for' → logprob: -3.667057752609253
    3. '       ' → logprob: -4.167057991027832
    4. '   ' → logprob: -9.542057991027832
    5. 'found' → logprob: -9.792057991027832
    6. 'queue' → logprob: -13.167057991027832
    7. ' ' → logprob: -13.292057991027832
    8. ' found' → logprob: -13.542057991027832
    9. '        
' → logprob: -14.167057991027832
    10. '	for' → logprob: -14.542057991027832

Token 90: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12727853655815125
    2. ' for' → logprob: -2.1272785663604736
    3. '   ' → logprob: -8.002278327941895
    4. '       ' → logprob: -11.752278327941895
    5. ' ' → logprob: -12.377278327941895
    6. '    ' → logprob: -13.877278327941895
    7. 'def' → logprob: -14.127278327941895
    8. '  ' → logprob: -14.252278327941895
    9. '	for' → logprob: -14.752278327941895
    10. 'For' → logprob: -15.377278327941895

Token 91: '1' (ID: 16)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1041145626222715e-05
    2. ' for' → logprob: -12.125011444091797
    3. '   ' → logprob: -12.375011444091797
    4. '       ' → logprob: -14.625011444091797
    5. '#' → logprob: -14.875011444091797
    6. '
' → logprob: -16.125011444091797
    7. 'queue' → logprob: -16.375011444091797
    8. 'found' → logprob: -16.500011444091797
    9. '```' → logprob: -16.875011444091797
    10. 'def' → logprob: -17.000011444091797

Token 92: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20794382691383362
    2. 'for' → logprob: -1.8329437971115112
    3. '       ' → logprob: -4.082943916320801
    4. '    ' → logprob: -5.707943916320801
    5. ' ' → logprob: -6.082943916320801
    6. '   ' → logprob: -6.207943916320801
    7. '        ' → logprob: -6.582943916320801
    8. '  ' → logprob: -8.0829439163208
    9. '<|end|>' → logprob: -8.0829439163208
    10. '        
' → logprob: -8.4579439163208

Token 93: ' Find' (ID: 9764)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.043247297406196594
    2. ' for' → logprob: -3.1682472229003906
    3. 'For' → logprob: -9.91824722290039
    4. '#' → logprob: -10.16824722290039
    5. '   ' → logprob: -10.16824722290039
    6. 'found' → logprob: -10.41824722290039
    7. 'def' → logprob: -10.91824722290039
    8. ' found' → logprob: -11.41824722290039
    9. ' ' → logprob: -11.91824722290039
    10. 'queue' → logprob: -12.04324722290039

Token 94: ' connected' (ID: 12079)
  Prédit: ' chains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chains' → logprob: -1.1618798971176147
    2. ' clusters' → logprob: -1.2868798971176147
    3. ' and' → logprob: -2.2868800163269043
    4. ' groups' → logprob: -2.2868800163269043
    5. ' any' → logprob: -2.5368800163269043
    6. ' connected' → logprob: -2.9118800163269043
    7. ' cells' → logprob: -3.9118800163269043
    8. ' all' → logprob: -5.036880016326904
    9. 'clusters' → logprob: -5.036880016326904
    10. ' positions' → logprob: -5.161880016326904

Token 95: ' blocks' (ID: 18125)
  Prédit: ' components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' components' → logprob: -0.10290883481502533
    2. 'components' → logprob: -2.6029088497161865
    3. '_components' → logprob: -4.352908611297607
    4. ' clusters' → logprob: -5.102908611297607
    5. 'clusters' → logprob: -6.852908611297607
    6. ' component' → logprob: -7.352908611297607
    7. 'component' → logprob: -7.477908611297607
    8. ' cells' → logprob: -7.477908611297607
    9. 'com' → logprob: -8.602909088134766
    10. '   ' → logprob: -8.727909088134766

Token 96: ' >=' (ID: 5064)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6278557777404785
    2. '
' → logprob: -1.7528557777404785
    3. '<|end|>' → logprob: -1.8778557777404785
    4. ' for' → logprob: -2.2528557777404785
    5. '        
' → logprob: -4.6278557777404785
    6. '<|end|>' → logprob: -5.0028557777404785
    7. 'for' → logprob: -5.2528557777404785
    8. ':' → logprob: -5.2528557777404785
    9. '  
' → logprob: -6.8778557777404785
    10. ' and' → logprob: -7.0028557777404785

Token 97: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.03374712914228439
    2. ' ' → logprob: -3.4087471961975098
    3. '```' → logprob: -9.783746719360352
    4. '   ' → logprob: -10.658746719360352
    5. '2' → logprob: -12.533746719360352
    6. '3' → logprob: -12.658746719360352
    7. 'k' → logprob: -13.283746719360352
    8. '  ' → logprob: -13.346246719360352
    9. '`' → logprob: -13.408746719360352
    10. '_' → logprob: -13.471246719360352

Token 98: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44047218561172485
    2. '<|end|>' → logprob: -1.81547212600708
    3. ' for' → logprob: -2.19047212600708
    4. '
' → logprob: -2.81547212600708
    5. '<|end|>' → logprob: -4.81547212600708
    6. '        
' → logprob: -4.94047212600708
    7. 'for' → logprob: -5.56547212600708
    8. ' and' → logprob: -7.81547212600708
    9. '        ' → logprob: -7.94047212600708
    10. ',' → logprob: -7.94047212600708

Token 99: ' same' (ID: 2684)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.29481378197669983
    2. 'the' → logprob: -2.169813871383667
    3. ' same' → logprob: -2.544813871383667
    4. 'same' → logprob: -2.794813871383667
    5. 'def' → logprob: -8.169814109802246
    6. ' each' → logprob: -8.669814109802246
    7. '_same' → logprob: -9.044814109802246
    8. 'a' → logprob: -9.169814109802246
    9. ' a' → logprob: -9.169814109802246
    10. '同' → logprob: -9.544814109802246

Token 100: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.2530752122402191
    2. 'color' → logprob: -2.253075122833252
    3. '   ' → logprob: -2.628075122833252
    4. ' ' → logprob: -5.003075122833252
    5. '    ' → logprob: -5.128075122833252
    6. '_color' → logprob: -5.128075122833252
    7. '<|end|>' → logprob: -5.253075122833252
    8. '       ' → logprob: -5.628075122833252
    9. ')' → logprob: -5.753075122833252
    10. '  ' → logprob: -6.128075122833252

Token 101: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.008902907371521
    2. '       ' → logprob: -1.008902907371521
    3. '<|end|>' → logprob: -1.383902907371521
    4. '<|end|>' → logprob: -4.7589030265808105
    5. '        
' → logprob: -5.0089030265808105
    6. ' for' → logprob: -6.1339030265808105
    7. '  
' → logprob: -6.8839030265808105
    8. '    
' → logprob: -8.133902549743652
    9. 'for' → logprob: -8.133902549743652
    10. ',' → logprob: -8.758902549743652

Token 102: 'except' (ID: 25035)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1172659397125244
    2. ' for' → logprob: -1.3672659397125244
    3. '       ' → logprob: -1.4922659397125244
    4. 'for' → logprob: -1.9922659397125244
    5. ')
' → logprob: -4.492265701293945
    6. ' in' → logprob: -4.742265701293945
    7. '           ' → logprob: -5.117265701293945
    8. ' )' → logprob: -5.242265701293945
    9. '   ' → logprob: -5.492265701293945
    10. '
' → logprob: -5.492265701293945

Token 103: ' '' (ID: 461)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.5640556812286377
    2. ' '.')' → logprob: -1.0640556812286377
    3. ' '.'' → logprob: -3.5640556812286377
    4. ' '.' → logprob: -3.5640556812286377
    5. '".' → logprob: -4.189055442810059
    6. ' '' → logprob: -5.439055442810059
    7. '   ' → logprob: -6.314055442810059
    8. ' ".' → logprob: -6.314055442810059
    9. ' ' → logprob: -6.439055442810059
    10. ''' → logprob: -6.814055442810059

Token 104: 'O' (ID: 46)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20810233056545258
    2. ''.' → logprob: -2.083102226257324
    3. '.')' → logprob: -2.833102226257324
    4. '.")' → logprob: -5.708102226257324
    5. '.'.' → logprob: -7.708102226257324
    6. '.'' → logprob: -8.083102226257324
    7. '"."' → logprob: -9.583102226257324
    8. '.)' → logprob: -9.583102226257324
    9. '".' → logprob: -9.958102226257324
    10. '.')
' → logprob: -9.958102226257324

Token 105: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.03630032017827034
    2. ''' → logprob: -3.4113004207611084
    3. ' ')' → logprob: -6.536300182342529
    4. ')' → logprob: -7.911300182342529
    5. '')]' → logprob: -8.661300659179688
    6. ''):' → logprob: -9.411300659179688
    7. '\n' → logprob: -9.536300659179688
    8. ' '' → logprob: -9.661300659179688
    9. '').' → logprob: -9.911300659179688
    10. '')
' → logprob: -10.036300659179688

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6086722612380981
    2. '
' → logprob: -0.8586722612380981
    3. '<|end|>' → logprob: -3.6086721420288086
    4. '        
' → logprob: -5.983672142028809
    5. '<|end|>' → logprob: -7.108672142028809
    6. ' for' → logprob: -7.358672142028809
    7. '  
' → logprob: -7.858672142028809
    8. '\n' → logprob: -8.983672142028809
    9. ' 
' → logprob: -9.108672142028809
    10. 'for' → logprob: -9.358672142028809

Token 107: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19664746522903442
    2. '
' → logprob: -1.8216474056243896
    3. ' for' → logprob: -4.571647644042969
    4. 'for' (adapté à ' for') → logprob: -5.446647644042969
    5. '   ' → logprob: -6.946647644042969
    6. '        
' → logprob: -7.571647644042969
    7. '    
' → logprob: -8.321647644042969
    8. '  
' → logprob: -8.946647644042969
    9. ' 
' → logprob: -9.696647644042969
    10. '<|end|>' → logprob: -9.821647644042969

Token 108: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2968355119228363
    2. ' y' → logprob: -1.6718355417251587
    3. ' r' → logprob: -3.671835422515869
    4. ' x' → logprob: -3.796835422515869
    5. 'i' → logprob: -4.171835422515869
    6. 'y' → logprob: -6.046835422515869
    7. 'r' → logprob: -6.796835422515869
    8. 'x' → logprob: -7.046835422515869
    9. ' ' → logprob: -7.796835422515869
    10. ' row' → logprob: -8.296835899353027

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011096273548901081
    2. 'in' → logprob: -4.511096477508545
    3. ' ' → logprob: -10.511096000671387
    4. '	in' → logprob: -11.886096000671387
    5. ',' → logprob: -12.261096000671387
    6. 'n' → logprob: -13.011096000671387
    7. '   ' → logprob: -13.136096000671387
    8. '    ' → logprob: -14.011096000671387
    9. ' ,' → logprob: -14.261096000671387
    10. 'range' → logprob: -14.386096000671387

Token 110: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022463142871857
    2. ' range' → logprob: -1.9102246761322021
    3. ' ' → logprob: -15.410224914550781
    4. '   ' → logprob: -15.910224914550781
    5. '```' → logprob: -16.66022491455078
    6. '	range' → logprob: -16.66022491455078
    7. '(range' → logprob: -17.03522491455078
    8. '  ' → logprob: -18.16022491455078
    9. 'rang' → logprob: -18.28522491455078
    10. '
' → logprob: -18.66022491455078

Token 111: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0008280907059088349
    2. '(' → logprob: -7.125828266143799
    3. ' (' → logprob: -11.87582778930664
    4. 'h' → logprob: -12.37582778930664
    5. '   ' → logprob: -12.50082778930664
    6. '	h' → logprob: -12.62582778930664
    7. '12' → logprob: -13.00082778930664
    8. ' h' → logprob: -13.12582778930664
    9. '(
' → logprob: -14.25082778930664
    10. '       ' → logprob: -16.12582778930664

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11316322535276413
    2. '):
' → logprob: -2.2381632328033447
    3. ' ):' → logprob: -8.488162994384766
    4. '   ' → logprob: -9.863162994384766
    5. ':' → logprob: -10.613162994384766
    6. '):
' → logprob: -10.738162994384766
    7. ')' → logprob: -10.863162994384766
    8. ' ):
' → logprob: -11.738162994384766
    9. '       ' → logprob: -12.738162994384766
    10. ' ' → logprob: -12.863162994384766

Token 113: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010094968602061272
    2. '<|end|>' → logprob: -5.635095119476318
    3. '   ' → logprob: -5.885095119476318
    4. ' ' → logprob: -6.260095119476318
    5. ' for' → logprob: -6.635095119476318
    6. '           ' → logprob: -9.38509464263916
    7. '<|end|>' → logprob: -9.63509464263916
    8. ',' → logprob: -9.76009464263916
    9. '	   ' → logprob: -10.01009464263916
    10. '    ' → logprob: -10.13509464263916

Token 114: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31966468691825867
    2. 'for' (adapté à ' for') → logprob: -1.319664716720581
    3. '       ' → logprob: -5.069664478302002
    4. '   ' → logprob: -9.44466495513916
    5. ' ' → logprob: -11.56966495513916
    6. '	for' → logprob: -11.81966495513916
    7. '    ' → logprob: -14.06966495513916
    8. '           ' → logprob: -14.56966495513916
    9. '     ' → logprob: -15.31966495513916
    10. '	   ' → logprob: -16.069664001464844

Token 115: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.38688480854034424
    2. 'j' → logprob: -1.1368848085403442
    3. ' range' → logprob: -12.636884689331055
    4. '    ' → logprob: -12.886884689331055
    5. 'range' → logprob: -12.886884689331055
    6. '```' → logprob: -13.261884689331055
    7. '   ' → logprob: -13.761884689331055
    8. ' ' → logprob: -14.136884689331055
    9. 'w' → logprob: -15.136884689331055
    10. '0' → logprob: -15.136884689331055

Token 116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015309321461245418
    2. 'in' → logprob: -6.50153112411499
    3. ' ' → logprob: -10.626530647277832
    4. '    ' → logprob: -13.376530647277832
    5. '	in' → logprob: -13.751530647277832
    6. '   ' → logprob: -14.501530647277832
    7. '        ' → logprob: -15.001530647277832
    8. '  ' → logprob: -15.751530647277832
    9. '+' → logprob: -16.00153160095215
    10. ',' → logprob: -16.62653160095215

Token 117: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20175275206565857
    2. ' range' → logprob: -1.701752781867981
    3. 'w' → logprob: -8.076752662658691
    4. ' w' → logprob: -10.951752662658691
    5. '(range' → logprob: -11.576752662658691
    6. '(w' → logprob: -13.701752662658691
    7. ' ' → logprob: -15.201752662658691
    8. '(' → logprob: -15.576752662658691
    9. '   ' → logprob: -16.201753616333008
    10. '	range' → logprob: -16.201753616333008

Token 118: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.12836964428424835
    2. 'w' → logprob: -2.1283695697784424
    3. '(' → logprob: -7.2533698081970215
    4. ' w' → logprob: -7.3783698081970215
    5. ' (' → logprob: -10.753369331359863
    6. '   ' → logprob: -10.878369331359863
    7. '6' → logprob: -11.128369331359863
    8. '       ' → logprob: -11.253369331359863
    9. '<w' → logprob: -11.628369331359863
    10. '1' → logprob: -12.378369331359863

Token 119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05047186464071274
    2. '):
' → logprob: -3.050471782684326
    3. ' ):' → logprob: -6.675471782684326
    4. ')' → logprob: -7.550471782684326
    5. ' ):
' → logprob: -10.425472259521484
    6. ':' → logprob: -10.425472259521484
    7. '   ' → logprob: -11.175472259521484
    8. '       ' → logprob: -11.800472259521484
    9. '):

' → logprob: -12.550472259521484
    10. ' )' → logprob: -13.175472259521484

Token 120: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002783783129416406
    2. '                
' → logprob: -9.25027847290039
    3. '           ' → logprob: -9.75027847290039
    4. ':' → logprob: -10.00027847290039
    5. ' if' → logprob: -10.62527847290039
    6. ',' → logprob: -11.25027847290039
    7. '            
' → logprob: -12.00027847290039
    8. '              ' → logprob: -12.12527847290039
    9. '                ' → logprob: -12.37527847290039
    10. '<|end|>' → logprob: -12.37527847290039

Token 121: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1861657351255417
    2. '                   ' → logprob: -2.0611658096313477
    3. '           ' → logprob: -3.8111658096313477
    4. '               ' → logprob: -4.436165809631348
    5. 'if' (adapté à ' if') → logprob: -5.186165809631348
    6. '                ' → logprob: -7.561165809631348
    7. '                    
' → logprob: -7.686165809631348
    8. '                    ' → logprob: -7.811165809631348
    9. ' 
' → logprob: -7.936165809631348
    10. '            ' → logprob: -8.686165809631348

Token 122: ' field' (ID: 3259)
  Prédit: ' field'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' field' → logprob: -0.21414892375469208
    2. 'field' → logprob: -1.7141488790512085
    3. ' not' → logprob: -4.464148998260498
    4. 'not' → logprob: -7.714148998260498
    5. ' ' → logprob: -7.964148998260498
    6. '(field' → logprob: -8.58914852142334
    7. '	field' → logprob: -9.71414852142334
    8. '   ' → logprob: -10.08914852142334
    9. ' fiel' → logprob: -11.71414852142334
    10. '$field' → logprob: -11.83914852142334

Token 123: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.558399319241289e-05
    2. '[j' → logprob: -10.625025749206543
    3. ' [' → logprob: -14.875025749206543
    4. '[' → logprob: -15.250025749206543
    5. '[h' → logprob: -15.500025749206543
    6. '[I' → logprob: -16.375024795532227
    7. '][' → logprob: -16.500024795532227
    8. '   ' → logprob: -16.625024795532227
    9. '[
' → logprob: -17.250024795532227
    10. '[int' → logprob: -18.125024795532227

Token 124: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.1432858109474182
    2. '][' → logprob: -2.0182857513427734
    3. '[i' → logprob: -7.643285751342773
    4. ']' → logprob: -10.268285751342773
    5. '[' → logprob: -10.393285751342773
    6. ' ][' → logprob: -10.893285751342773
    7. ' [' → logprob: -11.143285751342773
    8. '   ' → logprob: -12.143285751342773
    9. '
' → logprob: -12.143285751342773
    10. '[
' → logprob: -12.268285751342773

Token 125: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.5649528298527e-05
    2. ' j' → logprob: -9.500075340270996
    3. '0' → logprob: -15.625075340270996
    4. '	j' → logprob: -15.750075340270996
    5. '   ' → logprob: -16.125076293945312
    6. ' ' → logprob: -16.625076293945312
    7. ':j' → logprob: -16.625076293945312
    8. '[j' → logprob: -16.750076293945312
    9. '
' → logprob: -17.000076293945312
    10. ',j' → logprob: -17.625076293945312

Token 126: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7125617265701294
    2. ']' → logprob: -0.9625617265701294
    3. '!=' → logprob: -2.46256160736084
    4. ' not' → logprob: -4.08756160736084
    5. ']!=' → logprob: -4.33756160736084
    6. ' ]' → logprob: -4.96256160736084
    7. ')' → logprob: -6.08756160736084
    8. '!='' → logprob: -6.71256160736084
    9. ']!='' → logprob: -7.33756160736084
    10. 'not' → logprob: -7.46256160736084

Token 127: ' not' (ID: 625)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.21866478025913239
    2. ' !=' → logprob: -1.7186647653579712
    3. ' not' → logprob: -4.218664646148682
    4. '!='' → logprob: -6.343664646148682
    5. 'not' → logprob: -7.468664646148682
    6. '==' → logprob: -11.09366512298584
    7. 'and' → logprob: -11.96866512298584
    8. '!="' → logprob: -11.96866512298584
    9. ']!=' → logprob: -12.21866512298584
    10. '()!=' → logprob: -12.59366512298584

Token 128: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14340171217918396
    2. 'in' → logprob: -2.018401622772217
    3. ' ' → logprob: -8.393402099609375
    4. ' '' → logprob: -8.768402099609375
    5. '=' → logprob: -9.143402099609375
    6. '==' → logprob: -9.393402099609375
    7. ''' → logprob: -10.893402099609375
    8. '=='' → logprob: -11.018402099609375
    9. ']' → logprob: -11.143402099609375
    10. '  ' → logprob: -11.143402099609375

Token 129: ' ['' (ID: 5140)
  Prédit: ''O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''O' → logprob: -0.25067803263664246
    2. '['' → logprob: -2.125678062438965
    3. ''' → logprob: -3.000678062438965
    4. '"O' → logprob: -3.625678062438965
    5. '('' → logprob: -4.625678062438965
    6. ''.' → logprob: -5.250678062438965
    7. '"' → logprob: -5.625678062438965
    8. '["' → logprob: -6.250678062438965
    9. ' ['' → logprob: -6.375678062438965
    10. ' '' → logprob: -6.625678062438965

Token 130: '.',' (ID: 36660)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.48997414112091064
    2. '.' → logprob: -1.1149741411209106
    3. '.',' → logprob: -2.989974021911621
    4. '.O' → logprob: -4.864974021911621
    5. '.'' → logprob: -8.489974021911621
    6. ''O' → logprob: -8.614974021911621
    7. ''.' → logprob: -8.614974021911621
    8. '.","' → logprob: -8.739974021911621
    9. '',' → logprob: -8.989974021911621
    10. '.",' → logprob: -9.364974021911621

Token 131: ' '' (ID: 461)
  Prédit: ''O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''O' → logprob: -0.001251538866199553
    2. ' '' → logprob: -7.251251697540283
    3. ''' → logprob: -8.251251220703125
    4. ''o' → logprob: -8.376251220703125
    5. 'O' → logprob: -11.001251220703125
    6. '"O' → logprob: -11.251251220703125
    7. '’O' → logprob: -12.251251220703125
    8. ''A' → logprob: -12.626251220703125
    9. ''U' → logprob: -12.751251220703125
    10. '   ' → logprob: -13.251251220703125

Token 132: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -1.8908587662735954e-05
    2. '0' → logprob: -12.000019073486328
    3. ''O' → logprob: -12.875019073486328
    4. 'o' → logprob: -13.250019073486328
    5. 'X' → logprob: -13.375019073486328
    6. '.' → logprob: -13.750019073486328
    7. '#' → logprob: -14.250019073486328
    8. '-' → logprob: -14.375019073486328
    9. ''' → logprob: -14.500019073486328
    10. 'R' → logprob: -14.625019073486328

Token 133: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.8330665826797485
    2. '']:' → logprob: -0.8330665826797485
    3. '']:
' → logprob: -2.083066463470459
    4. ']' → logprob: -5.833066463470459
    5. '',' → logprob: -6.708066463470459
    6. ']:' → logprob: -7.208066463470459
    7. '"]:' → logprob: -7.708066463470459
    8. ''' → logprob: -7.833066463470459
    9. ' ']' → logprob: -9.458066940307617
    10. ']:
' → logprob: -10.083066940307617

Token 134: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.008166061714291573
    2. ':' → logprob: -5.5081658363342285
    3. 'and' → logprob: -5.6331658363342285
    4. ':
' → logprob: -7.7581658363342285
    5. '               ' → logprob: -10.633166313171387
    6. '                   ' → logprob: -10.883166313171387
    7. '           ' → logprob: -11.008166313171387
    8. '                       ' → logprob: -12.258166313171387
    9. ',' → logprob: -13.133166313171387
    10. '<|end|>' → logprob: -13.133166313171387

Token 135: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.31342247128486633
    2. 'not' → logprob: -1.313422441482544
    3. 'visited' → logprob: -9.188422203063965
    4. '!' → logprob: -10.938422203063965
    5. ' visited' → logprob: -11.563422203063965
    6. '
' → logprob: -11.688422203063965
    7. '   ' → logprob: -11.938422203063965
    8. '(not' → logprob: -12.313422203063965
    9. '	not' → logprob: -12.688422203063965
    10. '

' → logprob: -14.188422203063965

Token 136: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.6931478977203369
    2. 'visited' → logprob: -0.6931478977203369
    3. 'visit' → logprob: -15.943147659301758
    4. ' ' → logprob: -15.943147659301758
    5. 'Visited' → logprob: -15.943147659301758
    6. '
' → logprob: -16.193147659301758
    7. 'vis' → logprob: -16.693147659301758
    8. ' visit' → logprob: -16.693147659301758
    9. '   ' → logprob: -16.943147659301758
    10. '           ' → logprob: -17.818147659301758

Token 137: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.630610641877865e-06
    2. ' [' → logprob: -13.125006675720215
    3. '[' → logprob: -13.875006675720215
    4. '
' → logprob: -14.000006675720215
    5. '[j' → logprob: -14.000006675720215
    6. '[I' → logprob: -14.250006675720215
    7. '```' → logprob: -14.500006675720215
    8. '][' → logprob: -14.875006675720215
    9. '[
' → logprob: -15.500006675720215
    10. '

' → logprob: -16.5000057220459

Token 138: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05557478219270706
    2. '[i' → logprob: -2.930574893951416
    3. '[j' → logprob: -8.055574417114258
    4. '[' → logprob: -8.430574417114258
    5. ' ][' → logprob: -9.680574417114258
    6. ']' → logprob: -10.305574417114258
    7. '   ' → logprob: -11.180574417114258
    8. ' [' → logprob: -11.430574417114258
    9. ']][' → logprob: -11.680574417114258
    10. ''][' → logprob: -12.305574417114258

Token 139: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00020377879263833165
    2. '][' → logprob: -8.625204086303711
    3. ' j' → logprob: -11.250204086303711
    4. '[j' → logprob: -12.875204086303711
    5. '   ' → logprob: -13.250204086303711
    6. ' ' → logprob: -13.500204086303711
    7. '
' → logprob: -14.000204086303711
    8. '```' → logprob: -14.000204086303711
    9. ',j' → logprob: -14.250204086303711
    10. '[' → logprob: -14.250204086303711

Token 140: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.048983484506607056
    2. ']:
' → logprob: -3.048983573913574
    3. ']' → logprob: -8.673983573913574
    4. ' ]' → logprob: -8.798983573913574
    5. ':' → logprob: -10.423983573913574
    6. ']:
' → logprob: -10.548983573913574
    7. ']:

' → logprob: -11.298983573913574
    8. '']:' → logprob: -13.298983573913574
    9. '"]:' → logprob: -13.798983573913574
    10. ']:


' → logprob: -14.048983573913574

Token 141: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.48140090703964233
    2. ':' → logprob: -1.106400966644287
    3. ':
' → logprob: -3.981400966644287
    4. '                    
' → logprob: -3.981400966644287
    5. '               ' → logprob: -5.606400966644287
    6. ',' → logprob: -6.356400966644287
    7. '                ' → logprob: -6.606400966644287
    8. '<|end|>' → logprob: -6.731400966644287
    9. ' :' → logprob: -7.106400966644287
    10. '                       ' → logprob: -7.231400966644287

Token 142: ' q' (ID: 2335)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.6705487966537476
    2. ' queue' → logprob: -0.9205487966537476
    3. '                   ' → logprob: -2.545548915863037
    4. '                       ' → logprob: -5.420548915863037
    5. 'color' → logprob: -5.795548915863037
    6. 'q' (adapté à ' q') → logprob: -6.170548915863037
    7. ' q' → logprob: -7.170548915863037
    8. ' color' → logprob: -7.170548915863037
    9. 'stack' → logprob: -7.920548915863037
    10. '
' → logprob: -9.170548439025879

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04319363459944725
    2. '=' → logprob: -3.1681935787200928
    3. '.append' → logprob: -9.043193817138672
    4. '.' → logprob: -9.793193817138672
    5. ' ' → logprob: -11.668193817138672
    6. '.enqueue' → logprob: -13.543193817138672
    7. '    ' → logprob: -13.668193817138672
    8. ' .' → logprob: -14.168193817138672
    9. '.add' → logprob: -14.168193817138672
    10. '	' → logprob: -14.168193817138672

Token 144: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.018150413408875465
    2. ' deque' → logprob: -4.018150329589844
    3. 'de' → logprob: -15.018150329589844
    4. 'Deque' → logprob: -15.768150329589844
    5. '	de' → logprob: -19.643150329589844
    6. '(de' → logprob: -20.518150329589844
    7. 'collections' → logprob: -20.768150329589844
    8. 'queue' → logprob: -21.518150329589844
    9. ' ' → logprob: -21.518150329589844
    10. '   ' → logprob: -21.893150329589844

Token 145: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.0056077116169035435
    2. '()' → logprob: -5.505607604980469
    3. '()
' → logprob: -6.505607604980469
    4. '[(' → logprob: -10.380607604980469
    5. '((' → logprob: -14.380607604980469
    6. '([' → logprob: -14.630607604980469
    7. '()\' → logprob: -14.880607604980469
    8. '()

' → logprob: -15.380607604980469
    9. '([
' → logprob: -15.880607604980469
    10. '(' → logprob: -16.25560760498047

Token 146: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15306557714939117
    2. 'q' → logprob: -2.7780656814575195
    3. '<|end|>' → logprob: -3.2780656814575195
    4. ' q' → logprob: -3.6530656814575195
    5. '                    
' → logprob: -5.0280656814575195
    6. '               ' → logprob: -6.4030656814575195
    7. '<|end|>' → logprob: -6.7780656814575195
    8. '                       ' → logprob: -6.7780656814575195
    9. '                    ' → logprob: -6.9030656814575195
    10. '       ' → logprob: -7.4030656814575195

Token 147: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.008144664578139782
    2. ' q' → logprob: -4.883144855499268
    3. '                   ' → logprob: -7.633144855499268
    4. '	q' → logprob: -10.75814437866211
    5. '                    
' → logprob: -11.25814437866211
    6. '   ' → logprob: -12.63314437866211
    7. '
' → logprob: -12.88314437866211
    8. '               ' → logprob: -13.13314437866211
    9. 'visited' → logprob: -13.38314437866211
    10. '       ' → logprob: -13.50814437866211

Token 148: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.424530435353518e-05
    2. '.enqueue' → logprob: -10.250094413757324
    3. '.' → logprob: -10.375094413757324
    4. '.put' → logprob: -11.375094413757324
    5. 'append' → logprob: -12.375094413757324
    6. ' .' → logprob: -12.625094413757324
    7. '.push' → logprob: -12.750094413757324
    8. '.extend' → logprob: -12.875094413757324
    9. ').' → logprob: -14.375094413757324
    10. '.add' → logprob: -14.500094413757324

Token 149: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.750000953674316
    3. '(((' → logprob: -16.5
    4. ' ((' → logprob: -17.125
    5. '([(' → logprob: -18.25
    6. '[(' → logprob: -19.625
    7. '([' → logprob: -20.375
    8. ')((' → logprob: -20.5
    9. ' ' → logprob: -20.5
    10. '   ' → logprob: -20.75

Token 150: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.1424973713001236e-05
    2. ' i' → logprob: -10.500031471252441
    3. ')i' → logprob: -13.375031471252441
    4. ')' → logprob: -13.875031471252441
    5. '(i' → logprob: -14.250031471252441
    6. '   ' → logprob: -15.625031471252441
    7. '
' → logprob: -15.875031471252441
    8. ',i' → logprob: -16.125030517578125
    9. '_i' → logprob: -16.250030517578125
    10. '                   ' → logprob: -16.750030517578125

Token 151: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3869519829750061
    2. ',j' → logprob: -1.1369519233703613
    3. ' ,' → logprob: -9.76195240020752
    4. ',q' → logprob: -11.63695240020752
    5. ',
' → logprob: -12.63695240020752
    6. ',i' → logprob: -13.01195240020752
    7. ',n' → logprob: -13.63695240020752
    8. ',x' → logprob: -13.76195240020752
    9. ')' → logprob: -13.88695240020752
    10. ',p' → logprob: -14.26195240020752

Token 152: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.29579097032546997
    2. '))
' → logprob: -1.4207909107208252
    3. ')' → logprob: -4.420791149139404
    4. ')
' → logprob: -6.045791149139404
    5. '                   ' → logprob: -9.795790672302246
    6. ' ))
' → logprob: -10.545790672302246
    7. ' ))' → logprob: -10.920790672302246
    8. '))
' → logprob: -11.170790672302246
    9. '))

' → logprob: -12.420790672302246
    10. '));' → logprob: -12.670790672302246

Token 153: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10244271904230118
    2. '                    
' → logprob: -3.727442741394043
    3. ' 
' → logprob: -3.977442741394043
    4. '
' → logprob: -4.102442741394043
    5. ' visited' → logprob: -4.102442741394043
    6. '<|end|>' → logprob: -4.602442741394043
    7. 'visited' → logprob: -5.227442741394043
    8. '                    ' → logprob: -6.227442741394043
    9. '  
' → logprob: -7.102442741394043
    10. ' ' → logprob: -7.602442741394043

Token 154: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.04451550543308258
    2. ' visited' → logprob: -3.794515609741211
    3. 'connected' → logprob: -4.794515609741211
    4. '                   ' → logprob: -5.169515609741211
    5. ' connected' → logprob: -6.294515609741211
    6. 'positions' → logprob: -6.419515609741211
    7. 'cluster' → logprob: -6.919515609741211
    8. 'color' → logprob: -7.544515609741211
    9. 'component' → logprob: -7.669515609741211
    10. ' positions' → logprob: -8.044515609741211

Token 155: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.869639476761222e-05
    2. ')[' → logprob: -10.875039100646973
    3. '[' → logprob: -11.625039100646973
    4. '[I' → logprob: -12.125039100646973
    5. '][' → logprob: -13.625039100646973
    6. '[q' → logprob: -13.875039100646973
    7. ')' → logprob: -14.000039100646973
    8. '[j' → logprob: -14.875039100646973
    9. ' [' → logprob: -15.125039100646973
    10. '```' → logprob: -15.250039100646973

Token 156: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03647629916667938
    2. '[i' → logprob: -3.4114763736724854
    3. '[j' → logprob: -6.661476135253906
    4. ')[' → logprob: -7.161476135253906
    5. ')][' → logprob: -7.786476135253906
    6. '[' → logprob: -8.786476135253906
    7. ']][' → logprob: -9.286476135253906
    8. ']' → logprob: -10.661476135253906
    9. ' ][' → logprob: -11.036476135253906
    10. '])[' → logprob: -11.161476135253906

Token 157: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.5570885807392187e-05
    2. ' j' → logprob: -12.375015258789062
    3. '][' → logprob: -12.625015258789062
    4. '1' → logprob: -12.875015258789062
    5. '[j' → logprob: -13.000015258789062
    6. '0' → logprob: -13.250015258789062
    7. ' ' → logprob: -14.500015258789062
    8. '[' → logprob: -15.500015258789062
    9. '   ' → logprob: -15.500015258789062
    10. '	j' → logprob: -15.750015258789062

Token 158: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02158799022436142
    2. ')' → logprob: -4.14658784866333
    3. ']=' → logprob: -5.27158784866333
    4. '][' → logprob: -9.021588325500488
    5. ' =' → logprob: -9.646588325500488
    6. '])' → logprob: -9.771588325500488
    7. '=' → logprob: -10.271588325500488
    8. ')=' → logprob: -10.271588325500488
    9. '[' → logprob: -10.396588325500488
    10. ' ]' → logprob: -11.021588325500488

Token 159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08916062861680984
    2. ' =' → logprob: -2.464160680770874
    3. '[' → logprob: -9.089160919189453
    4. ']' → logprob: -10.089160919189453
    5. ' ' → logprob: -10.089160919189453
    6. ']=' → logprob: -11.089160919189453
    7. '=True' → logprob: -12.089160919189453
    8. ')' → logprob: -13.839160919189453
    9. '	' → logprob: -14.089160919189453
    10. '   ' → logprob: -14.589160919189453

Token 160: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01416350994259119
    2. ' True' → logprob: -4.264163494110107
    3. ' ' → logprob: -19.264163970947266
    4. '(True' → logprob: -19.514163970947266
    5. 'Tr' → logprob: -20.639163970947266
    6. '   ' → logprob: -21.514163970947266
    7. '1' → logprob: -21.639163970947266
    8. ' Tru' → logprob: -22.764163970947266
    9. 'False' → logprob: -22.889163970947266
    10. '=True' → logprob: -23.264163970947266

Token 161: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27335864305496216
    2. '                   ' → logprob: -1.5233585834503174
    3. '                    
' → logprob: -4.1483588218688965
    4. '<|end|>' → logprob: -7.0233588218688965
    5. ' 
' → logprob: -7.3983588218688965
    6. ',' → logprob: -7.3983588218688965
    7. '                    ' → logprob: -7.5233588218688965
    8. '  
' → logprob: -7.5233588218688965
    9. '    
' → logprob: -7.7733588218688965
    10. '
' → logprob: -8.773358345031738

Token 162: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06326543539762497
    2. '
' → logprob: -3.188265323638916
    3. '                    
' → logprob: -4.563265323638916
    4. '   ' → logprob: -6.188265323638916
    5. '               ' → logprob: -6.563265323638916
    6. '                    ' → logprob: -7.188265323638916
    7. '           ' → logprob: -7.313265323638916
    8. ' 
' → logprob: -7.313265323638916
    9. ' while' → logprob: -7.563265323638916
    10. '       ' → logprob: -7.563265323638916

Token 163: ' comp' (ID: 1050)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -1.6812059879302979
    2. 'blocks' → logprob: -2.056205987930298
    3. 'same' → logprob: -2.181205987930298
    4. 'connected' → logprob: -2.306205987930298
    5. 'group' → logprob: -2.431205987930298
    6. 'cells' → logprob: -2.431205987930298
    7. ' connected' → logprob: -2.806205987930298
    8. 'positions' → logprob: -2.806205987930298
    9. 'cluster' → logprob: -2.931205987930298
    10. 'component' → logprob: -3.181205987930298

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8174670934677124
    2. 'onent' → logprob: -1.1924670934677124
    3. 'on' → logprob: -2.317467212677002
    4. '=[]' → logprob: -2.817467212677002
    5. 'osition' → logprob: -3.192467212677002
    6. '=[]
' → logprob: -3.692467212677002
    7. '   ' → logprob: -4.817467212677002
    8. ',' → logprob: -5.192467212677002
    9. '=' → logprob: -6.067467212677002
    10. '_cells' → logprob: -6.317467212677002

Token 165: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.008664678782224655
    2. ' [(' → logprob: -4.758664608001709
    3. '[]' → logprob: -10.008665084838867
    4. '[((' → logprob: -12.758665084838867
    5. ' ' → logprob: -13.883665084838867
    6. ' []' → logprob: -14.758665084838867
    7. '[' → logprob: -15.258665084838867
    8. '[]
' → logprob: -15.508665084838867
    9. '[
' → logprob: -15.508665084838867
    10. '   ' → logprob: -16.008665084838867

Token 166: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1756367712223437e-05
    2. ' i' → logprob: -11.500011444091797
    3. ')' → logprob: -14.625011444091797
    4. '0' → logprob: -15.000011444091797
    5. '   ' → logprob: -15.125011444091797
    6. '
' → logprob: -15.875011444091797
    7. ' ' → logprob: -16.000011444091797
    8. ')i' → logprob: -16.750011444091797
    9. '(i' → logprob: -16.875011444091797
    10. '_i' → logprob: -17.750011444091797

Token 167: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.014236493967473507
    2. ',' → logprob: -4.2642364501953125
    3. ' ,' → logprob: -9.639236450195312
    4. 'j' → logprob: -12.514236450195312
    5. '
' → logprob: -13.889236450195312
    6. ',
' → logprob: -14.014236450195312
    7. ' j' → logprob: -15.014236450195312
    8. '	j' → logprob: -15.389236450195312
    9. ';j' → logprob: -15.514236450195312
    10. ' ' → logprob: -15.514236450195312

Token 168: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00107389607001096
    2. ')]
' → logprob: -6.876073837280273
    3. ')]

' → logprob: -11.126073837280273
    4. ']' → logprob: -11.251073837280273
    5. ' )' → logprob: -12.001073837280273
    6. ')' → logprob: -12.126073837280273
    7. ')]
' → logprob: -15.126073837280273
    8. ' ]' → logprob: -15.376073837280273
    9. ',' → logprob: -15.501073837280273
    10. '       ' → logprob: -15.751073837280273

Token 169: '                   ' (ID: 699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2574461102485657
    2. '<|end|>' → logprob: -2.632446050643921
    3. '                   ' → logprob: -2.757446050643921
    4. ' 
' → logprob: -4.1324462890625
    5. '  
' → logprob: -4.2574462890625
    6. '                    
' → logprob: -4.3824462890625
    7. '    
' → logprob: -4.5074462890625
    8. ' while' → logprob: -4.6324462890625
    9. '       ' → logprob: -5.0074462890625
    10. '   ' → logprob: -5.3824462890625

Token 170: ' c' (ID: 274)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.22855406999588013
    2. '                   ' → logprob: -2.2285540103912354
    3. ' while' → logprob: -2.4785540103912354
    4. '
' → logprob: -4.7285542488098145
    5. '       ' → logprob: -6.2285542488098145
    6. '           ' → logprob: -7.1035542488098145
    7. '   ' → logprob: -7.6035542488098145
    8. '               ' → logprob: -8.103553771972656
    9. '```' → logprob: -9.103553771972656
    10. '	while' → logprob: -9.228553771972656

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5558496117591858
    2. 'olor' → logprob: -1.180849552154541
    3. '=' → logprob: -2.180849552154541
    4. '=color' → logprob: -6.055849552154541
    5. '_color' → logprob: -6.930849552154541
    6. 'color' → logprob: -6.930849552154541
    7. 'ol' → logprob: -7.055849552154541
    8. 'ur' → logprob: -7.180849552154541
    9. 'har' → logprob: -8.8058500289917
    10. ' ' → logprob: -9.5558500289917

Token 172: ' field' (ID: 3259)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.011079183779656887
    2. ' field' → logprob: -4.51107931137085
    3. 'ield' → logprob: -10.511078834533691
    4. '(field' → logprob: -12.886078834533691
    5. '[field' → logprob: -14.511078834533691
    6. '	field' → logprob: -14.886078834533691
    7. '$field' → logprob: -15.261078834533691
    8. ' ' → logprob: -15.386078834533691
    9. '.field' → logprob: -15.511078834533691
    10. '   ' → logprob: -16.761079788208008

Token 173: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.77627644513268e-06
    2. '[' → logprob: -12.000008583068848
    3. '[
' → logprob: -13.875008583068848
    4. 'i' → logprob: -13.875008583068848
    5. '][' → logprob: -15.375008583068848
    6. ' [' → logprob: -16.500009536743164
    7. '[I' → logprob: -16.500009536743164
    8. '[field' → logprob: -16.750009536743164
    9. '```' → logprob: -17.000009536743164
    10. '[j' → logprob: -17.500009536743164

Token 174: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08382157236337662
    2. '[j' → logprob: -2.5838215351104736
    3. '[i' → logprob: -5.458821773529053
    4. ']' → logprob: -8.333821296691895
    5. '[' → logprob: -9.208821296691895
    6. ')[' → logprob: -9.833821296691895
    7. '[
' → logprob: -9.958821296691895
    8. 'j' → logprob: -10.083821296691895
    9. ' ][' → logprob: -10.208821296691895
    10. ')][' → logprob: -10.333821296691895

Token 175: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005960084032267332
    2. 'i' → logprob: -5.130959987640381
    3. '][' → logprob: -10.505960464477539
    4. ' j' → logprob: -13.505960464477539
    5. '```' → logprob: -13.880960464477539
    6. '
' → logprob: -14.380960464477539
    7. '   ' → logprob: -14.880960464477539
    8. '[j' → logprob: -15.505960464477539
    9. ' ' → logprob: -15.755960464477539
    10. '0' → logprob: -15.755960464477539

Token 176: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6224120855331421
    2. ')]' → logprob: -0.9974120855331421
    3. ')' → logprob: -2.3724122047424316
    4. ']
' → logprob: -7.497412204742432
    5. '                   ' → logprob: -7.872412204742432
    6. ']

' → logprob: -8.747411727905273
    7. '               ' → logprob: -10.622411727905273
    8. ')]
' → logprob: -10.622411727905273
    9. ')
' → logprob: -10.747411727905273
    10. ')]

' → logprob: -10.997411727905273

Token 177: '                   ' (ID: 699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.030052807182073593
    2. '                   ' → logprob: -4.280052661895752
    3. '       ' → logprob: -4.905052661895752
    4. '   ' → logprob: -6.405052661895752
    5. ' while' → logprob: -6.655052661895752
    6. ' 
' → logprob: -7.030052661895752
    7. '    
' → logprob: -7.030052661895752
    8. '                    
' → logprob: -7.155052661895752
    9. '  
' → logprob: -7.655052661895752
    10. '
' → logprob: -7.905052661895752

Token 178: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6349599361419678
    2. 'while' (adapté à ' while') → logprob: -1.3849599361419678
    3. '       ' → logprob: -2.2599599361419678
    4. ' while' → logprob: -2.3849599361419678
    5. '                   ' → logprob: -4.134960174560547
    6. '	while' → logprob: -6.134960174560547
    7. '           ' → logprob: -6.259960174560547
    8. '   ' → logprob: -6.509960174560547
    9. '               ' → logprob: -7.259960174560547
    10. '        
' → logprob: -8.259960174560547

Token 179: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.01105937734246254
    2. ' q' → logprob: -4.511059284210205
    3. 'len' → logprob: -11.511059761047363
    4. '	q' → logprob: -14.511059761047363
    5. ' len' → logprob: -14.636059761047363
    6. ' ' → logprob: -15.261059761047363
    7. '   ' → logprob: -15.886059761047363
    8. '
' → logprob: -16.011058807373047
    9. '(q' → logprob: -17.886058807373047
    10. '  ' → logprob: -18.011058807373047

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014434030279517174
    2. '):' → logprob: -4.264433860778809
    3. '>:' → logprob: -9.139433860778809
    4. '<|end|>' → logprob: -9.889433860778809
    5. ':
' → logprob: -10.764433860778809
    6. '():' → logprob: -10.889433860778809
    7. '}:' → logprob: -11.264433860778809
    8. '):
' → logprob: -11.639433860778809
    9. ')' → logprob: -11.764433860778809
    10. '<|end|>' → logprob: -12.389433860778809

Token 181: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.07897748053073883
    2. 'x' → logprob: -3.203977584838867
    3. '                   ' → logprob: -3.828977584838867
    4. ' x' → logprob: -5.578977584838867
    5. 'y' → logprob: -6.828977584838867
    6. '                        
' → logprob: -6.953977584838867
    7. ',' → logprob: -7.203977584838867
    8. '       ' → logprob: -7.203977584838867
    9. ' (' → logprob: -7.328977584838867
    10. '                           ' → logprob: -7.328977584838867

Token 182: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0232709851115942
    2. ' x' → logprob: -3.773271083831787
    3. '	x' → logprob: -11.023270606994629
    4. '   ' → logprob: -13.023270606994629
    5. 'xi' → logprob: -13.398270606994629
    6. 'ci' → logprob: -13.398270606994629
    7. '
' → logprob: -13.398270606994629
    8. 'y' → logprob: -14.398270606994629
    9. '```' → logprob: -14.898270606994629
    10. 'cx' → logprob: -15.648270606994629

Token 183: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6932365894317627
    2. ',y' → logprob: -0.6932365894317627
    3. ' ,' → logprob: -9.943236351013184
    4. ',x' → logprob: -10.693236351013184
    5. ',q' → logprob: -12.068236351013184
    6. ',
' → logprob: -12.443236351013184
    7. '+' → logprob: -12.818236351013184
    8. 'y' → logprob: -13.318236351013184
    9. ',d' → logprob: -14.068236351013184
    10. ',n' → logprob: -14.068236351013184

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43153268098831177
    2. '=' → logprob: -1.056532621383667
    3. ')' → logprob: -6.056532859802246
    4. ')=' → logprob: -7.806532859802246
    5. '=q' → logprob: -9.931532859802246
    6. ' )' → logprob: -11.681532859802246
    7. ',' → logprob: -12.181532859802246
    8. '    ' → logprob: -12.556532859802246
    9. '),' → logprob: -13.181532859802246
    10. '        ' → logprob: -13.431532859802246

Token 185: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.5759398937225342
    2. 'q' → logprob: -0.8259398937225342
    3. '	q' → logprob: -15.075940132141113
    4. '*q' → logprob: -17.200939178466797
    5. ' ' → logprob: -17.325939178466797
    6. '_q' → logprob: -18.075939178466797
    7. '=q' → logprob: -18.200939178466797
    8. 'qx' → logprob: -18.450939178466797
    9. 'de' → logprob: -18.825939178466797
    10. '.q' → logprob: -18.825939178466797

Token 186: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.08030344545841217
    2. '.pop' → logprob: -2.580303430557251
    3. '.' → logprob: -6.58030366897583
    4. '.dequeue' → logprob: -11.455303192138672
    5. '.poll' → logprob: -12.580303192138672
    6. ' .' → logprob: -12.580303192138672
    7. 'pop' → logprob: -12.705303192138672
    8. '().' → logprob: -13.580303192138672
    9. 'p' → logprob: -14.205303192138672
    10. ').' → logprob: -14.580303192138672

Token 187: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0486091673374176
    2. 'op' → logprob: -3.0486092567443848
    3. 'opl' → logprob: -11.673608779907227
    4. 'ople' → logprob: -11.673608779907227
    5. 'opup' → logprob: -13.423608779907227
    6. 'opt' → logprob: -13.548608779907227
    7. 'o' → logprob: -14.048608779907227
    8. 'opf' → logprob: -15.173608779907227
    9. '```' → logprob: -15.173608779907227
    10. '   ' → logprob: -16.423608779907227

Token 188: '()
' (ID: 1234)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6401287913322449
    2. ')' → logprob: -0.7651287913322449
    3. '
' → logprob: -5.6401286125183105
    4. '                       ' → logprob: -5.7651286125183105
    5. '       ' → logprob: -8.015129089355469
    6. ')
' → logprob: -9.265129089355469
    7. '()
' → logprob: -9.515129089355469
    8. '<|end|>' → logprob: -9.890129089355469
    9. '()' → logprob: -10.015129089355469
    10. '                        
' → logprob: -10.140129089355469

Token 189: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.02583410032093525
    2. '                   ' → logprob: -4.150834083557129
    3. '
' → logprob: -4.900834083557129
    4. ' for' → logprob: -6.775834083557129
    5. '                        
' → logprob: -7.775834083557129
    6. 'for' → logprob: -8.525834083557129
    7. '               ' → logprob: -8.650834083557129
    8. '           ' → logprob: -9.400834083557129
    9. '       ' → logprob: -9.775834083557129
    10. '<|end|>' → logprob: -9.775834083557129

Token 190: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3836379051208496
    2. '                       ' → logprob: -1.5086379051208496
    3. ' for' → logprob: -2.3836379051208496
    4. '       ' → logprob: -5.75863790512085
    5. '
' → logprob: -6.63363790512085
    6. '           ' → logprob: -7.75863790512085
    7. '                   ' → logprob: -8.508638381958008
    8. '                        
' → logprob: -10.258638381958008
    9. '               ' → logprob: -10.883638381958008
    10. '```' → logprob: -11.133638381958008

Token 191: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0001239196863025427
    2. ' dx' → logprob: -9.000123977661133
    3. '(dx' → logprob: -16.000123977661133
    4. 'd' → logprob: -16.250123977661133
    5. 'nx' → logprob: -16.375123977661133
    6. '```' → logprob: -17.000123977661133
    7. '_dx' → logprob: -17.125123977661133
    8. '   ' → logprob: -19.125123977661133
    9. 'tx' → logprob: -19.875123977661133
    10. '

' → logprob: -19.875123977661133

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005589892389252782
    2. ',d' → logprob: -7.500558853149414
    3. ' ,' → logprob: -12.750558853149414
    4. ',y' → logprob: -13.125558853149414
    5. ',
' → logprob: -15.000558853149414
    6. ',int' → logprob: -15.875558853149414
    7. ',w' → logprob: -16.000558853149414
    8. ',de' → logprob: -16.250558853149414
    9. ',j' → logprob: -16.375558853149414
    10. ',my' → logprob: -16.750558853149414

Token 193: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0005530327325686812
    2. ' dy' → logprob: -7.500553131103516
    3. 'Dy' → logprob: -20.625553131103516
    4. '.dy' → logprob: -21.125553131103516
    5. 'd' → logprob: -22.750553131103516
    6. 'dym' → logprob: -23.500553131103516
    7. '
' → logprob: -24.125553131103516
    8. '

' → logprob: -24.750553131103516
    9. 'dx' → logprob: -24.875553131103516
    10. 'dyr' → logprob: -25.375553131103516

Token 194: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01829228736460209
    2. 'in' → logprob: -4.018292427062988
    3. ')' → logprob: -9.018292427062988
    4. '<|end|>' → logprob: -11.893292427062988
    5. ' ' → logprob: -12.143292427062988
    6. ',' → logprob: -12.643292427062988
    7. ' )' → logprob: -14.018292427062988
    8. 'In' → logprob: -14.143292427062988
    9. '   ' → logprob: -14.268292427062988
    10. '	in' → logprob: -14.268292427062988

Token 195: ' dirs' (ID: 99999)
  Prédit: 'dirs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirs' → logprob: -0.0619848296046257
    2. ' dirs' → logprob: -2.8119847774505615
    3. 'dire' → logprob: -11.18698501586914
    4. 'dir' → logprob: -13.68698501586914
    5. ' ' → logprob: -14.31198501586914
    6. '_dirs' → logprob: -14.56198501586914
    7. 'Dirs' → logprob: -15.06198501586914
    8. ' directions' → logprob: -15.43698501586914
    9. '```' → logprob: -15.81198501586914
    10. 'dims' → logprob: -16.31198501586914

Token 196: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5235762596130371
    2. ':
' → logprob: -0.8985762596130371
    3. ' :
' → logprob: -9.148576736450195
    4. '):
' → logprob: -9.773576736450195
    5. '<|end|>' → logprob: -9.773576736450195
    6. ',' → logprob: -9.898576736450195
    7. ' :' → logprob: -9.898576736450195
    8. ':

' → logprob: -10.148576736450195
    9. ':
' → logprob: -11.148576736450195
    10. '():
' → logprob: -11.273576736450195

Token 197: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.00927573349326849
    2. '<|end|>' → logprob: -5.384275913238525
    3. '                       ' → logprob: -6.009275913238525
    4. '                            
' → logprob: -7.634275913238525
    5. '                            ' → logprob: -7.759275913238525
    6. '                               ' → logprob: -8.009275436401367
    7. '
' → logprob: -8.634275436401367
    8. '           ' → logprob: -9.259275436401367
    9. '                        ' → logprob: -9.259275436401367
    10. ',' → logprob: -9.384275436401367

Token 198: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.014166799373924732
    2. 'nx' (adapté à ' nx') → logprob: -4.264166831970215
    3. '(nx' → logprob: -13.514166831970215
    4. ' new' → logprob: -13.764166831970215
    5. ' tx' → logprob: -15.014166831970215
    6. ' xx' → logprob: -15.514166831970215
    7. 'tx' → logprob: -16.7641658782959
    8. ' nxt' → logprob: -17.0141658782959
    9. '```' → logprob: -17.0141658782959
    10. ' x' → logprob: -17.2641658782959

Token 199: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005498529877513647
    2. ',' → logprob: -5.50549840927124
    3. ' =' → logprob: -6.63049840927124
    4. '=x' → logprob: -9.630498886108398
    5. ',x' → logprob: -11.005498886108398
    6. ',n' → logprob: -11.505498886108398
    7. '=n' → logprob: -12.380498886108398
    8. '=
' → logprob: -13.255498886108398
    9. ' ,' → logprob: -13.880498886108398
    10. 'x' → logprob: -16.1304988861084

Token 200: ' ny' (ID: 4423)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007108822464942932
    2. ' x' → logprob: -7.250710964202881
    3. 'y' → logprob: -14.000710487365723
    4. 'ny' → logprob: -16.75071144104004
    5. '0' → logprob: -17.50071144104004
    6. ' ' → logprob: -17.87571144104004
    7. '   ' → logprob: -18.75071144104004
    8. '=' → logprob: -18.75071144104004
    9. '(x' → logprob: -18.75071144104004
    10. '```' → logprob: -18.75071144104004

Token 201: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141470432281494
    2. ' =' → logprob: -1.701414704322815
    3. ')' → logprob: -14.451415061950684
    4. '=
' → logprob: -15.576415061950684
    5. ')=' → logprob: -15.701415061950684
    6. '=x' → logprob: -15.826415061950684
    7. ' =
' → logprob: -16.326414108276367
    8. ' ' → logprob: -16.451414108276367
    9. '=n' → logprob: -16.576414108276367
    10. '<|end|>' → logprob: -16.951414108276367

Token 202: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01815006136894226
    2. ' x' → logprob: -4.0181498527526855
    3. '	x' → logprob: -16.768150329589844
    4. ' ' → logprob: -17.268150329589844
    5. '(x' → logprob: -18.643150329589844
    6. ')x' → logprob: -19.018150329589844
    7. '
' → logprob: -19.393150329589844
    8. '>x' → logprob: -19.643150329589844
    9. ',x' → logprob: -19.893150329589844
    10. '=x' → logprob: -19.893150329589844

Token 203: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20157267153263092
    2. ' +' → logprob: -1.7015726566314697
    3. '+x' → logprob: -8.95157241821289
    4. '+d' → logprob: -10.70157241821289
    5. '+
' → logprob: -12.82657241821289
    6. ' +
' → logprob: -14.32657241821289
    7. '+k' → logprob: -14.45157241821289
    8. '+,' → logprob: -14.57657241821289
    9. '＋' → logprob: -14.70157241821289
    10. '+y' → logprob: -14.82657241821289

Token 204: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -3.130576806142926e-05
    2. ' dx' → logprob: -10.500031471252441
    3. '0' → logprob: -13.125031471252441
    4. '1' → logprob: -14.250031471252441
    5. '(dx' → logprob: -14.625031471252441
    6. '_dx' → logprob: -15.750031471252441
    7. '
' → logprob: -16.750030517578125
    8. 'Dx' → logprob: -16.875030517578125
    9. '.dx' → logprob: -17.125030517578125
    10. '   ' → logprob: -17.250030517578125

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014393717981874943
    2. ',y' → logprob: -4.2643938064575195
    3. ' ,' → logprob: -8.38939380645752
    4. ',n' → logprob: -13.38939380645752
    5. ',x' → logprob: -14.38939380645752
    6. ',j' → logprob: -14.63939380645752
    7. ',
' → logprob: -15.13939380645752
    8. ',w' → logprob: -17.139392852783203
    9. '_,' → logprob: -18.139392852783203
    10. ',m' → logprob: -18.764392852783203

Token 206: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014163628220558167
    2. ' y' → logprob: -4.264163494110107
    3. ' ' → logprob: -16.889163970947266
    4. 'x' → logprob: -17.389163970947266
    5. '   ' → logprob: -17.514163970947266
    6. '	y' → logprob: -18.264163970947266
    7. '    ' → logprob: -19.014163970947266
    8. '  ' → logprob: -19.139163970947266
    9. '<|end|>' → logprob: -19.639163970947266
    10. 'j' → logprob: -19.889163970947266

Token 207: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0022229375317692757
    2. '+y' → logprob: -6.127223014831543
    3. '+x' → logprob: -11.877223014831543
    4. ',y' → logprob: -12.002223014831543
    5. ',' → logprob: -12.252223014831543
    6. ' +' → logprob: -12.377223014831543
    7. '+
' → logprob: -12.377223014831543
    8. '+w' → logprob: -12.377223014831543
    9. '+,' → logprob: -12.752223014831543
    10. '+d' → logprob: -13.252223014831543

Token 208: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -4.251091377227567e-05
    2. ' dy' → logprob: -10.250042915344238
    3. 'dx' → logprob: -11.875042915344238
    4. '0' → logprob: -17.375041961669922
    5. 'd' → logprob: -18.250041961669922
    6. '1' → logprob: -18.375041961669922
    7. '.dy' → logprob: -19.250041961669922
    8. 'y' → logprob: -19.500041961669922
    9. 'Dy' → logprob: -20.000041961669922
    10. 'ny' → logprob: -20.375041961669922

Token 209: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 210: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.11394409090280533
    2. '<|end|>' → logprob: -3.2389440536499023
    3. '
' → logprob: -3.3639440536499023
    4. '           ' → logprob: -4.613944053649902
    5. '               ' → logprob: -5.363944053649902
    6. '                       ' → logprob: -5.988944053649902
    7. '  
' → logprob: -5.988944053649902
    8. '                   ' → logprob: -5.988944053649902
    9. ')' → logprob: -6.238944053649902
    10. '                               ' → logprob: -6.613944053649902

Token 211: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11226817220449448
    2. 'if' (adapté à ' if') → logprob: -3.2372682094573975
    3. '<|end|>' → logprob: -3.6122682094573975
    4. ' ' → logprob: -4.112267971038818
    5. '                           ' → logprob: -4.737267971038818
    6. ' 
' → logprob: -5.362267971038818
    7. '
' → logprob: -5.737267971038818
    8. '                            ' → logprob: -5.862267971038818
    9. '0' → logprob: -7.862267971038818
    10. '                        ' → logprob: -7.862267971038818

Token 212: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6931559443473816
    2. ' ' → logprob: -0.6931559443473816
    3. 'nx' → logprob: -13.193156242370605
    4. ' (' → logprob: -13.693156242370605
    5. ' nx' → logprob: -13.693156242370605
    6. '  ' → logprob: -13.818156242370605
    7. '(' → logprob: -13.818156242370605
    8. '   ' → logprob: -13.818156242370605
    9. '(nx' → logprob: -13.943156242370605
    10. ' ' → logprob: -15.943156242370605

Token 213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014036978245712817
    2. ' ' → logprob: -8.875140190124512
    3. 'nx' → logprob: -14.750140190124512
    4. '(nx' → logprob: -16.125141143798828
    5. '(' → logprob: -17.000141143798828
    6. '   ' → logprob: -18.250141143798828
    7. '
' → logprob: -18.375141143798828
    8. ' nx' → logprob: -18.500141143798828
    9. ' (' → logprob: -19.375141143798828
    10. '-' → logprob: -20.125141143798828

Token 214: '<=' (ID: 16672)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3132622241973877
    2. '<=' → logprob: -1.3132622241973877
    3. ' ' → logprob: -16.438262939453125
    4. 'x' → logprob: -16.563262939453125
    5. '<' → logprob: -17.063262939453125
    6. '0' → logprob: -17.063262939453125
    7. ',' → logprob: -17.063262939453125
    8. '>' → logprob: -17.313262939453125
    9. ')<=' → logprob: -17.438262939453125
    10. ' <' → logprob: -17.563262939453125

Token 215: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00020938136731274426
    2. ' nx' → logprob: -8.50020980834961
    3. '(nx' → logprob: -12.25020980834961
    4. 'n' → logprob: -14.37520980834961
    5. 'ny' → logprob: -15.12520980834961
    6. '
' → logprob: -17.00020980834961
    7. 'Nx' → logprob: -17.00020980834961
    8. 'x' → logprob: -17.37520980834961
    9. 'nz' → logprob: -17.87520980834961
    10. 'nw' → logprob: -18.37520980834961

Token 216: '<h' (ID: 23843)
  Prédit: '<h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<h' → logprob: -0.6106021404266357
    2. '<n' → logprob: -1.3606021404266357
    3. '<' → logprob: -1.8606021404266357
    4. '<w' → logprob: -3.2356021404266357
    5. ' <' → logprob: -5.610602378845215
    6. '<x' → logprob: -7.360602378845215
    7. 'h' → logprob: -7.610602378845215
    8. '<len' → logprob: -7.860602378845215
    9. '<size' → logprob: -8.985602378845215
    10. 'and' → logprob: -9.360602378845215

Token 217: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889430224895477
    2. 'and' → logprob: -2.5788943767547607
    3. ' ' → logprob: -12.82889461517334
    4. ',' → logprob: -13.57889461517334
    5. '0' → logprob: -16.078893661499023
    6. '                           ' → logprob: -16.203893661499023
    7. '	and' → logprob: -16.328893661499023
    8. ' ,' → logprob: -16.953893661499023
    9. '                            ' → logprob: -16.953893661499023
    10. ')' → logprob: -17.078893661499023

Token 218: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011703446507453918
    2. ' ' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.001171112060547
    4. '  ' → logprob: -17.126171112060547
    5. '<|end|>' → logprob: -18.251171112060547
    6. '
' → logprob: -18.376171112060547
    7. '    ' → logprob: -18.876171112060547
    8. '                           ' → logprob: -19.126171112060547
    9. ' ' → logprob: -19.376171112060547
    10. '                   ' → logprob: -19.938671112060547

Token 219: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4498052223643754e-05
    2. ' ' → logprob: -11.375014305114746
    3. 'ny' → logprob: -12.750014305114746
    4. ' ny' → logprob: -17.500015258789062
    5. 'n' → logprob: -19.000015258789062
    6. '
' → logprob: -19.375015258789062
    7. '   ' → logprob: -19.500015258789062
    8. 'w' → logprob: -19.625015258789062
    9. 'nx' → logprob: -20.000015258789062
    10. '```' → logprob: -20.375015258789062

Token 220: '<=' (ID: 16672)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.5640954971313477
    2. '<' → logprob: -0.9390954971313477
    3. ' ny' → logprob: -3.3140954971313477
    4. ' <' → logprob: -6.189095497131348
    5. 'w' → logprob: -6.939095497131348
    6. '<n' → logprob: -7.689095497131348
    7. ' ' → logprob: -9.689095497131348
    8. '<w' → logprob: -10.064095497131348
    9. '<=' → logprob: -10.189095497131348
    10. 'and' → logprob: -10.314095497131348

Token 221: 'ny' (ID: 3008)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0011216417187824845
    2. 'ny' → logprob: -7.376121520996094
    3. ' w' → logprob: -7.751121520996094
    4. ' ny' → logprob: -11.251121520996094
    5. 'y' → logprob: -11.376121520996094
    6. '12' → logprob: -11.626121520996094
    7. '
' → logprob: -12.126121520996094
    8. '0' → logprob: -12.126121520996094
    9. '   ' → logprob: -12.251121520996094
    10. 'wy' → logprob: -12.376121520996094

Token 222: '<w' (ID: 45719)
  Prédit: '<w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<w' → logprob: -0.0012654747115448117
    2. 'w' → logprob: -6.751265525817871
    3. ' <' → logprob: -9.876265525817871
    4. '<' → logprob: -10.626265525817871
    5. '<len' → logprob: -12.751265525817871
    6. '[w' → logprob: -13.251265525817871
    7. '<W' → logprob: -13.501265525817871
    8. '>w' → logprob: -13.751265525817871
    9. '&w' → logprob: -13.876265525817871
    10. '	w' → logprob: -13.876265525817871

Token 223: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0040874239057302475
    2. 'and' → logprob: -5.504087448120117
    3. '                           ' → logprob: -12.754087448120117
    4. '                               ' → logprob: -13.379087448120117
    5. '                       ' → logprob: -13.629087448120117
    6. ' ' → logprob: -13.754087448120117
    7. '                            ' → logprob: -14.629087448120117
    8. '               ' → logprob: -15.129087448120117
    9. '                   ' → logprob: -15.254087448120117
    10. ':
' → logprob: -15.629087448120117

Token 224: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.500699520111084
    2. 'field' → logprob: -1.375699520111084
    3. ' not' → logprob: -2.000699520111084
    4. ' field' → logprob: -5.125699520111084
    5. '(not' → logprob: -11.375699996948242
    6. '   ' → logprob: -11.750699996948242
    7. '(field' → logprob: -11.875699996948242
    8. '           ' → logprob: -12.000699996948242
    9. '               ' → logprob: -13.375699996948242
    10. ' ' → logprob: -13.375699996948242

Token 225: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.04858918860554695
    2. ' visited' → logprob: -3.0485892295837402
    3. '<|end|>' → logprob: -13.798588752746582
    4. '
' → logprob: -14.673588752746582
    5. ' ' → logprob: -15.798588752746582
    6. 'Visited' → logprob: -15.923588752746582
    7. 'visit' → logprob: -17.0485897064209
    8. '   ' → logprob: -17.9235897064209
    9. ' 
' → logprob: -18.1735897064209
    10. 'visible' → logprob: -19.0485897064209

Token 226: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.931863051955588e-05
    2. ' [' → logprob: -10.375059127807617
    3. '```' → logprob: -11.750059127807617
    4. '[' → logprob: -11.875059127807617
    5. '
' → logprob: -12.500059127807617
    6. '   ' → logprob: -12.875059127807617
    7. '[
' → logprob: -13.500059127807617
    8. '

' → logprob: -13.875059127807617
    9. '(nx' → logprob: -14.125059127807617
    10. '][' → logprob: -14.375059127807617

Token 227: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.900034299585968e-05
    2. '[n' → logprob: -9.375088691711426
    3. '[x' → logprob: -12.750088691711426
    4. '[' → logprob: -14.000088691711426
    5. 'y' → logprob: -15.750088691711426
    6. '][' → logprob: -17.000089645385742
    7. '(nx' → logprob: -17.250089645385742
    8. '```' → logprob: -17.750089645385742
    9. ' x' → logprob: -18.125089645385742
    10. 'z' → logprob: -18.375089645385742

Token 228: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16045188903808594
    2. '[n' → logprob: -1.910451889038086
    3. ' ][' → logprob: -9.410451889038086
    4. '[' → logprob: -10.160451889038086
    5. '   ' → logprob: -10.785451889038086
    6. '"][' → logprob: -10.910451889038086
    7. ']' → logprob: -11.035451889038086
    8. ''][' → logprob: -11.285451889038086
    9. '(n' → logprob: -11.910451889038086
    10. '```' → logprob: -12.160451889038086

Token 229: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0002087853499688208
    2. ' ny' → logprob: -8.500208854675293
    3. 'nj' → logprob: -13.000208854675293
    4. 'n' → logprob: -13.875208854675293
    5. 'y' → logprob: -13.875208854675293
    6. 'nx' → logprob: -14.000208854675293
    7. 'yn' → logprob: -16.750207901000977
    8. 'nym' → logprob: -16.875207901000977
    9. '][' → logprob: -17.250207901000977
    10. '[' → logprob: -17.375207901000977

Token 230: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.474100261926651
    2. 'and' → logprob: -0.9741002321243286
    3. ']' → logprob: -11.724100112915039
    4. '                           ' → logprob: -11.849100112915039
    5. '                       ' → logprob: -13.099100112915039
    6. '           ' → logprob: -13.724100112915039
    7. '               ' → logprob: -13.849100112915039
    8. '                   ' → logprob: -14.349100112915039
    9. '```' → logprob: -14.599100112915039
    10. '<|end|>' → logprob: -14.724100112915039

Token 231: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6931578516960144
    2. 'and' → logprob: -0.6931578516960144
    3. '                           ' → logprob: -12.818158149719238
    4. '           ' → logprob: -13.068158149719238
    5. '               ' → logprob: -13.318158149719238
    6. '	and' → logprob: -13.943158149719238
    7. '                       ' → logprob: -14.193158149719238
    8. '<|end|>' → logprob: -14.443158149719238
    9. '                   ' → logprob: -14.818158149719238
    10. ' ' → logprob: -15.318158149719238

Token 232: ' field' (ID: 3259)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.2519829273223877
    2. ' field' → logprob: -1.5019829273223877
    3. '(field' → logprob: -10.876982688903809
    4. '                           ' → logprob: -11.126982688903809
    5. '	field' → logprob: -12.251982688903809
    6. '   ' → logprob: -12.376982688903809
    7. ' ' → logprob: -12.626982688903809
    8. '[field' → logprob: -12.751982688903809
    9. '                               ' → logprob: -13.876982688903809
    10. '                   ' → logprob: -14.126982688903809

Token 233: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -4.1557283111615106e-05
    2. '[' → logprob: -11.500041961669922
    3. '```' → logprob: -11.625041961669922
    4. '][' → logprob: -11.875041961669922
    5. '[
' → logprob: -12.375041961669922
    6. 'nx' → logprob: -13.125041961669922
    7. ' [' → logprob: -13.375041961669922
    8. '[x' → logprob: -13.375041961669922
    9. '(nx' → logprob: -13.875041961669922
    10. '
' → logprob: -14.000041961669922

Token 234: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.7432603272027336e-06
    2. '[x' → logprob: -13.750001907348633
    3. '[n' → logprob: -15.500001907348633
    4. '][' → logprob: -16.125001907348633
    5. '[' → logprob: -16.125001907348633
    6. '```' → logprob: -16.375001907348633
    7. 'nx' → logprob: -16.750001907348633
    8. '(nx' → logprob: -18.500001907348633
    9. '   ' → logprob: -18.625001907348633
    10. ' x' → logprob: -18.875001907348633

Token 235: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005276569165289402
    2. '[n' → logprob: -5.255276679992676
    3. ']' → logprob: -11.130276679992676
    4. '[x' → logprob: -11.505276679992676
    5. ' ][' → logprob: -12.380276679992676
    6. '"][' → logprob: -12.755276679992676
    7. ''][' → logprob: -13.005276679992676
    8. '[' → logprob: -13.130276679992676
    9. 'nx' → logprob: -13.880276679992676
    10. '   ' → logprob: -13.880276679992676

Token 236: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -6.24179228907451e-05
    2. ' ny' → logprob: -10.250061988830566
    3. 'y' → logprob: -11.000061988830566
    4. '][' → logprob: -12.250061988830566
    5. 'nj' → logprob: -13.000061988830566
    6. 'nx' → logprob: -13.625061988830566
    7. '[' → logprob: -14.750061988830566
    8. '```' → logprob: -14.875061988830566
    9. 'n' → logprob: -15.125061988830566
    10. 'nyi' → logprob: -15.250061988830566

Token 237: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.12089324742555618
    2. ']' → logprob: -2.2458932399749756
    3. '==' → logprob: -4.870893478393555
    4. ' ==' → logprob: -7.995893478393555
    5. '']==' → logprob: -11.120893478393555
    6. ')==' → logprob: -12.120893478393555
    7. ' ]' → logprob: -12.370893478393555
    8. '[' → logprob: -12.370893478393555
    9. ']=' → logprob: -13.620893478393555
    10. '==
' → logprob: -13.995893478393555

Token 238: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0031784253660589457
    2. ' c' → logprob: -5.753178596496582
    3. ' ' → logprob: -15.378178596496582
    4. '   ' → logprob: -16.003177642822266
    5. '	c' → logprob: -16.503177642822266
    6. '
' → logprob: -16.753177642822266
    7. ')c' → logprob: -17.128177642822266
    8. '(c' → logprob: -18.003177642822266
    9. '```' → logprob: -18.065677642822266
    10. 'field' → logprob: -18.065677642822266

Token 239: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23069526255130768
    2. ':
' → logprob: -1.6056952476501465
    3. '):
' → logprob: -6.4806952476501465
    4. '                       ' → logprob: -6.7306952476501465
    5. '):' → logprob: -6.9806952476501465
    6. '                           ' → logprob: -7.3556952476501465
    7. ' and' → logprob: -7.8556952476501465
    8. '                   ' → logprob: -8.730695724487305
    9. '<|end|>' → logprob: -8.980695724487305
    10. ':

' → logprob: -9.605695724487305

Token 240: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.023124929517507553
    2. '                           ' → logprob: -3.898124933242798
    3. '                                   ' → logprob: -7.273124694824219
    4. '                       ' → logprob: -7.523124694824219
    5. '               ' → logprob: -8.523124694824219
    6. '<|end|>' → logprob: -8.523124694824219
    7. ' visited' → logprob: -8.648124694824219
    8. '                   ' → logprob: -9.023124694824219
    9. '                                       ' → logprob: -9.273124694824219
    10. ':' → logprob: -9.523124694824219

Token 241: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.4348546266555786
    2. 'visited' (adapté à ' visited') → logprob: -1.0598546266555786
    3. '                               ' → logprob: -5.434854507446289
    4. '                                   ' → logprob: -6.559854507446289
    5. '                                       ' → logprob: -8.809854507446289
    6. ' visit' → logprob: -9.559854507446289
    7. '                                           ' → logprob: -10.559854507446289
    8. ' q' → logprob: -10.809854507446289
    9. 'visit' → logprob: -10.809854507446289
    10. '                                ' → logprob: -11.559854507446289

Token 242: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.75000286102295
    3. ' [' → logprob: -14.75000286102295
    4. '[
' → logprob: -15.12500286102295
    5. '```' → logprob: -15.12500286102295
    6. '
' → logprob: -16.250001907348633
    7. 'nx' → logprob: -16.250001907348633
    8. '   ' → logprob: -17.125001907348633
    9. '(nx' → logprob: -17.375001907348633
    10. '

' → logprob: -18.375001907348633

Token 243: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.961759259458631e-06
    2. 'nx' → logprob: -12.625004768371582
    3. '[x' → logprob: -14.000004768371582
    4. '(nx' → logprob: -15.125004768371582
    5. '[n' → logprob: -15.875004768371582
    6. ' nx' → logprob: -16.0000057220459
    7. ' x' → logprob: -16.7500057220459
    8. '```' → logprob: -17.0000057220459
    9. '[' → logprob: -17.5000057220459
    10. '][' → logprob: -17.7500057220459

Token 244: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.01615707017481327
    2. '][' → logprob: -4.141157150268555
    3. '[' → logprob: -9.891157150268555
    4. '
' → logprob: -11.266157150268555
    5. 'nx' → logprob: -11.641157150268555
    6. '[x' → logprob: -11.766157150268555
    7. ' [' → logprob: -12.141157150268555
    8. ' ][' → logprob: -12.141157150268555
    9. '[
' → logprob: -12.516157150268555
    10. '   ' → logprob: -12.516157150268555

Token 245: 'ny' (ID: 3008)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0004599823441822082
    2. 'ny' → logprob: -8.000459671020508
    3. '(nx' → logprob: -9.875459671020508
    4. '[n' → logprob: -10.125459671020508
    5. ' nx' → logprob: -10.500459671020508
    6. '
' → logprob: -13.500459671020508
    7. '[' → logprob: -13.750459671020508
    8. 'n' → logprob: -13.875459671020508
    9. 'nj' → logprob: -14.625459671020508
    10. 'x' → logprob: -14.625459671020508

Token 246: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00389104220084846
    2. ']=' → logprob: -5.7538909912109375
    3. '=' → logprob: -7.3788909912109375
    4. ' =' → logprob: -9.628890991210938
    5. '=True' → logprob: -11.003890991210938
    6. ')' → logprob: -12.878890991210938
    7. ' ]' → logprob: -13.003890991210938
    8. 'True' → logprob: -13.503890991210938
    9. '[' → logprob: -16.503890991210938
    10. ')=' → logprob: -16.628890991210938

Token 247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029781728982925415
    2. ' =' → logprob: -3.5297818183898926
    3. '=True' → logprob: -10.404781341552734
    4. ']=' → logprob: -14.404781341552734
    5. 'True' → logprob: -15.529781341552734
    6. ']' → logprob: -15.529781341552734
    7. '=
' → logprob: -17.654781341552734
    8. '[' → logprob: -17.904781341552734
    9. ')=' → logprob: -18.154781341552734
    10. ')' → logprob: -18.529781341552734

Token 248: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.5491004129871726e-05
    2. ' True' → logprob: -10.000045776367188
    3. '(True' → logprob: -18.500045776367188
    4. '=True' → logprob: -20.125045776367188
    5. '
' → logprob: -21.125045776367188
    6. '.True' → logprob: -22.125045776367188
    7. 'true' → logprob: -22.375045776367188
    8. '[' → logprob: -23.125045776367188
    9. 'False' → logprob: -23.250045776367188
    10. 'Tr' → logprob: -23.750045776367188

Token 249: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.060966070741415024
    2. '
' → logprob: -4.1859660148620605
    3. ' q' → logprob: -4.1859660148620605
    4. '<|end|>' → logprob: -4.1859660148620605
    5. '                                
' → logprob: -5.0609660148620605
    6. ')' → logprob: -6.0609660148620605
    7. ',' → logprob: -6.8109660148620605
    8. '                                ' → logprob: -7.5609660148620605
    9. ' 
' → logprob: -7.6859660148620605
    10. 'q' → logprob: -7.9359660148620605

Token 250: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0013449963880702853
    2. '                                
' → logprob: -7.751345157623291
    3. ' q' → logprob: -8.501344680786133
    4. '<|end|>' → logprob: -8.751344680786133
    5. ',' → logprob: -8.876344680786133
    6. '
' → logprob: -9.251344680786133
    7. '							' → logprob: -9.751344680786133
    8. '                                ' → logprob: -9.876344680786133
    9. ')' → logprob: -10.501344680786133
    10. '                           ' → logprob: -10.501344680786133

Token 251: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.002655678428709507
    2. ' q' → logprob: -6.002655506134033
    3. 'comp' → logprob: -8.627655982971191
    4. ' comp' → logprob: -14.377655982971191
    5. '(q' → logprob: -16.502655029296875
    6. '                           ' → logprob: -17.127655029296875
    7. '	q' → logprob: -17.252655029296875
    8. '```' → logprob: -17.502655029296875
    9. 'append' → logprob: -17.752655029296875
    10. 'c' → logprob: -17.877655029296875

Token 252: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00021271906734909862
    2. '.' → logprob: -8.875212669372559
    3. 'append' → logprob: -9.625212669372559
    4. '.extend' → logprob: -13.000212669372559
    5. '.app' → logprob: -13.500212669372559
    6. ' .' → logprob: -14.125212669372559
    7. '.p' → logprob: -14.125212669372559
    8. 'app' → logprob: -14.375212669372559
    9. '.put' → logprob: -15.625212669372559
    10. '.enqueue' → logprob: -16.000213623046875

Token 253: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00011927806917810813
    2. '(nx' → logprob: -9.12511920928955
    3. '(' → logprob: -11.50011920928955
    4. '(n' → logprob: -15.87511920928955
    5. ' ((' → logprob: -17.250120162963867
    6. '(
' → logprob: -17.875120162963867
    7. '(x' → logprob: -19.250120162963867
    8. ' (' → logprob: -19.875120162963867
    9. '(nn' → logprob: -20.125120162963867
    10. '[(' → logprob: -20.250120162963867

Token 254: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.000924561289139092
    2. '(nx' → logprob: -7.000924587249756
    3. ' nx' → logprob: -11.375924110412598
    4. '(n' → logprob: -14.375924110412598
    5. 'n' → logprob: -14.500924110412598
    6. '
' → logprob: -14.750924110412598
    7. '   ' → logprob: -16.500925064086914
    8. '(' → logprob: -17.250925064086914
    9. '[n' → logprob: -17.500925064086914
    10. ' (' → logprob: -18.125925064086914

Token 255: ',' (ID: 11)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.02250467613339424
    2. ',' → logprob: -3.8975045680999756
    3. ' ny' → logprob: -6.522504806518555
    4. 'n' → logprob: -8.647504806518555
    5. 'nx' → logprob: -8.772504806518555
    6. ',n' → logprob: -10.022504806518555
    7. 'y' → logprob: -10.772504806518555
    8. '
' → logprob: -11.522504806518555
    9. '(nx' → logprob: -11.897504806518555
    10. '(n' → logprob: -12.022504806518555

Token 256: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0002636006975080818
    2. ' ny' → logprob: -8.250263214111328
    3. '
' → logprob: -14.000263214111328
    4. 'nyi' → logprob: -14.750263214111328
    5. 'nyt' → logprob: -15.625263214111328
    6. 'n' → logprob: -15.750263214111328
    7. '```' → logprob: -16.250263214111328
    8. '   ' → logprob: -16.375263214111328
    9. 'nym' → logprob: -16.500263214111328
    10. 'y' → logprob: -16.750263214111328

Token 257: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.313420832157135
    2. ')' → logprob: -1.3134207725524902
    3. '))
' → logprob: -9.313421249389648
    4. ')
' → logprob: -10.688421249389648
    5. '))' → logprob: -10.813421249389648
    6. '                               ' → logprob: -10.938421249389648
    7. '                           ' → logprob: -12.188421249389648
    8. ' )
' → logprob: -14.688421249389648
    9. ')`
' → logprob: -14.813421249389648
    10. '                   ' → logprob: -15.188421249389648

Token 258: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0002907718007918447
    2. '                           ' → logprob: -9.125290870666504
    3. '
' → logprob: -10.125290870666504
    4. '                                
' → logprob: -10.250290870666504
    5. '                                   ' → logprob: -10.375290870666504
    6. '<|end|>' → logprob: -11.000290870666504
    7. '                                ' → logprob: -11.625290870666504
    8. '                              ' → logprob: -11.750290870666504
    9. '                   ' → logprob: -11.875290870666504
    10. '							' → logprob: -12.125290870666504

Token 259: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -0.06198303773999214
    2. ' comp' → logprob: -2.811983108520508
    3. '                               ' → logprob: -11.186983108520508
    4. '	comp' → logprob: -14.686983108520508
    5. '                                   ' → logprob: -14.936983108520508
    6. '                           ' → logprob: -15.436983108520508
    7. 'com' → logprob: -15.436983108520508
    8. '.comp' → logprob: -16.311983108520508
    9. '                   ' → logprob: -16.436983108520508
    10. '
' → logprob: -16.686983108520508

Token 260: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.310693111619912e-05
    2. '.' → logprob: -10.375042915344238
    3. '.app' → logprob: -11.625042915344238
    4. ' .' → logprob: -14.000042915344238
    5. '.ap' → logprob: -14.000042915344238
    6. '.extend' → logprob: -14.375042915344238
    7. '.add' → logprob: -14.750042915344238
    8. 'append' → logprob: -16.500043869018555
    9. '.setdefault' → logprob: -16.500043869018555
    10. '.py' → logprob: -16.500043869018555

Token 261: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.580929347255733e-05
    2. '(' → logprob: -11.500016212463379
    3. '(nx' → logprob: -12.125016212463379
    4. '(x' → logprob: -16.375015258789062
    5. '(n' → logprob: -16.500015258789062
    6. ' ((' → logprob: -16.875015258789062
    7. '(
' → logprob: -18.125015258789062
    8. ' ' → logprob: -20.125015258789062
    9. '[(' → logprob: -20.625015258789062
    10. '   ' → logprob: -20.875015258789062

Token 262: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0006672830786556005
    2. ' nx' → logprob: -7.375667095184326
    3. '(nx' → logprob: -10.375667572021484
    4. 'n' → logprob: -12.125667572021484
    5. '
' → logprob: -13.125667572021484
    6. '   ' → logprob: -13.750667572021484
    7. ' ' → logprob: -15.000667572021484
    8. 'xn' → logprob: -15.375667572021484
    9. 'x' → logprob: -15.750667572021484
    10. 'Nx' → logprob: -16.125667572021484

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009722061222419143
    2. ',n' → logprob: -7.375972270965576
    3. ',y' → logprob: -8.375971794128418
    4. ',j' → logprob: -9.875971794128418
    5. ' ,' → logprob: -10.500971794128418
    6. ',
' → logprob: -10.875971794128418
    7. '<|end|>' → logprob: -13.000971794128418
    8. '
' → logprob: -13.125971794128418
    9. ')' → logprob: -13.125971794128418
    10. ',num' → logprob: -13.250971794128418

Token 264: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00013905855303164572
    2. ' ny' → logprob: -9.000139236450195
    3. 'nx' → logprob: -12.250139236450195
    4. '
' → logprob: -12.250139236450195
    5. 'y' → logprob: -13.000139236450195
    6. 'nyi' → logprob: -13.875139236450195
    7. 'nj' → logprob: -14.250139236450195
    8. 'Ny' → logprob: -14.375139236450195
    9. '```' → logprob: -15.750139236450195
    10. '
' → logprob: -15.875139236450195

Token 265: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759903192520142
    2. '))' → logprob: -0.8259903192520142
    3. ')
' → logprob: -10.825990676879883
    4. ')))' → logprob: -11.075990676879883
    5. '))
' → logprob: -11.700990676879883
    6. ')]' → logprob: -12.825990676879883
    7. ')}' → logprob: -13.575990676879883
    8. '),' → logprob: -14.200990676879883
    9. '])' → logprob: -14.700990676879883
    10. ' )' → logprob: -14.950990676879883

Token 266: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08781638741493225
    2. '
' → logprob: -2.5878164768218994
    3. '               ' → logprob: -5.33781623840332
    4. '           ' → logprob: -6.58781623840332
    5. '       ' → logprob: -7.33781623840332
    6. '                               ' → logprob: -7.46281623840332
    7. '                       ' → logprob: -7.46281623840332
    8. '```' → logprob: -8.21281623840332
    9. ')' → logprob: -8.58781623840332
    10. '                           ' → logprob: -8.71281623840332

Token 267: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07249996811151505
    2. '       ' → logprob: -3.072499990463257
    3. '
' → logprob: -3.822499990463257
    4. '                    
' → logprob: -7.447499752044678
    5. '           ' → logprob: -7.572499752044678
    6. '```' → logprob: -8.197500228881836
    7. '        
' → logprob: -8.947500228881836
    8. '               ' → logprob: -8.947500228881836
    9. 'if' (adapté à ' if') → logprob: -10.322500228881836
    10. '    
' → logprob: -10.947500228881836

Token 268: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.01815064437687397
    2. 'len' → logprob: -4.018150806427002
    3. '(len' → logprob: -14.268150329589844
    4. '	len' → logprob: -16.143150329589844
    5. '   ' → logprob: -17.393150329589844
    6. '=len' → logprob: -19.143150329589844
    7. ' ' → logprob: -19.268150329589844
    8. '[len' → logprob: -19.893150329589844
    9. ',len' → logprob: -20.393150329589844
    10. '    ' → logprob: -20.643150329589844

Token 269: '(comp' (ID: 60272)
  Prédit: '(comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(comp' → logprob: -1.4736459888808895e-05
    2. '(' → logprob: -11.625014305114746
    3. ' (' → logprob: -12.250014305114746
    4. 'comp' → logprob: -14.250014305114746
    5. '	comp' → logprob: -16.750015258789062
    6. ' comp' → logprob: -16.875015258789062
    7. '(com' → logprob: -17.000015258789062
    8. '(
' → logprob: -17.125015258789062
    9. '(chain' → logprob: -18.125015258789062
    10. '(component' → logprob: -18.750015258789062

Token 270: ')' (ID: 8)
  Prédit: ')>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')>=' → logprob: -0.491734117269516
    2. ')' → logprob: -1.1167341470718384
    3. '>=' → logprob: -2.991734027862549
    4. ' >=' → logprob: -4.616734027862549
    5. ']>=' → logprob: -6.991734027862549
    6. ' )' → logprob: -9.491734504699707
    7. '[' → logprob: -13.491734504699707
    8. ' ' → logprob: -13.741734504699707
    9. '   ' → logprob: -13.741734504699707
    10. ')>' → logprob: -14.241734504699707

Token 271: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5763528347015381
    2. ' >=' → logprob: -0.8263528347015381
    3. ')>=' → logprob: -7.951353073120117
    4. ']>=' → logprob: -9.826353073120117
    5. '   ' → logprob: -12.826353073120117
    6. ' ' → logprob: -13.326353073120117
    7. ')' → logprob: -13.951353073120117
    8. '>' → logprob: -14.451353073120117
    9. '≥' → logprob: -14.826353073120117
    10. '[' → logprob: -14.951353073120117

Token 272: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.500204086303711
    4. '```' → logprob: -16.37520408630371
    5. '
' → logprob: -17.12520408630371
    6. '４' → logprob: -18.81270408630371
    7. '  ' → logprob: -18.87520408630371
    8. '۴' → logprob: -19.12520408630371
    9. '٤' → logprob: -19.37520408630371
    10. '৪' → logprob: -19.81270408630371

Token 273: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014377152547240257
    2. ':
' → logprob: -4.264377117156982
    3. '):' → logprob: -8.76437759399414
    4. '):
' → logprob: -10.88937759399414
    5. ')' → logprob: -11.51437759399414
    6. ' :' → logprob: -12.13937759399414
    7. '                           ' → logprob: -12.51437759399414
    8. '       ' → logprob: -12.63937759399414
    9. '           ' → logprob: -12.63937759399414
    10. '                       ' → logprob: -12.88937759399414

Token 274: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.025607537478208542
    2. '
' → logprob: -4.775607585906982
    3. '                   ' → logprob: -5.150607585906982
    4. '                        
' → logprob: -5.275607585906982
    5. '                           ' → logprob: -6.025607585906982
    6. '           ' → logprob: -7.275607585906982
    7. ':' → logprob: -7.650607585906982
    8. ':
' → logprob: -7.650607585906982
    9. ' for' → logprob: -7.775607585906982
    10. '       ' → logprob: -7.900607585906982

Token 275: ' erased' (ID: 139842)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18360012769699097
    2. '                       ' → logprob: -2.4336001873016357
    3. 'for' → logprob: -2.6836001873016357
    4. '                           ' → logprob: -4.808599948883057
    5. '           ' → logprob: -5.808599948883057
    6. '                   ' → logprob: -8.183600425720215
    7. '
' → logprob: -9.433600425720215
    8. '               ' → logprob: -10.183600425720215
    9. '                               ' → logprob: -10.558600425720215
    10. '                        
' → logprob: -10.683600425720215

Token 276: '_any' (ID: 95226)
  Prédit: '_any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_any' → logprob: -0.003418912645429373
    2. ' =' → logprob: -6.378418922424316
    3. 'Any' → logprob: -6.628418922424316
    4. 'any' → logprob: -8.753418922424316
    5. '[Any' → logprob: -9.378418922424316
    6. '=' → logprob: -10.503418922424316
    7. ' ' → logprob: -11.128418922424316
    8. '   ' → logprob: -11.128418922424316
    9. '_for' → logprob: -11.503418922424316
    10. '                   ' → logprob: -11.628418922424316

Token 277: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1137089878320694
    2. '=' → logprob: -2.238708972930908
    3. '=True' → logprob: -7.113708972930908
    4. ' ' → logprob: -10.863709449768066
    5. '   ' → logprob: -11.488709449768066
    6. '       ' → logprob: -11.488709449768066
    7. ' |=' → logprob: -11.863709449768066
    8. '[' → logprob: -11.863709449768066
    9. '=true' → logprob: -12.113709449768066
    10. '    ' → logprob: -12.738709449768066

Token 278: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.011047814972698689
    2. ' True' → logprob: -4.511047840118408
    3. '   ' → logprob: -17.63604736328125
    4. '=True' → logprob: -18.01104736328125
    5. '(True' → logprob: -18.38604736328125
    6. 'true' → logprob: -18.63604736328125
    7. 'er' → logprob: -21.63604736328125
    8. ' ' → logprob: -21.63604736328125
    9. '```' → logprob: -22.13604736328125
    10. '
' → logprob: -22.13604736328125

Token 279: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03287786617875099
    2. '
' → logprob: -3.5328779220581055
    3. '           ' → logprob: -6.9078779220581055
    4. '                        
' → logprob: -7.0328779220581055
    5. '       ' → logprob: -7.9078779220581055
    6. '               ' → logprob: -8.157877922058105
    7. '                           ' → logprob: -8.907877922058105
    8. '<|end|>' → logprob: -9.032877922058105
    9. ' for' → logprob: -9.657877922058105
    10. '                   ' → logprob: -9.782877922058105

Token 280: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0018445169553160667
    2. '
' → logprob: -6.75184440612793
    3. '       ' → logprob: -8.25184440612793
    4. '           ' → logprob: -8.37684440612793
    5. '                        
' → logprob: -9.25184440612793
    6. '               ' → logprob: -10.50184440612793
    7. ',' → logprob: -11.50184440612793
    8. '                        ' → logprob: -11.62684440612793
    9. '                   ' → logprob: -11.62684440612793
    10. '                           ' → logprob: -11.75184440612793

Token 281: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.48545339703559875
    2. ' for' → logprob: -0.9854533672332764
    3. '                       ' → logprob: -4.4854536056518555
    4. '           ' → logprob: -10.860453605651855
    5. '                   ' → logprob: -11.110453605651855
    6. '       ' → logprob: -13.110453605651855
    7. '                           ' → logprob: -13.235453605651855
    8. '
' → logprob: -13.860453605651855
    9. '               ' → logprob: -14.860453605651855
    10. '   ' → logprob: -14.985453605651855

Token 282: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011939094401896
    2. ' x' → logprob: -5.01193904876709
    3. '(x' → logprob: -5.26193904876709
    4. ' (' → logprob: -10.63693904876709
    5. '   ' → logprob: -15.51193904876709
    6. '
' → logprob: -15.51193904876709
    7. ' ' → logprob: -15.76193904876709
    8. '	x' → logprob: -15.88693904876709
    9. '```' → logprob: -16.386940002441406
    10. '(' → logprob: -16.511940002441406

Token 283: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.03806478902697563
    2. ',' → logprob: -3.28806471824646
    3. ' ,' → logprob: -11.163064956665039
    4. ',j' → logprob: -12.413064956665039
    5. ',x' → logprob: -13.038064956665039
    6. 'y' → logprob: -13.663064956665039
    7. ',w' → logprob: -13.913064956665039
    8. ',
' → logprob: -15.163064956665039
    9. '_,' → logprob: -15.913064956665039
    10. ',v' → logprob: -16.53806495666504

Token 284: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009529097587801516
    2. 'in' → logprob: -7.00095272064209
    3. 'to' → logprob: -11.00095272064209
    4. '                           ' → logprob: -11.50095272064209
    5. ' ' → logprob: -12.75095272064209
    6. '                       ' → logprob: -13.00095272064209
    7. ',' → logprob: -13.50095272064209
    8. ' to' → logprob: -14.12595272064209
    9. '   ' → logprob: -14.25095272064209
    10. 's' → logprob: -14.37595272064209

Token 285: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.023267842829227448
    2. ' comp' → logprob: -3.7732677459716797
    3. 'to' → logprob: -11.02326774597168
    4. '	comp' → logprob: -12.52326774597168
    5. 'com' → logprob: -13.89826774597168
    6. ' to' → logprob: -14.02326774597168
    7. '(comp' → logprob: -15.14826774597168
    8. '   ' → logprob: -15.89826774597168
    9. '_comp' → logprob: -17.02326774597168
    10. ' ' → logprob: -17.02326774597168

Token 286: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1285756379365921
    2. ':
' → logprob: -2.128575563430786
    3. '                           ' → logprob: -6.503575801849365
    4. '):
' → logprob: -9.878575325012207
    5. '):' → logprob: -10.128575325012207
    6. ':
' → logprob: -11.128575325012207
    7. '           ' → logprob: -11.753575325012207
    8. '                       ' → logprob: -12.003575325012207
    9. '                               ' → logprob: -12.128575325012207
    10. ':

' → logprob: -12.503575325012207

Token 287: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.3557106852531433
    2. ' to' → logprob: -1.230710744857788
    3. 'to' → logprob: -5.105710506439209
    4. '                               ' → logprob: -7.230710506439209
    5. '                       ' → logprob: -9.230710983276367
    6. '                            
' → logprob: -9.355710983276367
    7. '           ' → logprob: -9.605710983276367
    8. '
' → logprob: -9.980710983276367
    9. '                   ' → logprob: -10.730710983276367
    10. '   ' → logprob: -10.730710983276367

Token 288: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.3912768065929413
    2. ' to' → logprob: -1.1412768363952637
    3. '                           ' → logprob: -5.766276836395264
    4. '                               ' → logprob: -6.766276836395264
    5. '   ' → logprob: -9.391276359558105
    6. '               ' → logprob: -11.766276359558105
    7. '           ' → logprob: -11.891276359558105
    8. ' ' → logprob: -12.016276359558105
    9. '  ' → logprob: -13.516276359558105
    10. '	to' → logprob: -13.766276359558105

Token 289: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00023298001906368881
    2. 'erase' → logprob: -8.375232696533203
    3. ' erase' → logprob: -14.125232696533203
    4. '_er' → logprob: -14.125232696533203
    5. '.erase' → logprob: -14.625232696533203
    6. 'Erase' → logprob: -15.500232696533203
    7. 'er' → logprob: -16.000232696533203
    8. ' _' → logprob: -16.750232696533203
    9. '[' → logprob: -17.000232696533203
    10. 'to' → logprob: -17.250232696533203

Token 290: 'erase' (ID: 91229)
  Prédit: 'erase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erase' → logprob: -0.00019257364328950644
    2. 'rase' → logprob: -8.875192642211914
    3. ' erase' → logprob: -10.000192642211914
    4. '_' → logprob: -13.375192642211914
    5. '.erase' → logprob: -13.375192642211914
    6. 'to' → logprob: -13.875192642211914
    7. 'erse' → logprob: -14.125192642211914
    8. '```' → logprob: -14.500192642211914
    9. 'r' → logprob: -15.250192642211914
    10. 'er' → logprob: -15.500192642211914

Token 291: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.4849443838757e-06
    2. ' [' → logprob: -13.125004768371582
    3. '[y' → logprob: -13.875004768371582
    4. '[' → logprob: -14.250004768371582
    5. '[i' → logprob: -14.500004768371582
    6. '```' → logprob: -16.625003814697266
    7. 'x' → logprob: -17.000003814697266
    8. '[s' → logprob: -17.250003814697266
    9. '   ' → logprob: -17.875003814697266
    10. '
' → logprob: -18.375003814697266

Token 292: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00016861737822182477
    2. '[y' → logprob: -8.750168800354004
    3. ' ][' → logprob: -12.125168800354004
    4. ']' → logprob: -12.750168800354004
    5. '"][' → logprob: -14.500168800354004
    6. '[x' → logprob: -14.500168800354004
    7. ']][' → logprob: -15.625168800354004
    8. ''][' → logprob: -15.750168800354004
    9. '[' → logprob: -16.250167846679688
    10. '                       ' → logprob: -16.500167846679688

Token 293: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.318681188422488e-05
    2. ' y' → logprob: -11.25001335144043
    3. '
' → logprob: -16.12501335144043
    4. ',y' → logprob: -18.50001335144043
    5. ']' → logprob: -18.62501335144043
    6. 'x' → logprob: -18.62501335144043
    7. 'yj' → logprob: -18.75001335144043
    8. '<|end|>' → logprob: -18.75001335144043
    9. '	y' → logprob: -19.12501335144043
    10. 'j' → logprob: -19.37501335144043

Token 294: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011449072510004044
    2. ']=' → logprob: -4.511448860168457
    3. '=' → logprob: -8.136448860168457
    4. ' ]' → logprob: -9.261448860168457
    5. ' =' → logprob: -11.511448860168457
    6. ')' → logprob: -13.136448860168457
    7. '=True' → logprob: -14.386448860168457
    8. ']
' → logprob: -14.636448860168457
    9. '[' → logprob: -16.011449813842773
    10. ')=' → logprob: -16.511449813842773

Token 295: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859872907400131
    2. ' =' → logprob: -3.0485987663269043
    3. '=True' → logprob: -11.423598289489746
    4. '[' → logprob: -15.048598289489746
    5. ' ' → logprob: -16.923599243164062
    6. ']' → logprob: -17.548599243164062
    7. '=
' → logprob: -17.798599243164062
    8. '=true' → logprob: -17.923599243164062
    9. ']=' → logprob: -18.173599243164062
    10. '=False' → logprob: -18.673599243164062

Token 296: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -7.493430894101039e-05
    2. ' True' → logprob: -9.500075340270996
    3. '(True' → logprob: -18.37507438659668
    4. '=True' → logprob: -20.50007438659668
    5. '   ' → logprob: -22.25007438659668
    6. '.True' → logprob: -23.00007438659668
    7. 'TRUE' → logprob: -23.12507438659668
    8. 'true' → logprob: -23.50007438659668
    9. '1' → logprob: -23.75007438659668
    10. 'False' → logprob: -24.50007438659668

Token 297: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1309167742729187
    2. '       ' → logprob: -2.1309168338775635
    3. '        
' → logprob: -5.755916595458984
    4. '<|end|>' → logprob: -8.380916595458984
    5. '    
' → logprob: -8.505916595458984
    6. '  
' → logprob: -9.255916595458984
    7. '                        
' → logprob: -9.880916595458984
    8. '\n' → logprob: -10.130916595458984
    9. '                            
' → logprob: -10.130916595458984
    10. ' 
' → logprob: -10.380916595458984

Token 298: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08044182509183884
    2. '       ' → logprob: -2.58044171333313
    3. '        
' → logprob: -7.455441951751709
    4. '<|end|>' → logprob: -8.08044147491455
    5. '    
' → logprob: -8.58044147491455
    6. ' 
' → logprob: -8.70544147491455
    7. '  
' → logprob: -8.95544147491455
    8. '\n' → logprob: -10.20544147491455
    9. '   ' → logprob: -10.45544147491455
    10. '
' → logprob: -10.83044147491455

Token 299: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2286575436592102
    2. '
' → logprob: -1.6036574840545654
    3. '        
' → logprob: -5.9786577224731445
    4. ' if' → logprob: -8.728657722473145
    5. '<|end|>' → logprob: -8.728657722473145
    6. 'if' (adapté à ' if') → logprob: -8.853657722473145
    7. '```' → logprob: -9.228657722473145
    8. '    
' → logprob: -9.978657722473145
    9. '   ' → logprob: -10.478657722473145
    10. ' 
' → logprob: -11.103657722473145

Token 300: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.002812601625919342
    2. 'not' → logprob: -5.877812385559082
    3. ' erased' → logprob: -12.627812385559082
    4. ' no' → logprob: -12.877812385559082
    5. '   ' → logprob: -14.377812385559082
    6. ' er' → logprob: -14.877812385559082
    7. ' ' → logprob: -15.127812385559082
    8. ' ' → logprob: -15.252812385559082
    9. '	not' → logprob: -15.752812385559082
    10. 'n' → logprob: -16.1278133392334

Token 301: ' erased' (ID: 139842)
  Prédit: ' erased'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' erased' → logprob: -0.029861105605959892
    2. 'er' → logprob: -3.5298612117767334
    3. ' er' → logprob: -9.154861450195312
    4. 'eras' → logprob: -13.154861450195312
    5. 'erase' → logprob: -13.404861450195312
    6. ' erase' → logprob: -14.779861450195312
    7. '_er' → logprob: -15.154861450195312
    8. 'e' → logprob: -15.779861450195312
    9. ' erad' → logprob: -15.904861450195312
    10. 'ere' → logprob: -16.029861450195312

Token 302: '_any' (ID: 95226)
  Prédit: '_any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_any' → logprob: 0.0
    2. 'any' → logprob: -18.125
    3. 'Any' → logprob: -19.0
    4. '_ANY' → logprob: -20.0
    5. ' any' → logprob: -21.625
    6. '_all' → logprob: -22.0
    7. '-any' → logprob: -22.5
    8. '[Any' → logprob: -22.625
    9. '.any' → logprob: -23.125
    10. '_an' → logprob: -24.5

Token 303: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06253524869680405
    2. ':
' → logprob: -2.812535285949707
    3. '           ' → logprob: -7.562535285949707
    4. '       ' → logprob: -10.062535285949707
    5. ' :' → logprob: -12.812535285949707
    6. ' :
' → logprob: -14.312535285949707
    7. ':
' → logprob: -14.437535285949707
    8. '   ' → logprob: -14.937535285949707
    9. '               ' → logprob: -15.187535285949707
    10. ':return' → logprob: -15.312535285949707

Token 304: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024144348572008312
    2. '       ' → logprob: -9.12524127960205
    3. '
' → logprob: -9.37524127960205
    4. '\n' → logprob: -11.50024127960205
    5. ' break' → logprob: -11.50024127960205
    6. '		' → logprob: -12.12524127960205
    7. '            
' → logprob: -12.25024127960205
    8. '        
' → logprob: -13.00024127960205
    9. '               ' → logprob: -13.12524127960205
    10. 'break' → logprob: -13.25024127960205

Token 305: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002367443637922406
    2. '       ' → logprob: -6.3773674964904785
    3. ' break' → logprob: -7.6273674964904785
    4. 'break' → logprob: -9.00236701965332
    5. '		' → logprob: -11.00236701965332
    6. '
' → logprob: -11.00236701965332
    7. '   ' → logprob: -12.25236701965332
    8. '          ' → logprob: -12.62736701965332
    9. '               ' → logprob: -12.62736701965332
    10. '	       ' → logprob: -12.87736701965332

Token 306: ' chain' (ID: 13464)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27858588099479675
    2. '        
' → logprob: -2.278585910797119
    3. '\n' → logprob: -2.653585910797119
    4. '       ' → logprob: -3.028585910797119
    5. '    
' → logprob: -4.653585910797119
    6. ' 
' → logprob: -6.028585910797119
    7. '  
' → logprob: -6.278585910797119
    8. '<|end|>' → logprob: -6.278585910797119
    9. '
        
' → logprob: -6.528585910797119
    10. '

' → logprob: -7.028585910797119

Token 307: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9994511604309082
    2. '       ' → logprob: -1.1244511604309082
    3. '\n' → logprob: -1.6244511604309082
    4. '        
' → logprob: -2.624451160430908
    5. '    
' → logprob: -3.749451160430908
    6. '  
' → logprob: -5.249451160430908
    7. ' 
' → logprob: -5.749451160430908
    8. '   ' → logprob: -6.874451160430908
    9. '\' → logprob: -7.124451160430908
    10. '<|end|>' → logprob: -7.124451160430908

Token 308: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14358459413051605
    2. '       ' → logprob: -2.8935844898223877
    3. '        
' → logprob: -2.8935844898223877
    4. '    
' → logprob: -4.643584728240967
    5. '  
' → logprob: -5.018584728240967
    6. ' 
' → logprob: -5.768584728240967
    7. '\n' → logprob: -6.643584728240967
    8. '<|end|>' → logprob: -6.643584728240967
    9. '   ' → logprob: -8.643584251403809
    10. '

' → logprob: -8.643584251403809

Token 309: ' chain' (ID: 13464)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2451350837945938
    2. '
' → logprob: -1.6201350688934326
    3. 'chain' (adapté à ' chain') → logprob: -4.495135307312012
    4. '        
' → logprob: -5.495135307312012
    5. ' chain' → logprob: -6.120135307312012
    6. '    
' → logprob: -7.370135307312012
    7. '```' → logprob: -7.745135307312012
    8. '  
' → logprob: -7.870135307312012
    9. '   ' → logprob: -8.745135307312012
    10. ' 
' → logprob: -9.245135307312012

Token 310: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.061967913061380386
    2. '+=' → logprob: -2.8119678497314453
    3. '+' → logprob: -16.186967849731445
    4. ']+=' → logprob: -16.936967849731445
    5. '   ' → logprob: -17.186967849731445
    6. ' +' → logprob: -18.186967849731445
    7. '    ' → logprob: -19.311967849731445
    8. ' ' → logprob: -19.436967849731445
    9. '=' → logprob: -19.436967849731445
    10. ' =' → logprob: -19.811967849731445

Token 311: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -19.62510871887207
    4. '```' → logprob: -20.62510871887207
    5. '
' → logprob: -21.12510871887207
    6. ' ' → logprob: -21.37510871887207
    7. '  ' → logprob: -23.00010871887207
    8. '１' → logprob: -23.12510871887207
    9. '۱' → logprob: -23.62510871887207
    10. ' 
' → logprob: -24.12510871887207

Token 312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -18.75
    4. '   ' → logprob: -19.75
    5. '
' → logprob: -19.875
    6. '１' → logprob: -20.5625
    7. '۱' → logprob: -21.625
    8. '১' → logprob: -22.0
    9. '+' → logprob: -22.0625
    10. '!' → logprob: -22.1875

Token 313: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05020786076784134
    2. '       ' → logprob: -3.0502078533172607
    3. '        
' → logprob: -7.30020809173584
    4. '

' → logprob: -8.30020809173584
    5. '```' → logprob: -8.30020809173584
    6. '<|end|>' → logprob: -8.92520809173584
    7. '    
' → logprob: -9.05020809173584
    8. '  
' → logprob: -9.17520809173584
    9. '
' → logprob: -9.92520809173584
    10. '   ' → logprob: -10.80020809173584

Token 314: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5783885717391968
    2. '       ' → logprob: -0.8283885717391968
    3. '        
' → logprob: -6.703388690948486
    4. '    
' → logprob: -7.703388690948486
    5. '   ' → logprob: -7.828388690948486
    6. '  
' → logprob: -8.453388214111328
    7. ' for' → logprob: -9.703388214111328
    8. 'for' → logprob: -10.578388214111328
    9. '

' → logprob: -10.703388214111328
    10. '```' → logprob: -11.078388214111328

Token 315: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.392917275428772
    2. '       ' → logprob: -1.142917275428772
    3. ' for' → logprob: -5.142917156219482
    4. '   ' → logprob: -8.64291763305664
    5. '
' → logprob: -11.64291763305664
    6. '        
' → logprob: -14.76791763305664
    7. '	for' → logprob: -14.76791763305664
    8. ' ' → logprob: -14.89291763305664
    9. '#' (adapté à ' #') → logprob: -15.14291763305664
    10. '      ' → logprob: -15.14291763305664

Token 316: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19787870347499847
    2. '       ' → logprob: -2.19787859916687
    3. ' for' → logprob: -2.69787859916687
    4. '#' → logprob: -7.197878837585449
    5. '   ' → logprob: -7.947878837585449
    6. ' #' → logprob: -10.32287883758545
    7. ' ' → logprob: -12.32287883758545
    8. '
' → logprob: -14.07287883758545
    9. '     ' → logprob: -14.07287883758545
    10. '	for' → logprob: -14.19787883758545

Token 317: '2' (ID: 17)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00022773505770601332
    2. '#' → logprob: -8.500227928161621
    3. '       ' → logprob: -11.250227928161621
    4. ' for' → logprob: -11.625227928161621
    5. '   ' → logprob: -13.125227928161621
    6. '
' → logprob: -15.375227928161621
    7. '	for' → logprob: -17.875226974487305
    8. '           ' → logprob: -18.625226974487305
    9. ' #' → logprob: -18.625226974487305
    10. '```' → logprob: -18.625226974487305

Token 318: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0583362877368927
    2. '       ' → logprob: -2.9333362579345703
    3. ' )' → logprob: -5.80833625793457
    4. ')
' → logprob: -8.30833625793457
    5. '   ' → logprob: -8.80833625793457
    6. '#' → logprob: -11.18333625793457
    7. ')#' → logprob: -11.93333625793457
    8. ' )
' → logprob: -12.18333625793457
    9. 'for' → logprob: -12.43333625793457
    10. '        ' → logprob: -12.55833625793457

Token 319: ' Remove' (ID: 18141)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0402245968580246
    2. ' for' → logprob: -3.290224552154541
    3. '       ' → logprob: -6.165224552154541
    4. '#' → logprob: -9.7902250289917
    5. '   ' → logprob: -10.9152250289917
    6. ' #' → logprob: -13.0402250289917
    7. '
' → logprob: -13.4152250289917
    8. ' ' → logprob: -14.7902250289917
    9. 'For' → logprob: -14.9152250289917
    10. '	for' → logprob: -14.9152250289917

Token 320: ' all' (ID: 722)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.30048927664756775
    2. '       ' → logprob: -1.8004893064498901
    3. 'for' → logprob: -2.4254891872406006
    4. '[x' → logprob: -6.55048942565918
    5. '[i' → logprob: -6.67548942565918
    6. '
' → logprob: -7.17548942565918
    7. '   ' → logprob: -7.80048942565918
    8. ' ' → logprob: -7.80048942565918
    9. 'tokens' → logprob: -8.55048942565918
    10. ' [' → logprob: -8.67548942565918

Token 321: ' connected' (ID: 12079)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5997296571731567
    2. ' for' → logprob: -1.3497296571731567
    3. '   ' → logprob: -3.349729537963867
    4. '[i' → logprob: -3.474729537963867
    5. ' blocks' → logprob: -3.724729537963867
    6. ' [' → logprob: -4.474729537963867
    7. '[x' → logprob: -4.474729537963867
    8. 'for' → logprob: -4.599729537963867
    9. ' marked' → logprob: -4.724729537963867
    10. '_' → logprob: -4.974729537963867

Token 322: ' basic' (ID: 9439)
  Prédit: ' blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.16189318895339966
    2. 'blocks' → logprob: -1.9118931293487549
    3. '_blocks' → logprob: -6.786893367767334
    4. '   ' → logprob: -9.286892890930176
    5. ' components' → logprob: -9.411892890930176
    6. '
' → logprob: -9.411892890930176
    7. ' cells' → logprob: -9.661892890930176
    8. 'components' → logprob: -9.786892890930176
    9. 'cells' → logprob: -10.036892890930176
    10. '    
' → logprob: -10.786892890930176

Token 323: ' blocks' (ID: 18125)
  Prédit: ' blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.4361037015914917
    2. 'blocks' → logprob: -1.0611037015914917
    3. '_blocks' → logprob: -5.311103820800781
    4. '       ' → logprob: -7.186103820800781
    5. '   ' → logprob: -7.686103820800781
    6. '
' → logprob: -8.686103820800781
    7. ' cells' → logprob: -8.936103820800781
    8. 'cells' → logprob: -9.061103820800781
    9. ' pieces' → logprob: -9.311103820800781
    10. 'components' → logprob: -9.436103820800781

Token 324: ' found' (ID: 2491)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00036216014996171
    2. ' for' → logprob: -8.500362396240234
    3. '
' → logprob: -9.000362396240234
    4. '   ' → logprob: -11.250362396240234
    5. '        
' → logprob: -11.375362396240234
    6. 'for' → logprob: -11.875362396240234
    7. '    
' → logprob: -13.875362396240234
    8. ',' → logprob: -14.625362396240234
    9. '           ' → logprob: -14.750362396240234
    10. '  
' → logprob: -14.875362396240234

Token 325: ' above' (ID: 5151)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0045867725275456905
    2. '
' → logprob: -5.504586696624756
    3. ' for' → logprob: -8.004587173461914
    4. '        
' → logprob: -9.254587173461914
    5. 'for' → logprob: -10.379587173461914
    6. '   ' → logprob: -10.754587173461914
    7. '    
' → logprob: -11.379587173461914
    8. '  
' → logprob: -12.129587173461914
    9. '       
' → logprob: -13.754587173461914
    10. '           ' → logprob: -13.879587173461914

Token 326: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010100512765347958
    2. '
' → logprob: -4.635100364685059
    3. ' for' → logprob: -8.385100364685059
    4. '        
' → logprob: -9.510100364685059
    5. 'for' → logprob: -10.635100364685059
    6. '   ' → logprob: -11.510100364685059
    7. '    
' → logprob: -12.510100364685059
    8. '  
' → logprob: -13.135100364685059
    9. ' 
' → logprob: -14.635100364685059
    10. '
' → logprob: -14.760100364685059

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018211969872936606
    2. '
' → logprob: -7.126821041107178
    3. ' for' → logprob: -7.126821041107178
    4. 'for' → logprob: -9.376821517944336
    5. '   ' → logprob: -9.626821517944336
    6. '        
' → logprob: -10.501821517944336
    7. '  
' → logprob: -11.001821517944336
    8. '    
' → logprob: -11.376821517944336
    9. '```' → logprob: -12.751821517944336
    10. ' 
' → logprob: -14.251821517944336

Token 328: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5281476378440857
    2. ' for' → logprob: -1.2781476974487305
    3. 'for' (adapté à ' for') → logprob: -2.0281476974487305
    4. '   ' → logprob: -8.77814769744873
    5. '
' → logprob: -11.65314769744873
    6. '	for' → logprob: -12.02814769744873
    7. ' ' → logprob: -13.77814769744873
    8. '        
' → logprob: -14.27814769744873
    9. '    
' → logprob: -15.02814769744873
    10. '           ' → logprob: -15.15314769744873

Token 329: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1371617466211319
    2. ' i' → logprob: -2.1371617317199707
    3. 'x' → logprob: -4.637161731719971
    4. ' x' → logprob: -7.637161731719971
    5. '_i' → logprob: -11.512162208557129
    6. '	i' → logprob: -13.262162208557129
    7. '   ' → logprob: -13.637162208557129
    8. ' ' → logprob: -14.762162208557129
    9. '_' → logprob: -15.262162208557129
    10. 'row' → logprob: -16.012161254882812

Token 330: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0699751153588295
    2. 'in' → logprob: -2.6949751377105713
    3. ' ' → logprob: -11.194974899291992
    4. '0' → logprob: -11.694974899291992
    5. '   ' → logprob: -12.444974899291992
    6. 'range' → logprob: -12.444974899291992
    7. ',' → logprob: -13.444974899291992
    8. ' i' → logprob: -13.569974899291992
    9. ' range' → logprob: -13.569974899291992
    10. ')' → logprob: -13.819974899291992

Token 331: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002613358374219388
    2. ' range' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.875261306762695
    4. ' ' → logprob: -19.875261306762695
    5. '
' → logprob: -20.625261306762695
    6. 'r' → logprob: -20.875261306762695
    7. 'rang' → logprob: -21.500261306762695
    8. '```' → logprob: -21.500261306762695
    9. '  ' → logprob: -21.625261306762695
    10. '0' → logprob: -21.750261306762695

Token 332: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00018399098189547658
    2. 'h' → logprob: -8.625184059143066
    3. '(' → logprob: -12.875184059143066
    4. '12' → logprob: -13.625184059143066
    5. '   ' → logprob: -14.875184059143066
    6. '       ' → logprob: -16.50018310546875
    7. '	h' → logprob: -17.00018310546875
    8. '           ' → logprob: -17.37518310546875
    9. ' h' → logprob: -17.87518310546875
    10. ',h' → logprob: -18.25018310546875

Token 333: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.003663252806290984
    2. '):' → logprob: -5.628663063049316
    3. '):
' → logprob: -10.128663063049316
    4. '       ' → logprob: -11.628663063049316
    5. '   ' → logprob: -12.253663063049316
    6. '):

' → logprob: -13.628663063049316
    7. ')' → logprob: -13.628663063049316
    8. ' ):
' → logprob: -13.628663063049316
    9. ']:
' → logprob: -13.628663063049316
    10. ':
' → logprob: -14.003663063049316

Token 334: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034154925495386124
    2. '       ' → logprob: -3.4091548919677734
    3. ' for' → logprob: -8.034154891967773
    4. ' j' → logprob: -9.534154891967773
    5. '           ' → logprob: -10.034154891967773
    6. 'for' → logprob: -10.034154891967773
    7. ',j' → logprob: -12.034154891967773
    8. 'j' → logprob: -12.284154891967773
    9. ' in' → logprob: -12.284154891967773
    10. ' range' → logprob: -13.284154891967773

Token 335: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4277718663215637
    2. 'for' (adapté à ' for') → logprob: -1.177771806716919
    3. ' j' → logprob: -3.302771806716919
    4. '   ' → logprob: -6.677772045135498
    5. 'j' → logprob: -6.802772045135498
    6. '       ' → logprob: -7.302772045135498
    7. ' ' → logprob: -9.17777156829834
    8. ' in' → logprob: -9.30277156829834
    9. ' range' → logprob: -10.67777156829834
    10. '           ' → logprob: -11.17777156829834

Token 336: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014174087904393673
    2. ' j' → logprob: -4.264173984527588
    3. '0' → logprob: -11.639174461364746
    4. ' ' → logprob: -14.264174461364746
    5. ' range' → logprob: -14.514174461364746
    6. 'range' → logprob: -15.639174461364746
    7. 'w' → logprob: -15.639174461364746
    8. '   ' → logprob: -16.01417350769043
    9. '6' → logprob: -16.88917350769043
    10. ' in' → logprob: -17.01417350769043

Token 337: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004643246065825224
    2. 'in' → logprob: -5.379643440246582
    3. ' ' → logprob: -11.504643440246582
    4. '           ' → logprob: -12.754643440246582
    5. '   ' → logprob: -13.129643440246582
    6. '=' → logprob: -13.254643440246582
    7. '        ' → logprob: -13.379643440246582
    8. '    ' → logprob: -13.629643440246582
    9. '       ' → logprob: -13.879643440246582
    10. '            ' → logprob: -14.879643440246582

Token 338: ' range' (ID: 3352)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2287842333316803
    2. ' range' → logprob: -2.2287843227386475
    3. 'range' → logprob: -2.4787843227386475
    4. ' w' → logprob: -4.353784084320068
    5. '(w' → logprob: -9.353784561157227
    6. '[w' → logprob: -10.353784561157227
    7. '6' → logprob: -11.978784561157227
    8. '(range' → logprob: -12.853784561157227
    9. '   ' → logprob: -12.978784561157227
    10. '0' → logprob: -13.353784561157227

Token 339: '(w' (ID: 7420)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.20309258997440338
    2. '(w' → logprob: -1.7030925750732422
    3. 'range' → logprob: -6.578092575073242
    4. ' w' → logprob: -8.578092575073242
    5. '6' → logprob: -10.078092575073242
    6. ' range' → logprob: -10.078092575073242
    7. '[w' → logprob: -12.203092575073242
    8. '<w' → logprob: -12.453092575073242
    9. '=w' → logprob: -13.328092575073242
    10. '   ' → logprob: -13.828092575073242

Token 340: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.005470201838761568
    2. '):' → logprob: -5.255470275878906
    3. ')' → logprob: -8.880470275878906
    4. ' ):
' → logprob: -10.505470275878906
    5. '           ' → logprob: -11.005470275878906
    6. '       ' → logprob: -11.255470275878906
    7. '               ' → logprob: -11.755470275878906
    8. '):
' → logprob: -11.755470275878906
    9. '):

' → logprob: -12.005470275878906
    10. '():
' → logprob: -12.130470275878906

Token 341: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3483614921569824
    2. ' if' → logprob: -1.3483614921569824
    3. 'if' → logprob: -3.8483614921569824
    4. '               ' → logprob: -4.473361492156982
    5. '       ' → logprob: -6.723361492156982
    6. '```' → logprob: -8.59836196899414
    7. ' field' → logprob: -9.09836196899414
    8. ' =' → logprob: -9.59836196899414
    9. '=' → logprob: -10.34836196899414
    10. 'field' → logprob: -10.47336196899414

Token 342: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1489153802394867
    2. 'if' (adapté à ' if') → logprob: -2.5239152908325195
    3. '           ' → logprob: -2.8989152908325195
    4. '               ' → logprob: -5.8989152908325195
    5. ' field' → logprob: -8.64891529083252
    6. '                   ' → logprob: -8.77391529083252
    7. '   ' → logprob: -10.52391529083252
    8. 'field' → logprob: -11.02391529083252
    9. '       ' → logprob: -11.89891529083252
    10. ' ' → logprob: -12.77391529083252

Token 343: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5759400725364685
    2. ' to' → logprob: -0.8259400725364685
    3. '               ' → logprob: -14.325940132141113
    4. '           ' → logprob: -16.700939178466797
    5. '	to' → logprob: -18.575939178466797
    6. '[to' → logprob: -18.825939178466797
    7. '                   ' → logprob: -19.075939178466797
    8. ' ' → logprob: -19.200939178466797
    9. '(to' → logprob: -19.825939178466797
    10. '   ' → logprob: -20.575939178466797

Token 344: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.334533878136426e-05
    2. '[i' → logprob: -10.750042915344238
    3. 'erase' → logprob: -10.750042915344238
    4. '.erase' → logprob: -15.375042915344238
    5. '_to' → logprob: -17.125043869018555
    6. '_er' → logprob: -17.125043869018555
    7. 'to' → logprob: -17.250043869018555
    8. '[' → logprob: -17.250043869018555
    9. 'er' → logprob: -17.375043869018555
    10. 'Erase' → logprob: -17.500043869018555

Token 345: 'erase' (ID: 91229)
  Prédit: 'erase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erase' → logprob: -0.005344043951481581
    2. '_' → logprob: -5.255343914031982
    3. ' erase' → logprob: -9.63034439086914
    4. '.erase' → logprob: -10.63034439086914
    5. '[i' → logprob: -12.13034439086914
    6. 'er' → logprob: -12.50534439086914
    7. '```' → logprob: -13.00534439086914
    8. 'i' → logprob: -13.13034439086914
    9. 'Erase' → logprob: -13.13034439086914
    10. 'eras' → logprob: -14.13034439086914

Token 346: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. '[j' → logprob: -13.875001907348633
    3. ' [' → logprob: -14.250001907348633
    4. '[' → logprob: -15.750001907348633
    5. '[x' → logprob: -16.250001907348633
    6. '```' → logprob: -16.875001907348633
    7. '[I' → logprob: -17.000001907348633
    8. '][' → logprob: -17.875001907348633
    9. '           ' → logprob: -18.250001907348633
    10. '[
' → logprob: -18.250001907348633

Token 347: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00477993069216609
    2. '[i' → logprob: -5.504779815673828
    3. '[j' → logprob: -7.379779815673828
    4. ']' → logprob: -9.879779815673828
    5. ' ][' → logprob: -11.504779815673828
    6. '           ' → logprob: -13.004779815673828
    7. '```' → logprob: -13.004779815673828
    8. '[' → logprob: -13.004779815673828
    9. ']][' → logprob: -13.129779815673828
    10. '   ' → logprob: -13.504779815673828

Token 348: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.816093228830141e-06
    2. ' j' → logprob: -13.12500286102295
    3. '[j' → logprob: -15.25000286102295
    4. ']' → logprob: -15.50000286102295
    5. 'True' → logprob: -16.500001907348633
    6. '   ' → logprob: -16.625001907348633
    7. '
' → logprob: -17.125001907348633
    8. '```' → logprob: -17.125001907348633
    9. '][' → logprob: -17.375001907348633
    10. '	j' → logprob: -17.375001907348633

Token 349: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.44700345396995544
    2. ']:
' → logprob: -1.1970034837722778
    3. ']==' → logprob: -3.1970033645629883
    4. ']=' → logprob: -4.697003364562988
    5. ']:' → logprob: -4.822003364562988
    6. ' ]' → logprob: -9.572003364562988
    7. ']=='' → logprob: -9.822003364562988
    8. ']:
' → logprob: -9.822003364562988
    9. ']='' → logprob: -10.447003364562988
    10. '==' → logprob: -10.697003364562988

Token 350: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014995861798524857
    2. ' field' → logprob: -4.51499605178833
    3. ' =' → logprob: -6.01499605178833
    4. 'field' → logprob: -7.26499605178833
    5. '                       ' → logprob: -8.264995574951172
    6. '                    
' → logprob: -8.889995574951172
    7. '[field' → logprob: -9.514995574951172
    8. '                           ' → logprob: -9.889995574951172
    9. '               ' → logprob: -9.889995574951172
    10. '=' → logprob: -10.014995574951172

Token 351: ' field' (ID: 3259)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' (adapté à ' field') → logprob: -0.1008557677268982
    2. ' field' → logprob: -2.350855827331543
    3. '                   ' → logprob: -7.600855827331543
    4. '.field' → logprob: -9.225855827331543
    5. '.' → logprob: -10.350855827331543
    6. '[field' → logprob: -11.975855827331543
    7. '               ' → logprob: -12.725855827331543
    8. '	field' → logprob: -12.850855827331543
    9. '           ' → logprob: -13.725855827331543
    10. ' .' → logprob: -13.850855827331543

Token 352: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -14.750000953674316
    3. '[j' → logprob: -15.375000953674316
    4. '][' → logprob: -17.125
    5. '[' → logprob: -17.375
    6. '[
' → logprob: -18.125
    7. '[I' → logprob: -18.625
    8. '   ' → logprob: -19.0
    9. '\[' → logprob: -19.375
    10. 'i' → logprob: -19.375

Token 353: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.048796966671943665
    2. '[i' → logprob: -3.0487968921661377
    3. ']' → logprob: -9.298796653747559
    4. '[j' → logprob: -9.548796653747559
    5. ' ][' → logprob: -11.673796653747559
    6. '[' → logprob: -11.798796653747559
    7. '```' → logprob: -12.173796653747559
    8. ')[' → logprob: -12.298796653747559
    9. ']][' → logprob: -12.548796653747559
    10. '   ' → logprob: -12.548796653747559

Token 354: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.438573680294212e-06
    2. ' j' → logprob: -13.125005722045898
    3. ']' → logprob: -13.250005722045898
    4. '   ' → logprob: -14.500005722045898
    5. '[j' → logprob: -14.625005722045898
    6. '```' → logprob: -15.375005722045898
    7. '][' → logprob: -15.500005722045898
    8. '
' → logprob: -15.875005722045898
    9. ' ' → logprob: -17.0000057220459
    10. 'i' → logprob: -17.2500057220459

Token 355: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7615882754325867
    2. ']' → logprob: -0.7615882754325867
    3. ']=' → logprob: -2.7615883350372314
    4. ' =' → logprob: -6.011588096618652
    5. ']='' → logprob: -7.636588096618652
    6. '='' → logprob: -10.886588096618652
    7. ' ]' → logprob: -12.636588096618652
    8. ')=' → logprob: -13.386588096618652
    9. ')' → logprob: -13.636588096618652
    10. '[' → logprob: -14.636588096618652

Token 356: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006722706835716963
    2. ' =' → logprob: -5.006722927093506
    3. '='' → logprob: -11.881722450256348
    4. '.=' → logprob: -15.506722450256348
    5. '.' → logprob: -15.631722450256348
    6. '='.' → logprob: -17.506723403930664
    7. '=

' → logprob: -17.631723403930664
    8. ' ='' → logprob: -17.631723403930664
    9. '=
' → logprob: -17.756723403930664
    10. '=''' → logprob: -17.881723403930664

Token 357: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -8.721228368813172e-05
    2. ' '.'' → logprob: -9.750086784362793
    3. '.' → logprob: -10.750086784362793
    4. '"."' → logprob: -12.000086784362793
    5. '".' → logprob: -14.500086784362793
    6. ''' → logprob: -14.500086784362793
    7. '('.')' → logprob: -15.125086784362793
    8. '.'.' → logprob: -17.87508773803711
    9. ' '.' → logprob: -18.12508773803711
    10. '   ' → logprob: -18.50008773803711

Token 358: ''

' (ID: 7497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 359: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07030873745679855
    2. '       ' → logprob: -3.1953086853027344
    3. '<|end|>' → logprob: -4.695308685302734
    4. '        
' → logprob: -5.070308685302734
    5. '

' → logprob: -5.195308685302734
    6. '  
' → logprob: -5.820308685302734
    7. '    
' → logprob: -6.695308685302734
    8. '\n' → logprob: -7.195308685302734
    9. '   ' → logprob: -8.070308685302734
    10. ' 
' → logprob: -8.195308685302734

Token 360: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4000926613807678
    2. '
' → logprob: -1.150092601776123
    3. '   ' → logprob: -4.400092601776123
    4. '#' (adapté à ' #') → logprob: -7.525092601776123
    5. 'for' → logprob: -8.775093078613281
    6. '        
' → logprob: -9.400093078613281
    7. '

' → logprob: -10.275093078613281
    8. '```' → logprob: -11.025093078613281
    9. '    
' → logprob: -11.525093078613281
    10. ' for' → logprob: -12.025093078613281

Token 361: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7481105923652649
    2. '       ' → logprob: -1.1231105327606201
    3. 'for' → logprob: -1.9981105327606201
    4. '   ' → logprob: -2.74811053276062
    5. ' for' → logprob: -6.998110771179199
    6. ' #' → logprob: -7.498110771179199
    7. ' ' → logprob: -8.9981107711792
    8. '
' → logprob: -9.1231107711792
    9. '  ' → logprob: -10.2481107711792
    10. '    ' → logprob: -10.8731107711792

Token 362: '3' (ID: 18)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07325924187898636
    2. 'for' → logprob: -3.0732593536376953
    3. '   ' → logprob: -4.323259353637695
    4. '       ' → logprob: -4.698259353637695
    5. ' #' → logprob: -6.948259353637695
    6. '3' → logprob: -7.573259353637695
    7. ' for' → logprob: -8.823259353637695
    8. '
' → logprob: -8.823259353637695
    9. ' ' → logprob: -9.073259353637695
    10. 'def' → logprob: -10.448259353637695

Token 363: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5783817768096924
    2. '   ' → logprob: -0.8283817768096924
    3. '       ' → logprob: -6.578381538391113
    4. ')
' → logprob: -7.328381538391113
    5. '#' → logprob: -8.578381538391113
    6. ' for' → logprob: -9.578381538391113
    7. ' )' → logprob: -10.078381538391113
    8. '    ' → logprob: -10.453381538391113
    9. ')#' → logprob: -11.203381538391113
    10. 'for' → logprob: -11.578381538391113

Token 364: ' Remove' (ID: 18141)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3698144853115082
    2. '#' → logprob: -1.8698145151138306
    3. ' for' → logprob: -2.244814395904541
    4. ' #' → logprob: -3.744814395904541
    5. '   ' → logprob: -4.369814395904541
    6. '       ' → logprob: -4.619814395904541
    7. 'Apply' → logprob: -6.619814395904541
    8. ' Apply' → logprob: -7.494814395904541
    9. 'For' → logprob: -8.6198148727417
    10. 'fall' → logprob: -9.1198148727417

Token 365: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1330043077468872
    2. ' '' → logprob: -1.7580043077468872
    3. ' O' → logprob: -2.1330041885375977
    4. 'O' → logprob: -2.1330041885375977
    5. ' for' → logprob: -2.7580041885375977
    6. ' gravity' → logprob: -2.8830041885375977
    7. '       ' → logprob: -3.0080041885375977
    8. '
' → logprob: -4.758004188537598
    9. 'gravity' → logprob: -4.945504188537598
    10. ' hanging' → logprob: -5.070504188537598

Token 366: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.10639118403196335
    2. ' O' → logprob: -2.481391191482544
    3. '.' → logprob: -5.106390953063965
    4. '   ' → logprob: -5.981390953063965
    5. ''' → logprob: -6.481390953063965
    6. '.O' → logprob: -6.856390953063965
    7. ' '' → logprob: -6.918890953063965
    8. ''O' → logprob: -7.168890953063965
    9. 'gravity' → logprob: -7.606390953063965
    10. ' ' → logprob: -7.793890953063965

Token 367: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03161858022212982
    2. ''s' → logprob: -3.656618595123291
    3. '
' → logprob: -6.531618595123291
    4. ''
' → logprob: -6.781618595123291
    5. ' blocks' → logprob: -7.281618595123291
    6. ''#' → logprob: -7.906618595123291
    7. ''O' → logprob: -8.406618118286133
    8. ' and' → logprob: -8.656618118286133
    9. 'O' → logprob: -8.906618118286133
    10. '<|end|>' → logprob: -9.406618118286133

Token 368: ' blocks' (ID: 18125)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2968335449695587
    2. '       ' → logprob: -2.1718335151672363
    3. '   ' → logprob: -3.0468335151672363
    4. ' in' → logprob: -3.9218335151672363
    5. '
' → logprob: -3.9218335151672363
    6. ' and' → logprob: -4.046833515167236
    7. 'for' → logprob: -4.921833515167236
    8. ' while' → logprob: -5.546833515167236
    9. '        
' → logprob: -5.671833515167236
    10. ' from' → logprob: -5.671833515167236

Token 369: ' adjacent' (ID: 39069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012211520224809647
    2. '
' → logprob: -5.137211322784424
    3. ' for' → logprob: -5.887211322784424
    4. '        
' → logprob: -5.887211322784424
    5. 'for' → logprob: -8.262211799621582
    6. '   ' → logprob: -9.637211799621582
    7. ',' → logprob: -9.637211799621582
    8. '           ' → logprob: -10.387211799621582
    9. '    
' → logprob: -10.387211799621582
    10. ' and' → logprob: -10.512211799621582

Token 370: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.15360215306282043
    2. 'to' → logprob: -2.653602123260498
    3. '       ' → logprob: -3.028602123260498
    4. 'for' → logprob: -4.528602123260498
    5. ' for' → logprob: -5.153602123260498
    6. '(' → logprob: -5.778602123260498
    7. '           ' → logprob: -7.153602123260498
    8. '   ' → logprob: -7.278602123260498
    9. '=' → logprob: -7.403602123260498
    10. ' (' → logprob: -7.653602123260498

Token 371: ' removed' (ID: 11906)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.8235601186752319
    2. 'er' → logprob: -0.9485601186752319
    3. 'any' → logprob: -2.5735602378845215
    4. 'to' → logprob: -3.4485602378845215
    5. ' erased' → logprob: -3.6985602378845215
    6. 'removed' → logprob: -3.8235602378845215
    7. ' to' → logprob: -5.6985602378845215
    8. ' '.'' → logprob: -5.8235602378845215
    9. ' any' → logprob: -5.8235602378845215
    10. '.' → logprob: -6.3235602378845215

Token 372: ' basic' (ID: 9439)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.1246030256152153
    2. ' blocks' → logprob: -2.999603033065796
    3. 'cells' → logprob: -3.374603033065796
    4. 'basic' → logprob: -3.624603033065796
    5. ' cells' → logprob: -6.249602794647217
    6. ' ones' → logprob: -6.874602794647217
    7. 'ones' → logprob: -7.374602794647217
    8. ''.' → logprob: -7.499602794647217
    9. '.' → logprob: -7.874602794647217
    10. ' basic' → logprob: -8.124603271484375

Token 373: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.2529963552951813
    2. ' blocks' → logprob: -1.5029963254928589
    3. 'for' → logprob: -7.627996444702148
    4. '_blocks' → logprob: -8.502996444702148
    5. ' for' → logprob: -9.127996444702148
    6. '       ' → logprob: -9.627996444702148
    7. '   ' → logprob: -9.877996444702148
    8. 'cells' → logprob: -10.002996444702148
    9. 'block' → logprob: -10.127996444702148
    10. '[i' → logprob: -10.752996444702148

Token 374: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013397661969065666
    2. '
' → logprob: -6.751339912414551
    3. '        
' → logprob: -9.25133991241455
    4. ' for' → logprob: -10.12633991241455
    5. '   ' → logprob: -11.00133991241455
    6. 'for' → logprob: -11.75133991241455
    7. '    
' → logprob: -13.00133991241455
    8. '           ' → logprob: -13.50133991241455
    9. '               ' → logprob: -14.37633991241455
    10. '	for' → logprob: -14.50133991241455

Token 375: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5823789238929749
    2. '       ' → logprob: -0.8323789238929749
    3. '        
' → logprob: -5.33237886428833
    4. '    
' → logprob: -7.20737886428833
    5. '   ' → logprob: -8.082379341125488
    6. '  
' → logprob: -8.457379341125488
    7. '\n' → logprob: -9.582379341125488
    8. '

' → logprob: -9.582379341125488
    9. ' for' → logprob: -10.457379341125488
    10. ' 
' → logprob: -10.582379341125488

Token 376: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27370521426200867
    2. ' for' → logprob: -2.023705244064331
    3. '       ' → logprob: -2.273705244064331
    4. 'removed' → logprob: -6.273705005645752
    5. 'visited' → logprob: -7.523705005645752
    6. 'adj' → logprob: -7.648705005645752
    7. '
' → logprob: -8.14870548248291
    8. 'changed' → logprob: -8.52370548248291
    9. 'remove' → logprob: -8.77370548248291
    10. ' removed' → logprob: -8.77370548248291

Token 377: ' First' (ID: 8338)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9449548125267029
    2. ' for' → logprob: -1.0699548721313477
    3. '       ' → logprob: -1.3199548721313477
    4. 'removed' → logprob: -7.819954872131348
    5. ' removed' → logprob: -8.319954872131348
    6. ' changed' → logprob: -9.319954872131348
    7. '   ' → logprob: -9.819954872131348
    8. 'changed' → logprob: -9.819954872131348
    9. ' to' → logprob: -10.069954872131348
    10. 'visited' → logprob: -10.194954872131348

Token 378: ' find' (ID: 1646)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7227498888969421
    2. ',' → logprob: -0.9727498888969421
    3. 'for' → logprob: -2.222749948501587
    4. 'pass' → logprob: -4.847749710083008
    5. 'remove' → logprob: -5.347749710083008
    6. ' for' → logprob: -5.597749710083008
    7. 'adj' → logprob: -6.222749710083008
    8. '   ' → logprob: -6.597749710083008
    9. 'find' → logprob: -7.222749710083008
    10. 'step' → logprob: -7.222749710083008

Token 379: ' O' (ID: 532)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.2163121700286865
    2. 'all' → logprob: -1.3413121700286865
    3. 'removed' → logprob: -1.5913121700286865
    4. 'o' → logprob: -3.0913121700286865
    5. 'positions' → logprob: -3.0913121700286865
    6. 'basic' → logprob: -3.2163121700286865
    7. ' positions' → logprob: -4.216312408447266
    8. ' removed' → logprob: -4.466312408447266
    9. 'er' → logprob: -4.591312408447266
    10. ' all' → logprob: -4.591312408447266

Token 380: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.14446835219860077
    2. 's' → logprob: -3.019468307495117
    3. '_blocks' → logprob: -3.394468307495117
    4. 'positions' → logprob: -3.769468307495117
    5. '_pos' → logprob: -5.269468307495117
    6. '_adj' → logprob: -5.394468307495117
    7. '_removed' → logprob: -5.894468307495117
    8. '_' → logprob: -6.019468307495117
    9. '_coords' → logprob: -6.144468307495117
    10. '_points' → logprob: -6.394468307495117

Token 381: ' adjacent' (ID: 39069)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.45410773158073425
    2. '       ' → logprob: -1.0791077613830566
    3. 'O' → logprob: -4.454107761383057
    4. ' o' → logprob: -5.204107761383057
    5. 'positions' → logprob: -6.079107761383057
    6. '   ' → logprob: -7.204107761383057
    7. 'oad' → logprob: -7.829107761383057
    8. ',' → logprob: -7.829107761383057
    9. 'os' → logprob: -8.079107284545898
    10. '
' → logprob: -8.079107284545898

Token 382: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7060511708259583
    2. 'to' → logprob: -0.7060511708259583
    3. '       ' → logprob: -4.581051349639893
    4. 'for' → logprob: -6.206051349639893
    5. ' for' → logprob: -8.581050872802734
    6. '   ' → logprob: -9.206050872802734
    7. '                   ' → logprob: -9.706050872802734
    8. '           ' → logprob: -10.581050872802734
    9. ',' → logprob: -10.706050872802734
    10. 'removed' → logprob: -11.081050872802734

Token 383: ' erased' (ID: 139842)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.30852192640304565
    2. 'any' → logprob: -1.6835219860076904
    3. 'er' → logprob: -3.0585219860076904
    4. 'True' → logprob: -4.433521747589111
    5. ' True' → logprob: -4.933521747589111
    6. ' to' → logprob: -5.558521747589111
    7. ' any' → logprob: -5.933521747589111
    8. 'the' → logprob: -6.058521747589111
    9. ' erased' → logprob: -6.433521747589111
    10. 'removed' → logprob: -6.683521747589111

Token 384: ' basic' (ID: 9439)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.9987478256225586
    2. ' positions' → logprob: -1.7487478256225586
    3. 'positions' → logprob: -1.8737478256225586
    4. ' blocks' → logprob: -2.2487478256225586
    5. 'cells' → logprob: -2.3737478256225586
    6. ' cells' → logprob: -3.4987478256225586
    7. '[i' → logprob: -3.9987478256225586
    8. 'basic' → logprob: -4.248747825622559
    9. 'for' → logprob: -4.498747825622559
    10. ' for' → logprob: -4.748747825622559

Token 385: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.1422605812549591
    2. ' blocks' → logprob: -2.1422605514526367
    3. '[i' → logprob: -4.517260551452637
    4. '_blocks' → logprob: -6.642260551452637
    5. 'for' → logprob: -6.892260551452637
    6. 'cells' → logprob: -7.142260551452637
    7. '       ' → logprob: -8.017260551452637
    8. '[' → logprob: -8.517260551452637
    9. '[
' → logprob: -8.767260551452637
    10. 'block' → logprob: -9.142260551452637

Token 386: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.218382328748703
    2. '
' → logprob: -1.7183823585510254
    3. '        
' → logprob: -4.218382358551025
    4. 'for' → logprob: -7.343382358551025
    5. ' for' → logprob: -7.468382358551025
    6. '

' → logprob: -8.093381881713867
    7. ',' → logprob: -9.218381881713867
    8. '    
' → logprob: -9.593381881713867
    9. '  
' → logprob: -9.843381881713867
    10. '       
' → logprob: -9.843381881713867

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031157992780208588
    2. '
' → logprob: -6.753115653991699
    3. ' for' → logprob: -6.878115653991699
    4. 'for' → logprob: -7.503115653991699
    5. '        
' → logprob: -8.0031156539917
    6. '   ' → logprob: -12.1281156539917
    7. ',' → logprob: -12.6281156539917
    8. '           ' → logprob: -13.0031156539917
    9. ' and' → logprob: -13.1281156539917
    10. '       
' → logprob: -13.1281156539917

Token 388: ' O' (ID: 532)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1251278519630432
    2. ' o' → logprob: -3.2501277923583984
    3. 'o' → logprob: -4.375127792358398
    4. ' positions' → logprob: -4.500127792358398
    5. '
' → logprob: -4.625127792358398
    6. ' for' → logprob: -5.125127792358398
    7. ' adjacent' → logprob: -5.250127792358398
    8. ' removed' → logprob: -5.500127792358398
    9. ' O' → logprob: -5.625127792358398
    10. 'adj' → logprob: -5.750127792358398

Token 389: '_to' (ID: 5089)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.21538960933685303
    2. '_adj' → logprob: -1.840389609336853
    3. '_to' → logprob: -3.5903897285461426
    4. '_pos' → logprob: -5.590389728546143
    5. '_ad' → logprob: -6.840389728546143
    6. 'adj' → logprob: -6.965389728546143
    7. 's' → logprob: -7.715389728546143
    8. '_neighbors' → logprob: -8.090389251708984
    9. '_candidates' → logprob: -8.340389251708984
    10. 'positions' → logprob: -8.465389251708984

Token 390: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003544001607224345
    2. '_remove' → logprob: -5.878543853759766
    3. 'erase' → logprob: -7.378543853759766
    4. 'remove' → logprob: -9.878543853759766
    5. '_check' → logprob: -10.128543853759766
    6. '_delete' → logprob: -12.503543853759766
    7. '_keep' → logprob: -13.128543853759766
    8. '_e' → logprob: -13.253543853759766
    9. '_visit' → logprob: -13.503543853759766
    10. '_er' → logprob: -13.503543853759766

Token 391: 'erase' (ID: 91229)
  Prédit: 'erase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erase' → logprob: -0.014004243537783623
    2. 'remove' → logprob: -4.514004230499268
    3. 'rase' → logprob: -6.139004230499268
    4. 'check' → logprob: -8.264004707336426
    5. 'r' → logprob: -8.389004707336426
    6. 're' → logprob: -10.889004707336426
    7. 'delete' → logprob: -10.889004707336426
    8. 'consider' → logprob: -11.014004707336426
    9. 'process' → logprob: -11.014004707336426
    10. 'replace' → logprob: -11.264004707336426

Token 392: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007613255642354488
    2. '=' → logprob: -4.882613182067871
    3. ' ' → logprob: -12.882613182067871
    4. '=set' → logprob: -12.882613182067871
    5. '=[]' → logprob: -14.007613182067871
    6. '_positions' → logprob: -14.007613182067871
    7. '=[]
' → logprob: -15.757613182067871
    8. '   ' → logprob: -15.757613182067871
    9. 's' → logprob: -16.257614135742188
    10. '  ' → logprob: -17.507614135742188

Token 393: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.019738774746656418
    2. '[]' → logprob: -4.519738674163818
    3. ' set' → logprob: -4.769738674163818
    4. ' []' → logprob: -8.894739151000977
    5. 'deque' → logprob: -10.519739151000977
    6. '[][]' → logprob: -13.269739151000977
    7. '[]
' → logprob: -13.394739151000977
    8. '	set' → logprob: -13.894739151000977
    9. '[[' → logprob: -14.019739151000977
    10. '[' → logprob: -14.769739151000977

Token 394: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5891046524047852
    2. '()' → logprob: -0.8391046524047852
    3. '()

' → logprob: -4.339104652404785
    4. '()
' → logprob: -10.964104652404785
    5. '()\' → logprob: -11.339104652404785
    6. '(' → logprob: -14.589104652404785
    7. '()

' → logprob: -15.339104652404785
    8. '()


' → logprob: -15.464104652404785
    9. '(),' → logprob: -16.08910369873047
    10. ' ()' → logprob: -16.33910369873047

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14665795862674713
    2. '
' → logprob: -2.021657943725586
    3. '        
' → logprob: -5.646657943725586
    4. '  
' → logprob: -8.896657943725586
    5. '    
' → logprob: -9.271657943725586
    6. '		
' → logprob: -10.271657943725586
    7. '   ' → logprob: -10.396657943725586
    8. ' 
' → logprob: -10.521657943725586
    9. '
' → logprob: -10.521657943725586
    10. ' for' → logprob: -10.646657943725586

Token 396: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2602841854095459
    2. 'for' (adapté à ' for') → logprob: -1.760284185409546
    3. ' for' → logprob: -2.885284185409546
    4. '
' → logprob: -6.760284423828125
    5. '   ' → logprob: -9.135284423828125
    6. '        
' → logprob: -10.135284423828125
    7. '	for' → logprob: -11.010284423828125
    8. '    
' → logprob: -13.385284423828125
    9. ' ' → logprob: -13.510284423828125
    10. '	' → logprob: -14.010284423828125

Token 397: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4771323800086975
    2. ' i' → logprob: -0.9771323800086975
    3. 'x' → logprob: -5.977132320404053
    4. ' x' → logprob: -7.602132320404053
    5. '	i' → logprob: -11.852132797241211
    6. ' ' → logprob: -12.477132797241211
    7. '   ' → logprob: -13.102132797241211
    8. '_i' → logprob: -14.352132797241211
    9. '  ' → logprob: -15.102132797241211
    10. '```' → logprob: -15.602132797241211

Token 398: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016340624541044235
    2. 'in' → logprob: -4.141340732574463
    3. 'range' → logprob: -8.766340255737305
    4. ' range' → logprob: -9.266340255737305
    5. ' ' → logprob: -10.891340255737305
    6. '(' → logprob: -11.016340255737305
    7. '0' → logprob: -12.016340255737305
    8. ',' → logprob: -12.141340255737305
    9. '   ' → logprob: -12.516340255737305
    10. '(range' → logprob: -12.641340255737305

Token 399: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00861468818038702
    2. ' range' → logprob: -4.758614540100098
    3. '(range' → logprob: -16.758615493774414
    4. ' ' → logprob: -16.883615493774414
    5. '   ' → logprob: -17.383615493774414
    6. '	range' → logprob: -18.883615493774414
    7. '
' → logprob: -19.508615493774414
    8. '  ' → logprob: -19.758615493774414
    9. 'ange' → logprob: -20.133615493774414
    10. 'ran' → logprob: -20.633615493774414

Token 400: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.693899929523468
    2. '(h' → logprob: -0.693899929523468
    3. '12' → logprob: -7.568900108337402
    4. '(' → logprob: -8.443900108337402
    5. '   ' → logprob: -12.193900108337402
    6. '
' → logprob: -12.943900108337402
    7. '(
' → logprob: -13.193900108337402
    8. '0' → logprob: -13.318900108337402
    9. ' h' → logprob: -13.318900108337402
    10. '1' → logprob: -13.443900108337402

Token 401: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0010694891680032015
    2. '):' → logprob: -7.12606954574585
    3. '   ' → logprob: -8.501069068908691
    4. '       ' → logprob: -10.251069068908691
    5. '-' → logprob: -11.376069068908691
    6. '):
' → logprob: -12.376069068908691
    7. ' ):
' → logprob: -12.751069068908691
    8. ' ' → logprob: -13.251069068908691
    9. ':
' → logprob: -13.751069068908691
    10. '           ' → logprob: -14.126069068908691

Token 402: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005169362295418978
    2. '   ' → logprob: -5.38016939163208
    3. '       ' → logprob: -7.88016939163208
    4. ' for' → logprob: -8.755168914794922
    5. '	   ' → logprob: -12.255168914794922
    6. '	       ' → logprob: -13.130168914794922
    7. '    ' → logprob: -13.255168914794922
    8. 'for' → logprob: -13.630168914794922
    9. '     ' → logprob: -13.880168914794922
    10. ' ' → logprob: -14.880168914794922

Token 403: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6648995280265808
    2. ' for' → logprob: -0.9148995280265808
    3. '       ' → logprob: -3.0398995876312256
    4. '   ' → logprob: -3.4148995876312256
    5. ' ' → logprob: -6.1648993492126465
    6. '           ' → logprob: -6.9148993492126465
    7. ' j' → logprob: -7.5398993492126465
    8. 'j' → logprob: -8.039899826049805
    9. '0' → logprob: -8.539899826049805
    10. '               ' → logprob: -8.664899826049805

Token 404: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.031983256340026855
    2. ' j' → logprob: -3.7819833755493164
    3. 'w' → logprob: -4.781983375549316
    4. ' w' → logprob: -8.156983375549316
    5. '           ' → logprob: -11.531983375549316
    6. '       ' → logprob: -12.031983375549316
    7. '0' → logprob: -12.156983375549316
    8. '6' → logprob: -12.406983375549316
    9. '   ' → logprob: -13.156983375549316
    10. 'range' → logprob: -13.156983375549316

Token 405: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013340517180040479
    2. 'in' → logprob: -6.626334190368652
    3. '   ' → logprob: -12.876334190368652
    4. '(' → logprob: -13.376334190368652
    5. ' ' → logprob: -13.751334190368652
    6. '           ' → logprob: -14.501334190368652
    7. '       ' → logprob: -14.751334190368652
    8. ',' → logprob: -15.001334190368652
    9. '	in' → logprob: -15.251334190368652
    10. ' (' → logprob: -15.376334190368652

Token 406: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01830855756998062
    2. ' range' → logprob: -4.018308639526367
    3. 'w' → logprob: -9.018308639526367
    4. '(w' → logprob: -10.893308639526367
    5. '(range' → logprob: -10.893308639526367
    6. '(' → logprob: -16.643308639526367
    7. '[w' → logprob: -17.143308639526367
    8. ' w' → logprob: -17.143308639526367
    9. '   ' → logprob: -17.893308639526367
    10. '6' → logprob: -18.143308639526367

Token 407: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.003222391474992037
    2. 'w' → logprob: -5.753222465515137
    3. '(h' → logprob: -10.628222465515137
    4. '(' → logprob: -11.628222465515137
    5. 'range' → logprob: -12.128222465515137
    6. '6' → logprob: -12.378222465515137
    7. 'h' → logprob: -14.378222465515137
    8. ' (' → logprob: -15.128222465515137
    9. '<w' → logprob: -15.253222465515137
    10. '[w' → logprob: -15.503222465515137

Token 408: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018166331574320793
    2. '):' → logprob: -4.018166542053223
    3. '):
' → logprob: -11.518166542053223
    4. '):

' → logprob: -13.018166542053223
    5. ':' → logprob: -13.143166542053223
    6. ')' → logprob: -13.643166542053223
    7. ':
' → logprob: -14.893166542053223
    8. '       ' → logprob: -15.643166542053223
    9. '           ' → logprob: -15.893166542053223
    10. '   ' → logprob: -16.018165588378906

Token 409: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003931384126190096
    2. ' if' → logprob: -8.25039291381836
    3. '	           ' → logprob: -10.25039291381836
    4. '                   ' → logprob: -10.75039291381836
    5. '		       ' → logprob: -11.12539291381836
    6. '           ' → logprob: -11.25039291381836
    7. '       ' → logprob: -11.50039291381836
    8. 'if' → logprob: -11.62539291381836
    9. ' for' → logprob: -12.00039291381836
    10. '                       ' → logprob: -12.25039291381836

Token 410: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6093278527259827
    2. ' if' → logprob: -1.109327793121338
    3. 'if' (adapté à ' if') → logprob: -2.109327793121338
    4. '               ' → logprob: -5.609327793121338
    5. '           ' → logprob: -7.234327793121338
    6. '   ' → logprob: -7.859327793121338
    7. '                       ' → logprob: -9.234328269958496
    8. '		           ' → logprob: -9.484328269958496
    9. ' for' → logprob: -9.984328269958496
    10. '	               ' → logprob: -10.609328269958496

Token 411: ' to' (ID: 316)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.02383873052895069
    2. 'to' → logprob: -3.898838758468628
    3. ' field' → logprob: -5.773838520050049
    4. ' to' → logprob: -8.773838996887207
    5. '(field' → logprob: -11.148838996887207
    6. ' ' → logprob: -13.023838996887207
    7. '[field' → logprob: -13.461338996887207
    8. '$field' → logprob: -13.773838996887207
    9. '	field' → logprob: -13.836338996887207
    10. 'not' → logprob: -13.836338996887207

Token 412: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5928495486150496e-05
    2. 'erase' → logprob: -11.750016212463379
    3. '[i' → logprob: -11.875016212463379
    4. '_er' → logprob: -14.875016212463379
    5. 'to' → logprob: -15.500016212463379
    6. '_to' → logprob: -16.375015258789062
    7. '.erase' → logprob: -16.625015258789062
    8. 'Erase' → logprob: -16.625015258789062
    9. 'er' → logprob: -16.875015258789062
    10. '```' → logprob: -17.375015258789062

Token 413: 'erase' (ID: 91229)
  Prédit: 'erase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erase' → logprob: -0.11311446875333786
    2. '_' → logprob: -2.238114356994629
    3. '.erase' → logprob: -9.238114356994629
    4. '[i' → logprob: -9.488114356994629
    5. ' erase' → logprob: -9.863114356994629
    6. 'i' → logprob: -10.988114356994629
    7. 'er' → logprob: -11.238114356994629
    8. 'Erase' → logprob: -11.488114356994629
    9. 'eras' → logprob: -11.613114356994629
    10. '```' → logprob: -12.488114356994629

Token 414: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.750000953674316
    3. ' [' → logprob: -14.750000953674316
    4. '[j' → logprob: -15.375000953674316
    5. '[
' → logprob: -16.750001907348633
    6. '   ' → logprob: -17.875001907348633
    7. '][' → logprob: -18.125001907348633
    8. '```' → logprob: -18.125001907348633
    9. '[I' → logprob: -18.500001907348633
    10. '
' → logprob: -18.750001907348633

Token 415: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -3.523948907968588e-05
    2. '[j' → logprob: -10.875035285949707
    3. ' ][' → logprob: -11.875035285949707
    4. ']' → logprob: -12.000035285949707
    5. '[i' → logprob: -13.375035285949707
    6. '   ' → logprob: -14.625035285949707
    7. '-' → logprob: -15.000035285949707
    8. '[' → logprob: -15.000035285949707
    9. ']][' → logprob: -16.37503433227539
    10. '       ' → logprob: -16.62503433227539

Token 416: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.292907877039397e-06
    2. ' j' → logprob: -12.87500286102295
    3. '[j' → logprob: -14.87500286102295
    4. '	j' → logprob: -16.000003814697266
    5. '][' → logprob: -16.625003814697266
    6. '   ' → logprob: -16.750003814697266
    7. ' ' → logprob: -17.125003814697266
    8. '
' → logprob: -17.625003814697266
    9. '```' → logprob: -18.250003814697266
    10. ',j' → logprob: -18.375003814697266

Token 417: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3118398189544678
    2. ']:
' → logprob: -1.8118398189544678
    3. ':' → logprob: -2.4368398189544678
    4. '):
' → logprob: -4.436840057373047
    5. ']:' → logprob: -5.436840057373047
    6. '==' → logprob: -7.311840057373047
    7. '):' → logprob: -9.311840057373047
    8. '():
' → logprob: -10.436840057373047
    9. ':

' → logprob: -10.936840057373047
    10. ']==' → logprob: -11.061840057373047

Token 418: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0018965097842738032
    2. '               ' → logprob: -6.876896381378174
    3. ' for' → logprob: -8.626896858215332
    4. '           ' → logprob: -8.751896858215332
    5. '		           ' → logprob: -8.751896858215332
    6. '                       ' → logprob: -9.251896858215332
    7. '	               ' → logprob: -9.751896858215332
    8. '   ' → logprob: -9.751896858215332
    9. '       ' → logprob: -10.876896858215332
    10. ',' → logprob: -10.876896858215332

Token 419: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1572529673576355
    2. 'for' (adapté à ' for') → logprob: -2.4072530269622803
    3. '                       ' → logprob: -2.9072530269622803
    4. '	for' → logprob: -7.907252788543701
    5. '                           ' → logprob: -9.15725326538086
    6. '       ' → logprob: -9.15725326538086
    7. '   ' → logprob: -9.40725326538086
    8. ' ' → logprob: -9.78225326538086
    9. '                   ' → logprob: -10.03225326538086
    10. '                               ' → logprob: -10.78225326538086

Token 420: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -6.52788148727268e-05
    2. ' dx' → logprob: -9.875064849853516
    3. 'di' → logprob: -11.250064849853516
    4. '(dx' → logprob: -14.125064849853516
    5. '_dx' → logprob: -17.500064849853516
    6. '```' → logprob: -17.875064849853516
    7. '   ' → logprob: -18.750064849853516
    8. '.dx' → logprob: -19.000064849853516
    9. 'x' → logprob: -19.375064849853516
    10. 'd' → logprob: -19.375064849853516

Token 421: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.372294698550832e-06
    2. ',d' → logprob: -11.875009536743164
    3. ' ,' → logprob: -13.125009536743164
    4. ',
' → logprob: -15.750009536743164
    5. 'dy' → logprob: -15.875009536743164
    6. ' in' → logprob: -17.750009536743164
    7. '_,' → logprob: -18.125009536743164
    8. ',j' → logprob: -18.375009536743164
    9. ',(' → logprob: -18.750009536743164
    10. ',-' → logprob: -19.000009536743164

Token 422: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00033546582562848926
    2. ' dy' → logprob: -8.000335693359375
    3. '0' → logprob: -20.500335693359375
    4. 'Dy' → logprob: -20.500335693359375
    5. '.dy' → logprob: -21.500335693359375
    6. 'dx' → logprob: -22.750335693359375
    7. '   ' → logprob: -23.500335693359375
    8. ',' → logprob: -23.625335693359375
    9. ' ' → logprob: -24.125335693359375
    10. 'd' → logprob: -24.250335693359375

Token 423: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026313187554478645
    2. 'in' → logprob: -3.651313304901123
    3. ' ' → logprob: -11.651312828063965
    4. '```' → logprob: -14.151312828063965
    5. '	in' → logprob: -14.151312828063965
    6. ',' → logprob: -14.776312828063965
    7. '   ' → logprob: -14.901312828063965
    8. '(' → logprob: -15.151312828063965
    9. ')' → logprob: -15.276312828063965
    10. '
' → logprob: -15.651312828063965

Token 424: ' dirs' (ID: 99999)
  Prédit: 'dirs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirs' → logprob: -0.021999964490532875
    2. '[(' → logprob: -4.021999835968018
    3. ' dirs' → logprob: -5.646999835968018
    4. '[' → logprob: -8.272000312805176
    5. 'dire' → logprob: -10.522000312805176
    6. ' [(' → logprob: -11.147000312805176
    7. 'dir' → logprob: -11.647000312805176
    8. '[((' → logprob: -13.022000312805176
    9. '   ' → logprob: -13.397000312805176
    10. '[
' → logprob: -13.772000312805176

Token 425: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3093020021915436
    2. ',' → logprob: -1.9343019723892212
    3. '                       ' → logprob: -2.9343020915985107
    4. ':' → logprob: -3.1843020915985107
    5. '                           ' → logprob: -4.809301853179932
    6. ',
' → logprob: -5.309301853179932
    7. '                   ' → logprob: -6.309301853179932
    8. '	                       ' → logprob: -6.434301853179932
    9. '<|end|>' → logprob: -6.559301853179932
    10. ',n' → logprob: -7.184301853179932

Token 426: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.11292996257543564
    2. ' nx' → logprob: -2.4879300594329834
    3. ' x' → logprob: -3.8629300594329834
    4. 'nx' → logprob: -6.612929821014404
    5. 'x' → logprob: -7.737929821014404
    6. '	                   ' → logprob: -7.987929821014404
    7. '(nx' → logprob: -9.112930297851562
    8. '                           ' → logprob: -9.112930297851562
    9. '                        ' → logprob: -9.237930297851562
    10. ' ni' → logprob: -9.487930297851562

Token 427: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' (adapté à ' nx') → logprob: -0.005884591024369001
    2. 'ni' → logprob: -5.755884647369385
    3. ' nx' → logprob: -6.255884647369385
    4. ' ni' → logprob: -7.880884647369385
    5. '                   ' → logprob: -8.380884170532227
    6. '                       ' → logprob: -9.505884170532227
    7. 'x' → logprob: -9.505884170532227
    8. '                           ' → logprob: -11.630884170532227
    9. '```' → logprob: -11.880884170532227
    10. '               ' → logprob: -12.255884170532227

Token 428: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10182437300682068
    2. ',' → logprob: -2.3518242835998535
    3. ' =' → logprob: -6.4768242835998535
    4. '=i' → logprob: -9.976824760437012
    5. ' ,' → logprob: -11.726824760437012
    6. '=
' → logprob: -11.726824760437012
    7. '=n' → logprob: -12.101824760437012
    8. ',i' → logprob: -12.601824760437012
    9. ',n' → logprob: -12.601824760437012
    10. ',j' → logprob: -14.476824760437012

Token 429: ' ny' (ID: 4423)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05998525395989418
    2. 'x' → logprob: -3.4349851608276367
    3. 'j' → logprob: -4.434985160827637
    4. ' i' → logprob: -4.559985160827637
    5. 'ny' → logprob: -6.934985160827637
    6. 'nx' → logprob: -7.059985160827637
    7. ' ny' → logprob: -7.559985160827637
    8. ' x' → logprob: -7.809985160827637
    9. ' j' → logprob: -8.184985160827637
    10. '=' → logprob: -8.434985160827637

Token 430: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234832875430584
    2. ' =' → logprob: -5.255234718322754
    3. '=i' → logprob: -14.505234718322754
    4. ',' → logprob: -14.880234718322754
    5. '=
' → logprob: -15.880234718322754
    6. '=n' → logprob: -16.88023567199707
    7. '=

' → logprob: -17.63023567199707
    8. '=x' → logprob: -18.25523567199707
    9. '=int' → logprob: -18.38023567199707
    10. '＝' → logprob: -18.50523567199707

Token 431: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008193961111828685
    2. ' i' → logprob: -7.125819206237793
    3. 'x' → logprob: -11.250819206237793
    4. '   ' → logprob: -14.000819206237793
    5. '                   ' → logprob: -14.375819206237793
    6. '                       ' → logprob: -16.12582015991211
    7. 'I' → logprob: -16.25082015991211
    8. '=i' → logprob: -16.37582015991211
    9. '                           ' → logprob: -16.37582015991211
    10. '                        
' → logprob: -17.00082015991211

Token 432: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009621966164559126
    2. ' +' → logprob: -7.000962257385254
    3. '+
' → logprob: -10.625962257385254
    4. '+,' → logprob: -11.125962257385254
    5. '+x' → logprob: -11.625962257385254
    6. '+d' → logprob: -13.375962257385254
    7. '+n' → logprob: -14.875962257385254
    8. '+j' → logprob: -15.000962257385254
    9. ',' → logprob: -16.000961303710938
    10. ' +
' → logprob: -16.500961303710938

Token 433: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -3.8889261304575484e-06
    2. ' dx' → logprob: -12.500003814697266
    3. '_dx' → logprob: -16.125003814697266
    4. '.dx' → logprob: -17.375003814697266
    5. '(dx' → logprob: -17.375003814697266
    6. '0' → logprob: -18.375003814697266
    7. 'nx' → logprob: -18.500003814697266
    8. 'd' → logprob: -18.500003814697266
    9. '
' → logprob: -19.000003814697266
    10. '   ' → logprob: -19.000003814697266

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040540905320085585
    2. ',n' → logprob: -7.875405311584473
    3. ',j' → logprob: -11.250405311584473
    4. ' ,' → logprob: -11.500405311584473
    5. ',w' → logprob: -13.750405311584473
    6. ',y' → logprob: -14.125405311584473
    7. ',
' → logprob: -15.750405311584473
    8. ',num' → logprob: -17.37540626525879
    9. ',k' → logprob: -17.62540626525879
    10. '‌,' → logprob: -17.75040626525879

Token 435: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00012356207298580557
    2. ' j' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.875123977661133
    4. '	j' → logprob: -17.250123977661133
    5. '    ' → logprob: -19.000123977661133
    6. '           ' → logprob: -19.500123977661133
    7. '$j' → logprob: -19.500123977661133
    8. 'y' → logprob: -19.500123977661133
    9. ' ' → logprob: -19.625123977661133
    10. '       ' → logprob: -19.875123977661133

Token 436: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028982185176573694
    2. ',n' → logprob: -8.750289916992188
    3. ',y' → logprob: -9.375289916992188
    4. ' ,' → logprob: -11.000289916992188
    5. ',
' → logprob: -11.000289916992188
    6. '<|end|>' → logprob: -12.250289916992188
    7. ',w' → logprob: -12.875289916992188
    8. ',j' → logprob: -14.125289916992188
    9. ',next' → logprob: -14.625289916992188
    10. ',num' → logprob: -14.875289916992188

Token 437: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -5.931863051955588e-05
    2. ' dy' → logprob: -9.875059127807617
    3. '1' → logprob: -11.875059127807617
    4. 'ny' → logprob: -14.625059127807617
    5. '.dy' → logprob: -15.500059127807617
    6. 'ay' → logprob: -16.375059127807617
    7. 'd' → logprob: -18.000059127807617
    8. 'y' → logprob: -18.125059127807617
    9. 'dym' → logprob: -18.250059127807617
    10. '0' → logprob: -18.250059127807617

Token 438: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.17085900902748108
    2. ',' → logprob: -2.4208590984344482
    3. '<|end|>' → logprob: -3.9208590984344482
    4. ' if' → logprob: -4.545858860015869
    5. '           ' → logprob: -4.545858860015869
    6. '                   ' → logprob: -5.295858860015869
    7. '               ' → logprob: -5.295858860015869
    8. '                           ' → logprob: -5.545858860015869
    9. '                        ' → logprob: -5.920858860015869
    10. ' ' → logprob: -6.045858860015869

Token 439: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0019464874640107155
    2. '           ' → logprob: -7.251946449279785
    3. '					' → logprob: -8.501946449279785
    4. '                   ' → logprob: -8.626946449279785
    5. ' if' → logprob: -8.751946449279785
    6. '               ' → logprob: -8.751946449279785
    7. '       ' → logprob: -9.001946449279785
    8. '                        ' → logprob: -9.376946449279785
    9. '<|end|>' → logprob: -9.501946449279785
    10. ',' → logprob: -9.751946449279785

Token 440: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.527428925037384
    2. '                       ' → logprob: -0.902428925037384
    3. 'if' (adapté à ' if') → logprob: -5.527429103851318
    4. '                        ' → logprob: -9.15242862701416
    5. ' ' → logprob: -9.27742862701416
    6. '0' → logprob: -10.77742862701416
    7. ' in' → logprob: -10.90242862701416
    8. '           ' → logprob: -10.90242862701416
    9. '					' → logprob: -11.40242862701416
    10. ',' → logprob: -11.40242862701416

Token 441: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0380416102707386
    2. ' ' → logprob: -3.288041591644287
    3. ' ' → logprob: -16.663042068481445
    4. '  ' → logprob: -17.913042068481445
    5. '   ' → logprob: -17.913042068481445
    6. '(' → logprob: -18.975542068481445
    7. 'nx' → logprob: -19.413042068481445
    8. '۰' → logprob: -19.663042068481445
    9. ' (' → logprob: -19.850542068481445
    10. '    ' → logprob: -20.288042068481445

Token 442: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '(' → logprob: -21.250001907348633
    4. '۰' → logprob: -21.375001907348633
    5. '   ' → logprob: -21.875001907348633
    6. '０' → logprob: -22.250001907348633
    7. '
' → logprob: -22.375001907348633
    8. '  ' → logprob: -23.000001907348633
    9. '00' → logprob: -23.562501907348633
    10. ' ' → logprob: -23.625001907348633

Token 443: '<=' (ID: 16672)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.23428083956241608
    2. '<=' → logprob: -1.6092808246612549
    3. '0' → logprob: -5.484281063079834
    4. ' >=' → logprob: -5.734281063079834
    5. ' <=' → logprob: -6.734281063079834
    6. '<n' → logprob: -9.109280586242676
    7. ' ' → logprob: -9.234280586242676
    8. '>' → logprob: -11.484280586242676
    9. ' in' → logprob: -11.984280586242676
    10. '<h' → logprob: -12.234280586242676

Token 444: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -6.630610641877865e-06
    2. ' nx' → logprob: -12.000006675720215
    3. '(nx' → logprob: -14.625006675720215
    4. 'n' → logprob: -18.7500057220459
    5. 'Nx' → logprob: -19.6250057220459
    6. 'ny' → logprob: -20.0000057220459
    7. '
' → logprob: -20.6250057220459
    8. 'x' → logprob: -21.2500057220459
    9. 'nz' → logprob: -22.1250057220459
    10. 'NX' → logprob: -22.7500057220459

Token 445: '<h' (ID: 23843)
  Prédit: '<h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<h' → logprob: -0.10406026989221573
    2. '<' → logprob: -2.354060173034668
    3. '<n' → logprob: -5.604060173034668
    4. ' <' → logprob: -9.354060173034668
    5. '<w' → logprob: -9.604060173034668
    6. 'h' → logprob: -12.354060173034668
    7. '<len' → logprob: -13.479060173034668
    8. '<H' → logprob: -13.854060173034668
    9. 'and' → logprob: -14.604060173034668
    10. '<
' → logprob: -14.979060173034668

Token 446: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014164566993713379
    2. 'and' → logprob: -4.264164447784424
    3. ' ' → logprob: -15.139164924621582
    4. 'w' → logprob: -15.264164924621582
    5. '                       ' → logprob: -15.389164924621582
    6. '                        ' → logprob: -16.389163970947266
    7. ',' → logprob: -16.764163970947266
    8. '                           ' → logprob: -17.139163970947266
    9. '0' → logprob: -17.139163970947266
    10. '                            ' → logprob: -17.389163970947266

Token 447: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '                           ' → logprob: -17.75002098083496
    4. '                        ' → logprob: -17.75002098083496
    5. '                       ' → logprob: -18.00002098083496
    6. '                         ' → logprob: -18.12502098083496
    7. '  ' → logprob: -18.62502098083496
    8. '   ' → logprob: -18.62502098083496
    9. '
' → logprob: -18.87502098083496
    10. '                               ' → logprob: -19.12502098083496

Token 448: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. 'ny' → logprob: -17.0
    4. '
' → logprob: -19.75
    5. '   ' → logprob: -19.75
    6. '  ' → logprob: -20.0
    7. '۰' → logprob: -20.6875
    8. 'n' → logprob: -20.75
    9. 'w' → logprob: -20.875
    10. ' ' → logprob: -21.0625

Token 449: '<=' (ID: 16672)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3925546109676361
    2. '<w' → logprob: -1.1425546407699585
    3. '<n' → logprob: -5.267554759979248
    4. 'w' → logprob: -8.64255428314209
    5. '<num' → logprob: -9.01755428314209
    6. '<len' → logprob: -9.26755428314209
    7. ' <' → logprob: -9.64255428314209
    8. '<size' → logprob: -10.26755428314209
    9. '<th' → logprob: -13.26755428314209
    10. '<com' → logprob: -13.39255428314209

Token 450: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.001409401185810566
    2. 'w' → logprob: -6.876409530639648
    3. ' ny' → logprob: -8.126409530639648
    4. 'nw' → logprob: -9.501409530639648
    5. 'wy' → logprob: -12.751409530639648
    6. 'n' → logprob: -13.501409530639648
    7. 'wn' → logprob: -14.126409530639648
    8. 'nx' → logprob: -14.251409530639648
    9. 'nj' → logprob: -15.626409530639648
    10. ' w' → logprob: -16.25140953063965

Token 451: '<w' (ID: 45719)
  Prédit: '<w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<w' → logprob: -0.00010187433508690447
    2. 'w' → logprob: -9.250102043151855
    3. ' <' → logprob: -13.250102043151855
    4. '<' → logprob: -14.000102043151855
    5. '&w' → logprob: -14.250102043151855
    6. '6' → logprob: -14.750102043151855
    7. '[w' → logprob: -15.125102043151855
    8. 'and' → logprob: -15.750102043151855
    9. '>w' → logprob: -15.875102043151855
    10. '<W' → logprob: -15.875102043151855

Token 452: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006715967319905758
    2. 'and' → logprob: -5.006715774536133
    3. ':
' → logprob: -14.881715774536133
    4. '           ' → logprob: -17.256715774536133
    5. '	and' → logprob: -17.256715774536133
    6. '                           ' → logprob: -17.381715774536133
    7. ':' → logprob: -17.381715774536133
    8. '                       ' → logprob: -17.631715774536133
    9. '               ' → logprob: -17.631715774536133
    10. '                   ' → logprob: -18.006715774536133

Token 453: ' field' (ID: 3259)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.0013260759878903627
    2. ' field' → logprob: -6.626326084136963
    3. '(field' → logprob: -16.501325607299805
    4. '	field' → logprob: -17.501325607299805
    5. '[field' → logprob: -17.626325607299805
    6. '.field' → logprob: -17.751325607299805
    7. '                           ' → logprob: -18.001325607299805
    8. ' ' → logprob: -18.126325607299805
    9. '$field' → logprob: -18.251325607299805
    10. '                   ' → logprob: -18.626325607299805

Token 454: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.630610641877865e-06
    2. '```' → logprob: -12.625006675720215
    3. '[' → logprob: -13.875006675720215
    4. ' [' → logprob: -14.000006675720215
    5. '
' → logprob: -14.375006675720215
    6. '[
' → logprob: -15.375006675720215
    7. '   ' → logprob: -15.500006675720215
    8. 'nx' → logprob: -15.750006675720215
    9. '\[' → logprob: -16.2500057220459
    10. '``' → logprob: -16.7500057220459

Token 455: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.895480277715251e-06
    2. '[n' → logprob: -11.750008583068848
    3. 'nx' → logprob: -14.000008583068848
    4. '[x' → logprob: -15.875008583068848
    5. '[' → logprob: -17.000009536743164
    6. 'n' → logprob: -17.750009536743164
    7. '(nx' → logprob: -18.500009536743164
    8. '][' → logprob: -18.625009536743164
    9. '```' → logprob: -19.125009536743164
    10. '
' → logprob: -19.125009536743164

Token 456: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.014282564632594585
    2. '[n' → logprob: -4.264282703399658
    3. '[' → logprob: -9.5142822265625
    4. ']' → logprob: -11.2642822265625
    5. ''][' → logprob: -12.0142822265625
    6. ' ][' → logprob: -12.1392822265625
    7. '[j' → logprob: -12.8892822265625
    8. '[now' → logprob: -13.0142822265625
    9. ']][' → logprob: -13.1392822265625
    10. '```' → logprob: -13.1392822265625

Token 457: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0001290454383706674
    2. 'nj' → logprob: -9.000128746032715
    3. ' ny' → logprob: -13.000128746032715
    4. 'nyi' → logprob: -13.500128746032715
    5. 'n' → logprob: -13.875128746032715
    6. '
' → logprob: -14.875128746032715
    7. 'nx' → logprob: -15.625128746032715
    8. ''ny' → logprob: -16.12512969970703
    9. 'jy' → logprob: -16.87512969970703
    10. 'j' → logprob: -17.00012969970703

Token 458: ']=='' (ID: 71177)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.7710453271865845
    2. '==' → logprob: -1.5210453271865845
    3. '=='' → logprob: -1.7710453271865845
    4. ']=='' → logprob: -2.146045207977295
    5. ']' → logprob: -3.521045207977295
    6. ' ==' → logprob: -6.146045207977295
    7. '']=='' → logprob: -9.396045684814453
    8. '==
' → logprob: -10.521045684814453
    9. '[' → logprob: -10.771045684814453
    10. ' =='' → logprob: -11.396045684814453

Token 459: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -3.173704271830502e-06
    2. ''O' → logprob: -12.75000286102295
    3. ' O' → logprob: -16.625003814697266
    4. '"O' → logprob: -16.750003814697266
    5. ''' → logprob: -17.375003814697266
    6. '	O' → logprob: -18.250003814697266
    7. 'О' → logprob: -19.250003814697266
    8. '.O' → logprob: -19.750003814697266
    9. ''o' → logprob: -19.875003814697266
    10. '`' → logprob: -19.875003814697266

Token 460: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06791432946920395
    2. '):
' → logprob: -3.0679142475128174
    3. ':' → logprob: -4.8179144859313965
    4. '                       ' → logprob: -5.3179144859313965
    5. '':
' → logprob: -6.3179144859313965
    6. ''):
' → logprob: -6.5679144859313965
    7. '                           ' → logprob: -6.8179144859313965
    8. '():
' → logprob: -7.1929144859313965
    9. '                   ' → logprob: -8.067914009094238
    10. '):' → logprob: -8.942914009094238

Token 461: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.016609374433755875
    2. ' O' → logprob: -4.516609191894531
    3. ':
' → logprob: -5.766609191894531
    4. 'O' → logprob: -7.391609191894531
    5. '                               ' → logprob: -7.641609191894531
    6. '                       ' → logprob: -7.766609191894531
    7. '   ' → logprob: -8.641609191894531
    8. '
' → logprob: -8.641609191894531
    9. '           ' → logprob: -9.016609191894531
    10. ':' → logprob: -9.391609191894531

Token 462: ' O' (ID: 532)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' (adapté à ' O') → logprob: -0.002477796748280525
    2. ' O' → logprob: -6.002477645874023
    3. '                           ' → logprob: -13.877477645874023
    4. '                               ' → logprob: -14.002477645874023
    5. ' ' → logprob: -15.752477645874023
    6. '
' → logprob: -16.377477645874023
    7. '   ' → logprob: -16.752477645874023
    8. '	O' → logprob: -18.002477645874023
    9. ',O' → logprob: -18.127477645874023
    10. '                       ' → logprob: -18.627477645874023

Token 463: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. '_' → logprob: -19.375
    3. 'O' → logprob: -19.5
    4. ''_' → logprob: -20.625
    5. ' _' → logprob: -21.125
    6. '_o' → logprob: -21.25
    7. '_t' → logprob: -21.875
    8. '_TO' → logprob: -21.875
    9. 'To' → logprob: -22.0
    10. '\' → logprob: -22.0

Token 464: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6932988166809082
    2. 'erase' → logprob: -0.6932988166809082
    3. '_to' → logprob: -9.06829833984375
    4. 'to' → logprob: -10.81829833984375
    5. ' erase' → logprob: -11.69329833984375
    6. '.erase' → logprob: -12.56829833984375
    7. 'rase' → logprob: -13.06829833984375
    8. 'er' → logprob: -14.69329833984375
    9. 'Erase' → logprob: -14.81829833984375
    10. 'eras' → logprob: -14.94329833984375

Token 465: 'erase' (ID: 91229)
  Prédit: 'erase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erase' → logprob: -1.981667537620524e-06
    2. 'rase' → logprob: -13.750001907348633
    3. ' erase' → logprob: -14.875001907348633
    4. 'to' → logprob: -15.625001907348633
    5. '.erase' → logprob: -16.125001907348633
    6. 'eras' → logprob: -17.125001907348633
    7. 'add' → logprob: -17.375001907348633
    8. 'er' → logprob: -17.375001907348633
    9. '```' → logprob: -17.750001907348633
    10. 'Erase' → logprob: -17.875001907348633

Token 466: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0003370118502061814
    2. '.' → logprob: -8.000336647033691
    3. '.append' → logprob: -14.000336647033691
    4. ' .' → logprob: -14.625336647033691
    5. '.Add' → logprob: -16.500337600708008
    6. '.update' → logprob: -16.875337600708008
    7. 'add' → logprob: -17.250337600708008
    8. '.setdefault' → logprob: -17.875337600708008
    9. '.insert' → logprob: -18.750337600708008
    10. ').' → logprob: -19.125337600708008

Token 467: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0002765902318060398
    2. '(' → logprob: -8.750276565551758
    3. '(nx' → logprob: -9.125276565551758
    4. '(n' → logprob: -11.625276565551758
    5. ' (' → logprob: -15.750276565551758
    6. ' ((' → logprob: -16.250276565551758
    7. '(
' → logprob: -17.500276565551758
    8. '(nt' → logprob: -17.750276565551758
    9. '(x' → logprob: -18.500276565551758
    10. '(nn' → logprob: -18.500276565551758

Token 468: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -2.696889623621246e-06
    2. ' nx' → logprob: -13.25000286102295
    3. '(nx' → logprob: -14.37500286102295
    4. 'n' → logprob: -15.62500286102295
    5. '
' → logprob: -16.625001907348633
    6. 'ny' → logprob: -20.125001907348633
    7. 'nn' → logprob: -21.000001907348633
    8. 'nv' → logprob: -21.000001907348633
    9. '   ' → logprob: -21.250001907348633
    10. 'nk' → logprob: -21.500001907348633

Token 469: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00485646165907383
    2. ',n' → logprob: -5.379856586456299
    3. ' ,' → logprob: -8.62985610961914
    4. ',
' → logprob: -9.87985610961914
    5. ',y' → logprob: -13.75485610961914
    6. ',num' → logprob: -13.75485610961914
    7. '<|end|>' → logprob: -14.00485610961914
    8. '‌,' → logprob: -14.37985610961914
    9. ',next' → logprob: -15.25485610961914
    10. '),' → logprob: -15.25485610961914

Token 470: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -7.505351095460355e-05
    2. ' ny' → logprob: -9.500075340270996
    3. 'nyi' → logprob: -16.37507438659668
    4. 'n' → logprob: -17.62507438659668
    5. '
' → logprob: -18.62507438659668
    6. 'nyt' → logprob: -18.75007438659668
    7. 'nym' → logprob: -19.37507438659668
    8. ' ' → logprob: -19.50007438659668
    9. 'nx' → logprob: -19.75007438659668
    10. 'nj' → logprob: -20.12507438659668

Token 471: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12696276605129242
    2. '))' → logprob: -2.126962661743164
    3. ')
' → logprob: -11.126962661743164
    4. '))
' → logprob: -11.376962661743164
    5. ')}' → logprob: -12.251962661743164
    6. ')))' → logprob: -13.251962661743164
    7. ' )' → logprob: -14.126962661743164
    8. '                           ' → logprob: -14.876962661743164
    9. '                       ' → logprob: -15.001962661743164
    10. '})' → logprob: -15.251962661743164

Token 472: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03524269908666611
    2. 'for' → logprob: -3.910242795944214
    3. '
' → logprob: -4.285242557525635
    4. ' for' → logprob: -7.285242557525635
    5. '        
' → logprob: -9.785243034362793
    6. '   ' → logprob: -10.035243034362793
    7. '```' → logprob: -11.410243034362793
    8. 'if' → logprob: -12.035243034362793
    9. '                            
' → logprob: -12.285243034362793
    10. '

' → logprob: -12.535243034362793

Token 473: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015325551852583885
    2. '       ' → logprob: -4.265325546264648
    3. ' for' → logprob: -7.015325546264648
    4. '
' → logprob: -8.890325546264648
    5. '        
' → logprob: -9.140325546264648
    6. '   ' → logprob: -11.890325546264648
    7. '#' → logprob: -12.140325546264648
    8. '	for' → logprob: -12.765325546264648
    9. '```' → logprob: -13.640325546264648
    10. '    
' → logprob: -14.640325546264648

Token 474: ' O' (ID: 532)
  Prédit: ' O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' O' → logprob: -0.2976815402507782
    2. ' not' → logprob: -1.7976815700531006
    3. 'O' → logprob: -2.4226815700531006
    4. 'not' → logprob: -6.2976813316345215
    5. ' len' → logprob: -7.0476813316345215
    6. ' ' → logprob: -8.54768180847168
    7. 'len' → logprob: -9.04768180847168
    8. '   ' → logprob: -10.17268180847168
    9. '  ' → logprob: -11.67268180847168
    10. '	O' → logprob: -11.73518180847168

Token 475: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -2.2200749754119897e-06
    2. '_t' → logprob: -13.625001907348633
    3. 'to' → logprob: -15.375001907348633
    4. 'To' → logprob: -15.500001907348633
    5. ''_' → logprob: -16.000001907348633
    6. '"_' → logprob: -16.500001907348633
    7. '_TO' → logprob: -16.625001907348633
    8. 'O' → logprob: -17.500001907348633
    9. '_' → logprob: -17.625001907348633
    10. '
' → logprob: -18.125001907348633

Token 476: '_' (ID: 62)
  Prédit: 'rase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rase' → logprob: -0.010478435084223747
    2. 'erase' → logprob: -5.010478496551514
    3. '_' → logprob: -5.885478496551514
    4. 'r' → logprob: -7.260478496551514
    5. 'race' → logprob: -9.010478019714355
    6. 'arse' → logprob: -9.760478019714355
    7. '_r' → logprob: -10.885478019714355
    8. 'ras' → logprob: -11.510478019714355
    9. 'erse' → logprob: -11.760478019714355
    10. 'rr' → logprob: -11.885478019714355

Token 477: 'erase' (ID: 91229)
  Prédit: 'rase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rase' → logprob: -0.007839304395020008
    2. 'erase' → logprob: -5.007839202880859
    3. 'r' → logprob: -7.132839202880859
    4. 'race' → logprob: -8.88283920288086
    5. 'arse' → logprob: -8.88283920288086
    6. 'erse' → logprob: -11.13283920288086
    7. 'ase' → logprob: -11.88283920288086
    8. 'raise' → logprob: -12.00783920288086
    9. 'ras' → logprob: -12.38283920288086
    10. 'rr' → logprob: -13.25783920288086

Token 478: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06234968081116676
    2. ':
' → logprob: -2.812349796295166
    3. '==' → logprob: -8.187349319458008
    4. '.' → logprob: -10.687349319458008
    5. ' ==' → logprob: -11.062349319458008
    6. '=' → logprob: -11.312349319458008
    7. '       ' → logprob: -11.312349319458008
    8. ':
' → logprob: -11.562349319458008
    9. '   ' → logprob: -12.062349319458008
    10. '):
' → logprob: -12.187349319458008

Token 479: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13404251635074615
    2. '       ' → logprob: -2.259042501449585
    3. ':
' → logprob: -4.259042739868164
    4. ' for' → logprob: -5.634042739868164
    5. ':' → logprob: -5.884042739868164
    6. 'for' → logprob: -8.884042739868164
    7. '   ' → logprob: -9.384042739868164
    8. '               ' → logprob: -9.884042739868164
    9. '        
' → logprob: -10.259042739868164
    10. '<|end|>' → logprob: -10.509042739868164

Token 480: ' erased' (ID: 139842)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.032160237431526184
    2. '       ' → logprob: -4.15716028213501
    3. '           ' → logprob: -4.78216028213501
    4. 'er' → logprob: -5.15716028213501
    5. ' for' → logprob: -6.53216028213501
    6. '   ' → logprob: -8.657159805297852
    7. ' er' → logprob: -9.282159805297852
    8. 'erase' → logprob: -9.907159805297852
    9. '               ' → logprob: -10.032159805297852
    10. ' erased' → logprob: -11.407159805297852

Token 481: '_any' (ID: 95226)
  Prédit: '_any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_any' → logprob: -1.981667537620524e-06
    2. 'Any' → logprob: -13.750001907348633
    3. ' =' → logprob: -14.375001907348633
    4. '=True' → logprob: -16.500001907348633
    5. 'any' → logprob: -16.500001907348633
    6. '_ANY' → logprob: -16.750001907348633
    7. '[Any' → logprob: -17.375001907348633
    8. '=' → logprob: -17.625001907348633
    9. '_all' → logprob: -18.375001907348633
    10. '_' → logprob: -19.500001907348633

Token 482: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859350249171257
    2. '=' → logprob: -3.048593521118164
    3. '=True' → logprob: -12.173593521118164
    4. ' ' → logprob: -14.048593521118164
    5. ' |=' → logprob: -16.548593521118164
    6. '=False' → logprob: -17.798593521118164
    7. ' =
' → logprob: -18.048593521118164
    8. '   ' → logprob: -18.298593521118164
    9. '  ' → logprob: -18.798593521118164
    10. ',' → logprob: -19.423593521118164

Token 483: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.47407710552215576
    2. ' True' → logprob: -0.9740771055221558
    3. '=True' → logprob: -16.724077224731445
    4. 'False' → logprob: -18.224077224731445
    5. '(True' → logprob: -19.349077224731445
    6. '           ' → logprob: -20.599077224731445
    7. '   ' → logprob: -21.349077224731445
    8. 'true' → logprob: -21.974077224731445
    9. ' False' → logprob: -22.224077224731445
    10. '_true' → logprob: -22.474077224731445

Token 484: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47725555300712585
    2. '       ' → logprob: -1.1022555828094482
    3. '
' → logprob: -3.2272555828094482
    4. 'else' → logprob: -4.977255344390869
    5. ' else' → logprob: -7.977255344390869
    6. '        
' → logprob: -8.477255821228027
    7. ' for' → logprob: -9.852255821228027
    8. '   ' → logprob: -10.227255821228027
    9. '            
' → logprob: -10.227255821228027
    10. 'for' → logprob: -10.352255821228027

Token 485: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5791632533073425
    2. '           ' → logprob: -0.8291632533073425
    3. 'else' → logprob: -5.954163074493408
    4. ' for' → logprob: -8.329163551330566
    5. 'for' → logprob: -8.829163551330566
    6. ' else' → logprob: -8.954163551330566
    7. '   ' → logprob: -9.829163551330566
    8. '
' → logprob: -10.079163551330566
    9. '        
' → logprob: -13.079163551330566
    10. '               ' → logprob: -13.204163551330566

Token 486: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0032505544368177652
    2. '       ' → logprob: -5.753250598907471
    3. ' for' → logprob: -9.628250122070312
    4. '           ' → logprob: -12.003250122070312
    5. '   ' → logprob: -15.003250122070312
    6. 'while' → logprob: -15.253250122070312
    7. 'else' → logprob: -15.378250122070312
    8. '	for' → logprob: -16.878250122070312
    9. '
' → logprob: -17.503250122070312
    10. '                   ' → logprob: -17.753250122070312

Token 487: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.016536446288228035
    2. 'ox' → logprob: -4.266536235809326
    3. '(x' → logprob: -6.391536235809326
    4. 'nx' → logprob: -7.641536235809326
    5. ' x' → logprob: -8.891536712646484
    6. ' ox' → logprob: -11.016536712646484
    7. '(nx' → logprob: -11.141536712646484
    8. ' (' → logprob: -11.266536712646484
    9. '(' → logprob: -11.391536712646484
    10. 'oi' → logprob: -11.516536712646484

Token 488: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.001172129064798355
    2. ',' → logprob: -6.751172065734863
    3. ',x' → logprob: -13.626172065734863
    4. ' ,' → logprob: -14.626172065734863
    5. 'y' → logprob: -16.37617301940918
    6. ',o' → logprob: -16.62617301940918
    7. ',n' → logprob: -17.37617301940918
    8. ',j' → logprob: -17.75117301940918
    9. ',Y' → logprob: -17.87617301940918
    10. ',
' → logprob: -17.87617301940918

Token 489: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029751067981123924
    2. 'in' → logprob: -3.5297510623931885
    3. ',' → logprob: -15.52975082397461
    4. ' ' → logprob: -16.27975082397461
    5. '	in' → logprob: -16.52975082397461
    6. '   ' → logprob: -16.65475082397461
    7. 'In' → logprob: -16.90475082397461
    8. 'O' → logprob: -17.90475082397461
    9. '_in' → logprob: -17.90475082397461
    10. ' ,' → logprob: -17.90475082397461

Token 490: ' O' (ID: 532)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.006716555915772915
    2. ' O' → logprob: -5.006716728210449
    3. 'sorted' → logprob: -15.13171672821045
    4. '   ' → logprob: -15.13171672821045
    5. '
' → logprob: -15.50671672821045
    6. ' ' → logprob: -15.75671672821045
    7. 'list' → logprob: -16.006715774536133
    8. '	O' → logprob: -16.506715774536133
    9. '  ' → logprob: -18.131715774536133
    10. ',O' → logprob: -18.381715774536133

Token 491: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -2.696889623621246e-06
    2. 'to' → logprob: -13.12500286102295
    3. 'To' → logprob: -15.62500286102295
    4. '_' → logprob: -15.75000286102295
    5. '_t' → logprob: -16.625001907348633
    6. '_TO' → logprob: -16.625001907348633
    7. '
' → logprob: -17.125001907348633
    8. '```' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.500001907348633
    10. 'x' → logprob: -18.750001907348633

Token 492: '_' (ID: 62)
  Prédit: 'rase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rase' → logprob: -0.033897869288921356
    2. 'erase' → logprob: -3.408897876739502
    3. '_' → logprob: -8.658897399902344
    4. 'r' → logprob: -10.408897399902344
    5. 'arse' → logprob: -10.908897399902344
    6. 'race' → logprob: -11.033897399902344
    7. '_to' → logprob: -12.658897399902344
    8. 'ase' → logprob: -12.783897399902344
    9. 'erse' → logprob: -13.158897399902344
    10. '.erase' → logprob: -13.533897399902344

Token 493: 'erase' (ID: 91229)
  Prédit: 'rase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rase' → logprob: -0.008854585699737072
    2. 'erase' → logprob: -4.758854389190674
    3. 'ase' → logprob: -9.008854866027832
    4. 'arse' → logprob: -10.008854866027832
    5. 'r' → logprob: -10.008854866027832
    6. 'race' → logprob: -11.133854866027832
    7. 'O' → logprob: -12.508854866027832
    8. 'erse' → logprob: -13.508854866027832
    9. 'se' → logprob: -14.008854866027832
    10. 'ras' → logprob: -14.133854866027832

Token 494: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07938992977142334
    2. ':
' → logprob: -2.579390048980713
    3. ':
' → logprob: -8.704389572143555
    4. '                   ' → logprob: -9.204389572143555
    5. '           ' → logprob: -9.579389572143555
    6. '               ' → logprob: -10.329389572143555
    7. '):' → logprob: -10.579389572143555
    8. '):
' → logprob: -10.579389572143555
    9. '   ' → logprob: -10.954389572143555
    10. '                           ' → logprob: -11.079389572143555

Token 495: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0051771895959973335
    2. ' field' → logprob: -6.005177021026611
    3. '                   ' → logprob: -6.130177021026611
    4. '   ' → logprob: -8.00517749786377
    5. 'field' → logprob: -9.38017749786377
    6. '           ' → logprob: -10.00517749786377
    7. '                       ' → logprob: -10.75517749786377
    8. '
' → logprob: -11.63017749786377
    9. '       ' → logprob: -11.75517749786377
    10. '	field' → logprob: -12.25517749786377

Token 496: ' field' (ID: 3259)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' (adapté à ' field') → logprob: -0.10159707069396973
    2. ' field' → logprob: -2.3515970706939697
    3. '                   ' → logprob: -6.976596832275391
    4. '               ' → logprob: -7.976596832275391
    5. '           ' → logprob: -9.72659683227539
    6. '	field' → logprob: -10.72659683227539
    7. '   ' → logprob: -10.97659683227539
    8. ' ' → logprob: -12.85159683227539
    9. '[field' → logprob: -12.85159683227539
    10. '                       ' → logprob: -12.85159683227539

Token 497: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.375000953674316
    3. '```' → logprob: -14.625000953674316
    4. '][' → logprob: -16.000001907348633
    5. ' [' → logprob: -16.625001907348633
    6. 'x' → logprob: -16.625001907348633
    7. '[field' → logprob: -17.125001907348633
    8. ')[' → logprob: -17.750001907348633
    9. '[i' → logprob: -18.000001907348633
    10. '\[' → logprob: -18.125001907348633

Token 498: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009774327045306563
    2. '[x' → logprob: -7.000977516174316
    3. '"][' → logprob: -10.375977516174316
    4. ']' → logprob: -11.375977516174316
    5. ''][' → logprob: -11.500977516174316
    6. ' ][' → logprob: -12.000977516174316
    7. '[' → logprob: -13.375977516174316
    8. '```' → logprob: -13.375977516174316
    9. ']][' → logprob: -14.250977516174316
    10. '   ' → logprob: -14.375977516174316

Token 499: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.8624639324116288e-06
    2. 'j' → logprob: -14.000001907348633
    3. ' y' → logprob: -14.125001907348633
    4. 'x' → logprob: -16.000001907348633
    5. 'yj' → logprob: -17.375001907348633
    6. ''y' → logprob: -18.000001907348633
    7. ']' → logprob: -18.625001907348633
    8. ' ' → logprob: -19.000001907348633
    9. '[y' → logprob: -19.875001907348633
    10. '	y' → logprob: -19.875001907348633

Token 500: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013756176456809044
    2. ']=' → logprob: -4.513756275177002
    3. ']='' → logprob: -6.013756275177002
    4. '=' → logprob: -8.638755798339844
    5. ' =' → logprob: -10.013755798339844
    6. ' ]' → logprob: -10.263755798339844
    7. '='' → logprob: -13.263755798339844
    8. ']="' → logprob: -14.263755798339844
    9. '']' → logprob: -15.888755798339844
    10. '']='' → logprob: -16.138755798339844

Token 501: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002294272184372
    2. ' =' → logprob: -2.350229501724243
    3. '='' → logprob: -10.725229263305664
    4. '[' → logprob: -14.975229263305664
    5. '.' → logprob: -15.725229263305664
    6. ' ='' → logprob: -15.975229263305664
    7. '='.' → logprob: -16.350229263305664
    8. '.=' → logprob: -16.475229263305664
    9. '=
' → logprob: -17.725229263305664
    10. ')' → logprob: -17.850229263305664

Token 502: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -2.2246291337069124e-05
    2. '.' → logprob: -11.000021934509277
    3. ' '.'' → logprob: -12.250021934509277
    4. '('.')' → logprob: -14.875021934509277
    5. '"."' → logprob: -14.875021934509277
    6. '".' → logprob: -18.625022888183594
    7. ''' → logprob: -18.875022888183594
    8. '`.`' → logprob: -19.750022888183594
    9. '','' → logprob: -19.875022888183594
    10. '.'.' → logprob: -19.875022888183594

Token 503: ''

' (ID: 7497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 504: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 505: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25036558508872986
    2. '<|end|>' → logprob: -1.6253656148910522
    3. '#' (adapté à ' #') → logprob: -4.000365734100342
    4. '   ' → logprob: -5.750365734100342
    5. 'continue' → logprob: -7.750365734100342
    6. 'else' → logprob: -8.125365257263184
    7. ' ' → logprob: -8.125365257263184
    8. '        ' → logprob: -8.250365257263184
    9. '```' → logprob: -8.250365257263184
    10. '        
' → logprob: -8.375365257263184

Token 506: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2175730466842651
    2. '<|end|>' → logprob: -1.5925730466842651
    3. 'continue' → logprob: -2.0925731658935547
    4. ' if' → logprob: -2.0925731658935547
    5. '       ' → logprob: -2.2175731658935547
    6. '#' → logprob: -2.4675731658935547
    7. ' continue' → logprob: -3.2175731658935547
    8. '```' → logprob: -4.592573165893555
    9. '   ' → logprob: -6.092573165893555
    10. 'return' → logprob: -6.467573165893555

Token 507: '4' (ID: 19)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3487502932548523
    2. '#' → logprob: -1.598750352859497
    3. '<|end|>' → logprob: -3.098750352859497
    4. 'continue' → logprob: -4.348750114440918
    5. '       ' → logprob: -4.598750114440918
    6. ' if' → logprob: -4.973750114440918
    7. '   ' → logprob: -5.348750114440918
    8. '```' → logprob: -5.473750114440918
    9. 'return' → logprob: -6.348750114440918
    10. 'else' → logprob: -6.348750114440918

Token 508: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02240501344203949
    2. '   ' → logprob: -4.14740514755249
    3. '       ' → logprob: -5.77240514755249
    4. ' )' → logprob: -6.64740514755249
    5. ')
' → logprob: -6.89740514755249
    6. '#' → logprob: -8.272404670715332
    7. '    ' → logprob: -8.897404670715332
    8. '()' → logprob: -8.897404670715332
    9. '
' → logprob: -9.147404670715332
    10. '```' → logprob: -9.147404670715332

Token 509: ' Gravity' (ID: 92006)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13467732071876526
    2. '#' → logprob: -2.1346774101257324
    3. ' for' → logprob: -6.009677410125732
    4. 'gravity' → logprob: -6.384677410125732
    5. 'fall' → logprob: -6.884677410125732
    6. 'Apply' → logprob: -7.259677410125732
    7. 'apply' → logprob: -7.259677410125732
    8. ' #' → logprob: -7.634677410125732
    9. '   ' → logprob: -8.509676933288574
    10. '
' → logprob: -9.384676933288574

Token 510: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1653297245502472
    2. '
' → logprob: -2.665329694747925
    3. ' for' → logprob: -2.915329694747925
    4. 'for' → logprob: -4.040329933166504
    5. '   ' → logprob: -4.540329933166504
    6. '        
' → logprob: -8.540329933166504
    7. '  
' → logprob: -9.540329933166504
    8. '    
' → logprob: -10.165329933166504
    9. '	for' → logprob: -11.165329933166504
    10. '```' → logprob: -12.040329933166504

Token 511: ' let' (ID: 1632)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06243659555912018
    2. ' for' → logprob: -2.812436580657959
    3. '       ' → logprob: -7.812436580657959
    4. '   ' → logprob: -9.812437057495117
    5. '
' → logprob: -12.812437057495117
    6. 'def' → logprob: -13.562437057495117
    7. '    ' → logprob: -13.812437057495117
    8. ' ' → logprob: -13.812437057495117
    9. '	for' → logprob: -14.437437057495117
    10. 'For' → logprob: -14.562437057495117

Token 512: ' blocks' (ID: 18125)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14861418306827545
    2. ' for' → logprob: -2.0236141681671143
    3. '   ' → logprob: -5.148614406585693
    4. ' ' → logprob: -10.273613929748535
    5. '    ' → logprob: -10.273613929748535
    6. '       ' → logprob: -11.148613929748535
    7. '  ' → logprob: -11.523613929748535
    8. ''s' → logprob: -11.898613929748535
    9. '	for' → logprob: -12.773613929748535
    10. 's' → logprob: -13.148613929748535

Token 513: ' fall' (ID: 5617)
  Prédit: 'fall'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fall' → logprob: -0.43060851097106934
    2. ' fall' → logprob: -1.0556085109710693
    3. '   ' → logprob: -6.805608749389648
    4. 'drop' → logprob: -7.305608749389648
    5. ' drop' → logprob: -9.555608749389648
    6. '落' → logprob: -11.805608749389648
    7. 'go' → logprob: -11.930608749389648
    8. ' ' → logprob: -11.930608749389648
    9. '  ' → logprob: -12.055608749389648
    10. 'for' → logprob: -12.305608749389648

Token 514: ' down' (ID: 1917)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011771932244300842
    2. ' for' → logprob: -4.886772155761719
    3. 'for' → logprob: -5.511772155761719
    4. '   ' → logprob: -9.511772155761719
    5. '
' → logprob: -10.261772155761719
    6. '	for' → logprob: -12.386772155761719
    7. '        
' → logprob: -13.136772155761719
    8. '           ' → logprob: -13.386772155761719
    9. ',' → logprob: -15.511772155761719
    10. '```' → logprob: -15.511772155761719

Token 515: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022738119587302208
    2. 'for' → logprob: -4.272737979888916
    3. ' for' → logprob: -4.772737979888916
    4. '   ' → logprob: -10.147738456726074
    5. '
' → logprob: -10.272738456726074
    6. '	for' → logprob: -12.522738456726074
    7. '           ' → logprob: -13.522738456726074
    8. '        
' → logprob: -13.647738456726074
    9. '```' → logprob: -14.772738456726074
    10. '      ' → logprob: -16.272737503051758

Token 516: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02785770408809185
    2. '
' → logprob: -3.652857780456543
    3. ' for' → logprob: -7.152857780456543
    4. '```' → logprob: -7.902857780456543
    5. '        
' → logprob: -8.902857780456543
    6. '   ' → logprob: -9.027857780456543
    7. 'for' → logprob: -9.277857780456543
    8. '  
' → logprob: -10.777857780456543
    9. '    
' → logprob: -11.402857780456543
    10. '
' → logprob: -11.652857780456543

Token 517: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3351265490055084
    2. 'for' (adapté à ' for') → logprob: -1.335126519203186
    3. ' for' → logprob: -3.8351266384124756
    4. '
' → logprob: -11.460126876831055
    5. '   ' → logprob: -11.460126876831055
    6. '	for' → logprob: -12.085126876831055
    7. '```' → logprob: -13.460126876831055
    8. '           ' → logprob: -14.710126876831055
    9. '        
' → logprob: -15.460126876831055
    10. '``' → logprob: -17.085126876831055

Token 518: ' col' (ID: 996)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.0538288913667202
    2. 'j' → logprob: -3.0538289546966553
    3. ' col' → logprob: -5.303828716278076
    4. 'col' → logprob: -8.678829193115234
    5. ' i' → logprob: -9.678829193115234
    6. ' y' → logprob: -11.928829193115234
    7. 'i' → logprob: -11.928829193115234
    8. ' x' → logprob: -12.553829193115234
    9. '	j' → logprob: -13.428829193115234
    10. '   ' → logprob: -13.803829193115234

Token 519: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017163509037345648
    2. 'in' → logprob: -6.376716136932373
    3. 's' → logprob: -12.626716613769531
    4. '   ' → logprob: -13.251716613769531
    5. 'i' → logprob: -13.376716613769531
    6. 'range' → logprob: -13.626716613769531
    7. '```' → logprob: -13.876716613769531
    8. ' ' → logprob: -14.126716613769531
    9. 't' → logprob: -14.251716613769531
    10. ' i' → logprob: -14.501716613769531

Token 520: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009114635176956654
    2. ' range' → logprob: -7.000911235809326
    3. '(range' → logprob: -20.875911712646484
    4. '   ' → logprob: -21.125911712646484
    5. ' ' → logprob: -21.250911712646484
    6. '	range' → logprob: -21.625911712646484
    7. 'rang' → logprob: -22.125911712646484
    8. ')' → logprob: -22.500911712646484
    9. 'r' → logprob: -22.875911712646484
    10. '
' → logprob: -22.875911712646484

Token 521: '(w' (ID: 7420)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4742012321949005
    2. '(w' → logprob: -0.9742012023925781
    3. ' w' → logprob: -9.599201202392578
    4. '6' → logprob: -9.849201202392578
    5. '(' → logprob: -13.599201202392578
    6. '	w' → logprob: -13.724201202392578
    7. '=w' → logprob: -14.474201202392578
    8. '_w' → logprob: -15.224201202392578
    9. '<w' → logprob: -16.099201202392578
    10. '   ' → logprob: -16.349201202392578

Token 522: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10035224258899689
    2. '):' → logprob: -2.3503522872924805
    3. '   ' → logprob: -9.35035228729248
    4. '):
' → logprob: -10.60035228729248
    5. ':' → logprob: -10.85035228729248
    6. '       ' → logprob: -12.22535228729248
    7. ':
' → logprob: -12.60035228729248
    8. ' ):
' → logprob: -12.72535228729248
    9. ' ):' → logprob: -13.97535228729248
    10. '):

' → logprob: -14.10035228729248

Token 523: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21157360076904297
    2. '       ' → logprob: -1.711573600769043
    3. ' for' → logprob: -4.961573600769043
    4. 'for' → logprob: -6.086573600769043
    5. '   ' → logprob: -7.711573600769043
    6. '	       ' → logprob: -8.711573600769043
    7. '               ' → logprob: -9.836573600769043
    8. 'i' → logprob: -10.336573600769043
    9. '```' → logprob: -10.336573600769043
    10. '	   ' → logprob: -10.336573600769043

Token 524: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.04992608353495598
    2. 'bottom' → logprob: -3.6749260425567627
    3. 'for' → logprob: -4.924926280975342
    4. '           ' → logprob: -4.924926280975342
    5. 'col' → logprob: -6.174926280975342
    6. 'empty' → logprob: -6.424926280975342
    7. 'pointer' → logprob: -7.299926280975342
    8. 'column' → logprob: -7.549926280975342
    9. 'arr' → logprob: -7.549926280975342
    10. 'row' → logprob: -7.674926280975342

Token 525: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1071086898446083
    2. ' =' → logprob: -2.3571085929870605
    3. '=[]' → logprob: -4.9821085929870605
    4. '=[]
' → logprob: -10.982109069824219
    5. '=[]
' → logprob: -14.857109069824219
    6. '   ' → logprob: -15.107109069824219
    7. '=[],' → logprob: -15.482109069824219
    8. '=[' → logprob: -15.732109069824219
    9. '[]' → logprob: -15.857109069824219
    10. ',' → logprob: -15.857109069824219

Token 526: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0018423711881041527
    2. '[]
' → logprob: -6.501842498779297
    3. '[' → logprob: -8.001842498779297
    4. ' []' → logprob: -12.501842498779297
    5. '[]

' → logprob: -13.751842498779297
    6. '[]}' → logprob: -16.376842498779297
    7. 'deque' → logprob: -16.626842498779297
    8. '[
' → logprob: -16.751842498779297
    9. '[i' → logprob: -17.501842498779297
    10. '[int' → logprob: -17.751842498779297

Token 527: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15641480684280396
    2. ' for' → logprob: -2.656414747238159
    3. 'for' → logprob: -2.781414747238159
    4. '       ' → logprob: -4.406414985656738
    5. '   ' → logprob: -7.906414985656738
    6. '               ' → logprob: -11.156414985656738
    7. '	       ' → logprob: -11.531414985656738
    8. '        
' → logprob: -11.656414985656738
    9. '            
' → logprob: -11.656414985656738
    10. '	for' → logprob: -11.906414985656738

Token 528: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.13388703338569e-06
    2. ' for' → logprob: -12.000009536743164
    3. '           ' → logprob: -12.750009536743164
    4. '       ' → logprob: -18.875009536743164
    5. '   ' → logprob: -18.875009536743164
    6. '
' → logprob: -20.750009536743164
    7. '	for' → logprob: -21.500009536743164
    8. '            
' → logprob: -22.000009536743164
    9. '               ' → logprob: -22.125009536743164
    10. '```' → logprob: -22.250009536743164

Token 529: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.00015478975547011942
    2. 'i' → logprob: -9.250154495239258
    3. ' row' → logprob: -9.750154495239258
    4. 'r' → logprob: -15.750154495239258
    5. 'line' → logprob: -16.875154495239258
    6. ' i' → logprob: -17.125154495239258
    7. '	row' → logprob: -17.750154495239258
    8. 'x' → logprob: -18.750154495239258
    9. '(row' → logprob: -19.000154495239258
    10. '_row' → logprob: -19.500154495239258

Token 530: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026302501559257507
    2. 'in' → logprob: -3.6513025760650635
    3. '	in' → logprob: -13.901302337646484
    4. '=' → logprob: -15.776302337646484
    5. ' i' → logprob: -15.776302337646484
    6. ' ' → logprob: -15.776302337646484
    7. 'In' → logprob: -15.776302337646484
    8. '   ' → logprob: -16.151302337646484
    9. 'i' → logprob: -16.526302337646484
    10. '
' → logprob: -16.526302337646484

Token 531: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.746380237629637e-05
    2. ' range' → logprob: -9.875097274780273
    3. 're' → logprob: -10.000097274780273
    4. '   ' → logprob: -15.250097274780273
    5. ' reversed' → logprob: -15.875097274780273
    6. '
' → logprob: -16.375097274780273
    7. 'reverse' → logprob: -17.125097274780273
    8. '(range' → logprob: -17.625097274780273
    9. 'ran' → logprob: -17.750097274780273
    10. '

' → logprob: -17.875097274780273

Token 532: '(h' (ID: 8120)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0010779452277347445
    2. ' range' → logprob: -7.001078128814697
    3. '(range' → logprob: -9.251077651977539
    4. 're' → logprob: -9.626077651977539
    5. ' reversed' → logprob: -13.501077651977539
    6. 'h' → logprob: -13.751077651977539
    7. '   ' → logprob: -14.126077651977539
    8. '(re' → logprob: -14.751077651977539
    9. '(h' → logprob: -15.001077651977539
    10. '
' → logprob: -15.501077651977539

Token 533: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06569243222475052
    2. ' in' → logprob: -3.44069242477417
    3. ' -' → logprob: -3.56569242477417
    4. '):
' → logprob: -6.19069242477417
    5. 'in' → logprob: -7.56569242477417
    6. '[::-' → logprob: -8.565692901611328
    7. '   ' → logprob: -8.690692901611328
    8. '
' → logprob: -9.315692901611328
    9. ')' → logprob: -9.690692901611328
    10. '):' → logprob: -9.815692901611328

Token 534: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.125015258789062
    3. '
' → logprob: -15.500015258789062
    4. '2' → logprob: -15.750015258789062
    5. '   ' → logprob: -16.625015258789062
    6. 'range' → logprob: -16.750015258789062
    7. ',' → logprob: -17.625015258789062
    8. '-' → logprob: -17.750015258789062
    9. ' -' → logprob: -18.125015258789062
    10. '

' → logprob: -18.250015258789062

Token 535: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002668757690116763
    2. ',-' → logprob: -6.002668857574463
    3. ' ,' → logprob: -8.627668380737305
    4. ',row' → logprob: -12.502668380737305
    5. ' ,-' → logprob: -12.752668380737305
    6. ',
' → logprob: -13.127668380737305
    7. ',None' → logprob: -13.877668380737305
    8. 'dow' → logprob: -14.252668380737305
    9. ',column' → logprob: -14.877668380737305
    10. ',re' → logprob: -15.002668380737305

Token 536: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '
' → logprob: -18.625
    3. '```' → logprob: -19.0
    4. '2' → logprob: -19.75
    5. '   ' → logprob: -20.25
    6. ' ' → logprob: -20.5
    7. '

' → logprob: -20.5
    8. '１' → logprob: -21.125
    9. ' -' → logprob: -21.5
    10. '``' → logprob: -21.5

Token 537: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.014171031303703785
    2. ',' → logprob: -4.264171123504639
    3. '-' → logprob: -12.76417064666748
    4. '1' → logprob: -13.01417064666748
    5. ',
' → logprob: -14.38917064666748
    6. ' ,-' → logprob: -14.38917064666748
    7. ' ,' → logprob: -14.63917064666748
    8. ',:' → logprob: -15.76417064666748
    9. '   ' → logprob: -15.88917064666748
    10. '```' → logprob: -16.264171600341797

Token 538: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '   ' → logprob: -18.625
    4. '```' → logprob: -18.625
    5. '
' → logprob: -18.75
    6. '2' → logprob: -19.375
    7. '１' → logprob: -19.75
    8. '``' → logprob: -20.375
    9. '-' → logprob: -21.125
    10. '

' → logprob: -21.5625

Token 539: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11290845274925232
    2. '):' → logprob: -2.237908363342285
    3. ')' → logprob: -10.237908363342285
    4. '):
' → logprob: -10.237908363342285
    5. ':' → logprob: -11.862908363342285
    6. '):

' → logprob: -13.112908363342285
    7. ',' → logprob: -13.612908363342285
    8. ':
' → logprob: -13.862908363342285
    9. '   ' → logprob: -13.987908363342285
    10. ' ):
' → logprob: -14.237908363342285

Token 540: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018652843311429024
    2. ' if' → logprob: -4.01865291595459
    3. '           ' → logprob: -8.39365291595459
    4. 'if' → logprob: -9.01865291595459
    5. '	           ' → logprob: -9.89365291595459
    6. '```' → logprob: -11.14365291595459
    7. '<|end|>' → logprob: -11.26865291595459
    8. '   ' → logprob: -11.26865291595459
    9. '       ' → logprob: -11.51865291595459
    10. '                   ' → logprob: -11.64365291595459

Token 541: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3516266942024231
    2. '               ' → logprob: -1.3516266345977783
    3. 'if' (adapté à ' if') → logprob: -3.3516266345977783
    4. '                   ' → logprob: -5.976626873016357
    5. '                ' → logprob: -10.8516263961792
    6. ' cell' → logprob: -11.6016263961792
    7. '                
' → logprob: -11.8516263961792
    8. '           ' → logprob: -12.4766263961792
    9. '	if' → logprob: -12.4766263961792
    10. 'If' → logprob: -12.4766263961792

Token 542: ' field' (ID: 3259)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.018151935189962387
    2. ' field' → logprob: -4.018151760101318
    3. '[field' → logprob: -13.893152236938477
    4. '(field' → logprob: -14.643152236938477
    5. '	field' → logprob: -15.393152236938477
    6. '$field' → logprob: -15.768152236938477
    7. '.field' → logprob: -16.268152236938477
    8. '
' → logprob: -16.768152236938477
    9. 'feld' → logprob: -17.268152236938477
    10. ' ' → logprob: -17.518152236938477

Token 543: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -5.8961017202818766e-05
    2. '[col' → logprob: -9.750059127807617
    3. 'row' → logprob: -15.125059127807617
    4. '[' → logprob: -16.250059127807617
    5. '[i' → logprob: -16.375059127807617
    6. ' [' → logprob: -17.000059127807617
    7. '```' → logprob: -17.125059127807617
    8. '[field' → logprob: -18.000059127807617
    9. '[
' → logprob: -18.250059127807617
    10. '[column' → logprob: -18.375059127807617

Token 544: '][' (ID: 2696)
  Prédit: '[col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -0.12488661706447601
    2. '[row' → logprob: -2.3748865127563477
    3. '][' → logprob: -3.7498865127563477
    4. '[' → logprob: -7.124886512756348
    5. ')[' → logprob: -10.874886512756348
    6. '[column' → logprob: -12.124886512756348
    7. '
' → logprob: -12.249886512756348
    8. '}[' → logprob: -12.249886512756348
    9. '```' → logprob: -12.374886512756348
    10. ' [' → logprob: -12.499886512756348

Token 545: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -7.994086627149954e-05
    2. '[col' → logprob: -9.500080108642578
    3. ' col' → logprob: -12.750080108642578
    4. '][' → logprob: -13.125080108642578
    5. '	col' → logprob: -16.875080108642578
    6. '(col' → logprob: -17.125080108642578
    7. 'colm' → logprob: -17.375080108642578
    8. '
' → logprob: -17.875080108642578
    9. '```' → logprob: -17.875080108642578
    10. ',col' → logprob: -18.750080108642578

Token 546: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008051715791225433
    2. ']!=' → logprob: -4.883051872253418
    3. ']!='' → logprob: -7.758051872253418
    4. '!=' → logprob: -11.508051872253418
    5. '']' → logprob: -12.133051872253418
    6. '!='' → logprob: -14.008051872253418
    7. ' ]' → logprob: -14.133051872253418
    8. 'not' → logprob: -14.508051872253418
    9. ' !=' → logprob: -15.508051872253418
    10. ']!' → logprob: -15.633051872253418

Token 547: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.008725190535187721
    2. ']!=' → logprob: -5.258725166320801
    3. ' !=' → logprob: -6.383725166320801
    4. '!='' → logprob: -6.633725166320801
    5. 'not' → logprob: -8.8837251663208
    6. ']' → logprob: -9.0087251663208
    7. ']!='' → logprob: -9.2587251663208
    8. ')!=' → logprob: -9.5087251663208
    9. '()!=' → logprob: -10.5087251663208
    10. ' not' → logprob: -11.5087251663208

Token 548: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -5.080963092041202e-06
    2. ' '.'' → logprob: -12.750004768371582
    3. '"."' → logprob: -13.875004768371582
    4. ' '.' → logprob: -14.250004768371582
    5. '".' → logprob: -15.125004768371582
    6. '.' → logprob: -15.500004768371582
    7. '.'.' → logprob: -17.5000057220459
    8. ''' → logprob: -17.5000057220459
    9. '('.' → logprob: -17.7500057220459
    10. '('.')' → logprob: -18.3750057220459

Token 549: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.35987257957458496
    2. '):
' → logprob: -1.734872579574585
    3. '':
' → logprob: -2.609872579574585
    4. ':' → logprob: -4.234872817993164
    5. '                   ' → logprob: -4.359872817993164
    6. ' and' → logprob: -4.734872817993164
    7. ''):
' → logprob: -5.234872817993164
    8. 'stack' → logprob: -6.109872817993164
    9. 'and' → logprob: -6.359872817993164
    10. '':' → logprob: -6.484872817993164

Token 550: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1540951132774353
    2. 'stack' → logprob: -2.27909517288208
    3. ' stack' → logprob: -3.27909517288208
    4. '               ' → logprob: -6.40409517288208
    5. '           ' → logprob: -7.77909517288208
    6. '   ' → logprob: -8.154094696044922
    7. '                       ' → logprob: -8.654094696044922
    8. '	stack' → logprob: -9.029094696044922
    9. '       ' → logprob: -10.404094696044922
    10. '(stack' → logprob: -10.529094696044922

Token 551: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.03804171830415726
    2. ' stack' → logprob: -3.288041830062866
    3. '	stack' → logprob: -15.788042068481445
    4. '                   ' → logprob: -16.038042068481445
    5. '                       ' → logprob: -16.788042068481445
    6. '   ' → logprob: -17.913042068481445
    7. '.stack' → logprob: -18.913042068481445
    8. '_stack' → logprob: -19.038042068481445
    9. '               ' → logprob: -19.288042068481445
    10. '```' → logprob: -19.413042068481445

Token 552: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000431861262768507
    2. '.' → logprob: -7.750432014465332
    3. 'append' → logprob: -14.000432014465332
    4. '.app' → logprob: -15.750432014465332
    5. '.ap' → logprob: -16.750431060791016
    6. ' .' → logprob: -17.000431060791016
    7. '.insert' → logprob: -17.750431060791016
    8. '.push' → logprob: -17.750431060791016
    9. '].' → logprob: -18.250431060791016
    10. ').' → logprob: -18.500431060791016

Token 553: '(field' (ID: 29655)
  Prédit: '(field'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(field' → logprob: -2.339278580620885e-06
    2. 'field' → logprob: -13.250001907348633
    3. '(' → logprob: -14.500001907348633
    4. '(
' → logprob: -18.375001907348633
    5. ' field' → logprob: -19.250001907348633
    6. '[field' → logprob: -19.750001907348633
    7. '((' → logprob: -20.375001907348633
    8. ' (' → logprob: -20.500001907348633
    9. '(Field' → logprob: -20.875001907348633
    10. '$field' → logprob: -21.125001907348633

Token 554: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: 0.0
    2. 'row' → logprob: -17.5
    3. ')[' → logprob: -19.375
    4. '[' → logprob: -19.625
    5. ' [' → logprob: -19.625
    6. '
' → logprob: -19.625
    7. '[
' → logprob: -19.875
    8. '```' → logprob: -20.125
    9. '(row' → logprob: -20.75
    10. ',row' → logprob: -20.875

Token 555: '][' (ID: 2696)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.4743267297744751
    2. '][' → logprob: -0.9743267297744751
    3. '[col' → logprob: -9.724327087402344
    4. ']' → logprob: -9.849327087402344
    5. 'row' → logprob: -9.849327087402344
    6. '[' → logprob: -10.099327087402344
    7. '(row' → logprob: -11.224327087402344
    8. ' ][' → logprob: -11.974327087402344
    9. ',row' → logprob: -12.099327087402344
    10. '   ' → logprob: -12.724327087402344

Token 556: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -1.27099974633893e-05
    2. 'row' → logprob: -11.375012397766113
    3. ' col' → logprob: -14.000012397766113
    4. '[col' → logprob: -14.875012397766113
    5. '(col' → logprob: -18.25001335144043
    6. '	col' → logprob: -18.87501335144043
    7. '[row' → logprob: -19.62501335144043
    8. '
' → logprob: -19.62501335144043
    9. 'column' → logprob: -19.75001335144043
    10. 'colm' → logprob: -20.37501335144043

Token 557: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39077842235565186
    2. '])' → logprob: -1.1407784223556519
    3. ')
' → logprob: -5.640778541564941
    4. '])
' → logprob: -8.265778541564941
    5. ']' → logprob: -10.390778541564941
    6. ')]' → logprob: -10.640778541564941
    7. '))' → logprob: -11.515778541564941
    8. ' )' → logprob: -12.015778541564941
    9. ')])' → logprob: -12.015778541564941
    10. ''])' → logprob: -12.015778541564941

Token 558: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.123779058456421
    2. '            
' → logprob: -1.748779058456421
    3. '
' → logprob: -1.873779058456421
    4. '<|end|>' → logprob: -2.373779058456421
    5. '  
' → logprob: -2.623779058456421
    6. '        
' → logprob: -2.873779058456421
    7. ' 
' → logprob: -3.123779058456421
    8. '    
' → logprob: -3.248779058456421
    9. '\n' → logprob: -4.748779296875
    10. '       ' → logprob: -5.248779296875

Token 559: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5482984185218811
    2. 'row' → logprob: -1.4232983589172363
    3. ' for' → logprob: -1.7982983589172363
    4. '           ' → logprob: -5.673298358917236
    5. '            
' → logprob: -5.798298358917236
    6. 'idx' → logprob: -5.798298358917236
    7. '       ' → logprob: -6.173298358917236
    8. ' row' → logprob: -6.423298358917236
    9. '
' → logprob: -7.173298358917236
    10. '        
' → logprob: -7.548298358917236

Token 560: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.251963347196579
    2. ' row' → logprob: -1.5019633769989014
    3. ' i' → logprob: -11.00196361541748
    4. 'i' → logprob: -11.37696361541748
    5. 'r' → logprob: -12.87696361541748
    6. '	row' → logprob: -13.75196361541748
    7. '_row' → logprob: -13.75196361541748
    8. 'idx' → logprob: -14.50196361541748
    9. ' idx' → logprob: -14.75196361541748
    10. ' r' → logprob: -15.62696361541748

Token 561: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026306219398975372
    2. 'in' → logprob: -3.65130615234375
    3. 'h' → logprob: -12.77630615234375
    4. 'from' → logprob: -14.40130615234375
    5. 'In' → logprob: -14.77630615234375
    6. '
' → logprob: -14.90130615234375
    7. 'range' → logprob: -14.90130615234375
    8. '(h' → logprob: -15.02630615234375
    9. ' ' → logprob: -15.40130615234375
    10. '   ' → logprob: -15.52630615234375

Token 562: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06341727823019028
    2. ' range' → logprob: -2.8134171962738037
    3. '(h' → logprob: -7.063417434692383
    4. '(range' → logprob: -7.688417434692383
    5. 'h' → logprob: -8.938417434692383
    6. ' h' → logprob: -13.438417434692383
    7. 'ange' → logprob: -14.438417434692383
    8. ' (' → logprob: -15.063417434692383
    9. '[h' → logprob: -15.063417434692383
    10. '   ' → logprob: -15.313417434692383

Token 563: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -8.65707261255011e-06
    2. '(' → logprob: -12.000008583068848
    3. 'h' → logprob: -13.000008583068848
    4. ' (' → logprob: -16.375009536743164
    5. '0' → logprob: -17.000009536743164
    6. '(len' → logprob: -18.000009536743164
    7. '(H' → logprob: -18.125009536743164
    8. '12' → logprob: -18.250009536743164
    9. '(
' → logprob: -18.625009536743164
    10. '((' → logprob: -18.750009536743164

Token 564: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.65101717156358e-05
    2. ' -' → logprob: -9.250096321105957
    3. '1' → logprob: -15.375096321105957
    4. '):
' → logprob: -16.875097274780273
    5. ')-' → logprob: -17.875097274780273
    6. ')' → logprob: -18.250097274780273
    7. '(' → logprob: -18.375097274780273
    8. '–' → logprob: -18.625097274780273
    9. '   ' → logprob: -18.625097274780273
    10. '           ' → logprob: -18.625097274780273

Token 565: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2127087504486553e-05
    2. '2' → logprob: -11.500021934509277
    3. '-' → logprob: -12.500021934509277
    4. ' ' → logprob: -13.062521934509277
    5. 'range' → logprob: -13.062521934509277
    6. '
' → logprob: -14.000021934509277
    7. '   ' → logprob: -14.687521934509277
    8. '3' → logprob: -15.250021934509277
    9. '12' → logprob: -15.500021934509277
    10. '11' → logprob: -15.500021934509277

Token 566: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32854050397872925
    2. ',-' → logprob: -1.703540563583374
    3. ',row' → logprob: -2.328540563583374
    4. ' ,' → logprob: -7.828540325164795
    5. ' ,-' → logprob: -10.703540802001953
    6. ',col' → logprob: -10.828540802001953
    7. ',len' → logprob: -10.953540802001953
    8. ',in' → logprob: -11.203540802001953
    9. ',re' → logprob: -11.328540802001953
    10. ',None' → logprob: -11.953540802001953

Token 567: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2127087504486553e-05
    2. 'len' → logprob: -11.250021934509277
    3. '-' → logprob: -11.750021934509277
    4. '```' → logprob: -14.625021934509277
    5. 'row' → logprob: -15.125021934509277
    6. '(-' → logprob: -16.000022888183594
    7. '(len' → logprob: -16.375022888183594
    8. '(' → logprob: -16.500022888183594
    9. '
' → logprob: -16.625022888183594
    10. '0' → logprob: -16.875022888183594

Token 568: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.004639691673219204
    2. ',' → logprob: -5.379639625549316
    3. '-' → logprob: -11.754639625549316
    4. ' ,-' → logprob: -12.379639625549316
    5. ',row' → logprob: -13.004639625549316
    6. ',col' → logprob: -13.879639625549316
    7. ',-
' → logprob: -14.254639625549316
    8. ' ,' → logprob: -14.379639625549316
    9. '```' → logprob: -14.629639625549316
    10. ',None' → logprob: -14.629639625549316

Token 569: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -17.625
    3. '2' → logprob: -18.375
    4. '   ' → logprob: -18.625
    5. '``' → logprob: -19.375
    6. '-' → logprob: -19.75
    7. '0' → logprob: -20.125
    8. '           ' → logprob: -20.25
    9. ' ' → logprob: -20.25
    10. '               ' → logprob: -21.125

Token 570: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08392725139856339
    2. '):' → logprob: -2.9589271545410156
    3. ':' → logprob: -4.083927154541016
    4. ',' → logprob: -5.083927154541016
    5. ':
' → logprob: -5.458927154541016
    6. '   ' → logprob: -7.958927154541016
    7. ')' → logprob: -8.083927154541016
    8. '       ' → logprob: -8.458927154541016
    9. '):
' → logprob: -8.958927154541016
    10. '               ' → logprob: -9.708927154541016

Token 571: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15939100086688995
    2. '       ' → logprob: -2.284390926361084
    3. '<|end|>' → logprob: -3.659390926361084
    4. ':' → logprob: -5.034390926361084
    5. ' if' → logprob: -5.159390926361084
    6. ' field' → logprob: -6.159390926361084
    7. ',' → logprob: -6.534390926361084
    8. '                       ' → logprob: -7.284390926361084
    9. '[field' → logprob: -7.534390926361084
    10. '           ' → logprob: -7.909390926361084

Token 572: ' field' (ID: 3259)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.916644811630249
    2. ' if' → logprob: -0.916644811630249
    3. 'field' (adapté à ' field') → logprob: -1.791644811630249
    4. ' field' → logprob: -3.541644811630249
    5. '               ' → logprob: -6.041645050048828
    6. '                   ' → logprob: -6.541645050048828
    7. '[field' → logprob: -7.416645050048828
    8. '	field' → logprob: -10.291645050048828
    9. '$field' → logprob: -10.416645050048828
    10. '                       ' → logprob: -10.541645050048828

Token 573: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -1.4140441635390744e-05
    2. '[col' → logprob: -11.875014305114746
    3. '[' → logprob: -12.250014305114746
    4. '```' → logprob: -13.625014305114746
    5. '[line' → logprob: -15.125014305114746
    6. '\[' → logprob: -15.875014305114746
    7. '[cell' → logprob: -16.25001335144043
    8. '[column' → logprob: -16.37501335144043
    9. '][' → logprob: -16.62501335144043
    10. '[
' → logprob: -16.75001335144043

Token 574: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6364411115646362
    2. '[col' → logprob: -0.7614411115646362
    3. '[' → logprob: -5.761441230773926
    4. '[row' → logprob: -8.386441230773926
    5. '[column' → logprob: -9.386441230773926
    6. ',col' → logprob: -10.136441230773926
    7. ')[' → logprob: -10.261441230773926
    8. ']' → logprob: -10.261441230773926
    9. 'col' → logprob: -10.261441230773926
    10. ' ][' → logprob: -10.511441230773926

Token 575: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.00020425561524461955
    2. '[col' → logprob: -8.500204086303711
    3. ' col' → logprob: -14.750204086303711
    4. '	col' → logprob: -16.00020408630371
    5. 'colm' → logprob: -17.12520408630371
    6. ',col' → logprob: -17.25020408630371
    7. '(col' → logprob: -17.87520408630371
    8. 'cols' → logprob: -18.25020408630371
    9. '][' → logprob: -18.25020408630371
    10. 'colon' → logprob: -18.75020408630371

Token 576: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0619683600962162
    2. ' =' → logprob: -2.8119683265686035
    3. '=
' → logprob: -15.061968803405762
    4. '=

' → logprob: -15.436968803405762
    5. ')' → logprob: -16.311967849731445
    6. 'stack' → logprob: -17.061967849731445
    7. ']' → logprob: -17.186967849731445
    8. ']=' → logprob: -17.936967849731445
    9. '.' → logprob: -18.186967849731445
    10. ' =
' → logprob: -18.311967849731445

Token 577: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003178544342517853
    2. ' =' → logprob: -5.753178596496582
    3. '=
' → logprob: -14.753178596496582
    4. '=

' → logprob: -14.878178596496582
    5. '=(' → logprob: -18.128177642822266
    6. '=row' → logprob: -18.503177642822266
    7. '=None' → logprob: -18.753177642822266
    8. '=s' → logprob: -18.878177642822266
    9. '=user' → logprob: -19.003177642822266
    10. '=index' → logprob: -19.003177642822266

Token 578: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.43575048446655273
    2. ' stack' → logprob: -1.4357504844665527
    3. ''.' → logprob: -2.1857504844665527
    4. ''' → logprob: -6.935750484466553
    5. '(stack' → logprob: -6.935750484466553
    6. ' '.'' → logprob: -7.310750484466553
    7. ' '' → logprob: -8.935750961303711
    8. '	stack' → logprob: -10.435750961303711
    9. ' ' → logprob: -10.560750961303711
    10. ''s' → logprob: -10.810750961303711

Token 579: '[h' (ID: 88900)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.12840193510055542
    2. '[len' → logprob: -2.1284019947052
    3. 'pop' → logprob: -7.128401756286621
    4. '[-' → logprob: -7.878401756286621
    5. '[' → logprob: -8.628401756286621
    6. '[row' → logprob: -9.753401756286621
    7. '[col' → logprob: -11.128401756286621
    8. '[]' → logprob: -11.253401756286621
    9. '   ' → logprob: -12.503401756286621
    10. '[field' → logprob: -12.628401756286621

Token 580: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.060578834265470505
    2. 'row' → logprob: -4.1855788230896
    3. 'len' → logprob: -4.4355788230896
    4. ' -' → logprob: -4.5605788230896
    5. '1' → logprob: -4.8105788230896
    6. '(row' → logprob: -5.0605788230896
    7. '[row' → logprob: -5.9355788230896
    8. '-row' → logprob: -6.9355788230896
    9. ']' → logprob: -8.060579299926758
    10. ' ' → logprob: -8.060579299926758

Token 581: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0070938654243946075
    2. 'len' → logprob: -5.007093906402588
    3. ' ' → logprob: -8.63209342956543
    4. ' len' → logprob: -9.50709342956543
    5. 'row' → logprob: -9.63209342956543
    6. '   ' → logprob: -10.88209342956543
    7. '-' → logprob: -11.75709342956543
    8. '(len' → logprob: -12.38209342956543
    9. 'r' → logprob: -12.50709342956543
    10. '
' → logprob: -12.88209342956543

Token 582: ' -' (ID: 533)
  Prédit: '-row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-row' → logprob: -0.05049668252468109
    2. ' -' → logprob: -3.0504965782165527
    3. '-' → logprob: -6.550496578216553
    4. 'row' → logprob: -7.800496578216553
    5. ' if' → logprob: -10.800497055053711
    6. 'if' → logprob: -11.300497055053711
    7. ' row' → logprob: -11.800497055053711
    8. '(row' → logprob: -12.550497055053711
    9. '
' → logprob: -12.550497055053711
    10. '-if' → logprob: -12.800497055053711

Token 583: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0002043748099822551
    2. ' row' → logprob: -8.500204086303711
    3. '(row' → logprob: -14.000204086303711
    4. '	row' → logprob: -16.75020408630371
    5. ',row' → logprob: -18.25020408630371
    6. '=row' → logprob: -18.37520408630371
    7. ' ' → logprob: -18.50020408630371
    8. 'r' → logprob: -19.25020408630371
    9. '[row' → logprob: -19.37520408630371
    10. '$row' → logprob: -19.62520408630371

Token 584: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.35197997093200684
    2. ' if' → logprob: -1.6019799709320068
    3. 'if' → logprob: -2.351979970932007
    4. ' ]' → logprob: -11.601980209350586
    5. ']
' → logprob: -12.226980209350586
    6. '   ' → logprob: -12.351980209350586
    7. '	if' → logprob: -12.601980209350586
    8. ' ' → logprob: -13.726980209350586
    9. '-' → logprob: -13.976980209350586
    10. '```' → logprob: -14.476980209350586

Token 585: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.133523628115654
    2. '<|end|>' → logprob: -2.13352370262146
    3. 'if' → logprob: -5.133523464202881
    4. '<|end|>' → logprob: -7.633523464202881
    5. '	if' → logprob: -9.133523941040039
    6. '
' → logprob: -10.258523941040039
    7. ' or' → logprob: -11.258523941040039
    8. '       ' → logprob: -11.883523941040039
    9. ' ' → logprob: -12.758523941040039
    10. '               ' → logprob: -12.883523941040039

Token 586: ' h' (ID: 312)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.005286053754389286
    2. 'len' → logprob: -6.00528621673584
    3. ' row' → logprob: -6.00528621673584
    4. 'stack' → logprob: -8.63028621673584
    5. 'h' → logprob: -9.00528621673584
    6. ' len' → logprob: -10.75528621673584
    7. ' stack' → logprob: -11.25528621673584
    8. '(row' → logprob: -13.00528621673584
    9. ' h' → logprob: -13.25528621673584
    10. '	row' → logprob: -14.75528621673584

Token 587: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04215405136346817
    2. '>' → logprob: -3.41715407371521
    3. ' -' → logprob: -5.542153835296631
    4. '1' → logprob: -6.542153835296631
    5. '<len' → logprob: -6.542153835296631
    6. ' >' → logprob: -6.667153835296631
    7. '-l' → logprob: -9.417154312133789
    8. '>=' → logprob: -10.042154312133789
    9. 'len' → logprob: -10.167154312133789
    10. '<=' → logprob: -10.292154312133789

Token 588: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. 'len' → logprob: -11.37501335144043
    3. ' ' → logprob: -13.37501335144043
    4. ' len' → logprob: -16.12501335144043
    5. '-' → logprob: -16.37501335144043
    6. '   ' → logprob: -17.12501335144043
    7. '>' → logprob: -19.62501335144043
    8. '<len' → logprob: -19.75001335144043
    9. '(len' → logprob: -19.87501335144043
    10. '  ' → logprob: -19.87501335144043

Token 589: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5971791744232178
    2. ' -' → logprob: -1.4721791744232178
    3. '>=' → logprob: -1.5971791744232178
    4. ' >=' → logprob: -4.097179412841797
    5. '-row' → logprob: -6.847179412841797
    6. ']>=' → logprob: -10.597179412841797
    7. 'row' → logprob: -11.722179412841797
    8. ')>=' → logprob: -12.222179412841797
    9. '>' → logprob: -12.722179412841797
    10. '≥' → logprob: -13.222179412841797

Token 590: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.04858975484967232
    2. ' row' → logprob: -3.0485897064208984
    3. 'len' → logprob: -14.673589706420898
    4. '(row' → logprob: -14.673589706420898
    5. ',row' → logprob: -14.923589706420898
    6. '=row' → logprob: -15.048589706420898
    7. '	row' → logprob: -15.298589706420898
    8. '_row' → logprob: -15.673589706420898
    9. '-row' → logprob: -15.673589706420898
    10. ' ' → logprob: -16.0485897064209

Token 591: ' <' (ID: 464)
  Prédit: '<len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<len' → logprob: -0.16211864352226257
    2. '<' → logprob: -1.912118673324585
    3. ' <' → logprob: -6.287118434906006
    4. 'len' → logprob: -10.662118911743164
    5. '<size' → logprob: -12.037118911743164
    6. '<ll' → logprob: -14.162118911743164
    7. '<num' → logprob: -14.537118911743164
    8. ' len' → logprob: -14.662118911743164
    9. '<int' → logprob: -14.912118911743164
    10. '<n' → logprob: -15.287118911743164

Token 592: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0015023599844425917
    2. ' len' → logprob: -6.501502513885498
    3. '	len' → logprob: -19.501502990722656
    4. '(len' → logprob: -20.501502990722656
    5. '=len' → logprob: -20.501502990722656
    6. '   ' → logprob: -20.751502990722656
    7. '[len' → logprob: -21.626502990722656
    8. 'length' → logprob: -22.751502990722656
    9. ' ' → logprob: -23.626502990722656
    10. '<len' → logprob: -23.751502990722656

Token 593: '(stack' (ID: 52691)
  Prédit: '(stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stack' → logprob: -0.029756510630249977
    2. 'stack' → logprob: -3.529756546020508
    3. ' stack' → logprob: -12.029756546020508
    4. '	stack' → logprob: -16.779756546020508
    5. '(' → logprob: -17.154756546020508
    6. '(st' → logprob: -19.154756546020508
    7. '(
' → logprob: -19.654756546020508
    8. '(queue' → logprob: -20.279756546020508
    9. '_stack' → logprob: -20.279756546020508
    10. '.stack' → logprob: -21.029756546020508

Token 594: ')' (ID: 8)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.16195927560329437
    2. 'else' → logprob: -1.9119592905044556
    3. ']' → logprob: -6.786959171295166
    4. ')' → logprob: -7.411959171295166
    5. '	else' → logprob: -14.036959648132324
    6. ' ' → logprob: -16.286958694458008
    7. '}' → logprob: -16.411958694458008
    8. '           ' → logprob: -16.536958694458008
    9. '<|end|>' → logprob: -17.411958694458008
    10. '       ' → logprob: -17.411958694458008

Token 595: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.12692883610725403
    2. 'else' → logprob: -2.1269288063049316
    3. '	else' → logprob: -14.37692928314209
    4. ' ' → logprob: -17.126928329467773
    5. '        ' → logprob: -18.126928329467773
    6. '<|end|>' → logprob: -18.376928329467773
    7. ')' → logprob: -18.626928329467773
    8. '       ' → logprob: -19.501928329467773
    9. ' els' → logprob: -19.501928329467773
    10. '
' → logprob: -19.501928329467773

Token 596: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.00014239625306800008
    2. ' '.'' → logprob: -8.875142097473145
    3. '('.')' → logprob: -13.750142097473145
    4. '"."' → logprob: -14.250142097473145
    5. ''' → logprob: -14.500142097473145
    6. '.' → logprob: -15.750142097473145
    7. '".' → logprob: -16.62514305114746
    8. '   ' → logprob: -19.12514305114746
    9. ' '.' → logprob: -19.37514305114746
    10. ' '' → logprob: -19.37514305114746

Token 597: ''

' (ID: 7497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 598: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 599: ' Read' (ID: 5405)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 600: ' input' (ID: 3422)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5583974123001099
    2. ' =' → logprob: -1.6833974123001099
    3. ' lines' → logprob: -2.0583972930908203
    4. 'import' → logprob: -2.1833972930908203
    5. 'field' → logprob: -2.6833972930908203
    6. ' line' → logprob: -2.8083972930908203
    7. 'input' → logprob: -3.0583972930908203
    8. 'lines' → logprob: -3.3083972930908203
    9. 'line' → logprob: -3.5583972930908203
    10. ' field' → logprob: -4.05839729309082

Token 601: ' and' (ID: 326)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.011640455573797226
    2. '
' → logprob: -5.261640548706055
    3. 'for' → logprob: -5.261640548706055
    4. 'input' → logprob: -8.261640548706055
    5. 'data' → logprob: -8.636640548706055
    6. 'fields' → logprob: -8.636640548706055
    7. 'n' → logprob: -8.761640548706055
    8. 'import' → logprob: -9.261640548706055
    9. ' field' → logprob: -9.636640548706055
    10. '```' → logprob: -9.636640548706055

Token 602: ' process' (ID: 2273)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06837322562932968
    2. 'if' → logprob: -2.818373203277588
    3. 'field' → logprob: -5.568373203277588
    4. '
' → logprob: -6.943373203277588
    5. '```' → logprob: -7.068373203277588
    6. 'define' → logprob: -8.318373680114746
    7. 'solve' → logprob: -8.568373680114746
    8. ' field' → logprob: -8.818373680114746
    9. 'write' → logprob: -9.318373680114746
    10. ' if' → logprob: -10.693373680114746

Token 603: ' datasets' (ID: 57711)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.2120032161474228
    2. '
' → logprob: -1.712003231048584
    3. 'for' → logprob: -5.087003231048584
    4. 'if' → logprob: -6.212003231048584
    5. '```' → logprob: -6.712003231048584
    6. 'n' → logprob: -7.962003231048584
    7. '

' → logprob: -8.462002754211426
    8. 'import' → logprob: -8.712002754211426
    9. ' field' → logprob: -9.087002754211426
    10. '\n' → logprob: -9.712002754211426

Token 604: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7043901085853577
    2. 'for' → logprob: -0.7043901085853577
    3. 'if' → logprob: -4.954390048980713
    4. '```' → logprob: -6.704390048980713
    5. 'field' → logprob: -7.079390048980713
    6. ' for' → logprob: -7.329390048980713
    7. 'n' → logprob: -7.704390048980713
    8. 'def' → logprob: -8.079390525817871
    9. 'import' → logprob: -8.454390525817871
    10. '

' → logprob: -8.704390525817871

Token 605: 'input' (ID: 2586)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20312586426734924
    2. 'n' → logprob: -1.7031258344650269
    3. ' for' → logprob: -7.328125953674316
    4. 'if' → logprob: -7.828125953674316
    5. '```' → logprob: -8.453125953674316
    6. '
' → logprob: -8.953125953674316
    7. 'import' → logprob: -9.453125953674316
    8. 't' → logprob: -9.703125953674316
    9. 'data' → logprob: -9.828125953674316
    10. 'T' → logprob: -9.953125953674316

Token 606: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.41022324562072754
    2. '_line' → logprob: -1.6602232456207275
    3. '_lines' → logprob: -2.6602232456207275
    4. '_data' → logprob: -2.9102232456207275
    5. '_' → logprob: -4.410223007202148
    6. '=' → logprob: -5.410223007202148
    7. 's' → logprob: -6.285223007202148
    8. ' =' → logprob: -6.660223007202148
    9. '_text' → logprob: -7.535223007202148
    10. '_str' → logprob: -7.910223007202148

Token 607: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.06199469417333603
    2. ' sys' → logprob: -2.811994791030884
    3. 'input' → logprob: -10.811994552612305
    4. '	sys' → logprob: -12.936994552612305
    5. '=sys' → logprob: -13.061994552612305
    6. 'lambda' → logprob: -13.436994552612305
    7. '(sys' → logprob: -14.936994552612305
    8. ' input' → logprob: -15.311994552612305
    9. '```' → logprob: -16.186994552612305
    10. ' lambda' → logprob: -16.436994552612305

Token 608: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.006373328622430563
    2. '.' → logprob: -5.131373405456543
    3. '.readline' → logprob: -8.506373405456543
    4. 'stdin' → logprob: -8.881373405456543
    5. '.stdout' → logprob: -9.631373405456543
    6. '.std' → logprob: -10.756373405456543
    7. '.argv' → logprob: -11.756373405456543
    8. '.setdefault' → logprob: -12.881373405456543
    9. '(stdin' → logprob: -14.006373405456543
    10. '.exit' → logprob: -14.381373405456543

Token 609: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.06298431009054184
    2. 'read' → logprob: -2.8129842281341553
    3. 'buffer' → logprob: -7.187984466552734
    4. ' readline' → logprob: -9.312984466552734
    5. '_read' → logprob: -9.687984466552734
    6. '.readlines' → logprob: -10.187984466552734
    7. 'stdin' → logprob: -10.687984466552734
    8. 'readonly' → logprob: -11.312984466552734
    9. '_buffer' → logprob: -11.937984466552734
    10. '=' → logprob: -12.062984466552734

Token 610: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0390828512609005
    2. '()
' → logprob: -3.2890827655792236
    3. '()

' → logprob: -7.539083003997803
    4. '().' → logprob: -8.414082527160645
    5. '
' → logprob: -8.789082527160645
    6. '()\' → logprob: -9.914082527160645
    7. '(' → logprob: -11.039082527160645
    8. '<|end|>' → logprob: -11.164082527160645
    9. '()<' → logprob: -11.664082527160645
    10. '();' → logprob: -11.664082527160645

Token 611: 'T' (ID: 51)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08058415353298187
    2. 't' → logprob: -3.2055840492248535
    3. 'for' → logprob: -3.4555840492248535
    4. 'T' → logprob: -5.4555840492248535
    5. 'def' → logprob: -7.7055840492248535
    6. 'N' → logprob: -7.7055840492248535
    7. 'num' → logprob: -9.955584526062012
    8. ' for' → logprob: -10.455584526062012
    9. 'if' → logprob: -10.830584526062012
    10. 'field' → logprob: -10.955584526062012

Token 612: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5239211320877075
    2. ' =' → logprob: -0.8989211320877075
    3. ' ' → logprob: -7.648921012878418
    4. '=int' → logprob: -9.023921012878418
    5. '.' → logprob: -9.148921012878418
    6. '_' → logprob: -9.898921012878418
    7. '  ' → logprob: -11.523921012878418
    8. 'int' → logprob: -11.898921012878418
    9. 's' → logprob: -12.398921012878418
    10. ')' → logprob: -12.523921012878418

Token 613: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02975083328783512
    2. ' int' → logprob: -3.5297508239746094
    3. '1' → logprob: -16.15475082397461
    4. '[int' → logprob: -16.40475082397461
    5. ' ' → logprob: -16.77975082397461
    6. '(int' → logprob: -16.90475082397461
    7. '=int' → logprob: -17.15475082397461
    8. '10' → logprob: -17.27975082397461
    9. '<int' → logprob: -18.15475082397461
    10. '5' → logprob: -18.52975082397461

Token 614: '(input' (ID: 10054)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.28109338879585266
    2. '(input' → logprob: -1.5310933589935303
    3. '(' → logprob: -3.6560933589935303
    4. 'input' → logprob: -5.906093597412109
    5. '(sys' → logprob: -9.53109359741211
    6. '('' → logprob: -10.78109359741211
    7. '()\' → logprob: -10.90609359741211
    8. '()
' → logprob: -11.03109359741211
    9. ' ()' → logprob: -11.03109359741211
    10. '().' → logprob: -11.65609359741211

Token 615: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10392168909311295
    2. '()' → logprob: -2.35392165184021
    3. '().' → logprob: -5.603921890258789
    4. '())
' → logprob: -11.353921890258789
    5. ' ())' → logprob: -12.228921890258789
    6. '()
' → logprob: -12.603921890258789
    7. '(' → logprob: -12.978921890258789
    8. ')' → logprob: -14.353921890258789
    9. '();)' → logprob: -14.353921890258789
    10. '()]' → logprob: -14.478921890258789

Token 616: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005275141913443804
    2. '
' → logprob: -5.380275249481201
    3. ' for' → logprob: -7.630275249481201
    4. 'field' → logprob: -8.755274772644043
    5. 'while' → logprob: -12.755274772644043
    6. '<|end|>' → logprob: -12.755274772644043
    7. '```' → logprob: -13.380274772644043
    8. 'fields' → logprob: -13.755274772644043
    9. ' 
' → logprob: -14.130274772644043
    10. '\n' → logprob: -14.630274772644043

Token 617: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04858941584825516
    2. ' _' → logprob: -3.0485894680023193
    3. '_case' → logprob: -14.048589706420898
    4. '_tc' → logprob: -14.673589706420898
    5. ' t' → logprob: -15.298589706420898
    6. ' ' → logprob: -15.673589706420898
    7. ' tc' → logprob: -15.673589706420898
    8. 'case' → logprob: -16.2985897064209
    9. '_t' → logprob: -16.4235897064209
    10. ' case' → logprob: -16.6735897064209

Token 618: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2909910976886749
    2. 'range' → logprob: -1.5409910678863525
    3. '_' → logprob: -3.2909910678863525
    4. ' in' → logprob: -7.040991306304932
    5. ' _' → logprob: -8.915990829467773
    6. 'in' → logprob: -9.540990829467773
    7. '_range' → logprob: -12.290990829467773
    8. ' ' → logprob: -13.040990829467773
    9. '	range' → logprob: -13.540990829467773
    10. 'r' → logprob: -14.540990829467773

Token 619: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.836499985889532e-05
    2. ' range' → logprob: -9.7500581741333
    3. '(range' → logprob: -20.125059127807617
    4. '	range' → logprob: -21.375059127807617
    5. 'r' → logprob: -21.625059127807617
    6. 'ange' → logprob: -21.750059127807617
    7. 'rang' → logprob: -22.250059127807617
    8. '_' → logprob: -22.375059127807617
    9. 'T' → logprob: -22.500059127807617
    10. 'input' → logprob: -23.000059127807617

Token 620: '(T' (ID: 7014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5785447359085083
    2. '(T' → logprob: -0.9535447359085083
    3. ' (' → logprob: -2.9535446166992188
    4. ' T' → logprob: -7.703544616699219
    5. '(int' → logprob: -7.703544616699219
    6. '()' → logprob: -7.953544616699219
    7. '(range' → logprob: -8.453544616699219
    8. '(
' → logprob: -9.203544616699219
    9. 'T' → logprob: -9.453544616699219
    10. '(input' → logprob: -9.828544616699219

Token 621: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2462918907403946
    2. '):
' → logprob: -1.9962918758392334
    3. '():' → logprob: -3.4962918758392334
    4. ':' → logprob: -3.7462918758392334
    5. '():
' → logprob: -3.7462918758392334
    6. ':
' → logprob: -5.7462921142578125
    7. ',' → logprob: -6.7462921142578125
    8. '   ' → logprob: -7.9962921142578125
    9. '()' → logprob: -9.996292114257812
    10. ')' → logprob: -10.121292114257812

Token 622: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07904819399118423
    2. 'field' → logprob: -2.5790481567382812
    3. '	field' → logprob: -9.204048156738281
    4. ' field' → logprob: -10.579048156738281
    5. '```' → logprob: -10.579048156738281
    6. '   ' → logprob: -13.329048156738281
    7. 'fields' → logprob: -13.704048156738281
    8. '_field' → logprob: -13.954048156738281
    9. '[field' → logprob: -14.329048156738281
    10. '(field' → logprob: -14.704048156738281

Token 623: ' field' (ID: 3259)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' (adapté à ' field') → logprob: -5.145118848304264e-05
    2. ' field' → logprob: -11.000051498413086
    3. '   ' → logprob: -11.375051498413086
    4. '_field' → logprob: -11.625051498413086
    5. 'board' → logprob: -12.250051498413086
    6. 'grid' → logprob: -12.625051498413086
    7. '_' → logprob: -13.375051498413086
    8. '    
' → logprob: -13.750051498413086
    9. '
' → logprob: -14.000051498413086
    10. 'f' → logprob: -14.375051498413086

Token 624: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38691458106040955
    2. ' =' → logprob: -1.136914610862732
    3. '=[]' → logprob: -10.136914253234863
    4. '=[' → logprob: -13.636914253234863
    5. '[:]' → logprob: -14.386914253234863
    6. '[]' → logprob: -14.636914253234863
    7. ' =[' → logprob: -14.636914253234863
    8. '=[]
' → logprob: -14.761914253234863
    9. '[' → logprob: -15.136914253234863
    10. '   ' → logprob: -15.761914253234863

Token 625: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.40522733330726624
    2. '[input' → logprob: -1.4052273035049438
    3. '[field' → logprob: -2.9052274227142334
    4. '[line' → logprob: -4.280227184295654
    5. '[row' → logprob: -5.030227184295654
    6. '[list' → logprob: -5.530227184295654
    7. '[array' → logprob: -6.155227184295654
    8. '[df' → logprob: -7.155227184295654
    9. '[item' → logprob: -7.155227184295654
    10. '[str' → logprob: -7.280227184295654

Token 626: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.723352049040841e-06
    2. '[list' → logprob: -12.500004768371582
    3. ' list' → logprob: -14.000004768371582
    4. 'input' → logprob: -16.625003814697266
    5. '[' → logprob: -17.250003814697266
    6. '(list' → logprob: -18.375003814697266
    7. '[input' → logprob: -18.500003814697266
    8. '	list' → logprob: -19.875003814697266
    9. '=list' → logprob: -20.875003814697266
    10. '.list' → logprob: -21.250003814697266

Token 627: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.735893965815194e-05
    2. 'input' → logprob: -11.000017166137695
    3. '(map' → logprob: -15.250017166137695
    4. '(str' → logprob: -15.250017166137695
    5. '(' → logprob: -16.875017166137695
    6. '(list' → logprob: -17.625017166137695
    7. '=input' → logprob: -18.000017166137695
    8. ',input' → logprob: -19.125017166137695
    9. ' input' → logprob: -19.250017166137695
    10. '(sys' → logprob: -19.625017166137695

Token 628: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.047134305234067e-05
    2. '())' → logprob: -10.500030517578125
    3. '()' → logprob: -12.750030517578125
    4. ' ().' → logprob: -17.625030517578125
    5. '()
' → logprob: -18.250030517578125
    6. '(' → logprob: -19.000030517578125
    7. '()]' → logprob: -19.500030517578125
    8. '.strip' → logprob: -19.625030517578125
    9. '(strip' → logprob: -19.750030517578125
    10. 'strip' → logprob: -19.875030517578125

Token 629: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.023245826363563538
    2. 'rstrip' → logprob: -3.7732458114624023
    3. ' strip' → logprob: -15.398245811462402
    4. '(strip' → logprob: -17.52324676513672
    5. 'r' → logprob: -17.64824676513672
    6. '.strip' → logprob: -17.77324676513672
    7. '_strip' → logprob: -18.77324676513672
    8. '.rstrip' → logprob: -18.89824676513672
    9. 'str' → logprob: -20.27324676513672
    10. '-strip' → logprob: -20.39824676513672

Token 630: '('\' (ID: 24345)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0007372042746283114
    2. '('\' → logprob: -7.250737190246582
    3. '())
' → logprob: -11.500737190246582
    4. '()' → logprob: -11.500737190246582
    5. '()))' → logprob: -12.625737190246582
    6. '()\' → logprob: -13.000737190246582
    7. ')' → logprob: -14.125737190246582
    8. '("\' → logprob: -15.000737190246582
    9. '()]' → logprob: -16.0007381439209
    10. ' ())' → logprob: -16.8757381439209

Token 631: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.5491004129871726e-05
    2. '\n' → logprob: -10.000045776367188
    3. '
' → logprob: -18.375045776367188
    4. 'r' → logprob: -19.500045776367188
    5. 'newline' → logprob: -20.000045776367188
    6. ''\' → logprob: -20.625045776367188
    7. ')\' → logprob: -20.750045776367188
    8. '``' → logprob: -20.750045776367188
    9. ' n' → logprob: -20.875045776367188
    10. ')' → logprob: -21.250045776367188

Token 632: ''))' (ID: 7974)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02147318795323372
    2. ''))' → logprob: -4.021473407745361
    3. '()))' → logprob: -5.771473407745361
    4. ')' → logprob: -9.771472930908203
    5. ').' → logprob: -9.896472930908203
    6. '"))' → logprob: -10.271472930908203
    7. '()' → logprob: -11.146472930908203
    8. ')))' → logprob: -11.271472930908203
    9. '('\' → logprob: -12.396472930908203
    10. ''\' → logprob: -12.521472930908203

Token 633: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.049673616886138916
    2. '   ' → logprob: -3.549673557281494
    3. 'for' → logprob: -4.299673557281494
    4. ')' → logprob: -5.799673557281494
    5. '	for' → logprob: -6.424673557281494
    6. '<|end|>' → logprob: -6.799673557281494
    7. '()' → logprob: -8.549674034118652
    8. ']' → logprob: -9.924674034118652
    9. '
' → logprob: -10.299674034118652
    10. '[:]' → logprob: -10.549674034118652

Token 634: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00560166547074914
    2. ' range' → logprob: -5.50560188293457
    3. 'range' → logprob: -6.63060188293457
    4. ' _' → logprob: -9.13060188293457
    5. '_range' → logprob: -9.50560188293457
    6. '__' → logprob: -11.38060188293457
    7. '_=' → logprob: -13.25560188293457
    8. '(range' → logprob: -13.50560188293457
    9. '_in' → logprob: -13.63060188293457
    10. '	range' → logprob: -14.88060188293457

Token 635: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004110696725547314
    2. ' range' → logprob: -5.754110813140869
    3. 'in' → logprob: -7.004110813140869
    4. ' in' → logprob: -11.504110336303711
    5. '6' → logprob: -12.004110336303711
    6. '12' → logprob: -12.754110336303711
    7. '_' → logprob: -12.879110336303711
    8. '_range' → logprob: -14.254110336303711
    9. '(range' → logprob: -14.754110336303711
    10. '	range' → logprob: -14.754110336303711

Token 636: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.5491004129871726e-05
    2. ' range' → logprob: -10.000045776367188
    3. '[' → logprob: -17.875045776367188
    4. '(range' → logprob: -18.000045776367188
    5. '6' → logprob: -20.625045776367188
    6. '	range' → logprob: -21.250045776367188
    7. '(' → logprob: -21.875045776367188
    8. 'r' → logprob: -22.125045776367188
    9. '   ' → logprob: -22.875045776367188
    10. '
' → logprob: -23.250045776367188

Token 637: '(' (ID: 7)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.34470242261886597
    2. '(' → logprob: -1.3447024822235107
    3. 'h' → logprob: -3.5947024822235107
    4. '6' → logprob: -6.219702243804932
    5. '(h' → logprob: -6.844702243804932
    6. 'range' → logprob: -7.844702243804932
    7. ' ' → logprob: -10.96970272064209
    8. '[h' → logprob: -12.09470272064209
    9. ' range' → logprob: -12.21970272064209
    10. '[' → logprob: -12.34470272064209

Token 638: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.00026050140149891376
    2. 'h' → logprob: -8.375260353088379
    3. '6' → logprob: -10.500260353088379
    4. '(' → logprob: -13.625260353088379
    5. ' ' → logprob: -14.625260353088379
    6. '0' → logprob: -15.750260353088379
    7. '(h' → logprob: -16.375261306762695
    8. '11' → logprob: -16.687761306762695
    9. '```' → logprob: -16.812761306762695
    10. '   ' → logprob: -16.937761306762695

Token 639: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00012678056373260915
    2. ')' → logprob: -9.000126838684082
    3. ']' → logprob: -12.750126838684082
    4. ' )' → logprob: -15.750126838684082
    5. ')]
' → logprob: -16.000125885009766
    6. '   ' → logprob: -16.500125885009766
    7. '))' → logprob: -17.750125885009766
    8. ')][' → logprob: -18.000125885009766
    9. ')}' → logprob: -18.125125885009766
    10. '')]' → logprob: -18.375125885009766

Token 640: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03497912362217903
    2. '   ' → logprob: -3.4099791049957275
    3. 'result' → logprob: -7.034979343414307
    4. 'solve' → logprob: -8.534978866577148
    5. '```' → logprob: -9.159978866577148
    6. ' print' → logprob: -9.909978866577148
    7. '
' → logprob: -10.409978866577148
    8. '    
' → logprob: -11.159978866577148
    9. 'answer' → logprob: -11.159978866577148
    10. '<|end|>' → logprob: -11.159978866577148

Token 641: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006849523168057203
    2. 'result' → logprob: -5.00684928894043
    3. 'res' → logprob: -9.25684928894043
    4. '   ' → logprob: -11.38184928894043
    5. 'ans' → logprob: -11.38184928894043
    6. 'answer' → logprob: -11.38184928894043
    7. '```' → logprob: -13.88184928894043
    8. '    
' → logprob: -14.00684928894043
    9. ' print' → logprob: -14.13184928894043
    10. 'pr' → logprob: -14.25684928894043

Token 642: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -6.742448022123426e-05
    2. '(' → logprob: -9.625067710876465
    3. 'solve' → logprob: -13.875067710876465
    4. '(sol' → logprob: -16.12506675720215
    5. '(solution' → logprob: -16.75006675720215
    6. '()' → logprob: -16.75006675720215
    7. '(
' → logprob: -17.12506675720215
    8. '(f' → logprob: -17.62506675720215
    9. 's' → logprob: -17.75006675720215
    10. '((' → logprob: -18.25006675720215

Token 643: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -5.512236498361744e-07
    2. 'solve' → logprob: -14.500000953674316
    3. 'ol' → logprob: -18.5
    4. 'olv' → logprob: -18.75
    5. 'ove' → logprob: -19.25
    6. 'olver' → logprob: -19.5
    7. 'OLVE' → logprob: -19.75
    8. 'erve' → logprob: -20.5
    9. 'olved' → logprob: -21.375
    10. 't' → logprob: -22.125

Token 644: '(field' (ID: 29655)
  Prédit: '(field'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(field' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -14.125000953674316
    3. ' (' → logprob: -15.375000953674316
    4. ')(' → logprob: -15.500000953674316
    5. ')' → logprob: -16.500001907348633
    6. 'field' → logprob: -16.625001907348633
    7. '(fields' → logprob: -17.625001907348633
    8. '[field' → logprob: -17.750001907348633
    9. '(Field' → logprob: -18.250001907348633
    10. '$field' → logprob: -19.750001907348633

Token 645: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4741087555885315
    2. '))' → logprob: -0.9741087555885315
    3. '())' → logprob: -10.599108695983887
    4. ')))' → logprob: -12.724108695983887
    5. '()' → logprob: -14.224108695983887
    6. '()))' → logprob: -14.224108695983887
    7. '(' → logprob: -14.349108695983887
    8. '(field' → logprob: -14.724108695983887
    9. ' )' → logprob: -15.099108695983887
    10. ')`' → logprob: -15.099108695983887


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 643
Tokens correctement prédits (1ère position, stricte): 313
Tokens correctement prédits (1ère position, avec adaptation): 334
Tokens correctement prédits (top 10): 569
Précision stricte (1ère position): 48.68%
Précision adaptée (1ère position): 51.94%
Précision (top 10): 88.49%
================================================================================
