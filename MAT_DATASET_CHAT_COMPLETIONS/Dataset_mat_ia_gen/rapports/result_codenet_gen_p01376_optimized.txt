================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
M, N = map(int, input().split())
max_solved = 0
for _ in range(M):
    solved = sum(map(int, input().split()))
    if solved > max_solved:
        max_solved = solved
print(max_solved)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'M' (ID: 44)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' N' (ID: 478)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.713621973991394
    2. '=' → logprob: -0.713621973991394
    3. ' =' → logprob: -4.838622093200684
    4. ';' → logprob: -6.088622093200684
    5. '*' → logprob: -6.213622093200684
    6. '[' → logprob: -6.338622093200684
    7. '.' → logprob: -6.338622093200684
    8. ')' → logprob: -6.588622093200684
    9. '```' → logprob: -6.963622093200684
    10. '+' → logprob: -7.713622093200684

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03266443312168121
    2. '10' → logprob: -3.6576645374298096
    3. '32' → logprob: -6.7826642990112305
    4. ' map' → logprob: -7.0326642990112305
    5. '0' → logprob: -7.4076642990112305
    6. '"' → logprob: -7.5326642990112305
    7. 'range' → logprob: -7.5326642990112305
    8. 'map' → logprob: -8.03266429901123
    9. ' M' → logprob: -8.15766429901123
    10. '20' → logprob: -8.15766429901123

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10556171089410782
    2. '(int' → logprob: -2.8555617332458496
    3. '(lambda' → logprob: -3.6055617332458496
    4. '(str' → logprob: -4.60556173324585
    5. '(input' → logprob: -5.85556173324585
    6. '```' → logprob: -6.73056173324585
    7. '<|end|>' → logprob: -8.105561256408691
    8. '(user' → logprob: -8.480561256408691
    9. '(eval' → logprob: -9.105561256408691
    10. '(len' → logprob: -9.230561256408691

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08726266771554947
    2. ')' → logprob: -3.0872626304626465
    3. 'input' → logprob: -3.3372626304626465
    4. ' input' → logprob: -7.3372626304626465
    5. ',input' → logprob: -7.7122626304626465
    6. ',' → logprob: -7.9622626304626465
    7. '(' → logprob: -7.9622626304626465
    8. '<input' → logprob: -8.462263107299805
    9. '```' → logprob: -8.712263107299805
    10. '=input' → logprob: -9.212263107299805

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12696495652198792
    2. ' input' → logprob: -2.126965045928955
    3. ')' → logprob: -10.626964569091797
    4. '(input' → logprob: -11.501964569091797
    5. ',input' → logprob: -13.376964569091797
    6. ' )' → logprob: -15.001964569091797
    7. '=input' → logprob: -15.501964569091797
    8. '<input' → logprob: -15.751964569091797
    9. '```' → logprob: -16.251964569091797
    10. '[input' → logprob: -16.876964569091797

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.807976245880127
    2. '()' → logprob: -1.682976245880127
    3. '('' → logprob: -1.682976245880127
    4. '(' → logprob: -2.682976245880127
    5. '(""))' → logprob: -3.432976245880127
    6. ')' → logprob: -3.682976245880127
    7. '(()' → logprob: -4.432976245880127
    8. '("")' → logprob: -4.807976245880127
    9. '());' → logprob: -5.057976245880127
    10. '`()' → logprob: -5.557976245880127

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0012210593558847904
    2. 'strip' → logprob: -6.876221179962158
    3. ')' → logprob: -8.751220703125
    4. 'rstrip' → logprob: -11.376220703125
    5. 'read' → logprob: -11.501220703125
    6. ' split' → logprob: -12.001220703125
    7. '(split' → logprob: -14.001220703125
    8. 'replace' → logprob: -15.126220703125
    9. 'startswith' → logprob: -15.376220703125
    10. 'spl' → logprob: -15.376220703125

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3036268651485443
    2. '())' → logprob: -1.4286268949508667
    3. '))' → logprob: -3.928626775741577
    4. '()' → logprob: -6.678627014160156
    5. '()))' → logprob: -7.053627014160156
    6. '`)' → logprob: -8.428627014160156
    7. '(' → logprob: -9.303627014160156
    8. '>)' → logprob: -10.928627014160156
    9. '```' → logprob: -11.053627014160156
    10. ')))' → logprob: -11.428627014160156

Token 11: 'max' (ID: 3228)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9005579948425293
    2. 'for' → logprob: -1.7755579948425293
    3. 'x' → logprob: -2.4005579948425293
    4. ' ' → logprob: -2.7755579948425293
    5. ',' → logprob: -2.7755579948425293
    6. 'a' → logprob: -3.0255579948425293
    7. '`' → logprob: -3.5255579948425293
    8. '```' → logprob: -4.025557994842529
    9. '\n' → logprob: -4.400557994842529
    10. '[' → logprob: -4.525557994842529

Token 12: '_s' (ID: 1278)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.022557014599442482
    2. '_length' → logprob: -4.647556781768799
    3. '_len' → logprob: -5.147556781768799
    4. '_value' → logprob: -6.272556781768799
    5. '_val' → logprob: -6.397556781768799
    6. '(' → logprob: -6.647556781768799
    7. '_size' → logprob: -7.147556781768799
    8. '_depth' → logprob: -7.772556781768799
    9. '_)' → logprob: -8.272557258605957
    10. '_count' → logprob: -9.522557258605957

Token 13: 'olved' (ID: 30145)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.24460157752037048
    2. 'ize' → logprob: -1.9946016073226929
    3. '_' → logprob: -2.8696014881134033
    4. 'uffix' → logprob: -4.369601726531982
    5. 'core' → logprob: -5.369601726531982
    6. 'ub' → logprob: -5.619601726531982
    7. 'u' → logprob: -7.119601726531982
    8. 'uf' → logprob: -7.244601726531982
    9. '=' → logprob: -7.869601726531982
    10. '_um' → logprob: -8.494601249694824

Token 14: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13824328780174255
    2. ' =' → logprob: -2.1382431983947754
    3. '=' → logprob: -4.638243198394775
    4. '_=' → logprob: -7.763243198394775
    5. '_space' → logprob: -8.013243675231934
    6. '_count' → logprob: -8.138243675231934
    7. ' ' → logprob: -9.263243675231934
    8. ' _' → logprob: -9.263243675231934
    9. 'space' → logprob: -10.763243675231934
    10. ',' → logprob: -10.888243675231934

Token 15: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6329089999198914
    2. ' ' → logprob: -0.7579089999198914
    3. '-' → logprob: -9.507908821105957
    4. 'max' → logprob: -9.882908821105957
    5. ' -' → logprob: -9.882908821105957
    6. ' max' → logprob: -10.132908821105957
    7. ' M' → logprob: -10.382908821105957
    8. ' [' → logprob: -11.132908821105957
    9. 'int' → logprob: -11.882908821105957
    10. '[' → logprob: -11.882908821105957

Token 16: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004327095113694668
    2. '-' → logprob: -5.879327297210693
    3. ' ' → logprob: -7.504327297210693
    4. 'M' → logprob: -8.004326820373535
    5. 'max' → logprob: -8.629326820373535
    6. '[' → logprob: -9.004326820373535
    7. 'int' → logprob: -9.504326820373535
    8. 'float' → logprob: -9.754326820373535
    9. '[M' → logprob: -9.754326820373535
    10. 'set' → logprob: -10.754326820373535

Token 17: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21230733394622803
    2. '
' → logprob: -2.2123074531555176
    3. '<|end|>' → logprob: -3.0873074531555176
    4. ' for' → logprob: -4.587307453155518
    5. '```' → logprob: -4.712307453155518
    6. '\n' → logprob: -5.087307453155518
    7. '\' → logprob: -5.212307453155518
    8. 'max' → logprob: -6.212307453155518
    9. ' 
' → logprob: -7.462307453155518
    10. ' ' → logprob: -7.712307453155518

Token 18: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004587903094943613
    2. ' for' → logprob: -7.875458717346191
    3. '```' → logprob: -10.125458717346191
    4. ',' → logprob: -11.250458717346191
    5. '\n' → logprob: -12.125458717346191
    6. '\' → logprob: -12.375458717346191
    7. '<|end|>' → logprob: -12.875458717346191
    8. 'max' → logprob: -13.000458717346191
    9. '`' → logprob: -13.250458717346191
    10. 'f' → logprob: -13.375458717346191

Token 19: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.49042654037475586
    2. ' ' → logprob: -1.4904265403747559
    3. '_' → logprob: -1.9904265403747559
    4. ' _' → logprob: -3.740426540374756
    5. ' problem' → logprob: -7.615426540374756
    6. ' user' → logprob: -7.865426540374756
    7. ' student' → logprob: -8.115427017211914
    8. 'i' → logprob: -8.240427017211914
    9. '  ' → logprob: -9.115427017211914
    10. ' ‌' → logprob: -9.115427017211914

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.43317925930023193
    2. 'in' → logprob: -1.058179259300232
    3. ' ' → logprob: -5.6831793785095215
    4. 'i' → logprob: -7.1831793785095215
    5. ' i' → logprob: -8.808178901672363
    6. 'n' → logprob: -9.933178901672363
    7. '  ' → logprob: -10.808178901672363
    8. ' _' → logprob: -10.933178901672363
    9. '_' → logprob: -11.433178901672363
    10. '```' → logprob: -11.433178901672363

Token 21: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740819036960602
    2. ' range' → logprob: -0.9740818738937378
    3. '(range' → logprob: -13.724081993103027
    4. '	range' → logprob: -14.224081993103027
    5. '```' → logprob: -14.349081993103027
    6. '_range' → logprob: -14.599081993103027
    7. 'Range' → logprob: -15.224081993103027
    8. 'rang' → logprob: -15.474081993103027
    9. 'N' → logprob: -15.599081993103027
    10. 'M' → logprob: -15.724081993103027

Token 22: '(M' (ID: 6103)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16288965940475464
    2. '(M' → logprob: -1.9128897190093994
    3. ' (' → logprob: -6.53788948059082
    4. '(range' → logprob: -7.03788948059082
    5. '(N' → logprob: -8.28788948059082
    6. '(int' → logprob: -10.66288948059082
    7. '(len' → logprob: -11.28788948059082
    8. ' M' → logprob: -11.41288948059082
    9. ' range' → logprob: -11.78788948059082
    10. 'range' → logprob: -11.91288948059082

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00202880403958261
    2. ')' → logprob: -6.627028942108154
    3. '+' → logprob: -8.002028465270996
    4. ':' → logprob: -8.252028465270996
    5. ' ):' → logprob: -9.752028465270996
    6. '):
' → logprob: -10.377028465270996
    7. '+:' → logprob: -12.502028465270996
    8. ',' → logprob: -12.502028465270996
    9. '>' → logprob: -13.502028465270996
    10. '```' → logprob: -13.752028465270996

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07932748645544052
    2. ' solved' → logprob: -3.0793275833129883
    3. ' line' → logprob: -4.454327583312988
    4. '    ' → logprob: -4.954327583312988
    5. ' student' → logprob: -5.954327583312988
    6. '    
' → logprob: -6.454327583312988
    7. ' user' → logprob: -6.454327583312988
    8. ' problem' → logprob: -7.329327583312988
    9. ' score' → logprob: -7.579327583312988
    10. ' ' → logprob: -7.704327583312988

Token 25: ' solved' (ID: 47244)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3150797188282013
    2. ' solved' → logprob: -1.815079689025879
    3. 's' → logprob: -4.315079689025879
    4. 'sol' → logprob: -4.440079689025879
    5. 'score' → logprob: -4.565079689025879
    6. ' problems' → logprob: -4.565079689025879
    7. 'scores' → logprob: -4.690079689025879
    8. ' scores' → logprob: -4.940079689025879
    9. ' score' → logprob: -5.315079689025879
    10. ' s' → logprob: -5.440079689025879

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4186629354953766
    2. '_count' → logprob: -1.5436629056930542
    3. '_' → logprob: -2.4186630249023438
    4. '=' → logprob: -4.668663024902344
    5. '_s' → logprob: -5.043663024902344
    6. '_scores' → logprob: -5.293663024902344
    7. '_points' → logprob: -5.668663024902344
    8. ' +=' → logprob: -5.793663024902344
    9. '_counts' → logprob: -6.043663024902344
    10. ' ' → logprob: -6.293663024902344

Token 27: ' sum' (ID: 4215)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8213343620300293
    2. ' int' → logprob: -0.9463343620300293
    3. '0' → logprob: -1.8213343620300293
    4. ' ' → logprob: -5.196334362030029
    5. ' list' → logprob: -6.196334362030029
    6. ' map' → logprob: -6.696334362030029
    7. 'list' → logprob: -7.196334362030029
    8. 'map' → logprob: -8.696334838867188
    9. ' sum' → logprob: -8.821334838867188
    10. 'sum' → logprob: -9.446334838867188

Token 28: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5817601084709167
    2. '(int' → logprob: -1.0817601680755615
    3. '(list' → logprob: -3.0817601680755615
    4. '(map' → logprob: -3.0817601680755615
    5. '(input' → logprob: -5.206759929656982
    6. '([' → logprob: -5.581759929656982
    7. '((' → logprob: -7.456759929656982
    8. '(i' → logprob: -9.70676040649414
    9. '(eval' → logprob: -9.95676040649414
    10. '(in' → logprob: -10.20676040649414

Token 29: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002450446132570505
    2. 'int' → logprob: -6.252450466156006
    3. '(' → logprob: -7.752450466156006
    4. '(lambda' → logprob: -10.127449989318848
    5. ',int' → logprob: -10.627449989318848
    6. ' int' → logprob: -11.752449989318848
    7. '<int' → logprob: -12.252449989318848
    8. ' (' → logprob: -13.002449989318848
    9. '[int' → logprob: -13.127449989318848
    10. 'lambda' → logprob: -13.127449989318848

Token 30: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2800666391849518
    2. ',input' → logprob: -1.5300666093826294
    3. ',' → logprob: -3.655066728591919
    4. '(' → logprob: -6.53006649017334
    5. 'input' → logprob: -8.03006649017334
    6. '(),' → logprob: -10.15506649017334
    7. ' ,' → logprob: -10.90506649017334
    8. ' input' → logprob: -11.03006649017334
    9. ' (' → logprob: -11.28006649017334
    10. '```' → logprob: -12.65506649017334

Token 31: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.14272341132164001
    2. ' input' → logprob: -2.017723321914673
    3. ' ' → logprob: -11.767723083496094
    4. '	input' → logprob: -11.767723083496094
    5. '(input' → logprob: -11.767723083496094
    6. ')' → logprob: -12.142723083496094
    7. ',input' → logprob: -12.392723083496094
    8. '   ' → logprob: -12.892723083496094
    9. '[input' → logprob: -12.892723083496094
    10. 'list' → logprob: -13.142723083496094

Token 32: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003347506280988455
    2. '()' → logprob: -8.125334739685059
    3. '()))' → logprob: -10.500334739685059
    4. '())))' → logprob: -12.500334739685059
    5. '())' → logprob: -13.375334739685059
    6. ' ().' → logprob: -13.875334739685059
    7. '(' → logprob: -14.000334739685059
    8. ' ' → logprob: -14.125334739685059
    9. '()));' → logprob: -14.250334739685059
    10. '   ' → logprob: -14.500334739685059

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0564331205387134e-05
    2. 'strip' → logprob: -11.87501049041748
    3. 'rstrip' → logprob: -12.75001049041748
    4. ' split' → logprob: -14.50001049041748
    5. '(split' → logprob: -15.50001049041748
    6. 'spl' → logprob: -17.500011444091797
    7. 's' → logprob: -17.625011444091797
    8. '.split' → logprob: -18.250011444091797
    9. 'startswith' → logprob: -18.625011444091797
    10. '```' → logprob: -19.250011444091797

Token 34: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07013871520757675
    2. '())' → logprob: -3.195138692855835
    3. '()' → logprob: -3.695138692855835
    4. '))' → logprob: -6.945138931274414
    5. '(' → logprob: -7.820138931274414
    6. '()))
' → logprob: -8.320138931274414
    7. '())))' → logprob: -8.695138931274414
    8. ')' → logprob: -9.695138931274414
    9. '()))

' → logprob: -10.695138931274414
    10. '()));' → logprob: -11.320138931274414

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025126133114099503
    2. '
' → logprob: -4.400125980377197
    3. '    
' → logprob: -5.525125980377197
    4. '```' → logprob: -5.775125980377197
    5. ' if' → logprob: -5.900125980377197
    6. 'if' → logprob: -7.400125980377197
    7. '``' → logprob: -7.900125980377197
    8. ' 
' → logprob: -7.900125980377197
    9. '\n' → logprob: -8.650126457214355
    10. '`' → logprob: -8.775126457214355

Token 36: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6744351983070374
    2. '   ' → logprob: -1.4244351387023926
    3. ' if' → logprob: -1.9244351387023926
    4. '
' → logprob: -2.4244351387023926
    5. 'max' → logprob: -5.049435138702393
    6. '```' → logprob: -6.049435138702393
    7. '    
' → logprob: -6.174435138702393
    8. '' → logprob: -6.799435138702393
    9. '
' → logprob: -7.299435138702393
    10. ' ' → logprob: -7.674435138702393

Token 37: ' solved' (ID: 47244)
  Prédit: ' solved'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solved' → logprob: -9.372294698550832e-06
    2. 'sol' → logprob: -12.625009536743164
    3. 'Solved' → logprob: -13.125009536743164
    4. ' sol' → logprob: -13.625009536743164
    5. ' s' → logprob: -14.250009536743164
    6. ' solv' → logprob: -14.375009536743164
    7. ' solve' → logprob: -14.875009536743164
    8. ' ' → logprob: -14.875009536743164
    9. ' resolved' → logprob: -15.375009536743164
    10. ' ' → logprob: -15.625009536743164

Token 38: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0205528661608696
    2. '>' → logprob: -3.89555287361145
    3. ' ' → logprob: -11.645552635192871
    4. ' ' → logprob: -14.770552635192871
    5. '">' → logprob: -14.895552635192871
    6. ' >=' → logprob: -15.145552635192871
    7. ')' → logprob: -15.520552635192871
    8. '_' → logprob: -15.895552635192871
    9. '   ' → logprob: -16.270553588867188
    10. ' >

' → logprob: -16.270553588867188

Token 39: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3868710398674011
    2. ' max' → logprob: -1.136871099472046
    3. '_max' → logprob: -17.886871337890625
    4. ' ' → logprob: -18.011871337890625
    5. '	max' → logprob: -18.761871337890625
    6. '(max' → logprob: -18.761871337890625
    7. '=max' → logprob: -19.261871337890625
    8. 'm' → logprob: -20.761871337890625
    9. '[max' → logprob: -20.886871337890625
    10. ',max' → logprob: -21.136871337890625

Token 40: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -6.988221684878226e-06
    2. '_' → logprob: -11.875006675720215
    3. '_sol' → logprob: -17.50000762939453
    4. ' _' → logprob: -17.75000762939453
    5. '_max' → logprob: -18.00000762939453
    6. '_completed' → logprob: -18.12500762939453
    7. 'Solved' → logprob: -18.12500762939453
    8. '_solution' → logprob: -18.25000762939453
    9. '_answer' → logprob: -19.12500762939453
    10. '_so' → logprob: -19.37500762939453

Token 41: 'olved' (ID: 30145)
  Prédit: 'olved'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olved' → logprob: -0.00044068231363780797
    2. 'ol' → logprob: -8.37544059753418
    3. 'sol' → logprob: -9.00044059753418
    4. 'olve' → logprob: -10.12544059753418
    5. 'o' → logprob: -10.87544059753418
    6. 'Solved' → logprob: -11.25044059753418
    7. ' solved' → logprob: -11.87544059753418
    8. 'olver' → logprob: -13.37544059753418
    9. 'l' → logprob: -13.37544059753418
    10. 'old' → logprob: -14.00044059753418

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002246357616968453
    2. ':
' → logprob: -9.000225067138672
    3. '=' → logprob: -10.000225067138672
    4. '   ' → logprob: -11.125225067138672
    5. '       ' → logprob: -11.250225067138672
    6. '):' → logprob: -11.875225067138672
    7. ' :' → logprob: -12.375225067138672
    8. ' =' → logprob: -12.500225067138672
    9. ':max' → logprob: -12.500225067138672
    10. '=max' → logprob: -12.750225067138672

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23590326309204102
    2. 'max' → logprob: -2.360903263092041
    3. ' max' → logprob: -2.360903263092041
    4. '(max' → logprob: -4.610903263092041
    5. '_max' → logprob: -6.235903263092041
    6. ':' → logprob: -6.360903263092041
    7. '   ' → logprob: -6.485903263092041
    8. '=max' → logprob: -7.110903263092041
    9. ' 
' → logprob: -7.235903263092041
    10. '        
' → logprob: -7.235903263092041

Token 44: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.11507631093263626
    2. 'max' (adapté à ' max') → logprob: -2.2400763034820557
    3. '       ' → logprob: -6.490076541900635
    4. '        ' → logprob: -8.365076065063477
    5. '_max' → logprob: -9.240076065063477
    6. '_' → logprob: -9.365076065063477
    7. '```' → logprob: -9.490076065063477
    8. '           ' → logprob: -10.115076065063477
    9. '   ' → logprob: -10.240076065063477
    10. '	max' → logprob: -10.490076065063477

Token 45: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -6.704273118884885e-07
    2. 'Solved' → logprob: -14.625000953674316
    3. '```' → logprob: -17.125
    4. '_solution' → logprob: -17.625
    5. '_solver' → logprob: -17.75
    6. ' _' → logprob: -18.125
    7. '_' → logprob: -18.375
    8. '_sol' → logprob: -18.375
    9. '_completed' → logprob: -18.5
    10. '\' → logprob: -18.75

Token 46: 'olved' (ID: 30145)
  Prédit: 'olved'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olved' → logprob: -9.639096970204264e-05
    2. 'ol' → logprob: -9.750096321105957
    3. 'olve' → logprob: -11.625096321105957
    4. 'sol' → logprob: -11.750096321105957
    5. 'Solved' → logprob: -11.875096321105957
    6. ' solved' → logprob: -12.250096321105957
    7. 'o' → logprob: -12.500096321105957
    8. 'olver' → logprob: -13.625096321105957
    9. '_' → logprob: -13.625096321105957
    10. 'oled' → logprob: -14.125096321105957

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300205409526825
    2. '=' → logprob: -3.168002128601074
    3. ' ' → logprob: -13.668002128601074
    4. '=max' → logprob: -14.668002128601074
    5. '_' → logprob: -14.793002128601074
    6. ' =
' → logprob: -14.918002128601074
    7. ' =)' → logprob: -16.543001174926758
    8. '＝' → logprob: -16.793001174926758
    9. ' ' → logprob: -16.918001174926758
    10. ',' → logprob: -17.418001174926758

Token 48: ' solved' (ID: 47244)
  Prédit: ' solved'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solved' → logprob: -0.0789107233285904
    2. 'sol' → logprob: -2.5789108276367188
    3. ' solv' → logprob: -12.453910827636719
    4. 'solve' → logprob: -12.578910827636719
    5. 'Solved' → logprob: -12.578910827636719
    6. ' ' → logprob: -12.828910827636719
    7. 's' → logprob: -13.703910827636719
    8. ' resolved' → logprob: -13.828910827636719
    9. 'sold' → logprob: -13.953910827636719
    10. 'resolved' → logprob: -14.203910827636719

Token 49: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0023668475914746523
    2. '
' → logprob: -6.37736701965332
    3. '```' → logprob: -8.12736701965332
    4. 'max' → logprob: -9.00236701965332
    5. ' print' → logprob: -9.25236701965332
    6. ' 
' → logprob: -10.12736701965332
    7. '<|end|>' → logprob: -10.37736701965332
    8. '    
' → logprob: -10.87736701965332
    9. '#' → logprob: -11.25236701965332
    10. ')' → logprob: -11.50236701965332

Token 50: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003065030323341489
    2. '
' → logprob: -9.000306129455566
    3. ' print' → logprob: -9.500306129455566
    4. '```' → logprob: -9.875306129455566
    5. 'max' → logprob: -11.125306129455566
    6. ' 
' → logprob: -11.500306129455566
    7. ')' → logprob: -11.500306129455566
    8. '<|end|>' → logprob: -11.750306129455566
    9. '#' → logprob: -12.250306129455566
    10. '\n' → logprob: -13.625306129455566

Token 51: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011060908436775208
    2. '(max' → logprob: -4.63606071472168
    3. '('' → logprob: -7.13606071472168
    4. '("("' → logprob: -7.76106071472168
    5. '(f' → logprob: -9.63606071472168
    6. '()' → logprob: -11.76106071472168
    7. '(`' → logprob: -13.38606071472168
    8. '('(' → logprob: -13.51106071472168
    9. '("(' → logprob: -13.63606071472168
    10. '((' → logprob: -14.26106071472168

Token 52: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.676292231422849e-05
    2. '_' → logprob: -11.250017166137695
    3. ')_' → logprob: -13.500017166137695
    4. ' _' → logprob: -14.250017166137695
    5. '_)' → logprob: -14.375017166137695
    6. ')' → logprob: -14.375017166137695
    7. '_max' → logprob: -15.625017166137695
    8. '_sol' → logprob: -16.375017166137695
    9. 'Solved' → logprob: -16.750017166137695
    10. ''_' → logprob: -17.500017166137695

Token 53: 'olved' (ID: 30145)
  Prédit: 'olved'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olved' → logprob: -5.3954463510308415e-05
    2. 'ol' → logprob: -10.000054359436035
    3. 'olve' → logprob: -12.250054359436035
    4. 'o' → logprob: -13.625054359436035
    5. 'Solved' → logprob: -14.500054359436035
    6. '_' → logprob: -14.625054359436035
    7. 'sol' → logprob: -14.750054359436035
    8. 'oled' → logprob: -14.750054359436035
    9. 'oved' → logprob: -15.125054359436035
    10. 'olver' → logprob: -15.250054359436035

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -15.25
    3. ')`' → logprob: -16.75
    4. ' )' → logprob: -16.875
    5. '`)' → logprob: -17.25
    6. ')
' → logprob: -17.5
    7. ')}' → logprob: -18.375
    8. '')' → logprob: -18.75
    9. '#' → logprob: -19.25
    10. ')#' → logprob: -19.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 52
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 25
Tokens correctement prédits (top 10): 47
Précision stricte (1ère position): 46.15%
Précision adaptée (1ère position): 48.08%
Précision (top 10): 90.38%
================================================================================
